    TEST(gbcemu, opcode_51) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 51 0000
        gbc.setState(0x73f4, 0x2c0f, 0x9630, 0x3ba6, 0xd573, 0x3c8c, 0x0, 0x0);
        gbc.writeMem(0x73f4, { 0x51 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x2c0f, gbc.sp());
        EXPECT(0x73f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0001
        gbc.setState(0xe11d, 0x212b, 0x2c80, 0xe23b, 0xd630, 0xc187, 0x1, 0x1);
        gbc.writeMem(0xe11d, { 0x51 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x212b, gbc.sp());
        EXPECT(0xe11e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xe11d));
        // 51 0002
        gbc.setState(0xbbe0, 0x4d67, 0x62e0, 0xe8eb, 0xe756, 0xb863, 0x0, 0x1);
        gbc.writeMem(0xbbe0, { 0x51 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x4d67, gbc.sp());
        EXPECT(0xbbe1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xbbe0));
        // 51 0003
        gbc.setState(0x5d2, 0x9b16, 0x9e10, 0x3108, 0xe8df, 0x89aa, 0x0, 0x0);
        gbc.writeMem(0x5d2, { 0x51 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x9b16, gbc.sp());
        EXPECT(0x5d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0004
        gbc.setState(0x63a8, 0x3dc7, 0xc8e0, 0x64f0, 0x7180, 0x15ea, 0x1, 0x1);
        gbc.writeMem(0x63a8, { 0x51 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x3dc7, gbc.sp());
        EXPECT(0x63a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0005
        gbc.setState(0xafe1, 0x5e24, 0x94a0, 0xcdf5, 0x5192, 0xf416, 0x0, 0x0);
        gbc.writeMem(0xafe1, { 0x51 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x5e24, gbc.sp());
        EXPECT(0xafe2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xafe1));
        // 51 0006
        gbc.setState(0xe90a, 0x911b, 0x2a20, 0xcf17, 0xf5fe, 0x6362, 0x0, 0x1);
        gbc.writeMem(0xe90a, { 0x51 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x911b, gbc.sp());
        EXPECT(0xe90b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xe90a));
        // 51 0007
        gbc.setState(0x4273, 0x4635, 0x9720, 0xdcf9, 0x25a, 0xb782, 0x1, 0x1);
        gbc.writeMem(0x4273, { 0x51 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x4635, gbc.sp());
        EXPECT(0x4274, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0008
        gbc.setState(0x2390, 0x1d0c, 0xcea0, 0x3b6d, 0x84b, 0x1bf1, 0x1, 0x1);
        gbc.writeMem(0x2390, { 0x51 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x1d0c, gbc.sp());
        EXPECT(0x2391, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0009
        gbc.setState(0x6e1f, 0x1d53, 0x48a0, 0x61ae, 0x9feb, 0x9976, 0x1, 0x1);
        gbc.writeMem(0x6e1f, { 0x51 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x1d53, gbc.sp());
        EXPECT(0x6e20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 000A
        gbc.setState(0xdb47, 0x28d6, 0x6ba0, 0xbc5c, 0x3ae3, 0xa1c4, 0x1, 0x0);
        gbc.writeMem(0xdb47, { 0x51 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x28d6, gbc.sp());
        EXPECT(0xdb48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xdb47));
        // 51 000B
        gbc.setState(0x9866, 0x8354, 0x36d0, 0xc4dd, 0xc734, 0x8063, 0x0, 0x1);
        gbc.writeMem(0x9866, { 0x51 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x8354, gbc.sp());
        EXPECT(0x9867, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x9866));
        // 51 000C
        gbc.setState(0xa56e, 0x910f, 0x130, 0x7744, 0x5fd4, 0x2f46, 0x0, 0x1);
        gbc.writeMem(0xa56e, { 0x51 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x910f, gbc.sp());
        EXPECT(0xa56f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xa56e));
        // 51 000D
        gbc.setState(0xcedc, 0x16f0, 0xecc0, 0xc61, 0xaa77, 0xfdda, 0x0, 0x1);
        gbc.writeMem(0xcedc, { 0x51 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x16f0, gbc.sp());
        EXPECT(0xcedd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xcedc));
        // 51 000E
        gbc.setState(0xe3fb, 0x9850, 0x4e80, 0x35e1, 0x8787, 0x2c8d, 0x0, 0x0);
        gbc.writeMem(0xe3fb, { 0x51 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x9850, gbc.sp());
        EXPECT(0xe3fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xe3fb));
        // 51 000F
        gbc.setState(0xa4bf, 0xf240, 0xd2d0, 0x5382, 0xa157, 0x3a08, 0x0, 0x0);
        gbc.writeMem(0xa4bf, { 0x51 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xf240, gbc.sp());
        EXPECT(0xa4c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xa4bf));
        // 51 0010
        gbc.setState(0xcf23, 0xab40, 0x50d0, 0xb084, 0x3984, 0x4556, 0x0, 0x0);
        gbc.writeMem(0xcf23, { 0x51 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xab40, gbc.sp());
        EXPECT(0xcf24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xcf23));
        // 51 0011
        gbc.setState(0xbdf, 0x585d, 0xb6f0, 0x12a1, 0xe32b, 0xfe7c, 0x1, 0x1);
        gbc.writeMem(0xbdf, { 0x51 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x585d, gbc.sp());
        EXPECT(0xbe0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0012
        gbc.setState(0x3f9, 0x812e, 0xab0, 0xc6aa, 0xfbc6, 0xf891, 0x1, 0x0);
        gbc.writeMem(0x3f9, { 0x51 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x812e, gbc.sp());
        EXPECT(0x3fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0013
        gbc.setState(0xbdb2, 0xa30a, 0x8940, 0x7c4a, 0x8801, 0x893e, 0x1, 0x1);
        gbc.writeMem(0xbdb2, { 0x51 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xa30a, gbc.sp());
        EXPECT(0xbdb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xbdb2));
        // 51 0014
        gbc.setState(0xafc1, 0xba4c, 0xd840, 0xf4d7, 0x9b3b, 0x8ce5, 0x0, 0x0);
        gbc.writeMem(0xafc1, { 0x51 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xba4c, gbc.sp());
        EXPECT(0xafc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xafc1));
        // 51 0015
        gbc.setState(0x96cb, 0x84a7, 0xad90, 0xa47d, 0x4351, 0xf427, 0x1, 0x0);
        gbc.writeMem(0x96cb, { 0x51 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x84a7, gbc.sp());
        EXPECT(0x96cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x96cb));
        // 51 0016
        gbc.setState(0x62da, 0xf9ec, 0x8b0, 0xa56b, 0xb1c7, 0xe7f0, 0x0, 0x1);
        gbc.writeMem(0x62da, { 0x51 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xf9ec, gbc.sp());
        EXPECT(0x62db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0017
        gbc.setState(0xaf0e, 0xa009, 0x3a70, 0x1d09, 0x9b85, 0x5071, 0x1, 0x0);
        gbc.writeMem(0xaf0e, { 0x51 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xa009, gbc.sp());
        EXPECT(0xaf0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xaf0e));
        // 51 0018
        gbc.setState(0xbb95, 0x5c2a, 0xa40, 0xb2f7, 0x234, 0x8ddf, 0x1, 0x1);
        gbc.writeMem(0xbb95, { 0x51 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x5c2a, gbc.sp());
        EXPECT(0xbb96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xbb95));
        // 51 0019
        gbc.setState(0x470b, 0x410b, 0xd7a0, 0x4124, 0xd4d1, 0xf37f, 0x1, 0x1);
        gbc.writeMem(0x470b, { 0x51 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x410b, gbc.sp());
        EXPECT(0x470c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 001A
        gbc.setState(0x3bbc, 0x666d, 0x93d0, 0xa396, 0xb422, 0xac4, 0x1, 0x1);
        gbc.writeMem(0x3bbc, { 0x51 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x666d, gbc.sp());
        EXPECT(0x3bbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 001B
        gbc.setState(0x15c1, 0x8021, 0xa370, 0x8f14, 0xaa03, 0xed19, 0x1, 0x1);
        gbc.writeMem(0x15c1, { 0x51 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x8021, gbc.sp());
        EXPECT(0x15c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 001C
        gbc.setState(0x3cfb, 0x3f35, 0x5790, 0x1e5c, 0xa696, 0xfc, 0x0, 0x1);
        gbc.writeMem(0x3cfb, { 0x51 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x3f35, gbc.sp());
        EXPECT(0x3cfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 001D
        gbc.setState(0xbdc7, 0xd9ac, 0x53b0, 0xb02d, 0x4643, 0xefec, 0x0, 0x0);
        gbc.writeMem(0xbdc7, { 0x51 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xd9ac, gbc.sp());
        EXPECT(0xbdc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xbdc7));
        // 51 001E
        gbc.setState(0x1304, 0xad59, 0x8ee0, 0xe423, 0x4788, 0x71d4, 0x1, 0x0);
        gbc.writeMem(0x1304, { 0x51 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xad59, gbc.sp());
        EXPECT(0x1305, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 001F
        gbc.setState(0x59ff, 0xfbb9, 0xd120, 0xee7e, 0x337f, 0x24ff, 0x0, 0x0);
        gbc.writeMem(0x59ff, { 0x51 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xfbb9, gbc.sp());
        EXPECT(0x5a00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0020
        gbc.setState(0xb5cb, 0x8a50, 0x9db0, 0x40c2, 0x2a95, 0x13f, 0x0, 0x1);
        gbc.writeMem(0xb5cb, { 0x51 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x8a50, gbc.sp());
        EXPECT(0xb5cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xb5cb));
        // 51 0021
        gbc.setState(0xa800, 0x2f88, 0x3d0, 0x4cf9, 0xbbeb, 0x5a5c, 0x1, 0x0);
        gbc.writeMem(0xa800, { 0x51 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x2f88, gbc.sp());
        EXPECT(0xa801, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xa800));
        // 51 0022
        gbc.setState(0x707d, 0x977f, 0x87c0, 0x9ff0, 0xb482, 0x3316, 0x1, 0x1);
        gbc.writeMem(0x707d, { 0x51 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x977f, gbc.sp());
        EXPECT(0x707e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0023
        gbc.setState(0x9812, 0xcb45, 0x7f80, 0x841c, 0x56e5, 0xda4c, 0x0, 0x1);
        gbc.writeMem(0x9812, { 0x51 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xcb45, gbc.sp());
        EXPECT(0x9813, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x9812));
        // 51 0024
        gbc.setState(0xb37d, 0x85b8, 0x2e70, 0x6b86, 0xd691, 0xe87d, 0x0, 0x1);
        gbc.writeMem(0xb37d, { 0x51 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x85b8, gbc.sp());
        EXPECT(0xb37e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xb37d));
        // 51 0025
        gbc.setState(0xaf0c, 0xf144, 0xd0c0, 0x7ba0, 0x9e19, 0x43bd, 0x1, 0x0);
        gbc.writeMem(0xaf0c, { 0x51 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xf144, gbc.sp());
        EXPECT(0xaf0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xaf0c));
        // 51 0026
        gbc.setState(0x9fe9, 0xff8, 0x8cc0, 0x657a, 0x98f, 0xa2f, 0x1, 0x1);
        gbc.writeMem(0x9fe9, { 0x51 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xff8, gbc.sp());
        EXPECT(0x9fea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x9fe9));
        // 51 0027
        gbc.setState(0xa03, 0x9a29, 0x2e00, 0xb8c1, 0xa15e, 0x6778, 0x0, 0x0);
        gbc.writeMem(0xa03, { 0x51 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x9a29, gbc.sp());
        EXPECT(0xa04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0028
        gbc.setState(0x8d88, 0xd1ec, 0x2eb0, 0x97cc, 0x9a9, 0xd264, 0x1, 0x0);
        gbc.writeMem(0x8d88, { 0x51 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xd1ec, gbc.sp());
        EXPECT(0x8d89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x8d88));
        // 51 0029
        gbc.setState(0x94e8, 0x736, 0xc5a0, 0xf148, 0xdd48, 0x53cf, 0x1, 0x1);
        gbc.writeMem(0x94e8, { 0x51 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x736, gbc.sp());
        EXPECT(0x94e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x94e8));
        // 51 002A
        gbc.setState(0xa1e9, 0x280, 0xfcb0, 0x4be9, 0x61a1, 0x2a8f, 0x1, 0x1);
        gbc.writeMem(0xa1e9, { 0x51 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x280, gbc.sp());
        EXPECT(0xa1ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xa1e9));
        // 51 002B
        gbc.setState(0xc071, 0x47ad, 0x6f0, 0xd45a, 0xe59f, 0xdd2c, 0x1, 0x0);
        gbc.writeMem(0xc071, { 0x51 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x47ad, gbc.sp());
        EXPECT(0xc072, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xc071));
        // 51 002C
        gbc.setState(0x1e8e, 0xa19a, 0x6440, 0xc8a4, 0xdfe4, 0xb342, 0x0, 0x0);
        gbc.writeMem(0x1e8e, { 0x51 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xa19a, gbc.sp());
        EXPECT(0x1e8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 002D
        gbc.setState(0xe406, 0xcaf4, 0xb440, 0xe8f4, 0xc32c, 0x77b6, 0x0, 0x1);
        gbc.writeMem(0xe406, { 0x51 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xcaf4, gbc.sp());
        EXPECT(0xe407, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xe406));
        // 51 002E
        gbc.setState(0xe2e5, 0x67d9, 0x4cf0, 0x49b7, 0x7a1b, 0x7fd0, 0x1, 0x1);
        gbc.writeMem(0xe2e5, { 0x51 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x67d9, gbc.sp());
        EXPECT(0xe2e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xe2e5));
        // 51 002F
        gbc.setState(0x320e, 0x9141, 0xf8d0, 0x1c40, 0xf4b, 0x6b27, 0x0, 0x0);
        gbc.writeMem(0x320e, { 0x51 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x9141, gbc.sp());
        EXPECT(0x320f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0030
        gbc.setState(0xa639, 0xa4ab, 0x2710, 0x6624, 0xd86d, 0xe9c6, 0x0, 0x1);
        gbc.writeMem(0xa639, { 0x51 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xa4ab, gbc.sp());
        EXPECT(0xa63a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xa639));
        // 51 0031
        gbc.setState(0xbdb9, 0x1d5b, 0xdc40, 0xae95, 0xcb62, 0xe708, 0x1, 0x1);
        gbc.writeMem(0xbdb9, { 0x51 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x1d5b, gbc.sp());
        EXPECT(0xbdba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xbdb9));
        // 51 0032
        gbc.setState(0x77c0, 0xc936, 0xda10, 0x548b, 0x82, 0xc51, 0x0, 0x0);
        gbc.writeMem(0x77c0, { 0x51 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xc936, gbc.sp());
        EXPECT(0x77c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0033
        gbc.setState(0x2d8a, 0xdf1a, 0x4a0, 0xde9d, 0xad83, 0x723, 0x1, 0x1);
        gbc.writeMem(0x2d8a, { 0x51 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xdf1a, gbc.sp());
        EXPECT(0x2d8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0034
        gbc.setState(0xa27f, 0x5db1, 0x7a40, 0x3195, 0x18e7, 0x405a, 0x1, 0x1);
        gbc.writeMem(0xa27f, { 0x51 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x5db1, gbc.sp());
        EXPECT(0xa280, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xa27f));
        // 51 0035
        gbc.setState(0xe5fa, 0x3d7c, 0x3d20, 0xca21, 0x36b6, 0x81a5, 0x0, 0x1);
        gbc.writeMem(0xe5fa, { 0x51 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x3d7c, gbc.sp());
        EXPECT(0xe5fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xe5fa));
        // 51 0036
        gbc.setState(0x1d49, 0x93ed, 0x7150, 0x5b8b, 0x5575, 0xcaca, 0x1, 0x1);
        gbc.writeMem(0x1d49, { 0x51 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x93ed, gbc.sp());
        EXPECT(0x1d4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0037
        gbc.setState(0x27d6, 0xb31b, 0x2a00, 0x30e4, 0xb6e9, 0x32c4, 0x1, 0x1);
        gbc.writeMem(0x27d6, { 0x51 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xb31b, gbc.sp());
        EXPECT(0x27d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0038
        gbc.setState(0x8ac7, 0x61f5, 0x3e80, 0x2ef9, 0x4d9a, 0x89d9, 0x1, 0x1);
        gbc.writeMem(0x8ac7, { 0x51 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x61f5, gbc.sp());
        EXPECT(0x8ac8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x8ac7));
        // 51 0039
        gbc.setState(0xd508, 0xf52d, 0x27a0, 0xc778, 0xfc9b, 0xf6cf, 0x0, 0x1);
        gbc.writeMem(0xd508, { 0x51 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xf52d, gbc.sp());
        EXPECT(0xd509, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xd508));
        // 51 003A
        gbc.setState(0xa7e0, 0xdc99, 0xe650, 0x3f0, 0xc7a7, 0x372d, 0x0, 0x1);
        gbc.writeMem(0xa7e0, { 0x51 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xdc99, gbc.sp());
        EXPECT(0xa7e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xa7e0));
        // 51 003B
        gbc.setState(0xd333, 0x86d2, 0xbdb0, 0x46b9, 0xb026, 0x3eda, 0x1, 0x1);
        gbc.writeMem(0xd333, { 0x51 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x86d2, gbc.sp());
        EXPECT(0xd334, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xd333));
        // 51 003C
        gbc.setState(0xe88d, 0x1dee, 0x7d70, 0xa67a, 0x8278, 0x4b43, 0x0, 0x0);
        gbc.writeMem(0xe88d, { 0x51 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x1dee, gbc.sp());
        EXPECT(0xe88e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xe88d));
        // 51 003D
        gbc.setState(0x9b13, 0xc35f, 0xede0, 0x8724, 0x3fec, 0xf8fe, 0x1, 0x1);
        gbc.writeMem(0x9b13, { 0x51 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xc35f, gbc.sp());
        EXPECT(0x9b14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x9b13));
        // 51 003E
        gbc.setState(0xc0df, 0x2e8c, 0x6220, 0xde61, 0x32cf, 0x600e, 0x0, 0x0);
        gbc.writeMem(0xc0df, { 0x51 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x2e8c, gbc.sp());
        EXPECT(0xc0e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xc0df));
        // 51 003F
        gbc.setState(0x60ef, 0xa24b, 0x3280, 0xe397, 0x8a8c, 0x144d, 0x0, 0x0);
        gbc.writeMem(0x60ef, { 0x51 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xa24b, gbc.sp());
        EXPECT(0x60f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0040
        gbc.setState(0x1200, 0xd5dd, 0x5070, 0xa601, 0x8b92, 0x2f4a, 0x0, 0x1);
        gbc.writeMem(0x1200, { 0x51 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xd5dd, gbc.sp());
        EXPECT(0x1201, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0041
        gbc.setState(0x19db, 0x5c09, 0x2280, 0x98a8, 0xb204, 0x82f1, 0x1, 0x0);
        gbc.writeMem(0x19db, { 0x51 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x5c09, gbc.sp());
        EXPECT(0x19dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0042
        gbc.setState(0x5e98, 0xb79c, 0xc220, 0xa755, 0x3afc, 0x94b8, 0x0, 0x0);
        gbc.writeMem(0x5e98, { 0x51 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xb79c, gbc.sp());
        EXPECT(0x5e99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0043
        gbc.setState(0x40f6, 0x2f7a, 0xe600, 0x8543, 0xc1c9, 0x58fc, 0x1, 0x1);
        gbc.writeMem(0x40f6, { 0x51 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x2f7a, gbc.sp());
        EXPECT(0x40f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0044
        gbc.setState(0x3ad1, 0x28d0, 0x6880, 0x334, 0x826c, 0xbb78, 0x0, 0x1);
        gbc.writeMem(0x3ad1, { 0x51 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x28d0, gbc.sp());
        EXPECT(0x3ad2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0045
        gbc.setState(0x234f, 0xeeae, 0xbd10, 0x31c7, 0x399, 0xd6ed, 0x0, 0x0);
        gbc.writeMem(0x234f, { 0x51 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xeeae, gbc.sp());
        EXPECT(0x2350, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0046
        gbc.setState(0x799, 0xf84a, 0x7cc0, 0x21c5, 0xca7b, 0x2fef, 0x0, 0x1);
        gbc.writeMem(0x799, { 0x51 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xf84a, gbc.sp());
        EXPECT(0x79a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0047
        gbc.setState(0xd0d6, 0xac4f, 0xa770, 0x6e0c, 0xa371, 0x4615, 0x0, 0x1);
        gbc.writeMem(0xd0d6, { 0x51 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xac4f, gbc.sp());
        EXPECT(0xd0d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xd0d6));
        // 51 0048
        gbc.setState(0x9ace, 0x1ead, 0xed0, 0x854a, 0xd05d, 0x55a1, 0x0, 0x1);
        gbc.writeMem(0x9ace, { 0x51 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x1ead, gbc.sp());
        EXPECT(0x9acf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x9ace));
        // 51 0049
        gbc.setState(0xc132, 0xc6c2, 0x6db0, 0x7ba6, 0x4981, 0x3722, 0x1, 0x1);
        gbc.writeMem(0xc132, { 0x51 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xc6c2, gbc.sp());
        EXPECT(0xc133, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xc132));
        // 51 004A
        gbc.setState(0x26a2, 0x59f2, 0x6f10, 0x747, 0x4525, 0xa0bb, 0x0, 0x0);
        gbc.writeMem(0x26a2, { 0x51 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x59f2, gbc.sp());
        EXPECT(0x26a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 004B
        gbc.setState(0xeea7, 0x9e83, 0xb060, 0x3e2c, 0x60cc, 0xb825, 0x1, 0x1);
        gbc.writeMem(0xeea7, { 0x51 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x9e83, gbc.sp());
        EXPECT(0xeea8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xeea7));
        // 51 004C
        gbc.setState(0xd6e7, 0x3eef, 0xa4a0, 0x97fb, 0x689f, 0x5d9a, 0x0, 0x1);
        gbc.writeMem(0xd6e7, { 0x51 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x3eef, gbc.sp());
        EXPECT(0xd6e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xd6e7));
        // 51 004D
        gbc.setState(0x7913, 0xa609, 0x5180, 0xa4a0, 0x34ab, 0x231b, 0x0, 0x1);
        gbc.writeMem(0x7913, { 0x51 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xa609, gbc.sp());
        EXPECT(0x7914, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 004E
        gbc.setState(0xab17, 0x8f00, 0x3a0, 0x4e2d, 0x48b7, 0x3766, 0x0, 0x1);
        gbc.writeMem(0xab17, { 0x51 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x8f00, gbc.sp());
        EXPECT(0xab18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xab17));
        // 51 004F
        gbc.setState(0x6be, 0x6921, 0xf610, 0x7049, 0x2413, 0xa6cc, 0x0, 0x0);
        gbc.writeMem(0x6be, { 0x51 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x6921, gbc.sp());
        EXPECT(0x6bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0050
        gbc.setState(0xd7e6, 0xe551, 0xdf30, 0x72f2, 0xa5ef, 0xf072, 0x0, 0x1);
        gbc.writeMem(0xd7e6, { 0x51 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xe551, gbc.sp());
        EXPECT(0xd7e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xd7e6));
        // 51 0051
        gbc.setState(0xd5df, 0x9f3a, 0x990, 0x58b9, 0x884c, 0xf9a7, 0x0, 0x0);
        gbc.writeMem(0xd5df, { 0x51 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x9f3a, gbc.sp());
        EXPECT(0xd5e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xd5df));
        // 51 0052
        gbc.setState(0x3451, 0xfbe2, 0x5480, 0x87a2, 0x7d03, 0x880e, 0x1, 0x1);
        gbc.writeMem(0x3451, { 0x51 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xfbe2, gbc.sp());
        EXPECT(0x3452, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0053
        gbc.setState(0x82cf, 0x2d7b, 0x2d60, 0x526a, 0x4f84, 0xbad0, 0x0, 0x1);
        gbc.writeMem(0x82cf, { 0x51 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x2d7b, gbc.sp());
        EXPECT(0x82d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x82cf));
        // 51 0054
        gbc.setState(0x42f6, 0x5d13, 0x8d40, 0xcc6b, 0x8c8a, 0x5bdc, 0x1, 0x1);
        gbc.writeMem(0x42f6, { 0x51 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x5d13, gbc.sp());
        EXPECT(0x42f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0055
        gbc.setState(0xef86, 0x11ac, 0x2540, 0xfa28, 0xa73f, 0xd1b8, 0x1, 0x1);
        gbc.writeMem(0xef86, { 0x51 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x11ac, gbc.sp());
        EXPECT(0xef87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xef86));
        // 51 0056
        gbc.setState(0xe36f, 0x4d9b, 0xcc10, 0x4c32, 0xd42d, 0x556d, 0x0, 0x1);
        gbc.writeMem(0xe36f, { 0x51 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x4d9b, gbc.sp());
        EXPECT(0xe370, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xe36f));
        // 51 0057
        gbc.setState(0x95b4, 0xbc9a, 0x1800, 0x67c, 0xab29, 0x4a76, 0x0, 0x0);
        gbc.writeMem(0x95b4, { 0x51 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xbc9a, gbc.sp());
        EXPECT(0x95b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x95b4));
        // 51 0058
        gbc.setState(0x6c50, 0xea05, 0x6420, 0xd96a, 0x40c2, 0xd8e6, 0x0, 0x1);
        gbc.writeMem(0x6c50, { 0x51 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xea05, gbc.sp());
        EXPECT(0x6c51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0059
        gbc.setState(0xac50, 0x259f, 0x2e10, 0xe22e, 0xf5d9, 0x6418, 0x1, 0x0);
        gbc.writeMem(0xac50, { 0x51 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x259f, gbc.sp());
        EXPECT(0xac51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xac50));
        // 51 005A
        gbc.setState(0xa19a, 0xcf3b, 0x6c60, 0x43a1, 0xf6a7, 0xe230, 0x0, 0x0);
        gbc.writeMem(0xa19a, { 0x51 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xcf3b, gbc.sp());
        EXPECT(0xa19b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xa19a));
        // 51 005B
        gbc.setState(0xbc99, 0x7179, 0xc080, 0xc2b0, 0x829d, 0x1e4b, 0x0, 0x1);
        gbc.writeMem(0xbc99, { 0x51 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x7179, gbc.sp());
        EXPECT(0xbc9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xbc99));
        // 51 005C
        gbc.setState(0xb, 0x12d0, 0x4c90, 0xa6c1, 0xd8b7, 0x1b47, 0x1, 0x1);
        gbc.writeMem(0xb, { 0x51 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x12d0, gbc.sp());
        EXPECT(0xc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 005D
        gbc.setState(0xcf04, 0xaedd, 0x43f0, 0xd638, 0xc49, 0xa3e6, 0x0, 0x1);
        gbc.writeMem(0xcf04, { 0x51 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xaedd, gbc.sp());
        EXPECT(0xcf05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xcf04));
        // 51 005E
        gbc.setState(0x24a9, 0x5de4, 0xfc10, 0x5ca8, 0x7630, 0xe311, 0x0, 0x0);
        gbc.writeMem(0x24a9, { 0x51 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x5de4, gbc.sp());
        EXPECT(0x24aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 005F
        gbc.setState(0x742d, 0xb05c, 0x8c10, 0xa2cd, 0x449, 0x1fe8, 0x0, 0x1);
        gbc.writeMem(0x742d, { 0x51 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xb05c, gbc.sp());
        EXPECT(0x742e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0060
        gbc.setState(0xaa78, 0xa584, 0x2470, 0x83e5, 0xa409, 0xbe68, 0x0, 0x1);
        gbc.writeMem(0xaa78, { 0x51 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xa584, gbc.sp());
        EXPECT(0xaa79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xaa78));
        // 51 0061
        gbc.setState(0x9bb9, 0x616, 0x2ca0, 0xba49, 0x6095, 0x641b, 0x1, 0x0);
        gbc.writeMem(0x9bb9, { 0x51 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x616, gbc.sp());
        EXPECT(0x9bba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x9bb9));
        // 51 0062
        gbc.setState(0x9852, 0x9556, 0xa290, 0x1f8f, 0x19e2, 0xc089, 0x1, 0x1);
        gbc.writeMem(0x9852, { 0x51 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x9556, gbc.sp());
        EXPECT(0x9853, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x9852));
        // 51 0063
        gbc.setState(0xcf71, 0x1392, 0xa600, 0x1bbe, 0x5a74, 0xd3ce, 0x0, 0x1);
        gbc.writeMem(0xcf71, { 0x51 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x1392, gbc.sp());
        EXPECT(0xcf72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xcf71));
        // 51 0064
        gbc.setState(0xb05, 0x27d2, 0x6430, 0xf7e9, 0xf671, 0x4aae, 0x0, 0x0);
        gbc.writeMem(0xb05, { 0x51 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x27d2, gbc.sp());
        EXPECT(0xb06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0066
        gbc.setState(0xee01, 0xca86, 0xb650, 0x43b5, 0xb55e, 0xe469, 0x0, 0x1);
        gbc.writeMem(0xee01, { 0x51 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xca86, gbc.sp());
        EXPECT(0xee02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xee01));
        // 51 0067
        gbc.setState(0x7c88, 0x3616, 0x4e40, 0xe794, 0x7247, 0x9fc1, 0x0, 0x1);
        gbc.writeMem(0x7c88, { 0x51 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x3616, gbc.sp());
        EXPECT(0x7c89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0068
        gbc.setState(0x5c7e, 0xd76f, 0xdd80, 0x7efb, 0x6524, 0xc172, 0x1, 0x0);
        gbc.writeMem(0x5c7e, { 0x51 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xd76f, gbc.sp());
        EXPECT(0x5c7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 006A
        gbc.setState(0x50d5, 0xc104, 0x7530, 0xd79e, 0x8a2a, 0xa7fb, 0x0, 0x1);
        gbc.writeMem(0x50d5, { 0x51 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xc104, gbc.sp());
        EXPECT(0x50d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 006B
        gbc.setState(0xe57, 0x4520, 0xb610, 0xb4d0, 0xbee, 0x2a9e, 0x1, 0x1);
        gbc.writeMem(0xe57, { 0x51 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x4520, gbc.sp());
        EXPECT(0xe58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 006C
        gbc.setState(0xc445, 0x9398, 0x7ca0, 0x2424, 0x7dd8, 0x2859, 0x1, 0x0);
        gbc.writeMem(0xc445, { 0x51 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x9398, gbc.sp());
        EXPECT(0xc446, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xc445));
        // 51 006D
        gbc.setState(0xcea2, 0xee7, 0xfd30, 0x5c17, 0x44f3, 0x9c65, 0x1, 0x0);
        gbc.writeMem(0xcea2, { 0x51 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xee7, gbc.sp());
        EXPECT(0xcea3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xcea2));
        // 51 006E
        gbc.setState(0x9030, 0x5666, 0x1fb0, 0x671, 0x2c6b, 0x5e91, 0x0, 0x1);
        gbc.writeMem(0x9030, { 0x51 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x5666, gbc.sp());
        EXPECT(0x9031, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x9030));
        // 51 006F
        gbc.setState(0xd09, 0xb4c, 0x4e00, 0x994e, 0x877d, 0x1e4a, 0x1, 0x0);
        gbc.writeMem(0xd09, { 0x51 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xb4c, gbc.sp());
        EXPECT(0xd0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0070
        gbc.setState(0x8008, 0x2de8, 0x7ba0, 0x74c2, 0x68df, 0x43fe, 0x0, 0x1);
        gbc.writeMem(0x8008, { 0x51 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x2de8, gbc.sp());
        EXPECT(0x8009, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x8008));
        // 51 0071
        gbc.setState(0xbe9, 0xa110, 0xa410, 0xb9a9, 0xc547, 0x5b97, 0x0, 0x0);
        gbc.writeMem(0xbe9, { 0x51 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xa110, gbc.sp());
        EXPECT(0xbea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0072
        gbc.setState(0x1b31, 0xa738, 0x140, 0x403d, 0x63d6, 0xe3d4, 0x1, 0x0);
        gbc.writeMem(0x1b31, { 0x51 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xa738, gbc.sp());
        EXPECT(0x1b32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0073
        gbc.setState(0x34ea, 0x649d, 0x5870, 0x6e46, 0x5d08, 0xc3d3, 0x0, 0x1);
        gbc.writeMem(0x34ea, { 0x51 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x649d, gbc.sp());
        EXPECT(0x34eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0074
        gbc.setState(0x9095, 0xba95, 0xcc80, 0xa44f, 0x3453, 0xbdea, 0x0, 0x1);
        gbc.writeMem(0x9095, { 0x51 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xba95, gbc.sp());
        EXPECT(0x9096, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x9095));
        // 51 0075
        gbc.setState(0x2ce9, 0xd628, 0x9620, 0x309a, 0x4cd8, 0x6606, 0x1, 0x0);
        gbc.writeMem(0x2ce9, { 0x51 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xd628, gbc.sp());
        EXPECT(0x2cea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0076
        gbc.setState(0x28e, 0x721c, 0x6c70, 0x8c04, 0x8aa0, 0xd899, 0x1, 0x1);
        gbc.writeMem(0x28e, { 0x51 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x721c, gbc.sp());
        EXPECT(0x28f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0077
        gbc.setState(0x4cce, 0xc399, 0x7ac0, 0x4b13, 0xe953, 0x9c16, 0x1, 0x0);
        gbc.writeMem(0x4cce, { 0x51 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xc399, gbc.sp());
        EXPECT(0x4ccf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0078
        gbc.setState(0xd4a5, 0x6c4b, 0xdef0, 0xa628, 0x69fa, 0xc557, 0x1, 0x1);
        gbc.writeMem(0xd4a5, { 0x51 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x6c4b, gbc.sp());
        EXPECT(0xd4a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xd4a5));
        // 51 0079
        gbc.setState(0x2152, 0xd678, 0x9300, 0x589c, 0x36ac, 0x985a, 0x0, 0x1);
        gbc.writeMem(0x2152, { 0x51 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xd678, gbc.sp());
        EXPECT(0x2153, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 007A
        gbc.setState(0x27be, 0xed98, 0x1720, 0x57e6, 0xdc88, 0x72e2, 0x0, 0x1);
        gbc.writeMem(0x27be, { 0x51 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xed98, gbc.sp());
        EXPECT(0x27bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 007B
        gbc.setState(0xd88b, 0xcc59, 0x8720, 0xd1c7, 0xb73b, 0x4d0b, 0x1, 0x0);
        gbc.writeMem(0xd88b, { 0x51 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xcc59, gbc.sp());
        EXPECT(0xd88c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xd88b));
        // 51 007C
        gbc.setState(0xd64d, 0xe906, 0xab30, 0xbb60, 0xd7fe, 0xc541, 0x1, 0x0);
        gbc.writeMem(0xd64d, { 0x51 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xe906, gbc.sp());
        EXPECT(0xd64e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xd64d));
        // 51 007D
        gbc.setState(0x4ab8, 0xe577, 0xda60, 0xa6b9, 0xcec0, 0xcc29, 0x0, 0x1);
        gbc.writeMem(0x4ab8, { 0x51 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xe577, gbc.sp());
        EXPECT(0x4ab9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 007E
        gbc.setState(0x3e8d, 0x7e6c, 0x95d0, 0xd24e, 0x59f5, 0xdf69, 0x0, 0x1);
        gbc.writeMem(0x3e8d, { 0x51 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x7e6c, gbc.sp());
        EXPECT(0x3e8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 007F
        gbc.setState(0xb0a, 0x6d46, 0xa8c0, 0xe499, 0x4f52, 0x64f0, 0x1, 0x1);
        gbc.writeMem(0xb0a, { 0x51 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x6d46, gbc.sp());
        EXPECT(0xb0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0080
        gbc.setState(0x8b2c, 0xbd32, 0xfc90, 0xe2f8, 0x5ad0, 0x1e40, 0x1, 0x1);
        gbc.writeMem(0x8b2c, { 0x51 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xbd32, gbc.sp());
        EXPECT(0x8b2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x8b2c));
        // 51 0081
        gbc.setState(0xf33, 0x225e, 0xbe50, 0xdacd, 0x3ba0, 0x4530, 0x0, 0x1);
        gbc.writeMem(0xf33, { 0x51 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x225e, gbc.sp());
        EXPECT(0xf34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0082
        gbc.setState(0xb1f3, 0xac6d, 0xdd10, 0x247f, 0x2ce, 0x8b1d, 0x1, 0x0);
        gbc.writeMem(0xb1f3, { 0x51 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xac6d, gbc.sp());
        EXPECT(0xb1f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xb1f3));
        // 51 0083
        gbc.setState(0x7533, 0xc4d6, 0x94f0, 0x74be, 0x6a8a, 0xc, 0x1, 0x0);
        gbc.writeMem(0x7533, { 0x51 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xc4d6, gbc.sp());
        EXPECT(0x7534, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0084
        gbc.setState(0x44e, 0xdd3a, 0x960, 0x35a, 0x9bf4, 0x7c42, 0x0, 0x0);
        gbc.writeMem(0x44e, { 0x51 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xdd3a, gbc.sp());
        EXPECT(0x44f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0085
        gbc.setState(0x435b, 0x6ee1, 0xe20, 0xf650, 0x7ef3, 0x618f, 0x1, 0x0);
        gbc.writeMem(0x435b, { 0x51 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x6ee1, gbc.sp());
        EXPECT(0x435c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0086
        gbc.setState(0x80f5, 0x489b, 0xdf40, 0x8e6d, 0xdd21, 0x7b29, 0x0, 0x0);
        gbc.writeMem(0x80f5, { 0x51 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x489b, gbc.sp());
        EXPECT(0x80f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x80f5));
        // 51 0087
        gbc.setState(0x59eb, 0x2b5c, 0x19a0, 0x70e5, 0x339a, 0x1d19, 0x0, 0x0);
        gbc.writeMem(0x59eb, { 0x51 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x2b5c, gbc.sp());
        EXPECT(0x59ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0088
        gbc.setState(0x29f9, 0x16a3, 0xa2f0, 0x889a, 0x89f0, 0xde91, 0x1, 0x0);
        gbc.writeMem(0x29f9, { 0x51 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x16a3, gbc.sp());
        EXPECT(0x29fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0089
        gbc.setState(0x4916, 0xfff3, 0xa590, 0x59ea, 0x7de0, 0xa106, 0x0, 0x1);
        gbc.writeMem(0x4916, { 0x51 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xfff3, gbc.sp());
        EXPECT(0x4917, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 008B
        gbc.setState(0x7857, 0x8a9a, 0xaf90, 0x1415, 0x1f32, 0x1725, 0x0, 0x0);
        gbc.writeMem(0x7857, { 0x51 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x8a9a, gbc.sp());
        EXPECT(0x7858, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 008C
        gbc.setState(0x80fa, 0x310e, 0x3b40, 0x6f78, 0x7a5e, 0xb81e, 0x0, 0x1);
        gbc.writeMem(0x80fa, { 0x51 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x310e, gbc.sp());
        EXPECT(0x80fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x80fa));
        // 51 008D
        gbc.setState(0x593d, 0x8515, 0x61e0, 0x2bb8, 0xb00f, 0x9159, 0x1, 0x0);
        gbc.writeMem(0x593d, { 0x51 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x8515, gbc.sp());
        EXPECT(0x593e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 008E
        gbc.setState(0x11c8, 0xbb95, 0xe530, 0x6eda, 0x12ed, 0x86a6, 0x1, 0x1);
        gbc.writeMem(0x11c8, { 0x51 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xbb95, gbc.sp());
        EXPECT(0x11c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 008F
        gbc.setState(0x56d2, 0x29eb, 0x3300, 0x916d, 0x6211, 0x6bdc, 0x1, 0x0);
        gbc.writeMem(0x56d2, { 0x51 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x29eb, gbc.sp());
        EXPECT(0x56d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0090
        gbc.setState(0x4e1b, 0x4706, 0x7700, 0x9b6a, 0x7340, 0x8683, 0x0, 0x0);
        gbc.writeMem(0x4e1b, { 0x51 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x4706, gbc.sp());
        EXPECT(0x4e1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0091
        gbc.setState(0x891d, 0xdd91, 0xdda0, 0x994f, 0x279c, 0x9031, 0x1, 0x1);
        gbc.writeMem(0x891d, { 0x51 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xdd91, gbc.sp());
        EXPECT(0x891e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x891d));
        // 51 0092
        gbc.setState(0xbc09, 0xad38, 0x9d40, 0xd105, 0x325, 0x3eb3, 0x1, 0x1);
        gbc.writeMem(0xbc09, { 0x51 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xad38, gbc.sp());
        EXPECT(0xbc0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xbc09));
        // 51 0093
        gbc.setState(0xc745, 0x7eeb, 0x14d0, 0x954a, 0x9090, 0xbcbf, 0x1, 0x0);
        gbc.writeMem(0xc745, { 0x51 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x7eeb, gbc.sp());
        EXPECT(0xc746, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xc745));
        // 51 0094
        gbc.setState(0x27e0, 0xb8e7, 0xbce0, 0x2cca, 0xa3c8, 0x43aa, 0x0, 0x0);
        gbc.writeMem(0x27e0, { 0x51 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xb8e7, gbc.sp());
        EXPECT(0x27e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0095
        gbc.setState(0xda3a, 0x2b2e, 0x4e50, 0x55f6, 0x9726, 0x552f, 0x1, 0x0);
        gbc.writeMem(0xda3a, { 0x51 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x2b2e, gbc.sp());
        EXPECT(0xda3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xda3a));
        // 51 0096
        gbc.setState(0x6c97, 0xb2e4, 0x38a0, 0x28bb, 0x33e6, 0xdb9a, 0x1, 0x0);
        gbc.writeMem(0x6c97, { 0x51 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xb2e4, gbc.sp());
        EXPECT(0x6c98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0097
        gbc.setState(0x2929, 0xa19, 0x3e90, 0x882f, 0x12f7, 0x57b3, 0x1, 0x1);
        gbc.writeMem(0x2929, { 0x51 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xa19, gbc.sp());
        EXPECT(0x292a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0098
        gbc.setState(0x1ffa, 0xfe2, 0xb360, 0xea0a, 0x7d71, 0x5d01, 0x0, 0x0);
        gbc.writeMem(0x1ffa, { 0x51 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xfe2, gbc.sp());
        EXPECT(0x1ffb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0099
        gbc.setState(0x88a1, 0x2579, 0x6780, 0x194f, 0xbdcc, 0x7fb5, 0x0, 0x0);
        gbc.writeMem(0x88a1, { 0x51 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x2579, gbc.sp());
        EXPECT(0x88a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x88a1));
        // 51 009A
        gbc.setState(0x210b, 0x61e0, 0x2c70, 0x5772, 0x9ec9, 0x581a, 0x1, 0x1);
        gbc.writeMem(0x210b, { 0x51 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x61e0, gbc.sp());
        EXPECT(0x210c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 009B
        gbc.setState(0xc84a, 0x22a7, 0x2560, 0x7504, 0x86e5, 0x3955, 0x0, 0x0);
        gbc.writeMem(0xc84a, { 0x51 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x22a7, gbc.sp());
        EXPECT(0xc84b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xc84a));
        // 51 009C
        gbc.setState(0xc5c9, 0x2482, 0xe220, 0xbbd0, 0xa738, 0xb2a, 0x0, 0x0);
        gbc.writeMem(0xc5c9, { 0x51 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x2482, gbc.sp());
        EXPECT(0xc5ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xc5c9));
        // 51 009D
        gbc.setState(0xdc3b, 0xbe8f, 0xe3b0, 0xfa82, 0xcc82, 0x5c8b, 0x0, 0x1);
        gbc.writeMem(0xdc3b, { 0x51 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xbe8f, gbc.sp());
        EXPECT(0xdc3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xdc3b));
        // 51 009E
        gbc.setState(0x914c, 0x5266, 0x2450, 0x25e8, 0x4d7d, 0x41f, 0x1, 0x0);
        gbc.writeMem(0x914c, { 0x51 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x5266, gbc.sp());
        EXPECT(0x914d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x914c));
        // 51 009F
        gbc.setState(0x2ccd, 0xfe05, 0xca80, 0x5373, 0xdb78, 0xf032, 0x1, 0x1);
        gbc.writeMem(0x2ccd, { 0x51 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xfe05, gbc.sp());
        EXPECT(0x2cce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 00A1
        gbc.setState(0x34a0, 0xf27c, 0x4bf0, 0xd45f, 0xe72c, 0xbbc2, 0x1, 0x1);
        gbc.writeMem(0x34a0, { 0x51 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xf27c, gbc.sp());
        EXPECT(0x34a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 00A2
        gbc.setState(0x5064, 0xe31f, 0xef80, 0x418c, 0x37dc, 0x68d1, 0x0, 0x0);
        gbc.writeMem(0x5064, { 0x51 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xe31f, gbc.sp());
        EXPECT(0x5065, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 00A3
        gbc.setState(0x5835, 0x24fd, 0x8930, 0xbe59, 0x4b2d, 0xdfdb, 0x1, 0x0);
        gbc.writeMem(0x5835, { 0x51 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x24fd, gbc.sp());
        EXPECT(0x5836, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 00A4
        gbc.setState(0xb073, 0x8239, 0x34c0, 0x954a, 0x7f72, 0x7a2d, 0x0, 0x1);
        gbc.writeMem(0xb073, { 0x51 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x8239, gbc.sp());
        EXPECT(0xb074, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xb073));
        // 51 00A5
        gbc.setState(0x5207, 0xa4d6, 0xbdc0, 0x2d73, 0x8568, 0x942c, 0x0, 0x0);
        gbc.writeMem(0x5207, { 0x51 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xa4d6, gbc.sp());
        EXPECT(0x5208, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 00A6
        gbc.setState(0x7ac4, 0xf929, 0x90, 0xfd9b, 0xdf8c, 0x229f, 0x0, 0x1);
        gbc.writeMem(0x7ac4, { 0x51 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xf929, gbc.sp());
        EXPECT(0x7ac5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 00A7
        gbc.setState(0x2b12, 0xa9e2, 0x790, 0x7493, 0x30c8, 0xabe8, 0x1, 0x0);
        gbc.writeMem(0x2b12, { 0x51 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xa9e2, gbc.sp());
        EXPECT(0x2b13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 00A8
        gbc.setState(0x7004, 0xc234, 0xe080, 0xe939, 0xb4aa, 0x6798, 0x0, 0x1);
        gbc.writeMem(0x7004, { 0x51 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xc234, gbc.sp());
        EXPECT(0x7005, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 00A9
        gbc.setState(0xde85, 0x9c9e, 0xaeb0, 0x701d, 0xca48, 0xc7a0, 0x1, 0x1);
        gbc.writeMem(0xde85, { 0x51 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x9c9e, gbc.sp());
        EXPECT(0xde86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xde85));
        // 51 00AA
        gbc.setState(0xee3, 0x71d1, 0x430, 0x6425, 0xc825, 0x5ca0, 0x1, 0x1);
        gbc.writeMem(0xee3, { 0x51 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x71d1, gbc.sp());
        EXPECT(0xee4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 00AB
        gbc.setState(0xd856, 0x69fc, 0xfa20, 0xb8d, 0xc0e4, 0x2620, 0x0, 0x0);
        gbc.writeMem(0xd856, { 0x51 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x69fc, gbc.sp());
        EXPECT(0xd857, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xd856));
        // 51 00AC
        gbc.setState(0x91ff, 0xac5f, 0xc420, 0x3e90, 0x329f, 0x6aa0, 0x0, 0x1);
        gbc.writeMem(0x91ff, { 0x51 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xac5f, gbc.sp());
        EXPECT(0x9200, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x91ff));
        // 51 00AD
        gbc.setState(0xc6f4, 0xc473, 0x5cd0, 0x88cd, 0x8ad6, 0xd9e9, 0x0, 0x1);
        gbc.writeMem(0xc6f4, { 0x51 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xc473, gbc.sp());
        EXPECT(0xc6f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xc6f4));
        // 51 00AE
        gbc.setState(0x7b7c, 0x889d, 0x7ac0, 0x6fb1, 0x52f5, 0x9fad, 0x1, 0x1);
        gbc.writeMem(0x7b7c, { 0x51 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x889d, gbc.sp());
        EXPECT(0x7b7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 00AF
        gbc.setState(0x9d4f, 0xa1b0, 0xf020, 0x1397, 0x2050, 0x1211, 0x1, 0x1);
        gbc.writeMem(0x9d4f, { 0x51 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xa1b0, gbc.sp());
        EXPECT(0x9d50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x9d4f));
        // 51 00B0
        gbc.setState(0xa62a, 0x86f8, 0xdc40, 0x605e, 0xf28e, 0x19ff, 0x0, 0x0);
        gbc.writeMem(0xa62a, { 0x51 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x86f8, gbc.sp());
        EXPECT(0xa62b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xa62a));
        // 51 00B1
        gbc.setState(0xab3, 0xb42e, 0x2570, 0xe19e, 0x5829, 0xfc71, 0x1, 0x1);
        gbc.writeMem(0xab3, { 0x51 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xb42e, gbc.sp());
        EXPECT(0xab4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 00B2
        gbc.setState(0xd25d, 0xff50, 0x9ca0, 0xd11c, 0x2309, 0x64d2, 0x1, 0x0);
        gbc.writeMem(0xd25d, { 0x51 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xff50, gbc.sp());
        EXPECT(0xd25e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xd25d));
        // 51 00B3
        gbc.setState(0xcc03, 0x3254, 0x7540, 0x15f2, 0xb9b5, 0x23f8, 0x0, 0x0);
        gbc.writeMem(0xcc03, { 0x51 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x3254, gbc.sp());
        EXPECT(0xcc04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xcc03));
        // 51 00B5
        gbc.setState(0x13c5, 0x3d9a, 0xa810, 0x1ca8, 0x33d8, 0xe10a, 0x1, 0x1);
        gbc.writeMem(0x13c5, { 0x51 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x3d9a, gbc.sp());
        EXPECT(0x13c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 00B6
        gbc.setState(0x36fb, 0x1d11, 0xcf30, 0x4cf, 0x3564, 0x3a0, 0x1, 0x0);
        gbc.writeMem(0x36fb, { 0x51 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x1d11, gbc.sp());
        EXPECT(0x36fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 00B7
        gbc.setState(0x77f7, 0xa2aa, 0xf3e0, 0xbc46, 0xccf7, 0x1b52, 0x1, 0x0);
        gbc.writeMem(0x77f7, { 0x51 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xa2aa, gbc.sp());
        EXPECT(0x77f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 00B8
        gbc.setState(0x5269, 0xe6f9, 0x2710, 0xaf20, 0xb6be, 0x2edd, 0x1, 0x0);
        gbc.writeMem(0x5269, { 0x51 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xe6f9, gbc.sp());
        EXPECT(0x526a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 00B9
        gbc.setState(0x8dbc, 0xf8b6, 0x5680, 0x9613, 0x86cf, 0xa318, 0x1, 0x1);
        gbc.writeMem(0x8dbc, { 0x51 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xf8b6, gbc.sp());
        EXPECT(0x8dbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x8dbc));
        // 51 00BA
        gbc.setState(0x13be, 0xd222, 0xa140, 0x9d29, 0x2720, 0x293f, 0x0, 0x1);
        gbc.writeMem(0x13be, { 0x51 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xd222, gbc.sp());
        EXPECT(0x13bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 00BB
        gbc.setState(0xcdd0, 0xa07f, 0xa620, 0x1389, 0x3ca1, 0x3eb7, 0x1, 0x0);
        gbc.writeMem(0xcdd0, { 0x51 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xa07f, gbc.sp());
        EXPECT(0xcdd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xcdd0));
        // 51 00BC
        gbc.setState(0x6026, 0xb112, 0x3370, 0x88c4, 0x22b7, 0x1ad3, 0x1, 0x1);
        gbc.writeMem(0x6026, { 0x51 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xb112, gbc.sp());
        EXPECT(0x6027, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 00BD
        gbc.setState(0x9fc6, 0x9000, 0xd840, 0x941, 0xd755, 0x4917, 0x0, 0x0);
        gbc.writeMem(0x9fc6, { 0x51 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x9000, gbc.sp());
        EXPECT(0x9fc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x9fc6));
        // 51 00BE
        gbc.setState(0x9ead, 0x4e2, 0x2030, 0xf26b, 0x6a3c, 0x3c6, 0x0, 0x0);
        gbc.writeMem(0x9ead, { 0x51 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x4e2, gbc.sp());
        EXPECT(0x9eae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x9ead));
        // 51 00BF
        gbc.setState(0x58e8, 0x3b2a, 0xbde0, 0xdfd6, 0x822d, 0x7502, 0x1, 0x0);
        gbc.writeMem(0x58e8, { 0x51 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x3b2a, gbc.sp());
        EXPECT(0x58e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 00C0
        gbc.setState(0x5ff7, 0xbef5, 0x24c0, 0x54a, 0x6e2b, 0x77c, 0x1, 0x1);
        gbc.writeMem(0x5ff7, { 0x51 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xbef5, gbc.sp());
        EXPECT(0x5ff8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 00C1
        gbc.setState(0x2d93, 0x69aa, 0x69b0, 0x4541, 0x553e, 0x58cb, 0x1, 0x0);
        gbc.writeMem(0x2d93, { 0x51 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x69aa, gbc.sp());
        EXPECT(0x2d94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 00C2
        gbc.setState(0xc04f, 0x38c3, 0x8630, 0x4b19, 0x868f, 0x8484, 0x1, 0x1);
        gbc.writeMem(0xc04f, { 0x51 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x38c3, gbc.sp());
        EXPECT(0xc050, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xc04f));
        // 51 00C4
        gbc.setState(0x1d6a, 0xad01, 0x93c0, 0x172b, 0xb428, 0xf653, 0x1, 0x1);
        gbc.writeMem(0x1d6a, { 0x51 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xad01, gbc.sp());
        EXPECT(0x1d6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 00C5
        gbc.setState(0x4711, 0xd753, 0x2a70, 0x5e70, 0x9a1b, 0xeefd, 0x0, 0x1);
        gbc.writeMem(0x4711, { 0x51 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xd753, gbc.sp());
        EXPECT(0x4712, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 00C6
        gbc.setState(0x6fe5, 0x9371, 0xdbf0, 0xc0ad, 0x5cb8, 0x4db3, 0x0, 0x0);
        gbc.writeMem(0x6fe5, { 0x51 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x9371, gbc.sp());
        EXPECT(0x6fe6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 00C7
        gbc.setState(0x2535, 0x8d13, 0x4990, 0xf1fc, 0xa1aa, 0xe45, 0x1, 0x1);
        gbc.writeMem(0x2535, { 0x51 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x8d13, gbc.sp());
        EXPECT(0x2536, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 00C8
        gbc.setState(0x5e06, 0x4b81, 0x63c0, 0xbc1a, 0x8cf6, 0x31c9, 0x1, 0x0);
        gbc.writeMem(0x5e06, { 0x51 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x4b81, gbc.sp());
        EXPECT(0x5e07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 00C9
        gbc.setState(0x3948, 0x748f, 0xbc0, 0x500c, 0xbabc, 0x7d13, 0x1, 0x1);
        gbc.writeMem(0x3948, { 0x51 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x748f, gbc.sp());
        EXPECT(0x3949, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 00CA
        gbc.setState(0x80df, 0x6d9d, 0x8c90, 0x85b0, 0x61ce, 0xb78, 0x0, 0x1);
        gbc.writeMem(0x80df, { 0x51 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x6d9d, gbc.sp());
        EXPECT(0x80e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x80df));
        // 51 00CB
        gbc.setState(0x8566, 0xe959, 0xa500, 0x1455, 0xece2, 0xf907, 0x0, 0x0);
        gbc.writeMem(0x8566, { 0x51 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xe959, gbc.sp());
        EXPECT(0x8567, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x8566));
        // 51 00CC
        gbc.setState(0xdc9d, 0x673b, 0x4330, 0xa141, 0xe64f, 0xcc30, 0x0, 0x1);
        gbc.writeMem(0xdc9d, { 0x51 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x673b, gbc.sp());
        EXPECT(0xdc9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xdc9d));
        // 51 00CD
        gbc.setState(0x8fcb, 0x2775, 0x98c0, 0xf6e4, 0x24ea, 0x7f03, 0x0, 0x0);
        gbc.writeMem(0x8fcb, { 0x51 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x2775, gbc.sp());
        EXPECT(0x8fcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x8fcb));
        // 51 00CE
        gbc.setState(0x90c8, 0x6345, 0xe400, 0x5fcb, 0x21a6, 0x4080, 0x0, 0x0);
        gbc.writeMem(0x90c8, { 0x51 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x6345, gbc.sp());
        EXPECT(0x90c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x90c8));
        // 51 00CF
        gbc.setState(0x795e, 0x48a7, 0x53e0, 0xd355, 0x40b0, 0x8685, 0x0, 0x1);
        gbc.writeMem(0x795e, { 0x51 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x48a7, gbc.sp());
        EXPECT(0x795f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 00D0
        gbc.setState(0x93fb, 0xa05, 0xce80, 0x933a, 0xac88, 0x6557, 0x1, 0x0);
        gbc.writeMem(0x93fb, { 0x51 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xa05, gbc.sp());
        EXPECT(0x93fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x93fb));
        // 51 00D1
        gbc.setState(0x9e0c, 0xf0, 0xac60, 0x134a, 0xb508, 0x9255, 0x1, 0x0);
        gbc.writeMem(0x9e0c, { 0x51 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xf0, gbc.sp());
        EXPECT(0x9e0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x9e0c));
        // 51 00D2
        gbc.setState(0xc66d, 0xd547, 0xb540, 0xfd55, 0x96cb, 0x9d58, 0x1, 0x0);
        gbc.writeMem(0xc66d, { 0x51 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xd547, gbc.sp());
        EXPECT(0xc66e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xc66d));
        // 51 00D3
        gbc.setState(0xb14f, 0x4ae1, 0x4a50, 0xbf5f, 0x5df8, 0x83e9, 0x1, 0x0);
        gbc.writeMem(0xb14f, { 0x51 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x4ae1, gbc.sp());
        EXPECT(0xb150, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xb14f));
        // 51 00D4
        gbc.setState(0xdeee, 0xb59f, 0x3990, 0xde0, 0xc0b7, 0x2f21, 0x0, 0x0);
        gbc.writeMem(0xdeee, { 0x51 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xb59f, gbc.sp());
        EXPECT(0xdeef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xdeee));
        // 51 00D5
        gbc.setState(0x663, 0xd98a, 0xa2c0, 0xa183, 0x7a7b, 0xe72c, 0x1, 0x0);
        gbc.writeMem(0x663, { 0x51 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xd98a, gbc.sp());
        EXPECT(0x664, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 00D6
        gbc.setState(0x5df9, 0x3c91, 0xe240, 0x78ac, 0xf328, 0x83cd, 0x0, 0x0);
        gbc.writeMem(0x5df9, { 0x51 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x3c91, gbc.sp());
        EXPECT(0x5dfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 00D7
        gbc.setState(0x2115, 0x5f70, 0xcb00, 0xded4, 0x80a8, 0x1eb4, 0x0, 0x0);
        gbc.writeMem(0x2115, { 0x51 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x5f70, gbc.sp());
        EXPECT(0x2116, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 00D9
        gbc.setState(0xbcb0, 0x4e93, 0x2b0, 0xf53e, 0x69c8, 0xd878, 0x0, 0x0);
        gbc.writeMem(0xbcb0, { 0x51 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x4e93, gbc.sp());
        EXPECT(0xbcb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xbcb0));
        // 51 00DB
        gbc.setState(0x6cc7, 0x8f1e, 0x83a0, 0xa84e, 0x8f48, 0x2746, 0x0, 0x1);
        gbc.writeMem(0x6cc7, { 0x51 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x8f1e, gbc.sp());
        EXPECT(0x6cc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 00DC
        gbc.setState(0xbe5a, 0x69c0, 0xb50, 0x33e3, 0xe6fe, 0x9a2f, 0x1, 0x0);
        gbc.writeMem(0xbe5a, { 0x51 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x69c0, gbc.sp());
        EXPECT(0xbe5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xbe5a));
        // 51 00DD
        gbc.setState(0x70ec, 0x9082, 0xf840, 0xf5e2, 0xa370, 0xcc48, 0x1, 0x1);
        gbc.writeMem(0x70ec, { 0x51 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x9082, gbc.sp());
        EXPECT(0x70ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 00DE
        gbc.setState(0xd342, 0xc1, 0x9000, 0xe44b, 0x6d18, 0x3b34, 0x1, 0x1);
        gbc.writeMem(0xd342, { 0x51 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xc1, gbc.sp());
        EXPECT(0xd343, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xd342));
        // 51 00DF
        gbc.setState(0x58c7, 0x3eb2, 0x6260, 0xc175, 0xbeac, 0xfb68, 0x1, 0x1);
        gbc.writeMem(0x58c7, { 0x51 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x3eb2, gbc.sp());
        EXPECT(0x58c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 00E0
        gbc.setState(0x4fa2, 0x657, 0x7fb0, 0x3a4b, 0x8083, 0x8c5, 0x0, 0x0);
        gbc.writeMem(0x4fa2, { 0x51 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x657, gbc.sp());
        EXPECT(0x4fa3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 00E1
        gbc.setState(0x3f12, 0x8cd2, 0xc510, 0x5a76, 0xd412, 0xdc64, 0x1, 0x0);
        gbc.writeMem(0x3f12, { 0x51 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x8cd2, gbc.sp());
        EXPECT(0x3f13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 00E2
        gbc.setState(0x58e1, 0x1cee, 0x6480, 0xdc53, 0x123a, 0xe437, 0x1, 0x0);
        gbc.writeMem(0x58e1, { 0x51 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x1cee, gbc.sp());
        EXPECT(0x58e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 00E3
        gbc.setState(0x30f8, 0x2de0, 0x3030, 0xc5d8, 0xd31, 0xb7, 0x1, 0x0);
        gbc.writeMem(0x30f8, { 0x51 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x2de0, gbc.sp());
        EXPECT(0x30f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 00E4
        gbc.setState(0xa815, 0x26df, 0x6170, 0x4161, 0x6ef1, 0xcf10, 0x0, 0x0);
        gbc.writeMem(0xa815, { 0x51 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x26df, gbc.sp());
        EXPECT(0xa816, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xa815));
        // 51 00E5
        gbc.setState(0x61b3, 0xe8b5, 0x4f90, 0x8213, 0x7772, 0x34c8, 0x0, 0x1);
        gbc.writeMem(0x61b3, { 0x51 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xe8b5, gbc.sp());
        EXPECT(0x61b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 00E6
        gbc.setState(0x9351, 0x1570, 0xf380, 0x3eb6, 0x61cd, 0x18c4, 0x0, 0x0);
        gbc.writeMem(0x9351, { 0x51 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x1570, gbc.sp());
        EXPECT(0x9352, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x9351));
        // 51 00E7
        gbc.setState(0x1e13, 0xe9ac, 0x3420, 0x285a, 0x13cd, 0xa2bc, 0x1, 0x0);
        gbc.writeMem(0x1e13, { 0x51 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xe9ac, gbc.sp());
        EXPECT(0x1e14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 00E8
        gbc.setState(0x6e0e, 0x20eb, 0xb400, 0xc3b5, 0x9556, 0xab84, 0x0, 0x1);
        gbc.writeMem(0x6e0e, { 0x51 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x20eb, gbc.sp());
        EXPECT(0x6e0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 00E9
        gbc.setState(0x4825, 0x3af8, 0x9660, 0x6c56, 0xbad9, 0xf69, 0x1, 0x0);
        gbc.writeMem(0x4825, { 0x51 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x3af8, gbc.sp());
        EXPECT(0x4826, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 00EA
        gbc.setState(0x5d0b, 0x9052, 0x2600, 0x1b43, 0x2171, 0xb861, 0x0, 0x1);
        gbc.writeMem(0x5d0b, { 0x51 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x9052, gbc.sp());
        EXPECT(0x5d0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 00EB
        gbc.setState(0xdb50, 0x35f7, 0x5b00, 0xe130, 0x379f, 0x96b5, 0x1, 0x1);
        gbc.writeMem(0xdb50, { 0x51 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x35f7, gbc.sp());
        EXPECT(0xdb51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xdb50));
        // 51 00EC
        gbc.setState(0x7199, 0x53a, 0x1fe0, 0x3dcb, 0xb713, 0xebeb, 0x1, 0x1);
        gbc.writeMem(0x7199, { 0x51 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x53a, gbc.sp());
        EXPECT(0x719a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 00ED
        gbc.setState(0x4e5b, 0xf602, 0x1020, 0x7600, 0x910c, 0xa75, 0x0, 0x0);
        gbc.writeMem(0x4e5b, { 0x51 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xf602, gbc.sp());
        EXPECT(0x4e5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 00EE
        gbc.setState(0xe21d, 0xbfad, 0x7410, 0x26a2, 0xd48b, 0x2be8, 0x0, 0x1);
        gbc.writeMem(0xe21d, { 0x51 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xbfad, gbc.sp());
        EXPECT(0xe21e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xe21d));
        // 51 00EF
        gbc.setState(0x8ac6, 0x950a, 0xcaa0, 0xf3af, 0x4430, 0xb3d9, 0x1, 0x1);
        gbc.writeMem(0x8ac6, { 0x51 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x950a, gbc.sp());
        EXPECT(0x8ac7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x8ac6));
        // 51 00F0
        gbc.setState(0x3ec8, 0xdbc, 0xbad0, 0x8083, 0xd6cb, 0xf9a7, 0x0, 0x0);
        gbc.writeMem(0x3ec8, { 0x51 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xdbc, gbc.sp());
        EXPECT(0x3ec9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 00F1
        gbc.setState(0xa328, 0xc2fd, 0xb620, 0x664e, 0xb4c4, 0xbab0, 0x1, 0x1);
        gbc.writeMem(0xa328, { 0x51 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xc2fd, gbc.sp());
        EXPECT(0xa329, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xa328));
        // 51 00F2
        gbc.setState(0x9880, 0x6b16, 0x6ef0, 0x5cdb, 0xdd05, 0x9871, 0x1, 0x0);
        gbc.writeMem(0x9880, { 0x51 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x6b16, gbc.sp());
        EXPECT(0x9881, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x9880));
        // 51 00F3
        gbc.setState(0x13, 0x692f, 0xc990, 0xf550, 0xfaf, 0x9f42, 0x1, 0x1);
        gbc.writeMem(0x13, { 0x51 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x692f, gbc.sp());
        EXPECT(0x14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 00F4
        gbc.setState(0x7cc4, 0x882d, 0x6d80, 0x1e35, 0x5700, 0xa771, 0x0, 0x1);
        gbc.writeMem(0x7cc4, { 0x51 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x882d, gbc.sp());
        EXPECT(0x7cc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 00F5
        gbc.setState(0x5b53, 0x2561, 0x6f60, 0x9e29, 0xa988, 0xb80c, 0x1, 0x1);
        gbc.writeMem(0x5b53, { 0x51 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x2561, gbc.sp());
        EXPECT(0x5b54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 00F6
        gbc.setState(0x6237, 0x2b44, 0x8860, 0xa01, 0x8bde, 0xc2e0, 0x1, 0x1);
        gbc.writeMem(0x6237, { 0x51 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x2b44, gbc.sp());
        EXPECT(0x6238, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 00F7
        gbc.setState(0x9343, 0x59a6, 0x7e80, 0x163a, 0xebfe, 0xce0d, 0x0, 0x0);
        gbc.writeMem(0x9343, { 0x51 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x59a6, gbc.sp());
        EXPECT(0x9344, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x9343));
        // 51 00F8
        gbc.setState(0x5dbf, 0xc3bc, 0x18b0, 0x8592, 0xa0c4, 0xbe7b, 0x0, 0x0);
        gbc.writeMem(0x5dbf, { 0x51 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xc3bc, gbc.sp());
        EXPECT(0x5dc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 00F9
        gbc.setState(0xbf00, 0xfb17, 0x45f0, 0x49fb, 0xb2a1, 0x2f75, 0x1, 0x0);
        gbc.writeMem(0xbf00, { 0x51 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xfb17, gbc.sp());
        EXPECT(0xbf01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xbf00));
        // 51 00FA
        gbc.setState(0x3f44, 0x3676, 0x7fe0, 0xd5f1, 0x17e9, 0x54bc, 0x1, 0x0);
        gbc.writeMem(0x3f44, { 0x51 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x3676, gbc.sp());
        EXPECT(0x3f45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 00FB
        gbc.setState(0x6b0b, 0xfea3, 0xbe50, 0x7afe, 0xedc4, 0x5e32, 0x1, 0x1);
        gbc.writeMem(0x6b0b, { 0x51 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xfea3, gbc.sp());
        EXPECT(0x6b0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 00FC
        gbc.setState(0x7459, 0xac8, 0x2840, 0x6e73, 0xba1d, 0xe256, 0x0, 0x0);
        gbc.writeMem(0x7459, { 0x51 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xac8, gbc.sp());
        EXPECT(0x745a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 00FD
        gbc.setState(0x6993, 0x7fd, 0xcf60, 0xe82a, 0x5176, 0xdaec, 0x1, 0x1);
        gbc.writeMem(0x6993, { 0x51 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x7fd, gbc.sp());
        EXPECT(0x6994, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 00FE
        gbc.setState(0x4c7e, 0x4040, 0x12a0, 0x284e, 0xdbfc, 0x3e74, 0x1, 0x1);
        gbc.writeMem(0x4c7e, { 0x51 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x4040, gbc.sp());
        EXPECT(0x4c7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0100
        gbc.setState(0x71fe, 0x10c0, 0x17a0, 0x2f67, 0x282e, 0x24d2, 0x1, 0x1);
        gbc.writeMem(0x71fe, { 0x51 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x10c0, gbc.sp());
        EXPECT(0x71ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0101
        gbc.setState(0xad22, 0x3806, 0xaf70, 0x8290, 0x8aa7, 0xf39d, 0x1, 0x1);
        gbc.writeMem(0xad22, { 0x51 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x3806, gbc.sp());
        EXPECT(0xad23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xad22));
        // 51 0102
        gbc.setState(0x991d, 0x92a1, 0x92d0, 0x6d36, 0xc9e9, 0x2dfa, 0x1, 0x1);
        gbc.writeMem(0x991d, { 0x51 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x92a1, gbc.sp());
        EXPECT(0x991e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x991d));
        // 51 0103
        gbc.setState(0x3266, 0xe09e, 0x8bb0, 0x705b, 0xd0af, 0x1eef, 0x1, 0x1);
        gbc.writeMem(0x3266, { 0x51 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xe09e, gbc.sp());
        EXPECT(0x3267, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0104
        gbc.setState(0x9579, 0xfcd7, 0xb9d0, 0x1413, 0x9cb3, 0xe903, 0x1, 0x0);
        gbc.writeMem(0x9579, { 0x51 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xfcd7, gbc.sp());
        EXPECT(0x957a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x9579));
        // 51 0105
        gbc.setState(0xd5e9, 0x9cf3, 0x4f40, 0x22de, 0xfbdf, 0x5881, 0x1, 0x0);
        gbc.writeMem(0xd5e9, { 0x51 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x9cf3, gbc.sp());
        EXPECT(0xd5ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xd5e9));
        // 51 0106
        gbc.setState(0x2dbb, 0xae89, 0x80d0, 0xd9f6, 0xfd6d, 0xb57d, 0x1, 0x1);
        gbc.writeMem(0x2dbb, { 0x51 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xae89, gbc.sp());
        EXPECT(0x2dbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0107
        gbc.setState(0xc993, 0x9de3, 0x2bf0, 0xb60d, 0x548e, 0xe41, 0x1, 0x1);
        gbc.writeMem(0xc993, { 0x51 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x9de3, gbc.sp());
        EXPECT(0xc994, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xc993));
        // 51 0109
        gbc.setState(0x40fd, 0x9918, 0x6cf0, 0xdc9, 0xeb4a, 0x160d, 0x1, 0x1);
        gbc.writeMem(0x40fd, { 0x51 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x9918, gbc.sp());
        EXPECT(0x40fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 010A
        gbc.setState(0x9bb8, 0x5734, 0x3900, 0x47fd, 0x6005, 0xd62a, 0x0, 0x0);
        gbc.writeMem(0x9bb8, { 0x51 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x5734, gbc.sp());
        EXPECT(0x9bb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x9bb8));
        // 51 010C
        gbc.setState(0xaaca, 0x2cbb, 0x8aa0, 0x6ed0, 0x360, 0xa099, 0x1, 0x1);
        gbc.writeMem(0xaaca, { 0x51 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x2cbb, gbc.sp());
        EXPECT(0xaacb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xaaca));
        // 51 010E
        gbc.setState(0x8a07, 0xb3ca, 0x6d90, 0x9386, 0xb20b, 0xe505, 0x0, 0x1);
        gbc.writeMem(0x8a07, { 0x51 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xb3ca, gbc.sp());
        EXPECT(0x8a08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x8a07));
        // 51 010F
        gbc.setState(0xd069, 0x2a7d, 0x5120, 0xa006, 0x45a0, 0x4fb3, 0x0, 0x1);
        gbc.writeMem(0xd069, { 0x51 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x2a7d, gbc.sp());
        EXPECT(0xd06a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xd069));
        // 51 0110
        gbc.setState(0x7639, 0x4acf, 0x3680, 0x4dfe, 0x4776, 0x9734, 0x0, 0x1);
        gbc.writeMem(0x7639, { 0x51 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x4acf, gbc.sp());
        EXPECT(0x763a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0111
        gbc.setState(0x3d03, 0x5922, 0x47a0, 0xc305, 0x183b, 0xe15c, 0x0, 0x0);
        gbc.writeMem(0x3d03, { 0x51 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x5922, gbc.sp());
        EXPECT(0x3d04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0112
        gbc.setState(0xc60f, 0x8e89, 0xd280, 0xb0c1, 0xbd1a, 0xeebb, 0x1, 0x1);
        gbc.writeMem(0xc60f, { 0x51 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x8e89, gbc.sp());
        EXPECT(0xc610, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xc60f));
        // 51 0113
        gbc.setState(0x16f0, 0xa960, 0x6310, 0xb1a, 0xff5, 0xd6aa, 0x1, 0x1);
        gbc.writeMem(0x16f0, { 0x51 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xa960, gbc.sp());
        EXPECT(0x16f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0114
        gbc.setState(0x451, 0x8687, 0x9280, 0x8198, 0x727b, 0xee8f, 0x0, 0x1);
        gbc.writeMem(0x451, { 0x51 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x8687, gbc.sp());
        EXPECT(0x452, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0115
        gbc.setState(0x75c8, 0x58e0, 0xa2c0, 0x500b, 0xf358, 0x434c, 0x1, 0x1);
        gbc.writeMem(0x75c8, { 0x51 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x58e0, gbc.sp());
        EXPECT(0x75c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0116
        gbc.setState(0x433e, 0xc7b5, 0xefa0, 0x3860, 0x208c, 0x76, 0x0, 0x0);
        gbc.writeMem(0x433e, { 0x51 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xc7b5, gbc.sp());
        EXPECT(0x433f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0117
        gbc.setState(0xd32d, 0x4b63, 0x3470, 0x42be, 0x8493, 0xd6d0, 0x0, 0x0);
        gbc.writeMem(0xd32d, { 0x51 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x4b63, gbc.sp());
        EXPECT(0xd32e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xd32d));
        // 51 0118
        gbc.setState(0x6512, 0xd365, 0x72a0, 0x196b, 0x32dc, 0x4afb, 0x1, 0x0);
        gbc.writeMem(0x6512, { 0x51 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xd365, gbc.sp());
        EXPECT(0x6513, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0119
        gbc.setState(0xa781, 0xfe49, 0xa300, 0x6418, 0xe354, 0xeda5, 0x0, 0x0);
        gbc.writeMem(0xa781, { 0x51 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xfe49, gbc.sp());
        EXPECT(0xa782, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xa781));
        // 51 011A
        gbc.setState(0xa6b2, 0x1994, 0xec40, 0xcb04, 0xfb5c, 0x3759, 0x1, 0x0);
        gbc.writeMem(0xa6b2, { 0x51 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x1994, gbc.sp());
        EXPECT(0xa6b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xa6b2));
        // 51 011B
        gbc.setState(0x8cb0, 0x151e, 0x96f0, 0x46c0, 0x8682, 0x1f9f, 0x1, 0x1);
        gbc.writeMem(0x8cb0, { 0x51 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x151e, gbc.sp());
        EXPECT(0x8cb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x8cb0));
        // 51 011C
        gbc.setState(0x1a80, 0x9bfd, 0x40c0, 0xc649, 0xf8b, 0x95a, 0x1, 0x1);
        gbc.writeMem(0x1a80, { 0x51 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x9bfd, gbc.sp());
        EXPECT(0x1a81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 011D
        gbc.setState(0x71ba, 0x61d8, 0x2440, 0x9dd1, 0xecdf, 0xe499, 0x0, 0x1);
        gbc.writeMem(0x71ba, { 0x51 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x61d8, gbc.sp());
        EXPECT(0x71bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 011E
        gbc.setState(0x9c64, 0xc70e, 0xe9f0, 0xffe5, 0x51d2, 0xd8ab, 0x0, 0x0);
        gbc.writeMem(0x9c64, { 0x51 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xc70e, gbc.sp());
        EXPECT(0x9c65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x9c64));
        // 51 011F
        gbc.setState(0x561c, 0x18a5, 0x8420, 0x4d06, 0x8832, 0xaf8, 0x0, 0x0);
        gbc.writeMem(0x561c, { 0x51 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x18a5, gbc.sp());
        EXPECT(0x561d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0121
        gbc.setState(0x17e0, 0x74a5, 0x99c0, 0xa6a8, 0x2f9f, 0x33ee, 0x1, 0x1);
        gbc.writeMem(0x17e0, { 0x51 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x74a5, gbc.sp());
        EXPECT(0x17e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0122
        gbc.setState(0x2d7a, 0x162, 0xda00, 0x7206, 0xa19f, 0xea3, 0x0, 0x1);
        gbc.writeMem(0x2d7a, { 0x51 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x162, gbc.sp());
        EXPECT(0x2d7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0123
        gbc.setState(0xe57b, 0xc002, 0x7400, 0x184f, 0xbf5b, 0xd931, 0x1, 0x0);
        gbc.writeMem(0xe57b, { 0x51 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xc002, gbc.sp());
        EXPECT(0xe57c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xe57b));
        // 51 0124
        gbc.setState(0x9ce5, 0xd558, 0x2500, 0xa7b2, 0x9034, 0x6703, 0x0, 0x1);
        gbc.writeMem(0x9ce5, { 0x51 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xd558, gbc.sp());
        EXPECT(0x9ce6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x9ce5));
        // 51 0125
        gbc.setState(0x4b20, 0x2931, 0x5dc0, 0xe1d2, 0x93, 0x8647, 0x1, 0x0);
        gbc.writeMem(0x4b20, { 0x51 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x2931, gbc.sp());
        EXPECT(0x4b21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0126
        gbc.setState(0xb57b, 0xd9ca, 0xfb90, 0x6c42, 0x9bdd, 0x6813, 0x1, 0x1);
        gbc.writeMem(0xb57b, { 0x51 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xd9ca, gbc.sp());
        EXPECT(0xb57c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xb57b));
        // 51 0127
        gbc.setState(0x63b2, 0xb821, 0xe5a0, 0x5098, 0x1ec9, 0xf2c1, 0x1, 0x1);
        gbc.writeMem(0x63b2, { 0x51 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xb821, gbc.sp());
        EXPECT(0x63b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0128
        gbc.setState(0xbc8d, 0x5767, 0x92d0, 0x1ad7, 0x922e, 0x9b15, 0x0, 0x1);
        gbc.writeMem(0xbc8d, { 0x51 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x5767, gbc.sp());
        EXPECT(0xbc8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xbc8d));
        // 51 0129
        gbc.setState(0x9f98, 0x27c7, 0x9190, 0x3d02, 0x3657, 0x7598, 0x0, 0x1);
        gbc.writeMem(0x9f98, { 0x51 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x27c7, gbc.sp());
        EXPECT(0x9f99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x9f98));
        // 51 012A
        gbc.setState(0xcbb2, 0xf7ce, 0xa930, 0x4194, 0xb245, 0x75d5, 0x0, 0x1);
        gbc.writeMem(0xcbb2, { 0x51 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xf7ce, gbc.sp());
        EXPECT(0xcbb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xcbb2));
        // 51 012B
        gbc.setState(0x9f4c, 0xafba, 0x5180, 0x1172, 0xeff1, 0xa768, 0x1, 0x0);
        gbc.writeMem(0x9f4c, { 0x51 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xafba, gbc.sp());
        EXPECT(0x9f4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x9f4c));
        // 51 012C
        gbc.setState(0x175e, 0xd41e, 0x10a0, 0x2fa5, 0xeb7e, 0x60f3, 0x1, 0x0);
        gbc.writeMem(0x175e, { 0x51 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xd41e, gbc.sp());
        EXPECT(0x175f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 012D
        gbc.setState(0xd221, 0x5aee, 0xe670, 0xbfec, 0xf4bf, 0x143e, 0x1, 0x0);
        gbc.writeMem(0xd221, { 0x51 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x5aee, gbc.sp());
        EXPECT(0xd222, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xd221));
        // 51 012E
        gbc.setState(0x337f, 0xc7b7, 0xc0, 0x1a56, 0x1d6a, 0x56d1, 0x0, 0x1);
        gbc.writeMem(0x337f, { 0x51 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xc7b7, gbc.sp());
        EXPECT(0x3380, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 012F
        gbc.setState(0xe949, 0x4b74, 0x1130, 0x7101, 0x383e, 0xdfbf, 0x0, 0x1);
        gbc.writeMem(0xe949, { 0x51 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x4b74, gbc.sp());
        EXPECT(0xe94a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xe949));
        // 51 0130
        gbc.setState(0xa00d, 0xd94c, 0x9500, 0xc40f, 0x46e2, 0xea7c, 0x0, 0x0);
        gbc.writeMem(0xa00d, { 0x51 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xd94c, gbc.sp());
        EXPECT(0xa00e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xa00d));
        // 51 0132
        gbc.setState(0x9994, 0xb1e2, 0x1890, 0x6871, 0x25b7, 0x6fce, 0x1, 0x1);
        gbc.writeMem(0x9994, { 0x51 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xb1e2, gbc.sp());
        EXPECT(0x9995, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x9994));
        // 51 0133
        gbc.setState(0x93cc, 0x79a6, 0x2ea0, 0x5ce9, 0xa3b7, 0x32b9, 0x0, 0x1);
        gbc.writeMem(0x93cc, { 0x51 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x79a6, gbc.sp());
        EXPECT(0x93cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x93cc));
        // 51 0134
        gbc.setState(0xbc6c, 0x8f73, 0xb600, 0x91, 0x55ff, 0x58b1, 0x0, 0x0);
        gbc.writeMem(0xbc6c, { 0x51 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x8f73, gbc.sp());
        EXPECT(0xbc6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xbc6c));
        // 51 0136
        gbc.setState(0xbf8f, 0x8c27, 0xf310, 0xde51, 0x6bc8, 0x1cd4, 0x1, 0x0);
        gbc.writeMem(0xbf8f, { 0x51 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x8c27, gbc.sp());
        EXPECT(0xbf90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xbf8f));
        // 51 0137
        gbc.setState(0x4a0a, 0x4db, 0x7fc0, 0x4568, 0x92de, 0x3d0b, 0x0, 0x0);
        gbc.writeMem(0x4a0a, { 0x51 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x4db, gbc.sp());
        EXPECT(0x4a0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0138
        gbc.setState(0xb165, 0xa3ba, 0x990, 0x8a3b, 0xab43, 0x2094, 0x1, 0x1);
        gbc.writeMem(0xb165, { 0x51 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xa3ba, gbc.sp());
        EXPECT(0xb166, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xb165));
        // 51 0139
        gbc.setState(0x8394, 0xff31, 0xa930, 0xb469, 0xd3e9, 0x35e4, 0x1, 0x1);
        gbc.writeMem(0x8394, { 0x51 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xff31, gbc.sp());
        EXPECT(0x8395, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x8394));
        // 51 013A
        gbc.setState(0xdfc2, 0x38b6, 0x2d0, 0x6742, 0x9ae8, 0x5dd5, 0x1, 0x1);
        gbc.writeMem(0xdfc2, { 0x51 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x38b6, gbc.sp());
        EXPECT(0xdfc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xdfc2));
        // 51 013B
        gbc.setState(0xf40, 0xf1bd, 0x5110, 0x4f2e, 0xc76e, 0x9c97, 0x1, 0x1);
        gbc.writeMem(0xf40, { 0x51 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xf1bd, gbc.sp());
        EXPECT(0xf41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 013C
        gbc.setState(0xae20, 0x9360, 0x22b0, 0xa6cb, 0x3684, 0xa09, 0x0, 0x0);
        gbc.writeMem(0xae20, { 0x51 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x9360, gbc.sp());
        EXPECT(0xae21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xae20));
        // 51 013D
        gbc.setState(0x385f, 0xb8a8, 0x9830, 0x8178, 0xc565, 0x2fa1, 0x1, 0x1);
        gbc.writeMem(0x385f, { 0x51 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xb8a8, gbc.sp());
        EXPECT(0x3860, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 013E
        gbc.setState(0x48df, 0xb377, 0x1010, 0x90e6, 0x5432, 0x7f2b, 0x1, 0x1);
        gbc.writeMem(0x48df, { 0x51 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xb377, gbc.sp());
        EXPECT(0x48e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 013F
        gbc.setState(0xa41d, 0x3d54, 0x8fe0, 0xc388, 0x22ce, 0x67a0, 0x1, 0x1);
        gbc.writeMem(0xa41d, { 0x51 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x3d54, gbc.sp());
        EXPECT(0xa41e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xa41d));
        // 51 0140
        gbc.setState(0x6490, 0x1327, 0x4410, 0x9488, 0xc94b, 0x43b3, 0x0, 0x1);
        gbc.writeMem(0x6490, { 0x51 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x1327, gbc.sp());
        EXPECT(0x6491, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0141
        gbc.setState(0x2257, 0x455d, 0x4140, 0x9c5a, 0xa578, 0x8a62, 0x0, 0x0);
        gbc.writeMem(0x2257, { 0x51 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x455d, gbc.sp());
        EXPECT(0x2258, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0142
        gbc.setState(0x263c, 0x9917, 0x2b70, 0xdf0b, 0x3492, 0x2dbd, 0x0, 0x0);
        gbc.writeMem(0x263c, { 0x51 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x9917, gbc.sp());
        EXPECT(0x263d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0143
        gbc.setState(0x45da, 0x9a0b, 0xccd0, 0x251a, 0xc87, 0x668a, 0x1, 0x0);
        gbc.writeMem(0x45da, { 0x51 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x9a0b, gbc.sp());
        EXPECT(0x45db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0144
        gbc.setState(0x44ae, 0xd239, 0x2da0, 0xf73c, 0xc612, 0xa439, 0x1, 0x1);
        gbc.writeMem(0x44ae, { 0x51 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xd239, gbc.sp());
        EXPECT(0x44af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0145
        gbc.setState(0x3823, 0xf5b7, 0xc4e0, 0xd008, 0x3029, 0x97f5, 0x1, 0x0);
        gbc.writeMem(0x3823, { 0x51 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xf5b7, gbc.sp());
        EXPECT(0x3824, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0146
        gbc.setState(0x4c10, 0xdefd, 0x36c0, 0x61d7, 0x46b7, 0xc6ee, 0x1, 0x1);
        gbc.writeMem(0x4c10, { 0x51 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xdefd, gbc.sp());
        EXPECT(0x4c11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0147
        gbc.setState(0xc27d, 0xb442, 0xcf70, 0xc53d, 0xd12, 0xa221, 0x1, 0x0);
        gbc.writeMem(0xc27d, { 0x51 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xb442, gbc.sp());
        EXPECT(0xc27e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xc27d));
        // 51 0148
        gbc.setState(0xc657, 0x2e91, 0x5930, 0x62fa, 0xbb0e, 0xe048, 0x0, 0x1);
        gbc.writeMem(0xc657, { 0x51 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x2e91, gbc.sp());
        EXPECT(0xc658, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xc657));
        // 51 0149
        gbc.setState(0xedd7, 0xa6d3, 0x9590, 0x3e3f, 0x2def, 0x2b24, 0x1, 0x0);
        gbc.writeMem(0xedd7, { 0x51 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xa6d3, gbc.sp());
        EXPECT(0xedd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xedd7));
        // 51 014A
        gbc.setState(0xd831, 0x9563, 0xbf40, 0x58ea, 0xefc5, 0x6a48, 0x1, 0x1);
        gbc.writeMem(0xd831, { 0x51 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x9563, gbc.sp());
        EXPECT(0xd832, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xd831));
        // 51 014C
        gbc.setState(0x92ac, 0xc492, 0x5340, 0x2977, 0x26f4, 0x85f, 0x1, 0x0);
        gbc.writeMem(0x92ac, { 0x51 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xc492, gbc.sp());
        EXPECT(0x92ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x92ac));
        // 51 014D
        gbc.setState(0x3233, 0xf33b, 0x6980, 0xbb74, 0x192e, 0x54db, 0x1, 0x1);
        gbc.writeMem(0x3233, { 0x51 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xf33b, gbc.sp());
        EXPECT(0x3234, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 014E
        gbc.setState(0xc9fa, 0xcd58, 0x3db0, 0x9562, 0xbde8, 0xef87, 0x0, 0x0);
        gbc.writeMem(0xc9fa, { 0x51 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xcd58, gbc.sp());
        EXPECT(0xc9fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xc9fa));
        // 51 014F
        gbc.setState(0xd190, 0x4aab, 0x8660, 0x1f0d, 0xecbd, 0x228b, 0x1, 0x0);
        gbc.writeMem(0xd190, { 0x51 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x4aab, gbc.sp());
        EXPECT(0xd191, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xd190));
        // 51 0151
        gbc.setState(0x955d, 0x8bc0, 0xc9a0, 0xdd28, 0x7b60, 0xbad4, 0x0, 0x1);
        gbc.writeMem(0x955d, { 0x51 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x8bc0, gbc.sp());
        EXPECT(0x955e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x955d));
        // 51 0152
        gbc.setState(0xbf01, 0xca0b, 0x6b10, 0x24c1, 0x7fbf, 0x79f8, 0x0, 0x0);
        gbc.writeMem(0xbf01, { 0x51 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xca0b, gbc.sp());
        EXPECT(0xbf02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xbf01));
        // 51 0153
        gbc.setState(0x8326, 0x1ab0, 0xdf20, 0xdc23, 0x4581, 0xaa29, 0x1, 0x1);
        gbc.writeMem(0x8326, { 0x51 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x1ab0, gbc.sp());
        EXPECT(0x8327, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x8326));
        // 51 0154
        gbc.setState(0x748a, 0x8fbf, 0xb800, 0x8cd2, 0x1aa6, 0xef2e, 0x1, 0x1);
        gbc.writeMem(0x748a, { 0x51 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x8fbf, gbc.sp());
        EXPECT(0x748b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0155
        gbc.setState(0x4d91, 0xff6f, 0xed90, 0x507c, 0x4f91, 0xb1d, 0x1, 0x1);
        gbc.writeMem(0x4d91, { 0x51 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xff6f, gbc.sp());
        EXPECT(0x4d92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0156
        gbc.setState(0xad3e, 0xceb6, 0x7b00, 0xfc09, 0x8db0, 0xbcc8, 0x0, 0x1);
        gbc.writeMem(0xad3e, { 0x51 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xceb6, gbc.sp());
        EXPECT(0xad3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xad3e));
        // 51 0157
        gbc.setState(0xd370, 0x82b5, 0x6480, 0x167b, 0xc404, 0x8407, 0x0, 0x0);
        gbc.writeMem(0xd370, { 0x51 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x82b5, gbc.sp());
        EXPECT(0xd371, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xd370));
        // 51 0158
        gbc.setState(0x84ed, 0x4a71, 0x5c60, 0xd7ea, 0x98e1, 0x864f, 0x1, 0x1);
        gbc.writeMem(0x84ed, { 0x51 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x4a71, gbc.sp());
        EXPECT(0x84ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x84ed));
        // 51 0159
        gbc.setState(0x3384, 0xe7e9, 0x4ca0, 0x4794, 0xf997, 0xba45, 0x1, 0x1);
        gbc.writeMem(0x3384, { 0x51 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xe7e9, gbc.sp());
        EXPECT(0x3385, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 015A
        gbc.setState(0x44c, 0xc7c7, 0x3a80, 0x389, 0xe9ec, 0xa483, 0x1, 0x1);
        gbc.writeMem(0x44c, { 0x51 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xc7c7, gbc.sp());
        EXPECT(0x44d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 015B
        gbc.setState(0x9b20, 0xbca0, 0x4c70, 0x29c4, 0xf813, 0x51be, 0x1, 0x0);
        gbc.writeMem(0x9b20, { 0x51 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xbca0, gbc.sp());
        EXPECT(0x9b21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x9b20));
        // 51 015C
        gbc.setState(0x6d25, 0xd52, 0xf2e0, 0x8c60, 0xbfb9, 0xb2e8, 0x1, 0x1);
        gbc.writeMem(0x6d25, { 0x51 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xd52, gbc.sp());
        EXPECT(0x6d26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 015D
        gbc.setState(0x9791, 0x2cba, 0x77a0, 0xe0d8, 0x2a61, 0xdc2c, 0x0, 0x0);
        gbc.writeMem(0x9791, { 0x51 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x2cba, gbc.sp());
        EXPECT(0x9792, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x9791));
        // 51 015E
        gbc.setState(0x1bcb, 0x11a3, 0x26b0, 0x129, 0x1433, 0xce05, 0x0, 0x0);
        gbc.writeMem(0x1bcb, { 0x51 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x11a3, gbc.sp());
        EXPECT(0x1bcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 015F
        gbc.setState(0x5d50, 0x221c, 0xe070, 0xb8bf, 0xe559, 0x75c9, 0x0, 0x1);
        gbc.writeMem(0x5d50, { 0x51 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x221c, gbc.sp());
        EXPECT(0x5d51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0160
        gbc.setState(0x27cf, 0x16c9, 0x5710, 0xc5af, 0x7e98, 0x8b7e, 0x0, 0x0);
        gbc.writeMem(0x27cf, { 0x51 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x16c9, gbc.sp());
        EXPECT(0x27d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0163
        gbc.setState(0xd1d5, 0xde48, 0xee40, 0x410b, 0xeca9, 0xbb9, 0x1, 0x0);
        gbc.writeMem(0xd1d5, { 0x51 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xde48, gbc.sp());
        EXPECT(0xd1d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xd1d5));
        // 51 0164
        gbc.setState(0xb3cf, 0xf585, 0xa690, 0x2055, 0x99ee, 0xd062, 0x0, 0x0);
        gbc.writeMem(0xb3cf, { 0x51 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xf585, gbc.sp());
        EXPECT(0xb3d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xb3cf));
        // 51 0165
        gbc.setState(0x4555, 0x7a56, 0x2db0, 0xf9d4, 0x6c80, 0xaf9, 0x1, 0x1);
        gbc.writeMem(0x4555, { 0x51 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x7a56, gbc.sp());
        EXPECT(0x4556, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0166
        gbc.setState(0x2c1e, 0x94c6, 0xbb0, 0xf089, 0xa67b, 0xde16, 0x1, 0x0);
        gbc.writeMem(0x2c1e, { 0x51 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x94c6, gbc.sp());
        EXPECT(0x2c1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0167
        gbc.setState(0x556b, 0xe4, 0x7f30, 0xdb5b, 0x2472, 0x5b3b, 0x1, 0x0);
        gbc.writeMem(0x556b, { 0x51 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xe4, gbc.sp());
        EXPECT(0x556c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0168
        gbc.setState(0x3f5e, 0x70ff, 0xcf10, 0x8af, 0x32ca, 0x678f, 0x1, 0x1);
        gbc.writeMem(0x3f5e, { 0x51 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x70ff, gbc.sp());
        EXPECT(0x3f5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0169
        gbc.setState(0x6c8d, 0x4561, 0x94d0, 0x747a, 0xf6e9, 0x9877, 0x1, 0x1);
        gbc.writeMem(0x6c8d, { 0x51 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x4561, gbc.sp());
        EXPECT(0x6c8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 016A
        gbc.setState(0xbb77, 0xc1ec, 0xea10, 0x524e, 0xcfd, 0x1c4a, 0x0, 0x0);
        gbc.writeMem(0xbb77, { 0x51 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xc1ec, gbc.sp());
        EXPECT(0xbb78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xbb77));
        // 51 016B
        gbc.setState(0x451c, 0x30ef, 0xf6a0, 0xcdf5, 0x7918, 0x30cc, 0x0, 0x0);
        gbc.writeMem(0x451c, { 0x51 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x30ef, gbc.sp());
        EXPECT(0x451d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 016C
        gbc.setState(0x2c51, 0xcbc5, 0x5af0, 0x6a01, 0xa6d8, 0x9677, 0x0, 0x1);
        gbc.writeMem(0x2c51, { 0x51 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xcbc5, gbc.sp());
        EXPECT(0x2c52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 016D
        gbc.setState(0x54b, 0x6a13, 0x4690, 0xbd1a, 0xdb2, 0x6773, 0x0, 0x0);
        gbc.writeMem(0x54b, { 0x51 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x6a13, gbc.sp());
        EXPECT(0x54c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 016E
        gbc.setState(0x96a2, 0x4619, 0x5c30, 0x618e, 0xd213, 0x2e94, 0x1, 0x1);
        gbc.writeMem(0x96a2, { 0x51 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x4619, gbc.sp());
        EXPECT(0x96a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x96a2));
        // 51 016F
        gbc.setState(0x44c6, 0xa6a8, 0x3ba0, 0xc77e, 0x2a60, 0xe75c, 0x0, 0x1);
        gbc.writeMem(0x44c6, { 0x51 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xa6a8, gbc.sp());
        EXPECT(0x44c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0170
        gbc.setState(0xbb13, 0xdadf, 0xd3b0, 0xc167, 0xec58, 0xe6a3, 0x0, 0x1);
        gbc.writeMem(0xbb13, { 0x51 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xdadf, gbc.sp());
        EXPECT(0xbb14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xbb13));
        // 51 0171
        gbc.setState(0x7acd, 0x8eaf, 0x48f0, 0x65f1, 0x9c5b, 0xc53d, 0x0, 0x0);
        gbc.writeMem(0x7acd, { 0x51 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x8eaf, gbc.sp());
        EXPECT(0x7ace, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0172
        gbc.setState(0x74b, 0x57eb, 0xb1b0, 0x3d4f, 0xd8f3, 0xf854, 0x1, 0x0);
        gbc.writeMem(0x74b, { 0x51 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x57eb, gbc.sp());
        EXPECT(0x74c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0173
        gbc.setState(0x8c65, 0x3d8d, 0x96a0, 0xf0f2, 0xa55d, 0xb9c, 0x1, 0x0);
        gbc.writeMem(0x8c65, { 0x51 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x3d8d, gbc.sp());
        EXPECT(0x8c66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x8c65));
        // 51 0174
        gbc.setState(0x8a4d, 0x51ac, 0xeb00, 0xef3a, 0x4bea, 0xb2e4, 0x1, 0x0);
        gbc.writeMem(0x8a4d, { 0x51 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x51ac, gbc.sp());
        EXPECT(0x8a4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x8a4d));
        // 51 0175
        gbc.setState(0x367e, 0x393d, 0xe170, 0xed87, 0x4a4, 0xcb80, 0x1, 0x0);
        gbc.writeMem(0x367e, { 0x51 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x393d, gbc.sp());
        EXPECT(0x367f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0176
        gbc.setState(0x98dd, 0xba7e, 0x9630, 0x537e, 0xe8a, 0x88af, 0x1, 0x0);
        gbc.writeMem(0x98dd, { 0x51 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xba7e, gbc.sp());
        EXPECT(0x98de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x98dd));
        // 51 0177
        gbc.setState(0x396d, 0x8ae6, 0xf1e0, 0xe4ca, 0xc6de, 0x8b1, 0x1, 0x1);
        gbc.writeMem(0x396d, { 0x51 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x8ae6, gbc.sp());
        EXPECT(0x396e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0178
        gbc.setState(0x9ddb, 0x48de, 0x44c0, 0x9344, 0x3dab, 0x1f1e, 0x1, 0x0);
        gbc.writeMem(0x9ddb, { 0x51 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x48de, gbc.sp());
        EXPECT(0x9ddc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x9ddb));
        // 51 0179
        gbc.setState(0x6395, 0x3294, 0xc550, 0xe6a2, 0xbc27, 0x222d, 0x0, 0x0);
        gbc.writeMem(0x6395, { 0x51 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x3294, gbc.sp());
        EXPECT(0x6396, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 017A
        gbc.setState(0x29b8, 0x6871, 0x11d0, 0xcb3d, 0x1a8a, 0x964, 0x0, 0x1);
        gbc.writeMem(0x29b8, { 0x51 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x6871, gbc.sp());
        EXPECT(0x29b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 017B
        gbc.setState(0x1502, 0x7548, 0x4010, 0xcc37, 0x94f3, 0x3eb5, 0x0, 0x0);
        gbc.writeMem(0x1502, { 0x51 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x7548, gbc.sp());
        EXPECT(0x1503, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 017C
        gbc.setState(0x6840, 0x9de, 0x48e0, 0xd49a, 0xabc8, 0x42f, 0x0, 0x1);
        gbc.writeMem(0x6840, { 0x51 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x9de, gbc.sp());
        EXPECT(0x6841, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 017D
        gbc.setState(0xd9eb, 0xb991, 0xcf80, 0x1c38, 0x1ca5, 0xf7a3, 0x0, 0x1);
        gbc.writeMem(0xd9eb, { 0x51 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xb991, gbc.sp());
        EXPECT(0xd9ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xd9eb));
        // 51 017E
        gbc.setState(0xaaba, 0x77b8, 0x400, 0x8418, 0x1ff, 0x337c, 0x0, 0x1);
        gbc.writeMem(0xaaba, { 0x51 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x77b8, gbc.sp());
        EXPECT(0xaabb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xaaba));
        // 51 017F
        gbc.setState(0x623f, 0xb1a4, 0x3f00, 0x133c, 0xcacf, 0x711a, 0x1, 0x1);
        gbc.writeMem(0x623f, { 0x51 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xb1a4, gbc.sp());
        EXPECT(0x6240, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0180
        gbc.setState(0xbbd, 0x2175, 0x8010, 0xe6c1, 0xe582, 0x8893, 0x1, 0x1);
        gbc.writeMem(0xbbd, { 0x51 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x2175, gbc.sp());
        EXPECT(0xbbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0181
        gbc.setState(0x24a9, 0x5b34, 0xbb70, 0x4b6a, 0x2a8e, 0xeb3f, 0x0, 0x0);
        gbc.writeMem(0x24a9, { 0x51 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x5b34, gbc.sp());
        EXPECT(0x24aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0182
        gbc.setState(0x685d, 0x5368, 0x2ea0, 0xc083, 0x11be, 0x5f22, 0x0, 0x0);
        gbc.writeMem(0x685d, { 0x51 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x5368, gbc.sp());
        EXPECT(0x685e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0183
        gbc.setState(0x258, 0xb3ac, 0xd3e0, 0x1f23, 0xbaf5, 0xb6b1, 0x0, 0x0);
        gbc.writeMem(0x258, { 0x51 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xb3ac, gbc.sp());
        EXPECT(0x259, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0184
        gbc.setState(0x36bb, 0xbcd9, 0xcf0, 0xe2ef, 0x11ac, 0x8d54, 0x1, 0x0);
        gbc.writeMem(0x36bb, { 0x51 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xbcd9, gbc.sp());
        EXPECT(0x36bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0185
        gbc.setState(0xc604, 0xa9fb, 0xc8d0, 0x4cc, 0x9933, 0xe1ed, 0x0, 0x0);
        gbc.writeMem(0xc604, { 0x51 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xa9fb, gbc.sp());
        EXPECT(0xc605, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xc604));
        // 51 0186
        gbc.setState(0x7a1d, 0x45bf, 0xf830, 0xf53c, 0x94f, 0x97dd, 0x0, 0x0);
        gbc.writeMem(0x7a1d, { 0x51 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x45bf, gbc.sp());
        EXPECT(0x7a1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0187
        gbc.setState(0xdefe, 0xa3f3, 0xd810, 0x6acf, 0xbe9, 0xb921, 0x0, 0x0);
        gbc.writeMem(0xdefe, { 0x51 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xa3f3, gbc.sp());
        EXPECT(0xdeff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xdefe));
        // 51 0189
        gbc.setState(0xcb81, 0x7172, 0x4a20, 0x511a, 0x1ef7, 0xc56b, 0x0, 0x0);
        gbc.writeMem(0xcb81, { 0x51 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x7172, gbc.sp());
        EXPECT(0xcb82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xcb81));
        // 51 018A
        gbc.setState(0xfa7, 0x970a, 0x7200, 0xcf7d, 0xc3b9, 0x952f, 0x0, 0x1);
        gbc.writeMem(0xfa7, { 0x51 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x970a, gbc.sp());
        EXPECT(0xfa8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 018B
        gbc.setState(0x7e84, 0xec3f, 0xd6f0, 0x1d6e, 0xc225, 0x6178, 0x0, 0x1);
        gbc.writeMem(0x7e84, { 0x51 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xec3f, gbc.sp());
        EXPECT(0x7e85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 018D
        gbc.setState(0x10ec, 0x757b, 0x8130, 0x9355, 0x2186, 0x682a, 0x0, 0x0);
        gbc.writeMem(0x10ec, { 0x51 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x757b, gbc.sp());
        EXPECT(0x10ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 018E
        gbc.setState(0x7f5, 0x6b4b, 0xbda0, 0x16d2, 0xe2cf, 0xf013, 0x0, 0x1);
        gbc.writeMem(0x7f5, { 0x51 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x6b4b, gbc.sp());
        EXPECT(0x7f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 018F
        gbc.setState(0x1ded, 0x830d, 0x7730, 0xb24, 0x1bce, 0x85ed, 0x0, 0x1);
        gbc.writeMem(0x1ded, { 0x51 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x830d, gbc.sp());
        EXPECT(0x1dee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0190
        gbc.setState(0xe986, 0x8165, 0x99b0, 0x30c, 0x8b03, 0x7dde, 0x1, 0x1);
        gbc.writeMem(0xe986, { 0x51 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x8165, gbc.sp());
        EXPECT(0xe987, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xe986));
        // 51 0191
        gbc.setState(0x75b4, 0xabd2, 0xe110, 0xc76b, 0x3ef8, 0x95ba, 0x0, 0x0);
        gbc.writeMem(0x75b4, { 0x51 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xabd2, gbc.sp());
        EXPECT(0x75b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0192
        gbc.setState(0x8731, 0x82c0, 0xe570, 0xa587, 0x8ac3, 0x7366, 0x1, 0x1);
        gbc.writeMem(0x8731, { 0x51 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x82c0, gbc.sp());
        EXPECT(0x8732, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x8731));
        // 51 0193
        gbc.setState(0x9284, 0x8950, 0x6460, 0xdc39, 0x482d, 0xc74a, 0x1, 0x1);
        gbc.writeMem(0x9284, { 0x51 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x8950, gbc.sp());
        EXPECT(0x9285, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x9284));
        // 51 0194
        gbc.setState(0xebda, 0x234a, 0x6c30, 0x8a32, 0xb251, 0xa817, 0x1, 0x1);
        gbc.writeMem(0xebda, { 0x51 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x234a, gbc.sp());
        EXPECT(0xebdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xebda));
        // 51 0195
        gbc.setState(0x40f7, 0x45e0, 0xa400, 0x1410, 0xa1, 0xa2, 0x1, 0x1);
        gbc.writeMem(0x40f7, { 0x51 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x45e0, gbc.sp());
        EXPECT(0x40f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0196
        gbc.setState(0x2d46, 0xe3d4, 0xb510, 0xdf1f, 0x6a88, 0xd549, 0x1, 0x1);
        gbc.writeMem(0x2d46, { 0x51 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xe3d4, gbc.sp());
        EXPECT(0x2d47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0197
        gbc.setState(0x7e9f, 0xc66f, 0xe2a0, 0x3a8f, 0x850d, 0x6e36, 0x1, 0x1);
        gbc.writeMem(0x7e9f, { 0x51 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xc66f, gbc.sp());
        EXPECT(0x7ea0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0198
        gbc.setState(0xaa70, 0x2c6a, 0x9160, 0x5876, 0xb2e8, 0xd77d, 0x1, 0x0);
        gbc.writeMem(0xaa70, { 0x51 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x2c6a, gbc.sp());
        EXPECT(0xaa71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xaa70));
        // 51 0199
        gbc.setState(0x761c, 0xbe20, 0x93c0, 0x4c94, 0xf464, 0x5a58, 0x0, 0x1);
        gbc.writeMem(0x761c, { 0x51 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xbe20, gbc.sp());
        EXPECT(0x761d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 019B
        gbc.setState(0x2848, 0xeaf8, 0xe7a0, 0x2389, 0xd154, 0x1b5e, 0x0, 0x1);
        gbc.writeMem(0x2848, { 0x51 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xeaf8, gbc.sp());
        EXPECT(0x2849, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 019C
        gbc.setState(0xb064, 0xc97d, 0x8a70, 0xd386, 0x5734, 0x78b5, 0x0, 0x1);
        gbc.writeMem(0xb064, { 0x51 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xc97d, gbc.sp());
        EXPECT(0xb065, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xb064));
        // 51 019D
        gbc.setState(0x7587, 0x6d01, 0x6a50, 0x6098, 0xfd6d, 0x5087, 0x1, 0x1);
        gbc.writeMem(0x7587, { 0x51 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x6d01, gbc.sp());
        EXPECT(0x7588, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 019E
        gbc.setState(0x4ded, 0xc262, 0xe210, 0x3058, 0xb870, 0xf683, 0x0, 0x0);
        gbc.writeMem(0x4ded, { 0x51 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xc262, gbc.sp());
        EXPECT(0x4dee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 019F
        gbc.setState(0x15ac, 0x4f0b, 0x6610, 0xcdf2, 0x7495, 0x442d, 0x0, 0x0);
        gbc.writeMem(0x15ac, { 0x51 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x4f0b, gbc.sp());
        EXPECT(0x15ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 01A0
        gbc.setState(0x383c, 0x24fb, 0x2ee0, 0x17f9, 0x6fb5, 0x3d94, 0x0, 0x0);
        gbc.writeMem(0x383c, { 0x51 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x24fb, gbc.sp());
        EXPECT(0x383d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 01A1
        gbc.setState(0xa7fa, 0x26f3, 0x7e60, 0xbc5e, 0xa378, 0x8d6b, 0x0, 0x0);
        gbc.writeMem(0xa7fa, { 0x51 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x26f3, gbc.sp());
        EXPECT(0xa7fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xa7fa));
        // 51 01A2
        gbc.setState(0xdaaf, 0xbee8, 0xd1a0, 0xb05e, 0x772b, 0xd3c2, 0x0, 0x0);
        gbc.writeMem(0xdaaf, { 0x51 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xbee8, gbc.sp());
        EXPECT(0xdab0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xdaaf));
        // 51 01A3
        gbc.setState(0xb2bd, 0x37d, 0x3570, 0x8400, 0x376, 0x20fe, 0x1, 0x1);
        gbc.writeMem(0xb2bd, { 0x51 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x37d, gbc.sp());
        EXPECT(0xb2be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xb2bd));
        // 51 01A4
        gbc.setState(0x9e66, 0x1036, 0x7320, 0x1a87, 0x6890, 0x7528, 0x1, 0x0);
        gbc.writeMem(0x9e66, { 0x51 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x1036, gbc.sp());
        EXPECT(0x9e67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x9e66));
        // 51 01A5
        gbc.setState(0x57d2, 0x94db, 0x7d40, 0x3805, 0x1f92, 0xb136, 0x1, 0x1);
        gbc.writeMem(0x57d2, { 0x51 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x94db, gbc.sp());
        EXPECT(0x57d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 01A6
        gbc.setState(0xc9a5, 0xc9be, 0xdda0, 0xba22, 0x245f, 0x19e8, 0x1, 0x1);
        gbc.writeMem(0xc9a5, { 0x51 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xc9be, gbc.sp());
        EXPECT(0xc9a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xc9a5));
        // 51 01A7
        gbc.setState(0x4b33, 0x2926, 0x7d90, 0x4e6f, 0xc5da, 0x7f95, 0x0, 0x1);
        gbc.writeMem(0x4b33, { 0x51 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x2926, gbc.sp());
        EXPECT(0x4b34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 01A8
        gbc.setState(0x137b, 0x680e, 0x2e0, 0x2687, 0xb395, 0x5c9c, 0x1, 0x1);
        gbc.writeMem(0x137b, { 0x51 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x680e, gbc.sp());
        EXPECT(0x137c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 01A9
        gbc.setState(0x7d1d, 0xf450, 0x6530, 0xa7fe, 0x9a57, 0xc361, 0x0, 0x0);
        gbc.writeMem(0x7d1d, { 0x51 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xf450, gbc.sp());
        EXPECT(0x7d1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 01AA
        gbc.setState(0xacde, 0x349a, 0xd280, 0x7611, 0x2831, 0x933c, 0x0, 0x0);
        gbc.writeMem(0xacde, { 0x51 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x349a, gbc.sp());
        EXPECT(0xacdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xacde));
        // 51 01AB
        gbc.setState(0x272, 0xf9b0, 0x8c0, 0xc760, 0xd873, 0x7264, 0x1, 0x1);
        gbc.writeMem(0x272, { 0x51 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xf9b0, gbc.sp());
        EXPECT(0x273, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 01AC
        gbc.setState(0x1e95, 0x3bc1, 0x8cb0, 0x8d05, 0xc1bd, 0xb176, 0x0, 0x1);
        gbc.writeMem(0x1e95, { 0x51 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x3bc1, gbc.sp());
        EXPECT(0x1e96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 01AD
        gbc.setState(0xd6e9, 0xa1c4, 0x46a0, 0x7f55, 0xddc8, 0x16bf, 0x1, 0x0);
        gbc.writeMem(0xd6e9, { 0x51 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xa1c4, gbc.sp());
        EXPECT(0xd6ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xd6e9));
        // 51 01AE
        gbc.setState(0xbcd1, 0xce2f, 0x10c0, 0x35b, 0x4926, 0x5514, 0x0, 0x1);
        gbc.writeMem(0xbcd1, { 0x51 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xce2f, gbc.sp());
        EXPECT(0xbcd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xbcd1));
        // 51 01AF
        gbc.setState(0x3a0b, 0xf972, 0x4f0, 0x5222, 0x712, 0x7c08, 0x0, 0x1);
        gbc.writeMem(0x3a0b, { 0x51 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xf972, gbc.sp());
        EXPECT(0x3a0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 01B0
        gbc.setState(0xea93, 0x2831, 0xa5b0, 0x1374, 0xc1ba, 0x2688, 0x1, 0x0);
        gbc.writeMem(0xea93, { 0x51 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x2831, gbc.sp());
        EXPECT(0xea94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xea93));
        // 51 01B1
        gbc.setState(0xdc08, 0xb574, 0xfe50, 0xf346, 0xae36, 0x51f6, 0x1, 0x0);
        gbc.writeMem(0xdc08, { 0x51 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xb574, gbc.sp());
        EXPECT(0xdc09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xdc08));
        // 51 01B2
        gbc.setState(0x76de, 0x8c0, 0xf910, 0x2ef6, 0x299, 0xf226, 0x1, 0x1);
        gbc.writeMem(0x76de, { 0x51 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x8c0, gbc.sp());
        EXPECT(0x76df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 01B3
        gbc.setState(0x4b8, 0xb83a, 0x20, 0x6299, 0x57a3, 0x2efd, 0x1, 0x1);
        gbc.writeMem(0x4b8, { 0x51 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xb83a, gbc.sp());
        EXPECT(0x4b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 01B4
        gbc.setState(0x7eec, 0x14c7, 0x7e0, 0x65ff, 0x17da, 0x50ed, 0x0, 0x1);
        gbc.writeMem(0x7eec, { 0x51 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x14c7, gbc.sp());
        EXPECT(0x7eed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 01B5
        gbc.setState(0x9218, 0xcfc1, 0x6770, 0xe42d, 0x636c, 0x80b1, 0x0, 0x0);
        gbc.writeMem(0x9218, { 0x51 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xcfc1, gbc.sp());
        EXPECT(0x9219, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x9218));
        // 51 01B6
        gbc.setState(0x4023, 0xede8, 0x440, 0x8449, 0xa47a, 0x19e2, 0x1, 0x1);
        gbc.writeMem(0x4023, { 0x51 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xede8, gbc.sp());
        EXPECT(0x4024, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 01B7
        gbc.setState(0x2dfb, 0x8cbd, 0xd190, 0xdc70, 0x4b32, 0xdc12, 0x0, 0x0);
        gbc.writeMem(0x2dfb, { 0x51 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x8cbd, gbc.sp());
        EXPECT(0x2dfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 01B8
        gbc.setState(0x8bf, 0x8483, 0x5da0, 0xd17f, 0xcbd2, 0xa223, 0x1, 0x0);
        gbc.writeMem(0x8bf, { 0x51 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x8483, gbc.sp());
        EXPECT(0x8c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 01B9
        gbc.setState(0x5f51, 0x7b26, 0x6c90, 0x8e2d, 0x38c4, 0xc92e, 0x1, 0x1);
        gbc.writeMem(0x5f51, { 0x51 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x7b26, gbc.sp());
        EXPECT(0x5f52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 01BA
        gbc.setState(0x752f, 0xcf15, 0xbcc0, 0x32f6, 0x1b29, 0xe807, 0x1, 0x0);
        gbc.writeMem(0x752f, { 0x51 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xcf15, gbc.sp());
        EXPECT(0x7530, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 01BB
        gbc.setState(0x96eb, 0xb82d, 0x7670, 0x353d, 0xb636, 0x8d8a, 0x1, 0x0);
        gbc.writeMem(0x96eb, { 0x51 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xb82d, gbc.sp());
        EXPECT(0x96ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x96eb));
        // 51 01BC
        gbc.setState(0xdbad, 0xe2f5, 0x9580, 0xaef0, 0x1a21, 0x7401, 0x1, 0x1);
        gbc.writeMem(0xdbad, { 0x51 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xe2f5, gbc.sp());
        EXPECT(0xdbae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xdbad));
        // 51 01BD
        gbc.setState(0x493f, 0x5fda, 0x4ae0, 0x6cd7, 0x5ded, 0xc950, 0x0, 0x1);
        gbc.writeMem(0x493f, { 0x51 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x5fda, gbc.sp());
        EXPECT(0x4940, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 01BF
        gbc.setState(0xcb62, 0x2161, 0xe610, 0x1bfc, 0x4ad6, 0x7d8a, 0x1, 0x0);
        gbc.writeMem(0xcb62, { 0x51 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x2161, gbc.sp());
        EXPECT(0xcb63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xcb62));
        // 51 01C0
        gbc.setState(0x147a, 0x8121, 0x3a70, 0x3f15, 0x781a, 0xee3, 0x1, 0x1);
        gbc.writeMem(0x147a, { 0x51 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x8121, gbc.sp());
        EXPECT(0x147b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 01C1
        gbc.setState(0x3a3f, 0x9bfc, 0xc0c0, 0xe8f2, 0xa8a, 0x2805, 0x1, 0x1);
        gbc.writeMem(0x3a3f, { 0x51 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x9bfc, gbc.sp());
        EXPECT(0x3a40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 01C2
        gbc.setState(0x7f8b, 0x5095, 0x1eb0, 0x3a71, 0x1d2b, 0xc642, 0x0, 0x1);
        gbc.writeMem(0x7f8b, { 0x51 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x5095, gbc.sp());
        EXPECT(0x7f8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 01C3
        gbc.setState(0x29c3, 0x3a63, 0x3650, 0xebe1, 0x331d, 0x3532, 0x0, 0x0);
        gbc.writeMem(0x29c3, { 0x51 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x3a63, gbc.sp());
        EXPECT(0x29c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 01C4
        gbc.setState(0x27a9, 0xfe5c, 0x68e0, 0xa77, 0x9749, 0xa2a1, 0x1, 0x1);
        gbc.writeMem(0x27a9, { 0x51 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xfe5c, gbc.sp());
        EXPECT(0x27aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 01C6
        gbc.setState(0x1f28, 0x2d2f, 0xd4b0, 0x3db1, 0x5d70, 0x166b, 0x0, 0x0);
        gbc.writeMem(0x1f28, { 0x51 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x2d2f, gbc.sp());
        EXPECT(0x1f29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 01C7
        gbc.setState(0x4c34, 0x9eb3, 0x80c0, 0x7f6c, 0xb78e, 0x109f, 0x1, 0x1);
        gbc.writeMem(0x4c34, { 0x51 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x9eb3, gbc.sp());
        EXPECT(0x4c35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 01C8
        gbc.setState(0x1f57, 0x135b, 0x2440, 0xdb2f, 0x46fb, 0xf086, 0x0, 0x0);
        gbc.writeMem(0x1f57, { 0x51 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x135b, gbc.sp());
        EXPECT(0x1f58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 01C9
        gbc.setState(0xe079, 0xa30b, 0x70c0, 0xc1ce, 0x79a1, 0x6ef5, 0x0, 0x1);
        gbc.writeMem(0xe079, { 0x51 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xa30b, gbc.sp());
        EXPECT(0xe07a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xe079));
        // 51 01CA
        gbc.setState(0x5958, 0x9f69, 0x13f0, 0xaf63, 0xb2f6, 0x55e3, 0x1, 0x0);
        gbc.writeMem(0x5958, { 0x51 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x9f69, gbc.sp());
        EXPECT(0x5959, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 01CB
        gbc.setState(0xda4c, 0x72, 0x130, 0xb9a7, 0xb054, 0xc625, 0x0, 0x1);
        gbc.writeMem(0xda4c, { 0x51 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x72, gbc.sp());
        EXPECT(0xda4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xda4c));
        // 51 01CC
        gbc.setState(0x5061, 0x33b, 0x8150, 0xfde6, 0x2b24, 0xb340, 0x1, 0x1);
        gbc.writeMem(0x5061, { 0x51 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x33b, gbc.sp());
        EXPECT(0x5062, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 01CD
        gbc.setState(0x68e2, 0xb509, 0x4c50, 0x1ae5, 0x384d, 0x851f, 0x0, 0x0);
        gbc.writeMem(0x68e2, { 0x51 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xb509, gbc.sp());
        EXPECT(0x68e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 01CE
        gbc.setState(0x4c3c, 0x1280, 0x56f0, 0x6f46, 0xf424, 0x6775, 0x0, 0x0);
        gbc.writeMem(0x4c3c, { 0x51 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x1280, gbc.sp());
        EXPECT(0x4c3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 01CF
        gbc.setState(0x810c, 0xb1e6, 0xd0b0, 0xe751, 0x25d7, 0xf137, 0x1, 0x1);
        gbc.writeMem(0x810c, { 0x51 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xb1e6, gbc.sp());
        EXPECT(0x810d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x810c));
        // 51 01D0
        gbc.setState(0xc2e1, 0x109e, 0xa130, 0x671e, 0xc488, 0x946f, 0x0, 0x0);
        gbc.writeMem(0xc2e1, { 0x51 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x109e, gbc.sp());
        EXPECT(0xc2e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xc2e1));
        // 51 01D1
        gbc.setState(0x3937, 0x141c, 0x8530, 0x8cf8, 0xc873, 0x3d0d, 0x1, 0x1);
        gbc.writeMem(0x3937, { 0x51 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x141c, gbc.sp());
        EXPECT(0x3938, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 01D3
        gbc.setState(0xe7bd, 0x889e, 0x3250, 0xb360, 0xe017, 0x579f, 0x0, 0x1);
        gbc.writeMem(0xe7bd, { 0x51 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x889e, gbc.sp());
        EXPECT(0xe7be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xe7bd));
        // 51 01D4
        gbc.setState(0xc5c0, 0x9db2, 0x3370, 0xe13a, 0xe189, 0x8a1b, 0x1, 0x1);
        gbc.writeMem(0xc5c0, { 0x51 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x9db2, gbc.sp());
        EXPECT(0xc5c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xc5c0));
        // 51 01D5
        gbc.setState(0x956f, 0x9fcd, 0x2bc0, 0x8ca4, 0xdc9c, 0xda61, 0x1, 0x1);
        gbc.writeMem(0x956f, { 0x51 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x9fcd, gbc.sp());
        EXPECT(0x9570, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x956f));
        // 51 01D7
        gbc.setState(0xee5b, 0xc5bf, 0xbcf0, 0xfef5, 0x3399, 0xceb3, 0x0, 0x0);
        gbc.writeMem(0xee5b, { 0x51 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xc5bf, gbc.sp());
        EXPECT(0xee5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xee5b));
        // 51 01D8
        gbc.setState(0x9fec, 0xe830, 0x5df0, 0x49b9, 0xae4b, 0x56c9, 0x0, 0x1);
        gbc.writeMem(0x9fec, { 0x51 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xe830, gbc.sp());
        EXPECT(0x9fed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x9fec));
        // 51 01D9
        gbc.setState(0x17ae, 0xa352, 0x37b0, 0x9dca, 0x68a2, 0x75dc, 0x0, 0x0);
        gbc.writeMem(0x17ae, { 0x51 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xa352, gbc.sp());
        EXPECT(0x17af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 01DB
        gbc.setState(0xce0e, 0x698c, 0x10a0, 0xcf05, 0x4e7d, 0xb93c, 0x0, 0x1);
        gbc.writeMem(0xce0e, { 0x51 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x698c, gbc.sp());
        EXPECT(0xce0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xce0e));
        // 51 01DC
        gbc.setState(0x88c, 0x45d3, 0xa410, 0xb9c6, 0x1f63, 0xffd0, 0x0, 0x0);
        gbc.writeMem(0x88c, { 0x51 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x45d3, gbc.sp());
        EXPECT(0x88d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 01DD
        gbc.setState(0x4e41, 0xf5d1, 0x1bb0, 0xaae0, 0x592, 0x30d6, 0x0, 0x1);
        gbc.writeMem(0x4e41, { 0x51 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xf5d1, gbc.sp());
        EXPECT(0x4e42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 01DE
        gbc.setState(0xdac9, 0x59ed, 0x11f0, 0x7b0d, 0xfd8b, 0x5e40, 0x0, 0x1);
        gbc.writeMem(0xdac9, { 0x51 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x59ed, gbc.sp());
        EXPECT(0xdaca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xdac9));
        // 51 01DF
        gbc.setState(0xa69, 0x976b, 0x6b20, 0x65cc, 0xb3a7, 0xaa7a, 0x0, 0x1);
        gbc.writeMem(0xa69, { 0x51 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x976b, gbc.sp());
        EXPECT(0xa6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 01E2
        gbc.setState(0x7e2c, 0x75f0, 0xe70, 0x7e31, 0x4971, 0x3ee8, 0x0, 0x0);
        gbc.writeMem(0x7e2c, { 0x51 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x75f0, gbc.sp());
        EXPECT(0x7e2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 01E3
        gbc.setState(0xa926, 0x94af, 0x2dc0, 0x3ce6, 0xa02c, 0x3fa4, 0x1, 0x1);
        gbc.writeMem(0xa926, { 0x51 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x94af, gbc.sp());
        EXPECT(0xa927, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xa926));
        // 51 01E4
        gbc.setState(0xa120, 0xe293, 0x8900, 0xc8dc, 0xecd3, 0xf5b4, 0x1, 0x1);
        gbc.writeMem(0xa120, { 0x51 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xe293, gbc.sp());
        EXPECT(0xa121, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xa120));
        // 51 01E5
        gbc.setState(0x2401, 0xcd6, 0x27b0, 0xd52f, 0x2d0e, 0xb458, 0x1, 0x1);
        gbc.writeMem(0x2401, { 0x51 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xcd6, gbc.sp());
        EXPECT(0x2402, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 01E6
        gbc.setState(0xd84f, 0xb474, 0x15f0, 0xaf6, 0xed99, 0xa835, 0x1, 0x1);
        gbc.writeMem(0xd84f, { 0x51 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xb474, gbc.sp());
        EXPECT(0xd850, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xd84f));
        // 51 01E7
        gbc.setState(0x11c3, 0x7aa, 0x49c0, 0xc99b, 0xb4e0, 0xa369, 0x0, 0x0);
        gbc.writeMem(0x11c3, { 0x51 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x7aa, gbc.sp());
        EXPECT(0x11c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 01E8
        gbc.setState(0x7ba2, 0x4990, 0x80b0, 0x219, 0xcaed, 0x8932, 0x0, 0x1);
        gbc.writeMem(0x7ba2, { 0x51 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x4990, gbc.sp());
        EXPECT(0x7ba3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 01E9
        gbc.setState(0x2b42, 0x91bb, 0x31f0, 0x8ec6, 0xa498, 0x28e0, 0x1, 0x1);
        gbc.writeMem(0x2b42, { 0x51 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x91bb, gbc.sp());
        EXPECT(0x2b43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 01EA
        gbc.setState(0x1c8e, 0x76da, 0x32e0, 0x872e, 0x6881, 0xd230, 0x1, 0x1);
        gbc.writeMem(0x1c8e, { 0x51 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x76da, gbc.sp());
        EXPECT(0x1c8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 01EB
        gbc.setState(0xe441, 0x3dcc, 0x55e0, 0x6dcd, 0x8ec0, 0xaf8d, 0x0, 0x1);
        gbc.writeMem(0xe441, { 0x51 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x3dcc, gbc.sp());
        EXPECT(0xe442, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xe441));
        // 51 01EC
        gbc.setState(0xbb4d, 0x8ca2, 0x1d50, 0xc3b0, 0x47fa, 0x128b, 0x0, 0x0);
        gbc.writeMem(0xbb4d, { 0x51 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x8ca2, gbc.sp());
        EXPECT(0xbb4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xbb4d));
        // 51 01ED
        gbc.setState(0xb366, 0x385d, 0x6e30, 0x7068, 0x7850, 0x5f7f, 0x1, 0x0);
        gbc.writeMem(0xb366, { 0x51 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x385d, gbc.sp());
        EXPECT(0xb367, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xb366));
        // 51 01EE
        gbc.setState(0x7c76, 0x68a, 0x5680, 0x5ef3, 0x4023, 0xb4f, 0x1, 0x1);
        gbc.writeMem(0x7c76, { 0x51 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x68a, gbc.sp());
        EXPECT(0x7c77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 01EF
        gbc.setState(0xb12d, 0xd551, 0xe130, 0xec77, 0xf46f, 0xceaf, 0x1, 0x1);
        gbc.writeMem(0xb12d, { 0x51 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xd551, gbc.sp());
        EXPECT(0xb12e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xb12d));
        // 51 01F0
        gbc.setState(0x5d52, 0xfc4d, 0x7f50, 0x62c1, 0x759b, 0x90e6, 0x1, 0x0);
        gbc.writeMem(0x5d52, { 0x51 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xfc4d, gbc.sp());
        EXPECT(0x5d53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 01F1
        gbc.setState(0xe48a, 0x47a0, 0xb8d0, 0x1855, 0x9579, 0x6a23, 0x1, 0x1);
        gbc.writeMem(0xe48a, { 0x51 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x47a0, gbc.sp());
        EXPECT(0xe48b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xe48a));
        // 51 01F2
        gbc.setState(0xdd8b, 0x7d77, 0xb010, 0xc589, 0xf3e4, 0xa55f, 0x0, 0x0);
        gbc.writeMem(0xdd8b, { 0x51 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x7d77, gbc.sp());
        EXPECT(0xdd8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xdd8b));
        // 51 01F3
        gbc.setState(0x308c, 0x26dc, 0xf660, 0x5afd, 0x2935, 0xfd1a, 0x0, 0x0);
        gbc.writeMem(0x308c, { 0x51 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x26dc, gbc.sp());
        EXPECT(0x308d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 01F4
        gbc.setState(0x7c2c, 0x301f, 0x1230, 0x44da, 0x6b7d, 0xb1c0, 0x1, 0x0);
        gbc.writeMem(0x7c2c, { 0x51 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x301f, gbc.sp());
        EXPECT(0x7c2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 01F5
        gbc.setState(0x5934, 0x6d5e, 0x8c80, 0xbf4d, 0x4211, 0x5dc5, 0x0, 0x0);
        gbc.writeMem(0x5934, { 0x51 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x6d5e, gbc.sp());
        EXPECT(0x5935, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 01F6
        gbc.setState(0x351c, 0x79e4, 0x1900, 0xdb14, 0xb559, 0xa472, 0x1, 0x1);
        gbc.writeMem(0x351c, { 0x51 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x79e4, gbc.sp());
        EXPECT(0x351d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 01F7
        gbc.setState(0x6097, 0x8d19, 0xaab0, 0x72d4, 0x6dad, 0x9101, 0x0, 0x1);
        gbc.writeMem(0x6097, { 0x51 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x8d19, gbc.sp());
        EXPECT(0x6098, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 01F8
        gbc.setState(0xc43, 0x831c, 0xe9d0, 0x8bca, 0x499e, 0xe96, 0x0, 0x0);
        gbc.writeMem(0xc43, { 0x51 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x831c, gbc.sp());
        EXPECT(0xc44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 01F9
        gbc.setState(0x9df5, 0xaed1, 0xcd00, 0x4dce, 0xaa61, 0xba6, 0x0, 0x1);
        gbc.writeMem(0x9df5, { 0x51 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xaed1, gbc.sp());
        EXPECT(0x9df6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x9df5));
        // 51 01FA
        gbc.setState(0x921d, 0x89d, 0xdef0, 0xaeff, 0x58d8, 0xd172, 0x1, 0x1);
        gbc.writeMem(0x921d, { 0x51 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x89d, gbc.sp());
        EXPECT(0x921e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x921d));
        // 51 01FB
        gbc.setState(0x18bc, 0x522c, 0x89a0, 0x208c, 0xa9bf, 0xf1a1, 0x0, 0x1);
        gbc.writeMem(0x18bc, { 0x51 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x522c, gbc.sp());
        EXPECT(0x18bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 01FC
        gbc.setState(0xb165, 0x488b, 0xf200, 0x100d, 0xc91d, 0x2e8f, 0x0, 0x0);
        gbc.writeMem(0xb165, { 0x51 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x488b, gbc.sp());
        EXPECT(0xb166, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xb165));
        // 51 01FD
        gbc.setState(0x9b0d, 0x217, 0x3580, 0x1745, 0x7c55, 0x37ad, 0x0, 0x0);
        gbc.writeMem(0x9b0d, { 0x51 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x217, gbc.sp());
        EXPECT(0x9b0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x9b0d));
        // 51 01FE
        gbc.setState(0x9e55, 0x5b55, 0xa450, 0x589d, 0xeb91, 0x6357, 0x1, 0x1);
        gbc.writeMem(0x9e55, { 0x51 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x5b55, gbc.sp());
        EXPECT(0x9e56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x9e55));
        // 51 01FF
        gbc.setState(0xe4ff, 0x689b, 0xe3d0, 0x55d3, 0xa534, 0x8b79, 0x0, 0x1);
        gbc.writeMem(0xe4ff, { 0x51 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x689b, gbc.sp());
        EXPECT(0xe500, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xe4ff));
        // 51 0200
        gbc.setState(0x731c, 0x6ddc, 0xe650, 0x1dd9, 0x2add, 0xba05, 0x1, 0x1);
        gbc.writeMem(0x731c, { 0x51 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x6ddc, gbc.sp());
        EXPECT(0x731d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0201
        gbc.setState(0x52b8, 0x52cc, 0x8970, 0xca66, 0x79ed, 0xa983, 0x1, 0x1);
        gbc.writeMem(0x52b8, { 0x51 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x52cc, gbc.sp());
        EXPECT(0x52b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0202
        gbc.setState(0xb094, 0xde9e, 0xfb40, 0xbc89, 0xfd2b, 0x24d2, 0x1, 0x1);
        gbc.writeMem(0xb094, { 0x51 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xde9e, gbc.sp());
        EXPECT(0xb095, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xb094));
        // 51 0203
        gbc.setState(0xc050, 0x543d, 0xc6c0, 0x27c2, 0x4d27, 0x35ae, 0x0, 0x0);
        gbc.writeMem(0xc050, { 0x51 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x543d, gbc.sp());
        EXPECT(0xc051, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xc050));
        // 51 0204
        gbc.setState(0x3eaf, 0x9955, 0x2b60, 0x8f6e, 0xf198, 0xa345, 0x0, 0x1);
        gbc.writeMem(0x3eaf, { 0x51 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x9955, gbc.sp());
        EXPECT(0x3eb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0205
        gbc.setState(0x98ab, 0xd72, 0x8ed0, 0x8650, 0x81f1, 0xe084, 0x0, 0x0);
        gbc.writeMem(0x98ab, { 0x51 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xd72, gbc.sp());
        EXPECT(0x98ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x98ab));
        // 51 0206
        gbc.setState(0xa819, 0x6b16, 0x10c0, 0xe86e, 0x906f, 0x41f0, 0x1, 0x0);
        gbc.writeMem(0xa819, { 0x51 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x6b16, gbc.sp());
        EXPECT(0xa81a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xa819));
        // 51 0207
        gbc.setState(0xdb2, 0x8735, 0x2300, 0x4006, 0xbd46, 0x797, 0x1, 0x0);
        gbc.writeMem(0xdb2, { 0x51 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x8735, gbc.sp());
        EXPECT(0xdb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0208
        gbc.setState(0x3ffd, 0x54e7, 0x7ce0, 0xc340, 0xb8c1, 0x1a4b, 0x0, 0x0);
        gbc.writeMem(0x3ffd, { 0x51 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x54e7, gbc.sp());
        EXPECT(0x3ffe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0209
        gbc.setState(0x17b8, 0xf188, 0x30b0, 0x33c6, 0x2a43, 0xe6f8, 0x1, 0x0);
        gbc.writeMem(0x17b8, { 0x51 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xf188, gbc.sp());
        EXPECT(0x17b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 020A
        gbc.setState(0x32ba, 0xfad3, 0xdc80, 0x6c7f, 0xca0f, 0x5d76, 0x1, 0x1);
        gbc.writeMem(0x32ba, { 0x51 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xfad3, gbc.sp());
        EXPECT(0x32bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 020B
        gbc.setState(0x9f74, 0x1b8d, 0xa970, 0x9ad0, 0x73ab, 0x9c16, 0x0, 0x1);
        gbc.writeMem(0x9f74, { 0x51 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x1b8d, gbc.sp());
        EXPECT(0x9f75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x9f74));
        // 51 020C
        gbc.setState(0xe41b, 0xb5bc, 0x2380, 0x1678, 0xe97, 0x8cfb, 0x0, 0x1);
        gbc.writeMem(0xe41b, { 0x51 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xb5bc, gbc.sp());
        EXPECT(0xe41c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xe41b));
        // 51 020D
        gbc.setState(0x6c4e, 0x89c, 0x31e0, 0xb4c3, 0xffe9, 0x3527, 0x0, 0x0);
        gbc.writeMem(0x6c4e, { 0x51 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x89c, gbc.sp());
        EXPECT(0x6c4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 020E
        gbc.setState(0x8f14, 0x33fc, 0x5bd0, 0xd4ec, 0xe62d, 0xb78b, 0x1, 0x1);
        gbc.writeMem(0x8f14, { 0x51 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x33fc, gbc.sp());
        EXPECT(0x8f15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x8f14));
        // 51 020F
        gbc.setState(0x472d, 0x3af1, 0x3da0, 0xf446, 0xcc36, 0xd3c0, 0x0, 0x0);
        gbc.writeMem(0x472d, { 0x51 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x3af1, gbc.sp());
        EXPECT(0x472e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0210
        gbc.setState(0xaf61, 0x593, 0xa650, 0xefa2, 0x2fa8, 0x2580, 0x1, 0x1);
        gbc.writeMem(0xaf61, { 0x51 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x593, gbc.sp());
        EXPECT(0xaf62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xaf61));
        // 51 0211
        gbc.setState(0xcb02, 0xc0e5, 0x32a0, 0x521c, 0x1977, 0xda8, 0x1, 0x0);
        gbc.writeMem(0xcb02, { 0x51 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xc0e5, gbc.sp());
        EXPECT(0xcb03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xcb02));
        // 51 0212
        gbc.setState(0xb4f9, 0xcfa7, 0xdc20, 0xe8ac, 0x6ae2, 0xa1fe, 0x1, 0x1);
        gbc.writeMem(0xb4f9, { 0x51 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xcfa7, gbc.sp());
        EXPECT(0xb4fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xb4f9));
        // 51 0213
        gbc.setState(0xbead, 0xc1d8, 0x44f0, 0x821d, 0xb0ea, 0x2d58, 0x1, 0x0);
        gbc.writeMem(0xbead, { 0x51 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xc1d8, gbc.sp());
        EXPECT(0xbeae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xbead));
        // 51 0214
        gbc.setState(0xdadb, 0xfe1e, 0x8860, 0xcac5, 0xb7a3, 0xcc24, 0x1, 0x0);
        gbc.writeMem(0xdadb, { 0x51 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xfe1e, gbc.sp());
        EXPECT(0xdadc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xdadb));
        // 51 0215
        gbc.setState(0x3c54, 0x3c27, 0x74e0, 0x8e56, 0x327f, 0x822, 0x1, 0x1);
        gbc.writeMem(0x3c54, { 0x51 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x3c27, gbc.sp());
        EXPECT(0x3c55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0216
        gbc.setState(0x9aa7, 0x3ed5, 0x8ea0, 0xef21, 0xce60, 0xf4e2, 0x1, 0x0);
        gbc.writeMem(0x9aa7, { 0x51 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x3ed5, gbc.sp());
        EXPECT(0x9aa8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x9aa7));
        // 51 0217
        gbc.setState(0x3313, 0x245b, 0x9d60, 0x21a, 0x51f, 0xb9a, 0x1, 0x0);
        gbc.writeMem(0x3313, { 0x51 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x245b, gbc.sp());
        EXPECT(0x3314, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0218
        gbc.setState(0xda48, 0x3810, 0x2330, 0x5654, 0x30df, 0x984d, 0x0, 0x0);
        gbc.writeMem(0xda48, { 0x51 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x3810, gbc.sp());
        EXPECT(0xda49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xda48));
        // 51 0219
        gbc.setState(0x21b0, 0x22b4, 0x7710, 0xe03c, 0x1e52, 0x133f, 0x1, 0x1);
        gbc.writeMem(0x21b0, { 0x51 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x22b4, gbc.sp());
        EXPECT(0x21b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 021A
        gbc.setState(0x3130, 0xced4, 0xaf70, 0x1819, 0xb300, 0x6dcc, 0x1, 0x1);
        gbc.writeMem(0x3130, { 0x51 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xced4, gbc.sp());
        EXPECT(0x3131, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 021B
        gbc.setState(0x7aa, 0x237a, 0xd490, 0xea03, 0xd6be, 0x34c3, 0x1, 0x0);
        gbc.writeMem(0x7aa, { 0x51 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x237a, gbc.sp());
        EXPECT(0x7ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 021C
        gbc.setState(0xcad3, 0x60f9, 0xc670, 0x93b, 0x35e9, 0x1d3b, 0x1, 0x1);
        gbc.writeMem(0xcad3, { 0x51 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x60f9, gbc.sp());
        EXPECT(0xcad4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xcad3));
        // 51 021D
        gbc.setState(0x7a71, 0xbace, 0xc6e0, 0x2efa, 0x5e05, 0x196, 0x0, 0x0);
        gbc.writeMem(0x7a71, { 0x51 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xbace, gbc.sp());
        EXPECT(0x7a72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 021E
        gbc.setState(0xe2a3, 0xae7c, 0xfc00, 0xca7, 0x26b9, 0xf442, 0x1, 0x0);
        gbc.writeMem(0xe2a3, { 0x51 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xae7c, gbc.sp());
        EXPECT(0xe2a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xe2a3));
        // 51 021F
        gbc.setState(0x8dec, 0xcabe, 0xd660, 0x57a8, 0x48f6, 0x82fd, 0x0, 0x0);
        gbc.writeMem(0x8dec, { 0x51 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xcabe, gbc.sp());
        EXPECT(0x8ded, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x8dec));
        // 51 0220
        gbc.setState(0xebb8, 0xd74d, 0xe00, 0x41d3, 0x730b, 0xfb3a, 0x0, 0x1);
        gbc.writeMem(0xebb8, { 0x51 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xd74d, gbc.sp());
        EXPECT(0xebb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xebb8));
        // 51 0221
        gbc.setState(0x678d, 0x621f, 0x4bc0, 0x9b27, 0xfed4, 0xeb55, 0x0, 0x0);
        gbc.writeMem(0x678d, { 0x51 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x621f, gbc.sp());
        EXPECT(0x678e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0222
        gbc.setState(0x1217, 0xc16e, 0x83f0, 0x15d, 0x1b07, 0x7391, 0x1, 0x1);
        gbc.writeMem(0x1217, { 0x51 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xc16e, gbc.sp());
        EXPECT(0x1218, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0224
        gbc.setState(0xe950, 0x8dbe, 0xf500, 0x7bbe, 0xddec, 0xbf7f, 0x0, 0x1);
        gbc.writeMem(0xe950, { 0x51 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x8dbe, gbc.sp());
        EXPECT(0xe951, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xe950));
        // 51 0225
        gbc.setState(0xc862, 0x7db6, 0x42f0, 0xf743, 0x6990, 0x6e85, 0x0, 0x0);
        gbc.writeMem(0xc862, { 0x51 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x7db6, gbc.sp());
        EXPECT(0xc863, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xc862));
        // 51 0226
        gbc.setState(0x712e, 0x5ab0, 0x5400, 0xf02f, 0x63cd, 0x6ce0, 0x1, 0x1);
        gbc.writeMem(0x712e, { 0x51 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x5ab0, gbc.sp());
        EXPECT(0x712f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0227
        gbc.setState(0x877c, 0xb4e0, 0x2f20, 0x39af, 0xb9ff, 0x407c, 0x0, 0x0);
        gbc.writeMem(0x877c, { 0x51 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xb4e0, gbc.sp());
        EXPECT(0x877d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x877c));
        // 51 0228
        gbc.setState(0xd2b, 0x11d1, 0xa3d0, 0x3157, 0x5054, 0xbd60, 0x0, 0x1);
        gbc.writeMem(0xd2b, { 0x51 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x11d1, gbc.sp());
        EXPECT(0xd2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0229
        gbc.setState(0x92b7, 0x6aeb, 0x3320, 0x2259, 0x9511, 0xebf1, 0x1, 0x1);
        gbc.writeMem(0x92b7, { 0x51 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x6aeb, gbc.sp());
        EXPECT(0x92b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x92b7));
        // 51 022A
        gbc.setState(0x515f, 0xa46, 0x2c00, 0xbcf8, 0xdbe, 0xd7d7, 0x1, 0x0);
        gbc.writeMem(0x515f, { 0x51 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xa46, gbc.sp());
        EXPECT(0x5160, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 022B
        gbc.setState(0xeb89, 0xafd5, 0x58b0, 0xeb89, 0xc574, 0x8ba, 0x1, 0x0);
        gbc.writeMem(0xeb89, { 0x51 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xafd5, gbc.sp());
        EXPECT(0xeb8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xeb89));
        // 51 022C
        gbc.setState(0x6b11, 0x4f3, 0x3080, 0x5f3b, 0xab84, 0xc40, 0x0, 0x0);
        gbc.writeMem(0x6b11, { 0x51 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x4f3, gbc.sp());
        EXPECT(0x6b12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 022D
        gbc.setState(0x5b3b, 0x533c, 0x5e40, 0xf347, 0x9b63, 0xbebf, 0x1, 0x0);
        gbc.writeMem(0x5b3b, { 0x51 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x533c, gbc.sp());
        EXPECT(0x5b3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 022E
        gbc.setState(0xdebe, 0x6e14, 0x45d0, 0xa923, 0x79c7, 0x285e, 0x0, 0x0);
        gbc.writeMem(0xdebe, { 0x51 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x6e14, gbc.sp());
        EXPECT(0xdebf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xdebe));
        // 51 022F
        gbc.setState(0x5176, 0x33f7, 0x8bd0, 0xfc7c, 0x4586, 0x5aaa, 0x0, 0x0);
        gbc.writeMem(0x5176, { 0x51 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x33f7, gbc.sp());
        EXPECT(0x5177, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0230
        gbc.setState(0xa126, 0xcd80, 0x7e70, 0x4875, 0x5c38, 0x250e, 0x1, 0x0);
        gbc.writeMem(0xa126, { 0x51 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xcd80, gbc.sp());
        EXPECT(0xa127, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xa126));
        // 51 0231
        gbc.setState(0x14dd, 0x70f8, 0x58e0, 0xf320, 0x7886, 0xb333, 0x0, 0x0);
        gbc.writeMem(0x14dd, { 0x51 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x70f8, gbc.sp());
        EXPECT(0x14de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0232
        gbc.setState(0x9566, 0xaa14, 0x2b70, 0x15bd, 0x477e, 0x7f00, 0x0, 0x0);
        gbc.writeMem(0x9566, { 0x51 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xaa14, gbc.sp());
        EXPECT(0x9567, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x9566));
        // 51 0233
        gbc.setState(0xd8ef, 0xaf0c, 0xc860, 0x3dfd, 0x6488, 0xa270, 0x0, 0x0);
        gbc.writeMem(0xd8ef, { 0x51 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xaf0c, gbc.sp());
        EXPECT(0xd8f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xd8ef));
        // 51 0234
        gbc.setState(0x2f2c, 0x934b, 0x6720, 0x26c0, 0x2ea5, 0x8f58, 0x0, 0x0);
        gbc.writeMem(0x2f2c, { 0x51 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x934b, gbc.sp());
        EXPECT(0x2f2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0235
        gbc.setState(0xad57, 0x3ef8, 0x15e0, 0x1acd, 0x6779, 0xab47, 0x0, 0x1);
        gbc.writeMem(0xad57, { 0x51 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x3ef8, gbc.sp());
        EXPECT(0xad58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xad57));
        // 51 0236
        gbc.setState(0xb82a, 0xc28e, 0x3320, 0x177a, 0x1f58, 0xa08, 0x0, 0x1);
        gbc.writeMem(0xb82a, { 0x51 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xc28e, gbc.sp());
        EXPECT(0xb82b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xb82a));
        // 51 0237
        gbc.setState(0xd636, 0x683c, 0x7ee0, 0x95f4, 0x1c90, 0x7fae, 0x1, 0x0);
        gbc.writeMem(0xd636, { 0x51 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x683c, gbc.sp());
        EXPECT(0xd637, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xd636));
        // 51 0238
        gbc.setState(0x430c, 0x8f52, 0x15e0, 0x5a2a, 0x14db, 0xf9e4, 0x0, 0x0);
        gbc.writeMem(0x430c, { 0x51 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x8f52, gbc.sp());
        EXPECT(0x430d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0239
        gbc.setState(0xdfc8, 0x349e, 0xf170, 0x1e18, 0xff8a, 0x816c, 0x0, 0x0);
        gbc.writeMem(0xdfc8, { 0x51 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x349e, gbc.sp());
        EXPECT(0xdfc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xdfc8));
        // 51 023A
        gbc.setState(0x7e59, 0x6ccc, 0x34b0, 0x536f, 0xdeb, 0x3a6a, 0x0, 0x0);
        gbc.writeMem(0x7e59, { 0x51 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x6ccc, gbc.sp());
        EXPECT(0x7e5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 023B
        gbc.setState(0x54f3, 0x5a9, 0x4a20, 0x948c, 0x561, 0xfe7e, 0x1, 0x1);
        gbc.writeMem(0x54f3, { 0x51 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x5a9, gbc.sp());
        EXPECT(0x54f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 023C
        gbc.setState(0x780c, 0x1fdf, 0x5ce0, 0x2e81, 0xf2ed, 0x68af, 0x0, 0x1);
        gbc.writeMem(0x780c, { 0x51 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x1fdf, gbc.sp());
        EXPECT(0x780d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 023D
        gbc.setState(0x768b, 0xc10a, 0xff20, 0xf9ec, 0x7def, 0x19dd, 0x1, 0x1);
        gbc.writeMem(0x768b, { 0x51 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xc10a, gbc.sp());
        EXPECT(0x768c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 023E
        gbc.setState(0xaf14, 0x414d, 0x1100, 0xb4ec, 0x8d5, 0xa861, 0x1, 0x1);
        gbc.writeMem(0xaf14, { 0x51 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x414d, gbc.sp());
        EXPECT(0xaf15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xaf14));
        // 51 023F
        gbc.setState(0x1314, 0xb63a, 0x1d0, 0x722f, 0xedf3, 0x6351, 0x0, 0x0);
        gbc.writeMem(0x1314, { 0x51 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xb63a, gbc.sp());
        EXPECT(0x1315, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0240
        gbc.setState(0x3d56, 0x21e8, 0xc30, 0xaeca, 0x136f, 0x86f1, 0x0, 0x0);
        gbc.writeMem(0x3d56, { 0x51 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x21e8, gbc.sp());
        EXPECT(0x3d57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0241
        gbc.setState(0x9caa, 0x362, 0xbf70, 0x11f, 0x602e, 0x25f0, 0x1, 0x0);
        gbc.writeMem(0x9caa, { 0x51 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x362, gbc.sp());
        EXPECT(0x9cab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x9caa));
        // 51 0242
        gbc.setState(0xded2, 0xb03d, 0x3970, 0x64a6, 0x72ca, 0xf872, 0x1, 0x0);
        gbc.writeMem(0xded2, { 0x51 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xb03d, gbc.sp());
        EXPECT(0xded3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xded2));
        // 51 0243
        gbc.setState(0x4848, 0xfbac, 0x6b30, 0x6cb9, 0x45c4, 0x9c5a, 0x1, 0x0);
        gbc.writeMem(0x4848, { 0x51 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xfbac, gbc.sp());
        EXPECT(0x4849, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0245
        gbc.setState(0xbec6, 0xcbd7, 0x1010, 0xe1a2, 0x24a4, 0x2865, 0x0, 0x0);
        gbc.writeMem(0xbec6, { 0x51 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xcbd7, gbc.sp());
        EXPECT(0xbec7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xbec6));
        // 51 0246
        gbc.setState(0xabad, 0xaa9b, 0x77f0, 0x2545, 0xe93c, 0x4367, 0x1, 0x1);
        gbc.writeMem(0xabad, { 0x51 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xaa9b, gbc.sp());
        EXPECT(0xabae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xabad));
        // 51 0247
        gbc.setState(0xb85d, 0xabfc, 0x48d0, 0xeabf, 0xdb36, 0xaa18, 0x1, 0x0);
        gbc.writeMem(0xb85d, { 0x51 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xabfc, gbc.sp());
        EXPECT(0xb85e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xb85d));
        // 51 0248
        gbc.setState(0xca0d, 0x60ed, 0x6cb0, 0x8b53, 0xa139, 0xc3a2, 0x0, 0x1);
        gbc.writeMem(0xca0d, { 0x51 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x60ed, gbc.sp());
        EXPECT(0xca0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xca0d));
        // 51 0249
        gbc.setState(0x2a18, 0x7246, 0xc960, 0xa9d6, 0xa20f, 0x970f, 0x1, 0x0);
        gbc.writeMem(0x2a18, { 0x51 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x7246, gbc.sp());
        EXPECT(0x2a19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 024A
        gbc.setState(0x55f9, 0xea89, 0x2290, 0xc884, 0xee03, 0x3538, 0x0, 0x1);
        gbc.writeMem(0x55f9, { 0x51 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xea89, gbc.sp());
        EXPECT(0x55fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 024B
        gbc.setState(0x8d6d, 0x9223, 0x9da0, 0x36c8, 0xbe9f, 0xf659, 0x1, 0x1);
        gbc.writeMem(0x8d6d, { 0x51 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x9223, gbc.sp());
        EXPECT(0x8d6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x8d6d));
        // 51 024D
        gbc.setState(0xe96a, 0xfea1, 0xa3b0, 0x80cc, 0x7592, 0x5ff8, 0x0, 0x1);
        gbc.writeMem(0xe96a, { 0x51 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xfea1, gbc.sp());
        EXPECT(0xe96b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xe96a));
        // 51 024E
        gbc.setState(0xd564, 0x530a, 0xca20, 0x3da, 0xd981, 0x5d1b, 0x0, 0x0);
        gbc.writeMem(0xd564, { 0x51 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x530a, gbc.sp());
        EXPECT(0xd565, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xd564));
        // 51 024F
        gbc.setState(0x9bfd, 0x2c26, 0xa130, 0x33b3, 0x4743, 0x82df, 0x1, 0x1);
        gbc.writeMem(0x9bfd, { 0x51 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x2c26, gbc.sp());
        EXPECT(0x9bfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x9bfd));
        // 51 0250
        gbc.setState(0x5439, 0xb02e, 0xa380, 0xb610, 0xf590, 0xb87e, 0x0, 0x1);
        gbc.writeMem(0x5439, { 0x51 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xb02e, gbc.sp());
        EXPECT(0x543a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0251
        gbc.setState(0x8b6f, 0x58fb, 0xf470, 0x93ff, 0x4695, 0xad4, 0x0, 0x1);
        gbc.writeMem(0x8b6f, { 0x51 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x58fb, gbc.sp());
        EXPECT(0x8b70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x8b6f));
        // 51 0252
        gbc.setState(0xce74, 0x2a74, 0x8f30, 0x4957, 0x1fab, 0x7ca4, 0x1, 0x0);
        gbc.writeMem(0xce74, { 0x51 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x2a74, gbc.sp());
        EXPECT(0xce75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xce74));
        // 51 0253
        gbc.setState(0xb29b, 0x91ac, 0xbec0, 0x9cd8, 0x4699, 0x1f3d, 0x1, 0x0);
        gbc.writeMem(0xb29b, { 0x51 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x91ac, gbc.sp());
        EXPECT(0xb29c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xb29b));
        // 51 0254
        gbc.setState(0x877d, 0x9a3, 0x1a30, 0xabb, 0xd80c, 0xfec2, 0x0, 0x0);
        gbc.writeMem(0x877d, { 0x51 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x9a3, gbc.sp());
        EXPECT(0x877e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x877d));
        // 51 0255
        gbc.setState(0x173b, 0x7ce8, 0x7210, 0xbe, 0xecc, 0xcac5, 0x1, 0x0);
        gbc.writeMem(0x173b, { 0x51 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x7ce8, gbc.sp());
        EXPECT(0x173c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0256
        gbc.setState(0xe1f9, 0x508e, 0x1d80, 0x5d6f, 0x3ef7, 0xb2a0, 0x0, 0x1);
        gbc.writeMem(0xe1f9, { 0x51 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x508e, gbc.sp());
        EXPECT(0xe1fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xe1f9));
        // 51 0257
        gbc.setState(0x491d, 0xb839, 0xe610, 0x19d, 0xb5c0, 0x8ff7, 0x0, 0x0);
        gbc.writeMem(0x491d, { 0x51 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xb839, gbc.sp());
        EXPECT(0x491e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0258
        gbc.setState(0x248e, 0x1e59, 0x7ea0, 0x8570, 0x9d79, 0xbd98, 0x0, 0x0);
        gbc.writeMem(0x248e, { 0x51 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x1e59, gbc.sp());
        EXPECT(0x248f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0259
        gbc.setState(0x88fb, 0x28ca, 0x45c0, 0x9537, 0xf0c8, 0x32f3, 0x1, 0x1);
        gbc.writeMem(0x88fb, { 0x51 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x28ca, gbc.sp());
        EXPECT(0x88fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x88fb));
        // 51 025B
        gbc.setState(0xa600, 0xab62, 0x1b00, 0x102c, 0x6998, 0xe236, 0x0, 0x1);
        gbc.writeMem(0xa600, { 0x51 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xab62, gbc.sp());
        EXPECT(0xa601, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xa600));
        // 51 025C
        gbc.setState(0xc74f, 0xbc91, 0xaf60, 0xc2e7, 0x4838, 0x871a, 0x1, 0x1);
        gbc.writeMem(0xc74f, { 0x51 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xbc91, gbc.sp());
        EXPECT(0xc750, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xc74f));
        // 51 025D
        gbc.setState(0x884f, 0x9a37, 0x4e90, 0x678a, 0x20fc, 0x2a59, 0x1, 0x1);
        gbc.writeMem(0x884f, { 0x51 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x9a37, gbc.sp());
        EXPECT(0x8850, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x884f));
        // 51 025F
        gbc.setState(0x6577, 0x940f, 0x6b30, 0xc3f7, 0x16c7, 0xdec8, 0x1, 0x1);
        gbc.writeMem(0x6577, { 0x51 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x940f, gbc.sp());
        EXPECT(0x6578, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0260
        gbc.setState(0xaa0e, 0x8460, 0x14d0, 0xf9cc, 0xa65e, 0x51d4, 0x1, 0x1);
        gbc.writeMem(0xaa0e, { 0x51 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x8460, gbc.sp());
        EXPECT(0xaa0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xaa0e));
        // 51 0261
        gbc.setState(0x23d, 0x653c, 0x62d0, 0xd685, 0x1a54, 0x214f, 0x1, 0x1);
        gbc.writeMem(0x23d, { 0x51 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x653c, gbc.sp());
        EXPECT(0x23e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0262
        gbc.setState(0x4ae4, 0xcc7c, 0xb200, 0x728f, 0xd7bc, 0xca2d, 0x0, 0x0);
        gbc.writeMem(0x4ae4, { 0x51 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xcc7c, gbc.sp());
        EXPECT(0x4ae5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0264
        gbc.setState(0x5621, 0xabbf, 0x9430, 0x8f39, 0xb03b, 0xbb3e, 0x1, 0x0);
        gbc.writeMem(0x5621, { 0x51 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xabbf, gbc.sp());
        EXPECT(0x5622, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0265
        gbc.setState(0x1a7f, 0x1127, 0x3270, 0xfdd1, 0xc280, 0xe0aa, 0x0, 0x0);
        gbc.writeMem(0x1a7f, { 0x51 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x1127, gbc.sp());
        EXPECT(0x1a80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0266
        gbc.setState(0x239, 0x2195, 0x8980, 0x509b, 0x1c8d, 0x2643, 0x0, 0x0);
        gbc.writeMem(0x239, { 0x51 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x2195, gbc.sp());
        EXPECT(0x23a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0267
        gbc.setState(0x7775, 0xde3d, 0xe790, 0x34bd, 0x30ef, 0xee55, 0x0, 0x1);
        gbc.writeMem(0x7775, { 0x51 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xde3d, gbc.sp());
        EXPECT(0x7776, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0268
        gbc.setState(0xbc08, 0xbd34, 0x5510, 0xa09f, 0xc1e2, 0x5bbf, 0x1, 0x1);
        gbc.writeMem(0xbc08, { 0x51 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xbd34, gbc.sp());
        EXPECT(0xbc09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xbc08));
        // 51 0269
        gbc.setState(0xa89f, 0xe495, 0x5640, 0xca38, 0x4951, 0xda06, 0x0, 0x0);
        gbc.writeMem(0xa89f, { 0x51 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xe495, gbc.sp());
        EXPECT(0xa8a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xa89f));
        // 51 026A
        gbc.setState(0x317c, 0x2d80, 0x3860, 0x2e62, 0xab71, 0x50c3, 0x1, 0x1);
        gbc.writeMem(0x317c, { 0x51 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x2d80, gbc.sp());
        EXPECT(0x317d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 026B
        gbc.setState(0x6789, 0xc029, 0xdf20, 0x4ac3, 0xb89f, 0x28e5, 0x0, 0x0);
        gbc.writeMem(0x6789, { 0x51 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xc029, gbc.sp());
        EXPECT(0x678a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 026C
        gbc.setState(0xa157, 0xb167, 0x3ff0, 0xae09, 0x2064, 0x2410, 0x0, 0x0);
        gbc.writeMem(0xa157, { 0x51 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xb167, gbc.sp());
        EXPECT(0xa158, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xa157));
        // 51 026E
        gbc.setState(0x4a2, 0xb177, 0xfbd0, 0xbf86, 0xdd21, 0x14a0, 0x1, 0x1);
        gbc.writeMem(0x4a2, { 0x51 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xb177, gbc.sp());
        EXPECT(0x4a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 026F
        gbc.setState(0x5629, 0xdf4e, 0x5f00, 0x53d5, 0x78f6, 0x579c, 0x0, 0x0);
        gbc.writeMem(0x5629, { 0x51 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xdf4e, gbc.sp());
        EXPECT(0x562a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0270
        gbc.setState(0x1736, 0xec93, 0xaea0, 0xb710, 0xfc28, 0x1719, 0x1, 0x1);
        gbc.writeMem(0x1736, { 0x51 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xec93, gbc.sp());
        EXPECT(0x1737, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0271
        gbc.setState(0x8023, 0x88eb, 0xb080, 0xd5d7, 0x7429, 0xb4ff, 0x1, 0x0);
        gbc.writeMem(0x8023, { 0x51 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x88eb, gbc.sp());
        EXPECT(0x8024, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x8023));
        // 51 0272
        gbc.setState(0xb532, 0x41e6, 0x3d50, 0xf835, 0xdd4c, 0xc76c, 0x1, 0x1);
        gbc.writeMem(0xb532, { 0x51 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x41e6, gbc.sp());
        EXPECT(0xb533, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xb532));
        // 51 0273
        gbc.setState(0x634b, 0x33d3, 0x5460, 0xbf1f, 0xe634, 0x5d7b, 0x0, 0x1);
        gbc.writeMem(0x634b, { 0x51 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x33d3, gbc.sp());
        EXPECT(0x634c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0274
        gbc.setState(0x28b9, 0x1b5b, 0xdcc0, 0xd9aa, 0xe74f, 0x3b8b, 0x1, 0x0);
        gbc.writeMem(0x28b9, { 0x51 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x1b5b, gbc.sp());
        EXPECT(0x28ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0275
        gbc.setState(0x9eed, 0xed79, 0x4340, 0x3f60, 0x543c, 0x6f4, 0x1, 0x0);
        gbc.writeMem(0x9eed, { 0x51 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xed79, gbc.sp());
        EXPECT(0x9eee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x9eed));
        // 51 0276
        gbc.setState(0xddba, 0xf0f0, 0xae30, 0x9b13, 0x16cb, 0xe688, 0x1, 0x0);
        gbc.writeMem(0xddba, { 0x51 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xf0f0, gbc.sp());
        EXPECT(0xddbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xddba));
        // 51 0277
        gbc.setState(0xb4be, 0xb8a8, 0x2ae0, 0xc279, 0x766c, 0xb4d5, 0x0, 0x0);
        gbc.writeMem(0xb4be, { 0x51 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xb8a8, gbc.sp());
        EXPECT(0xb4bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xb4be));
        // 51 0278
        gbc.setState(0xef03, 0x850b, 0x8b00, 0x9503, 0x3d53, 0x3837, 0x1, 0x1);
        gbc.writeMem(0xef03, { 0x51 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x850b, gbc.sp());
        EXPECT(0xef04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xef03));
        // 51 0279
        gbc.setState(0xa7b4, 0xf4ce, 0x3e90, 0xf6cc, 0x2f84, 0xf50a, 0x0, 0x1);
        gbc.writeMem(0xa7b4, { 0x51 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xf4ce, gbc.sp());
        EXPECT(0xa7b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xa7b4));
        // 51 027A
        gbc.setState(0x23b4, 0xb8d2, 0x5910, 0xfcb6, 0xa9d5, 0xd4fd, 0x0, 0x1);
        gbc.writeMem(0x23b4, { 0x51 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xb8d2, gbc.sp());
        EXPECT(0x23b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 027B
        gbc.setState(0x56c5, 0xb13a, 0x41b0, 0xb3f5, 0x5409, 0x12f7, 0x1, 0x0);
        gbc.writeMem(0x56c5, { 0x51 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xb13a, gbc.sp());
        EXPECT(0x56c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 027C
        gbc.setState(0x7cdc, 0x471b, 0x8b80, 0x5f90, 0xf6d3, 0xc348, 0x1, 0x0);
        gbc.writeMem(0x7cdc, { 0x51 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x471b, gbc.sp());
        EXPECT(0x7cdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 027D
        gbc.setState(0xb147, 0x3e1d, 0xabc0, 0xe518, 0x66ee, 0xab6c, 0x0, 0x0);
        gbc.writeMem(0xb147, { 0x51 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x3e1d, gbc.sp());
        EXPECT(0xb148, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xb147));
        // 51 027E
        gbc.setState(0x7993, 0x668a, 0x4cb0, 0x3c52, 0x8d18, 0x7fe4, 0x0, 0x0);
        gbc.writeMem(0x7993, { 0x51 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x668a, gbc.sp());
        EXPECT(0x7994, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 027F
        gbc.setState(0x360, 0xdd94, 0x31c0, 0x5016, 0xb9bb, 0xb676, 0x1, 0x0);
        gbc.writeMem(0x360, { 0x51 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xdd94, gbc.sp());
        EXPECT(0x361, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0280
        gbc.setState(0x5d79, 0x5a34, 0x71e0, 0x799e, 0xa2b4, 0xcfed, 0x0, 0x0);
        gbc.writeMem(0x5d79, { 0x51 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x5a34, gbc.sp());
        EXPECT(0x5d7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0281
        gbc.setState(0x2dae, 0xddc7, 0xc570, 0xde21, 0xed8e, 0xd2ca, 0x0, 0x1);
        gbc.writeMem(0x2dae, { 0x51 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xddc7, gbc.sp());
        EXPECT(0x2daf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0282
        gbc.setState(0x6227, 0xf944, 0x1830, 0xe8c0, 0x16c, 0x6c05, 0x0, 0x0);
        gbc.writeMem(0x6227, { 0x51 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xf944, gbc.sp());
        EXPECT(0x6228, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0283
        gbc.setState(0x461b, 0xb271, 0x2610, 0x9eff, 0x5015, 0x7287, 0x1, 0x1);
        gbc.writeMem(0x461b, { 0x51 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xb271, gbc.sp());
        EXPECT(0x461c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0284
        gbc.setState(0x9c56, 0x90b9, 0x3230, 0xa67e, 0xe24d, 0xaab8, 0x0, 0x1);
        gbc.writeMem(0x9c56, { 0x51 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x90b9, gbc.sp());
        EXPECT(0x9c57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x9c56));
        // 51 0285
        gbc.setState(0x5217, 0x7b79, 0xfef0, 0xf02d, 0x3dc5, 0x4b78, 0x0, 0x0);
        gbc.writeMem(0x5217, { 0x51 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x7b79, gbc.sp());
        EXPECT(0x5218, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0286
        gbc.setState(0xb4c2, 0xdee6, 0x9e30, 0x88e4, 0xecc0, 0x83e, 0x1, 0x1);
        gbc.writeMem(0xb4c2, { 0x51 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xdee6, gbc.sp());
        EXPECT(0xb4c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xb4c2));
        // 51 0287
        gbc.setState(0xeff0, 0x1dac, 0x2c30, 0x3ff1, 0xe96d, 0xfa8c, 0x0, 0x0);
        gbc.writeMem(0xeff0, { 0x51 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x1dac, gbc.sp());
        EXPECT(0xeff1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xeff0));
        // 51 0288
        gbc.setState(0xca0d, 0xa1c1, 0x6f70, 0x1847, 0x1162, 0x61e6, 0x1, 0x1);
        gbc.writeMem(0xca0d, { 0x51 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xa1c1, gbc.sp());
        EXPECT(0xca0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xca0d));
        // 51 0289
        gbc.setState(0xb819, 0x439c, 0x6790, 0x7fc5, 0x5f9d, 0x47b8, 0x0, 0x0);
        gbc.writeMem(0xb819, { 0x51 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x439c, gbc.sp());
        EXPECT(0xb81a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xb819));
        // 51 028A
        gbc.setState(0x91ea, 0x661f, 0x6620, 0x1fca, 0xa2aa, 0xad46, 0x0, 0x0);
        gbc.writeMem(0x91ea, { 0x51 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x661f, gbc.sp());
        EXPECT(0x91eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x91ea));
        // 51 028B
        gbc.setState(0xd1e5, 0xb313, 0x49a0, 0x138, 0x25e3, 0x3c4d, 0x1, 0x1);
        gbc.writeMem(0xd1e5, { 0x51 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xb313, gbc.sp());
        EXPECT(0xd1e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xd1e5));
        // 51 028C
        gbc.setState(0x1adc, 0x4ad1, 0x5720, 0xf57d, 0x6d2, 0xfae2, 0x0, 0x1);
        gbc.writeMem(0x1adc, { 0x51 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x4ad1, gbc.sp());
        EXPECT(0x1add, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 028D
        gbc.setState(0x82d2, 0xacaa, 0x5780, 0x21f9, 0xe35, 0x61e8, 0x0, 0x0);
        gbc.writeMem(0x82d2, { 0x51 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xacaa, gbc.sp());
        EXPECT(0x82d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x82d2));
        // 51 028E
        gbc.setState(0x8f3e, 0x9f35, 0x3c30, 0x2b5c, 0x3958, 0xef97, 0x0, 0x1);
        gbc.writeMem(0x8f3e, { 0x51 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x9f35, gbc.sp());
        EXPECT(0x8f3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x8f3e));
        // 51 028F
        gbc.setState(0x31ae, 0x3bb9, 0x2300, 0xb537, 0x3bb3, 0x732d, 0x0, 0x0);
        gbc.writeMem(0x31ae, { 0x51 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x3bb9, gbc.sp());
        EXPECT(0x31af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0290
        gbc.setState(0xeb40, 0x95a3, 0x7880, 0xfe29, 0xef2b, 0xdfe4, 0x0, 0x0);
        gbc.writeMem(0xeb40, { 0x51 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x95a3, gbc.sp());
        EXPECT(0xeb41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xeb40));
        // 51 0291
        gbc.setState(0x1ddf, 0xdfbb, 0xd0, 0x7c69, 0xfd71, 0xec41, 0x0, 0x1);
        gbc.writeMem(0x1ddf, { 0x51 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xdfbb, gbc.sp());
        EXPECT(0x1de0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0292
        gbc.setState(0x181, 0x6214, 0xea80, 0xa7c0, 0x55cd, 0x8981, 0x0, 0x0);
        gbc.writeMem(0x181, { 0x51 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x6214, gbc.sp());
        EXPECT(0x182, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0293
        gbc.setState(0x61d2, 0xedad, 0x15a0, 0x7e1b, 0xdf45, 0x5919, 0x0, 0x0);
        gbc.writeMem(0x61d2, { 0x51 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xedad, gbc.sp());
        EXPECT(0x61d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0294
        gbc.setState(0x25c9, 0x6927, 0xc390, 0xf170, 0xe431, 0x8bdb, 0x0, 0x1);
        gbc.writeMem(0x25c9, { 0x51 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x6927, gbc.sp());
        EXPECT(0x25ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0295
        gbc.setState(0x67e1, 0xde75, 0x2b30, 0x2e23, 0xb67a, 0xddb6, 0x1, 0x0);
        gbc.writeMem(0x67e1, { 0x51 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xde75, gbc.sp());
        EXPECT(0x67e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0296
        gbc.setState(0x88df, 0x6c88, 0x1050, 0xe855, 0x91f1, 0x6ca6, 0x0, 0x0);
        gbc.writeMem(0x88df, { 0x51 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x6c88, gbc.sp());
        EXPECT(0x88e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x88df));
        // 51 0297
        gbc.setState(0x686e, 0x89e1, 0x1a30, 0xbdc5, 0x55ae, 0x2e1d, 0x0, 0x0);
        gbc.writeMem(0x686e, { 0x51 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x89e1, gbc.sp());
        EXPECT(0x686f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0298
        gbc.setState(0xca33, 0xf2f7, 0xdbc0, 0xc808, 0xf3ad, 0xd473, 0x0, 0x0);
        gbc.writeMem(0xca33, { 0x51 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xf2f7, gbc.sp());
        EXPECT(0xca34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xca33));
        // 51 0299
        gbc.setState(0xba8c, 0x4d37, 0x61e0, 0x44a5, 0x8e56, 0xe762, 0x0, 0x1);
        gbc.writeMem(0xba8c, { 0x51 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x4d37, gbc.sp());
        EXPECT(0xba8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xba8c));
        // 51 029A
        gbc.setState(0xe28f, 0x9624, 0x5c0, 0x8e91, 0xe53e, 0xec7b, 0x0, 0x1);
        gbc.writeMem(0xe28f, { 0x51 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x9624, gbc.sp());
        EXPECT(0xe290, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xe28f));
        // 51 029B
        gbc.setState(0x53c2, 0x111c, 0x5790, 0x1d8d, 0x72dc, 0xd45c, 0x0, 0x1);
        gbc.writeMem(0x53c2, { 0x51 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x111c, gbc.sp());
        EXPECT(0x53c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 029C
        gbc.setState(0xad9a, 0xe2e5, 0x21e0, 0xf86c, 0xb26d, 0x4d16, 0x1, 0x0);
        gbc.writeMem(0xad9a, { 0x51 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xe2e5, gbc.sp());
        EXPECT(0xad9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xad9a));
        // 51 029D
        gbc.setState(0x1f5a, 0x59b9, 0xd040, 0x5b82, 0x388a, 0x92ce, 0x0, 0x1);
        gbc.writeMem(0x1f5a, { 0x51 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x59b9, gbc.sp());
        EXPECT(0x1f5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 029E
        gbc.setState(0xb209, 0x16d0, 0xb030, 0x4d95, 0xdac4, 0x7d84, 0x1, 0x0);
        gbc.writeMem(0xb209, { 0x51 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x16d0, gbc.sp());
        EXPECT(0xb20a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xb209));
        // 51 029F
        gbc.setState(0xd752, 0xd5a0, 0x9010, 0xcacd, 0xc1ad, 0x9dc9, 0x0, 0x1);
        gbc.writeMem(0xd752, { 0x51 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xd5a0, gbc.sp());
        EXPECT(0xd753, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xd752));
        // 51 02A0
        gbc.setState(0xac10, 0x94b3, 0x9f90, 0x53c8, 0x754e, 0xe712, 0x1, 0x0);
        gbc.writeMem(0xac10, { 0x51 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x94b3, gbc.sp());
        EXPECT(0xac11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xac10));
        // 51 02A1
        gbc.setState(0xbd2b, 0x70e1, 0xae0, 0xe32b, 0x549b, 0x3c1b, 0x1, 0x0);
        gbc.writeMem(0xbd2b, { 0x51 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x70e1, gbc.sp());
        EXPECT(0xbd2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xbd2b));
        // 51 02A2
        gbc.setState(0x4c07, 0xdb84, 0xbf90, 0xf885, 0x6761, 0x31e6, 0x1, 0x0);
        gbc.writeMem(0x4c07, { 0x51 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xdb84, gbc.sp());
        EXPECT(0x4c08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 02A3
        gbc.setState(0xe50d, 0xece9, 0xf0c0, 0xacbb, 0xae65, 0x1b1f, 0x0, 0x0);
        gbc.writeMem(0xe50d, { 0x51 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xece9, gbc.sp());
        EXPECT(0xe50e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xe50d));
        // 51 02A4
        gbc.setState(0xcd97, 0x32e6, 0xcf50, 0xdf7b, 0x4c12, 0x6331, 0x1, 0x1);
        gbc.writeMem(0xcd97, { 0x51 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x32e6, gbc.sp());
        EXPECT(0xcd98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xcd97));
        // 51 02A5
        gbc.setState(0xee49, 0xf574, 0x2450, 0x531, 0xe58, 0x6300, 0x1, 0x1);
        gbc.writeMem(0xee49, { 0x51 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xf574, gbc.sp());
        EXPECT(0xee4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xee49));
        // 51 02A6
        gbc.setState(0xeba5, 0x73f8, 0x2a10, 0x929a, 0x89be, 0x7de5, 0x0, 0x1);
        gbc.writeMem(0xeba5, { 0x51 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x73f8, gbc.sp());
        EXPECT(0xeba6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xeba5));
        // 51 02A7
        gbc.setState(0x609c, 0xdc1c, 0x95b0, 0x6aea, 0x78db, 0xcb0e, 0x0, 0x1);
        gbc.writeMem(0x609c, { 0x51 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xdc1c, gbc.sp());
        EXPECT(0x609d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 02A8
        gbc.setState(0xbba, 0xcaf9, 0xc5f0, 0xbf54, 0x5c71, 0xc5bb, 0x1, 0x0);
        gbc.writeMem(0xbba, { 0x51 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xcaf9, gbc.sp());
        EXPECT(0xbbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 02AA
        gbc.setState(0xc759, 0xbbbf, 0x6790, 0x3a3e, 0x8fca, 0x111e, 0x1, 0x1);
        gbc.writeMem(0xc759, { 0x51 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xbbbf, gbc.sp());
        EXPECT(0xc75a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xc759));
        // 51 02AB
        gbc.setState(0x62fe, 0x2a92, 0x15b0, 0x96ed, 0x320a, 0x5bc3, 0x0, 0x1);
        gbc.writeMem(0x62fe, { 0x51 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x2a92, gbc.sp());
        EXPECT(0x62ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 02AC
        gbc.setState(0x44ea, 0x60db, 0x3e40, 0x5e6a, 0x7c0f, 0x4dd3, 0x1, 0x1);
        gbc.writeMem(0x44ea, { 0x51 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x60db, gbc.sp());
        EXPECT(0x44eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 02AD
        gbc.setState(0x1d67, 0x33bb, 0x78d0, 0x3c78, 0x5f84, 0x4e19, 0x1, 0x0);
        gbc.writeMem(0x1d67, { 0x51 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x33bb, gbc.sp());
        EXPECT(0x1d68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 02AE
        gbc.setState(0xd93c, 0x606c, 0xfea0, 0xf832, 0xc7c5, 0x24dd, 0x0, 0x1);
        gbc.writeMem(0xd93c, { 0x51 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x606c, gbc.sp());
        EXPECT(0xd93d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xd93c));
        // 51 02AF
        gbc.setState(0x5ca0, 0x6fab, 0x4de0, 0x2b4a, 0xbcbe, 0x68a9, 0x1, 0x0);
        gbc.writeMem(0x5ca0, { 0x51 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x6fab, gbc.sp());
        EXPECT(0x5ca1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 02B0
        gbc.setState(0xe683, 0x3d88, 0x3570, 0xe184, 0xd944, 0x361, 0x0, 0x0);
        gbc.writeMem(0xe683, { 0x51 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x3d88, gbc.sp());
        EXPECT(0xe684, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xe683));
        // 51 02B1
        gbc.setState(0x38c1, 0x2940, 0xa4b0, 0x1c5a, 0xa382, 0x5a66, 0x1, 0x0);
        gbc.writeMem(0x38c1, { 0x51 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x2940, gbc.sp());
        EXPECT(0x38c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 02B2
        gbc.setState(0x8156, 0x5d77, 0xcd80, 0xb019, 0x13ed, 0xae11, 0x0, 0x1);
        gbc.writeMem(0x8156, { 0x51 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x5d77, gbc.sp());
        EXPECT(0x8157, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x8156));
        // 51 02B3
        gbc.setState(0xd310, 0x6d39, 0x650, 0xfb26, 0x8a26, 0x9763, 0x1, 0x1);
        gbc.writeMem(0xd310, { 0x51 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x6d39, gbc.sp());
        EXPECT(0xd311, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xd310));
        // 51 02B4
        gbc.setState(0x7c59, 0xdf6, 0xd4b0, 0x4e0, 0x2a71, 0x7dbd, 0x0, 0x0);
        gbc.writeMem(0x7c59, { 0x51 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xdf6, gbc.sp());
        EXPECT(0x7c5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 02B5
        gbc.setState(0xc060, 0x5ef2, 0x1a70, 0x1e28, 0xce5e, 0x9e3d, 0x1, 0x0);
        gbc.writeMem(0xc060, { 0x51 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x5ef2, gbc.sp());
        EXPECT(0xc061, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xc060));
        // 51 02B6
        gbc.setState(0xbfaf, 0xa276, 0xeb00, 0x1e08, 0xd81a, 0xe3d0, 0x0, 0x1);
        gbc.writeMem(0xbfaf, { 0x51 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xa276, gbc.sp());
        EXPECT(0xbfb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xbfaf));
        // 51 02B7
        gbc.setState(0x7e49, 0x103b, 0xc810, 0x597b, 0xd49e, 0x4a2, 0x0, 0x1);
        gbc.writeMem(0x7e49, { 0x51 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x103b, gbc.sp());
        EXPECT(0x7e4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 02B8
        gbc.setState(0x8142, 0xab6f, 0xf570, 0xbb5b, 0x7cf3, 0xde11, 0x1, 0x0);
        gbc.writeMem(0x8142, { 0x51 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xab6f, gbc.sp());
        EXPECT(0x8143, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x8142));
        // 51 02B9
        gbc.setState(0xa53d, 0x18de, 0xdce0, 0x6d04, 0x8b82, 0x5895, 0x1, 0x0);
        gbc.writeMem(0xa53d, { 0x51 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x18de, gbc.sp());
        EXPECT(0xa53e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xa53d));
        // 51 02BA
        gbc.setState(0x797d, 0xe6ad, 0x9290, 0x7e28, 0x20cf, 0x4416, 0x0, 0x1);
        gbc.writeMem(0x797d, { 0x51 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xe6ad, gbc.sp());
        EXPECT(0x797e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 02BB
        gbc.setState(0x59e9, 0x8fd1, 0x55c0, 0x2d0d, 0xc9ab, 0xd1cc, 0x0, 0x1);
        gbc.writeMem(0x59e9, { 0x51 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x8fd1, gbc.sp());
        EXPECT(0x59ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 02BC
        gbc.setState(0x5f85, 0xa543, 0x94d0, 0x4f10, 0x2954, 0xaeb, 0x1, 0x1);
        gbc.writeMem(0x5f85, { 0x51 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xa543, gbc.sp());
        EXPECT(0x5f86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 02BD
        gbc.setState(0x7203, 0xce86, 0x4be0, 0xb59e, 0x2515, 0x41f7, 0x0, 0x1);
        gbc.writeMem(0x7203, { 0x51 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xce86, gbc.sp());
        EXPECT(0x7204, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 02BE
        gbc.setState(0x1fe5, 0xb88b, 0x3930, 0xd0f6, 0xd64c, 0x2da6, 0x1, 0x0);
        gbc.writeMem(0x1fe5, { 0x51 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xb88b, gbc.sp());
        EXPECT(0x1fe6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 02BF
        gbc.setState(0xb9e, 0xfd3d, 0xbd20, 0xdaca, 0x3d09, 0xe3a5, 0x0, 0x0);
        gbc.writeMem(0xb9e, { 0x51 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xfd3d, gbc.sp());
        EXPECT(0xb9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 02C0
        gbc.setState(0x55ea, 0x1580, 0xdf10, 0x3ed0, 0x9f3a, 0x1fdd, 0x0, 0x0);
        gbc.writeMem(0x55ea, { 0x51 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x1580, gbc.sp());
        EXPECT(0x55eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 02C1
        gbc.setState(0xacc, 0x3da5, 0xf060, 0xc037, 0xf36, 0xc469, 0x1, 0x0);
        gbc.writeMem(0xacc, { 0x51 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x3da5, gbc.sp());
        EXPECT(0xacd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 02C2
        gbc.setState(0x5fd, 0xc2e6, 0xea70, 0x804a, 0xa1fe, 0xf14e, 0x0, 0x0);
        gbc.writeMem(0x5fd, { 0x51 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xc2e6, gbc.sp());
        EXPECT(0x5fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 02C3
        gbc.setState(0x2d5a, 0x5731, 0x6a10, 0xfeb6, 0x3f69, 0x42b, 0x1, 0x0);
        gbc.writeMem(0x2d5a, { 0x51 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x5731, gbc.sp());
        EXPECT(0x2d5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 02C4
        gbc.setState(0x7d9a, 0xead, 0x3520, 0x4057, 0xb028, 0xeedf, 0x0, 0x0);
        gbc.writeMem(0x7d9a, { 0x51 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xead, gbc.sp());
        EXPECT(0x7d9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 02C5
        gbc.setState(0xbb05, 0xf33d, 0xbb50, 0xe7ff, 0xb888, 0x83c8, 0x0, 0x0);
        gbc.writeMem(0xbb05, { 0x51 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xf33d, gbc.sp());
        EXPECT(0xbb06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xbb05));
        // 51 02C6
        gbc.setState(0x65d0, 0x3302, 0x4270, 0xcbdb, 0x8fcb, 0xe6e6, 0x1, 0x1);
        gbc.writeMem(0x65d0, { 0x51 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x3302, gbc.sp());
        EXPECT(0x65d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 02C7
        gbc.setState(0xebc1, 0x2850, 0x7850, 0x1154, 0x8425, 0xbdcd, 0x1, 0x1);
        gbc.writeMem(0xebc1, { 0x51 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x2850, gbc.sp());
        EXPECT(0xebc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xebc1));
        // 51 02C9
        gbc.setState(0xece6, 0xf468, 0xee00, 0xcd6a, 0xae71, 0x5c26, 0x1, 0x0);
        gbc.writeMem(0xece6, { 0x51 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xf468, gbc.sp());
        EXPECT(0xece7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xece6));
        // 51 02CA
        gbc.setState(0x2670, 0xd41, 0x5ff0, 0xe943, 0xfdf2, 0x25b6, 0x0, 0x1);
        gbc.writeMem(0x2670, { 0x51 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xd41, gbc.sp());
        EXPECT(0x2671, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 02CB
        gbc.setState(0x2003, 0x53cb, 0xc460, 0x629e, 0xe9d1, 0xd948, 0x1, 0x1);
        gbc.writeMem(0x2003, { 0x51 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x53cb, gbc.sp());
        EXPECT(0x2004, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 02CC
        gbc.setState(0x151c, 0x484f, 0x1b10, 0xe4fe, 0x471f, 0xe866, 0x0, 0x1);
        gbc.writeMem(0x151c, { 0x51 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x484f, gbc.sp());
        EXPECT(0x151d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 02CD
        gbc.setState(0xd05c, 0x3edc, 0x330, 0xe576, 0x804a, 0x9a7a, 0x1, 0x1);
        gbc.writeMem(0xd05c, { 0x51 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x3edc, gbc.sp());
        EXPECT(0xd05d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xd05c));
        // 51 02CE
        gbc.setState(0xa0c8, 0x8f50, 0x14a0, 0x8b9, 0x9d40, 0xc6a9, 0x1, 0x0);
        gbc.writeMem(0xa0c8, { 0x51 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x8f50, gbc.sp());
        EXPECT(0xa0c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xa0c8));
        // 51 02CF
        gbc.setState(0xaa9b, 0xfd6f, 0x4cb0, 0xd44b, 0xf610, 0xf422, 0x1, 0x1);
        gbc.writeMem(0xaa9b, { 0x51 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xfd6f, gbc.sp());
        EXPECT(0xaa9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xaa9b));
        // 51 02D0
        gbc.setState(0x8e90, 0x1c86, 0xd0, 0x9f18, 0xb0dd, 0xf09c, 0x0, 0x0);
        gbc.writeMem(0x8e90, { 0x51 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x1c86, gbc.sp());
        EXPECT(0x8e91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x8e90));
        // 51 02D1
        gbc.setState(0x63dc, 0xe465, 0x33b0, 0xadd0, 0x58b4, 0x1832, 0x1, 0x0);
        gbc.writeMem(0x63dc, { 0x51 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xe465, gbc.sp());
        EXPECT(0x63dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 02D2
        gbc.setState(0x17b3, 0x561d, 0xce60, 0xbb82, 0x8a09, 0x456a, 0x1, 0x0);
        gbc.writeMem(0x17b3, { 0x51 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x561d, gbc.sp());
        EXPECT(0x17b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 02D3
        gbc.setState(0xd6f2, 0xa05d, 0x9400, 0x83b9, 0x9f09, 0xb79b, 0x0, 0x0);
        gbc.writeMem(0xd6f2, { 0x51 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xa05d, gbc.sp());
        EXPECT(0xd6f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xd6f2));
        // 51 02D4
        gbc.setState(0x7474, 0x9694, 0x3150, 0x46fb, 0x34b9, 0x8c12, 0x0, 0x0);
        gbc.writeMem(0x7474, { 0x51 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x9694, gbc.sp());
        EXPECT(0x7475, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 02D5
        gbc.setState(0xae69, 0x3bfe, 0xbe70, 0x27a1, 0xca9b, 0x684a, 0x1, 0x0);
        gbc.writeMem(0xae69, { 0x51 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x3bfe, gbc.sp());
        EXPECT(0xae6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xae69));
        // 51 02D6
        gbc.setState(0x9944, 0x8f84, 0x9db0, 0x35a0, 0xbd77, 0x7672, 0x1, 0x1);
        gbc.writeMem(0x9944, { 0x51 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x8f84, gbc.sp());
        EXPECT(0x9945, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x9944));
        // 51 02D7
        gbc.setState(0xdbe4, 0xfa19, 0x13b0, 0x71a2, 0x2e0d, 0x23fb, 0x0, 0x1);
        gbc.writeMem(0xdbe4, { 0x51 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xfa19, gbc.sp());
        EXPECT(0xdbe5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xdbe4));
        // 51 02D8
        gbc.setState(0xed56, 0x1da6, 0x4c00, 0x9b20, 0xc116, 0x3ee8, 0x1, 0x1);
        gbc.writeMem(0xed56, { 0x51 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x1da6, gbc.sp());
        EXPECT(0xed57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xed56));
        // 51 02D9
        gbc.setState(0xcb14, 0x28f3, 0x8b50, 0x6107, 0xf7a1, 0x1ba5, 0x1, 0x0);
        gbc.writeMem(0xcb14, { 0x51 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x28f3, gbc.sp());
        EXPECT(0xcb15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xcb14));
        // 51 02DB
        gbc.setState(0xaaea, 0xf94f, 0xf80, 0x79b6, 0x78a, 0x846e, 0x1, 0x1);
        gbc.writeMem(0xaaea, { 0x51 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xf94f, gbc.sp());
        EXPECT(0xaaeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xaaea));
        // 51 02DC
        gbc.setState(0xea4a, 0x2162, 0x7d40, 0x4aee, 0x1350, 0xd8e6, 0x0, 0x1);
        gbc.writeMem(0xea4a, { 0x51 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x2162, gbc.sp());
        EXPECT(0xea4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xea4a));
        // 51 02DD
        gbc.setState(0xa95d, 0x989d, 0x430, 0xd2f6, 0x8104, 0xe0d2, 0x1, 0x1);
        gbc.writeMem(0xa95d, { 0x51 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x989d, gbc.sp());
        EXPECT(0xa95e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xa95d));
        // 51 02DF
        gbc.setState(0xb345, 0x1f2d, 0x4750, 0x9142, 0xe5bd, 0xb46c, 0x1, 0x1);
        gbc.writeMem(0xb345, { 0x51 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x1f2d, gbc.sp());
        EXPECT(0xb346, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xb345));
        // 51 02E0
        gbc.setState(0x36fb, 0x78e8, 0xe0e0, 0x3acd, 0xf50e, 0x8ec, 0x1, 0x0);
        gbc.writeMem(0x36fb, { 0x51 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x78e8, gbc.sp());
        EXPECT(0x36fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 02E1
        gbc.setState(0x8f01, 0xf6a9, 0x5400, 0x6623, 0x43df, 0x7ae9, 0x1, 0x1);
        gbc.writeMem(0x8f01, { 0x51 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xf6a9, gbc.sp());
        EXPECT(0x8f02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x8f01));
        // 51 02E2
        gbc.setState(0x13a0, 0x7b89, 0x7f80, 0xc863, 0xc6bd, 0x6de0, 0x1, 0x0);
        gbc.writeMem(0x13a0, { 0x51 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x7b89, gbc.sp());
        EXPECT(0x13a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 02E3
        gbc.setState(0x6675, 0xd683, 0x20c0, 0x32, 0xcedc, 0x4038, 0x1, 0x0);
        gbc.writeMem(0x6675, { 0x51 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xd683, gbc.sp());
        EXPECT(0x6676, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 02E5
        gbc.setState(0xe68c, 0x8c4c, 0x6fc0, 0x4e9e, 0x2117, 0x8c8b, 0x0, 0x0);
        gbc.writeMem(0xe68c, { 0x51 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x8c4c, gbc.sp());
        EXPECT(0xe68d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xe68c));
        // 51 02E6
        gbc.setState(0xbff0, 0x5dc9, 0x34b0, 0x62a5, 0xa513, 0xd3bb, 0x0, 0x0);
        gbc.writeMem(0xbff0, { 0x51 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x5dc9, gbc.sp());
        EXPECT(0xbff1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xbff0));
        // 51 02E7
        gbc.setState(0x412, 0xe100, 0xac00, 0x485f, 0x3928, 0x9f10, 0x0, 0x0);
        gbc.writeMem(0x412, { 0x51 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xe100, gbc.sp());
        EXPECT(0x413, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 02E8
        gbc.setState(0xa5a1, 0x5441, 0xf730, 0x499c, 0x9d9f, 0x7cbc, 0x0, 0x0);
        gbc.writeMem(0xa5a1, { 0x51 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x5441, gbc.sp());
        EXPECT(0xa5a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xa5a1));
        // 51 02E9
        gbc.setState(0xc1d8, 0xb4c0, 0x380, 0xe058, 0xfdb1, 0x444c, 0x0, 0x1);
        gbc.writeMem(0xc1d8, { 0x51 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xb4c0, gbc.sp());
        EXPECT(0xc1d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xc1d8));
        // 51 02EA
        gbc.setState(0xe3e5, 0xede7, 0x170, 0xe6f2, 0xb49c, 0x5c7f, 0x0, 0x0);
        gbc.writeMem(0xe3e5, { 0x51 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xede7, gbc.sp());
        EXPECT(0xe3e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xe3e5));
        // 51 02EB
        gbc.setState(0x4b4e, 0x3d70, 0x6580, 0xdbaa, 0x46e1, 0x9f6c, 0x1, 0x0);
        gbc.writeMem(0x4b4e, { 0x51 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x3d70, gbc.sp());
        EXPECT(0x4b4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 02EC
        gbc.setState(0xe184, 0xb397, 0xab50, 0x75fd, 0xeee4, 0xe336, 0x1, 0x1);
        gbc.writeMem(0xe184, { 0x51 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xb397, gbc.sp());
        EXPECT(0xe185, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xe184));
        // 51 02ED
        gbc.setState(0xb5b8, 0xf809, 0x5fc0, 0x439b, 0xd52e, 0x546b, 0x1, 0x1);
        gbc.writeMem(0xb5b8, { 0x51 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xf809, gbc.sp());
        EXPECT(0xb5b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xb5b8));
        // 51 02EE
        gbc.setState(0x8042, 0xefab, 0x7f0, 0x7948, 0x6da7, 0x72c, 0x1, 0x1);
        gbc.writeMem(0x8042, { 0x51 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xefab, gbc.sp());
        EXPECT(0x8043, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x8042));
        // 51 02EF
        gbc.setState(0x1f13, 0xbb, 0x38f0, 0x3a36, 0xdba7, 0x7a02, 0x1, 0x0);
        gbc.writeMem(0x1f13, { 0x51 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xbb, gbc.sp());
        EXPECT(0x1f14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 02F0
        gbc.setState(0x4cf2, 0x93ff, 0xecb0, 0xd2c0, 0x39c, 0x8b2f, 0x0, 0x0);
        gbc.writeMem(0x4cf2, { 0x51 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x93ff, gbc.sp());
        EXPECT(0x4cf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 02F1
        gbc.setState(0x29f7, 0x58ed, 0x7a40, 0x301c, 0x4333, 0x65bb, 0x1, 0x1);
        gbc.writeMem(0x29f7, { 0x51 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x58ed, gbc.sp());
        EXPECT(0x29f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 02F2
        gbc.setState(0xb471, 0xd768, 0xdd0, 0x35dd, 0x33f2, 0xa3db, 0x1, 0x0);
        gbc.writeMem(0xb471, { 0x51 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xd768, gbc.sp());
        EXPECT(0xb472, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xb471));
        // 51 02F3
        gbc.setState(0xe10, 0x7951, 0x4c40, 0x899f, 0xa5f, 0x80d2, 0x0, 0x0);
        gbc.writeMem(0xe10, { 0x51 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x7951, gbc.sp());
        EXPECT(0xe11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 02F4
        gbc.setState(0xd2de, 0x601c, 0xd870, 0x5706, 0xb3a7, 0xb974, 0x0, 0x1);
        gbc.writeMem(0xd2de, { 0x51 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x601c, gbc.sp());
        EXPECT(0xd2df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xd2de));
        // 51 02F5
        gbc.setState(0x5cde, 0x7565, 0x98a0, 0x70c, 0x9341, 0x27b, 0x0, 0x1);
        gbc.writeMem(0x5cde, { 0x51 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x7565, gbc.sp());
        EXPECT(0x5cdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 02F6
        gbc.setState(0x8e78, 0x7a09, 0x7da0, 0xae23, 0x47b3, 0x9b3d, 0x0, 0x1);
        gbc.writeMem(0x8e78, { 0x51 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x7a09, gbc.sp());
        EXPECT(0x8e79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x8e78));
        // 51 02F7
        gbc.setState(0xd154, 0x8222, 0x6570, 0x305, 0xabcb, 0xf77c, 0x1, 0x1);
        gbc.writeMem(0xd154, { 0x51 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x8222, gbc.sp());
        EXPECT(0xd155, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xd154));
        // 51 02F8
        gbc.setState(0xaa22, 0x293b, 0xaa60, 0x6a7e, 0x52b7, 0xd955, 0x1, 0x1);
        gbc.writeMem(0xaa22, { 0x51 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x293b, gbc.sp());
        EXPECT(0xaa23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xaa22));
        // 51 02F9
        gbc.setState(0x7f6c, 0x392f, 0xfb00, 0xb581, 0xfad5, 0x6e42, 0x1, 0x1);
        gbc.writeMem(0x7f6c, { 0x51 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x392f, gbc.sp());
        EXPECT(0x7f6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 02FB
        gbc.setState(0x8eac, 0x5c8, 0x9250, 0x8d3a, 0xb9f8, 0x5003, 0x1, 0x0);
        gbc.writeMem(0x8eac, { 0x51 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x5c8, gbc.sp());
        EXPECT(0x8ead, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x8eac));
        // 51 02FC
        gbc.setState(0xa0c8, 0xe633, 0xe6c0, 0x5c8, 0x5bb3, 0x9cc9, 0x1, 0x0);
        gbc.writeMem(0xa0c8, { 0x51 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xe633, gbc.sp());
        EXPECT(0xa0c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xa0c8));
        // 51 02FD
        gbc.setState(0x368c, 0xccff, 0x43a0, 0xa15b, 0x119d, 0x11f1, 0x0, 0x0);
        gbc.writeMem(0x368c, { 0x51 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xccff, gbc.sp());
        EXPECT(0x368d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 02FE
        gbc.setState(0xbc03, 0x600d, 0x9550, 0xcab6, 0xa618, 0x2073, 0x1, 0x1);
        gbc.writeMem(0xbc03, { 0x51 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x600d, gbc.sp());
        EXPECT(0xbc04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xbc03));
        // 51 02FF
        gbc.setState(0x55f8, 0x7d8a, 0x30e0, 0xd06d, 0x745e, 0xfdf1, 0x0, 0x0);
        gbc.writeMem(0x55f8, { 0x51 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x7d8a, gbc.sp());
        EXPECT(0x55f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0300
        gbc.setState(0x943b, 0xc767, 0x93f0, 0x63bb, 0x1fbe, 0xaecb, 0x1, 0x1);
        gbc.writeMem(0x943b, { 0x51 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xc767, gbc.sp());
        EXPECT(0x943c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x943b));
        // 51 0301
        gbc.setState(0xa8e6, 0xde43, 0x8090, 0xe663, 0x3dc8, 0x832d, 0x1, 0x0);
        gbc.writeMem(0xa8e6, { 0x51 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xde43, gbc.sp());
        EXPECT(0xa8e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xa8e6));
        // 51 0302
        gbc.setState(0xbcc7, 0xe224, 0xada0, 0xa8ac, 0x10aa, 0x4b14, 0x0, 0x1);
        gbc.writeMem(0xbcc7, { 0x51 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xe224, gbc.sp());
        EXPECT(0xbcc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xbcc7));
        // 51 0303
        gbc.setState(0xc2cb, 0x554c, 0x4690, 0x73fc, 0xc910, 0x24fc, 0x1, 0x1);
        gbc.writeMem(0xc2cb, { 0x51 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x554c, gbc.sp());
        EXPECT(0xc2cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xc2cb));
        // 51 0304
        gbc.setState(0x358b, 0xdb3c, 0x84c0, 0x6b5f, 0x6475, 0xf3c1, 0x0, 0x1);
        gbc.writeMem(0x358b, { 0x51 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xdb3c, gbc.sp());
        EXPECT(0x358c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0305
        gbc.setState(0x6faa, 0xcd45, 0xbf90, 0x76d9, 0x2d0f, 0x5237, 0x0, 0x0);
        gbc.writeMem(0x6faa, { 0x51 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xcd45, gbc.sp());
        EXPECT(0x6fab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0306
        gbc.setState(0x2737, 0xa9bc, 0x9dd0, 0xf96b, 0x6a6a, 0x2c83, 0x1, 0x1);
        gbc.writeMem(0x2737, { 0x51 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xa9bc, gbc.sp());
        EXPECT(0x2738, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0307
        gbc.setState(0x1b8f, 0xadb2, 0x4810, 0xbd19, 0xfe97, 0xecaf, 0x1, 0x0);
        gbc.writeMem(0x1b8f, { 0x51 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xadb2, gbc.sp());
        EXPECT(0x1b90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0308
        gbc.setState(0x9504, 0x1d57, 0x5e30, 0x3952, 0x1960, 0xbc84, 0x1, 0x0);
        gbc.writeMem(0x9504, { 0x51 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x1d57, gbc.sp());
        EXPECT(0x9505, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x9504));
        // 51 0309
        gbc.setState(0xf43, 0xa3bb, 0xdc90, 0xe2fc, 0x5f8e, 0x1982, 0x1, 0x0);
        gbc.writeMem(0xf43, { 0x51 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xa3bb, gbc.sp());
        EXPECT(0xf44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 030A
        gbc.setState(0x1477, 0x8d56, 0xc160, 0x7fc2, 0x59f, 0x20d2, 0x1, 0x1);
        gbc.writeMem(0x1477, { 0x51 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x8d56, gbc.sp());
        EXPECT(0x1478, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 030B
        gbc.setState(0x284d, 0xe322, 0x53b0, 0xb866, 0x9f84, 0xe126, 0x1, 0x1);
        gbc.writeMem(0x284d, { 0x51 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xe322, gbc.sp());
        EXPECT(0x284e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 030C
        gbc.setState(0xa555, 0x633, 0xf5b0, 0xd92b, 0x5e25, 0x9cf7, 0x0, 0x1);
        gbc.writeMem(0xa555, { 0x51 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x633, gbc.sp());
        EXPECT(0xa556, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xa555));
        // 51 030D
        gbc.setState(0x1fc9, 0x9370, 0x1a50, 0x76e8, 0xda3a, 0xe2f, 0x1, 0x0);
        gbc.writeMem(0x1fc9, { 0x51 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x9370, gbc.sp());
        EXPECT(0x1fca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 030E
        gbc.setState(0x1fd0, 0xaf14, 0x5560, 0x56c8, 0xedb8, 0xc305, 0x1, 0x0);
        gbc.writeMem(0x1fd0, { 0x51 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xaf14, gbc.sp());
        EXPECT(0x1fd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 030F
        gbc.setState(0xe189, 0x674d, 0xc600, 0x4f2a, 0x5435, 0xcee9, 0x1, 0x0);
        gbc.writeMem(0xe189, { 0x51 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x674d, gbc.sp());
        EXPECT(0xe18a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xe189));
        // 51 0310
        gbc.setState(0xdda2, 0xf98d, 0x2460, 0xf2c0, 0xb381, 0x5e75, 0x0, 0x0);
        gbc.writeMem(0xdda2, { 0x51 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xf98d, gbc.sp());
        EXPECT(0xdda3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xdda2));
        // 51 0311
        gbc.setState(0xb822, 0x337e, 0x68f0, 0x6129, 0x36a8, 0x2f0, 0x0, 0x1);
        gbc.writeMem(0xb822, { 0x51 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x337e, gbc.sp());
        EXPECT(0xb823, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xb822));
        // 51 0312
        gbc.setState(0x6c09, 0xf459, 0xe540, 0x554f, 0x634e, 0x3abf, 0x1, 0x1);
        gbc.writeMem(0x6c09, { 0x51 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xf459, gbc.sp());
        EXPECT(0x6c0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0313
        gbc.setState(0x7da5, 0x4377, 0x7ee0, 0xfdce, 0xda3a, 0xaf21, 0x0, 0x0);
        gbc.writeMem(0x7da5, { 0x51 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x4377, gbc.sp());
        EXPECT(0x7da6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0314
        gbc.setState(0x477b, 0xe42c, 0x78d0, 0x9e7f, 0xc3a1, 0xe55, 0x1, 0x1);
        gbc.writeMem(0x477b, { 0x51 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xe42c, gbc.sp());
        EXPECT(0x477c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0315
        gbc.setState(0x7ba4, 0xe4a0, 0x46a0, 0x7089, 0xd0dc, 0xfb6, 0x1, 0x0);
        gbc.writeMem(0x7ba4, { 0x51 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xe4a0, gbc.sp());
        EXPECT(0x7ba5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0316
        gbc.setState(0x8d8e, 0x231c, 0xa190, 0x28ac, 0xe4ba, 0x1f7b, 0x1, 0x1);
        gbc.writeMem(0x8d8e, { 0x51 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x231c, gbc.sp());
        EXPECT(0x8d8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x8d8e));
        // 51 0317
        gbc.setState(0x4699, 0x39ad, 0x9d90, 0x4f2a, 0xd668, 0xe3d7, 0x0, 0x0);
        gbc.writeMem(0x4699, { 0x51 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x39ad, gbc.sp());
        EXPECT(0x469a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0318
        gbc.setState(0xdbf2, 0x5a96, 0x980, 0x378e, 0x2bdd, 0x9d7d, 0x0, 0x0);
        gbc.writeMem(0xdbf2, { 0x51 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x5a96, gbc.sp());
        EXPECT(0xdbf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xdbf2));
        // 51 0319
        gbc.setState(0x3f19, 0x9503, 0x3a20, 0xa2b8, 0xa854, 0xb778, 0x1, 0x0);
        gbc.writeMem(0x3f19, { 0x51 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x9503, gbc.sp());
        EXPECT(0x3f1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 031A
        gbc.setState(0x80ea, 0xdcd, 0xe4a0, 0x551c, 0xee20, 0x4353, 0x1, 0x1);
        gbc.writeMem(0x80ea, { 0x51 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xdcd, gbc.sp());
        EXPECT(0x80eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x80ea));
        // 51 031B
        gbc.setState(0xd759, 0x6300, 0xb840, 0xe183, 0xf4d8, 0x4aed, 0x1, 0x1);
        gbc.writeMem(0xd759, { 0x51 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x6300, gbc.sp());
        EXPECT(0xd75a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xd759));
        // 51 031C
        gbc.setState(0x9d77, 0x75c6, 0x84d0, 0x8465, 0x5edf, 0xc40b, 0x1, 0x1);
        gbc.writeMem(0x9d77, { 0x51 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x75c6, gbc.sp());
        EXPECT(0x9d78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x9d77));
        // 51 031D
        gbc.setState(0xbde0, 0x452, 0x59f0, 0x62ca, 0x2c9d, 0x21f0, 0x0, 0x0);
        gbc.writeMem(0xbde0, { 0x51 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x452, gbc.sp());
        EXPECT(0xbde1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xbde0));
        // 51 031E
        gbc.setState(0x256, 0x5067, 0x490, 0xaa0f, 0x5c28, 0xa68a, 0x1, 0x1);
        gbc.writeMem(0x256, { 0x51 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x5067, gbc.sp());
        EXPECT(0x257, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 031F
        gbc.setState(0x445, 0x3be4, 0x3990, 0x15cf, 0x9e0e, 0x46ca, 0x0, 0x0);
        gbc.writeMem(0x445, { 0x51 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x3be4, gbc.sp());
        EXPECT(0x446, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0320
        gbc.setState(0x92e5, 0x8df9, 0xd430, 0xa085, 0xc20c, 0xaed4, 0x1, 0x1);
        gbc.writeMem(0x92e5, { 0x51 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x8df9, gbc.sp());
        EXPECT(0x92e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x92e5));
        // 51 0321
        gbc.setState(0xeb27, 0x70fd, 0x24c0, 0x5585, 0xf13f, 0xd345, 0x1, 0x1);
        gbc.writeMem(0xeb27, { 0x51 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x70fd, gbc.sp());
        EXPECT(0xeb28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xeb27));
        // 51 0322
        gbc.setState(0x5145, 0x85ec, 0x61d0, 0xb4a6, 0x177, 0xc167, 0x1, 0x1);
        gbc.writeMem(0x5145, { 0x51 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x85ec, gbc.sp());
        EXPECT(0x5146, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0323
        gbc.setState(0x3eff, 0x136, 0x8570, 0xb03a, 0x1c38, 0x8d64, 0x1, 0x1);
        gbc.writeMem(0x3eff, { 0x51 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x136, gbc.sp());
        EXPECT(0x3f00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0324
        gbc.setState(0x44f9, 0x20d3, 0xe400, 0x5553, 0xe679, 0xb5f, 0x0, 0x0);
        gbc.writeMem(0x44f9, { 0x51 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x20d3, gbc.sp());
        EXPECT(0x44fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0325
        gbc.setState(0xedf9, 0x5976, 0xefe0, 0xf171, 0x29ec, 0x5ca, 0x0, 0x0);
        gbc.writeMem(0xedf9, { 0x51 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x5976, gbc.sp());
        EXPECT(0xedfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xedf9));
        // 51 0326
        gbc.setState(0xb54e, 0x713e, 0x8b30, 0x6738, 0x1b6c, 0xb499, 0x0, 0x1);
        gbc.writeMem(0xb54e, { 0x51 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x713e, gbc.sp());
        EXPECT(0xb54f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xb54e));
        // 51 0327
        gbc.setState(0x2bca, 0xcccc, 0xbe10, 0x4e7c, 0xbec4, 0x74ab, 0x1, 0x0);
        gbc.writeMem(0x2bca, { 0x51 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xcccc, gbc.sp());
        EXPECT(0x2bcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0328
        gbc.setState(0x3fd5, 0xd43, 0x50a0, 0x354d, 0xae19, 0x30ab, 0x1, 0x1);
        gbc.writeMem(0x3fd5, { 0x51 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xd43, gbc.sp());
        EXPECT(0x3fd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0329
        gbc.setState(0x7d8c, 0x19b0, 0x2280, 0xf6f9, 0xbacd, 0x2dee, 0x0, 0x1);
        gbc.writeMem(0x7d8c, { 0x51 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x19b0, gbc.sp());
        EXPECT(0x7d8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 032A
        gbc.setState(0x8861, 0x62b7, 0x9b00, 0x6ebe, 0xc4cc, 0x1d46, 0x0, 0x0);
        gbc.writeMem(0x8861, { 0x51 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x62b7, gbc.sp());
        EXPECT(0x8862, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x8861));
        // 51 032B
        gbc.setState(0x550d, 0x988f, 0x2b60, 0xd2af, 0xfcaf, 0x5bd7, 0x0, 0x0);
        gbc.writeMem(0x550d, { 0x51 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x988f, gbc.sp());
        EXPECT(0x550e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 032C
        gbc.setState(0xb2ec, 0x7da2, 0x9190, 0xd674, 0xdcf9, 0x4075, 0x0, 0x0);
        gbc.writeMem(0xb2ec, { 0x51 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x7da2, gbc.sp());
        EXPECT(0xb2ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xb2ec));
        // 51 032D
        gbc.setState(0xc3dc, 0xae01, 0x5e40, 0x8185, 0x3fd8, 0xf0d8, 0x0, 0x1);
        gbc.writeMem(0xc3dc, { 0x51 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xae01, gbc.sp());
        EXPECT(0xc3dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xc3dc));
        // 51 032E
        gbc.setState(0x3344, 0x67f3, 0x8300, 0x61c2, 0x1eef, 0xfc0, 0x0, 0x1);
        gbc.writeMem(0x3344, { 0x51 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x67f3, gbc.sp());
        EXPECT(0x3345, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 032F
        gbc.setState(0x7416, 0x9aac, 0xb340, 0xaca6, 0x9cb1, 0xf757, 0x0, 0x0);
        gbc.writeMem(0x7416, { 0x51 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x9aac, gbc.sp());
        EXPECT(0x7417, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0330
        gbc.setState(0xc930, 0xab19, 0x43e0, 0xeebd, 0xb463, 0x2bce, 0x1, 0x1);
        gbc.writeMem(0xc930, { 0x51 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xab19, gbc.sp());
        EXPECT(0xc931, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xc930));
        // 51 0331
        gbc.setState(0xc0d1, 0x7487, 0xc880, 0x5480, 0xa3c2, 0x8c30, 0x1, 0x0);
        gbc.writeMem(0xc0d1, { 0x51 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x7487, gbc.sp());
        EXPECT(0xc0d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xc0d1));
        // 51 0332
        gbc.setState(0x1859, 0xcf8d, 0x7900, 0x883a, 0x8865, 0x10b0, 0x0, 0x0);
        gbc.writeMem(0x1859, { 0x51 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xcf8d, gbc.sp());
        EXPECT(0x185a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0333
        gbc.setState(0xc5fe, 0x65ee, 0xf5d0, 0x3f33, 0x9287, 0xf59b, 0x0, 0x0);
        gbc.writeMem(0xc5fe, { 0x51 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x65ee, gbc.sp());
        EXPECT(0xc5ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xc5fe));
        // 51 0334
        gbc.setState(0xa73d, 0x7cb2, 0xe990, 0x5ee0, 0x8300, 0xde24, 0x1, 0x1);
        gbc.writeMem(0xa73d, { 0x51 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x7cb2, gbc.sp());
        EXPECT(0xa73e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xa73d));
        // 51 0335
        gbc.setState(0xa877, 0xb9ba, 0xcd10, 0x6f29, 0xad5e, 0x5502, 0x1, 0x0);
        gbc.writeMem(0xa877, { 0x51 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xb9ba, gbc.sp());
        EXPECT(0xa878, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xa877));
        // 51 0336
        gbc.setState(0x8f8f, 0x4ce5, 0x9260, 0xf261, 0x707e, 0x9f79, 0x1, 0x1);
        gbc.writeMem(0x8f8f, { 0x51 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x4ce5, gbc.sp());
        EXPECT(0x8f90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x8f8f));
        // 51 0337
        gbc.setState(0x4f62, 0x7c8f, 0xdcc0, 0x6f87, 0x983a, 0x1e82, 0x0, 0x0);
        gbc.writeMem(0x4f62, { 0x51 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x7c8f, gbc.sp());
        EXPECT(0x4f63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0338
        gbc.setState(0x42df, 0xab7b, 0xd3e0, 0x2ff8, 0x94fa, 0x1ce6, 0x0, 0x1);
        gbc.writeMem(0x42df, { 0x51 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xab7b, gbc.sp());
        EXPECT(0x42e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0339
        gbc.setState(0x52fc, 0xa0d8, 0xb770, 0x9603, 0x4a5b, 0x2341, 0x0, 0x1);
        gbc.writeMem(0x52fc, { 0x51 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xa0d8, gbc.sp());
        EXPECT(0x52fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 033A
        gbc.setState(0xc658, 0x4c1a, 0x3b10, 0x6bfb, 0x37dc, 0xd2c5, 0x1, 0x0);
        gbc.writeMem(0xc658, { 0x51 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x4c1a, gbc.sp());
        EXPECT(0xc659, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xc658));
        // 51 033B
        gbc.setState(0xa29e, 0xe4b, 0x4aa0, 0xd5f7, 0xa3e6, 0x7b83, 0x1, 0x0);
        gbc.writeMem(0xa29e, { 0x51 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xe4b, gbc.sp());
        EXPECT(0xa29f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xa29e));
        // 51 033C
        gbc.setState(0xefba, 0xe436, 0x6030, 0x26e9, 0x2ee0, 0xe71f, 0x1, 0x0);
        gbc.writeMem(0xefba, { 0x51 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xe436, gbc.sp());
        EXPECT(0xefbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xefba));
        // 51 033D
        gbc.setState(0x7621, 0x6c83, 0x5ad0, 0x4e62, 0x30ab, 0x6bf0, 0x0, 0x1);
        gbc.writeMem(0x7621, { 0x51 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x6c83, gbc.sp());
        EXPECT(0x7622, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 033E
        gbc.setState(0x1f50, 0xee7, 0xb2e0, 0x8e70, 0x4341, 0xfcb3, 0x1, 0x1);
        gbc.writeMem(0x1f50, { 0x51 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xee7, gbc.sp());
        EXPECT(0x1f51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 033F
        gbc.setState(0x8092, 0xee, 0xd370, 0x1ea, 0xda86, 0xfbd, 0x0, 0x0);
        gbc.writeMem(0x8092, { 0x51 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xee, gbc.sp());
        EXPECT(0x8093, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x8092));
        // 51 0340
        gbc.setState(0x66e7, 0xd574, 0x3ba0, 0x4a03, 0xa398, 0x9943, 0x1, 0x1);
        gbc.writeMem(0x66e7, { 0x51 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xd574, gbc.sp());
        EXPECT(0x66e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0341
        gbc.setState(0x4ad4, 0xe6c9, 0xe810, 0xe966, 0xa92e, 0x93b3, 0x0, 0x1);
        gbc.writeMem(0x4ad4, { 0x51 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xe6c9, gbc.sp());
        EXPECT(0x4ad5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0342
        gbc.setState(0x8375, 0x7733, 0xa9d0, 0xd3aa, 0x8543, 0x3882, 0x1, 0x1);
        gbc.writeMem(0x8375, { 0x51 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x7733, gbc.sp());
        EXPECT(0x8376, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x8375));
        // 51 0343
        gbc.setState(0x173a, 0xc0e4, 0x7900, 0xcccc, 0x8dbc, 0xef50, 0x0, 0x1);
        gbc.writeMem(0x173a, { 0x51 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xc0e4, gbc.sp());
        EXPECT(0x173b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0344
        gbc.setState(0xaecc, 0x1bce, 0x81f0, 0xa098, 0x8d91, 0x519c, 0x0, 0x0);
        gbc.writeMem(0xaecc, { 0x51 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x1bce, gbc.sp());
        EXPECT(0xaecd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xaecc));
        // 51 0345
        gbc.setState(0xba31, 0x5dfb, 0x9070, 0x873b, 0x4a77, 0xd10f, 0x1, 0x0);
        gbc.writeMem(0xba31, { 0x51 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x5dfb, gbc.sp());
        EXPECT(0xba32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xba31));
        // 51 0346
        gbc.setState(0xa5df, 0x6ca0, 0x43e0, 0xc54f, 0xba99, 0x32f5, 0x1, 0x0);
        gbc.writeMem(0xa5df, { 0x51 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x6ca0, gbc.sp());
        EXPECT(0xa5e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xa5df));
        // 51 0347
        gbc.setState(0x85eb, 0xec86, 0xbef0, 0xef94, 0x583, 0x7045, 0x0, 0x1);
        gbc.writeMem(0x85eb, { 0x51 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xec86, gbc.sp());
        EXPECT(0x85ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x85eb));
        // 51 0348
        gbc.setState(0x9c0a, 0x1702, 0x35e0, 0x9973, 0xf84a, 0x382a, 0x0, 0x0);
        gbc.writeMem(0x9c0a, { 0x51 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x1702, gbc.sp());
        EXPECT(0x9c0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x9c0a));
        // 51 0349
        gbc.setState(0xcb81, 0x8f07, 0xf40, 0x7a25, 0x378c, 0x1057, 0x1, 0x0);
        gbc.writeMem(0xcb81, { 0x51 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x8f07, gbc.sp());
        EXPECT(0xcb82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xcb81));
        // 51 034A
        gbc.setState(0xec88, 0x74ee, 0x7b90, 0xf194, 0x3d48, 0x5031, 0x0, 0x1);
        gbc.writeMem(0xec88, { 0x51 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x74ee, gbc.sp());
        EXPECT(0xec89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xec88));
        // 51 034B
        gbc.setState(0xa42a, 0x5aab, 0x1c80, 0x4b4e, 0x1d64, 0xc075, 0x1, 0x0);
        gbc.writeMem(0xa42a, { 0x51 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x5aab, gbc.sp());
        EXPECT(0xa42b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xa42a));
        // 51 034C
        gbc.setState(0x513b, 0x2e2d, 0x3600, 0x3e35, 0x6e73, 0x34b3, 0x0, 0x0);
        gbc.writeMem(0x513b, { 0x51 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x2e2d, gbc.sp());
        EXPECT(0x513c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 034D
        gbc.setState(0x76da, 0x966d, 0x6480, 0xbb46, 0x440b, 0x5e36, 0x0, 0x0);
        gbc.writeMem(0x76da, { 0x51 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x966d, gbc.sp());
        EXPECT(0x76db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 034F
        gbc.setState(0xbe50, 0xc14b, 0x9cd0, 0xd01f, 0x488b, 0x3496, 0x0, 0x0);
        gbc.writeMem(0xbe50, { 0x51 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xc14b, gbc.sp());
        EXPECT(0xbe51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xbe50));
        // 51 0350
        gbc.setState(0x1fa6, 0x8c55, 0xea00, 0x9b64, 0x7423, 0x5f95, 0x0, 0x1);
        gbc.writeMem(0x1fa6, { 0x51 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x8c55, gbc.sp());
        EXPECT(0x1fa7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0351
        gbc.setState(0x6281, 0x4483, 0x4be0, 0x317e, 0x8085, 0xa2db, 0x1, 0x1);
        gbc.writeMem(0x6281, { 0x51 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x4483, gbc.sp());
        EXPECT(0x6282, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0352
        gbc.setState(0xb1ff, 0x14d6, 0x1020, 0x1698, 0x5afd, 0x3653, 0x0, 0x1);
        gbc.writeMem(0xb1ff, { 0x51 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x14d6, gbc.sp());
        EXPECT(0xb200, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xb1ff));
        // 51 0353
        gbc.setState(0x6351, 0xd7f3, 0xe40, 0xae87, 0xb1e, 0xf651, 0x0, 0x1);
        gbc.writeMem(0x6351, { 0x51 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xd7f3, gbc.sp());
        EXPECT(0x6352, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0354
        gbc.setState(0x92e7, 0x3881, 0xa1c0, 0x2d5c, 0xd3f9, 0x640a, 0x1, 0x0);
        gbc.writeMem(0x92e7, { 0x51 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x3881, gbc.sp());
        EXPECT(0x92e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x92e7));
        // 51 0355
        gbc.setState(0x539b, 0x94e7, 0x6820, 0xc5cb, 0xbf84, 0xe408, 0x1, 0x1);
        gbc.writeMem(0x539b, { 0x51 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x94e7, gbc.sp());
        EXPECT(0x539c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0356
        gbc.setState(0x3ef4, 0x4070, 0x9670, 0xa5f3, 0x7fa0, 0x83df, 0x0, 0x0);
        gbc.writeMem(0x3ef4, { 0x51 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x4070, gbc.sp());
        EXPECT(0x3ef5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0357
        gbc.setState(0x62e4, 0xe3ca, 0x9bc0, 0x82c9, 0x52e1, 0x9768, 0x0, 0x1);
        gbc.writeMem(0x62e4, { 0x51 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xe3ca, gbc.sp());
        EXPECT(0x62e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0358
        gbc.setState(0x6b00, 0x1ff9, 0x2470, 0x2115, 0x4141, 0x3e2f, 0x0, 0x0);
        gbc.writeMem(0x6b00, { 0x51 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x1ff9, gbc.sp());
        EXPECT(0x6b01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0359
        gbc.setState(0xdcb5, 0x70ed, 0x22e0, 0x66e6, 0x36d9, 0x4806, 0x1, 0x1);
        gbc.writeMem(0xdcb5, { 0x51 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x70ed, gbc.sp());
        EXPECT(0xdcb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xdcb5));
        // 51 035A
        gbc.setState(0xcad3, 0xbf65, 0x4210, 0xa9a4, 0xb3ac, 0x4c4e, 0x1, 0x0);
        gbc.writeMem(0xcad3, { 0x51 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xbf65, gbc.sp());
        EXPECT(0xcad4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xcad3));
        // 51 035B
        gbc.setState(0xbebe, 0xb785, 0x75c0, 0xbeba, 0xded5, 0x363c, 0x0, 0x0);
        gbc.writeMem(0xbebe, { 0x51 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xb785, gbc.sp());
        EXPECT(0xbebf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xbebe));
        // 51 035C
        gbc.setState(0xc92b, 0x2e54, 0x4b70, 0x1883, 0xd350, 0xf3fc, 0x1, 0x0);
        gbc.writeMem(0xc92b, { 0x51 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x2e54, gbc.sp());
        EXPECT(0xc92c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xc92b));
        // 51 035D
        gbc.setState(0xb9d6, 0x4999, 0x9640, 0x93a, 0x68aa, 0xdf73, 0x1, 0x1);
        gbc.writeMem(0xb9d6, { 0x51 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x4999, gbc.sp());
        EXPECT(0xb9d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xb9d6));
        // 51 035E
        gbc.setState(0x1f2a, 0x84d6, 0xfef0, 0x8e8b, 0x4fee, 0xf5bb, 0x0, 0x0);
        gbc.writeMem(0x1f2a, { 0x51 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x84d6, gbc.sp());
        EXPECT(0x1f2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 035F
        gbc.setState(0xe1d7, 0xd137, 0xae00, 0xfba1, 0xed11, 0x1b6d, 0x1, 0x1);
        gbc.writeMem(0xe1d7, { 0x51 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xd137, gbc.sp());
        EXPECT(0xe1d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xe1d7));
        // 51 0361
        gbc.setState(0x2775, 0xb8e, 0x3af0, 0x5d9e, 0x2d24, 0x511f, 0x0, 0x0);
        gbc.writeMem(0x2775, { 0x51 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xb8e, gbc.sp());
        EXPECT(0x2776, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0362
        gbc.setState(0xa3b3, 0xce1a, 0x7fa0, 0x1fd, 0xd132, 0x81c5, 0x0, 0x0);
        gbc.writeMem(0xa3b3, { 0x51 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xce1a, gbc.sp());
        EXPECT(0xa3b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xa3b3));
        // 51 0363
        gbc.setState(0xa414, 0xb754, 0xb6a0, 0x3939, 0x64e1, 0x1c56, 0x1, 0x1);
        gbc.writeMem(0xa414, { 0x51 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xb754, gbc.sp());
        EXPECT(0xa415, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xa414));
        // 51 0364
        gbc.setState(0x6eb5, 0x5a26, 0xaf00, 0x7889, 0x7723, 0x39e0, 0x0, 0x1);
        gbc.writeMem(0x6eb5, { 0x51 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x5a26, gbc.sp());
        EXPECT(0x6eb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0365
        gbc.setState(0x6986, 0x9ba0, 0xfcf0, 0x7f6a, 0x4198, 0x187d, 0x0, 0x0);
        gbc.writeMem(0x6986, { 0x51 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x9ba0, gbc.sp());
        EXPECT(0x6987, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0366
        gbc.setState(0xc8bd, 0xaa52, 0xd2e0, 0x21d5, 0x517a, 0x9546, 0x1, 0x0);
        gbc.writeMem(0xc8bd, { 0x51 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xaa52, gbc.sp());
        EXPECT(0xc8be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xc8bd));
        // 51 0367
        gbc.setState(0x1632, 0x2139, 0x1140, 0xd77f, 0xc612, 0xf08d, 0x0, 0x1);
        gbc.writeMem(0x1632, { 0x51 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x2139, gbc.sp());
        EXPECT(0x1633, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0368
        gbc.setState(0x7040, 0x9a0f, 0xa060, 0xcfec, 0xb22e, 0xb3f1, 0x1, 0x0);
        gbc.writeMem(0x7040, { 0x51 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x9a0f, gbc.sp());
        EXPECT(0x7041, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0369
        gbc.setState(0xd6ce, 0xe213, 0x4db0, 0xf80b, 0xf955, 0xcf66, 0x1, 0x0);
        gbc.writeMem(0xd6ce, { 0x51 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xe213, gbc.sp());
        EXPECT(0xd6cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xd6ce));
        // 51 036A
        gbc.setState(0x8df1, 0x5201, 0xbe50, 0x9cb0, 0x1d06, 0x1eba, 0x0, 0x1);
        gbc.writeMem(0x8df1, { 0x51 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x5201, gbc.sp());
        EXPECT(0x8df2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x8df1));
        // 51 036B
        gbc.setState(0xdb88, 0x379d, 0xd5e0, 0xf4f4, 0x4fe7, 0xb9c0, 0x1, 0x1);
        gbc.writeMem(0xdb88, { 0x51 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x379d, gbc.sp());
        EXPECT(0xdb89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xdb88));
        // 51 036C
        gbc.setState(0x50d4, 0x4d76, 0x2410, 0xae02, 0xf0e6, 0x36df, 0x1, 0x0);
        gbc.writeMem(0x50d4, { 0x51 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x4d76, gbc.sp());
        EXPECT(0x50d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 036D
        gbc.setState(0xeb67, 0x355f, 0x56b0, 0x3b10, 0x524e, 0xd65f, 0x1, 0x1);
        gbc.writeMem(0xeb67, { 0x51 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x355f, gbc.sp());
        EXPECT(0xeb68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xeb67));
        // 51 036E
        gbc.setState(0xca99, 0x97df, 0xda00, 0xcd2c, 0xb80c, 0xec70, 0x0, 0x0);
        gbc.writeMem(0xca99, { 0x51 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x97df, gbc.sp());
        EXPECT(0xca9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xca99));
        // 51 036F
        gbc.setState(0x9b19, 0x8c99, 0xe20, 0x1074, 0x1e6f, 0x82b5, 0x1, 0x1);
        gbc.writeMem(0x9b19, { 0x51 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x8c99, gbc.sp());
        EXPECT(0x9b1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x9b19));
        // 51 0370
        gbc.setState(0x85e9, 0xb7d5, 0x5520, 0x418b, 0x360d, 0xcf9b, 0x1, 0x1);
        gbc.writeMem(0x85e9, { 0x51 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xb7d5, gbc.sp());
        EXPECT(0x85ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x85e9));
        // 51 0371
        gbc.setState(0xde0a, 0xc2f3, 0xad60, 0x58db, 0x3753, 0x3439, 0x0, 0x1);
        gbc.writeMem(0xde0a, { 0x51 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xc2f3, gbc.sp());
        EXPECT(0xde0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xde0a));
        // 51 0372
        gbc.setState(0x909f, 0x5ce3, 0xe400, 0xb730, 0xb298, 0xb254, 0x1, 0x1);
        gbc.writeMem(0x909f, { 0x51 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x5ce3, gbc.sp());
        EXPECT(0x90a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x909f));
        // 51 0373
        gbc.setState(0x3ad, 0xdbe, 0x3770, 0xea54, 0x8a01, 0xa54a, 0x1, 0x1);
        gbc.writeMem(0x3ad, { 0x51 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xdbe, gbc.sp());
        EXPECT(0x3ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0374
        gbc.setState(0x7b57, 0x4ba6, 0xf930, 0x9414, 0x3aa9, 0xeb77, 0x1, 0x1);
        gbc.writeMem(0x7b57, { 0x51 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x4ba6, gbc.sp());
        EXPECT(0x7b58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0375
        gbc.setState(0x4859, 0x957b, 0x3450, 0x5a9a, 0xed41, 0x3b1f, 0x1, 0x1);
        gbc.writeMem(0x4859, { 0x51 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x957b, gbc.sp());
        EXPECT(0x485a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0376
        gbc.setState(0x5d4a, 0x53fb, 0x5260, 0x2272, 0xfa15, 0x8b13, 0x1, 0x1);
        gbc.writeMem(0x5d4a, { 0x51 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x53fb, gbc.sp());
        EXPECT(0x5d4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0377
        gbc.setState(0x8e62, 0x8998, 0x8c10, 0x4384, 0x60f0, 0x57f9, 0x0, 0x1);
        gbc.writeMem(0x8e62, { 0x51 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x8998, gbc.sp());
        EXPECT(0x8e63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x8e62));
        // 51 0379
        gbc.setState(0x344e, 0x9e0, 0x6610, 0x441b, 0x2a99, 0xc0f1, 0x0, 0x0);
        gbc.writeMem(0x344e, { 0x51 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x9e0, gbc.sp());
        EXPECT(0x344f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 037A
        gbc.setState(0xc8f7, 0xe985, 0x5ff0, 0x2a01, 0x22c8, 0x3374, 0x1, 0x1);
        gbc.writeMem(0xc8f7, { 0x51 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xe985, gbc.sp());
        EXPECT(0xc8f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xc8f7));
        // 51 037B
        gbc.setState(0xdf5a, 0x1e84, 0xc190, 0x5f4f, 0x2960, 0x7c33, 0x1, 0x0);
        gbc.writeMem(0xdf5a, { 0x51 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x1e84, gbc.sp());
        EXPECT(0xdf5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xdf5a));
        // 51 037C
        gbc.setState(0x1399, 0xf545, 0x8670, 0x4205, 0x6080, 0x3abb, 0x1, 0x1);
        gbc.writeMem(0x1399, { 0x51 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xf545, gbc.sp());
        EXPECT(0x139a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 037D
        gbc.setState(0xaad2, 0xfbaf, 0xbf70, 0xba1a, 0x45b0, 0x74b7, 0x1, 0x1);
        gbc.writeMem(0xaad2, { 0x51 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xfbaf, gbc.sp());
        EXPECT(0xaad3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xaad2));
        // 51 037F
        gbc.setState(0x1be, 0xce91, 0x20f0, 0xceed, 0xff4d, 0xa341, 0x1, 0x0);
        gbc.writeMem(0x1be, { 0x51 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xce91, gbc.sp());
        EXPECT(0x1bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0380
        gbc.setState(0x9166, 0xce70, 0xf4a0, 0x8b5a, 0xd619, 0x2b0c, 0x1, 0x0);
        gbc.writeMem(0x9166, { 0x51 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xce70, gbc.sp());
        EXPECT(0x9167, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x9166));
        // 51 0381
        gbc.setState(0x7b23, 0x2ec9, 0x2bb0, 0xf8bd, 0xc6c6, 0xd749, 0x1, 0x0);
        gbc.writeMem(0x7b23, { 0x51 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x2ec9, gbc.sp());
        EXPECT(0x7b24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0382
        gbc.setState(0x99ca, 0xe59, 0x13a0, 0x4c6c, 0xcaf6, 0x4501, 0x0, 0x0);
        gbc.writeMem(0x99ca, { 0x51 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xe59, gbc.sp());
        EXPECT(0x99cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x99ca));
        // 51 0383
        gbc.setState(0x57f0, 0xe83d, 0xc080, 0x8242, 0xa911, 0x1c56, 0x0, 0x1);
        gbc.writeMem(0x57f0, { 0x51 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xe83d, gbc.sp());
        EXPECT(0x57f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0385
        gbc.setState(0x7139, 0xb176, 0x1c90, 0xcd00, 0xbd8b, 0xae86, 0x0, 0x1);
        gbc.writeMem(0x7139, { 0x51 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xb176, gbc.sp());
        EXPECT(0x713a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0386
        gbc.setState(0x25b2, 0x3669, 0xb030, 0x4f42, 0xe73a, 0x39c8, 0x1, 0x1);
        gbc.writeMem(0x25b2, { 0x51 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x3669, gbc.sp());
        EXPECT(0x25b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0387
        gbc.setState(0x3866, 0xfed2, 0xa880, 0xd9d2, 0xf760, 0x504a, 0x0, 0x1);
        gbc.writeMem(0x3866, { 0x51 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xfed2, gbc.sp());
        EXPECT(0x3867, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0388
        gbc.setState(0x8b7e, 0xad6e, 0x25e0, 0x1869, 0x4164, 0x777c, 0x0, 0x0);
        gbc.writeMem(0x8b7e, { 0x51 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xad6e, gbc.sp());
        EXPECT(0x8b7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x8b7e));
        // 51 0389
        gbc.setState(0x16af, 0xbd5f, 0x9b00, 0x2270, 0x1422, 0x2b8, 0x1, 0x1);
        gbc.writeMem(0x16af, { 0x51 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xbd5f, gbc.sp());
        EXPECT(0x16b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 038A
        gbc.setState(0x1be3, 0x9b31, 0xc7f0, 0x7699, 0xa9b6, 0x7cf2, 0x1, 0x1);
        gbc.writeMem(0x1be3, { 0x51 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x9b31, gbc.sp());
        EXPECT(0x1be4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 038B
        gbc.setState(0x4079, 0x9559, 0xcdc0, 0xfbd6, 0x7376, 0x5309, 0x0, 0x1);
        gbc.writeMem(0x4079, { 0x51 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x9559, gbc.sp());
        EXPECT(0x407a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 038C
        gbc.setState(0xc560, 0x98f, 0xb170, 0xd15c, 0xf373, 0xb11c, 0x0, 0x0);
        gbc.writeMem(0xc560, { 0x51 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x98f, gbc.sp());
        EXPECT(0xc561, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xc560));
        // 51 038D
        gbc.setState(0xc1b4, 0x4cde, 0x4ab0, 0x3e09, 0x7123, 0xfc6f, 0x0, 0x1);
        gbc.writeMem(0xc1b4, { 0x51 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x4cde, gbc.sp());
        EXPECT(0xc1b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xc1b4));
        // 51 038E
        gbc.setState(0x2b4f, 0x8946, 0x13d0, 0x23b9, 0x76b9, 0xfa22, 0x1, 0x1);
        gbc.writeMem(0x2b4f, { 0x51 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x8946, gbc.sp());
        EXPECT(0x2b50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 038F
        gbc.setState(0x1e18, 0x5295, 0xdad0, 0x61f1, 0x2dbd, 0xe1e4, 0x0, 0x1);
        gbc.writeMem(0x1e18, { 0x51 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x5295, gbc.sp());
        EXPECT(0x1e19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0391
        gbc.setState(0x355e, 0x3261, 0x17e0, 0x3540, 0xee66, 0x3b12, 0x1, 0x1);
        gbc.writeMem(0x355e, { 0x51 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x3261, gbc.sp());
        EXPECT(0x355f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0392
        gbc.setState(0x839, 0x53fd, 0xc670, 0x9c9, 0xe552, 0xc4c4, 0x1, 0x1);
        gbc.writeMem(0x839, { 0x51 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x53fd, gbc.sp());
        EXPECT(0x83a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0393
        gbc.setState(0xce7, 0x88f4, 0x95b0, 0xa1e6, 0xb53a, 0x567e, 0x0, 0x0);
        gbc.writeMem(0xce7, { 0x51 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x88f4, gbc.sp());
        EXPECT(0xce8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0395
        gbc.setState(0x557a, 0x67dd, 0x90b0, 0xf97f, 0x4947, 0xa0da, 0x1, 0x1);
        gbc.writeMem(0x557a, { 0x51 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x67dd, gbc.sp());
        EXPECT(0x557b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 0396
        gbc.setState(0x8f56, 0x1c12, 0xd9a0, 0x3f2f, 0x8d41, 0xa803, 0x0, 0x1);
        gbc.writeMem(0x8f56, { 0x51 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x1c12, gbc.sp());
        EXPECT(0x8f57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x8f56));
        // 51 0397
        gbc.setState(0x2ce4, 0xa7f8, 0x4e20, 0x8b5a, 0x389e, 0x6545, 0x1, 0x0);
        gbc.writeMem(0x2ce4, { 0x51 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xa7f8, gbc.sp());
        EXPECT(0x2ce5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0398
        gbc.setState(0x7546, 0x9c83, 0x9440, 0x17d1, 0x73dc, 0xd3a9, 0x0, 0x0);
        gbc.writeMem(0x7546, { 0x51 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x9c83, gbc.sp());
        EXPECT(0x7547, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 0399
        gbc.setState(0x528e, 0x7bd, 0x1330, 0xebf1, 0xd01b, 0x4a89, 0x1, 0x1);
        gbc.writeMem(0x528e, { 0x51 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x7bd, gbc.sp());
        EXPECT(0x528f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 039A
        gbc.setState(0x8cf4, 0x9254, 0xb0b0, 0x1546, 0x18af, 0x429a, 0x0, 0x1);
        gbc.writeMem(0x8cf4, { 0x51 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x9254, gbc.sp());
        EXPECT(0x8cf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x8cf4));
        // 51 039B
        gbc.setState(0x976f, 0x1131, 0x7710, 0x7f9b, 0x92d7, 0x9f35, 0x0, 0x0);
        gbc.writeMem(0x976f, { 0x51 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x1131, gbc.sp());
        EXPECT(0x9770, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x976f));
        // 51 039C
        gbc.setState(0x948c, 0x7a4e, 0x3fb0, 0xd3be, 0x7fe6, 0x5947, 0x1, 0x1);
        gbc.writeMem(0x948c, { 0x51 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x7a4e, gbc.sp());
        EXPECT(0x948d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x948c));
        // 51 039D
        gbc.setState(0x48ae, 0x853, 0x2250, 0xeb31, 0xf31f, 0xd89e, 0x1, 0x0);
        gbc.writeMem(0x48ae, { 0x51 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x853, gbc.sp());
        EXPECT(0x48af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 039E
        gbc.setState(0x2fd, 0xbbf9, 0x5cc0, 0x7294, 0x2e3c, 0x5366, 0x0, 0x1);
        gbc.writeMem(0x2fd, { 0x51 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xbbf9, gbc.sp());
        EXPECT(0x2fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 039F
        gbc.setState(0x95cf, 0xddca, 0xcc00, 0x58d6, 0xcef, 0x2e97, 0x0, 0x0);
        gbc.writeMem(0x95cf, { 0x51 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xddca, gbc.sp());
        EXPECT(0x95d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x95cf));
        // 51 03A0
        gbc.setState(0xb7c7, 0xc146, 0x2120, 0xf2db, 0xc011, 0x9eb4, 0x0, 0x1);
        gbc.writeMem(0xb7c7, { 0x51 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xc146, gbc.sp());
        EXPECT(0xb7c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xb7c7));
        // 51 03A1
        gbc.setState(0x968d, 0x9cba, 0xa700, 0xe77c, 0xdc5f, 0x9f16, 0x0, 0x1);
        gbc.writeMem(0x968d, { 0x51 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x9cba, gbc.sp());
        EXPECT(0x968e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x968d));
        // 51 03A2
        gbc.setState(0xc218, 0x6c86, 0x6c60, 0x8d8a, 0x3ce9, 0x2511, 0x0, 0x1);
        gbc.writeMem(0xc218, { 0x51 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x6c86, gbc.sp());
        EXPECT(0xc219, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xc218));
        // 51 03A3
        gbc.setState(0xcff1, 0x6474, 0x2320, 0xbf70, 0xee92, 0x1be, 0x1, 0x1);
        gbc.writeMem(0xcff1, { 0x51 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x6474, gbc.sp());
        EXPECT(0xcff2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xcff1));
        // 51 03A4
        gbc.setState(0xf5b, 0xb134, 0x1870, 0x9305, 0x6e82, 0xba3f, 0x0, 0x1);
        gbc.writeMem(0xf5b, { 0x51 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xb134, gbc.sp());
        EXPECT(0xf5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 03A5
        gbc.setState(0xe75b, 0xdbcb, 0xdf20, 0x1049, 0x1733, 0x7e35, 0x0, 0x0);
        gbc.writeMem(0xe75b, { 0x51 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xdbcb, gbc.sp());
        EXPECT(0xe75c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xe75b));
        // 51 03A6
        gbc.setState(0xe77a, 0x17be, 0x4e80, 0x6027, 0x3ee, 0xf07c, 0x1, 0x0);
        gbc.writeMem(0xe77a, { 0x51 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x17be, gbc.sp());
        EXPECT(0xe77b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xe77a));
        // 51 03A7
        gbc.setState(0xee51, 0xcf32, 0xb390, 0xff73, 0x4354, 0xec0c, 0x1, 0x0);
        gbc.writeMem(0xee51, { 0x51 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xcf32, gbc.sp());
        EXPECT(0xee52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xee51));
        // 51 03A8
        gbc.setState(0x6af4, 0xb786, 0xc1f0, 0xc674, 0x3ebd, 0x53b7, 0x0, 0x0);
        gbc.writeMem(0x6af4, { 0x51 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xb786, gbc.sp());
        EXPECT(0x6af5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 03A9
        gbc.setState(0xb52f, 0xa834, 0xcfb0, 0x81e4, 0xfabc, 0xd2de, 0x0, 0x1);
        gbc.writeMem(0xb52f, { 0x51 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xa834, gbc.sp());
        EXPECT(0xb530, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xb52f));
        // 51 03AA
        gbc.setState(0x88ec, 0x65cf, 0xa730, 0xe335, 0x99f4, 0xf1f, 0x1, 0x1);
        gbc.writeMem(0x88ec, { 0x51 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x65cf, gbc.sp());
        EXPECT(0x88ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x88ec));
        // 51 03AB
        gbc.setState(0x1101, 0x568d, 0xbb80, 0x68e9, 0x9962, 0xefec, 0x1, 0x0);
        gbc.writeMem(0x1101, { 0x51 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x568d, gbc.sp());
        EXPECT(0x1102, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 03AC
        gbc.setState(0x24ce, 0x71ad, 0x8ea0, 0x4a46, 0x2a91, 0xa919, 0x0, 0x0);
        gbc.writeMem(0x24ce, { 0x51 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x71ad, gbc.sp());
        EXPECT(0x24cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 03AD
        gbc.setState(0xd300, 0xaf5d, 0xdc50, 0xb5b5, 0x6c97, 0x1c6d, 0x0, 0x0);
        gbc.writeMem(0xd300, { 0x51 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xaf5d, gbc.sp());
        EXPECT(0xd301, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xd300));
        // 51 03AE
        gbc.setState(0xc50c, 0x67b5, 0x6f00, 0xd070, 0x2a8f, 0x66ab, 0x1, 0x1);
        gbc.writeMem(0xc50c, { 0x51 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x67b5, gbc.sp());
        EXPECT(0xc50d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xc50c));
        // 51 03AF
        gbc.setState(0x5299, 0x409, 0x9b90, 0x100, 0xc875, 0x98b6, 0x0, 0x0);
        gbc.writeMem(0x5299, { 0x51 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x409, gbc.sp());
        EXPECT(0x529a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 03B0
        gbc.setState(0x434c, 0x9e69, 0xd900, 0x98f2, 0x7e2f, 0xfaaa, 0x1, 0x1);
        gbc.writeMem(0x434c, { 0x51 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x9e69, gbc.sp());
        EXPECT(0x434d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 03B1
        gbc.setState(0x1eb5, 0x4b9c, 0x4a30, 0x36f9, 0x35af, 0x5245, 0x0, 0x1);
        gbc.writeMem(0x1eb5, { 0x51 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x4b9c, gbc.sp());
        EXPECT(0x1eb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 03B2
        gbc.setState(0x773f, 0xba0f, 0x6300, 0xf124, 0x4999, 0x98c5, 0x1, 0x1);
        gbc.writeMem(0x773f, { 0x51 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xba0f, gbc.sp());
        EXPECT(0x7740, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 03B3
        gbc.setState(0x6f01, 0xc47f, 0xba90, 0x746c, 0x27bd, 0xe531, 0x0, 0x1);
        gbc.writeMem(0x6f01, { 0x51 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xc47f, gbc.sp());
        EXPECT(0x6f02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 03B4
        gbc.setState(0x90bd, 0x8b66, 0x4580, 0xf0f4, 0x4a10, 0x41ec, 0x0, 0x1);
        gbc.writeMem(0x90bd, { 0x51 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x8b66, gbc.sp());
        EXPECT(0x90be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x90bd));
        // 51 03B5
        gbc.setState(0x7ca6, 0xd9e4, 0x6d10, 0x3f00, 0x6183, 0x6ec0, 0x0, 0x1);
        gbc.writeMem(0x7ca6, { 0x51 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xd9e4, gbc.sp());
        EXPECT(0x7ca7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 03B6
        gbc.setState(0x62cd, 0xea0e, 0xc30, 0x744b, 0xef61, 0xcaf7, 0x1, 0x1);
        gbc.writeMem(0x62cd, { 0x51 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xea0e, gbc.sp());
        EXPECT(0x62ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 03B7
        gbc.setState(0xb034, 0x33f3, 0xad70, 0x8e5a, 0xdfcb, 0x592b, 0x0, 0x0);
        gbc.writeMem(0xb034, { 0x51 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x33f3, gbc.sp());
        EXPECT(0xb035, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xb034));
        // 51 03B8
        gbc.setState(0x9f15, 0x76b5, 0x72a0, 0x3107, 0xa53f, 0xeccc, 0x1, 0x1);
        gbc.writeMem(0x9f15, { 0x51 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x76b5, gbc.sp());
        EXPECT(0x9f16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x9f15));
        // 51 03B9
        gbc.setState(0x312e, 0x1bb4, 0x9000, 0x3fc2, 0xa682, 0x68a4, 0x1, 0x1);
        gbc.writeMem(0x312e, { 0x51 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x1bb4, gbc.sp());
        EXPECT(0x312f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 03BA
        gbc.setState(0x357a, 0xada8, 0xa9c0, 0xb68e, 0x68c6, 0x46b3, 0x0, 0x0);
        gbc.writeMem(0x357a, { 0x51 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xada8, gbc.sp());
        EXPECT(0x357b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 03BB
        gbc.setState(0x1544, 0x5dbf, 0xe60, 0xd4e9, 0x445a, 0xc276, 0x1, 0x1);
        gbc.writeMem(0x1544, { 0x51 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x5dbf, gbc.sp());
        EXPECT(0x1545, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 03BC
        gbc.setState(0x48a8, 0xf697, 0x30d0, 0x4656, 0xea7c, 0xd6c2, 0x0, 0x1);
        gbc.writeMem(0x48a8, { 0x51 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xf697, gbc.sp());
        EXPECT(0x48a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 03BD
        gbc.setState(0x42ed, 0x88f9, 0x9a00, 0xbd58, 0xbf62, 0x8e72, 0x0, 0x0);
        gbc.writeMem(0x42ed, { 0x51 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x88f9, gbc.sp());
        EXPECT(0x42ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 03BE
        gbc.setState(0x932f, 0x5ed4, 0xdf00, 0x2a62, 0x9a97, 0x777c, 0x0, 0x1);
        gbc.writeMem(0x932f, { 0x51 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x5ed4, gbc.sp());
        EXPECT(0x9330, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x932f));
        // 51 03BF
        gbc.setState(0x2986, 0x46d2, 0x7b30, 0x92e7, 0x6506, 0x6931, 0x1, 0x1);
        gbc.writeMem(0x2986, { 0x51 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x46d2, gbc.sp());
        EXPECT(0x2987, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 03C0
        gbc.setState(0xb3dc, 0x2325, 0x6fd0, 0x949e, 0xe5f4, 0x7516, 0x1, 0x0);
        gbc.writeMem(0xb3dc, { 0x51 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x2325, gbc.sp());
        EXPECT(0xb3dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xb3dc));
        // 51 03C1
        gbc.setState(0x54a8, 0xb262, 0x4240, 0xefc9, 0x74c0, 0x2f07, 0x0, 0x1);
        gbc.writeMem(0x54a8, { 0x51 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xb262, gbc.sp());
        EXPECT(0x54a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 03C2
        gbc.setState(0x2171, 0x6d4d, 0xe360, 0xec2c, 0x52de, 0xa74f, 0x0, 0x1);
        gbc.writeMem(0x2171, { 0x51 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x6d4d, gbc.sp());
        EXPECT(0x2172, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 03C3
        gbc.setState(0x4c29, 0x4a6f, 0xa500, 0xef6c, 0x103f, 0xf46, 0x0, 0x0);
        gbc.writeMem(0x4c29, { 0x51 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x4a6f, gbc.sp());
        EXPECT(0x4c2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 03C4
        gbc.setState(0x3c0b, 0xe99f, 0x6b40, 0x7e67, 0xc454, 0xe9b4, 0x0, 0x1);
        gbc.writeMem(0x3c0b, { 0x51 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xe99f, gbc.sp());
        EXPECT(0x3c0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 03C6
        gbc.setState(0x9588, 0x5fe7, 0x60c0, 0xdc5f, 0xf597, 0x4687, 0x1, 0x0);
        gbc.writeMem(0x9588, { 0x51 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x5fe7, gbc.sp());
        EXPECT(0x9589, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x9588));
        // 51 03C7
        gbc.setState(0xcdcf, 0xf25f, 0xad90, 0x90a4, 0x26b2, 0x5fb, 0x0, 0x0);
        gbc.writeMem(0xcdcf, { 0x51 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xf25f, gbc.sp());
        EXPECT(0xcdd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xcdcf));
        // 51 03C8
        gbc.setState(0x2080, 0x17eb, 0x34e0, 0xc5b1, 0xc994, 0x1b0f, 0x0, 0x1);
        gbc.writeMem(0x2080, { 0x51 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x17eb, gbc.sp());
        EXPECT(0x2081, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 03C9
        gbc.setState(0xea5, 0xa7ac, 0xe7f0, 0x10cc, 0xd7c3, 0xc328, 0x0, 0x0);
        gbc.writeMem(0xea5, { 0x51 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xa7ac, gbc.sp());
        EXPECT(0xea6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 03CA
        gbc.setState(0x7419, 0x185c, 0x5940, 0x484c, 0x160f, 0x973b, 0x0, 0x0);
        gbc.writeMem(0x7419, { 0x51 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x185c, gbc.sp());
        EXPECT(0x741a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 03CB
        gbc.setState(0xe1da, 0x9ecb, 0x6f90, 0x8f82, 0xd8c3, 0x636, 0x1, 0x0);
        gbc.writeMem(0xe1da, { 0x51 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x9ecb, gbc.sp());
        EXPECT(0xe1db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xe1da));
        // 51 03CC
        gbc.setState(0xdc52, 0x4774, 0x4940, 0x21af, 0xcf0b, 0xd3db, 0x1, 0x1);
        gbc.writeMem(0xdc52, { 0x51 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x4774, gbc.sp());
        EXPECT(0xdc53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xdc52));
        // 51 03CD
        gbc.setState(0x215e, 0x4dc8, 0xb0a0, 0x78ed, 0x7599, 0x457c, 0x0, 0x1);
        gbc.writeMem(0x215e, { 0x51 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x4dc8, gbc.sp());
        EXPECT(0x215f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 03CE
        gbc.setState(0x10c9, 0xcb45, 0xe6c0, 0xf380, 0x7f3a, 0xa1cc, 0x0, 0x1);
        gbc.writeMem(0x10c9, { 0x51 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xcb45, gbc.sp());
        EXPECT(0x10ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 03CF
        gbc.setState(0xd1ca, 0xb598, 0xd200, 0x2f5b, 0x5307, 0xae0a, 0x1, 0x0);
        gbc.writeMem(0xd1ca, { 0x51 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xb598, gbc.sp());
        EXPECT(0xd1cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xd1ca));
        // 51 03D0
        gbc.setState(0x9c54, 0x36e3, 0xa600, 0x8a2c, 0x5ea3, 0x76ca, 0x0, 0x1);
        gbc.writeMem(0x9c54, { 0x51 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x36e3, gbc.sp());
        EXPECT(0x9c55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x9c54));
        // 51 03D1
        gbc.setState(0x555a, 0xc89a, 0xf9f0, 0x216a, 0x2835, 0xa001, 0x1, 0x0);
        gbc.writeMem(0x555a, { 0x51 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xc89a, gbc.sp());
        EXPECT(0x555b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 03D2
        gbc.setState(0xdf1, 0x86ce, 0x640, 0x4780, 0xcce, 0xd3f4, 0x0, 0x0);
        gbc.writeMem(0xdf1, { 0x51 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x86ce, gbc.sp());
        EXPECT(0xdf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 03D3
        gbc.setState(0x1026, 0x8126, 0xa9f0, 0xc645, 0xaaa9, 0x7f9a, 0x1, 0x1);
        gbc.writeMem(0x1026, { 0x51 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x8126, gbc.sp());
        EXPECT(0x1027, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 03D4
        gbc.setState(0x4061, 0x4adf, 0xc180, 0xbcce, 0xf8f5, 0x6eff, 0x1, 0x1);
        gbc.writeMem(0x4061, { 0x51 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x4adf, gbc.sp());
        EXPECT(0x4062, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 03D5
        gbc.setState(0x17b3, 0x8436, 0x4710, 0xe4e0, 0x4823, 0xc331, 0x0, 0x1);
        gbc.writeMem(0x17b3, { 0x51 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x8436, gbc.sp());
        EXPECT(0x17b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 03D6
        gbc.setState(0x2352, 0x2ad, 0x4e80, 0xa4ea, 0xfac8, 0xd70b, 0x0, 0x0);
        gbc.writeMem(0x2352, { 0x51 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x2ad, gbc.sp());
        EXPECT(0x2353, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 03D7
        gbc.setState(0xe1dd, 0x73f7, 0x8ae0, 0x956c, 0x1da7, 0xb6b5, 0x0, 0x0);
        gbc.writeMem(0xe1dd, { 0x51 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x73f7, gbc.sp());
        EXPECT(0xe1de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xe1dd));
        // 51 03D8
        gbc.setState(0xa849, 0x785d, 0xb7e0, 0x49e0, 0x3827, 0xe2d8, 0x0, 0x0);
        gbc.writeMem(0xa849, { 0x51 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x785d, gbc.sp());
        EXPECT(0xa84a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xa849));
        // 51 03D9
        gbc.setState(0x1046, 0xc69, 0x4f0, 0xbdb, 0xdb5a, 0x8411, 0x0, 0x0);
        gbc.writeMem(0x1046, { 0x51 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xc69, gbc.sp());
        EXPECT(0x1047, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 03DA
        gbc.setState(0xca7c, 0x2cb0, 0x69a0, 0x3503, 0xd1e3, 0xb07a, 0x0, 0x0);
        gbc.writeMem(0xca7c, { 0x51 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x2cb0, gbc.sp());
        EXPECT(0xca7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xca7c));
        // 51 03DB
        gbc.setState(0x3d1c, 0xae8f, 0x7b80, 0x2388, 0x68b8, 0x4d6c, 0x1, 0x0);
        gbc.writeMem(0x3d1c, { 0x51 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xae8f, gbc.sp());
        EXPECT(0x3d1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 03DC
        gbc.setState(0x7a5f, 0x511f, 0x3790, 0x3cfc, 0xd3d7, 0xd2ba, 0x0, 0x0);
        gbc.writeMem(0x7a5f, { 0x51 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x511f, gbc.sp());
        EXPECT(0x7a60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 03DD
        gbc.setState(0x2f60, 0x4a60, 0x6360, 0x93e, 0xb5a, 0x2c24, 0x0, 0x0);
        gbc.writeMem(0x2f60, { 0x51 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x4a60, gbc.sp());
        EXPECT(0x2f61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 51 03DE
        gbc.setState(0xe191, 0x4465, 0x4750, 0xbdb4, 0x73fc, 0xfea4, 0x0, 0x0);
        gbc.writeMem(0xe191, { 0x51 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x4465, gbc.sp());
        EXPECT(0xe192, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xe191));
        // 51 03DF
        gbc.setState(0x3321, 0xee20, 0x8590, 0x9c37, 0x602a, 0xac64, 0x1, 0x0);
        gbc.writeMem(0x3321, { 0x51 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xee20, gbc.sp());
        EXPECT(0x3322, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 03E1
        gbc.setState(0xc2f7, 0xcd02, 0x4f00, 0x3fc3, 0xc93, 0xcdf8, 0x0, 0x0);
        gbc.writeMem(0xc2f7, { 0x51 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xcd02, gbc.sp());
        EXPECT(0xc2f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xc2f7));
        // 51 03E5
        gbc.setState(0x743f, 0x3f7, 0xbb90, 0x1df, 0x7df2, 0x1ac1, 0x0, 0x1);
        gbc.writeMem(0x743f, { 0x51 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x3f7, gbc.sp());
        EXPECT(0x7440, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 51 03E6
        gbc.setState(0x6fb6, 0xfb72, 0xf90, 0x6bb5, 0x32c9, 0xbee6, 0x1, 0x0);
        gbc.writeMem(0x6fb6, { 0x51 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xfb72, gbc.sp());
        EXPECT(0x6fb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
    }
