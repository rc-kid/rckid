    TEST(gbcemu, opcode_61) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 61 0000
        gbc.setState(0xe757, 0x2ee7, 0x6f30, 0xabf1, 0x9abc, 0xfb3f, 0x1, 0x1);
        gbc.writeMem(0xe757, { 0x61 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x2ee7, gbc.sp());
        EXPECT(0xe758, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xe757));
        // 61 0001
        gbc.setState(0x4cef, 0xc6d7, 0xb9d0, 0xd0a0, 0x6d15, 0xe44e, 0x1, 0x1);
        gbc.writeMem(0x4cef, { 0x61 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xc6d7, gbc.sp());
        EXPECT(0x4cf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0002
        gbc.setState(0x83e0, 0x8874, 0x82b0, 0xe19, 0x749, 0x249b, 0x1, 0x1);
        gbc.writeMem(0x83e0, { 0x61 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x8874, gbc.sp());
        EXPECT(0x83e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x83e0));
        // 61 0003
        gbc.setState(0x53d3, 0x8e97, 0xe6d0, 0x43ef, 0x5591, 0x686e, 0x0, 0x0);
        gbc.writeMem(0x53d3, { 0x61 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x8e97, gbc.sp());
        EXPECT(0x53d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0004
        gbc.setState(0xb208, 0x55d3, 0x7bd0, 0x1b8b, 0xda1c, 0x9629, 0x1, 0x1);
        gbc.writeMem(0xb208, { 0x61 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x55d3, gbc.sp());
        EXPECT(0xb209, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xb208));
        // 61 0005
        gbc.setState(0x6986, 0x481a, 0x7290, 0x8246, 0xc85b, 0x4e61, 0x1, 0x0);
        gbc.writeMem(0x6986, { 0x61 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x481a, gbc.sp());
        EXPECT(0x6987, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0007
        gbc.setState(0xde1d, 0x9fdb, 0x93a0, 0x1e6d, 0xe87c, 0x122f, 0x1, 0x0);
        gbc.writeMem(0xde1d, { 0x61 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x9fdb, gbc.sp());
        EXPECT(0xde1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xde1d));
        // 61 0008
        gbc.setState(0x9a44, 0x4ed7, 0x33c0, 0xf5d6, 0x1ce9, 0xc482, 0x1, 0x1);
        gbc.writeMem(0x9a44, { 0x61 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x4ed7, gbc.sp());
        EXPECT(0x9a45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x9a44));
        // 61 0009
        gbc.setState(0xee33, 0x8b8f, 0x1860, 0x110, 0x8f2a, 0xbeb2, 0x1, 0x1);
        gbc.writeMem(0xee33, { 0x61 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x8b8f, gbc.sp());
        EXPECT(0xee34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xee33));
        // 61 000A
        gbc.setState(0x3161, 0xed75, 0xeaf0, 0xa9f6, 0x1d13, 0x61c0, 0x0, 0x1);
        gbc.writeMem(0x3161, { 0x61 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xed75, gbc.sp());
        EXPECT(0x3162, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 000B
        gbc.setState(0x3cda, 0xdc7a, 0x2500, 0x31e7, 0x282e, 0x37d5, 0x0, 0x1);
        gbc.writeMem(0x3cda, { 0x61 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xdc7a, gbc.sp());
        EXPECT(0x3cdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 000C
        gbc.setState(0x50ff, 0xf2e3, 0x3a10, 0xe23b, 0x15ee, 0x5b3, 0x1, 0x0);
        gbc.writeMem(0x50ff, { 0x61 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xf2e3, gbc.sp());
        EXPECT(0x5100, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 000D
        gbc.setState(0x5f49, 0xf3d8, 0xe500, 0x6061, 0x9fd1, 0x8178, 0x0, 0x0);
        gbc.writeMem(0x5f49, { 0x61 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xf3d8, gbc.sp());
        EXPECT(0x5f4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 000E
        gbc.setState(0xb75e, 0xf1d9, 0xfeb0, 0xb34e, 0xef01, 0x135c, 0x1, 0x0);
        gbc.writeMem(0xb75e, { 0x61 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xf1d9, gbc.sp());
        EXPECT(0xb75f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xb75e));
        // 61 000F
        gbc.setState(0xae2e, 0x7ec7, 0x8840, 0x5415, 0x9437, 0x97a8, 0x0, 0x1);
        gbc.writeMem(0xae2e, { 0x61 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x7ec7, gbc.sp());
        EXPECT(0xae2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xae2e));
        // 61 0010
        gbc.setState(0x4d4d, 0xeb11, 0x1c30, 0x9b9a, 0xdbd3, 0x92da, 0x1, 0x1);
        gbc.writeMem(0x4d4d, { 0x61 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xeb11, gbc.sp());
        EXPECT(0x4d4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0011
        gbc.setState(0xdf4b, 0xae00, 0xaaa0, 0x388e, 0x3223, 0x29ec, 0x0, 0x1);
        gbc.writeMem(0xdf4b, { 0x61 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xae00, gbc.sp());
        EXPECT(0xdf4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xdf4b));
        // 61 0012
        gbc.setState(0x4962, 0xa7, 0xe6d0, 0x883b, 0x7ad7, 0x4eff, 0x1, 0x0);
        gbc.writeMem(0x4962, { 0x61 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xa7, gbc.sp());
        EXPECT(0x4963, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0013
        gbc.setState(0xe467, 0x7f4e, 0x5c80, 0x4a12, 0xa990, 0xfa32, 0x0, 0x1);
        gbc.writeMem(0xe467, { 0x61 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x7f4e, gbc.sp());
        EXPECT(0xe468, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xe467));
        // 61 0014
        gbc.setState(0x92a6, 0x538c, 0x1d60, 0x24c1, 0xc435, 0x6bf0, 0x0, 0x0);
        gbc.writeMem(0x92a6, { 0x61 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x538c, gbc.sp());
        EXPECT(0x92a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x92a6));
        // 61 0016
        gbc.setState(0xa3be, 0x1b30, 0xe180, 0x290d, 0xe8bc, 0x69ac, 0x0, 0x0);
        gbc.writeMem(0xa3be, { 0x61 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x1b30, gbc.sp());
        EXPECT(0xa3bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xa3be));
        // 61 0017
        gbc.setState(0x9132, 0x2aea, 0x20f0, 0xdeaa, 0x1e16, 0x5c33, 0x0, 0x1);
        gbc.writeMem(0x9132, { 0x61 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x2aea, gbc.sp());
        EXPECT(0x9133, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x9132));
        // 61 0018
        gbc.setState(0x6879, 0xe754, 0x48e0, 0x150f, 0x7539, 0xdc04, 0x1, 0x0);
        gbc.writeMem(0x6879, { 0x61 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xe754, gbc.sp());
        EXPECT(0x687a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0019
        gbc.setState(0x3b80, 0x50da, 0xc9d0, 0x367b, 0xf060, 0x80e6, 0x0, 0x1);
        gbc.writeMem(0x3b80, { 0x61 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x50da, gbc.sp());
        EXPECT(0x3b81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 001A
        gbc.setState(0xd688, 0x829a, 0x52d0, 0x9ad, 0x7d6f, 0x15fd, 0x0, 0x1);
        gbc.writeMem(0xd688, { 0x61 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x829a, gbc.sp());
        EXPECT(0xd689, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xd688));
        // 61 001B
        gbc.setState(0x1b3b, 0xcd49, 0x9f20, 0xc2e4, 0x8d0c, 0x26af, 0x1, 0x0);
        gbc.writeMem(0x1b3b, { 0x61 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xcd49, gbc.sp());
        EXPECT(0x1b3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 001C
        gbc.setState(0x8408, 0x39b6, 0xd210, 0x2b46, 0x9b5b, 0x7b5e, 0x0, 0x0);
        gbc.writeMem(0x8408, { 0x61 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x39b6, gbc.sp());
        EXPECT(0x8409, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x8408));
        // 61 001D
        gbc.setState(0xd6d5, 0x2f8f, 0xcda0, 0xf6a3, 0xb29c, 0x13af, 0x0, 0x0);
        gbc.writeMem(0xd6d5, { 0x61 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x2f8f, gbc.sp());
        EXPECT(0xd6d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xd6d5));
        // 61 001E
        gbc.setState(0x94fb, 0xffa5, 0x3300, 0xf092, 0x4928, 0xa28c, 0x1, 0x1);
        gbc.writeMem(0x94fb, { 0x61 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xffa5, gbc.sp());
        EXPECT(0x94fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x94fb));
        // 61 001F
        gbc.setState(0x50ce, 0xfe3d, 0xc730, 0xbed, 0xae15, 0xef86, 0x1, 0x0);
        gbc.writeMem(0x50ce, { 0x61 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xfe3d, gbc.sp());
        EXPECT(0x50cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0020
        gbc.setState(0x9f, 0x6cd5, 0x8410, 0xab1c, 0xdaf9, 0xddfa, 0x1, 0x1);
        gbc.writeMem(0x9f, { 0x61 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x6cd5, gbc.sp());
        EXPECT(0xa0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0022
        gbc.setState(0x41f1, 0x62a0, 0x78c0, 0x2c86, 0x9563, 0xdb71, 0x0, 0x0);
        gbc.writeMem(0x41f1, { 0x61 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x62a0, gbc.sp());
        EXPECT(0x41f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0023
        gbc.setState(0x4989, 0xdb3f, 0xfcc0, 0xc99a, 0x1c6a, 0xc75e, 0x0, 0x1);
        gbc.writeMem(0x4989, { 0x61 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xdb3f, gbc.sp());
        EXPECT(0x498a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0024
        gbc.setState(0xea64, 0x8727, 0xc110, 0x4e9e, 0x2e17, 0x1b62, 0x0, 0x1);
        gbc.writeMem(0xea64, { 0x61 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x8727, gbc.sp());
        EXPECT(0xea65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xea64));
        // 61 0025
        gbc.setState(0xd8c1, 0x316, 0x2d00, 0x76a8, 0x7630, 0x2c2b, 0x0, 0x0);
        gbc.writeMem(0xd8c1, { 0x61 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x316, gbc.sp());
        EXPECT(0xd8c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xd8c1));
        // 61 0026
        gbc.setState(0x1040, 0x69d5, 0x6750, 0x6834, 0x8cf8, 0x4d2f, 0x1, 0x1);
        gbc.writeMem(0x1040, { 0x61 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x69d5, gbc.sp());
        EXPECT(0x1041, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0027
        gbc.setState(0x1ec8, 0xd8f0, 0xe940, 0xc466, 0xc8ee, 0x6d38, 0x0, 0x1);
        gbc.writeMem(0x1ec8, { 0x61 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xd8f0, gbc.sp());
        EXPECT(0x1ec9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0028
        gbc.setState(0x8e3a, 0xc15c, 0xac00, 0xe99f, 0xe7f3, 0xc231, 0x1, 0x1);
        gbc.writeMem(0x8e3a, { 0x61 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xc15c, gbc.sp());
        EXPECT(0x8e3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x8e3a));
        // 61 0029
        gbc.setState(0x4995, 0x788a, 0xdd0, 0xdbf6, 0x3ea, 0xf7c4, 0x0, 0x1);
        gbc.writeMem(0x4995, { 0x61 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x788a, gbc.sp());
        EXPECT(0x4996, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 002A
        gbc.setState(0xe588, 0x61ca, 0x8110, 0x94f6, 0x8396, 0x8b07, 0x0, 0x1);
        gbc.writeMem(0xe588, { 0x61 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x61ca, gbc.sp());
        EXPECT(0xe589, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xe588));
        // 61 002B
        gbc.setState(0x3838, 0x25e6, 0x68a0, 0x50ab, 0x937c, 0xa520, 0x0, 0x0);
        gbc.writeMem(0x3838, { 0x61 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x25e6, gbc.sp());
        EXPECT(0x3839, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 002C
        gbc.setState(0xc2b3, 0x376c, 0x2ef0, 0x9bf9, 0xa6c, 0x46d2, 0x1, 0x1);
        gbc.writeMem(0xc2b3, { 0x61 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x376c, gbc.sp());
        EXPECT(0xc2b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xc2b3));
        // 61 002D
        gbc.setState(0xdaf9, 0x6e75, 0xd150, 0xc2b3, 0xf210, 0xfaf1, 0x0, 0x0);
        gbc.writeMem(0xdaf9, { 0x61 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x6e75, gbc.sp());
        EXPECT(0xdafa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xdaf9));
        // 61 002E
        gbc.setState(0x1234, 0x9462, 0x2490, 0x2a7d, 0x593, 0xf23b, 0x0, 0x1);
        gbc.writeMem(0x1234, { 0x61 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x9462, gbc.sp());
        EXPECT(0x1235, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 002F
        gbc.setState(0x7893, 0xf2bf, 0xa270, 0xac04, 0xdf99, 0x29c8, 0x1, 0x1);
        gbc.writeMem(0x7893, { 0x61 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xf2bf, gbc.sp());
        EXPECT(0x7894, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0030
        gbc.setState(0xc1c7, 0xc5a, 0xdec0, 0x6c35, 0x4974, 0xcd45, 0x0, 0x1);
        gbc.writeMem(0xc1c7, { 0x61 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xc5a, gbc.sp());
        EXPECT(0xc1c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xc1c7));
        // 61 0031
        gbc.setState(0x562, 0x628a, 0x62b0, 0xf156, 0x1ae, 0x1ee5, 0x0, 0x1);
        gbc.writeMem(0x562, { 0x61 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x628a, gbc.sp());
        EXPECT(0x563, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0032
        gbc.setState(0x68e8, 0x8cad, 0x90, 0x978f, 0x9966, 0xa526, 0x1, 0x1);
        gbc.writeMem(0x68e8, { 0x61 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x8cad, gbc.sp());
        EXPECT(0x68e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0033
        gbc.setState(0x36b8, 0x64c, 0xc140, 0x802b, 0xe6b3, 0x7528, 0x0, 0x1);
        gbc.writeMem(0x36b8, { 0x61 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x64c, gbc.sp());
        EXPECT(0x36b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0034
        gbc.setState(0x2bf0, 0x6cbc, 0x6b70, 0x5879, 0xec57, 0x54ef, 0x1, 0x1);
        gbc.writeMem(0x2bf0, { 0x61 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x6cbc, gbc.sp());
        EXPECT(0x2bf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0035
        gbc.setState(0xa352, 0x1dd5, 0x8ea0, 0x5a7e, 0xac2b, 0x2676, 0x0, 0x1);
        gbc.writeMem(0xa352, { 0x61 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x1dd5, gbc.sp());
        EXPECT(0xa353, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xa352));
        // 61 0036
        gbc.setState(0xc061, 0xd70d, 0x35f0, 0x547b, 0xd315, 0x880c, 0x0, 0x1);
        gbc.writeMem(0xc061, { 0x61 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xd70d, gbc.sp());
        EXPECT(0xc062, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xc061));
        // 61 0037
        gbc.setState(0x5a1b, 0xddff, 0x5400, 0x4b09, 0x65e3, 0x760, 0x1, 0x0);
        gbc.writeMem(0x5a1b, { 0x61 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xddff, gbc.sp());
        EXPECT(0x5a1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0038
        gbc.setState(0x241e, 0x5bf1, 0x5580, 0xd13, 0xed6, 0xb196, 0x1, 0x1);
        gbc.writeMem(0x241e, { 0x61 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x5bf1, gbc.sp());
        EXPECT(0x241f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0039
        gbc.setState(0x49ad, 0x5316, 0x40c0, 0x9e72, 0x4567, 0xf417, 0x0, 0x0);
        gbc.writeMem(0x49ad, { 0x61 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x5316, gbc.sp());
        EXPECT(0x49ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 003A
        gbc.setState(0xde7e, 0x4232, 0x43b0, 0xef5b, 0xe787, 0x8408, 0x1, 0x1);
        gbc.writeMem(0xde7e, { 0x61 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x4232, gbc.sp());
        EXPECT(0xde7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xde7e));
        // 61 003B
        gbc.setState(0x9cb, 0x9d08, 0xe020, 0xe9b1, 0x26f9, 0xbd2e, 0x0, 0x1);
        gbc.writeMem(0x9cb, { 0x61 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x9d08, gbc.sp());
        EXPECT(0x9cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 003C
        gbc.setState(0x973c, 0xfacb, 0x6aa0, 0x73e7, 0x986a, 0xc097, 0x0, 0x0);
        gbc.writeMem(0x973c, { 0x61 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xfacb, gbc.sp());
        EXPECT(0x973d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x973c));
        // 61 003D
        gbc.setState(0xe5ff, 0x12a7, 0x3210, 0x4504, 0xdb0d, 0xc6da, 0x0, 0x0);
        gbc.writeMem(0xe5ff, { 0x61 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x12a7, gbc.sp());
        EXPECT(0xe600, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xe5ff));
        // 61 003E
        gbc.setState(0xa563, 0x5798, 0x33e0, 0x98e3, 0x23cc, 0xbfb8, 0x0, 0x1);
        gbc.writeMem(0xa563, { 0x61 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x5798, gbc.sp());
        EXPECT(0xa564, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xa563));
        // 61 003F
        gbc.setState(0x5f29, 0x59b1, 0xe2c0, 0x96a, 0xc084, 0xe0e7, 0x1, 0x1);
        gbc.writeMem(0x5f29, { 0x61 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x59b1, gbc.sp());
        EXPECT(0x5f2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0040
        gbc.setState(0x4fa8, 0xe3fc, 0x940, 0x3a1a, 0x506a, 0x7f20, 0x1, 0x1);
        gbc.writeMem(0x4fa8, { 0x61 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xe3fc, gbc.sp());
        EXPECT(0x4fa9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0041
        gbc.setState(0xd4de, 0x6e7f, 0x20c0, 0xeee1, 0xc01a, 0x7e06, 0x0, 0x0);
        gbc.writeMem(0xd4de, { 0x61 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x6e7f, gbc.sp());
        EXPECT(0xd4df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xd4de));
        // 61 0042
        gbc.setState(0xcfe7, 0x77c3, 0xb6b0, 0xce0, 0xcef5, 0xd03d, 0x1, 0x0);
        gbc.writeMem(0xcfe7, { 0x61 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x77c3, gbc.sp());
        EXPECT(0xcfe8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xcfe7));
        // 61 0043
        gbc.setState(0x50b9, 0x2e5c, 0x1eb0, 0x5798, 0xac74, 0xfe9f, 0x1, 0x1);
        gbc.writeMem(0x50b9, { 0x61 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x2e5c, gbc.sp());
        EXPECT(0x50ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0044
        gbc.setState(0x9b6f, 0x6051, 0x42c0, 0xd0e6, 0x6141, 0x4b53, 0x0, 0x1);
        gbc.writeMem(0x9b6f, { 0x61 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x6051, gbc.sp());
        EXPECT(0x9b70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x9b6f));
        // 61 0045
        gbc.setState(0x6a48, 0x9c91, 0x4b00, 0x9282, 0x6008, 0xe720, 0x1, 0x1);
        gbc.writeMem(0x6a48, { 0x61 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x9c91, gbc.sp());
        EXPECT(0x6a49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0046
        gbc.setState(0x8149, 0x6f44, 0x6340, 0x8fd9, 0xf7e3, 0x338f, 0x0, 0x1);
        gbc.writeMem(0x8149, { 0x61 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x6f44, gbc.sp());
        EXPECT(0x814a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x8149));
        // 61 0048
        gbc.setState(0x136, 0x72cc, 0x3c40, 0x5c09, 0xb200, 0x4cb5, 0x0, 0x0);
        gbc.writeMem(0x136, { 0x61 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x72cc, gbc.sp());
        EXPECT(0x137, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0049
        gbc.setState(0x7625, 0xbf31, 0x1940, 0xb962, 0x7823, 0x5c24, 0x0, 0x0);
        gbc.writeMem(0x7625, { 0x61 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xbf31, gbc.sp());
        EXPECT(0x7626, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 004A
        gbc.setState(0x9e4c, 0x474c, 0x6df0, 0xa062, 0x6942, 0x683c, 0x1, 0x0);
        gbc.writeMem(0x9e4c, { 0x61 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x474c, gbc.sp());
        EXPECT(0x9e4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x9e4c));
        // 61 004C
        gbc.setState(0x9aac, 0x7fd8, 0x9720, 0xde04, 0x91e6, 0x60bd, 0x0, 0x1);
        gbc.writeMem(0x9aac, { 0x61 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x7fd8, gbc.sp());
        EXPECT(0x9aad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x9aac));
        // 61 004D
        gbc.setState(0x8b8, 0x79f1, 0x7c80, 0x5f40, 0xf5d, 0x58cf, 0x1, 0x1);
        gbc.writeMem(0x8b8, { 0x61 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x79f1, gbc.sp());
        EXPECT(0x8b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 004E
        gbc.setState(0x8966, 0xf2f5, 0xb4f0, 0xcc39, 0x9958, 0x2c24, 0x0, 0x1);
        gbc.writeMem(0x8966, { 0x61 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xf2f5, gbc.sp());
        EXPECT(0x8967, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x8966));
        // 61 004F
        gbc.setState(0x13f, 0x40e0, 0x9d0, 0xd0a7, 0x77f1, 0xc7a4, 0x1, 0x1);
        gbc.writeMem(0x13f, { 0x61 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x40e0, gbc.sp());
        EXPECT(0x140, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0050
        gbc.setState(0x85a, 0x89b2, 0x2820, 0x2125, 0xb222, 0x4da3, 0x1, 0x0);
        gbc.writeMem(0x85a, { 0x61 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x89b2, gbc.sp());
        EXPECT(0x85b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0051
        gbc.setState(0xeb26, 0x3b3c, 0x7590, 0xdd2, 0xe470, 0x9091, 0x0, 0x0);
        gbc.writeMem(0xeb26, { 0x61 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x3b3c, gbc.sp());
        EXPECT(0xeb27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xeb26));
        // 61 0052
        gbc.setState(0x2e69, 0xb358, 0x2420, 0x39ed, 0x627e, 0x3d4, 0x1, 0x0);
        gbc.writeMem(0x2e69, { 0x61 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xb358, gbc.sp());
        EXPECT(0x2e6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0053
        gbc.setState(0xc34, 0x28b9, 0x2df0, 0x9287, 0xa69e, 0x2943, 0x0, 0x0);
        gbc.writeMem(0xc34, { 0x61 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x28b9, gbc.sp());
        EXPECT(0xc35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0054
        gbc.setState(0x6da1, 0x773a, 0x2ac0, 0x9f37, 0x84dc, 0xd6fc, 0x0, 0x1);
        gbc.writeMem(0x6da1, { 0x61 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x773a, gbc.sp());
        EXPECT(0x6da2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0055
        gbc.setState(0x80d2, 0x727, 0x9e10, 0xf7b, 0x1322, 0x8fb9, 0x1, 0x1);
        gbc.writeMem(0x80d2, { 0x61 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x727, gbc.sp());
        EXPECT(0x80d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x80d2));
        // 61 0056
        gbc.setState(0xd87b, 0x9467, 0x6470, 0xbb1e, 0xca7e, 0x6195, 0x0, 0x1);
        gbc.writeMem(0xd87b, { 0x61 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x9467, gbc.sp());
        EXPECT(0xd87c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xd87b));
        // 61 0057
        gbc.setState(0x1968, 0x2b1c, 0x1ce0, 0xa844, 0x2a86, 0xaaf5, 0x0, 0x1);
        gbc.writeMem(0x1968, { 0x61 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x2b1c, gbc.sp());
        EXPECT(0x1969, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0058
        gbc.setState(0x722f, 0x8000, 0xf7d0, 0xf6d6, 0xaf25, 0x2f64, 0x0, 0x1);
        gbc.writeMem(0x722f, { 0x61 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x8000, gbc.sp());
        EXPECT(0x7230, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0059
        gbc.setState(0x7ad4, 0xf5b, 0x4860, 0xdca7, 0x9edc, 0xb4b3, 0x0, 0x0);
        gbc.writeMem(0x7ad4, { 0x61 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xf5b, gbc.sp());
        EXPECT(0x7ad5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 005A
        gbc.setState(0xaa99, 0x5d82, 0x3160, 0xf3a8, 0x62b5, 0x56e1, 0x1, 0x0);
        gbc.writeMem(0xaa99, { 0x61 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x5d82, gbc.sp());
        EXPECT(0xaa9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xaa99));
        // 61 005B
        gbc.setState(0x9ea2, 0x39b4, 0xa7f0, 0x84ee, 0xf251, 0xf4b9, 0x1, 0x1);
        gbc.writeMem(0x9ea2, { 0x61 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x39b4, gbc.sp());
        EXPECT(0x9ea3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x9ea2));
        // 61 005C
        gbc.setState(0xdab0, 0xa620, 0xab10, 0xbfe8, 0xf2eb, 0x8307, 0x0, 0x1);
        gbc.writeMem(0xdab0, { 0x61 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xa620, gbc.sp());
        EXPECT(0xdab1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xdab0));
        // 61 005D
        gbc.setState(0x3dd8, 0x52a0, 0x2510, 0x6624, 0xa229, 0x9b67, 0x0, 0x0);
        gbc.writeMem(0x3dd8, { 0x61 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x52a0, gbc.sp());
        EXPECT(0x3dd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 005E
        gbc.setState(0xbe2, 0xa7fc, 0xfe00, 0xdc3f, 0xa478, 0xd352, 0x0, 0x0);
        gbc.writeMem(0xbe2, { 0x61 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xa7fc, gbc.sp());
        EXPECT(0xbe3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 005F
        gbc.setState(0x8e21, 0x1106, 0xe710, 0x9f17, 0x727a, 0xde7b, 0x0, 0x1);
        gbc.writeMem(0x8e21, { 0x61 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x1106, gbc.sp());
        EXPECT(0x8e22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x8e21));
        // 61 0060
        gbc.setState(0x9d12, 0x16e, 0xf910, 0x7696, 0xbbf4, 0xe48b, 0x0, 0x1);
        gbc.writeMem(0x9d12, { 0x61 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x16e, gbc.sp());
        EXPECT(0x9d13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x9d12));
        // 61 0061
        gbc.setState(0x4cad, 0xef2e, 0xb710, 0x6660, 0x85f3, 0xcd60, 0x0, 0x0);
        gbc.writeMem(0x4cad, { 0x61 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xef2e, gbc.sp());
        EXPECT(0x4cae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0062
        gbc.setState(0xbf0e, 0xea46, 0xe500, 0x49e, 0xbd29, 0x87b7, 0x0, 0x0);
        gbc.writeMem(0xbf0e, { 0x61 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xea46, gbc.sp());
        EXPECT(0xbf0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xbf0e));
        // 61 0064
        gbc.setState(0xee8b, 0xe7b0, 0x85c0, 0xc20a, 0x3a3f, 0x1ca1, 0x1, 0x1);
        gbc.writeMem(0xee8b, { 0x61 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xe7b0, gbc.sp());
        EXPECT(0xee8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xee8b));
        // 61 0066
        gbc.setState(0xa59b, 0x997e, 0x5a60, 0x1bcd, 0xb6e7, 0x3791, 0x0, 0x0);
        gbc.writeMem(0xa59b, { 0x61 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x997e, gbc.sp());
        EXPECT(0xa59c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xa59b));
        // 61 0067
        gbc.setState(0x33c0, 0xe1b5, 0x1bf0, 0xa6d1, 0xdb07, 0x329b, 0x0, 0x0);
        gbc.writeMem(0x33c0, { 0x61 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xe1b5, gbc.sp());
        EXPECT(0x33c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0068
        gbc.setState(0x6d24, 0x20e2, 0x3590, 0x8691, 0xa97b, 0x1fdd, 0x1, 0x0);
        gbc.writeMem(0x6d24, { 0x61 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x20e2, gbc.sp());
        EXPECT(0x6d25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0069
        gbc.setState(0x2545, 0x1e9d, 0x910, 0x3a6f, 0x4be8, 0xd68d, 0x0, 0x1);
        gbc.writeMem(0x2545, { 0x61 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x1e9d, gbc.sp());
        EXPECT(0x2546, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 006A
        gbc.setState(0x241e, 0xea2b, 0x92b0, 0x5155, 0x670b, 0x8e4, 0x0, 0x0);
        gbc.writeMem(0x241e, { 0x61 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xea2b, gbc.sp());
        EXPECT(0x241f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 006B
        gbc.setState(0x814d, 0xc7cc, 0xd890, 0x318c, 0x5bc9, 0x7038, 0x0, 0x1);
        gbc.writeMem(0x814d, { 0x61 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xc7cc, gbc.sp());
        EXPECT(0x814e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x814d));
        // 61 006C
        gbc.setState(0xa84b, 0xcdeb, 0x6240, 0xfda5, 0x3ef9, 0x1ab6, 0x1, 0x0);
        gbc.writeMem(0xa84b, { 0x61 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xcdeb, gbc.sp());
        EXPECT(0xa84c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xa84b));
        // 61 006D
        gbc.setState(0x94d4, 0xcbb7, 0x1850, 0xca14, 0x69b6, 0xc5e6, 0x0, 0x1);
        gbc.writeMem(0x94d4, { 0x61 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xcbb7, gbc.sp());
        EXPECT(0x94d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x94d4));
        // 61 006E
        gbc.setState(0x8746, 0x5368, 0x4330, 0xbc03, 0x6123, 0x5557, 0x0, 0x1);
        gbc.writeMem(0x8746, { 0x61 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x5368, gbc.sp());
        EXPECT(0x8747, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x8746));
        // 61 006F
        gbc.setState(0x3630, 0xa1ea, 0x5ae0, 0x16f7, 0x30e8, 0x941f, 0x1, 0x0);
        gbc.writeMem(0x3630, { 0x61 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xa1ea, gbc.sp());
        EXPECT(0x3631, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0070
        gbc.setState(0x6d10, 0x8a00, 0xf4c0, 0x2d4f, 0x6dd8, 0x5a1b, 0x1, 0x1);
        gbc.writeMem(0x6d10, { 0x61 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x8a00, gbc.sp());
        EXPECT(0x6d11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0071
        gbc.setState(0x5361, 0xa70f, 0xeea0, 0x622d, 0x49d, 0xeaa0, 0x1, 0x0);
        gbc.writeMem(0x5361, { 0x61 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xa70f, gbc.sp());
        EXPECT(0x5362, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0072
        gbc.setState(0x34e3, 0x6f11, 0xc1c0, 0x431a, 0x993, 0xe04f, 0x1, 0x1);
        gbc.writeMem(0x34e3, { 0x61 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x6f11, gbc.sp());
        EXPECT(0x34e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0073
        gbc.setState(0x8736, 0xdc61, 0x5db0, 0xfe61, 0xdaf2, 0xafb7, 0x1, 0x1);
        gbc.writeMem(0x8736, { 0x61 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xdc61, gbc.sp());
        EXPECT(0x8737, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x8736));
        // 61 0074
        gbc.setState(0x372e, 0x2c8b, 0x700, 0x73f3, 0x5dbd, 0x3769, 0x0, 0x1);
        gbc.writeMem(0x372e, { 0x61 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x2c8b, gbc.sp());
        EXPECT(0x372f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0075
        gbc.setState(0x43a7, 0x96e4, 0xd070, 0xab3e, 0xc9f1, 0x4145, 0x1, 0x1);
        gbc.writeMem(0x43a7, { 0x61 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x96e4, gbc.sp());
        EXPECT(0x43a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0076
        gbc.setState(0xab00, 0xe12b, 0x2730, 0x2217, 0xe9fd, 0xbfd9, 0x1, 0x1);
        gbc.writeMem(0xab00, { 0x61 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xe12b, gbc.sp());
        EXPECT(0xab01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xab00));
        // 61 0077
        gbc.setState(0x49f4, 0xd865, 0xd950, 0xcd27, 0x1f9d, 0xacc, 0x0, 0x1);
        gbc.writeMem(0x49f4, { 0x61 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xd865, gbc.sp());
        EXPECT(0x49f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0078
        gbc.setState(0x9c77, 0x2bd6, 0xc100, 0xcbe0, 0x66b0, 0xd657, 0x0, 0x1);
        gbc.writeMem(0x9c77, { 0x61 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x2bd6, gbc.sp());
        EXPECT(0x9c78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x9c77));
        // 61 0079
        gbc.setState(0xe246, 0xc956, 0x1d90, 0x3ba0, 0xb1f4, 0x36c3, 0x0, 0x0);
        gbc.writeMem(0xe246, { 0x61 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xc956, gbc.sp());
        EXPECT(0xe247, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xe246));
        // 61 007A
        gbc.setState(0x4e29, 0x80dd, 0xa6d0, 0x3203, 0x8304, 0xaeef, 0x1, 0x1);
        gbc.writeMem(0x4e29, { 0x61 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x80dd, gbc.sp());
        EXPECT(0x4e2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 007B
        gbc.setState(0xe86e, 0xe023, 0x5ff0, 0x440b, 0xed6c, 0x9f15, 0x1, 0x0);
        gbc.writeMem(0xe86e, { 0x61 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xe023, gbc.sp());
        EXPECT(0xe86f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xe86e));
        // 61 007C
        gbc.setState(0xa79f, 0x292a, 0x9ec0, 0xd8b, 0x7f86, 0xc1c3, 0x0, 0x1);
        gbc.writeMem(0xa79f, { 0x61 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x292a, gbc.sp());
        EXPECT(0xa7a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xa79f));
        // 61 007D
        gbc.setState(0xc76e, 0xd096, 0x36a0, 0xa099, 0x1c2e, 0x575c, 0x0, 0x1);
        gbc.writeMem(0xc76e, { 0x61 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xd096, gbc.sp());
        EXPECT(0xc76f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xc76e));
        // 61 007E
        gbc.setState(0x15fa, 0x3f5d, 0xd0c0, 0xb4d9, 0x5af, 0xa656, 0x0, 0x0);
        gbc.writeMem(0x15fa, { 0x61 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x3f5d, gbc.sp());
        EXPECT(0x15fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 007F
        gbc.setState(0x4183, 0x5dcc, 0x2910, 0x9fd, 0x5723, 0xc8a2, 0x0, 0x0);
        gbc.writeMem(0x4183, { 0x61 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x5dcc, gbc.sp());
        EXPECT(0x4184, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0080
        gbc.setState(0x9519, 0xf6a1, 0x40b0, 0xdc21, 0xc8b, 0xac3a, 0x0, 0x1);
        gbc.writeMem(0x9519, { 0x61 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xf6a1, gbc.sp());
        EXPECT(0x951a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x9519));
        // 61 0081
        gbc.setState(0xec09, 0xf564, 0x6fe0, 0xd66e, 0xfe1b, 0x7207, 0x1, 0x1);
        gbc.writeMem(0xec09, { 0x61 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xf564, gbc.sp());
        EXPECT(0xec0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xec09));
        // 61 0082
        gbc.setState(0x8423, 0xe4c4, 0x13a0, 0x25b3, 0xa8c9, 0xe3d1, 0x1, 0x1);
        gbc.writeMem(0x8423, { 0x61 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xe4c4, gbc.sp());
        EXPECT(0x8424, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x8423));
        // 61 0083
        gbc.setState(0x5678, 0x2f57, 0x1500, 0x7263, 0x9ee0, 0x75e6, 0x1, 0x1);
        gbc.writeMem(0x5678, { 0x61 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x2f57, gbc.sp());
        EXPECT(0x5679, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0084
        gbc.setState(0xaf9f, 0xd9fe, 0x9820, 0xc74d, 0x780f, 0x363c, 0x1, 0x0);
        gbc.writeMem(0xaf9f, { 0x61 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xd9fe, gbc.sp());
        EXPECT(0xafa0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xaf9f));
        // 61 0085
        gbc.setState(0xedb0, 0x4600, 0xf280, 0xac9f, 0x8a82, 0x18a, 0x1, 0x0);
        gbc.writeMem(0xedb0, { 0x61 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x4600, gbc.sp());
        EXPECT(0xedb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xedb0));
        // 61 0086
        gbc.setState(0x5761, 0xd28d, 0x9700, 0x8a3, 0x5d05, 0xcd9f, 0x0, 0x1);
        gbc.writeMem(0x5761, { 0x61 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xd28d, gbc.sp());
        EXPECT(0x5762, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0087
        gbc.setState(0x60b2, 0xa39b, 0x2f40, 0x22c7, 0x5403, 0x7c09, 0x1, 0x1);
        gbc.writeMem(0x60b2, { 0x61 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xa39b, gbc.sp());
        EXPECT(0x60b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0088
        gbc.setState(0xce51, 0x59ff, 0xd7c0, 0x5a59, 0x7f29, 0xe8ba, 0x0, 0x1);
        gbc.writeMem(0xce51, { 0x61 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x59ff, gbc.sp());
        EXPECT(0xce52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xce51));
        // 61 0089
        gbc.setState(0xa0f8, 0xdc7d, 0xec20, 0x6581, 0xc6dd, 0x91f7, 0x1, 0x1);
        gbc.writeMem(0xa0f8, { 0x61 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xdc7d, gbc.sp());
        EXPECT(0xa0f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xa0f8));
        // 61 008A
        gbc.setState(0x62e3, 0xf985, 0x1ff0, 0x5dda, 0x2ddf, 0x11b0, 0x0, 0x0);
        gbc.writeMem(0x62e3, { 0x61 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xf985, gbc.sp());
        EXPECT(0x62e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 008C
        gbc.setState(0xac63, 0x581b, 0x4180, 0xc18c, 0x1bd, 0x25b3, 0x1, 0x0);
        gbc.writeMem(0xac63, { 0x61 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x581b, gbc.sp());
        EXPECT(0xac64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xac63));
        // 61 008D
        gbc.setState(0xcb88, 0x3fd9, 0x42b0, 0x883a, 0xc0d8, 0xe323, 0x1, 0x0);
        gbc.writeMem(0xcb88, { 0x61 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x3fd9, gbc.sp());
        EXPECT(0xcb89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xcb88));
        // 61 008E
        gbc.setState(0x1db0, 0xec1a, 0x37e0, 0xdf90, 0xc927, 0x23ed, 0x0, 0x0);
        gbc.writeMem(0x1db0, { 0x61 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xec1a, gbc.sp());
        EXPECT(0x1db1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 008F
        gbc.setState(0x6cfc, 0x553a, 0x2780, 0xb618, 0x63, 0xf30c, 0x0, 0x0);
        gbc.writeMem(0x6cfc, { 0x61 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x553a, gbc.sp());
        EXPECT(0x6cfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0090
        gbc.setState(0xc2d5, 0x57a3, 0xa530, 0xb6e9, 0x1a15, 0x4b9e, 0x1, 0x1);
        gbc.writeMem(0xc2d5, { 0x61 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x57a3, gbc.sp());
        EXPECT(0xc2d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xc2d5));
        // 61 0091
        gbc.setState(0x2507, 0xfb16, 0x2a80, 0xf341, 0xc89b, 0xc08c, 0x1, 0x0);
        gbc.writeMem(0x2507, { 0x61 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xfb16, gbc.sp());
        EXPECT(0x2508, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0093
        gbc.setState(0xdfe3, 0xd984, 0x8000, 0x193c, 0xb712, 0xa174, 0x0, 0x1);
        gbc.writeMem(0xdfe3, { 0x61 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xd984, gbc.sp());
        EXPECT(0xdfe4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xdfe3));
        // 61 0094
        gbc.setState(0xb4c8, 0xbe99, 0xa8b0, 0xbc95, 0xa3f1, 0x3772, 0x1, 0x1);
        gbc.writeMem(0xb4c8, { 0x61 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xbe99, gbc.sp());
        EXPECT(0xb4c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xb4c8));
        // 61 0095
        gbc.setState(0x8868, 0x22f5, 0x50b0, 0xd017, 0x925f, 0xe548, 0x0, 0x0);
        gbc.writeMem(0x8868, { 0x61 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x22f5, gbc.sp());
        EXPECT(0x8869, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x8868));
        // 61 0096
        gbc.setState(0x2ae6, 0x44c, 0xf910, 0x40cf, 0xff8, 0x4340, 0x0, 0x1);
        gbc.writeMem(0x2ae6, { 0x61 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x44c, gbc.sp());
        EXPECT(0x2ae7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0097
        gbc.setState(0x284a, 0xb4f0, 0x6230, 0x9856, 0x8118, 0xd76, 0x1, 0x1);
        gbc.writeMem(0x284a, { 0x61 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xb4f0, gbc.sp());
        EXPECT(0x284b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0098
        gbc.setState(0x8a11, 0xeafb, 0x9f10, 0x7e45, 0xf8ca, 0xb775, 0x0, 0x1);
        gbc.writeMem(0x8a11, { 0x61 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xeafb, gbc.sp());
        EXPECT(0x8a12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x8a11));
        // 61 0099
        gbc.setState(0x29c9, 0x20e7, 0xef20, 0xa941, 0x57ef, 0x4127, 0x1, 0x0);
        gbc.writeMem(0x29c9, { 0x61 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x20e7, gbc.sp());
        EXPECT(0x29ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 009A
        gbc.setState(0x30ef, 0xf247, 0x9990, 0xb99, 0x7667, 0xe27f, 0x0, 0x0);
        gbc.writeMem(0x30ef, { 0x61 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xf247, gbc.sp());
        EXPECT(0x30f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 009B
        gbc.setState(0x5a91, 0x2ce5, 0x3a0, 0x4c24, 0x7cbe, 0x595d, 0x1, 0x1);
        gbc.writeMem(0x5a91, { 0x61 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x2ce5, gbc.sp());
        EXPECT(0x5a92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 009C
        gbc.setState(0x273b, 0xa6de, 0xa1f0, 0x2790, 0xcf59, 0x9f4c, 0x0, 0x0);
        gbc.writeMem(0x273b, { 0x61 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xa6de, gbc.sp());
        EXPECT(0x273c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 009D
        gbc.setState(0x99b, 0x6ba0, 0x9760, 0x2b9e, 0xde19, 0xe8d0, 0x1, 0x1);
        gbc.writeMem(0x99b, { 0x61 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x6ba0, gbc.sp());
        EXPECT(0x99c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 009E
        gbc.setState(0x7089, 0xfda3, 0xb360, 0x8e19, 0x719a, 0x4c49, 0x1, 0x1);
        gbc.writeMem(0x7089, { 0x61 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xfda3, gbc.sp());
        EXPECT(0x708a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 009F
        gbc.setState(0x707e, 0xd63, 0x8b70, 0x1899, 0xdb24, 0x60ae, 0x1, 0x0);
        gbc.writeMem(0x707e, { 0x61 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xd63, gbc.sp());
        EXPECT(0x707f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 00A0
        gbc.setState(0x24dd, 0x88d0, 0x6620, 0xd467, 0x9685, 0x66f7, 0x1, 0x1);
        gbc.writeMem(0x24dd, { 0x61 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x88d0, gbc.sp());
        EXPECT(0x24de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 00A1
        gbc.setState(0x89df, 0xcb7c, 0xce00, 0xca4d, 0x344f, 0x5d93, 0x0, 0x1);
        gbc.writeMem(0x89df, { 0x61 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xcb7c, gbc.sp());
        EXPECT(0x89e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x89df));
        // 61 00A2
        gbc.setState(0x8ee4, 0x7af9, 0x4c40, 0x500b, 0x84c3, 0xf6af, 0x0, 0x0);
        gbc.writeMem(0x8ee4, { 0x61 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x7af9, gbc.sp());
        EXPECT(0x8ee5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x8ee4));
        // 61 00A3
        gbc.setState(0x8240, 0x2a5d, 0x5270, 0xa6ca, 0xeaa8, 0xde2a, 0x0, 0x0);
        gbc.writeMem(0x8240, { 0x61 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x2a5d, gbc.sp());
        EXPECT(0x8241, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x8240));
        // 61 00A4
        gbc.setState(0x63b8, 0xe6d1, 0x5d80, 0xd470, 0xb6cc, 0xb07d, 0x0, 0x0);
        gbc.writeMem(0x63b8, { 0x61 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xe6d1, gbc.sp());
        EXPECT(0x63b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 00A5
        gbc.setState(0x9dab, 0xf46e, 0xb030, 0xfed1, 0xa5ed, 0xd8dc, 0x1, 0x0);
        gbc.writeMem(0x9dab, { 0x61 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xf46e, gbc.sp());
        EXPECT(0x9dac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x9dab));
        // 61 00A6
        gbc.setState(0x2f59, 0x3339, 0x42a0, 0x6e7f, 0x59b0, 0x6dc9, 0x0, 0x1);
        gbc.writeMem(0x2f59, { 0x61 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x3339, gbc.sp());
        EXPECT(0x2f5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 00A7
        gbc.setState(0x95de, 0xa67b, 0xf360, 0x3a04, 0x47ca, 0xdd78, 0x1, 0x1);
        gbc.writeMem(0x95de, { 0x61 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xa67b, gbc.sp());
        EXPECT(0x95df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x95de));
        // 61 00A8
        gbc.setState(0x7770, 0x132, 0xcd20, 0x91e7, 0x8972, 0xba07, 0x1, 0x1);
        gbc.writeMem(0x7770, { 0x61 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x132, gbc.sp());
        EXPECT(0x7771, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 00A9
        gbc.setState(0x92c7, 0xbffd, 0x56e0, 0xa30c, 0xf06d, 0x8fa9, 0x1, 0x0);
        gbc.writeMem(0x92c7, { 0x61 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xbffd, gbc.sp());
        EXPECT(0x92c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x92c7));
        // 61 00AA
        gbc.setState(0xb650, 0x7707, 0xcac0, 0x9a7b, 0xee56, 0xb0cc, 0x0, 0x1);
        gbc.writeMem(0xb650, { 0x61 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x7707, gbc.sp());
        EXPECT(0xb651, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xb650));
        // 61 00AB
        gbc.setState(0x75f9, 0x8545, 0x2270, 0x7f25, 0xe145, 0x762c, 0x0, 0x1);
        gbc.writeMem(0x75f9, { 0x61 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x8545, gbc.sp());
        EXPECT(0x75fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 00AC
        gbc.setState(0xe46f, 0x1f34, 0x8300, 0x2701, 0x78ce, 0xef6e, 0x0, 0x0);
        gbc.writeMem(0xe46f, { 0x61 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x1f34, gbc.sp());
        EXPECT(0xe470, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xe46f));
        // 61 00AD
        gbc.setState(0xc3a2, 0xcac2, 0x4380, 0x3344, 0x5bf3, 0x64ff, 0x0, 0x1);
        gbc.writeMem(0xc3a2, { 0x61 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xcac2, gbc.sp());
        EXPECT(0xc3a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xc3a2));
        // 61 00AE
        gbc.setState(0xeeac, 0x40bb, 0xbee0, 0x1157, 0x9e02, 0x84e, 0x0, 0x1);
        gbc.writeMem(0xeeac, { 0x61 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x40bb, gbc.sp());
        EXPECT(0xeead, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xeeac));
        // 61 00B0
        gbc.setState(0x8b7c, 0x323a, 0x2dd0, 0x3303, 0x5f3b, 0x1389, 0x1, 0x1);
        gbc.writeMem(0x8b7c, { 0x61 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x323a, gbc.sp());
        EXPECT(0x8b7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x8b7c));
        // 61 00B1
        gbc.setState(0xd888, 0xb6d, 0xe360, 0x54d, 0x7608, 0x2bc, 0x0, 0x0);
        gbc.writeMem(0xd888, { 0x61 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xb6d, gbc.sp());
        EXPECT(0xd889, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xd888));
        // 61 00B2
        gbc.setState(0x363f, 0x860, 0xc9e0, 0x4c9f, 0x8abe, 0xba37, 0x0, 0x0);
        gbc.writeMem(0x363f, { 0x61 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x860, gbc.sp());
        EXPECT(0x3640, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 00B3
        gbc.setState(0x2455, 0x7c07, 0x650, 0xb346, 0x10c, 0x6797, 0x1, 0x1);
        gbc.writeMem(0x2455, { 0x61 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x7c07, gbc.sp());
        EXPECT(0x2456, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 00B4
        gbc.setState(0x6b40, 0xcba5, 0x1590, 0x64a3, 0x61aa, 0x41c1, 0x1, 0x1);
        gbc.writeMem(0x6b40, { 0x61 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xcba5, gbc.sp());
        EXPECT(0x6b41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 00B5
        gbc.setState(0x32e4, 0xe75d, 0xe740, 0x891e, 0xc571, 0x1b17, 0x1, 0x1);
        gbc.writeMem(0x32e4, { 0x61 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xe75d, gbc.sp());
        EXPECT(0x32e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 00B6
        gbc.setState(0x324d, 0x8a38, 0xf240, 0xf09b, 0x4c11, 0x6e44, 0x1, 0x0);
        gbc.writeMem(0x324d, { 0x61 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x8a38, gbc.sp());
        EXPECT(0x324e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 00B7
        gbc.setState(0x4a73, 0xd412, 0x38e0, 0x61c3, 0xe62d, 0x11f9, 0x1, 0x1);
        gbc.writeMem(0x4a73, { 0x61 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xd412, gbc.sp());
        EXPECT(0x4a74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 00B8
        gbc.setState(0x4312, 0xe8e, 0x22a0, 0xf85e, 0x5ad8, 0xb1de, 0x1, 0x1);
        gbc.writeMem(0x4312, { 0x61 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xe8e, gbc.sp());
        EXPECT(0x4313, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 00B9
        gbc.setState(0x787a, 0x6122, 0xdb10, 0x8cc0, 0x1ce7, 0x9a6b, 0x0, 0x1);
        gbc.writeMem(0x787a, { 0x61 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x6122, gbc.sp());
        EXPECT(0x787b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 00BA
        gbc.setState(0xd4f5, 0xdc2c, 0x2360, 0x5584, 0x5eb8, 0x5cb5, 0x0, 0x1);
        gbc.writeMem(0xd4f5, { 0x61 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xdc2c, gbc.sp());
        EXPECT(0xd4f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xd4f5));
        // 61 00BB
        gbc.setState(0xd62c, 0x65e4, 0xfb10, 0xe8ad, 0x8efb, 0xe70, 0x0, 0x1);
        gbc.writeMem(0xd62c, { 0x61 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x65e4, gbc.sp());
        EXPECT(0xd62d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xd62c));
        // 61 00BC
        gbc.setState(0x6abb, 0x24e7, 0x88e0, 0x1bd7, 0xeba9, 0xfc3c, 0x0, 0x0);
        gbc.writeMem(0x6abb, { 0x61 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x24e7, gbc.sp());
        EXPECT(0x6abc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 00BD
        gbc.setState(0xa21d, 0x2896, 0xd6a0, 0x147e, 0xcd17, 0xf230, 0x0, 0x1);
        gbc.writeMem(0xa21d, { 0x61 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x2896, gbc.sp());
        EXPECT(0xa21e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xa21d));
        // 61 00BE
        gbc.setState(0xc9d0, 0x6c7d, 0x1f10, 0x7fe0, 0x216, 0xb505, 0x1, 0x0);
        gbc.writeMem(0xc9d0, { 0x61 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x6c7d, gbc.sp());
        EXPECT(0xc9d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xc9d0));
        // 61 00BF
        gbc.setState(0x3c0c, 0x8685, 0x2cb0, 0x76ea, 0xa45d, 0x8d87, 0x1, 0x1);
        gbc.writeMem(0x3c0c, { 0x61 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x8685, gbc.sp());
        EXPECT(0x3c0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 00C0
        gbc.setState(0x939d, 0x8580, 0xeae0, 0x4a95, 0x836f, 0x3108, 0x1, 0x0);
        gbc.writeMem(0x939d, { 0x61 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x8580, gbc.sp());
        EXPECT(0x939e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x939d));
        // 61 00C1
        gbc.setState(0x6dd7, 0x14be, 0xf120, 0x37c0, 0x58e6, 0x348a, 0x0, 0x1);
        gbc.writeMem(0x6dd7, { 0x61 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x14be, gbc.sp());
        EXPECT(0x6dd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 00C2
        gbc.setState(0x8382, 0xbecf, 0x3b10, 0x4fa9, 0xbbaa, 0xeb74, 0x1, 0x0);
        gbc.writeMem(0x8382, { 0x61 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xbecf, gbc.sp());
        EXPECT(0x8383, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x8382));
        // 61 00C3
        gbc.setState(0x9a63, 0x9e45, 0xe0b0, 0x8fa6, 0xd44b, 0xe13, 0x0, 0x0);
        gbc.writeMem(0x9a63, { 0x61 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x9e45, gbc.sp());
        EXPECT(0x9a64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x9a63));
        // 61 00C5
        gbc.setState(0x2625, 0x80f0, 0x42c0, 0x96a6, 0x54e2, 0x7f48, 0x1, 0x1);
        gbc.writeMem(0x2625, { 0x61 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x80f0, gbc.sp());
        EXPECT(0x2626, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 00C6
        gbc.setState(0xa76c, 0x86ec, 0xd4d0, 0xf05, 0x646d, 0x20f4, 0x1, 0x0);
        gbc.writeMem(0xa76c, { 0x61 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x86ec, gbc.sp());
        EXPECT(0xa76d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xa76c));
        // 61 00C7
        gbc.setState(0x9294, 0xa30d, 0x4dc0, 0xe554, 0xd8c, 0xb4c1, 0x1, 0x1);
        gbc.writeMem(0x9294, { 0x61 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xa30d, gbc.sp());
        EXPECT(0x9295, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x9294));
        // 61 00C8
        gbc.setState(0xa0ad, 0xa2af, 0x5220, 0xa6b2, 0x410b, 0x5501, 0x0, 0x0);
        gbc.writeMem(0xa0ad, { 0x61 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xa2af, gbc.sp());
        EXPECT(0xa0ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xa0ad));
        // 61 00C9
        gbc.setState(0x7734, 0xfa14, 0x7150, 0xb686, 0x82a9, 0x9d8c, 0x0, 0x1);
        gbc.writeMem(0x7734, { 0x61 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xfa14, gbc.sp());
        EXPECT(0x7735, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 00CA
        gbc.setState(0xe6b2, 0x9b21, 0x4940, 0xdd10, 0x627c, 0x103b, 0x0, 0x1);
        gbc.writeMem(0xe6b2, { 0x61 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x9b21, gbc.sp());
        EXPECT(0xe6b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xe6b2));
        // 61 00CB
        gbc.setState(0x300d, 0x3c6e, 0x98b0, 0x4763, 0x8e49, 0xafbe, 0x0, 0x1);
        gbc.writeMem(0x300d, { 0x61 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x3c6e, gbc.sp());
        EXPECT(0x300e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 00CC
        gbc.setState(0x2f3d, 0x1eaf, 0x9060, 0xfd31, 0xcca2, 0x49ea, 0x0, 0x0);
        gbc.writeMem(0x2f3d, { 0x61 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x1eaf, gbc.sp());
        EXPECT(0x2f3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 00CD
        gbc.setState(0x891f, 0xd694, 0x7790, 0xaf44, 0xc4ed, 0x40e9, 0x1, 0x0);
        gbc.writeMem(0x891f, { 0x61 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xd694, gbc.sp());
        EXPECT(0x8920, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x891f));
        // 61 00CE
        gbc.setState(0x60d8, 0xeeb4, 0xe810, 0xc1c3, 0xb03b, 0x1d73, 0x0, 0x1);
        gbc.writeMem(0x60d8, { 0x61 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xeeb4, gbc.sp());
        EXPECT(0x60d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 00CF
        gbc.setState(0x4a5e, 0x60cb, 0xb460, 0xca71, 0xc44b, 0x3336, 0x1, 0x1);
        gbc.writeMem(0x4a5e, { 0x61 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x60cb, gbc.sp());
        EXPECT(0x4a5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 00D0
        gbc.setState(0xb3f8, 0xb503, 0x7c00, 0x56d9, 0x114c, 0x2b88, 0x1, 0x1);
        gbc.writeMem(0xb3f8, { 0x61 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xb503, gbc.sp());
        EXPECT(0xb3f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xb3f8));
        // 61 00D1
        gbc.setState(0x3d17, 0xdddb, 0xc890, 0xc06e, 0x3262, 0xe1ec, 0x1, 0x1);
        gbc.writeMem(0x3d17, { 0x61 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xdddb, gbc.sp());
        EXPECT(0x3d18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 00D2
        gbc.setState(0xa05d, 0x89ea, 0x3340, 0xfe2a, 0x5c32, 0xfdcc, 0x1, 0x0);
        gbc.writeMem(0xa05d, { 0x61 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x89ea, gbc.sp());
        EXPECT(0xa05e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xa05d));
        // 61 00D3
        gbc.setState(0xbe08, 0x543d, 0xd8b0, 0xd9d3, 0xcbcb, 0x3a8b, 0x1, 0x0);
        gbc.writeMem(0xbe08, { 0x61 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x543d, gbc.sp());
        EXPECT(0xbe09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xbe08));
        // 61 00D4
        gbc.setState(0x9879, 0x4fbc, 0x7850, 0xfe39, 0x8284, 0x4bcb, 0x1, 0x0);
        gbc.writeMem(0x9879, { 0x61 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x4fbc, gbc.sp());
        EXPECT(0x987a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x9879));
        // 61 00D5
        gbc.setState(0x8da, 0xc4ac, 0x4650, 0xa9e8, 0x7f08, 0xb448, 0x1, 0x1);
        gbc.writeMem(0x8da, { 0x61 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xc4ac, gbc.sp());
        EXPECT(0x8db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 00D6
        gbc.setState(0x3ce0, 0xc01, 0xaec0, 0xbcbf, 0xbe9, 0x336, 0x0, 0x0);
        gbc.writeMem(0x3ce0, { 0x61 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xc01, gbc.sp());
        EXPECT(0x3ce1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 00D7
        gbc.setState(0x122a, 0x49e, 0xc040, 0x8856, 0xbd5e, 0xcfd0, 0x1, 0x0);
        gbc.writeMem(0x122a, { 0x61 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x49e, gbc.sp());
        EXPECT(0x122b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 00D8
        gbc.setState(0x9e0c, 0x57be, 0xa3e0, 0x67b3, 0xc33f, 0xe2d2, 0x0, 0x1);
        gbc.writeMem(0x9e0c, { 0x61 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x57be, gbc.sp());
        EXPECT(0x9e0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x9e0c));
        // 61 00D9
        gbc.setState(0x6470, 0xf025, 0xea0, 0x6a84, 0xd28b, 0x4b57, 0x1, 0x0);
        gbc.writeMem(0x6470, { 0x61 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xf025, gbc.sp());
        EXPECT(0x6471, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 00DA
        gbc.setState(0xe2b8, 0x424c, 0xd000, 0x2240, 0x948c, 0x4410, 0x0, 0x1);
        gbc.writeMem(0xe2b8, { 0x61 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x424c, gbc.sp());
        EXPECT(0xe2b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xe2b8));
        // 61 00DD
        gbc.setState(0xc58d, 0xa72d, 0x7e60, 0xb5b4, 0xff45, 0x8112, 0x0, 0x1);
        gbc.writeMem(0xc58d, { 0x61 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xa72d, gbc.sp());
        EXPECT(0xc58e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xc58d));
        // 61 00DF
        gbc.setState(0x7fc2, 0x72f1, 0xd170, 0xd162, 0x2fc8, 0xcc4, 0x0, 0x0);
        gbc.writeMem(0x7fc2, { 0x61 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x72f1, gbc.sp());
        EXPECT(0x7fc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 00E0
        gbc.setState(0x19ce, 0xbfe5, 0x1790, 0x9383, 0x95cd, 0x7bc2, 0x1, 0x1);
        gbc.writeMem(0x19ce, { 0x61 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xbfe5, gbc.sp());
        EXPECT(0x19cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 00E1
        gbc.setState(0xae36, 0x8633, 0x1fd0, 0x96a9, 0xe13a, 0x81f1, 0x1, 0x0);
        gbc.writeMem(0xae36, { 0x61 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x8633, gbc.sp());
        EXPECT(0xae37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xae36));
        // 61 00E2
        gbc.setState(0x3443, 0xd9e2, 0x920, 0x6b6b, 0xdea4, 0x98b2, 0x1, 0x0);
        gbc.writeMem(0x3443, { 0x61 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xd9e2, gbc.sp());
        EXPECT(0x3444, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 00E3
        gbc.setState(0x6493, 0x6ce3, 0x3280, 0xa1a4, 0x7b4e, 0x630e, 0x0, 0x1);
        gbc.writeMem(0x6493, { 0x61 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x6ce3, gbc.sp());
        EXPECT(0x6494, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 00E4
        gbc.setState(0x1303, 0x90a4, 0x1ee0, 0x75fd, 0xa1b, 0x4368, 0x1, 0x1);
        gbc.writeMem(0x1303, { 0x61 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x90a4, gbc.sp());
        EXPECT(0x1304, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 00E6
        gbc.setState(0x8e4e, 0x3060, 0x4720, 0x2fba, 0xebd9, 0x13d0, 0x0, 0x0);
        gbc.writeMem(0x8e4e, { 0x61 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x3060, gbc.sp());
        EXPECT(0x8e4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x8e4e));
        // 61 00E7
        gbc.setState(0x77af, 0x241c, 0x15c0, 0xde32, 0x7a88, 0xc6dd, 0x0, 0x0);
        gbc.writeMem(0x77af, { 0x61 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x241c, gbc.sp());
        EXPECT(0x77b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 00E8
        gbc.setState(0xa992, 0xf253, 0xa310, 0xebb8, 0xd99d, 0x1c2e, 0x0, 0x0);
        gbc.writeMem(0xa992, { 0x61 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xf253, gbc.sp());
        EXPECT(0xa993, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xa992));
        // 61 00E9
        gbc.setState(0x793a, 0xb2cf, 0x2030, 0x6757, 0x662e, 0x11ee, 0x0, 0x0);
        gbc.writeMem(0x793a, { 0x61 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xb2cf, gbc.sp());
        EXPECT(0x793b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 00EA
        gbc.setState(0x6374, 0xc904, 0x26d0, 0xb272, 0xc950, 0x2ced, 0x1, 0x0);
        gbc.writeMem(0x6374, { 0x61 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xc904, gbc.sp());
        EXPECT(0x6375, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 00EB
        gbc.setState(0xb904, 0xbad0, 0x9720, 0x4f66, 0xaf0c, 0x9ca9, 0x0, 0x1);
        gbc.writeMem(0xb904, { 0x61 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xbad0, gbc.sp());
        EXPECT(0xb905, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xb904));
        // 61 00EC
        gbc.setState(0x7906, 0x4de, 0xeb30, 0xe0cb, 0x4ffe, 0xe54d, 0x0, 0x1);
        gbc.writeMem(0x7906, { 0x61 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x4de, gbc.sp());
        EXPECT(0x7907, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 00EE
        gbc.setState(0xfce, 0x1610, 0xfac0, 0xcba3, 0x55d8, 0x3651, 0x1, 0x0);
        gbc.writeMem(0xfce, { 0x61 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x1610, gbc.sp());
        EXPECT(0xfcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 00EF
        gbc.setState(0xa756, 0xe8ef, 0x7bd0, 0xafa6, 0x41cc, 0xa5d8, 0x0, 0x0);
        gbc.writeMem(0xa756, { 0x61 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xe8ef, gbc.sp());
        EXPECT(0xa757, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xa756));
        // 61 00F0
        gbc.setState(0xcc18, 0x4b89, 0x8a50, 0x1298, 0x9fdd, 0xbd9a, 0x1, 0x1);
        gbc.writeMem(0xcc18, { 0x61 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x4b89, gbc.sp());
        EXPECT(0xcc19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xcc18));
        // 61 00F1
        gbc.setState(0x238e, 0xd0c5, 0xfcc0, 0xb5db, 0x7940, 0xdbd, 0x0, 0x0);
        gbc.writeMem(0x238e, { 0x61 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xd0c5, gbc.sp());
        EXPECT(0x238f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 00F2
        gbc.setState(0xa79c, 0x54a9, 0xa1c0, 0xd92d, 0x9a30, 0xeaf7, 0x0, 0x0);
        gbc.writeMem(0xa79c, { 0x61 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x54a9, gbc.sp());
        EXPECT(0xa79d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xa79c));
        // 61 00F3
        gbc.setState(0xae2e, 0xbf90, 0x3cd0, 0x24b0, 0xdc6e, 0x690a, 0x1, 0x0);
        gbc.writeMem(0xae2e, { 0x61 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xbf90, gbc.sp());
        EXPECT(0xae2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xae2e));
        // 61 00F4
        gbc.setState(0x1594, 0xa1f8, 0xbbf0, 0x7782, 0xa5fb, 0xe746, 0x0, 0x0);
        gbc.writeMem(0x1594, { 0x61 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xa1f8, gbc.sp());
        EXPECT(0x1595, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 00F5
        gbc.setState(0x9fac, 0x17dc, 0x6230, 0x8251, 0x2ad8, 0xd2d1, 0x0, 0x0);
        gbc.writeMem(0x9fac, { 0x61 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x17dc, gbc.sp());
        EXPECT(0x9fad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x9fac));
        // 61 00F6
        gbc.setState(0x5fba, 0x70d9, 0xc4a0, 0x54bd, 0x8177, 0xd653, 0x0, 0x0);
        gbc.writeMem(0x5fba, { 0x61 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x70d9, gbc.sp());
        EXPECT(0x5fbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 00F7
        gbc.setState(0x29a8, 0x64c1, 0xcae0, 0xe77b, 0x3b61, 0xd8f6, 0x0, 0x1);
        gbc.writeMem(0x29a8, { 0x61 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x64c1, gbc.sp());
        EXPECT(0x29a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 00F8
        gbc.setState(0xa10e, 0xc9cf, 0xbe20, 0xfd91, 0x7dd5, 0xec48, 0x1, 0x1);
        gbc.writeMem(0xa10e, { 0x61 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xc9cf, gbc.sp());
        EXPECT(0xa10f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xa10e));
        // 61 00F9
        gbc.setState(0xc562, 0xf8a2, 0x6cb0, 0x1f91, 0xa513, 0x6b0b, 0x1, 0x1);
        gbc.writeMem(0xc562, { 0x61 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xf8a2, gbc.sp());
        EXPECT(0xc563, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xc562));
        // 61 00FA
        gbc.setState(0xbfb6, 0x609f, 0x5ac0, 0x5165, 0x8afa, 0xe8d6, 0x1, 0x0);
        gbc.writeMem(0xbfb6, { 0x61 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x609f, gbc.sp());
        EXPECT(0xbfb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xbfb6));
        // 61 00FC
        gbc.setState(0xded, 0xa9c1, 0x1150, 0xbdde, 0xaab7, 0xabb9, 0x1, 0x0);
        gbc.writeMem(0xded, { 0x61 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xa9c1, gbc.sp());
        EXPECT(0xdee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 00FD
        gbc.setState(0x1f48, 0x113d, 0x6250, 0x380b, 0xf3e, 0x4d6f, 0x0, 0x1);
        gbc.writeMem(0x1f48, { 0x61 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x113d, gbc.sp());
        EXPECT(0x1f49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 00FE
        gbc.setState(0xa816, 0xefab, 0x7320, 0x3a32, 0xfd64, 0xb705, 0x0, 0x0);
        gbc.writeMem(0xa816, { 0x61 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xefab, gbc.sp());
        EXPECT(0xa817, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xa816));
        // 61 0101
        gbc.setState(0x7040, 0xeac2, 0x9ff0, 0x5634, 0xd1d7, 0x1208, 0x1, 0x1);
        gbc.writeMem(0x7040, { 0x61 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xeac2, gbc.sp());
        EXPECT(0x7041, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0102
        gbc.setState(0x5102, 0xb466, 0xe540, 0x4542, 0x325, 0x2be7, 0x1, 0x0);
        gbc.writeMem(0x5102, { 0x61 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xb466, gbc.sp());
        EXPECT(0x5103, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0105
        gbc.setState(0x61a0, 0xe174, 0x5ab0, 0x5f31, 0xcd47, 0x397c, 0x0, 0x0);
        gbc.writeMem(0x61a0, { 0x61 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xe174, gbc.sp());
        EXPECT(0x61a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0106
        gbc.setState(0x1ad3, 0x5b22, 0xa40, 0x90c3, 0x3600, 0x846d, 0x0, 0x1);
        gbc.writeMem(0x1ad3, { 0x61 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x5b22, gbc.sp());
        EXPECT(0x1ad4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0107
        gbc.setState(0x81ad, 0x2c11, 0x3400, 0x6535, 0xe143, 0xf74a, 0x0, 0x1);
        gbc.writeMem(0x81ad, { 0x61 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x2c11, gbc.sp());
        EXPECT(0x81ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x81ad));
        // 61 0108
        gbc.setState(0x8ee, 0xf872, 0x8290, 0xebcb, 0x2a65, 0x1bec, 0x0, 0x1);
        gbc.writeMem(0x8ee, { 0x61 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xf872, gbc.sp());
        EXPECT(0x8ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0109
        gbc.setState(0xcc1d, 0x3925, 0xa5d0, 0xe25a, 0x1b63, 0x149f, 0x0, 0x0);
        gbc.writeMem(0xcc1d, { 0x61 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x3925, gbc.sp());
        EXPECT(0xcc1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xcc1d));
        // 61 010A
        gbc.setState(0xaabf, 0x7c85, 0x8740, 0xcdfc, 0x396a, 0x4fc2, 0x1, 0x0);
        gbc.writeMem(0xaabf, { 0x61 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x7c85, gbc.sp());
        EXPECT(0xaac0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xaabf));
        // 61 010B
        gbc.setState(0x5546, 0xf660, 0x35a0, 0xff54, 0x565f, 0xe86f, 0x0, 0x0);
        gbc.writeMem(0x5546, { 0x61 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xf660, gbc.sp());
        EXPECT(0x5547, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 010C
        gbc.setState(0x8996, 0x574b, 0xa050, 0xa4c6, 0x31b1, 0x175d, 0x1, 0x1);
        gbc.writeMem(0x8996, { 0x61 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x574b, gbc.sp());
        EXPECT(0x8997, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x8996));
        // 61 010D
        gbc.setState(0x1826, 0xdfe6, 0xe920, 0x1a17, 0xbaa, 0x167b, 0x0, 0x0);
        gbc.writeMem(0x1826, { 0x61 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xdfe6, gbc.sp());
        EXPECT(0x1827, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 010E
        gbc.setState(0x955a, 0x8de3, 0xd810, 0xd181, 0xd17, 0x5c44, 0x1, 0x1);
        gbc.writeMem(0x955a, { 0x61 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x8de3, gbc.sp());
        EXPECT(0x955b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x955a));
        // 61 0110
        gbc.setState(0xeb42, 0x3dc2, 0x4ef0, 0x41df, 0x508b, 0xf50d, 0x1, 0x0);
        gbc.writeMem(0xeb42, { 0x61 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x3dc2, gbc.sp());
        EXPECT(0xeb43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xeb42));
        // 61 0111
        gbc.setState(0xa138, 0x5152, 0x3530, 0x48a4, 0xb1be, 0xbc5a, 0x1, 0x0);
        gbc.writeMem(0xa138, { 0x61 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x5152, gbc.sp());
        EXPECT(0xa139, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xa138));
        // 61 0112
        gbc.setState(0xbb6f, 0x2862, 0x7930, 0xc959, 0xc96f, 0x7fb, 0x1, 0x0);
        gbc.writeMem(0xbb6f, { 0x61 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x2862, gbc.sp());
        EXPECT(0xbb70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xbb6f));
        // 61 0113
        gbc.setState(0x5532, 0x95c4, 0xd110, 0xe5ed, 0x9249, 0xfc98, 0x1, 0x1);
        gbc.writeMem(0x5532, { 0x61 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x95c4, gbc.sp());
        EXPECT(0x5533, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0115
        gbc.setState(0xce0f, 0x3b18, 0xa6c0, 0x3766, 0xc8a3, 0xdd14, 0x1, 0x1);
        gbc.writeMem(0xce0f, { 0x61 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x3b18, gbc.sp());
        EXPECT(0xce10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xce0f));
        // 61 0116
        gbc.setState(0x839c, 0x6667, 0xf820, 0xd3de, 0x8b3c, 0xe77b, 0x0, 0x1);
        gbc.writeMem(0x839c, { 0x61 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x6667, gbc.sp());
        EXPECT(0x839d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x839c));
        // 61 0117
        gbc.setState(0x7776, 0x2576, 0x6490, 0xe73f, 0xb0a2, 0xf581, 0x1, 0x0);
        gbc.writeMem(0x7776, { 0x61 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x2576, gbc.sp());
        EXPECT(0x7777, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0118
        gbc.setState(0x9aad, 0x3994, 0x4610, 0x80fc, 0x77a8, 0xdd68, 0x0, 0x1);
        gbc.writeMem(0x9aad, { 0x61 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x3994, gbc.sp());
        EXPECT(0x9aae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x9aad));
        // 61 0119
        gbc.setState(0xc6c5, 0x8378, 0x6b10, 0x36c5, 0x1ae8, 0xc234, 0x1, 0x0);
        gbc.writeMem(0xc6c5, { 0x61 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x8378, gbc.sp());
        EXPECT(0xc6c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xc6c5));
        // 61 011A
        gbc.setState(0x243e, 0x3efa, 0xca30, 0xa23d, 0xb021, 0xb983, 0x1, 0x1);
        gbc.writeMem(0x243e, { 0x61 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x3efa, gbc.sp());
        EXPECT(0x243f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 011B
        gbc.setState(0x5b4a, 0x9a77, 0x3170, 0xaa2c, 0x6c96, 0xc274, 0x0, 0x1);
        gbc.writeMem(0x5b4a, { 0x61 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x9a77, gbc.sp());
        EXPECT(0x5b4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 011C
        gbc.setState(0xbc15, 0x285, 0xd870, 0x8116, 0x5ff7, 0x7d13, 0x1, 0x1);
        gbc.writeMem(0xbc15, { 0x61 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x285, gbc.sp());
        EXPECT(0xbc16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xbc15));
        // 61 011D
        gbc.setState(0x9555, 0xc217, 0xf9e0, 0x1828, 0xce07, 0xcc0f, 0x1, 0x1);
        gbc.writeMem(0x9555, { 0x61 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xc217, gbc.sp());
        EXPECT(0x9556, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x9555));
        // 61 011E
        gbc.setState(0x27bf, 0x446, 0xd6c0, 0x1dba, 0x97fe, 0x527a, 0x0, 0x0);
        gbc.writeMem(0x27bf, { 0x61 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x446, gbc.sp());
        EXPECT(0x27c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 011F
        gbc.setState(0xb12c, 0xa098, 0x5100, 0x6ba8, 0x1f80, 0x999d, 0x0, 0x1);
        gbc.writeMem(0xb12c, { 0x61 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xa098, gbc.sp());
        EXPECT(0xb12d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xb12c));
        // 61 0120
        gbc.setState(0x74cc, 0x715b, 0x93e0, 0x9c4e, 0x64d2, 0xb5e9, 0x1, 0x1);
        gbc.writeMem(0x74cc, { 0x61 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x715b, gbc.sp());
        EXPECT(0x74cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0121
        gbc.setState(0x4398, 0x95c7, 0xe2e0, 0x3a44, 0xd141, 0x19f6, 0x0, 0x1);
        gbc.writeMem(0x4398, { 0x61 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x95c7, gbc.sp());
        EXPECT(0x4399, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0123
        gbc.setState(0x3007, 0x8673, 0xdf30, 0x5152, 0xd29c, 0x686d, 0x0, 0x1);
        gbc.writeMem(0x3007, { 0x61 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x8673, gbc.sp());
        EXPECT(0x3008, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0124
        gbc.setState(0xba4f, 0x9d49, 0x73d0, 0x5005, 0xbd4c, 0xdb32, 0x0, 0x1);
        gbc.writeMem(0xba4f, { 0x61 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x9d49, gbc.sp());
        EXPECT(0xba50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xba4f));
        // 61 0125
        gbc.setState(0x59dc, 0xe044, 0x26e0, 0xbc21, 0xf52e, 0xcb71, 0x1, 0x1);
        gbc.writeMem(0x59dc, { 0x61 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xe044, gbc.sp());
        EXPECT(0x59dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0126
        gbc.setState(0xc73a, 0xb5cd, 0x7b0, 0x526d, 0x6ca5, 0xcd58, 0x1, 0x0);
        gbc.writeMem(0xc73a, { 0x61 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xb5cd, gbc.sp());
        EXPECT(0xc73b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xc73a));
        // 61 0127
        gbc.setState(0x5ff, 0x7622, 0xdf90, 0xdd87, 0x1bca, 0xbb19, 0x0, 0x0);
        gbc.writeMem(0x5ff, { 0x61 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x7622, gbc.sp());
        EXPECT(0x600, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0128
        gbc.setState(0x6bca, 0xa140, 0xf070, 0x67c, 0xac81, 0xfec5, 0x1, 0x0);
        gbc.writeMem(0x6bca, { 0x61 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xa140, gbc.sp());
        EXPECT(0x6bcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0129
        gbc.setState(0xb22, 0xc1f, 0x2730, 0x6963, 0x5b3b, 0x623c, 0x1, 0x0);
        gbc.writeMem(0xb22, { 0x61 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xc1f, gbc.sp());
        EXPECT(0xb23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 012A
        gbc.setState(0x8137, 0x4b41, 0xc430, 0xbd24, 0x4e56, 0x1759, 0x1, 0x0);
        gbc.writeMem(0x8137, { 0x61 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x4b41, gbc.sp());
        EXPECT(0x8138, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x8137));
        // 61 012B
        gbc.setState(0xb9c8, 0xb2c1, 0xe5a0, 0xb1e9, 0xf2a6, 0x22ba, 0x1, 0x0);
        gbc.writeMem(0xb9c8, { 0x61 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xb2c1, gbc.sp());
        EXPECT(0xb9c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xb9c8));
        // 61 012C
        gbc.setState(0xa64d, 0x1be4, 0x7140, 0x25d1, 0x5700, 0xe273, 0x1, 0x0);
        gbc.writeMem(0xa64d, { 0x61 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x1be4, gbc.sp());
        EXPECT(0xa64e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xa64d));
        // 61 012D
        gbc.setState(0x125c, 0x8b7, 0x2ea0, 0x5114, 0x421, 0xed79, 0x0, 0x0);
        gbc.writeMem(0x125c, { 0x61 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x8b7, gbc.sp());
        EXPECT(0x125d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 012E
        gbc.setState(0x5e1a, 0x1b8a, 0xe840, 0xd928, 0xc414, 0x2660, 0x0, 0x1);
        gbc.writeMem(0x5e1a, { 0x61 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x1b8a, gbc.sp());
        EXPECT(0x5e1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 012F
        gbc.setState(0x40fb, 0x3a1d, 0xc70, 0x20fb, 0x1839, 0xc8e6, 0x1, 0x1);
        gbc.writeMem(0x40fb, { 0x61 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x3a1d, gbc.sp());
        EXPECT(0x40fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0130
        gbc.setState(0xc429, 0xd0b0, 0x1f0, 0x904e, 0xa94d, 0x2323, 0x1, 0x1);
        gbc.writeMem(0xc429, { 0x61 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xd0b0, gbc.sp());
        EXPECT(0xc42a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xc429));
        // 61 0131
        gbc.setState(0x1ccf, 0xbaa5, 0x5760, 0x7997, 0x47d7, 0x96ee, 0x1, 0x1);
        gbc.writeMem(0x1ccf, { 0x61 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xbaa5, gbc.sp());
        EXPECT(0x1cd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0132
        gbc.setState(0x9f1a, 0xb35c, 0x3f20, 0xd338, 0x1091, 0xea9c, 0x0, 0x1);
        gbc.writeMem(0x9f1a, { 0x61 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xb35c, gbc.sp());
        EXPECT(0x9f1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x9f1a));
        // 61 0133
        gbc.setState(0x27f9, 0xd555, 0x7dc0, 0xb266, 0x5117, 0xecc, 0x0, 0x1);
        gbc.writeMem(0x27f9, { 0x61 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xd555, gbc.sp());
        EXPECT(0x27fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0134
        gbc.setState(0x7320, 0x8e4, 0x1350, 0xba53, 0xa56c, 0x729, 0x1, 0x1);
        gbc.writeMem(0x7320, { 0x61 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x8e4, gbc.sp());
        EXPECT(0x7321, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0135
        gbc.setState(0xc39c, 0x7705, 0x5a30, 0x117a, 0xf9f8, 0x8b58, 0x0, 0x0);
        gbc.writeMem(0xc39c, { 0x61 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x7705, gbc.sp());
        EXPECT(0xc39d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xc39c));
        // 61 0136
        gbc.setState(0xac5c, 0x1d1a, 0x6360, 0x35b6, 0x632a, 0xf698, 0x1, 0x0);
        gbc.writeMem(0xac5c, { 0x61 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x1d1a, gbc.sp());
        EXPECT(0xac5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xac5c));
        // 61 0137
        gbc.setState(0xd563, 0x12b, 0x1600, 0x5b13, 0x3aa1, 0xda51, 0x1, 0x1);
        gbc.writeMem(0xd563, { 0x61 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x12b, gbc.sp());
        EXPECT(0xd564, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xd563));
        // 61 0139
        gbc.setState(0x61af, 0xb55f, 0xe550, 0xb31d, 0xe1cf, 0x7184, 0x1, 0x1);
        gbc.writeMem(0x61af, { 0x61 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xb55f, gbc.sp());
        EXPECT(0x61b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 013A
        gbc.setState(0x901, 0x59d9, 0x4660, 0x65cb, 0x2690, 0xfc4b, 0x0, 0x1);
        gbc.writeMem(0x901, { 0x61 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x59d9, gbc.sp());
        EXPECT(0x902, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 013B
        gbc.setState(0xe8ce, 0xf86a, 0x6c60, 0xdc6d, 0x57d, 0xed32, 0x0, 0x1);
        gbc.writeMem(0xe8ce, { 0x61 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xf86a, gbc.sp());
        EXPECT(0xe8cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xe8ce));
        // 61 013C
        gbc.setState(0x18f7, 0x826b, 0x6fb0, 0x7642, 0x1b32, 0xffe4, 0x1, 0x1);
        gbc.writeMem(0x18f7, { 0x61 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x826b, gbc.sp());
        EXPECT(0x18f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 013D
        gbc.setState(0x189a, 0x921c, 0xaef0, 0x82ae, 0xb9bc, 0xeb21, 0x1, 0x1);
        gbc.writeMem(0x189a, { 0x61 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x921c, gbc.sp());
        EXPECT(0x189b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 013E
        gbc.setState(0x2b58, 0x1945, 0x2a80, 0xcedf, 0xf4db, 0x71f9, 0x1, 0x1);
        gbc.writeMem(0x2b58, { 0x61 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x1945, gbc.sp());
        EXPECT(0x2b59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 013F
        gbc.setState(0x61f, 0x9cb9, 0xdaa0, 0x2331, 0xe4f4, 0xbf8d, 0x1, 0x0);
        gbc.writeMem(0x61f, { 0x61 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x9cb9, gbc.sp());
        EXPECT(0x620, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0140
        gbc.setState(0x67e1, 0x5cc9, 0x6bb0, 0x5e69, 0x30b7, 0x1f07, 0x1, 0x1);
        gbc.writeMem(0x67e1, { 0x61 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x5cc9, gbc.sp());
        EXPECT(0x67e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0141
        gbc.setState(0xcf8d, 0xabeb, 0x21d0, 0x3add, 0x77a7, 0xc186, 0x1, 0x1);
        gbc.writeMem(0xcf8d, { 0x61 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xabeb, gbc.sp());
        EXPECT(0xcf8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xcf8d));
        // 61 0142
        gbc.setState(0xc793, 0xe446, 0x9950, 0x7707, 0x5743, 0xd627, 0x1, 0x0);
        gbc.writeMem(0xc793, { 0x61 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xe446, gbc.sp());
        EXPECT(0xc794, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xc793));
        // 61 0143
        gbc.setState(0x79b2, 0x22a7, 0xe7a0, 0x4870, 0x8f32, 0xe0ee, 0x1, 0x0);
        gbc.writeMem(0x79b2, { 0x61 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x22a7, gbc.sp());
        EXPECT(0x79b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0144
        gbc.setState(0x6094, 0x7a50, 0x190, 0xca1d, 0xa1a7, 0xdcfe, 0x0, 0x0);
        gbc.writeMem(0x6094, { 0x61 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x7a50, gbc.sp());
        EXPECT(0x6095, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0146
        gbc.setState(0x9b6a, 0xc4fd, 0x2770, 0xbd84, 0x77e, 0xb3de, 0x1, 0x1);
        gbc.writeMem(0x9b6a, { 0x61 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xc4fd, gbc.sp());
        EXPECT(0x9b6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x9b6a));
        // 61 0147
        gbc.setState(0xe485, 0x3f03, 0x91c0, 0x7c7e, 0xd81a, 0x7e30, 0x0, 0x0);
        gbc.writeMem(0xe485, { 0x61 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x3f03, gbc.sp());
        EXPECT(0xe486, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xe485));
        // 61 0148
        gbc.setState(0xb53, 0x3453, 0x80f0, 0xf4d5, 0x190f, 0x917f, 0x1, 0x0);
        gbc.writeMem(0xb53, { 0x61 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x3453, gbc.sp());
        EXPECT(0xb54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0149
        gbc.setState(0x975a, 0xcd6e, 0x6f10, 0xde24, 0xc838, 0x50a, 0x0, 0x1);
        gbc.writeMem(0x975a, { 0x61 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xcd6e, gbc.sp());
        EXPECT(0x975b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x975a));
        // 61 014A
        gbc.setState(0x9859, 0x357f, 0x5fb0, 0x8df4, 0x4a32, 0x4f2c, 0x1, 0x1);
        gbc.writeMem(0x9859, { 0x61 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x357f, gbc.sp());
        EXPECT(0x985a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x9859));
        // 61 014B
        gbc.setState(0x283f, 0xbf65, 0xdae0, 0xd491, 0xd41e, 0xb9e9, 0x0, 0x0);
        gbc.writeMem(0x283f, { 0x61 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xbf65, gbc.sp());
        EXPECT(0x2840, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 014C
        gbc.setState(0xd584, 0xe5c2, 0x5620, 0x7190, 0x9e4f, 0x443c, 0x0, 0x0);
        gbc.writeMem(0xd584, { 0x61 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xe5c2, gbc.sp());
        EXPECT(0xd585, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xd584));
        // 61 014D
        gbc.setState(0x1559, 0x81c2, 0x76f0, 0x5c9e, 0x3b4f, 0xcb42, 0x1, 0x0);
        gbc.writeMem(0x1559, { 0x61 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x81c2, gbc.sp());
        EXPECT(0x155a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 014E
        gbc.setState(0x9440, 0x2b5e, 0xfe10, 0x6668, 0xb81d, 0x7f67, 0x0, 0x1);
        gbc.writeMem(0x9440, { 0x61 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x2b5e, gbc.sp());
        EXPECT(0x9441, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x9440));
        // 61 014F
        gbc.setState(0x6672, 0xb1bf, 0x2400, 0x2eeb, 0xe263, 0xa50f, 0x1, 0x0);
        gbc.writeMem(0x6672, { 0x61 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xb1bf, gbc.sp());
        EXPECT(0x6673, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0150
        gbc.setState(0x4747, 0x23d3, 0x1700, 0x7f5, 0x548, 0x6f58, 0x1, 0x0);
        gbc.writeMem(0x4747, { 0x61 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x23d3, gbc.sp());
        EXPECT(0x4748, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0151
        gbc.setState(0x742b, 0xea13, 0x7850, 0x4525, 0x9928, 0x9605, 0x1, 0x1);
        gbc.writeMem(0x742b, { 0x61 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xea13, gbc.sp());
        EXPECT(0x742c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0152
        gbc.setState(0x4142, 0xfcf7, 0x8d10, 0xf064, 0x48ff, 0xf34f, 0x1, 0x0);
        gbc.writeMem(0x4142, { 0x61 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xfcf7, gbc.sp());
        EXPECT(0x4143, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0153
        gbc.setState(0xa598, 0xcdb5, 0x2b0, 0xec7e, 0xfb41, 0xfbeb, 0x1, 0x0);
        gbc.writeMem(0xa598, { 0x61 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xcdb5, gbc.sp());
        EXPECT(0xa599, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xa598));
        // 61 0154
        gbc.setState(0xd7c, 0xf077, 0xad40, 0x525, 0x6082, 0x1215, 0x0, 0x1);
        gbc.writeMem(0xd7c, { 0x61 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xf077, gbc.sp());
        EXPECT(0xd7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0155
        gbc.setState(0x837a, 0xf965, 0x1680, 0x99b0, 0xbb33, 0xf7c1, 0x0, 0x0);
        gbc.writeMem(0x837a, { 0x61 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xf965, gbc.sp());
        EXPECT(0x837b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x837a));
        // 61 0156
        gbc.setState(0x2220, 0xaa35, 0xb350, 0xd402, 0xbce7, 0xcb1c, 0x0, 0x0);
        gbc.writeMem(0x2220, { 0x61 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xaa35, gbc.sp());
        EXPECT(0x2221, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0157
        gbc.setState(0x29ba, 0x9e4f, 0xdaa0, 0x8bc7, 0xb41c, 0x5046, 0x1, 0x1);
        gbc.writeMem(0x29ba, { 0x61 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x9e4f, gbc.sp());
        EXPECT(0x29bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0158
        gbc.setState(0xed4c, 0x5f1d, 0x54e0, 0x9ffb, 0xdc5, 0xf95a, 0x0, 0x1);
        gbc.writeMem(0xed4c, { 0x61 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x5f1d, gbc.sp());
        EXPECT(0xed4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xed4c));
        // 61 0159
        gbc.setState(0x2c00, 0xc8, 0x30, 0xa331, 0x1a90, 0x8979, 0x0, 0x1);
        gbc.writeMem(0x2c00, { 0x61 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xc8, gbc.sp());
        EXPECT(0x2c01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 015A
        gbc.setState(0x2993, 0xc4cb, 0x5bc0, 0x1584, 0x752d, 0x1bdb, 0x0, 0x0);
        gbc.writeMem(0x2993, { 0x61 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xc4cb, gbc.sp());
        EXPECT(0x2994, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 015B
        gbc.setState(0xa10, 0x3472, 0x5820, 0x60fe, 0xc4ed, 0xcccc, 0x1, 0x0);
        gbc.writeMem(0xa10, { 0x61 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x3472, gbc.sp());
        EXPECT(0xa11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 015D
        gbc.setState(0x6e6c, 0xc332, 0xaf20, 0xb863, 0xe7ad, 0xd07a, 0x0, 0x1);
        gbc.writeMem(0x6e6c, { 0x61 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xc332, gbc.sp());
        EXPECT(0x6e6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 015E
        gbc.setState(0x8f51, 0x4020, 0xd00, 0xae31, 0xad48, 0xcc3a, 0x0, 0x1);
        gbc.writeMem(0x8f51, { 0x61 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x4020, gbc.sp());
        EXPECT(0x8f52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x8f51));
        // 61 015F
        gbc.setState(0x8cb0, 0xed1a, 0x56d0, 0x7a3d, 0x2b8d, 0x4802, 0x0, 0x1);
        gbc.writeMem(0x8cb0, { 0x61 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xed1a, gbc.sp());
        EXPECT(0x8cb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x8cb0));
        // 61 0160
        gbc.setState(0x8bff, 0x9222, 0xe440, 0xbc6e, 0xa8c9, 0xa432, 0x0, 0x0);
        gbc.writeMem(0x8bff, { 0x61 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x9222, gbc.sp());
        EXPECT(0x8c00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x8bff));
        // 61 0161
        gbc.setState(0x65df, 0x1e60, 0x21a0, 0xba35, 0x765e, 0xd17d, 0x1, 0x0);
        gbc.writeMem(0x65df, { 0x61 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x1e60, gbc.sp());
        EXPECT(0x65e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0162
        gbc.setState(0x1aa4, 0xb0dc, 0x83c0, 0x14e1, 0x4365, 0x4785, 0x0, 0x1);
        gbc.writeMem(0x1aa4, { 0x61 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xb0dc, gbc.sp());
        EXPECT(0x1aa5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0163
        gbc.setState(0xeec7, 0x3099, 0x2b00, 0x3d5d, 0x19a, 0xea48, 0x0, 0x1);
        gbc.writeMem(0xeec7, { 0x61 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x3099, gbc.sp());
        EXPECT(0xeec8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xeec7));
        // 61 0164
        gbc.setState(0x3e95, 0x2c70, 0xcf20, 0xb533, 0xd9e5, 0xb6f7, 0x1, 0x1);
        gbc.writeMem(0x3e95, { 0x61 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x2c70, gbc.sp());
        EXPECT(0x3e96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0166
        gbc.setState(0xd335, 0xe434, 0xa9d0, 0x731c, 0xb0da, 0xee4e, 0x0, 0x1);
        gbc.writeMem(0xd335, { 0x61 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xe434, gbc.sp());
        EXPECT(0xd336, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xd335));
        // 61 0167
        gbc.setState(0x5fa9, 0xf2a6, 0x3540, 0x7e4e, 0xab72, 0x2ab9, 0x0, 0x1);
        gbc.writeMem(0x5fa9, { 0x61 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xf2a6, gbc.sp());
        EXPECT(0x5faa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0168
        gbc.setState(0xced1, 0x557f, 0x5760, 0x1b26, 0x49fc, 0xc367, 0x0, 0x0);
        gbc.writeMem(0xced1, { 0x61 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x557f, gbc.sp());
        EXPECT(0xced2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xced1));
        // 61 0169
        gbc.setState(0xb3ad, 0x5a92, 0x9580, 0x7dea, 0x5d00, 0x2512, 0x0, 0x1);
        gbc.writeMem(0xb3ad, { 0x61 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x5a92, gbc.sp());
        EXPECT(0xb3ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xb3ad));
        // 61 016A
        gbc.setState(0x9d4d, 0xeacc, 0x7c10, 0xf0a8, 0x7f6c, 0x773c, 0x0, 0x0);
        gbc.writeMem(0x9d4d, { 0x61 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xeacc, gbc.sp());
        EXPECT(0x9d4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x9d4d));
        // 61 016B
        gbc.setState(0x9485, 0xdd45, 0xd6d0, 0x4083, 0x4c51, 0xfda4, 0x0, 0x0);
        gbc.writeMem(0x9485, { 0x61 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xdd45, gbc.sp());
        EXPECT(0x9486, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x9485));
        // 61 016C
        gbc.setState(0xc295, 0x6902, 0xe490, 0x3fc0, 0x9452, 0xcd1f, 0x0, 0x1);
        gbc.writeMem(0xc295, { 0x61 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x6902, gbc.sp());
        EXPECT(0xc296, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xc295));
        // 61 016D
        gbc.setState(0x2edd, 0xfa20, 0xc250, 0xadfb, 0xd9e4, 0xd9c6, 0x0, 0x0);
        gbc.writeMem(0x2edd, { 0x61 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xfa20, gbc.sp());
        EXPECT(0x2ede, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 016E
        gbc.setState(0xcae8, 0xd183, 0x7e70, 0x42ec, 0x3769, 0x8e66, 0x1, 0x1);
        gbc.writeMem(0xcae8, { 0x61 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xd183, gbc.sp());
        EXPECT(0xcae9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xcae8));
        // 61 016F
        gbc.setState(0xc42e, 0x39d5, 0x84d0, 0x4bd1, 0xf8be, 0x3009, 0x1, 0x1);
        gbc.writeMem(0xc42e, { 0x61 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x39d5, gbc.sp());
        EXPECT(0xc42f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xc42e));
        // 61 0170
        gbc.setState(0x33d9, 0x7047, 0xab0, 0xbc39, 0x8436, 0x787, 0x1, 0x0);
        gbc.writeMem(0x33d9, { 0x61 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x7047, gbc.sp());
        EXPECT(0x33da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0171
        gbc.setState(0xee60, 0xdd22, 0x6250, 0x564b, 0x1b3c, 0x87f7, 0x0, 0x1);
        gbc.writeMem(0xee60, { 0x61 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xdd22, gbc.sp());
        EXPECT(0xee61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xee60));
        // 61 0172
        gbc.setState(0xa676, 0x7157, 0x42d0, 0xa731, 0xcbe7, 0x83bb, 0x0, 0x0);
        gbc.writeMem(0xa676, { 0x61 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x7157, gbc.sp());
        EXPECT(0xa677, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xa676));
        // 61 0173
        gbc.setState(0x9f74, 0x552a, 0x6c80, 0x6279, 0x1f5d, 0x5074, 0x0, 0x0);
        gbc.writeMem(0x9f74, { 0x61 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x552a, gbc.sp());
        EXPECT(0x9f75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x9f74));
        // 61 0174
        gbc.setState(0xc350, 0xf15f, 0xad40, 0xfe1b, 0x2c5a, 0x3a2f, 0x1, 0x0);
        gbc.writeMem(0xc350, { 0x61 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xf15f, gbc.sp());
        EXPECT(0xc351, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xc350));
        // 61 0175
        gbc.setState(0x2bb5, 0x3b08, 0x7550, 0xada, 0x99b1, 0xb3b2, 0x1, 0x0);
        gbc.writeMem(0x2bb5, { 0x61 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x3b08, gbc.sp());
        EXPECT(0x2bb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0176
        gbc.setState(0x5ba9, 0xe605, 0x8790, 0x606, 0xe1d8, 0x6c4d, 0x0, 0x0);
        gbc.writeMem(0x5ba9, { 0x61 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xe605, gbc.sp());
        EXPECT(0x5baa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0177
        gbc.setState(0x4e47, 0x3429, 0x9530, 0xaf06, 0xfacf, 0x74d0, 0x0, 0x0);
        gbc.writeMem(0x4e47, { 0x61 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x3429, gbc.sp());
        EXPECT(0x4e48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0178
        gbc.setState(0xe4e1, 0x837c, 0x3980, 0x717e, 0xfc57, 0x8d34, 0x1, 0x0);
        gbc.writeMem(0xe4e1, { 0x61 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x837c, gbc.sp());
        EXPECT(0xe4e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xe4e1));
        // 61 0179
        gbc.setState(0x443, 0x27c5, 0xbf30, 0xc6f6, 0xe109, 0x305f, 0x1, 0x1);
        gbc.writeMem(0x443, { 0x61 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x27c5, gbc.sp());
        EXPECT(0x444, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 017A
        gbc.setState(0x7a22, 0xd93, 0x8020, 0xbf87, 0xf7c0, 0x5f7c, 0x1, 0x1);
        gbc.writeMem(0x7a22, { 0x61 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xd93, gbc.sp());
        EXPECT(0x7a23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 017B
        gbc.setState(0x268b, 0x5703, 0xd380, 0x8906, 0xb1e6, 0x4134, 0x1, 0x1);
        gbc.writeMem(0x268b, { 0x61 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x5703, gbc.sp());
        EXPECT(0x268c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 017C
        gbc.setState(0x1ef6, 0x215d, 0x7db0, 0x9b0e, 0x49d5, 0x1a05, 0x1, 0x0);
        gbc.writeMem(0x1ef6, { 0x61 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x215d, gbc.sp());
        EXPECT(0x1ef7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 017D
        gbc.setState(0xc043, 0xf3a, 0xf5f0, 0x3ec7, 0xfb, 0x7723, 0x0, 0x0);
        gbc.writeMem(0xc043, { 0x61 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xf3a, gbc.sp());
        EXPECT(0xc044, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xc043));
        // 61 017E
        gbc.setState(0xdf54, 0xae37, 0xd000, 0xfb37, 0xc7de, 0xc6bf, 0x0, 0x0);
        gbc.writeMem(0xdf54, { 0x61 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xae37, gbc.sp());
        EXPECT(0xdf55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xdf54));
        // 61 017F
        gbc.setState(0xb93, 0xaa78, 0xf1a0, 0x57b, 0x88d, 0xd30, 0x0, 0x0);
        gbc.writeMem(0xb93, { 0x61 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xaa78, gbc.sp());
        EXPECT(0xb94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0180
        gbc.setState(0x9d2, 0xc985, 0xdd70, 0x8a60, 0x4acc, 0xc212, 0x0, 0x1);
        gbc.writeMem(0x9d2, { 0x61 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xc985, gbc.sp());
        EXPECT(0x9d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0181
        gbc.setState(0x3077, 0xc890, 0xf360, 0xc9af, 0xd2fc, 0x704d, 0x0, 0x0);
        gbc.writeMem(0x3077, { 0x61 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xc890, gbc.sp());
        EXPECT(0x3078, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0182
        gbc.setState(0xe1bc, 0x749a, 0xb780, 0x1c6e, 0xef67, 0x5c5f, 0x1, 0x1);
        gbc.writeMem(0xe1bc, { 0x61 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x749a, gbc.sp());
        EXPECT(0xe1bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xe1bc));
        // 61 0183
        gbc.setState(0x7b64, 0x6032, 0x81e0, 0xd01b, 0xc792, 0x471a, 0x1, 0x1);
        gbc.writeMem(0x7b64, { 0x61 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x6032, gbc.sp());
        EXPECT(0x7b65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0184
        gbc.setState(0x13af, 0xf6c5, 0xb910, 0xe9ee, 0xb2f0, 0x3348, 0x0, 0x0);
        gbc.writeMem(0x13af, { 0x61 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xf6c5, gbc.sp());
        EXPECT(0x13b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0185
        gbc.setState(0x5842, 0xb11, 0xa610, 0xece3, 0x3fab, 0x3954, 0x1, 0x1);
        gbc.writeMem(0x5842, { 0x61 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xb11, gbc.sp());
        EXPECT(0x5843, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0186
        gbc.setState(0x7bc8, 0x9fd, 0xadf0, 0x75e4, 0xa91d, 0x159f, 0x1, 0x1);
        gbc.writeMem(0x7bc8, { 0x61 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x9fd, gbc.sp());
        EXPECT(0x7bc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0187
        gbc.setState(0xc059, 0x5762, 0xee70, 0xe274, 0x6f67, 0x7905, 0x1, 0x0);
        gbc.writeMem(0xc059, { 0x61 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x5762, gbc.sp());
        EXPECT(0xc05a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xc059));
        // 61 0188
        gbc.setState(0x5119, 0x7502, 0x1e40, 0x8661, 0xf18, 0x9733, 0x1, 0x0);
        gbc.writeMem(0x5119, { 0x61 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x7502, gbc.sp());
        EXPECT(0x511a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0189
        gbc.setState(0x15, 0x21ee, 0x4ae0, 0xbe91, 0x8ef1, 0x142c, 0x0, 0x0);
        gbc.writeMem(0x15, { 0x61 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x21ee, gbc.sp());
        EXPECT(0x16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 018A
        gbc.setState(0x469a, 0xde53, 0x96a0, 0xc25f, 0x2a2e, 0xed6f, 0x1, 0x0);
        gbc.writeMem(0x469a, { 0x61 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xde53, gbc.sp());
        EXPECT(0x469b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 018B
        gbc.setState(0x5c8e, 0x718a, 0x7a80, 0x36f5, 0xeaa, 0xa23b, 0x1, 0x1);
        gbc.writeMem(0x5c8e, { 0x61 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x718a, gbc.sp());
        EXPECT(0x5c8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 018C
        gbc.setState(0xb1, 0x5b44, 0x3530, 0x946e, 0xd9b0, 0xa2e2, 0x0, 0x0);
        gbc.writeMem(0xb1, { 0x61 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x5b44, gbc.sp());
        EXPECT(0xb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 018D
        gbc.setState(0xddb, 0xe3b8, 0xbb00, 0x26d, 0x6523, 0x2ae7, 0x1, 0x1);
        gbc.writeMem(0xddb, { 0x61 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xe3b8, gbc.sp());
        EXPECT(0xddc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 018E
        gbc.setState(0x4193, 0x1a73, 0x67d0, 0xdde3, 0x9630, 0xba72, 0x1, 0x0);
        gbc.writeMem(0x4193, { 0x61 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x1a73, gbc.sp());
        EXPECT(0x4194, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0190
        gbc.setState(0x9ff5, 0xd09d, 0xf220, 0x4794, 0x1fef, 0x2700, 0x0, 0x1);
        gbc.writeMem(0x9ff5, { 0x61 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xd09d, gbc.sp());
        EXPECT(0x9ff6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x9ff5));
        // 61 0192
        gbc.setState(0x6d11, 0x59cd, 0x4c40, 0x9feb, 0xd57d, 0xfaa9, 0x1, 0x0);
        gbc.writeMem(0x6d11, { 0x61 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x59cd, gbc.sp());
        EXPECT(0x6d12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0193
        gbc.setState(0xeafe, 0xf3ce, 0x54e0, 0xb902, 0x3636, 0xc3db, 0x0, 0x0);
        gbc.writeMem(0xeafe, { 0x61 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xf3ce, gbc.sp());
        EXPECT(0xeaff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xeafe));
        // 61 0194
        gbc.setState(0xb91f, 0xebc8, 0x5a30, 0xe2bb, 0x7f8c, 0x409f, 0x0, 0x1);
        gbc.writeMem(0xb91f, { 0x61 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xebc8, gbc.sp());
        EXPECT(0xb920, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xb91f));
        // 61 0195
        gbc.setState(0xa7a6, 0x499d, 0xdd40, 0xa3cc, 0x4e3c, 0x4f70, 0x0, 0x1);
        gbc.writeMem(0xa7a6, { 0x61 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x499d, gbc.sp());
        EXPECT(0xa7a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xa7a6));
        // 61 0196
        gbc.setState(0x6a76, 0xe151, 0x54f0, 0x915f, 0x476b, 0xaf38, 0x1, 0x0);
        gbc.writeMem(0x6a76, { 0x61 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xe151, gbc.sp());
        EXPECT(0x6a77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0197
        gbc.setState(0x9d65, 0xe8cf, 0x2fa0, 0xaef3, 0x6412, 0xaaca, 0x1, 0x1);
        gbc.writeMem(0x9d65, { 0x61 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xe8cf, gbc.sp());
        EXPECT(0x9d66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x9d65));
        // 61 0198
        gbc.setState(0xb65d, 0x64fc, 0x5680, 0x348b, 0xa299, 0x5f0e, 0x1, 0x1);
        gbc.writeMem(0xb65d, { 0x61 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x64fc, gbc.sp());
        EXPECT(0xb65e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xb65d));
        // 61 0199
        gbc.setState(0x4cf7, 0xbe11, 0x4210, 0xd24c, 0x8159, 0xb7b6, 0x0, 0x0);
        gbc.writeMem(0x4cf7, { 0x61 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xbe11, gbc.sp());
        EXPECT(0x4cf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 019A
        gbc.setState(0xa2a9, 0x3efa, 0x3690, 0x9f48, 0x2846, 0x8bee, 0x0, 0x0);
        gbc.writeMem(0xa2a9, { 0x61 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x3efa, gbc.sp());
        EXPECT(0xa2aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xa2a9));
        // 61 019B
        gbc.setState(0x3b2e, 0xe129, 0x9ca0, 0x8ca4, 0x37f4, 0xd89e, 0x0, 0x1);
        gbc.writeMem(0x3b2e, { 0x61 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xe129, gbc.sp());
        EXPECT(0x3b2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 019C
        gbc.setState(0xb750, 0x46c4, 0x98e0, 0xaa9b, 0xa4f5, 0x9008, 0x0, 0x1);
        gbc.writeMem(0xb750, { 0x61 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x46c4, gbc.sp());
        EXPECT(0xb751, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xb750));
        // 61 019D
        gbc.setState(0x1574, 0x763e, 0x5fc0, 0x3234, 0x7dd9, 0xcca4, 0x0, 0x0);
        gbc.writeMem(0x1574, { 0x61 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x763e, gbc.sp());
        EXPECT(0x1575, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 019E
        gbc.setState(0x6fcd, 0x9525, 0xb940, 0x1329, 0x24ed, 0xefb6, 0x0, 0x1);
        gbc.writeMem(0x6fcd, { 0x61 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x9525, gbc.sp());
        EXPECT(0x6fce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 019F
        gbc.setState(0x166f, 0x7121, 0x31e0, 0x59a7, 0xbb61, 0x392f, 0x1, 0x1);
        gbc.writeMem(0x166f, { 0x61 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x7121, gbc.sp());
        EXPECT(0x1670, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 01A0
        gbc.setState(0x65f6, 0x6d55, 0x6210, 0x6c57, 0xf45c, 0xae76, 0x1, 0x0);
        gbc.writeMem(0x65f6, { 0x61 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x6d55, gbc.sp());
        EXPECT(0x65f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 01A1
        gbc.setState(0xc100, 0xb7f4, 0xe800, 0x93f6, 0x88ff, 0x3900, 0x0, 0x1);
        gbc.writeMem(0xc100, { 0x61 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xb7f4, gbc.sp());
        EXPECT(0xc101, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xc100));
        // 61 01A2
        gbc.setState(0xd1be, 0x9020, 0x82e0, 0xb9da, 0x7a23, 0xae31, 0x0, 0x0);
        gbc.writeMem(0xd1be, { 0x61 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x9020, gbc.sp());
        EXPECT(0xd1bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xd1be));
        // 61 01A3
        gbc.setState(0xb402, 0x7682, 0x290, 0xde2d, 0x95d7, 0xf066, 0x1, 0x0);
        gbc.writeMem(0xb402, { 0x61 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x7682, gbc.sp());
        EXPECT(0xb403, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xb402));
        // 61 01A4
        gbc.setState(0x2807, 0xd709, 0x94e0, 0x6e12, 0x5efa, 0x9505, 0x1, 0x1);
        gbc.writeMem(0x2807, { 0x61 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xd709, gbc.sp());
        EXPECT(0x2808, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 01A5
        gbc.setState(0x7caa, 0xe403, 0x6770, 0x68d2, 0xf34f, 0x70a6, 0x1, 0x1);
        gbc.writeMem(0x7caa, { 0x61 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xe403, gbc.sp());
        EXPECT(0x7cab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 01A6
        gbc.setState(0xa6d5, 0x65cf, 0xe930, 0xb8e4, 0xb6e7, 0x265c, 0x0, 0x1);
        gbc.writeMem(0xa6d5, { 0x61 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x65cf, gbc.sp());
        EXPECT(0xa6d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xa6d5));
        // 61 01A7
        gbc.setState(0x3926, 0x4054, 0xbd60, 0xbb6, 0xa3e5, 0xa3e6, 0x1, 0x0);
        gbc.writeMem(0x3926, { 0x61 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x4054, gbc.sp());
        EXPECT(0x3927, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 01A8
        gbc.setState(0x425c, 0xa1b, 0xbc50, 0xcb52, 0x2381, 0x9e2f, 0x1, 0x0);
        gbc.writeMem(0x425c, { 0x61 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xa1b, gbc.sp());
        EXPECT(0x425d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 01A9
        gbc.setState(0x74fd, 0xb058, 0xc90, 0x3676, 0xfde2, 0x2be2, 0x0, 0x1);
        gbc.writeMem(0x74fd, { 0x61 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xb058, gbc.sp());
        EXPECT(0x74fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 01AA
        gbc.setState(0xcc3a, 0x837b, 0x3660, 0x9aad, 0x78ca, 0x2960, 0x1, 0x0);
        gbc.writeMem(0xcc3a, { 0x61 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x837b, gbc.sp());
        EXPECT(0xcc3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xcc3a));
        // 61 01AB
        gbc.setState(0xb77e, 0x8b8d, 0xda10, 0x9483, 0x7285, 0x4aa2, 0x0, 0x0);
        gbc.writeMem(0xb77e, { 0x61 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x8b8d, gbc.sp());
        EXPECT(0xb77f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xb77e));
        // 61 01AC
        gbc.setState(0xd87b, 0xdc85, 0x58d0, 0x76ad, 0x7f7b, 0xd4a, 0x0, 0x0);
        gbc.writeMem(0xd87b, { 0x61 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xdc85, gbc.sp());
        EXPECT(0xd87c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xd87b));
        // 61 01AD
        gbc.setState(0x75ed, 0xfbb5, 0x21a0, 0x8935, 0x974f, 0x9cb3, 0x0, 0x1);
        gbc.writeMem(0x75ed, { 0x61 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xfbb5, gbc.sp());
        EXPECT(0x75ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 01AE
        gbc.setState(0x224b, 0x75a2, 0x5ac0, 0x42e5, 0xdcac, 0xdd84, 0x1, 0x1);
        gbc.writeMem(0x224b, { 0x61 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x75a2, gbc.sp());
        EXPECT(0x224c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 01AF
        gbc.setState(0x7f7b, 0x1f27, 0xb240, 0x2501, 0x19a, 0xfaf9, 0x1, 0x0);
        gbc.writeMem(0x7f7b, { 0x61 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x1f27, gbc.sp());
        EXPECT(0x7f7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 01B0
        gbc.setState(0x9098, 0x4b9d, 0x5e50, 0x8a72, 0x5769, 0xb247, 0x0, 0x0);
        gbc.writeMem(0x9098, { 0x61 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x4b9d, gbc.sp());
        EXPECT(0x9099, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x9098));
        // 61 01B1
        gbc.setState(0x6983, 0xdc04, 0xa970, 0x2b88, 0xc708, 0xf1c3, 0x0, 0x0);
        gbc.writeMem(0x6983, { 0x61 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xdc04, gbc.sp());
        EXPECT(0x6984, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 01B2
        gbc.setState(0x5379, 0x6d54, 0x1800, 0x1c5e, 0x687f, 0xae01, 0x1, 0x0);
        gbc.writeMem(0x5379, { 0x61 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x6d54, gbc.sp());
        EXPECT(0x537a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 01B3
        gbc.setState(0xc368, 0xb7e, 0xd550, 0xf24c, 0x7a65, 0xaa8, 0x0, 0x1);
        gbc.writeMem(0xc368, { 0x61 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xb7e, gbc.sp());
        EXPECT(0xc369, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xc368));
        // 61 01B4
        gbc.setState(0x1b43, 0x1014, 0xde70, 0x8e13, 0x906c, 0x1676, 0x1, 0x0);
        gbc.writeMem(0x1b43, { 0x61 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x1014, gbc.sp());
        EXPECT(0x1b44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 01B5
        gbc.setState(0x8502, 0x392d, 0x5fa0, 0x2be1, 0x1571, 0xbf7d, 0x1, 0x0);
        gbc.writeMem(0x8502, { 0x61 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x392d, gbc.sp());
        EXPECT(0x8503, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x8502));
        // 61 01B7
        gbc.setState(0xd0d1, 0x7a11, 0x9080, 0x2475, 0x1aed, 0x161a, 0x1, 0x1);
        gbc.writeMem(0xd0d1, { 0x61 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x7a11, gbc.sp());
        EXPECT(0xd0d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xd0d1));
        // 61 01B8
        gbc.setState(0x1c9c, 0xf41f, 0x740, 0xb1dd, 0xfc46, 0xe3a3, 0x0, 0x1);
        gbc.writeMem(0x1c9c, { 0x61 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xf41f, gbc.sp());
        EXPECT(0x1c9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 01B9
        gbc.setState(0xcbc3, 0xf790, 0x2e50, 0x8b36, 0x4e74, 0x7317, 0x1, 0x1);
        gbc.writeMem(0xcbc3, { 0x61 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xf790, gbc.sp());
        EXPECT(0xcbc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xcbc3));
        // 61 01BB
        gbc.setState(0x77a7, 0x5968, 0x3790, 0x750, 0xdd4f, 0xe6b1, 0x1, 0x1);
        gbc.writeMem(0x77a7, { 0x61 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x5968, gbc.sp());
        EXPECT(0x77a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 01BC
        gbc.setState(0xb707, 0x8be8, 0x2b30, 0x71a1, 0x2678, 0xc825, 0x1, 0x1);
        gbc.writeMem(0xb707, { 0x61 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x8be8, gbc.sp());
        EXPECT(0xb708, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xb707));
        // 61 01BD
        gbc.setState(0xbdff, 0x1d0, 0x3b20, 0x5647, 0xc2a1, 0xb2fc, 0x1, 0x0);
        gbc.writeMem(0xbdff, { 0x61 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x1d0, gbc.sp());
        EXPECT(0xbe00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xbdff));
        // 61 01BE
        gbc.setState(0x6bd5, 0x88b3, 0x50a0, 0xcd90, 0x7e22, 0xa94d, 0x1, 0x1);
        gbc.writeMem(0x6bd5, { 0x61 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x88b3, gbc.sp());
        EXPECT(0x6bd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 01BF
        gbc.setState(0xbf68, 0x83c1, 0x3770, 0xc874, 0xa473, 0x6eba, 0x1, 0x1);
        gbc.writeMem(0xbf68, { 0x61 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x83c1, gbc.sp());
        EXPECT(0xbf69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xbf68));
        // 61 01C0
        gbc.setState(0x2af7, 0x4978, 0x2240, 0x4a91, 0x477b, 0xd6ee, 0x1, 0x0);
        gbc.writeMem(0x2af7, { 0x61 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x4978, gbc.sp());
        EXPECT(0x2af8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 01C1
        gbc.setState(0x5c58, 0x9481, 0x6ae0, 0xf2f6, 0x4138, 0x144, 0x1, 0x1);
        gbc.writeMem(0x5c58, { 0x61 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x9481, gbc.sp());
        EXPECT(0x5c59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 01C2
        gbc.setState(0x482f, 0xcd1f, 0x23c0, 0xd069, 0xe930, 0x7b6, 0x0, 0x0);
        gbc.writeMem(0x482f, { 0x61 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xcd1f, gbc.sp());
        EXPECT(0x4830, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 01C3
        gbc.setState(0xe481, 0xc2ae, 0x9bb0, 0xdf83, 0x8f6e, 0x7575, 0x1, 0x1);
        gbc.writeMem(0xe481, { 0x61 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xc2ae, gbc.sp());
        EXPECT(0xe482, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xe481));
        // 61 01C4
        gbc.setState(0x27e3, 0x7ddf, 0xd4d0, 0xfd3d, 0xb269, 0x61bc, 0x1, 0x0);
        gbc.writeMem(0x27e3, { 0x61 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x7ddf, gbc.sp());
        EXPECT(0x27e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 01C5
        gbc.setState(0x36d6, 0x621b, 0xc8b0, 0xb231, 0xe342, 0x19, 0x0, 0x1);
        gbc.writeMem(0x36d6, { 0x61 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x621b, gbc.sp());
        EXPECT(0x36d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 01C6
        gbc.setState(0xa0d6, 0x5223, 0x7550, 0x515c, 0x606b, 0xb6df, 0x1, 0x1);
        gbc.writeMem(0xa0d6, { 0x61 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x5223, gbc.sp());
        EXPECT(0xa0d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xa0d6));
        // 61 01C7
        gbc.setState(0x6272, 0x130, 0xdc10, 0xe01c, 0x5b60, 0x7346, 0x0, 0x1);
        gbc.writeMem(0x6272, { 0x61 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x130, gbc.sp());
        EXPECT(0x6273, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 01C8
        gbc.setState(0x7933, 0xece4, 0x7770, 0x8350, 0xf278, 0x7da5, 0x0, 0x1);
        gbc.writeMem(0x7933, { 0x61 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xece4, gbc.sp());
        EXPECT(0x7934, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 01C9
        gbc.setState(0xcd9c, 0x1b30, 0xaf90, 0xdfad, 0x4f9f, 0xe86b, 0x0, 0x0);
        gbc.writeMem(0xcd9c, { 0x61 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x1b30, gbc.sp());
        EXPECT(0xcd9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xcd9c));
        // 61 01CA
        gbc.setState(0x371f, 0x1200, 0x4a50, 0xd7e8, 0x53f6, 0xd5a8, 0x1, 0x0);
        gbc.writeMem(0x371f, { 0x61 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x1200, gbc.sp());
        EXPECT(0x3720, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 01CB
        gbc.setState(0x6065, 0x9368, 0xfd20, 0x5004, 0x8f3, 0xd722, 0x0, 0x0);
        gbc.writeMem(0x6065, { 0x61 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x9368, gbc.sp());
        EXPECT(0x6066, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 01CC
        gbc.setState(0x1caa, 0xd3b8, 0x5050, 0x5576, 0xc6c2, 0x8e4, 0x0, 0x1);
        gbc.writeMem(0x1caa, { 0x61 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xd3b8, gbc.sp());
        EXPECT(0x1cab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 01CE
        gbc.setState(0xc379, 0x1d93, 0xb2a0, 0x6b7d, 0x41b4, 0xda83, 0x1, 0x0);
        gbc.writeMem(0xc379, { 0x61 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x1d93, gbc.sp());
        EXPECT(0xc37a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xc379));
        // 61 01CF
        gbc.setState(0x2007, 0x8a9b, 0x310, 0x6cbb, 0x35fc, 0x9810, 0x1, 0x0);
        gbc.writeMem(0x2007, { 0x61 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x8a9b, gbc.sp());
        EXPECT(0x2008, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 01D0
        gbc.setState(0x3e00, 0x55d3, 0xafb0, 0xc364, 0xf1c9, 0xfb9b, 0x0, 0x1);
        gbc.writeMem(0x3e00, { 0x61 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x55d3, gbc.sp());
        EXPECT(0x3e01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 01D1
        gbc.setState(0x5a0e, 0x9310, 0x4060, 0x76c8, 0x71dc, 0x309, 0x1, 0x1);
        gbc.writeMem(0x5a0e, { 0x61 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x9310, gbc.sp());
        EXPECT(0x5a0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 01D2
        gbc.setState(0xa1c4, 0x575e, 0xa910, 0x17ef, 0xc50c, 0x7758, 0x1, 0x1);
        gbc.writeMem(0xa1c4, { 0x61 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x575e, gbc.sp());
        EXPECT(0xa1c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xa1c4));
        // 61 01D3
        gbc.setState(0x85ba, 0xb570, 0x9020, 0x22be, 0x7041, 0x30cd, 0x1, 0x0);
        gbc.writeMem(0x85ba, { 0x61 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xb570, gbc.sp());
        EXPECT(0x85bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x85ba));
        // 61 01D4
        gbc.setState(0x8bf4, 0x8bca, 0x6870, 0x5ed4, 0xe574, 0x2fa, 0x1, 0x1);
        gbc.writeMem(0x8bf4, { 0x61 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x8bca, gbc.sp());
        EXPECT(0x8bf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x8bf4));
        // 61 01D5
        gbc.setState(0x3cf1, 0xf780, 0x2fd0, 0x263a, 0x95e8, 0x2c4d, 0x1, 0x1);
        gbc.writeMem(0x3cf1, { 0x61 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xf780, gbc.sp());
        EXPECT(0x3cf2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 01D6
        gbc.setState(0x786a, 0x32a, 0x32b0, 0x4ce, 0x86b0, 0x6fc2, 0x0, 0x0);
        gbc.writeMem(0x786a, { 0x61 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x32a, gbc.sp());
        EXPECT(0x786b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 01D7
        gbc.setState(0x964f, 0x728b, 0xfeb0, 0xc1f2, 0x8a84, 0x88fe, 0x1, 0x0);
        gbc.writeMem(0x964f, { 0x61 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x728b, gbc.sp());
        EXPECT(0x9650, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x964f));
        // 61 01D8
        gbc.setState(0x6c30, 0x80d1, 0xaf50, 0xfa4d, 0xb2aa, 0xe1e8, 0x0, 0x0);
        gbc.writeMem(0x6c30, { 0x61 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x80d1, gbc.sp());
        EXPECT(0x6c31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 01DA
        gbc.setState(0x5bb8, 0x4560, 0xeb60, 0x2009, 0xda0a, 0xe752, 0x1, 0x1);
        gbc.writeMem(0x5bb8, { 0x61 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x4560, gbc.sp());
        EXPECT(0x5bb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 01DB
        gbc.setState(0x715d, 0x6a81, 0x1c80, 0xa520, 0x7e04, 0x1948, 0x0, 0x0);
        gbc.writeMem(0x715d, { 0x61 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x6a81, gbc.sp());
        EXPECT(0x715e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 01DC
        gbc.setState(0x811e, 0x37ca, 0x9050, 0x184e, 0x69cc, 0x96, 0x1, 0x1);
        gbc.writeMem(0x811e, { 0x61 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x37ca, gbc.sp());
        EXPECT(0x811f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x811e));
        // 61 01DD
        gbc.setState(0xa03f, 0xebc2, 0x2250, 0x4286, 0xdcd7, 0x917a, 0x1, 0x0);
        gbc.writeMem(0xa03f, { 0x61 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xebc2, gbc.sp());
        EXPECT(0xa040, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xa03f));
        // 61 01DE
        gbc.setState(0xaf1d, 0xfbba, 0x5d10, 0x4cf9, 0xb100, 0xe0dd, 0x0, 0x0);
        gbc.writeMem(0xaf1d, { 0x61 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xfbba, gbc.sp());
        EXPECT(0xaf1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xaf1d));
        // 61 01DF
        gbc.setState(0xad58, 0x7491, 0x6280, 0xefe, 0x8736, 0x59d4, 0x0, 0x1);
        gbc.writeMem(0xad58, { 0x61 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x7491, gbc.sp());
        EXPECT(0xad59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xad58));
        // 61 01E0
        gbc.setState(0xbdf6, 0xdd00, 0x11a0, 0xe593, 0x5143, 0x23a7, 0x1, 0x0);
        gbc.writeMem(0xbdf6, { 0x61 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xdd00, gbc.sp());
        EXPECT(0xbdf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xbdf6));
        // 61 01E1
        gbc.setState(0x3c11, 0xbfa1, 0x7360, 0x40d5, 0x9698, 0x6ec2, 0x1, 0x0);
        gbc.writeMem(0x3c11, { 0x61 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xbfa1, gbc.sp());
        EXPECT(0x3c12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 01E2
        gbc.setState(0x4e78, 0xd1b1, 0x8b30, 0x7780, 0x577e, 0xb46e, 0x1, 0x0);
        gbc.writeMem(0x4e78, { 0x61 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xd1b1, gbc.sp());
        EXPECT(0x4e79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 01E3
        gbc.setState(0x9df6, 0xcaf8, 0x9330, 0x7d50, 0xe98c, 0x440d, 0x0, 0x0);
        gbc.writeMem(0x9df6, { 0x61 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xcaf8, gbc.sp());
        EXPECT(0x9df7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x9df6));
        // 61 01E4
        gbc.setState(0x3794, 0x1f47, 0xdc80, 0x579a, 0x2c8c, 0x1689, 0x0, 0x1);
        gbc.writeMem(0x3794, { 0x61 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x1f47, gbc.sp());
        EXPECT(0x3795, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 01E5
        gbc.setState(0x3514, 0x4158, 0x4560, 0x59c5, 0xa606, 0x83bb, 0x1, 0x0);
        gbc.writeMem(0x3514, { 0x61 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x4158, gbc.sp());
        EXPECT(0x3515, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 01E6
        gbc.setState(0x695a, 0xf79f, 0xcaa0, 0xd7af, 0x8160, 0x7f27, 0x0, 0x1);
        gbc.writeMem(0x695a, { 0x61 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xf79f, gbc.sp());
        EXPECT(0x695b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 01E7
        gbc.setState(0x22, 0xebad, 0xcdb0, 0xeac0, 0xd1c2, 0x7b75, 0x1, 0x1);
        gbc.writeMem(0x22, { 0x61 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xebad, gbc.sp());
        EXPECT(0x23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 01E8
        gbc.setState(0x6ad3, 0x5111, 0xe360, 0xe0df, 0x238a, 0x4c38, 0x1, 0x0);
        gbc.writeMem(0x6ad3, { 0x61 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x5111, gbc.sp());
        EXPECT(0x6ad4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 01E9
        gbc.setState(0xe576, 0x448f, 0xa9d0, 0x8f37, 0xff2c, 0xbc1d, 0x0, 0x0);
        gbc.writeMem(0xe576, { 0x61 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x448f, gbc.sp());
        EXPECT(0xe577, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xe576));
        // 61 01EA
        gbc.setState(0x6e94, 0xc634, 0xe040, 0x2f0d, 0x6f2d, 0xe87c, 0x0, 0x1);
        gbc.writeMem(0x6e94, { 0x61 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xc634, gbc.sp());
        EXPECT(0x6e95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 01EB
        gbc.setState(0xdb04, 0xcca, 0xe410, 0xc5d0, 0x27b4, 0x6b66, 0x1, 0x1);
        gbc.writeMem(0xdb04, { 0x61 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xcca, gbc.sp());
        EXPECT(0xdb05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xdb04));
        // 61 01EC
        gbc.setState(0xa85e, 0x5358, 0xb2c0, 0xca5b, 0x8bc1, 0x7231, 0x1, 0x1);
        gbc.writeMem(0xa85e, { 0x61 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x5358, gbc.sp());
        EXPECT(0xa85f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xa85e));
        // 61 01ED
        gbc.setState(0x832b, 0x4fe6, 0x8140, 0xe3fe, 0xb36d, 0x267a, 0x0, 0x0);
        gbc.writeMem(0x832b, { 0x61 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x4fe6, gbc.sp());
        EXPECT(0x832c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x832b));
        // 61 01EE
        gbc.setState(0x3e1e, 0xe168, 0x9ca0, 0x3d29, 0x13dc, 0x355f, 0x1, 0x1);
        gbc.writeMem(0x3e1e, { 0x61 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xe168, gbc.sp());
        EXPECT(0x3e1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 01EF
        gbc.setState(0x76eb, 0x6b6c, 0x7720, 0x4b77, 0xf0f9, 0x1dd1, 0x1, 0x0);
        gbc.writeMem(0x76eb, { 0x61 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x6b6c, gbc.sp());
        EXPECT(0x76ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 01F0
        gbc.setState(0x3b97, 0xd620, 0x5810, 0xb3f6, 0xef97, 0xc8f1, 0x1, 0x0);
        gbc.writeMem(0x3b97, { 0x61 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xd620, gbc.sp());
        EXPECT(0x3b98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 01F1
        gbc.setState(0xbeb3, 0x85c, 0x35a0, 0xf3a7, 0xf5e0, 0xf048, 0x1, 0x1);
        gbc.writeMem(0xbeb3, { 0x61 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x85c, gbc.sp());
        EXPECT(0xbeb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xbeb3));
        // 61 01F3
        gbc.setState(0xc6df, 0x2dfc, 0x41c0, 0x4b95, 0xa9d1, 0x8791, 0x1, 0x1);
        gbc.writeMem(0xc6df, { 0x61 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x2dfc, gbc.sp());
        EXPECT(0xc6e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xc6df));
        // 61 01F4
        gbc.setState(0x1554, 0x41f4, 0xae80, 0x8b30, 0x34d1, 0x3de1, 0x1, 0x0);
        gbc.writeMem(0x1554, { 0x61 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x41f4, gbc.sp());
        EXPECT(0x1555, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 01F5
        gbc.setState(0x8912, 0x5fa0, 0x490, 0x2201, 0x7b00, 0x1ae4, 0x1, 0x0);
        gbc.writeMem(0x8912, { 0x61 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x5fa0, gbc.sp());
        EXPECT(0x8913, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x8912));
        // 61 01F6
        gbc.setState(0x277b, 0x9868, 0x6e40, 0x1ea5, 0x42ef, 0x9aa1, 0x0, 0x0);
        gbc.writeMem(0x277b, { 0x61 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x9868, gbc.sp());
        EXPECT(0x277c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 01F7
        gbc.setState(0x188b, 0x1a75, 0x9e00, 0x6167, 0x4a79, 0x834b, 0x1, 0x1);
        gbc.writeMem(0x188b, { 0x61 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x1a75, gbc.sp());
        EXPECT(0x188c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 01F8
        gbc.setState(0xa1ee, 0x3782, 0xd3c0, 0x9888, 0x7e28, 0x21ac, 0x1, 0x0);
        gbc.writeMem(0xa1ee, { 0x61 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x3782, gbc.sp());
        EXPECT(0xa1ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xa1ee));
        // 61 01F9
        gbc.setState(0xbc71, 0xa55f, 0x3ef0, 0x7b16, 0x43d, 0x34a, 0x0, 0x0);
        gbc.writeMem(0xbc71, { 0x61 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xa55f, gbc.sp());
        EXPECT(0xbc72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xbc71));
        // 61 01FA
        gbc.setState(0xa9ae, 0x7f4, 0xdaa0, 0x2345, 0x7557, 0xb, 0x0, 0x0);
        gbc.writeMem(0xa9ae, { 0x61 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x7f4, gbc.sp());
        EXPECT(0xa9af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xa9ae));
        // 61 01FB
        gbc.setState(0x38a1, 0xd697, 0xe670, 0x7e9e, 0x7b80, 0x8466, 0x0, 0x0);
        gbc.writeMem(0x38a1, { 0x61 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xd697, gbc.sp());
        EXPECT(0x38a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 01FC
        gbc.setState(0xa931, 0x5ef9, 0xd130, 0x8966, 0xeda7, 0xc3ad, 0x1, 0x1);
        gbc.writeMem(0xa931, { 0x61 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x5ef9, gbc.sp());
        EXPECT(0xa932, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xa931));
        // 61 01FD
        gbc.setState(0x61fd, 0x580f, 0x9b60, 0x495, 0xeead, 0x6519, 0x1, 0x1);
        gbc.writeMem(0x61fd, { 0x61 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x580f, gbc.sp());
        EXPECT(0x61fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 01FE
        gbc.setState(0xb6f4, 0x614e, 0xc150, 0x66b6, 0xad09, 0x4d27, 0x1, 0x1);
        gbc.writeMem(0xb6f4, { 0x61 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x614e, gbc.sp());
        EXPECT(0xb6f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xb6f4));
        // 61 01FF
        gbc.setState(0xc9cb, 0x640f, 0xb310, 0x5811, 0xc051, 0x9f15, 0x0, 0x0);
        gbc.writeMem(0xc9cb, { 0x61 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x640f, gbc.sp());
        EXPECT(0xc9cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xc9cb));
        // 61 0200
        gbc.setState(0x4ed2, 0xd51a, 0x1890, 0x4b18, 0xc62c, 0xaa40, 0x1, 0x0);
        gbc.writeMem(0x4ed2, { 0x61 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xd51a, gbc.sp());
        EXPECT(0x4ed3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0201
        gbc.setState(0x4cfc, 0x77d1, 0x500, 0x554, 0xc423, 0x757a, 0x0, 0x0);
        gbc.writeMem(0x4cfc, { 0x61 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x77d1, gbc.sp());
        EXPECT(0x4cfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0202
        gbc.setState(0xb6a5, 0x76d0, 0xfad0, 0xb2fa, 0xf193, 0x3f59, 0x1, 0x1);
        gbc.writeMem(0xb6a5, { 0x61 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x76d0, gbc.sp());
        EXPECT(0xb6a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xb6a5));
        // 61 0203
        gbc.setState(0xe70d, 0xbe88, 0x85d0, 0xabb, 0x54c8, 0xe0b9, 0x0, 0x0);
        gbc.writeMem(0xe70d, { 0x61 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xbe88, gbc.sp());
        EXPECT(0xe70e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xe70d));
        // 61 0204
        gbc.setState(0x3711, 0x8770, 0x31e0, 0xd18f, 0xb902, 0x65ed, 0x1, 0x1);
        gbc.writeMem(0x3711, { 0x61 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x8770, gbc.sp());
        EXPECT(0x3712, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0205
        gbc.setState(0x83fe, 0xae6e, 0xb130, 0xd814, 0xebfc, 0xc12f, 0x0, 0x1);
        gbc.writeMem(0x83fe, { 0x61 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xae6e, gbc.sp());
        EXPECT(0x83ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x83fe));
        // 61 0206
        gbc.setState(0xbb01, 0xb97e, 0x4f50, 0xc771, 0x3335, 0xc9c4, 0x0, 0x1);
        gbc.writeMem(0xbb01, { 0x61 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xb97e, gbc.sp());
        EXPECT(0xbb02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xbb01));
        // 61 0207
        gbc.setState(0x988, 0x1127, 0xd730, 0x4da, 0xe6f4, 0x8a78, 0x1, 0x0);
        gbc.writeMem(0x988, { 0x61 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x1127, gbc.sp());
        EXPECT(0x989, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0208
        gbc.setState(0x7bd4, 0x6e23, 0x8280, 0xe1d6, 0xe633, 0xc54c, 0x1, 0x0);
        gbc.writeMem(0x7bd4, { 0x61 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x6e23, gbc.sp());
        EXPECT(0x7bd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0209
        gbc.setState(0xa792, 0xe50f, 0xc0d0, 0xc267, 0x5661, 0xcf93, 0x1, 0x0);
        gbc.writeMem(0xa792, { 0x61 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xe50f, gbc.sp());
        EXPECT(0xa793, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xa792));
        // 61 020A
        gbc.setState(0xe625, 0x99f, 0xa120, 0xbe3f, 0x5ab6, 0x6ed, 0x0, 0x0);
        gbc.writeMem(0xe625, { 0x61 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x99f, gbc.sp());
        EXPECT(0xe626, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xe625));
        // 61 020B
        gbc.setState(0x23e, 0xf2ac, 0xc8b0, 0x2b55, 0xee37, 0x691b, 0x0, 0x0);
        gbc.writeMem(0x23e, { 0x61 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xf2ac, gbc.sp());
        EXPECT(0x23f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 020C
        gbc.setState(0xe91b, 0x91ee, 0xf3e0, 0x3b19, 0xfda4, 0x4937, 0x1, 0x1);
        gbc.writeMem(0xe91b, { 0x61 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x91ee, gbc.sp());
        EXPECT(0xe91c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xe91b));
        // 61 020D
        gbc.setState(0xfa1, 0xa363, 0x2e70, 0xa56f, 0x5573, 0xae7b, 0x1, 0x0);
        gbc.writeMem(0xfa1, { 0x61 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xa363, gbc.sp());
        EXPECT(0xfa2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 020E
        gbc.setState(0x5cc9, 0xc2b1, 0xe820, 0x9706, 0xaa4c, 0x5f17, 0x0, 0x1);
        gbc.writeMem(0x5cc9, { 0x61 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xc2b1, gbc.sp());
        EXPECT(0x5cca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 020F
        gbc.setState(0x7969, 0x1924, 0x50e0, 0xe91a, 0x8288, 0x5afa, 0x1, 0x1);
        gbc.writeMem(0x7969, { 0x61 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x1924, gbc.sp());
        EXPECT(0x796a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0210
        gbc.setState(0xd00, 0x2b72, 0xd3f0, 0x1cb2, 0xc960, 0x1087, 0x1, 0x0);
        gbc.writeMem(0xd00, { 0x61 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x2b72, gbc.sp());
        EXPECT(0xd01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0211
        gbc.setState(0x1202, 0xa88b, 0x9b30, 0xc0d2, 0xd863, 0x7f74, 0x0, 0x0);
        gbc.writeMem(0x1202, { 0x61 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xa88b, gbc.sp());
        EXPECT(0x1203, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0212
        gbc.setState(0xc3da, 0xf28a, 0x2e20, 0x98ab, 0x6ce6, 0xbc66, 0x0, 0x0);
        gbc.writeMem(0xc3da, { 0x61 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xf28a, gbc.sp());
        EXPECT(0xc3db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xc3da));
        // 61 0213
        gbc.setState(0x4fe7, 0x8254, 0x1010, 0x7183, 0x5e13, 0x60b0, 0x1, 0x1);
        gbc.writeMem(0x4fe7, { 0x61 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x8254, gbc.sp());
        EXPECT(0x4fe8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0214
        gbc.setState(0xa843, 0x7795, 0x1b30, 0x679d, 0x55bb, 0x87b8, 0x0, 0x1);
        gbc.writeMem(0xa843, { 0x61 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x7795, gbc.sp());
        EXPECT(0xa844, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xa843));
        // 61 0216
        gbc.setState(0xcbc2, 0x3832, 0x960, 0xcd34, 0x6ce3, 0xcfd7, 0x0, 0x1);
        gbc.writeMem(0xcbc2, { 0x61 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x3832, gbc.sp());
        EXPECT(0xcbc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xcbc2));
        // 61 0218
        gbc.setState(0x2fb4, 0x7447, 0x8570, 0x70fb, 0x3f21, 0xb0e, 0x0, 0x0);
        gbc.writeMem(0x2fb4, { 0x61 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x7447, gbc.sp());
        EXPECT(0x2fb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0219
        gbc.setState(0xca73, 0x40df, 0x8fe0, 0x8b44, 0x9ac1, 0x68c4, 0x0, 0x1);
        gbc.writeMem(0xca73, { 0x61 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x40df, gbc.sp());
        EXPECT(0xca74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xca73));
        // 61 021A
        gbc.setState(0xe467, 0x90e1, 0xc000, 0xb88b, 0x7b88, 0x786f, 0x1, 0x0);
        gbc.writeMem(0xe467, { 0x61 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x90e1, gbc.sp());
        EXPECT(0xe468, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xe467));
        // 61 021B
        gbc.setState(0x3f61, 0x29de, 0xefe0, 0x124, 0x83f3, 0xa37e, 0x1, 0x0);
        gbc.writeMem(0x3f61, { 0x61 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x29de, gbc.sp());
        EXPECT(0x3f62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 021C
        gbc.setState(0xa28c, 0x52e9, 0x8f00, 0x360a, 0xfc38, 0x744a, 0x0, 0x1);
        gbc.writeMem(0xa28c, { 0x61 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x52e9, gbc.sp());
        EXPECT(0xa28d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xa28c));
        // 61 021D
        gbc.setState(0xca01, 0xb4c5, 0x22e0, 0x14e5, 0x78a1, 0x5576, 0x0, 0x1);
        gbc.writeMem(0xca01, { 0x61 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xb4c5, gbc.sp());
        EXPECT(0xca02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xca01));
        // 61 021E
        gbc.setState(0x25ef, 0x1a9d, 0x4250, 0x238a, 0x386a, 0x31f4, 0x0, 0x0);
        gbc.writeMem(0x25ef, { 0x61 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x1a9d, gbc.sp());
        EXPECT(0x25f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 021F
        gbc.setState(0x1893, 0x6128, 0x270, 0xda08, 0x9e16, 0xb051, 0x0, 0x0);
        gbc.writeMem(0x1893, { 0x61 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x6128, gbc.sp());
        EXPECT(0x1894, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0220
        gbc.setState(0x4fae, 0x259f, 0x25b0, 0xf6a2, 0xcd57, 0x7a4d, 0x0, 0x0);
        gbc.writeMem(0x4fae, { 0x61 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x259f, gbc.sp());
        EXPECT(0x4faf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0221
        gbc.setState(0x10a7, 0x5803, 0x4610, 0xbf30, 0x78d7, 0x3d98, 0x1, 0x0);
        gbc.writeMem(0x10a7, { 0x61 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x5803, gbc.sp());
        EXPECT(0x10a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0223
        gbc.setState(0x8b1, 0x3676, 0x3bb0, 0x98dc, 0xb29a, 0x95ce, 0x1, 0x1);
        gbc.writeMem(0x8b1, { 0x61 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x3676, gbc.sp());
        EXPECT(0x8b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0226
        gbc.setState(0x2c04, 0xffb, 0x1dc0, 0xf48a, 0xaa56, 0xb6eb, 0x0, 0x0);
        gbc.writeMem(0x2c04, { 0x61 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xffb, gbc.sp());
        EXPECT(0x2c05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0227
        gbc.setState(0xbbbf, 0xbb7c, 0xcf80, 0xa002, 0x64f8, 0xd13b, 0x0, 0x1);
        gbc.writeMem(0xbbbf, { 0x61 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xbb7c, gbc.sp());
        EXPECT(0xbbc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xbbbf));
        // 61 0228
        gbc.setState(0xb628, 0x184, 0x68b0, 0xf81e, 0x7d17, 0xfc6, 0x0, 0x0);
        gbc.writeMem(0xb628, { 0x61 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x184, gbc.sp());
        EXPECT(0xb629, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xb628));
        // 61 0229
        gbc.setState(0x2578, 0x39f8, 0x60d0, 0x9d09, 0xa943, 0x4b32, 0x1, 0x1);
        gbc.writeMem(0x2578, { 0x61 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x39f8, gbc.sp());
        EXPECT(0x2579, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 022A
        gbc.setState(0x79c6, 0x29ad, 0x44b0, 0xc797, 0x191, 0xbd1b, 0x0, 0x0);
        gbc.writeMem(0x79c6, { 0x61 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x29ad, gbc.sp());
        EXPECT(0x79c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 022B
        gbc.setState(0x2ef4, 0x87b4, 0x5d80, 0xf98a, 0x445c, 0x5c86, 0x0, 0x0);
        gbc.writeMem(0x2ef4, { 0x61 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x87b4, gbc.sp());
        EXPECT(0x2ef5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 022C
        gbc.setState(0xc453, 0xdfd7, 0x8e30, 0xd88f, 0xb5c6, 0xf8ac, 0x1, 0x1);
        gbc.writeMem(0xc453, { 0x61 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xdfd7, gbc.sp());
        EXPECT(0xc454, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xc453));
        // 61 022D
        gbc.setState(0xaff9, 0x1f4b, 0x90, 0x1d81, 0x5afa, 0xf142, 0x1, 0x0);
        gbc.writeMem(0xaff9, { 0x61 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x1f4b, gbc.sp());
        EXPECT(0xaffa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xaff9));
        // 61 022E
        gbc.setState(0x9b35, 0xf90c, 0x7340, 0x71d1, 0xd9b8, 0xa851, 0x1, 0x0);
        gbc.writeMem(0x9b35, { 0x61 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xf90c, gbc.sp());
        EXPECT(0x9b36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x9b35));
        // 61 022F
        gbc.setState(0x1d69, 0x54ff, 0x4d80, 0x8327, 0x16f5, 0x68ac, 0x1, 0x0);
        gbc.writeMem(0x1d69, { 0x61 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x54ff, gbc.sp());
        EXPECT(0x1d6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0230
        gbc.setState(0x4825, 0xc3c7, 0xa720, 0xf699, 0x9fc2, 0xa6ce, 0x1, 0x0);
        gbc.writeMem(0x4825, { 0x61 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xc3c7, gbc.sp());
        EXPECT(0x4826, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0231
        gbc.setState(0xcf63, 0xefeb, 0xd660, 0xa747, 0xb749, 0x8c21, 0x0, 0x1);
        gbc.writeMem(0xcf63, { 0x61 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xefeb, gbc.sp());
        EXPECT(0xcf64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xcf63));
        // 61 0232
        gbc.setState(0xc3d2, 0xf48f, 0xdb30, 0x58e0, 0x7ca7, 0xafb5, 0x0, 0x1);
        gbc.writeMem(0xc3d2, { 0x61 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xf48f, gbc.sp());
        EXPECT(0xc3d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xc3d2));
        // 61 0233
        gbc.setState(0x2bb4, 0x9d1c, 0x1ee0, 0x8e6, 0x1fb0, 0xc3fc, 0x1, 0x0);
        gbc.writeMem(0x2bb4, { 0x61 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x9d1c, gbc.sp());
        EXPECT(0x2bb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0234
        gbc.setState(0x56ad, 0xfa2e, 0xe470, 0x5257, 0x9672, 0x9de, 0x0, 0x0);
        gbc.writeMem(0x56ad, { 0x61 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xfa2e, gbc.sp());
        EXPECT(0x56ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0235
        gbc.setState(0x4a13, 0x37ea, 0x6be0, 0xfc58, 0x75c1, 0x5733, 0x1, 0x1);
        gbc.writeMem(0x4a13, { 0x61 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x37ea, gbc.sp());
        EXPECT(0x4a14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0236
        gbc.setState(0x2d5f, 0x8b6, 0x5f0, 0xfb37, 0x4906, 0x421b, 0x0, 0x1);
        gbc.writeMem(0x2d5f, { 0x61 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x8b6, gbc.sp());
        EXPECT(0x2d60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0237
        gbc.setState(0x692d, 0xa5f7, 0x2d90, 0x4be, 0x2da2, 0xe179, 0x0, 0x0);
        gbc.writeMem(0x692d, { 0x61 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xa5f7, gbc.sp());
        EXPECT(0x692e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0238
        gbc.setState(0xb79c, 0xa91f, 0xc3c0, 0xe55e, 0xd547, 0x843e, 0x0, 0x1);
        gbc.writeMem(0xb79c, { 0x61 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xa91f, gbc.sp());
        EXPECT(0xb79d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xb79c));
        // 61 0239
        gbc.setState(0xb6d7, 0xd803, 0x3f90, 0x5ed2, 0x490, 0xb711, 0x0, 0x1);
        gbc.writeMem(0xb6d7, { 0x61 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xd803, gbc.sp());
        EXPECT(0xb6d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xb6d7));
        // 61 023B
        gbc.setState(0x1dd6, 0xd522, 0x5070, 0xdd65, 0xee69, 0x35d, 0x1, 0x1);
        gbc.writeMem(0x1dd6, { 0x61 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xd522, gbc.sp());
        EXPECT(0x1dd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 023C
        gbc.setState(0x853f, 0xf3, 0xc500, 0x57aa, 0x59d2, 0x584b, 0x1, 0x1);
        gbc.writeMem(0x853f, { 0x61 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xf3, gbc.sp());
        EXPECT(0x8540, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x853f));
        // 61 023D
        gbc.setState(0x324b, 0x264d, 0xa10, 0xa956, 0x9108, 0x347e, 0x1, 0x1);
        gbc.writeMem(0x324b, { 0x61 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x264d, gbc.sp());
        EXPECT(0x324c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 023E
        gbc.setState(0x105b, 0x9106, 0xbe70, 0xdbbe, 0xb518, 0xcd7b, 0x1, 0x1);
        gbc.writeMem(0x105b, { 0x61 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x9106, gbc.sp());
        EXPECT(0x105c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 023F
        gbc.setState(0xc330, 0xa130, 0xe300, 0x4847, 0xbefd, 0x5bee, 0x1, 0x1);
        gbc.writeMem(0xc330, { 0x61 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xa130, gbc.sp());
        EXPECT(0xc331, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xc330));
        // 61 0240
        gbc.setState(0x5c2d, 0xe8b7, 0x26c0, 0xaaae, 0x767f, 0xf9d4, 0x0, 0x0);
        gbc.writeMem(0x5c2d, { 0x61 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xe8b7, gbc.sp());
        EXPECT(0x5c2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0241
        gbc.setState(0x664a, 0x12b6, 0xe520, 0xc9ad, 0x335b, 0x79fd, 0x0, 0x1);
        gbc.writeMem(0x664a, { 0x61 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x12b6, gbc.sp());
        EXPECT(0x664b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0242
        gbc.setState(0x3bab, 0xf76, 0xff60, 0x5010, 0xa67c, 0x71a9, 0x1, 0x0);
        gbc.writeMem(0x3bab, { 0x61 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xf76, gbc.sp());
        EXPECT(0x3bac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0243
        gbc.setState(0x6913, 0xf79b, 0x6560, 0x1e82, 0xa11c, 0xe7f6, 0x0, 0x0);
        gbc.writeMem(0x6913, { 0x61 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xf79b, gbc.sp());
        EXPECT(0x6914, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0244
        gbc.setState(0x8835, 0xe544, 0x9690, 0x3431, 0x3bb9, 0x2f9a, 0x1, 0x0);
        gbc.writeMem(0x8835, { 0x61 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xe544, gbc.sp());
        EXPECT(0x8836, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x8835));
        // 61 0245
        gbc.setState(0x7933, 0x970a, 0x6710, 0x384d, 0x12f2, 0x14ad, 0x0, 0x1);
        gbc.writeMem(0x7933, { 0x61 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x970a, gbc.sp());
        EXPECT(0x7934, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0246
        gbc.setState(0xbdca, 0xba91, 0x2bc0, 0x1f4, 0xe8cd, 0xa36d, 0x0, 0x1);
        gbc.writeMem(0xbdca, { 0x61 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xba91, gbc.sp());
        EXPECT(0xbdcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xbdca));
        // 61 0247
        gbc.setState(0xeed8, 0xde38, 0x3560, 0x4d42, 0x69de, 0xdc94, 0x0, 0x1);
        gbc.writeMem(0xeed8, { 0x61 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xde38, gbc.sp());
        EXPECT(0xeed9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xeed8));
        // 61 0248
        gbc.setState(0xbe67, 0x4810, 0x2430, 0x381a, 0xcb5d, 0x1370, 0x1, 0x0);
        gbc.writeMem(0xbe67, { 0x61 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x4810, gbc.sp());
        EXPECT(0xbe68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xbe67));
        // 61 0249
        gbc.setState(0x62d2, 0x86a3, 0xa060, 0xd144, 0xeb43, 0xa38e, 0x0, 0x1);
        gbc.writeMem(0x62d2, { 0x61 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x86a3, gbc.sp());
        EXPECT(0x62d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 024A
        gbc.setState(0x3f08, 0x9461, 0x34a0, 0xfc28, 0xef67, 0x3c8f, 0x0, 0x0);
        gbc.writeMem(0x3f08, { 0x61 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x9461, gbc.sp());
        EXPECT(0x3f09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 024B
        gbc.setState(0x8763, 0x2f80, 0x51b0, 0x6abf, 0x61a6, 0xf87b, 0x1, 0x0);
        gbc.writeMem(0x8763, { 0x61 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x2f80, gbc.sp());
        EXPECT(0x8764, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x8763));
        // 61 024C
        gbc.setState(0x6467, 0xb688, 0xdb30, 0x92ee, 0xeb26, 0x68ab, 0x1, 0x1);
        gbc.writeMem(0x6467, { 0x61 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xb688, gbc.sp());
        EXPECT(0x6468, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 024D
        gbc.setState(0xe6be, 0xda11, 0x81f0, 0x5fac, 0xbb94, 0x5ba2, 0x1, 0x0);
        gbc.writeMem(0xe6be, { 0x61 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xda11, gbc.sp());
        EXPECT(0xe6bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xe6be));
        // 61 024E
        gbc.setState(0xcdef, 0xeea9, 0x7c80, 0xc836, 0xa351, 0xe4c5, 0x1, 0x1);
        gbc.writeMem(0xcdef, { 0x61 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xeea9, gbc.sp());
        EXPECT(0xcdf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xcdef));
        // 61 024F
        gbc.setState(0xa31b, 0xb62d, 0x73a0, 0x5b89, 0x5237, 0xfe39, 0x1, 0x0);
        gbc.writeMem(0xa31b, { 0x61 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xb62d, gbc.sp());
        EXPECT(0xa31c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xa31b));
        // 61 0250
        gbc.setState(0xbac6, 0xacde, 0x2250, 0xe35d, 0x87e2, 0x7787, 0x0, 0x0);
        gbc.writeMem(0xbac6, { 0x61 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xacde, gbc.sp());
        EXPECT(0xbac7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xbac6));
        // 61 0251
        gbc.setState(0x74f1, 0x9a3, 0xf370, 0x1d1f, 0x74de, 0xa08d, 0x1, 0x0);
        gbc.writeMem(0x74f1, { 0x61 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x9a3, gbc.sp());
        EXPECT(0x74f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0252
        gbc.setState(0xb822, 0xfdef, 0x7bd0, 0x609, 0xbff3, 0x6d74, 0x0, 0x0);
        gbc.writeMem(0xb822, { 0x61 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xfdef, gbc.sp());
        EXPECT(0xb823, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xb822));
        // 61 0253
        gbc.setState(0xba49, 0x4310, 0xe8e0, 0xa77, 0xa9d3, 0xb641, 0x1, 0x0);
        gbc.writeMem(0xba49, { 0x61 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x4310, gbc.sp());
        EXPECT(0xba4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xba49));
        // 61 0254
        gbc.setState(0x8df0, 0x67f, 0x5510, 0x7ffb, 0x6890, 0x117f, 0x1, 0x1);
        gbc.writeMem(0x8df0, { 0x61 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x67f, gbc.sp());
        EXPECT(0x8df1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x8df0));
        // 61 0255
        gbc.setState(0x5c87, 0x6a5b, 0xc9e0, 0xea10, 0x1aa8, 0x7457, 0x1, 0x1);
        gbc.writeMem(0x5c87, { 0x61 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x6a5b, gbc.sp());
        EXPECT(0x5c88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0256
        gbc.setState(0x3d8e, 0x11, 0x260, 0xe8ba, 0xc650, 0x423a, 0x0, 0x0);
        gbc.writeMem(0x3d8e, { 0x61 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x11, gbc.sp());
        EXPECT(0x3d8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0257
        gbc.setState(0x5295, 0x3ca8, 0xb9b0, 0x7d84, 0x1d42, 0x90fa, 0x1, 0x1);
        gbc.writeMem(0x5295, { 0x61 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x3ca8, gbc.sp());
        EXPECT(0x5296, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0258
        gbc.setState(0x5796, 0x3303, 0xdcf0, 0x565a, 0x6d30, 0x992a, 0x0, 0x1);
        gbc.writeMem(0x5796, { 0x61 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x3303, gbc.sp());
        EXPECT(0x5797, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0259
        gbc.setState(0x858c, 0x2883, 0x29e0, 0x56fd, 0xb158, 0xba64, 0x1, 0x1);
        gbc.writeMem(0x858c, { 0x61 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x2883, gbc.sp());
        EXPECT(0x858d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x858c));
        // 61 025A
        gbc.setState(0x6fed, 0x14f0, 0x6310, 0x2767, 0xe6fc, 0x4fa, 0x1, 0x0);
        gbc.writeMem(0x6fed, { 0x61 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x14f0, gbc.sp());
        EXPECT(0x6fee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 025C
        gbc.setState(0xc823, 0xf22c, 0xa010, 0x7efb, 0x4376, 0xd4e2, 0x0, 0x0);
        gbc.writeMem(0xc823, { 0x61 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xf22c, gbc.sp());
        EXPECT(0xc824, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xc823));
        // 61 025D
        gbc.setState(0x7e8e, 0x77c4, 0x3900, 0x7e38, 0x6de7, 0x91dc, 0x1, 0x1);
        gbc.writeMem(0x7e8e, { 0x61 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x77c4, gbc.sp());
        EXPECT(0x7e8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 025E
        gbc.setState(0x833b, 0x4c85, 0x9530, 0x4fb4, 0xc2f, 0x4ec5, 0x0, 0x1);
        gbc.writeMem(0x833b, { 0x61 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x4c85, gbc.sp());
        EXPECT(0x833c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x833b));
        // 61 025F
        gbc.setState(0xdfa4, 0x1da3, 0x4100, 0x58c5, 0x830, 0xa0c4, 0x0, 0x0);
        gbc.writeMem(0xdfa4, { 0x61 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x1da3, gbc.sp());
        EXPECT(0xdfa5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xdfa4));
        // 61 0260
        gbc.setState(0xd5c4, 0xbd1a, 0xb930, 0x25e5, 0xb15c, 0xd4b6, 0x1, 0x1);
        gbc.writeMem(0xd5c4, { 0x61 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xbd1a, gbc.sp());
        EXPECT(0xd5c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xd5c4));
        // 61 0261
        gbc.setState(0x9ba2, 0x5e37, 0xd610, 0xd53e, 0x3bfa, 0x984c, 0x1, 0x0);
        gbc.writeMem(0x9ba2, { 0x61 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x5e37, gbc.sp());
        EXPECT(0x9ba3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x9ba2));
        // 61 0262
        gbc.setState(0xe9c6, 0xbf15, 0xbe50, 0x9a63, 0x1ff, 0x1e10, 0x1, 0x1);
        gbc.writeMem(0xe9c6, { 0x61 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xbf15, gbc.sp());
        EXPECT(0xe9c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xe9c6));
        // 61 0264
        gbc.setState(0x5c96, 0x58b6, 0x8250, 0xb705, 0xa071, 0x1103, 0x1, 0x1);
        gbc.writeMem(0x5c96, { 0x61 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x58b6, gbc.sp());
        EXPECT(0x5c97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0265
        gbc.setState(0xa4e3, 0xbeae, 0x7660, 0xc715, 0xebb1, 0x38fd, 0x1, 0x0);
        gbc.writeMem(0xa4e3, { 0x61 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xbeae, gbc.sp());
        EXPECT(0xa4e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xa4e3));
        // 61 0267
        gbc.setState(0x9d45, 0xddeb, 0x1230, 0xa05, 0x39c2, 0x6b0, 0x1, 0x1);
        gbc.writeMem(0x9d45, { 0x61 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xddeb, gbc.sp());
        EXPECT(0x9d46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x9d45));
        // 61 0268
        gbc.setState(0x3adf, 0xf309, 0xeb70, 0x4354, 0xc801, 0xc310, 0x0, 0x1);
        gbc.writeMem(0x3adf, { 0x61 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xf309, gbc.sp());
        EXPECT(0x3ae0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0269
        gbc.setState(0x571, 0x6b5a, 0x5e50, 0xae9a, 0xc41a, 0x1430, 0x1, 0x0);
        gbc.writeMem(0x571, { 0x61 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x6b5a, gbc.sp());
        EXPECT(0x572, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 026A
        gbc.setState(0x9608, 0x7f43, 0xf980, 0xa81b, 0xb526, 0xcb9b, 0x0, 0x1);
        gbc.writeMem(0x9608, { 0x61 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x7f43, gbc.sp());
        EXPECT(0x9609, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x9608));
        // 61 026B
        gbc.setState(0xdfb7, 0x99bb, 0x7aa0, 0xc454, 0x2fb2, 0x3b00, 0x1, 0x1);
        gbc.writeMem(0xdfb7, { 0x61 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x99bb, gbc.sp());
        EXPECT(0xdfb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xdfb7));
        // 61 026C
        gbc.setState(0x8899, 0x6a09, 0xd1b0, 0x3555, 0x6aa7, 0x2963, 0x1, 0x1);
        gbc.writeMem(0x8899, { 0x61 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x6a09, gbc.sp());
        EXPECT(0x889a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x8899));
        // 61 026D
        gbc.setState(0x3d53, 0x3f28, 0xa140, 0x3fcc, 0xfcd1, 0x65f2, 0x0, 0x0);
        gbc.writeMem(0x3d53, { 0x61 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x3f28, gbc.sp());
        EXPECT(0x3d54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 026E
        gbc.setState(0xbbec, 0x652f, 0x10c0, 0xb176, 0x1816, 0xcd04, 0x0, 0x0);
        gbc.writeMem(0xbbec, { 0x61 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x652f, gbc.sp());
        EXPECT(0xbbed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xbbec));
        // 61 026F
        gbc.setState(0x86fe, 0x3c94, 0x3ff0, 0xbd99, 0x23b, 0x4eb6, 0x0, 0x1);
        gbc.writeMem(0x86fe, { 0x61 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x3c94, gbc.sp());
        EXPECT(0x86ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x86fe));
        // 61 0270
        gbc.setState(0xc97c, 0x6070, 0x5c50, 0xf461, 0xad7c, 0xfec1, 0x1, 0x0);
        gbc.writeMem(0xc97c, { 0x61 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x6070, gbc.sp());
        EXPECT(0xc97d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xc97c));
        // 61 0271
        gbc.setState(0x5791, 0xfaa3, 0x4180, 0x4d9e, 0xbc7a, 0xdf09, 0x1, 0x1);
        gbc.writeMem(0x5791, { 0x61 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xfaa3, gbc.sp());
        EXPECT(0x5792, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0272
        gbc.setState(0x10da, 0x5a24, 0xbbe0, 0x4f27, 0xbf28, 0xcc9d, 0x0, 0x1);
        gbc.writeMem(0x10da, { 0x61 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x5a24, gbc.sp());
        EXPECT(0x10db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0273
        gbc.setState(0xe646, 0x74fb, 0xec40, 0x2db7, 0x8aa4, 0xf55c, 0x0, 0x0);
        gbc.writeMem(0xe646, { 0x61 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x74fb, gbc.sp());
        EXPECT(0xe647, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xe646));
        // 61 0274
        gbc.setState(0x2c97, 0x1751, 0x7b90, 0xa201, 0xd769, 0xb991, 0x1, 0x0);
        gbc.writeMem(0x2c97, { 0x61 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x1751, gbc.sp());
        EXPECT(0x2c98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0275
        gbc.setState(0x58c1, 0x74ac, 0xbf70, 0x8d9b, 0x5109, 0x114a, 0x1, 0x0);
        gbc.writeMem(0x58c1, { 0x61 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x74ac, gbc.sp());
        EXPECT(0x58c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0276
        gbc.setState(0x644c, 0xfd7, 0x73f0, 0x3eb1, 0x1056, 0x7503, 0x1, 0x0);
        gbc.writeMem(0x644c, { 0x61 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xfd7, gbc.sp());
        EXPECT(0x644d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0277
        gbc.setState(0x3a9e, 0x49a6, 0x2cd0, 0xd90b, 0x45a8, 0xd39, 0x1, 0x0);
        gbc.writeMem(0x3a9e, { 0x61 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x49a6, gbc.sp());
        EXPECT(0x3a9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0278
        gbc.setState(0x613e, 0xc859, 0x7f70, 0x297, 0x3a9a, 0x83f7, 0x0, 0x0);
        gbc.writeMem(0x613e, { 0x61 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xc859, gbc.sp());
        EXPECT(0x613f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0279
        gbc.setState(0x600, 0xa400, 0xa620, 0x1f55, 0xc9c5, 0x6586, 0x0, 0x0);
        gbc.writeMem(0x600, { 0x61 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xa400, gbc.sp());
        EXPECT(0x601, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 027A
        gbc.setState(0xd60a, 0x7887, 0x5b60, 0x1ff, 0x8d6, 0x12f7, 0x0, 0x0);
        gbc.writeMem(0xd60a, { 0x61 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x7887, gbc.sp());
        EXPECT(0xd60b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xd60a));
        // 61 027B
        gbc.setState(0x7163, 0xb5ce, 0xed30, 0xf763, 0xd434, 0xe19, 0x0, 0x0);
        gbc.writeMem(0x7163, { 0x61 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xb5ce, gbc.sp());
        EXPECT(0x7164, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 027C
        gbc.setState(0x5e49, 0x6f7b, 0xb3a0, 0x4c3c, 0x86b0, 0x539d, 0x0, 0x1);
        gbc.writeMem(0x5e49, { 0x61 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x6f7b, gbc.sp());
        EXPECT(0x5e4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 027D
        gbc.setState(0xdd61, 0xe154, 0x2230, 0xa376, 0xd377, 0x2745, 0x0, 0x0);
        gbc.writeMem(0xdd61, { 0x61 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xe154, gbc.sp());
        EXPECT(0xdd62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xdd61));
        // 61 027E
        gbc.setState(0xe577, 0xe0c, 0xc1e0, 0x1bee, 0x58bf, 0x30c, 0x1, 0x0);
        gbc.writeMem(0xe577, { 0x61 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xe0c, gbc.sp());
        EXPECT(0xe578, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xe577));
        // 61 027F
        gbc.setState(0xd39f, 0xdd9a, 0xbbb0, 0x24c7, 0x472a, 0x9434, 0x0, 0x1);
        gbc.writeMem(0xd39f, { 0x61 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xdd9a, gbc.sp());
        EXPECT(0xd3a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xd39f));
        // 61 0280
        gbc.setState(0xa657, 0x1bb8, 0x6fa0, 0x4002, 0x977c, 0xe9c3, 0x1, 0x0);
        gbc.writeMem(0xa657, { 0x61 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x1bb8, gbc.sp());
        EXPECT(0xa658, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xa657));
        // 61 0281
        gbc.setState(0xbe6, 0xe9c6, 0xf2d0, 0x66db, 0x6d47, 0x9ef2, 0x0, 0x1);
        gbc.writeMem(0xbe6, { 0x61 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xe9c6, gbc.sp());
        EXPECT(0xbe7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0282
        gbc.setState(0x9844, 0x9e35, 0x5860, 0xa1f8, 0xdc5c, 0x5def, 0x1, 0x0);
        gbc.writeMem(0x9844, { 0x61 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x9e35, gbc.sp());
        EXPECT(0x9845, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x9844));
        // 61 0283
        gbc.setState(0xc98f, 0x9ee6, 0xbab0, 0x1b20, 0x9b63, 0x10d3, 0x1, 0x0);
        gbc.writeMem(0xc98f, { 0x61 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x9ee6, gbc.sp());
        EXPECT(0xc990, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xc98f));
        // 61 0284
        gbc.setState(0x6c6e, 0x7555, 0xd860, 0xb3e7, 0xa029, 0x4930, 0x0, 0x1);
        gbc.writeMem(0x6c6e, { 0x61 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x7555, gbc.sp());
        EXPECT(0x6c6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0285
        gbc.setState(0x166f, 0x4686, 0x56f0, 0x4368, 0x4084, 0x2ded, 0x0, 0x1);
        gbc.writeMem(0x166f, { 0x61 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x4686, gbc.sp());
        EXPECT(0x1670, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0286
        gbc.setState(0x1e42, 0x33ab, 0x7100, 0x75ed, 0xf679, 0x29f5, 0x1, 0x1);
        gbc.writeMem(0x1e42, { 0x61 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x33ab, gbc.sp());
        EXPECT(0x1e43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0287
        gbc.setState(0x1a4c, 0x251a, 0xa7e0, 0x4b47, 0x166b, 0x2af1, 0x1, 0x1);
        gbc.writeMem(0x1a4c, { 0x61 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x251a, gbc.sp());
        EXPECT(0x1a4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0288
        gbc.setState(0x7469, 0xea2a, 0xb640, 0x79db, 0xbcf7, 0xb11f, 0x1, 0x1);
        gbc.writeMem(0x7469, { 0x61 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xea2a, gbc.sp());
        EXPECT(0x746a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0289
        gbc.setState(0xc0b2, 0x311f, 0x75b0, 0x4594, 0x1a56, 0x1c67, 0x1, 0x0);
        gbc.writeMem(0xc0b2, { 0x61 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x311f, gbc.sp());
        EXPECT(0xc0b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xc0b2));
        // 61 028A
        gbc.setState(0xb446, 0x6bda, 0x83c0, 0x470, 0xd717, 0x8b7c, 0x0, 0x1);
        gbc.writeMem(0xb446, { 0x61 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x6bda, gbc.sp());
        EXPECT(0xb447, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xb446));
        // 61 028B
        gbc.setState(0x354e, 0x24c7, 0xffd0, 0xd61c, 0x6a5f, 0x9d6d, 0x1, 0x0);
        gbc.writeMem(0x354e, { 0x61 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x24c7, gbc.sp());
        EXPECT(0x354f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 028C
        gbc.setState(0x953d, 0xe414, 0x3aa0, 0x6304, 0xa536, 0xcf14, 0x1, 0x1);
        gbc.writeMem(0x953d, { 0x61 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xe414, gbc.sp());
        EXPECT(0x953e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x953d));
        // 61 028D
        gbc.setState(0x2e69, 0xe575, 0x7a20, 0xbadb, 0x8691, 0x9725, 0x1, 0x1);
        gbc.writeMem(0x2e69, { 0x61 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xe575, gbc.sp());
        EXPECT(0x2e6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 028E
        gbc.setState(0xaa53, 0x24e8, 0x9a50, 0x77fc, 0xfe1, 0xf09, 0x1, 0x0);
        gbc.writeMem(0xaa53, { 0x61 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x24e8, gbc.sp());
        EXPECT(0xaa54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xaa53));
        // 61 028F
        gbc.setState(0xabfa, 0x4d4e, 0x7850, 0x6b13, 0xf5e6, 0x57e2, 0x1, 0x0);
        gbc.writeMem(0xabfa, { 0x61 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x4d4e, gbc.sp());
        EXPECT(0xabfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xabfa));
        // 61 0290
        gbc.setState(0xaa15, 0x8197, 0x8fb0, 0x77df, 0x58ab, 0x1c4a, 0x1, 0x1);
        gbc.writeMem(0xaa15, { 0x61 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x8197, gbc.sp());
        EXPECT(0xaa16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xaa15));
        // 61 0291
        gbc.setState(0x190c, 0x7f2, 0x400, 0x16b, 0xc5f0, 0x3d8, 0x1, 0x0);
        gbc.writeMem(0x190c, { 0x61 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x7f2, gbc.sp());
        EXPECT(0x190d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0292
        gbc.setState(0xdb14, 0x54a8, 0x1770, 0xbf3f, 0xd8e9, 0x6bcf, 0x0, 0x0);
        gbc.writeMem(0xdb14, { 0x61 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x54a8, gbc.sp());
        EXPECT(0xdb15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xdb14));
        // 61 0293
        gbc.setState(0x549e, 0xc253, 0xdc50, 0x8bd8, 0x2fba, 0xec3c, 0x0, 0x1);
        gbc.writeMem(0x549e, { 0x61 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xc253, gbc.sp());
        EXPECT(0x549f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0294
        gbc.setState(0xaa45, 0xaff, 0x7350, 0xe728, 0x919c, 0x86d0, 0x0, 0x1);
        gbc.writeMem(0xaa45, { 0x61 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xaff, gbc.sp());
        EXPECT(0xaa46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xaa45));
        // 61 0295
        gbc.setState(0x74ae, 0xd5a, 0x1390, 0xd958, 0x107b, 0x5c1, 0x0, 0x1);
        gbc.writeMem(0x74ae, { 0x61 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xd5a, gbc.sp());
        EXPECT(0x74af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0296
        gbc.setState(0xebd8, 0x4bc8, 0x5d0, 0x750e, 0x5740, 0x9ded, 0x0, 0x1);
        gbc.writeMem(0xebd8, { 0x61 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x4bc8, gbc.sp());
        EXPECT(0xebd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xebd8));
        // 61 0297
        gbc.setState(0x391c, 0x3a22, 0x32a0, 0x14b6, 0x5489, 0xf1b3, 0x0, 0x1);
        gbc.writeMem(0x391c, { 0x61 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x3a22, gbc.sp());
        EXPECT(0x391d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0298
        gbc.setState(0x49ed, 0x4cc5, 0x2030, 0x3055, 0xa283, 0xc841, 0x1, 0x0);
        gbc.writeMem(0x49ed, { 0x61 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x4cc5, gbc.sp());
        EXPECT(0x49ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0299
        gbc.setState(0x8533, 0xa458, 0xe820, 0x4c68, 0xd89e, 0x393d, 0x0, 0x0);
        gbc.writeMem(0x8533, { 0x61 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xa458, gbc.sp());
        EXPECT(0x8534, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x8533));
        // 61 029A
        gbc.setState(0x91bf, 0x87a2, 0x8790, 0x5fb3, 0x682c, 0x625a, 0x0, 0x0);
        gbc.writeMem(0x91bf, { 0x61 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x87a2, gbc.sp());
        EXPECT(0x91c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x91bf));
        // 61 029B
        gbc.setState(0xaf11, 0x8f7d, 0xd0f0, 0x13e1, 0x210c, 0x944a, 0x0, 0x0);
        gbc.writeMem(0xaf11, { 0x61 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x8f7d, gbc.sp());
        EXPECT(0xaf12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xaf11));
        // 61 029C
        gbc.setState(0x185c, 0x5dcf, 0xb440, 0x74b5, 0x1227, 0x2e48, 0x1, 0x1);
        gbc.writeMem(0x185c, { 0x61 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x5dcf, gbc.sp());
        EXPECT(0x185d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 029D
        gbc.setState(0x2bfc, 0x4685, 0x9130, 0x7444, 0x5f6d, 0xb6d2, 0x0, 0x1);
        gbc.writeMem(0x2bfc, { 0x61 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x4685, gbc.sp());
        EXPECT(0x2bfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 029E
        gbc.setState(0x3a3d, 0x3758, 0x1260, 0x902f, 0xe57c, 0xe7b8, 0x0, 0x1);
        gbc.writeMem(0x3a3d, { 0x61 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x3758, gbc.sp());
        EXPECT(0x3a3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 029F
        gbc.setState(0x39c, 0xa0a1, 0x6940, 0x22b0, 0x4c99, 0xb435, 0x0, 0x0);
        gbc.writeMem(0x39c, { 0x61 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xa0a1, gbc.sp());
        EXPECT(0x39d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 02A0
        gbc.setState(0xb820, 0xf6ff, 0xa280, 0xc3ea, 0x1cbc, 0x58ed, 0x1, 0x1);
        gbc.writeMem(0xb820, { 0x61 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xf6ff, gbc.sp());
        EXPECT(0xb821, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xb820));
        // 61 02A1
        gbc.setState(0x30b3, 0x6d36, 0xf690, 0xed95, 0x2849, 0x3246, 0x1, 0x0);
        gbc.writeMem(0x30b3, { 0x61 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x6d36, gbc.sp());
        EXPECT(0x30b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 02A2
        gbc.setState(0x6adf, 0x33ad, 0xd350, 0x78aa, 0xa3e5, 0x5d60, 0x0, 0x1);
        gbc.writeMem(0x6adf, { 0x61 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x33ad, gbc.sp());
        EXPECT(0x6ae0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 02A3
        gbc.setState(0x8aff, 0x46ec, 0x770, 0xb30a, 0xf811, 0x6469, 0x0, 0x0);
        gbc.writeMem(0x8aff, { 0x61 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x46ec, gbc.sp());
        EXPECT(0x8b00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x8aff));
        // 61 02A5
        gbc.setState(0x8999, 0xb6d2, 0xcaf0, 0xeb69, 0x8876, 0xdde5, 0x1, 0x0);
        gbc.writeMem(0x8999, { 0x61 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xb6d2, gbc.sp());
        EXPECT(0x899a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x8999));
        // 61 02A6
        gbc.setState(0xd19b, 0x6d72, 0x6890, 0xf0ec, 0xd2ff, 0xb2fb, 0x1, 0x0);
        gbc.writeMem(0xd19b, { 0x61 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x6d72, gbc.sp());
        EXPECT(0xd19c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xd19b));
        // 61 02A7
        gbc.setState(0xbecd, 0x302, 0x3ed0, 0xe0f9, 0x3e96, 0x1f38, 0x0, 0x1);
        gbc.writeMem(0xbecd, { 0x61 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x302, gbc.sp());
        EXPECT(0xbece, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xbecd));
        // 61 02A8
        gbc.setState(0xdbc4, 0xabd, 0x2bd0, 0xccf4, 0x594e, 0xf033, 0x1, 0x1);
        gbc.writeMem(0xdbc4, { 0x61 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xabd, gbc.sp());
        EXPECT(0xdbc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xdbc4));
        // 61 02A9
        gbc.setState(0x21d0, 0xb688, 0x1000, 0x2b35, 0x76c, 0xf8d1, 0x1, 0x1);
        gbc.writeMem(0x21d0, { 0x61 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xb688, gbc.sp());
        EXPECT(0x21d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 02AA
        gbc.setState(0xcbbe, 0x9e45, 0xd30, 0x6d22, 0xea84, 0x1723, 0x0, 0x1);
        gbc.writeMem(0xcbbe, { 0x61 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x9e45, gbc.sp());
        EXPECT(0xcbbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xcbbe));
        // 61 02AB
        gbc.setState(0xbfe5, 0x920e, 0x1850, 0xb075, 0xa53f, 0xc4dd, 0x0, 0x1);
        gbc.writeMem(0xbfe5, { 0x61 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x920e, gbc.sp());
        EXPECT(0xbfe6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xbfe5));
        // 61 02AC
        gbc.setState(0xb116, 0xf7d1, 0xe2f0, 0x23e1, 0x7f34, 0x574, 0x1, 0x1);
        gbc.writeMem(0xb116, { 0x61 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xf7d1, gbc.sp());
        EXPECT(0xb117, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xb116));
        // 61 02AD
        gbc.setState(0x17e0, 0xd65, 0xe030, 0x72be, 0x4140, 0xe00, 0x1, 0x0);
        gbc.writeMem(0x17e0, { 0x61 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xd65, gbc.sp());
        EXPECT(0x17e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 02AE
        gbc.setState(0xc58, 0xa10, 0x5850, 0x13ba, 0x3fa1, 0xcbed, 0x0, 0x0);
        gbc.writeMem(0xc58, { 0x61 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xa10, gbc.sp());
        EXPECT(0xc59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 02AF
        gbc.setState(0x70ee, 0xf6b, 0xee40, 0x4843, 0x58db, 0x7d97, 0x1, 0x1);
        gbc.writeMem(0x70ee, { 0x61 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xf6b, gbc.sp());
        EXPECT(0x70ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 02B0
        gbc.setState(0xc728, 0xdee0, 0x1600, 0x4228, 0xc61b, 0xa7e0, 0x1, 0x0);
        gbc.writeMem(0xc728, { 0x61 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xdee0, gbc.sp());
        EXPECT(0xc729, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xc728));
        // 61 02B1
        gbc.setState(0xde02, 0x2971, 0xfbb0, 0x1031, 0xae53, 0xc888, 0x1, 0x0);
        gbc.writeMem(0xde02, { 0x61 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x2971, gbc.sp());
        EXPECT(0xde03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xde02));
        // 61 02B2
        gbc.setState(0x306a, 0xa60e, 0x7ec0, 0x39ad, 0xc4c8, 0xfbb4, 0x0, 0x1);
        gbc.writeMem(0x306a, { 0x61 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xa60e, gbc.sp());
        EXPECT(0x306b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 02B3
        gbc.setState(0x872f, 0x23a8, 0x19c0, 0x8508, 0x9c9b, 0xb0ac, 0x0, 0x0);
        gbc.writeMem(0x872f, { 0x61 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x23a8, gbc.sp());
        EXPECT(0x8730, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x872f));
        // 61 02B5
        gbc.setState(0x6b66, 0x40f0, 0xe4c0, 0x2cbc, 0xfdff, 0x7a1e, 0x1, 0x1);
        gbc.writeMem(0x6b66, { 0x61 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x40f0, gbc.sp());
        EXPECT(0x6b67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 02B6
        gbc.setState(0x8432, 0x834d, 0xfe00, 0xccb8, 0xc38a, 0x6648, 0x1, 0x1);
        gbc.writeMem(0x8432, { 0x61 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x834d, gbc.sp());
        EXPECT(0x8433, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x8432));
        // 61 02B7
        gbc.setState(0x21e8, 0x3031, 0x9240, 0x5780, 0xea7f, 0x7ecd, 0x0, 0x1);
        gbc.writeMem(0x21e8, { 0x61 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x3031, gbc.sp());
        EXPECT(0x21e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 02B9
        gbc.setState(0xee4, 0xafce, 0x7ff0, 0x29c5, 0xadd5, 0xcfa4, 0x1, 0x0);
        gbc.writeMem(0xee4, { 0x61 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xafce, gbc.sp());
        EXPECT(0xee5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 02BA
        gbc.setState(0x192d, 0x2d0b, 0x2120, 0xc8c8, 0x1efa, 0xc1c, 0x1, 0x1);
        gbc.writeMem(0x192d, { 0x61 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x2d0b, gbc.sp());
        EXPECT(0x192e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 02BB
        gbc.setState(0x3e97, 0x239c, 0x58c0, 0x9165, 0xa063, 0xef7, 0x0, 0x1);
        gbc.writeMem(0x3e97, { 0x61 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x239c, gbc.sp());
        EXPECT(0x3e98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 02BC
        gbc.setState(0x98dd, 0x47c7, 0x1720, 0xcde9, 0x86a5, 0x69f4, 0x0, 0x1);
        gbc.writeMem(0x98dd, { 0x61 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x47c7, gbc.sp());
        EXPECT(0x98de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x98dd));
        // 61 02BD
        gbc.setState(0x5a49, 0x1052, 0xa060, 0x762e, 0xab1, 0xb2e1, 0x0, 0x1);
        gbc.writeMem(0x5a49, { 0x61 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x1052, gbc.sp());
        EXPECT(0x5a4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 02BE
        gbc.setState(0x1c0c, 0x8146, 0x4360, 0x289c, 0xeb22, 0x2e34, 0x1, 0x1);
        gbc.writeMem(0x1c0c, { 0x61 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x8146, gbc.sp());
        EXPECT(0x1c0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 02BF
        gbc.setState(0x444, 0xc01b, 0x83f0, 0x5eb3, 0xec1, 0xac7d, 0x1, 0x0);
        gbc.writeMem(0x444, { 0x61 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xc01b, gbc.sp());
        EXPECT(0x445, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 02C0
        gbc.setState(0x12b3, 0xf261, 0x4f60, 0x3752, 0x9f10, 0xcabd, 0x0, 0x0);
        gbc.writeMem(0x12b3, { 0x61 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xf261, gbc.sp());
        EXPECT(0x12b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 02C1
        gbc.setState(0x28bf, 0xd4ed, 0x87b0, 0x9949, 0xe59, 0x5ca1, 0x1, 0x1);
        gbc.writeMem(0x28bf, { 0x61 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xd4ed, gbc.sp());
        EXPECT(0x28c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 02C3
        gbc.setState(0x413a, 0xbdbf, 0xb260, 0xe59e, 0x8ccf, 0x5987, 0x0, 0x0);
        gbc.writeMem(0x413a, { 0x61 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xbdbf, gbc.sp());
        EXPECT(0x413b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 02C4
        gbc.setState(0x7a44, 0x75bc, 0xe9b0, 0x52b3, 0x78a2, 0xaf99, 0x0, 0x0);
        gbc.writeMem(0x7a44, { 0x61 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x75bc, gbc.sp());
        EXPECT(0x7a45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 02C5
        gbc.setState(0x7e83, 0x20d7, 0x2950, 0x102a, 0xc081, 0x9013, 0x0, 0x0);
        gbc.writeMem(0x7e83, { 0x61 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x20d7, gbc.sp());
        EXPECT(0x7e84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 02C6
        gbc.setState(0x3a89, 0x1cc2, 0x6750, 0x7e2d, 0xbdeb, 0x7bba, 0x0, 0x1);
        gbc.writeMem(0x3a89, { 0x61 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x1cc2, gbc.sp());
        EXPECT(0x3a8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 02C7
        gbc.setState(0x6121, 0xc63c, 0xeb00, 0xdad8, 0x267f, 0x1b4f, 0x0, 0x1);
        gbc.writeMem(0x6121, { 0x61 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xc63c, gbc.sp());
        EXPECT(0x6122, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 02C8
        gbc.setState(0x9003, 0x92f6, 0x8880, 0x7f14, 0xb7fd, 0x6260, 0x1, 0x1);
        gbc.writeMem(0x9003, { 0x61 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x92f6, gbc.sp());
        EXPECT(0x9004, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x9003));
        // 61 02C9
        gbc.setState(0xe3bd, 0xd6bf, 0x84c0, 0x5225, 0x4841, 0x3d7, 0x0, 0x0);
        gbc.writeMem(0xe3bd, { 0x61 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xd6bf, gbc.sp());
        EXPECT(0xe3be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xe3bd));
        // 61 02CA
        gbc.setState(0xa0bc, 0xa3c, 0xc3a0, 0x36ef, 0x63fe, 0x6e32, 0x0, 0x1);
        gbc.writeMem(0xa0bc, { 0x61 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xa3c, gbc.sp());
        EXPECT(0xa0bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xa0bc));
        // 61 02CB
        gbc.setState(0x9ec4, 0x75b7, 0xc1f0, 0xf573, 0x6d4f, 0xeb04, 0x1, 0x1);
        gbc.writeMem(0x9ec4, { 0x61 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x75b7, gbc.sp());
        EXPECT(0x9ec5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x9ec4));
        // 61 02CC
        gbc.setState(0x1b8a, 0x771d, 0xb390, 0xb1ad, 0x4666, 0x47b1, 0x0, 0x0);
        gbc.writeMem(0x1b8a, { 0x61 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x771d, gbc.sp());
        EXPECT(0x1b8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 02CD
        gbc.setState(0xc85a, 0x7312, 0x55d0, 0xe4bd, 0x4b91, 0xbd26, 0x0, 0x1);
        gbc.writeMem(0xc85a, { 0x61 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x7312, gbc.sp());
        EXPECT(0xc85b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xc85a));
        // 61 02CE
        gbc.setState(0x3aa, 0x9c95, 0xf20, 0xdb1d, 0xe65f, 0xd70, 0x1, 0x1);
        gbc.writeMem(0x3aa, { 0x61 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x9c95, gbc.sp());
        EXPECT(0x3ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 02CF
        gbc.setState(0xb38b, 0xf992, 0x6320, 0xf1a, 0x8572, 0x8d96, 0x1, 0x0);
        gbc.writeMem(0xb38b, { 0x61 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xf992, gbc.sp());
        EXPECT(0xb38c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xb38b));
        // 61 02D0
        gbc.setState(0x5719, 0xec26, 0x17c0, 0x474b, 0xf0dc, 0x3d8, 0x1, 0x1);
        gbc.writeMem(0x5719, { 0x61 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xec26, gbc.sp());
        EXPECT(0x571a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 02D1
        gbc.setState(0x6add, 0x67fa, 0x9b20, 0xd92b, 0xe652, 0x266, 0x1, 0x0);
        gbc.writeMem(0x6add, { 0x61 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x67fa, gbc.sp());
        EXPECT(0x6ade, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 02D2
        gbc.setState(0x535b, 0x3717, 0x6dc0, 0xebd6, 0x6e76, 0x6d9f, 0x0, 0x1);
        gbc.writeMem(0x535b, { 0x61 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x3717, gbc.sp());
        EXPECT(0x535c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 02D3
        gbc.setState(0xd55, 0x5b95, 0x3840, 0x3983, 0xd527, 0xc0f3, 0x1, 0x0);
        gbc.writeMem(0xd55, { 0x61 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x5b95, gbc.sp());
        EXPECT(0xd56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 02D4
        gbc.setState(0x3039, 0xd5d3, 0x8a80, 0xf6b8, 0x6594, 0xf919, 0x1, 0x0);
        gbc.writeMem(0x3039, { 0x61 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xd5d3, gbc.sp());
        EXPECT(0x303a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 02D5
        gbc.setState(0xca8e, 0x4eb7, 0x8610, 0x1cc2, 0x8df5, 0x5dae, 0x0, 0x1);
        gbc.writeMem(0xca8e, { 0x61 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x4eb7, gbc.sp());
        EXPECT(0xca8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xca8e));
        // 61 02D6
        gbc.setState(0xea27, 0xc766, 0x22f0, 0xdcc8, 0x945a, 0xc42d, 0x0, 0x1);
        gbc.writeMem(0xea27, { 0x61 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xc766, gbc.sp());
        EXPECT(0xea28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xea27));
        // 61 02D7
        gbc.setState(0x8cb9, 0x7f4e, 0x14a0, 0x6c31, 0x4c45, 0xd822, 0x1, 0x1);
        gbc.writeMem(0x8cb9, { 0x61 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x7f4e, gbc.sp());
        EXPECT(0x8cba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x8cb9));
        // 61 02D8
        gbc.setState(0xbe9e, 0x3ede, 0xb0a0, 0xe8ce, 0xe87e, 0x4f47, 0x1, 0x0);
        gbc.writeMem(0xbe9e, { 0x61 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x3ede, gbc.sp());
        EXPECT(0xbe9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xbe9e));
        // 61 02D9
        gbc.setState(0x5c2c, 0x2ea9, 0xde50, 0x6c12, 0x2a8d, 0x12d4, 0x0, 0x1);
        gbc.writeMem(0x5c2c, { 0x61 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x2ea9, gbc.sp());
        EXPECT(0x5c2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 02DA
        gbc.setState(0xe817, 0xf0fc, 0x6b40, 0xe091, 0x84d7, 0x661, 0x1, 0x0);
        gbc.writeMem(0xe817, { 0x61 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xf0fc, gbc.sp());
        EXPECT(0xe818, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xe817));
        // 61 02DB
        gbc.setState(0x8a79, 0x9974, 0x3f00, 0x5cca, 0xac79, 0xd7f0, 0x0, 0x0);
        gbc.writeMem(0x8a79, { 0x61 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x9974, gbc.sp());
        EXPECT(0x8a7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x8a79));
        // 61 02DC
        gbc.setState(0xbf3f, 0x990, 0x3bc0, 0x7686, 0x379f, 0x65d0, 0x0, 0x1);
        gbc.writeMem(0xbf3f, { 0x61 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x990, gbc.sp());
        EXPECT(0xbf40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xbf3f));
        // 61 02DD
        gbc.setState(0x9b6b, 0xd7bb, 0x6c00, 0x2b0, 0x773e, 0x83f8, 0x0, 0x0);
        gbc.writeMem(0x9b6b, { 0x61 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xd7bb, gbc.sp());
        EXPECT(0x9b6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x9b6b));
        // 61 02DE
        gbc.setState(0xae4, 0xebbf, 0xadc0, 0x219, 0xb3b1, 0x7a96, 0x0, 0x0);
        gbc.writeMem(0xae4, { 0x61 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xebbf, gbc.sp());
        EXPECT(0xae5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 02DF
        gbc.setState(0x76ee, 0xccbf, 0xfa40, 0xcf33, 0xe091, 0x3ac8, 0x1, 0x0);
        gbc.writeMem(0x76ee, { 0x61 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xccbf, gbc.sp());
        EXPECT(0x76ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 02E0
        gbc.setState(0x48ab, 0xa4d1, 0x2690, 0x6787, 0xece3, 0xb95, 0x1, 0x0);
        gbc.writeMem(0x48ab, { 0x61 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xa4d1, gbc.sp());
        EXPECT(0x48ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 02E1
        gbc.setState(0xd803, 0xd09d, 0x3db0, 0x9620, 0x26ae, 0xc79a, 0x0, 0x1);
        gbc.writeMem(0xd803, { 0x61 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xd09d, gbc.sp());
        EXPECT(0xd804, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xd803));
        // 61 02E2
        gbc.setState(0x7e04, 0x71b9, 0xfae0, 0x85f, 0xccd, 0xc4d4, 0x1, 0x1);
        gbc.writeMem(0x7e04, { 0x61 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x71b9, gbc.sp());
        EXPECT(0x7e05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 02E3
        gbc.setState(0x6526, 0xee93, 0x67b0, 0xff2e, 0xbcf1, 0xd3ef, 0x0, 0x1);
        gbc.writeMem(0x6526, { 0x61 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xee93, gbc.sp());
        EXPECT(0x6527, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 02E4
        gbc.setState(0x4c3d, 0x87ef, 0x7480, 0x48a3, 0x2d55, 0x98e4, 0x0, 0x0);
        gbc.writeMem(0x4c3d, { 0x61 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x87ef, gbc.sp());
        EXPECT(0x4c3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 02E5
        gbc.setState(0x2b3a, 0x5ca3, 0x4510, 0x6a2c, 0x80a3, 0x3887, 0x0, 0x0);
        gbc.writeMem(0x2b3a, { 0x61 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x5ca3, gbc.sp());
        EXPECT(0x2b3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 02E8
        gbc.setState(0x326, 0xd9cb, 0xa910, 0x9ed4, 0xe1ef, 0x1329, 0x1, 0x1);
        gbc.writeMem(0x326, { 0x61 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xd9cb, gbc.sp());
        EXPECT(0x327, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 02E9
        gbc.setState(0xc2d5, 0xfd71, 0x2290, 0xf7bf, 0x396d, 0x9a37, 0x0, 0x1);
        gbc.writeMem(0xc2d5, { 0x61 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xfd71, gbc.sp());
        EXPECT(0xc2d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xc2d5));
        // 61 02EB
        gbc.setState(0x8be3, 0xaf90, 0x17a0, 0x6fb, 0x79f4, 0x33a3, 0x0, 0x0);
        gbc.writeMem(0x8be3, { 0x61 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xaf90, gbc.sp());
        EXPECT(0x8be4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x8be3));
        // 61 02EC
        gbc.setState(0xdcab, 0x3de4, 0x7620, 0xe176, 0xc9d7, 0x2861, 0x0, 0x0);
        gbc.writeMem(0xdcab, { 0x61 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x3de4, gbc.sp());
        EXPECT(0xdcac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xdcab));
        // 61 02ED
        gbc.setState(0x7acc, 0x903b, 0xb270, 0x828b, 0x6e62, 0x5f8c, 0x0, 0x1);
        gbc.writeMem(0x7acc, { 0x61 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x903b, gbc.sp());
        EXPECT(0x7acd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 02EE
        gbc.setState(0x692b, 0xfcf3, 0x22d0, 0x90e5, 0x656, 0x7e2a, 0x1, 0x0);
        gbc.writeMem(0x692b, { 0x61 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xfcf3, gbc.sp());
        EXPECT(0x692c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 02EF
        gbc.setState(0x96a1, 0xdaa8, 0x690, 0xb32a, 0x92f5, 0x4088, 0x1, 0x0);
        gbc.writeMem(0x96a1, { 0x61 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xdaa8, gbc.sp());
        EXPECT(0x96a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x96a1));
        // 61 02F0
        gbc.setState(0xb7ef, 0x4ed5, 0x5970, 0xff9, 0x25a9, 0x295a, 0x0, 0x0);
        gbc.writeMem(0xb7ef, { 0x61 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x4ed5, gbc.sp());
        EXPECT(0xb7f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xb7ef));
        // 61 02F1
        gbc.setState(0x709c, 0x6660, 0xd940, 0x7260, 0x248d, 0xedca, 0x1, 0x0);
        gbc.writeMem(0x709c, { 0x61 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x6660, gbc.sp());
        EXPECT(0x709d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 02F2
        gbc.setState(0x8418, 0x2791, 0x60d0, 0xf400, 0x88d3, 0x8522, 0x1, 0x0);
        gbc.writeMem(0x8418, { 0x61 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x2791, gbc.sp());
        EXPECT(0x8419, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x8418));
        // 61 02F3
        gbc.setState(0x9cb5, 0xd85e, 0x9f0, 0xbfc1, 0xf9e8, 0x74ba, 0x0, 0x1);
        gbc.writeMem(0x9cb5, { 0x61 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xd85e, gbc.sp());
        EXPECT(0x9cb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x9cb5));
        // 61 02F4
        gbc.setState(0xd42, 0x8efb, 0x30a0, 0x6ffe, 0x2106, 0x433d, 0x1, 0x0);
        gbc.writeMem(0xd42, { 0x61 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x8efb, gbc.sp());
        EXPECT(0xd43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 02F5
        gbc.setState(0xa411, 0xbbe4, 0xe3a0, 0x96d7, 0x9de6, 0xce50, 0x1, 0x0);
        gbc.writeMem(0xa411, { 0x61 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xbbe4, gbc.sp());
        EXPECT(0xa412, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xa411));
        // 61 02F6
        gbc.setState(0x784d, 0xe176, 0xa550, 0xa83b, 0x3fb0, 0x3a3e, 0x0, 0x0);
        gbc.writeMem(0x784d, { 0x61 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xe176, gbc.sp());
        EXPECT(0x784e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 02F8
        gbc.setState(0x37c6, 0x9737, 0x2f90, 0xffd3, 0xa0b9, 0xf147, 0x1, 0x0);
        gbc.writeMem(0x37c6, { 0x61 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x9737, gbc.sp());
        EXPECT(0x37c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 02FA
        gbc.setState(0xd500, 0x1436, 0xa790, 0xd759, 0x857b, 0xb495, 0x0, 0x0);
        gbc.writeMem(0xd500, { 0x61 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x1436, gbc.sp());
        EXPECT(0xd501, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xd500));
        // 61 02FB
        gbc.setState(0x26ed, 0xd32, 0xfc10, 0xb87, 0x1fec, 0xcc6c, 0x1, 0x0);
        gbc.writeMem(0x26ed, { 0x61 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xd32, gbc.sp());
        EXPECT(0x26ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 02FC
        gbc.setState(0xd3ff, 0x6cf, 0x5ac0, 0xaff1, 0xedbc, 0xd1e, 0x0, 0x0);
        gbc.writeMem(0xd3ff, { 0x61 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x6cf, gbc.sp());
        EXPECT(0xd400, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xd3ff));
        // 61 02FD
        gbc.setState(0x7535, 0xd9d1, 0xa020, 0x7889, 0xedbd, 0xdfac, 0x1, 0x0);
        gbc.writeMem(0x7535, { 0x61 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xd9d1, gbc.sp());
        EXPECT(0x7536, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 02FE
        gbc.setState(0xecd8, 0x46d6, 0x7db0, 0xb44c, 0x6b2e, 0x73d5, 0x0, 0x1);
        gbc.writeMem(0xecd8, { 0x61 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x46d6, gbc.sp());
        EXPECT(0xecd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xecd8));
        // 61 02FF
        gbc.setState(0x1939, 0x865f, 0x6fa0, 0xf739, 0xb3c, 0xc37d, 0x1, 0x1);
        gbc.writeMem(0x1939, { 0x61 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x865f, gbc.sp());
        EXPECT(0x193a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0300
        gbc.setState(0xa01d, 0xacbb, 0x5310, 0x483a, 0x6c3b, 0x12a7, 0x1, 0x1);
        gbc.writeMem(0xa01d, { 0x61 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xacbb, gbc.sp());
        EXPECT(0xa01e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xa01d));
        // 61 0301
        gbc.setState(0x44c, 0x1df9, 0x8080, 0x2cd, 0xe915, 0xf9b3, 0x1, 0x0);
        gbc.writeMem(0x44c, { 0x61 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x1df9, gbc.sp());
        EXPECT(0x44d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0302
        gbc.setState(0x2133, 0xb375, 0x52c0, 0x6a21, 0x5a6a, 0xc7e0, 0x1, 0x1);
        gbc.writeMem(0x2133, { 0x61 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xb375, gbc.sp());
        EXPECT(0x2134, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0303
        gbc.setState(0x5672, 0xbaab, 0xa190, 0xb73c, 0x7848, 0xd663, 0x0, 0x1);
        gbc.writeMem(0x5672, { 0x61 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xbaab, gbc.sp());
        EXPECT(0x5673, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0304
        gbc.setState(0x4151, 0xc70f, 0xb260, 0xf4fd, 0x8192, 0x4b18, 0x0, 0x1);
        gbc.writeMem(0x4151, { 0x61 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xc70f, gbc.sp());
        EXPECT(0x4152, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0305
        gbc.setState(0xb70c, 0x45e3, 0x2740, 0x9be3, 0xb5fb, 0x4e31, 0x0, 0x0);
        gbc.writeMem(0xb70c, { 0x61 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x45e3, gbc.sp());
        EXPECT(0xb70d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xb70c));
        // 61 0306
        gbc.setState(0x1f0, 0xd5d3, 0x80b0, 0x737f, 0x42b6, 0xd53b, 0x1, 0x0);
        gbc.writeMem(0x1f0, { 0x61 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xd5d3, gbc.sp());
        EXPECT(0x1f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0307
        gbc.setState(0xd547, 0x85fc, 0x1d50, 0x899f, 0x4e68, 0x700a, 0x1, 0x1);
        gbc.writeMem(0xd547, { 0x61 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x85fc, gbc.sp());
        EXPECT(0xd548, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xd547));
        // 61 0309
        gbc.setState(0x6099, 0x27c, 0xe480, 0x7812, 0x2bb2, 0xc108, 0x0, 0x1);
        gbc.writeMem(0x6099, { 0x61 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x27c, gbc.sp());
        EXPECT(0x609a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 030A
        gbc.setState(0xcf76, 0x9963, 0x81f0, 0xd9, 0x9a77, 0x8f51, 0x1, 0x1);
        gbc.writeMem(0xcf76, { 0x61 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x9963, gbc.sp());
        EXPECT(0xcf77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xcf76));
        // 61 030B
        gbc.setState(0xdbcf, 0x15e2, 0x83b0, 0x8ef, 0x9066, 0x555a, 0x0, 0x0);
        gbc.writeMem(0xdbcf, { 0x61 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x15e2, gbc.sp());
        EXPECT(0xdbd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xdbcf));
        // 61 030C
        gbc.setState(0x3082, 0x5f1, 0xed90, 0x595d, 0xc080, 0x6374, 0x1, 0x1);
        gbc.writeMem(0x3082, { 0x61 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x5f1, gbc.sp());
        EXPECT(0x3083, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 030E
        gbc.setState(0x58a, 0xad37, 0xd5d0, 0x91fd, 0xfdf4, 0xdaca, 0x1, 0x0);
        gbc.writeMem(0x58a, { 0x61 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xad37, gbc.sp());
        EXPECT(0x58b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 030F
        gbc.setState(0xe069, 0xe83b, 0x8ac0, 0x3e42, 0x4ef8, 0x3dfe, 0x0, 0x1);
        gbc.writeMem(0xe069, { 0x61 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xe83b, gbc.sp());
        EXPECT(0xe06a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xe069));
        // 61 0310
        gbc.setState(0x69b0, 0x6407, 0xc8e0, 0x987a, 0xd04e, 0x770f, 0x1, 0x0);
        gbc.writeMem(0x69b0, { 0x61 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x6407, gbc.sp());
        EXPECT(0x69b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0311
        gbc.setState(0xba6f, 0xd432, 0x6300, 0x9726, 0xb989, 0x3147, 0x0, 0x1);
        gbc.writeMem(0xba6f, { 0x61 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xd432, gbc.sp());
        EXPECT(0xba70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xba6f));
        // 61 0312
        gbc.setState(0xb546, 0x31bb, 0x7090, 0x4a3d, 0x5c2d, 0x36ac, 0x0, 0x1);
        gbc.writeMem(0xb546, { 0x61 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x31bb, gbc.sp());
        EXPECT(0xb547, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xb546));
        // 61 0313
        gbc.setState(0x91d1, 0xfe67, 0xb9f0, 0xfd60, 0x60ea, 0x2027, 0x1, 0x0);
        gbc.writeMem(0x91d1, { 0x61 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xfe67, gbc.sp());
        EXPECT(0x91d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x91d1));
        // 61 0314
        gbc.setState(0xe97, 0xc6b0, 0xd9e0, 0xaaea, 0xada0, 0xb76a, 0x1, 0x1);
        gbc.writeMem(0xe97, { 0x61 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xc6b0, gbc.sp());
        EXPECT(0xe98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0316
        gbc.setState(0x5e45, 0xac85, 0x6a10, 0xe060, 0xcbaf, 0xae0f, 0x1, 0x1);
        gbc.writeMem(0x5e45, { 0x61 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xac85, gbc.sp());
        EXPECT(0x5e46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0317
        gbc.setState(0x5fa4, 0x3375, 0x5ff0, 0x9033, 0x4c8c, 0x566e, 0x1, 0x1);
        gbc.writeMem(0x5fa4, { 0x61 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x3375, gbc.sp());
        EXPECT(0x5fa5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0318
        gbc.setState(0x7861, 0x49ef, 0xc20, 0xf142, 0x3550, 0xa60b, 0x0, 0x1);
        gbc.writeMem(0x7861, { 0x61 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x49ef, gbc.sp());
        EXPECT(0x7862, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0319
        gbc.setState(0x4929, 0x4cc, 0xd970, 0x9121, 0x8996, 0x5100, 0x0, 0x0);
        gbc.writeMem(0x4929, { 0x61 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x4cc, gbc.sp());
        EXPECT(0x492a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 031A
        gbc.setState(0xc62c, 0x995b, 0xfca0, 0xa6ba, 0xce87, 0xdf7, 0x0, 0x1);
        gbc.writeMem(0xc62c, { 0x61 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x995b, gbc.sp());
        EXPECT(0xc62d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xc62c));
        // 61 031B
        gbc.setState(0x8086, 0xc5de, 0x4330, 0x7e9b, 0xea48, 0x9a53, 0x1, 0x0);
        gbc.writeMem(0x8086, { 0x61 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xc5de, gbc.sp());
        EXPECT(0x8087, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x8086));
        // 61 031C
        gbc.setState(0x8b1a, 0xb465, 0xdb60, 0xa670, 0x55e8, 0x112, 0x0, 0x0);
        gbc.writeMem(0x8b1a, { 0x61 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xb465, gbc.sp());
        EXPECT(0x8b1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x8b1a));
        // 61 031D
        gbc.setState(0xc417, 0x7a6e, 0x5920, 0x4a31, 0xcaf9, 0x133, 0x1, 0x0);
        gbc.writeMem(0xc417, { 0x61 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x7a6e, gbc.sp());
        EXPECT(0xc418, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xc417));
        // 61 031E
        gbc.setState(0x2b6f, 0x490b, 0x5a40, 0x798b, 0xd15a, 0x64f5, 0x0, 0x1);
        gbc.writeMem(0x2b6f, { 0x61 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x490b, gbc.sp());
        EXPECT(0x2b70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 031F
        gbc.setState(0x14cb, 0xac82, 0xd420, 0x5aac, 0xd47f, 0xa28c, 0x1, 0x0);
        gbc.writeMem(0x14cb, { 0x61 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xac82, gbc.sp());
        EXPECT(0x14cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0320
        gbc.setState(0xc9ee, 0xf21c, 0x11d0, 0x194e, 0x8b0f, 0xe8e9, 0x1, 0x1);
        gbc.writeMem(0xc9ee, { 0x61 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xf21c, gbc.sp());
        EXPECT(0xc9ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xc9ee));
        // 61 0321
        gbc.setState(0x3b8c, 0x2422, 0xc130, 0x4ee7, 0xfd8e, 0xcbf4, 0x0, 0x0);
        gbc.writeMem(0x3b8c, { 0x61 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x2422, gbc.sp());
        EXPECT(0x3b8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0322
        gbc.setState(0x4ab, 0xc2ee, 0xb70, 0x4093, 0x6bce, 0x1d84, 0x1, 0x0);
        gbc.writeMem(0x4ab, { 0x61 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xc2ee, gbc.sp());
        EXPECT(0x4ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0323
        gbc.setState(0x7bf6, 0xa64, 0x3f10, 0x308, 0x2845, 0x2180, 0x0, 0x1);
        gbc.writeMem(0x7bf6, { 0x61 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xa64, gbc.sp());
        EXPECT(0x7bf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0324
        gbc.setState(0x59b1, 0x33b7, 0x7290, 0xa857, 0x9aa3, 0xea52, 0x0, 0x1);
        gbc.writeMem(0x59b1, { 0x61 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x33b7, gbc.sp());
        EXPECT(0x59b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0325
        gbc.setState(0xe44b, 0x4848, 0x7c40, 0xa53d, 0xef37, 0x7bc2, 0x1, 0x0);
        gbc.writeMem(0xe44b, { 0x61 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x4848, gbc.sp());
        EXPECT(0xe44c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xe44b));
        // 61 0326
        gbc.setState(0xb957, 0xd138, 0x79c0, 0xb783, 0x944f, 0x18cf, 0x1, 0x0);
        gbc.writeMem(0xb957, { 0x61 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xd138, gbc.sp());
        EXPECT(0xb958, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xb957));
        // 61 0327
        gbc.setState(0x8b21, 0x2a1c, 0xae20, 0xb591, 0xb9f7, 0x4e4d, 0x0, 0x0);
        gbc.writeMem(0x8b21, { 0x61 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x2a1c, gbc.sp());
        EXPECT(0x8b22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x8b21));
        // 61 0328
        gbc.setState(0xa02c, 0xecf2, 0x2700, 0xdc3b, 0x63a4, 0xa3d7, 0x0, 0x1);
        gbc.writeMem(0xa02c, { 0x61 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xecf2, gbc.sp());
        EXPECT(0xa02d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xa02c));
        // 61 0329
        gbc.setState(0x32d8, 0x2f22, 0x2d70, 0xf47c, 0xc3bb, 0x1fe7, 0x1, 0x1);
        gbc.writeMem(0x32d8, { 0x61 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x2f22, gbc.sp());
        EXPECT(0x32d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 032A
        gbc.setState(0xd53f, 0xf302, 0xef50, 0x69, 0x2171, 0x2d1f, 0x1, 0x1);
        gbc.writeMem(0xd53f, { 0x61 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xf302, gbc.sp());
        EXPECT(0xd540, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xd53f));
        // 61 032B
        gbc.setState(0x8f36, 0xb4eb, 0x4fa0, 0x2a3c, 0xf244, 0x3216, 0x1, 0x1);
        gbc.writeMem(0x8f36, { 0x61 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xb4eb, gbc.sp());
        EXPECT(0x8f37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x8f36));
        // 61 032C
        gbc.setState(0xd3bf, 0x30d8, 0x8fa0, 0xad3e, 0xa523, 0xa6fc, 0x1, 0x0);
        gbc.writeMem(0xd3bf, { 0x61 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x30d8, gbc.sp());
        EXPECT(0xd3c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xd3bf));
        // 61 032D
        gbc.setState(0x69f1, 0x88d5, 0x3cd0, 0xa16f, 0x9628, 0x197, 0x1, 0x1);
        gbc.writeMem(0x69f1, { 0x61 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x88d5, gbc.sp());
        EXPECT(0x69f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 032E
        gbc.setState(0x74c2, 0x6b55, 0x5f90, 0xeb87, 0xbb09, 0x9553, 0x0, 0x0);
        gbc.writeMem(0x74c2, { 0x61 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x6b55, gbc.sp());
        EXPECT(0x74c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 032F
        gbc.setState(0xcce0, 0x6a05, 0xd90, 0x4945, 0xbf2e, 0x410e, 0x1, 0x1);
        gbc.writeMem(0xcce0, { 0x61 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x6a05, gbc.sp());
        EXPECT(0xcce1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xcce0));
        // 61 0330
        gbc.setState(0xba8f, 0xbc8c, 0x70b0, 0xbbca, 0xf62c, 0x7aa8, 0x1, 0x1);
        gbc.writeMem(0xba8f, { 0x61 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xbc8c, gbc.sp());
        EXPECT(0xba90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xba8f));
        // 61 0331
        gbc.setState(0xcee8, 0x7ae6, 0x7150, 0x8f65, 0x5fc8, 0x82f3, 0x0, 0x0);
        gbc.writeMem(0xcee8, { 0x61 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x7ae6, gbc.sp());
        EXPECT(0xcee9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xcee8));
        // 61 0332
        gbc.setState(0xdfd7, 0xa181, 0x9ad0, 0x9c1c, 0xaf93, 0x6360, 0x0, 0x0);
        gbc.writeMem(0xdfd7, { 0x61 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xa181, gbc.sp());
        EXPECT(0xdfd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xdfd7));
        // 61 0333
        gbc.setState(0xb9f7, 0x31fc, 0xb670, 0xcaa1, 0xa4e6, 0xa7a6, 0x0, 0x1);
        gbc.writeMem(0xb9f7, { 0x61 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x31fc, gbc.sp());
        EXPECT(0xb9f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xb9f7));
        // 61 0334
        gbc.setState(0x5363, 0xce6e, 0x2c60, 0xca3d, 0x5613, 0x8b91, 0x0, 0x1);
        gbc.writeMem(0x5363, { 0x61 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xce6e, gbc.sp());
        EXPECT(0x5364, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0335
        gbc.setState(0x8c3e, 0x19e1, 0x8340, 0x1b00, 0xdb27, 0x38d0, 0x1, 0x0);
        gbc.writeMem(0x8c3e, { 0x61 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x19e1, gbc.sp());
        EXPECT(0x8c3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x8c3e));
        // 61 0336
        gbc.setState(0xe2fe, 0x17, 0xe030, 0x80f1, 0x5d7e, 0x77db, 0x1, 0x1);
        gbc.writeMem(0xe2fe, { 0x61 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x17, gbc.sp());
        EXPECT(0xe2ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xe2fe));
        // 61 0337
        gbc.setState(0xddb0, 0xcf87, 0xdff0, 0x389d, 0x522f, 0x7e82, 0x0, 0x1);
        gbc.writeMem(0xddb0, { 0x61 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xcf87, gbc.sp());
        EXPECT(0xddb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xddb0));
        // 61 0339
        gbc.setState(0x4cb8, 0x617c, 0xae50, 0x2ac6, 0x8c03, 0x5be3, 0x1, 0x1);
        gbc.writeMem(0x4cb8, { 0x61 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x617c, gbc.sp());
        EXPECT(0x4cb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 033A
        gbc.setState(0x22dc, 0x8a0c, 0x6700, 0xa990, 0xbddd, 0x1509, 0x1, 0x0);
        gbc.writeMem(0x22dc, { 0x61 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x8a0c, gbc.sp());
        EXPECT(0x22dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 033B
        gbc.setState(0x1ebf, 0x8e2e, 0xa80, 0x7323, 0xabf4, 0xa5d9, 0x1, 0x1);
        gbc.writeMem(0x1ebf, { 0x61 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x8e2e, gbc.sp());
        EXPECT(0x1ec0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 033C
        gbc.setState(0x263d, 0x50a, 0x5f20, 0x69d4, 0x70c2, 0x7896, 0x0, 0x1);
        gbc.writeMem(0x263d, { 0x61 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x50a, gbc.sp());
        EXPECT(0x263e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 033D
        gbc.setState(0xc8b2, 0x54a4, 0x2a70, 0xdb25, 0x6ba1, 0xaa1e, 0x1, 0x0);
        gbc.writeMem(0xc8b2, { 0x61 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x54a4, gbc.sp());
        EXPECT(0xc8b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xc8b2));
        // 61 033E
        gbc.setState(0x5361, 0x2c49, 0x8cd0, 0x240c, 0x36d7, 0x22b2, 0x1, 0x1);
        gbc.writeMem(0x5361, { 0x61 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x2c49, gbc.sp());
        EXPECT(0x5362, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 033F
        gbc.setState(0x61c2, 0xde18, 0x90e0, 0xabe3, 0x2c96, 0x993, 0x1, 0x1);
        gbc.writeMem(0x61c2, { 0x61 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xde18, gbc.sp());
        EXPECT(0x61c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0340
        gbc.setState(0xa6bb, 0x5da2, 0x8bb0, 0x14a, 0x3972, 0x294, 0x1, 0x1);
        gbc.writeMem(0xa6bb, { 0x61 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x5da2, gbc.sp());
        EXPECT(0xa6bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xa6bb));
        // 61 0341
        gbc.setState(0x7f88, 0x92a4, 0xd330, 0xc35c, 0x6b58, 0x8e9e, 0x1, 0x0);
        gbc.writeMem(0x7f88, { 0x61 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x92a4, gbc.sp());
        EXPECT(0x7f89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0342
        gbc.setState(0xc38e, 0x1ddd, 0xdd0, 0x7351, 0x4347, 0x153b, 0x1, 0x1);
        gbc.writeMem(0xc38e, { 0x61 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x1ddd, gbc.sp());
        EXPECT(0xc38f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xc38e));
        // 61 0343
        gbc.setState(0x1421, 0xf5b7, 0xe800, 0xec25, 0xef59, 0x803e, 0x0, 0x0);
        gbc.writeMem(0x1421, { 0x61 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xf5b7, gbc.sp());
        EXPECT(0x1422, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0344
        gbc.setState(0x4c43, 0x12ec, 0x3570, 0x888c, 0x72e0, 0xf72e, 0x1, 0x0);
        gbc.writeMem(0x4c43, { 0x61 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x12ec, gbc.sp());
        EXPECT(0x4c44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0346
        gbc.setState(0xcbf5, 0x44d2, 0x46a0, 0x43f0, 0xfe35, 0x54b4, 0x0, 0x0);
        gbc.writeMem(0xcbf5, { 0x61 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x44d2, gbc.sp());
        EXPECT(0xcbf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xcbf5));
        // 61 0347
        gbc.setState(0x6107, 0x29f0, 0xc290, 0x3dad, 0x2941, 0xbc49, 0x1, 0x0);
        gbc.writeMem(0x6107, { 0x61 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x29f0, gbc.sp());
        EXPECT(0x6108, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0349
        gbc.setState(0x817d, 0x852b, 0xfae0, 0x51b4, 0x12de, 0x949a, 0x1, 0x1);
        gbc.writeMem(0x817d, { 0x61 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x852b, gbc.sp());
        EXPECT(0x817e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x817d));
        // 61 034A
        gbc.setState(0x270, 0xc8eb, 0xb6a0, 0x5c49, 0x72b1, 0xef2e, 0x0, 0x1);
        gbc.writeMem(0x270, { 0x61 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xc8eb, gbc.sp());
        EXPECT(0x271, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 034B
        gbc.setState(0xe558, 0xc986, 0x44d0, 0x8ed3, 0xb630, 0x70bd, 0x0, 0x1);
        gbc.writeMem(0xe558, { 0x61 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xc986, gbc.sp());
        EXPECT(0xe559, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xe558));
        // 61 034C
        gbc.setState(0xc83a, 0x9aa8, 0xde40, 0xd2e, 0x3f01, 0x75c, 0x1, 0x1);
        gbc.writeMem(0xc83a, { 0x61 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x9aa8, gbc.sp());
        EXPECT(0xc83b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xc83a));
        // 61 034E
        gbc.setState(0xee34, 0x147d, 0x5e30, 0xf719, 0xb8c7, 0x9bd4, 0x0, 0x0);
        gbc.writeMem(0xee34, { 0x61 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x147d, gbc.sp());
        EXPECT(0xee35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xee34));
        // 61 034F
        gbc.setState(0x4f95, 0xb67, 0x200, 0x6a59, 0x438b, 0xe810, 0x1, 0x1);
        gbc.writeMem(0x4f95, { 0x61 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xb67, gbc.sp());
        EXPECT(0x4f96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0350
        gbc.setState(0x28a1, 0x4ac1, 0x10b0, 0x4db9, 0x1b96, 0xfbd5, 0x0, 0x0);
        gbc.writeMem(0x28a1, { 0x61 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x4ac1, gbc.sp());
        EXPECT(0x28a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0351
        gbc.setState(0x2f58, 0xbd6f, 0xeab0, 0x7939, 0xce1, 0xa349, 0x0, 0x1);
        gbc.writeMem(0x2f58, { 0x61 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xbd6f, gbc.sp());
        EXPECT(0x2f59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0352
        gbc.setState(0xb029, 0xf7d4, 0x5f50, 0xd7ff, 0xcff3, 0xa321, 0x0, 0x1);
        gbc.writeMem(0xb029, { 0x61 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xf7d4, gbc.sp());
        EXPECT(0xb02a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xb029));
        // 61 0353
        gbc.setState(0x6056, 0x4d2f, 0x4b0, 0x55bc, 0x5ad3, 0x151f, 0x0, 0x0);
        gbc.writeMem(0x6056, { 0x61 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x4d2f, gbc.sp());
        EXPECT(0x6057, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0354
        gbc.setState(0x72e5, 0x1ba9, 0x91e0, 0x56be, 0x6998, 0x7b44, 0x1, 0x0);
        gbc.writeMem(0x72e5, { 0x61 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x1ba9, gbc.sp());
        EXPECT(0x72e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0355
        gbc.setState(0xceda, 0x7d34, 0xf810, 0xe99a, 0x19b5, 0x5aef, 0x0, 0x1);
        gbc.writeMem(0xceda, { 0x61 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x7d34, gbc.sp());
        EXPECT(0xcedb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xceda));
        // 61 0356
        gbc.setState(0xdde5, 0xf92b, 0x6450, 0xde14, 0xde96, 0x8bae, 0x1, 0x1);
        gbc.writeMem(0xdde5, { 0x61 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xf92b, gbc.sp());
        EXPECT(0xdde6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xdde5));
        // 61 0357
        gbc.setState(0x230b, 0x6914, 0x1a70, 0x13bc, 0x6788, 0xf1e3, 0x1, 0x0);
        gbc.writeMem(0x230b, { 0x61 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x6914, gbc.sp());
        EXPECT(0x230c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0358
        gbc.setState(0x2d55, 0x723e, 0x1260, 0xb22f, 0x70f6, 0xc0b1, 0x0, 0x0);
        gbc.writeMem(0x2d55, { 0x61 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x723e, gbc.sp());
        EXPECT(0x2d56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0359
        gbc.setState(0xdbff, 0x28db, 0x4c40, 0x18ac, 0xa5e2, 0x2e03, 0x1, 0x1);
        gbc.writeMem(0xdbff, { 0x61 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x28db, gbc.sp());
        EXPECT(0xdc00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xdbff));
        // 61 035A
        gbc.setState(0x7abf, 0x243a, 0x2240, 0x9200, 0x43f9, 0xe5ab, 0x0, 0x0);
        gbc.writeMem(0x7abf, { 0x61 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x243a, gbc.sp());
        EXPECT(0x7ac0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 035B
        gbc.setState(0xdec9, 0xd0d3, 0x38c0, 0x54fa, 0x162f, 0xf686, 0x1, 0x1);
        gbc.writeMem(0xdec9, { 0x61 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xd0d3, gbc.sp());
        EXPECT(0xdeca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xdec9));
        // 61 035C
        gbc.setState(0x21cd, 0xd5d4, 0xdee0, 0xe655, 0x529b, 0xfe55, 0x0, 0x1);
        gbc.writeMem(0x21cd, { 0x61 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xd5d4, gbc.sp());
        EXPECT(0x21ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 035D
        gbc.setState(0xb855, 0xb4cc, 0x7600, 0x8f18, 0xe362, 0x23ab, 0x1, 0x1);
        gbc.writeMem(0xb855, { 0x61 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xb4cc, gbc.sp());
        EXPECT(0xb856, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xb855));
        // 61 035E
        gbc.setState(0x25fe, 0x831a, 0x2690, 0x4895, 0x7494, 0x55e9, 0x0, 0x0);
        gbc.writeMem(0x25fe, { 0x61 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x831a, gbc.sp());
        EXPECT(0x25ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 035F
        gbc.setState(0xc7e7, 0x3cbd, 0xe7b0, 0xeb94, 0xcb3c, 0xba25, 0x1, 0x0);
        gbc.writeMem(0xc7e7, { 0x61 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x3cbd, gbc.sp());
        EXPECT(0xc7e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xc7e7));
        // 61 0360
        gbc.setState(0x1519, 0x3cfd, 0x8e20, 0x1686, 0xe658, 0x74ce, 0x1, 0x0);
        gbc.writeMem(0x1519, { 0x61 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x3cfd, gbc.sp());
        EXPECT(0x151a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0362
        gbc.setState(0x72b1, 0x9a8c, 0xb2b0, 0x3aab, 0x94cf, 0x1d23, 0x0, 0x0);
        gbc.writeMem(0x72b1, { 0x61 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x9a8c, gbc.sp());
        EXPECT(0x72b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0363
        gbc.setState(0xe9c9, 0xeb0e, 0xd0c0, 0x9d5f, 0x7307, 0x5fd3, 0x0, 0x1);
        gbc.writeMem(0xe9c9, { 0x61 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xeb0e, gbc.sp());
        EXPECT(0xe9ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xe9c9));
        // 61 0364
        gbc.setState(0x9869, 0xd20f, 0x64a0, 0x88b5, 0xe51b, 0xd8bc, 0x1, 0x0);
        gbc.writeMem(0x9869, { 0x61 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xd20f, gbc.sp());
        EXPECT(0x986a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x9869));
        // 61 0365
        gbc.setState(0x975, 0x75cc, 0x5060, 0x7b49, 0xd559, 0xcf02, 0x1, 0x0);
        gbc.writeMem(0x975, { 0x61 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x75cc, gbc.sp());
        EXPECT(0x976, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0366
        gbc.setState(0x2d4a, 0xd829, 0xcf40, 0xd156, 0x9262, 0x7647, 0x1, 0x0);
        gbc.writeMem(0x2d4a, { 0x61 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xd829, gbc.sp());
        EXPECT(0x2d4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0367
        gbc.setState(0x9c6e, 0xc58c, 0x40b0, 0x7f5a, 0xbbe1, 0xbca9, 0x0, 0x0);
        gbc.writeMem(0x9c6e, { 0x61 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xc58c, gbc.sp());
        EXPECT(0x9c6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x9c6e));
        // 61 0368
        gbc.setState(0xe8a9, 0xe73d, 0x1310, 0xf1ec, 0xad5, 0x83c0, 0x1, 0x1);
        gbc.writeMem(0xe8a9, { 0x61 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xe73d, gbc.sp());
        EXPECT(0xe8aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xe8a9));
        // 61 0369
        gbc.setState(0xce2b, 0x3d4a, 0x29b0, 0xd9aa, 0xaa9b, 0xb248, 0x0, 0x0);
        gbc.writeMem(0xce2b, { 0x61 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x3d4a, gbc.sp());
        EXPECT(0xce2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xce2b));
        // 61 036B
        gbc.setState(0x5154, 0x5d7e, 0xd150, 0xb424, 0x17bc, 0x342, 0x1, 0x0);
        gbc.writeMem(0x5154, { 0x61 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x5d7e, gbc.sp());
        EXPECT(0x5155, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 036C
        gbc.setState(0xc79e, 0xcf26, 0xb550, 0x2bd1, 0xcc7c, 0x2eab, 0x1, 0x1);
        gbc.writeMem(0xc79e, { 0x61 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xcf26, gbc.sp());
        EXPECT(0xc79f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xc79e));
        // 61 036D
        gbc.setState(0xce1a, 0x374e, 0x2c70, 0x8ad3, 0x38f2, 0xf9c8, 0x0, 0x1);
        gbc.writeMem(0xce1a, { 0x61 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x374e, gbc.sp());
        EXPECT(0xce1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xce1a));
        // 61 036E
        gbc.setState(0x966f, 0x8f2f, 0xfdb0, 0x30b2, 0xe06f, 0x6657, 0x0, 0x0);
        gbc.writeMem(0x966f, { 0x61 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x8f2f, gbc.sp());
        EXPECT(0x9670, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x966f));
        // 61 036F
        gbc.setState(0x5889, 0xb250, 0x1d90, 0xfc01, 0xe987, 0xac33, 0x0, 0x0);
        gbc.writeMem(0x5889, { 0x61 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xb250, gbc.sp());
        EXPECT(0x588a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0370
        gbc.setState(0xa0b0, 0xcf39, 0x250, 0x378b, 0x97a0, 0x14f5, 0x1, 0x0);
        gbc.writeMem(0xa0b0, { 0x61 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xcf39, gbc.sp());
        EXPECT(0xa0b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xa0b0));
        // 61 0371
        gbc.setState(0xef05, 0xb915, 0xf900, 0x616a, 0x7f47, 0x60a2, 0x0, 0x1);
        gbc.writeMem(0xef05, { 0x61 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xb915, gbc.sp());
        EXPECT(0xef06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xef05));
        // 61 0372
        gbc.setState(0xd314, 0x95b, 0x1dc0, 0x3d7a, 0xecc3, 0x744c, 0x0, 0x1);
        gbc.writeMem(0xd314, { 0x61 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x95b, gbc.sp());
        EXPECT(0xd315, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xd314));
        // 61 0373
        gbc.setState(0x65c5, 0xfe00, 0x99e0, 0x58b8, 0x2d25, 0x17a1, 0x1, 0x0);
        gbc.writeMem(0x65c5, { 0x61 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xfe00, gbc.sp());
        EXPECT(0x65c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0374
        gbc.setState(0x31b3, 0x9e2f, 0x5b90, 0xe71a, 0x78ce, 0x5dda, 0x0, 0x0);
        gbc.writeMem(0x31b3, { 0x61 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x9e2f, gbc.sp());
        EXPECT(0x31b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0375
        gbc.setState(0x843f, 0xa1a4, 0x3930, 0xce4b, 0x49e8, 0x6b17, 0x1, 0x0);
        gbc.writeMem(0x843f, { 0x61 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xa1a4, gbc.sp());
        EXPECT(0x8440, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x843f));
        // 61 0376
        gbc.setState(0xc0e7, 0x87f2, 0x45c0, 0xf2d6, 0xffa6, 0x7307, 0x0, 0x0);
        gbc.writeMem(0xc0e7, { 0x61 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x87f2, gbc.sp());
        EXPECT(0xc0e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xc0e7));
        // 61 0377
        gbc.setState(0x109b, 0xf9a6, 0x5fc0, 0xc69a, 0xcaef, 0x44e9, 0x0, 0x0);
        gbc.writeMem(0x109b, { 0x61 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xf9a6, gbc.sp());
        EXPECT(0x109c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0378
        gbc.setState(0x30b0, 0x5223, 0x9ba0, 0xcf4e, 0xd4bb, 0xa40, 0x0, 0x0);
        gbc.writeMem(0x30b0, { 0x61 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x5223, gbc.sp());
        EXPECT(0x30b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0379
        gbc.setState(0x3807, 0xd063, 0x580, 0x2754, 0x3f6c, 0x77bd, 0x1, 0x0);
        gbc.writeMem(0x3807, { 0x61 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xd063, gbc.sp());
        EXPECT(0x3808, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 037A
        gbc.setState(0x8b43, 0x1124, 0x7d0, 0x105, 0xd979, 0xdfb3, 0x0, 0x0);
        gbc.writeMem(0x8b43, { 0x61 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x1124, gbc.sp());
        EXPECT(0x8b44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x8b43));
        // 61 037B
        gbc.setState(0x324a, 0xfa55, 0x75a0, 0xee79, 0x186f, 0x4fd7, 0x1, 0x1);
        gbc.writeMem(0x324a, { 0x61 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xfa55, gbc.sp());
        EXPECT(0x324b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 037C
        gbc.setState(0x9e03, 0xa6d8, 0x6510, 0xa3b9, 0xe805, 0xe491, 0x0, 0x1);
        gbc.writeMem(0x9e03, { 0x61 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xa6d8, gbc.sp());
        EXPECT(0x9e04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x9e03));
        // 61 037D
        gbc.setState(0x7a0f, 0xe58d, 0xe8e0, 0x7c74, 0xb31a, 0xc81c, 0x1, 0x1);
        gbc.writeMem(0x7a0f, { 0x61 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xe58d, gbc.sp());
        EXPECT(0x7a10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 037E
        gbc.setState(0x45f0, 0xd87e, 0x7180, 0xa11c, 0x332e, 0xd38b, 0x0, 0x0);
        gbc.writeMem(0x45f0, { 0x61 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xd87e, gbc.sp());
        EXPECT(0x45f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 037F
        gbc.setState(0x79a1, 0x4a56, 0x2ff0, 0x5083, 0xfacb, 0x11e7, 0x1, 0x1);
        gbc.writeMem(0x79a1, { 0x61 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x4a56, gbc.sp());
        EXPECT(0x79a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0380
        gbc.setState(0x55fd, 0x20, 0x96e0, 0x9f54, 0xa047, 0xfa27, 0x0, 0x0);
        gbc.writeMem(0x55fd, { 0x61 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x20, gbc.sp());
        EXPECT(0x55fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0381
        gbc.setState(0x91ae, 0xac71, 0x6b0, 0x8e6e, 0x6bc, 0x7eae, 0x1, 0x0);
        gbc.writeMem(0x91ae, { 0x61 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xac71, gbc.sp());
        EXPECT(0x91af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x91ae));
        // 61 0382
        gbc.setState(0xea94, 0xe345, 0xb6e0, 0x9f16, 0xeb1, 0x6849, 0x0, 0x1);
        gbc.writeMem(0xea94, { 0x61 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xe345, gbc.sp());
        EXPECT(0xea95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xea94));
        // 61 0383
        gbc.setState(0xa283, 0x1ce5, 0x6d70, 0x8ac4, 0x16b2, 0xf917, 0x0, 0x1);
        gbc.writeMem(0xa283, { 0x61 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x1ce5, gbc.sp());
        EXPECT(0xa284, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xa283));
        // 61 0384
        gbc.setState(0x730c, 0x3275, 0xa000, 0x44ac, 0xaa65, 0xd735, 0x0, 0x0);
        gbc.writeMem(0x730c, { 0x61 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x3275, gbc.sp());
        EXPECT(0x730d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0385
        gbc.setState(0xd711, 0x8407, 0xa010, 0x9d71, 0xdab, 0x1bca, 0x0, 0x1);
        gbc.writeMem(0xd711, { 0x61 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x8407, gbc.sp());
        EXPECT(0xd712, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xd711));
        // 61 0387
        gbc.setState(0xb3d0, 0x7fc, 0xe80, 0x587b, 0xf857, 0x6d56, 0x1, 0x0);
        gbc.writeMem(0xb3d0, { 0x61 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x7fc, gbc.sp());
        EXPECT(0xb3d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xb3d0));
        // 61 0389
        gbc.setState(0xb71, 0xe4b1, 0x7070, 0xa7c9, 0xe66e, 0xbabf, 0x0, 0x0);
        gbc.writeMem(0xb71, { 0x61 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xe4b1, gbc.sp());
        EXPECT(0xb72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 038A
        gbc.setState(0x5cfc, 0xaa5, 0xe030, 0x91e7, 0xefde, 0x5a0d, 0x0, 0x1);
        gbc.writeMem(0x5cfc, { 0x61 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xaa5, gbc.sp());
        EXPECT(0x5cfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 038B
        gbc.setState(0xd167, 0x37d4, 0xc9b0, 0x77c6, 0xfe1d, 0x82f7, 0x1, 0x1);
        gbc.writeMem(0xd167, { 0x61 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x37d4, gbc.sp());
        EXPECT(0xd168, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xd167));
        // 61 038C
        gbc.setState(0x31ef, 0x1fcf, 0x82d0, 0xb5e0, 0xeba5, 0x8722, 0x1, 0x0);
        gbc.writeMem(0x31ef, { 0x61 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x1fcf, gbc.sp());
        EXPECT(0x31f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 038D
        gbc.setState(0xb7b8, 0xf750, 0x1c60, 0x347a, 0xb7bb, 0xc229, 0x1, 0x0);
        gbc.writeMem(0xb7b8, { 0x61 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xf750, gbc.sp());
        EXPECT(0xb7b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xb7b8));
        // 61 038E
        gbc.setState(0x8748, 0xff15, 0x2f0, 0x8282, 0x82a4, 0xd966, 0x0, 0x1);
        gbc.writeMem(0x8748, { 0x61 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xff15, gbc.sp());
        EXPECT(0x8749, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x8748));
        // 61 038F
        gbc.setState(0x3c54, 0xd63, 0x2c80, 0xff51, 0x48ae, 0x25bd, 0x0, 0x1);
        gbc.writeMem(0x3c54, { 0x61 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xd63, gbc.sp());
        EXPECT(0x3c55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0390
        gbc.setState(0x4835, 0x448d, 0x6190, 0x66d7, 0xf4e9, 0x6455, 0x1, 0x1);
        gbc.writeMem(0x4835, { 0x61 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x448d, gbc.sp());
        EXPECT(0x4836, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0391
        gbc.setState(0x678d, 0x80af, 0x4f20, 0x63af, 0xb405, 0x8610, 0x0, 0x1);
        gbc.writeMem(0x678d, { 0x61 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x80af, gbc.sp());
        EXPECT(0x678e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0392
        gbc.setState(0xeb5d, 0x1a8f, 0x53a0, 0xb256, 0x480b, 0xf6dd, 0x0, 0x0);
        gbc.writeMem(0xeb5d, { 0x61 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x1a8f, gbc.sp());
        EXPECT(0xeb5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xeb5d));
        // 61 0393
        gbc.setState(0xa843, 0xc76a, 0xda90, 0x2f1c, 0xfab6, 0xb63c, 0x1, 0x0);
        gbc.writeMem(0xa843, { 0x61 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xc76a, gbc.sp());
        EXPECT(0xa844, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xa843));
        // 61 0394
        gbc.setState(0x97cc, 0x29de, 0x32f0, 0xafe7, 0xcfed, 0x6b20, 0x1, 0x1);
        gbc.writeMem(0x97cc, { 0x61 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x29de, gbc.sp());
        EXPECT(0x97cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x97cc));
        // 61 0396
        gbc.setState(0xabe4, 0x426e, 0x8730, 0x4be3, 0xfaad, 0x82d8, 0x0, 0x1);
        gbc.writeMem(0xabe4, { 0x61 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x426e, gbc.sp());
        EXPECT(0xabe5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xabe4));
        // 61 0397
        gbc.setState(0xfb6, 0xb66, 0xef80, 0x3684, 0x8e7, 0x5b4c, 0x0, 0x1);
        gbc.writeMem(0xfb6, { 0x61 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xb66, gbc.sp());
        EXPECT(0xfb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 0398
        gbc.setState(0x1c5e, 0x16f7, 0x5ab0, 0xde67, 0xfff2, 0xe745, 0x0, 0x1);
        gbc.writeMem(0x1c5e, { 0x61 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x16f7, gbc.sp());
        EXPECT(0x1c5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 0399
        gbc.setState(0xcff9, 0xdb73, 0xf800, 0xa6ea, 0x8e1f, 0x1537, 0x1, 0x1);
        gbc.writeMem(0xcff9, { 0x61 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xdb73, gbc.sp());
        EXPECT(0xcffa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xcff9));
        // 61 039A
        gbc.setState(0x4c2c, 0xdfc6, 0xb4c0, 0xf5d1, 0xdf61, 0x4dda, 0x0, 0x1);
        gbc.writeMem(0x4c2c, { 0x61 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xdfc6, gbc.sp());
        EXPECT(0x4c2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 039B
        gbc.setState(0x4fd2, 0xd61e, 0xf090, 0x6e77, 0x781, 0x8f07, 0x1, 0x1);
        gbc.writeMem(0x4fd2, { 0x61 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xd61e, gbc.sp());
        EXPECT(0x4fd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 039C
        gbc.setState(0x1d15, 0x57a3, 0x3b30, 0x4be6, 0x9df2, 0x3f48, 0x0, 0x1);
        gbc.writeMem(0x1d15, { 0x61 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x57a3, gbc.sp());
        EXPECT(0x1d16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 039D
        gbc.setState(0xe946, 0xfe6a, 0xd470, 0xfe8f, 0x533f, 0x3194, 0x0, 0x0);
        gbc.writeMem(0xe946, { 0x61 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xfe6a, gbc.sp());
        EXPECT(0xe947, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xe946));
        // 61 039E
        gbc.setState(0xeaea, 0x108c, 0x26a0, 0x1350, 0xf6a6, 0x2e89, 0x1, 0x0);
        gbc.writeMem(0xeaea, { 0x61 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x108c, gbc.sp());
        EXPECT(0xeaeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xeaea));
        // 61 039F
        gbc.setState(0x36ad, 0x72ec, 0x9480, 0xd8db, 0xd22b, 0x321d, 0x1, 0x0);
        gbc.writeMem(0x36ad, { 0x61 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x72ec, gbc.sp());
        EXPECT(0x36ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 03A0
        gbc.setState(0x6289, 0xfac7, 0xfbf0, 0x1e74, 0x6eb7, 0xeef2, 0x1, 0x0);
        gbc.writeMem(0x6289, { 0x61 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xfac7, gbc.sp());
        EXPECT(0x628a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 03A1
        gbc.setState(0x6096, 0x98ea, 0x6340, 0xba25, 0x2c4f, 0xab23, 0x0, 0x0);
        gbc.writeMem(0x6096, { 0x61 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x98ea, gbc.sp());
        EXPECT(0x6097, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 03A2
        gbc.setState(0xbd03, 0x1bdb, 0x7a00, 0x43bf, 0xa7b9, 0x5569, 0x1, 0x1);
        gbc.writeMem(0xbd03, { 0x61 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x1bdb, gbc.sp());
        EXPECT(0xbd04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xbd03));
        // 61 03A4
        gbc.setState(0x6367, 0x5bdf, 0x6e20, 0x547, 0x239, 0xccab, 0x1, 0x0);
        gbc.writeMem(0x6367, { 0x61 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x5bdf, gbc.sp());
        EXPECT(0x6368, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 03A5
        gbc.setState(0x458f, 0x5633, 0x3830, 0xf29a, 0xb8e1, 0x655f, 0x0, 0x0);
        gbc.writeMem(0x458f, { 0x61 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x5633, gbc.sp());
        EXPECT(0x4590, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 03A6
        gbc.setState(0x2e8b, 0xecd1, 0xbd60, 0x5214, 0x13e5, 0xaca1, 0x0, 0x0);
        gbc.writeMem(0x2e8b, { 0x61 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xecd1, gbc.sp());
        EXPECT(0x2e8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 03A7
        gbc.setState(0x51f8, 0xe2a9, 0x8600, 0x5ad6, 0xa0e9, 0x6361, 0x1, 0x1);
        gbc.writeMem(0x51f8, { 0x61 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xe2a9, gbc.sp());
        EXPECT(0x51f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 03A8
        gbc.setState(0x9929, 0xcb3a, 0x69f0, 0x4828, 0xb210, 0x860d, 0x0, 0x1);
        gbc.writeMem(0x9929, { 0x61 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xcb3a, gbc.sp());
        EXPECT(0x992a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x9929));
        // 61 03AA
        gbc.setState(0x827f, 0xb8fa, 0xc450, 0x77b3, 0x7c32, 0x3ca2, 0x0, 0x0);
        gbc.writeMem(0x827f, { 0x61 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xb8fa, gbc.sp());
        EXPECT(0x8280, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x827f));
        // 61 03AB
        gbc.setState(0x84c, 0xc8cd, 0xa420, 0x746c, 0xb864, 0x8d5f, 0x0, 0x0);
        gbc.writeMem(0x84c, { 0x61 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xc8cd, gbc.sp());
        EXPECT(0x84d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 03AC
        gbc.setState(0x5fb9, 0xc063, 0xde30, 0x9cbf, 0xb2eb, 0x39d4, 0x1, 0x1);
        gbc.writeMem(0x5fb9, { 0x61 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xc063, gbc.sp());
        EXPECT(0x5fba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 03AD
        gbc.setState(0xa8fb, 0x51e9, 0x5f0, 0x4522, 0x2621, 0xdfdd, 0x1, 0x0);
        gbc.writeMem(0xa8fb, { 0x61 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x51e9, gbc.sp());
        EXPECT(0xa8fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xa8fb));
        // 61 03AE
        gbc.setState(0xb2ac, 0xe046, 0xc870, 0xc24b, 0xe820, 0x9748, 0x0, 0x1);
        gbc.writeMem(0xb2ac, { 0x61 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xe046, gbc.sp());
        EXPECT(0xb2ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xb2ac));
        // 61 03AF
        gbc.setState(0x3d98, 0x4db4, 0xa00, 0x61ec, 0x68b7, 0xec0e, 0x0, 0x0);
        gbc.writeMem(0x3d98, { 0x61 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x4db4, gbc.sp());
        EXPECT(0x3d99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 03B0
        gbc.setState(0xb29c, 0xb19a, 0xcf00, 0x2d4f, 0x8ed7, 0x745, 0x0, 0x0);
        gbc.writeMem(0xb29c, { 0x61 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xb19a, gbc.sp());
        EXPECT(0xb29d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xb29c));
        // 61 03B1
        gbc.setState(0x5dce, 0x42b, 0xe620, 0x16dd, 0xd79d, 0x9fae, 0x1, 0x0);
        gbc.writeMem(0x5dce, { 0x61 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x42b, gbc.sp());
        EXPECT(0x5dcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 03B2
        gbc.setState(0x6759, 0xb501, 0x3ba0, 0x47ca, 0xdb19, 0xe159, 0x0, 0x0);
        gbc.writeMem(0x6759, { 0x61 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xb501, gbc.sp());
        EXPECT(0x675a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 03B3
        gbc.setState(0xbc2, 0xfbf1, 0x50f0, 0xe0a4, 0xa988, 0x7596, 0x0, 0x0);
        gbc.writeMem(0xbc2, { 0x61 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xfbf1, gbc.sp());
        EXPECT(0xbc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 03B4
        gbc.setState(0xc2a5, 0x3eef, 0xb3b0, 0x8e86, 0x3519, 0xa711, 0x1, 0x1);
        gbc.writeMem(0xc2a5, { 0x61 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x3eef, gbc.sp());
        EXPECT(0xc2a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xc2a5));
        // 61 03B6
        gbc.setState(0x1b98, 0xf7a1, 0x5440, 0xc090, 0x83be, 0x3277, 0x0, 0x0);
        gbc.writeMem(0x1b98, { 0x61 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xf7a1, gbc.sp());
        EXPECT(0x1b99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 03B7
        gbc.setState(0xca76, 0x248a, 0xa5e0, 0x7f2d, 0x5667, 0x6645, 0x1, 0x0);
        gbc.writeMem(0xca76, { 0x61 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x248a, gbc.sp());
        EXPECT(0xca77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xca76));
        // 61 03B8
        gbc.setState(0x804e, 0x7029, 0x8fd0, 0x4ba1, 0xedca, 0x9f62, 0x0, 0x0);
        gbc.writeMem(0x804e, { 0x61 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x7029, gbc.sp());
        EXPECT(0x804f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x804e));
        // 61 03B9
        gbc.setState(0x3de0, 0x1ea, 0xe0, 0x2434, 0x19fb, 0x5747, 0x1, 0x0);
        gbc.writeMem(0x3de0, { 0x61 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x1ea, gbc.sp());
        EXPECT(0x3de1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 03BA
        gbc.setState(0x5248, 0x3fb5, 0x1980, 0x6d1, 0x4bf0, 0x22d9, 0x1, 0x0);
        gbc.writeMem(0x5248, { 0x61 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x3fb5, gbc.sp());
        EXPECT(0x5249, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 03BB
        gbc.setState(0x1756, 0xe1b6, 0x3720, 0x5a17, 0x17eb, 0x8ebb, 0x1, 0x0);
        gbc.writeMem(0x1756, { 0x61 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xe1b6, gbc.sp());
        EXPECT(0x1757, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 03BC
        gbc.setState(0x947b, 0x51b1, 0x6660, 0xc353, 0xbd0b, 0xca30, 0x0, 0x1);
        gbc.writeMem(0x947b, { 0x61 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x51b1, gbc.sp());
        EXPECT(0x947c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x947b));
        // 61 03BD
        gbc.setState(0xc5d0, 0xec49, 0x6600, 0x27f1, 0x8881, 0x99f7, 0x1, 0x0);
        gbc.writeMem(0xc5d0, { 0x61 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xec49, gbc.sp());
        EXPECT(0xc5d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xc5d0));
        // 61 03BE
        gbc.setState(0xe8d3, 0x8600, 0xdac0, 0xd783, 0x8179, 0xc4c3, 0x0, 0x0);
        gbc.writeMem(0xe8d3, { 0x61 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x8600, gbc.sp());
        EXPECT(0xe8d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xe8d3));
        // 61 03BF
        gbc.setState(0x2ef5, 0x5379, 0x2ee0, 0x5dab, 0x4c8, 0xef97, 0x0, 0x1);
        gbc.writeMem(0x2ef5, { 0x61 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x5379, gbc.sp());
        EXPECT(0x2ef6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 03C0
        gbc.setState(0x577f, 0x695d, 0x3eb0, 0x720a, 0x9c13, 0xe5f1, 0x1, 0x0);
        gbc.writeMem(0x577f, { 0x61 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x695d, gbc.sp());
        EXPECT(0x5780, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 03C1
        gbc.setState(0xacfd, 0x177, 0xf350, 0x9bb, 0xcee4, 0x4921, 0x1, 0x1);
        gbc.writeMem(0xacfd, { 0x61 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x177, gbc.sp());
        EXPECT(0xacfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xacfd));
        // 61 03C2
        gbc.setState(0xde92, 0x63e2, 0x4870, 0xe7f5, 0x97a7, 0x6704, 0x0, 0x0);
        gbc.writeMem(0xde92, { 0x61 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x63e2, gbc.sp());
        EXPECT(0xde93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xde92));
        // 61 03C3
        gbc.setState(0x1523, 0x70a5, 0x190, 0x242c, 0x4901, 0xf4f8, 0x0, 0x1);
        gbc.writeMem(0x1523, { 0x61 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x70a5, gbc.sp());
        EXPECT(0x1524, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 03C4
        gbc.setState(0x8037, 0x6418, 0xc740, 0x7343, 0xf5cd, 0xbc8, 0x0, 0x0);
        gbc.writeMem(0x8037, { 0x61 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x6418, gbc.sp());
        EXPECT(0x8038, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x8037));
        // 61 03C5
        gbc.setState(0x5918, 0xa975, 0xf9a0, 0xdf9f, 0x9964, 0x1870, 0x0, 0x1);
        gbc.writeMem(0x5918, { 0x61 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xa975, gbc.sp());
        EXPECT(0x5919, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 03C6
        gbc.setState(0xda84, 0xb68c, 0xb880, 0x3945, 0x4af2, 0x773e, 0x0, 0x0);
        gbc.writeMem(0xda84, { 0x61 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xb68c, gbc.sp());
        EXPECT(0xda85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xda84));
        // 61 03C7
        gbc.setState(0xe091, 0xf369, 0xafb0, 0x8c0b, 0x13c1, 0xf0a8, 0x0, 0x0);
        gbc.writeMem(0xe091, { 0x61 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xf369, gbc.sp());
        EXPECT(0xe092, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xe091));
        // 61 03C8
        gbc.setState(0x5944, 0x1169, 0x4280, 0x8198, 0x7ea, 0xc711, 0x1, 0x1);
        gbc.writeMem(0x5944, { 0x61 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x1169, gbc.sp());
        EXPECT(0x5945, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 03C9
        gbc.setState(0x569a, 0x81dd, 0x8a40, 0x2b35, 0x3021, 0x8a28, 0x1, 0x1);
        gbc.writeMem(0x569a, { 0x61 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x81dd, gbc.sp());
        EXPECT(0x569b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 03CA
        gbc.setState(0x7e2b, 0x3ae4, 0x9b30, 0x6a5, 0xdff1, 0x3770, 0x0, 0x1);
        gbc.writeMem(0x7e2b, { 0x61 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x3ae4, gbc.sp());
        EXPECT(0x7e2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 03CB
        gbc.setState(0x924, 0xb06c, 0xf690, 0x750f, 0x70d3, 0x32bc, 0x1, 0x0);
        gbc.writeMem(0x924, { 0x61 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xb06c, gbc.sp());
        EXPECT(0x925, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 03CC
        gbc.setState(0x915f, 0x5885, 0x6470, 0x7443, 0xbaa, 0x2f23, 0x0, 0x1);
        gbc.writeMem(0x915f, { 0x61 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x5885, gbc.sp());
        EXPECT(0x9160, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x915f));
        // 61 03CD
        gbc.setState(0xb7cc, 0xa432, 0x5100, 0x2a2f, 0xb458, 0xbfd2, 0x0, 0x0);
        gbc.writeMem(0xb7cc, { 0x61 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xa432, gbc.sp());
        EXPECT(0xb7cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xb7cc));
        // 61 03CE
        gbc.setState(0x6704, 0x7f29, 0xd110, 0x7162, 0x3bfe, 0x350c, 0x1, 0x0);
        gbc.writeMem(0x6704, { 0x61 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x7f29, gbc.sp());
        EXPECT(0x6705, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 03CF
        gbc.setState(0x2580, 0x764, 0xab80, 0xc330, 0x3b72, 0xc204, 0x0, 0x1);
        gbc.writeMem(0x2580, { 0x61 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x764, gbc.sp());
        EXPECT(0x2581, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 03D0
        gbc.setState(0xb22a, 0x8df1, 0x63f0, 0xb438, 0xb26a, 0x4ecf, 0x1, 0x1);
        gbc.writeMem(0xb22a, { 0x61 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x8df1, gbc.sp());
        EXPECT(0xb22b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xb22a));
        // 61 03D1
        gbc.setState(0x4861, 0x745, 0x7dd0, 0x9e1a, 0xb424, 0x9cfb, 0x0, 0x1);
        gbc.writeMem(0x4861, { 0x61 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x745, gbc.sp());
        EXPECT(0x4862, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 03D3
        gbc.setState(0x8edb, 0x35f9, 0xdfa0, 0x4635, 0x1221, 0xc0f0, 0x0, 0x0);
        gbc.writeMem(0x8edb, { 0x61 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x35f9, gbc.sp());
        EXPECT(0x8edc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x8edb));
        // 61 03D4
        gbc.setState(0x7bab, 0xb8a2, 0xf180, 0x5070, 0x6c29, 0x99a5, 0x1, 0x1);
        gbc.writeMem(0x7bab, { 0x61 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xb8a2, gbc.sp());
        EXPECT(0x7bac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 03D5
        gbc.setState(0x11be, 0xf1bb, 0xad20, 0xace5, 0xa558, 0xfc23, 0x1, 0x0);
        gbc.writeMem(0x11be, { 0x61 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xf1bb, gbc.sp());
        EXPECT(0x11bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 03D6
        gbc.setState(0x1a26, 0x122e, 0x650, 0x2dd4, 0xd435, 0x5760, 0x1, 0x1);
        gbc.writeMem(0x1a26, { 0x61 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x122e, gbc.sp());
        EXPECT(0x1a27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 03D7
        gbc.setState(0xcdb3, 0x3758, 0x1000, 0x2d8e, 0xadb7, 0x256, 0x0, 0x1);
        gbc.writeMem(0xcdb3, { 0x61 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x3758, gbc.sp());
        EXPECT(0xcdb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xcdb3));
        // 61 03D8
        gbc.setState(0x4d05, 0x6ce, 0x780, 0x7f99, 0xc3c8, 0x385f, 0x1, 0x0);
        gbc.writeMem(0x4d05, { 0x61 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x6ce, gbc.sp());
        EXPECT(0x4d06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 03D9
        gbc.setState(0x85e, 0x2559, 0xc8e0, 0xe48c, 0x8283, 0x702, 0x1, 0x0);
        gbc.writeMem(0x85e, { 0x61 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x2559, gbc.sp());
        EXPECT(0x85f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 03DA
        gbc.setState(0x6d53, 0x9a28, 0x88a0, 0xe04c, 0x41e9, 0x6b40, 0x1, 0x0);
        gbc.writeMem(0x6d53, { 0x61 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x9a28, gbc.sp());
        EXPECT(0x6d54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 03DB
        gbc.setState(0x8ff6, 0xd075, 0xc880, 0xf0e9, 0xd639, 0xdacb, 0x1, 0x0);
        gbc.writeMem(0x8ff6, { 0x61 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xd075, gbc.sp());
        EXPECT(0x8ff7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x8ff6));
        // 61 03DC
        gbc.setState(0x29f7, 0x739, 0xe980, 0x54f7, 0xc4ef, 0xe895, 0x0, 0x0);
        gbc.writeMem(0x29f7, { 0x61 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x739, gbc.sp());
        EXPECT(0x29f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 03DD
        gbc.setState(0x7f35, 0x519a, 0x9f20, 0x15ef, 0x6d8a, 0x6d2a, 0x0, 0x0);
        gbc.writeMem(0x7f35, { 0x61 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x519a, gbc.sp());
        EXPECT(0x7f36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 03DE
        gbc.setState(0x498c, 0x1ac8, 0x70d0, 0x6b4b, 0xb7bb, 0x9b3, 0x1, 0x1);
        gbc.writeMem(0x498c, { 0x61 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x1ac8, gbc.sp());
        EXPECT(0x498d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 03DF
        gbc.setState(0x33d7, 0xfe84, 0xc520, 0x7521, 0xe46f, 0x9e20, 0x0, 0x0);
        gbc.writeMem(0x33d7, { 0x61 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xfe84, gbc.sp());
        EXPECT(0x33d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 61 03E0
        gbc.setState(0x8b74, 0x3afc, 0x56a0, 0x72d5, 0x3673, 0xfc3, 0x0, 0x1);
        gbc.writeMem(0x8b74, { 0x61 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x3afc, gbc.sp());
        EXPECT(0x8b75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x8b74));
        // 61 03E1
        gbc.setState(0xd8a4, 0x3ce9, 0xc300, 0xf147, 0x62aa, 0x1803, 0x1, 0x0);
        gbc.writeMem(0xd8a4, { 0x61 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x3ce9, gbc.sp());
        EXPECT(0xd8a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xd8a4));
        // 61 03E2
        gbc.setState(0x55de, 0xa820, 0x8c30, 0x82e4, 0x254a, 0xda15, 0x0, 0x0);
        gbc.writeMem(0x55de, { 0x61 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xa820, gbc.sp());
        EXPECT(0x55df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 03E3
        gbc.setState(0x9a13, 0xcfdb, 0xf5a0, 0xccf9, 0xa9af, 0x3a02, 0x0, 0x0);
        gbc.writeMem(0x9a13, { 0x61 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xcfdb, gbc.sp());
        EXPECT(0x9a14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x9a13));
        // 61 03E4
        gbc.setState(0x5bb7, 0x1a94, 0x9750, 0xcba, 0xf28f, 0x81c2, 0x1, 0x1);
        gbc.writeMem(0x5bb7, { 0x61 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x1a94, gbc.sp());
        EXPECT(0x5bb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 03E5
        gbc.setState(0x9c86, 0xec9d, 0x7f60, 0xa9fe, 0x16e8, 0xe4c, 0x0, 0x1);
        gbc.writeMem(0x9c86, { 0x61 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xec9d, gbc.sp());
        EXPECT(0x9c87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x9c86));
        // 61 03E6
        gbc.setState(0x5af7, 0x79aa, 0x18f0, 0xc5c6, 0x1933, 0x4bfe, 0x0, 0x1);
        gbc.writeMem(0x5af7, { 0x61 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x79aa, gbc.sp());
        EXPECT(0x5af8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 61 03E7
        gbc.setState(0xe40e, 0xf7e9, 0x8d20, 0xed, 0x196f, 0xa28e, 0x1, 0x0);
        gbc.writeMem(0xe40e, { 0x61 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xf7e9, gbc.sp());
        EXPECT(0xe40f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xe40e));
    }
