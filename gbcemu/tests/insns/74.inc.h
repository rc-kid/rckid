    TEST(gbcemu, opcode_74) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 74 0001
        gbc.setState(0xc3c2, 0x36fe, 0x4ff0, 0x56df, 0x4adc, 0x88d1, 0x0, 0x0);
        gbc.writeMem(0x88d1, { 0x0 });
        gbc.writeMem(0xc3c2, { 0x74 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x36fe, gbc.sp());
        EXPECT(0xc3c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x88d1));
        EXPECT(0x74, gbc.readMem(0xc3c2));
        // 74 0002
        gbc.setState(0xb08f, 0x270, 0xa990, 0x6244, 0xfbb, 0xe570, 0x0, 0x0);
        gbc.writeMem(0xb08f, { 0x74 });
        gbc.writeMem(0xe570, { 0x0 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x270, gbc.sp());
        EXPECT(0xb090, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xb08f));
        EXPECT(0xe5, gbc.readMem(0xe570));
        // 74 0003
        gbc.setState(0xca7d, 0x24da, 0xea80, 0xe83e, 0xe983, 0x96d0, 0x0, 0x0);
        gbc.writeMem(0x96d0, { 0x0 });
        gbc.writeMem(0xca7d, { 0x74 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x24da, gbc.sp());
        EXPECT(0xca7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0x96d0));
        EXPECT(0x74, gbc.readMem(0xca7d));
        // 74 0005
        gbc.setState(0xcf30, 0x3a16, 0xaf0, 0xbb0b, 0xab8a, 0x93eb, 0x1, 0x1);
        gbc.writeMem(0x93eb, { 0x0 });
        gbc.writeMem(0xcf30, { 0x74 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x3a16, gbc.sp());
        EXPECT(0xcf31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x93eb));
        EXPECT(0x74, gbc.readMem(0xcf30));
        // 74 0006
        gbc.setState(0xcd3a, 0xc2d4, 0xf0a0, 0x97b1, 0x274d, 0xc2df, 0x1, 0x1);
        gbc.writeMem(0xc2df, { 0x0 });
        gbc.writeMem(0xcd3a, { 0x74 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xc2d4, gbc.sp());
        EXPECT(0xcd3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xc2df));
        EXPECT(0x74, gbc.readMem(0xcd3a));
        // 74 0007
        gbc.setState(0x99b9, 0x33d3, 0x3330, 0x1178, 0x2992, 0x8b86, 0x0, 0x1);
        gbc.writeMem(0x8b86, { 0x0 });
        gbc.writeMem(0x99b9, { 0x74 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x33d3, gbc.sp());
        EXPECT(0x99ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0x8b86));
        EXPECT(0x74, gbc.readMem(0x99b9));
        // 74 000A
        gbc.setState(0x5d35, 0x1fe7, 0x5b0, 0xacf4, 0x6a77, 0xae96, 0x0, 0x1);
        gbc.writeMem(0x5d35, { 0x74 });
        gbc.writeMem(0xae96, { 0x0 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x1fe7, gbc.sp());
        EXPECT(0x5d36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xae, gbc.readMem(0xae96));
        // 74 0012
        gbc.setState(0xc6af, 0x56d8, 0x2920, 0x44ed, 0x4b98, 0xef24, 0x1, 0x0);
        gbc.writeMem(0xc6af, { 0x74 });
        gbc.writeMem(0xef24, { 0x0 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x56d8, gbc.sp());
        EXPECT(0xc6b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xc6af));
        EXPECT(0xef, gbc.readMem(0xef24));
        // 74 0013
        gbc.setState(0xc9b8, 0x64c1, 0x9430, 0xe41a, 0x9acf, 0xff16, 0x1, 0x1);
        gbc.writeMem(0xc9b8, { 0x74 });
        gbc.writeMem(0xff16, { 0x0 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x64c1, gbc.sp());
        EXPECT(0xc9b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xc9b8));
        EXPECT(0xff, gbc.readMem(0xff16));
        // 74 0015
        gbc.setState(0xe430, 0x5715, 0x66f0, 0xa4a7, 0x16d0, 0xdf68, 0x1, 0x1);
        gbc.writeMem(0xdf68, { 0x0 });
        gbc.writeMem(0xe430, { 0x74 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x5715, gbc.sp());
        EXPECT(0xe431, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0xdf68));
        EXPECT(0x74, gbc.readMem(0xe430));
        // 74 001B
        gbc.setState(0xebff, 0x1fc, 0xeb20, 0x9b0f, 0xf950, 0x9e23, 0x1, 0x1);
        gbc.writeMem(0x9e23, { 0x0 });
        gbc.writeMem(0xebff, { 0x74 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x1fc, gbc.sp());
        EXPECT(0xec00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x9e23));
        EXPECT(0x74, gbc.readMem(0xebff));
        // 74 001C
        gbc.setState(0xb5f3, 0xf3c3, 0xb750, 0xd179, 0x365e, 0x9b7d, 0x0, 0x0);
        gbc.writeMem(0x9b7d, { 0x0 });
        gbc.writeMem(0xb5f3, { 0x74 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xf3c3, gbc.sp());
        EXPECT(0xb5f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x9b7d));
        EXPECT(0x74, gbc.readMem(0xb5f3));
        // 74 001D
        gbc.setState(0x78e, 0xb509, 0x3b30, 0x3f00, 0x5397, 0xf85e, 0x1, 0x1);
        gbc.writeMem(0x78e, { 0x74 });
        gbc.writeMem(0xf85e, { 0x0 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xb509, gbc.sp());
        EXPECT(0x78f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xf85e));
        // 74 001F
        gbc.setState(0xc2d8, 0x918f, 0x7950, 0xf1b1, 0x5a8f, 0xb302, 0x0, 0x1);
        gbc.writeMem(0xb302, { 0x0 });
        gbc.writeMem(0xc2d8, { 0x74 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x918f, gbc.sp());
        EXPECT(0xc2d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xb302));
        EXPECT(0x74, gbc.readMem(0xc2d8));
        // 74 0020
        gbc.setState(0x56e6, 0x3853, 0xf0f0, 0xbb5f, 0x1473, 0xe14d, 0x0, 0x0);
        gbc.writeMem(0x56e6, { 0x74 });
        gbc.writeMem(0xe14d, { 0x0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x3853, gbc.sp());
        EXPECT(0x56e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xe14d));
        // 74 0022
        gbc.setState(0xbefe, 0x5408, 0xdbf0, 0x6750, 0x489e, 0xdf, 0x1, 0x0);
        gbc.writeMem(0xdf, { 0x0 });
        gbc.writeMem(0xbefe, { 0x74 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x5408, gbc.sp());
        EXPECT(0xbeff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xbefe));
        // 74 0023
        gbc.setState(0x8cf2, 0x3a35, 0x6720, 0xf295, 0xe6fc, 0xc87b, 0x0, 0x0);
        gbc.writeMem(0x8cf2, { 0x74 });
        gbc.writeMem(0xc87b, { 0x0 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x3a35, gbc.sp());
        EXPECT(0x8cf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0x8cf2));
        EXPECT(0xc8, gbc.readMem(0xc87b));
        // 74 0024
        gbc.setState(0x2394, 0x7040, 0x9000, 0x6d77, 0x3c99, 0xaa78, 0x0, 0x1);
        gbc.writeMem(0x2394, { 0x74 });
        gbc.writeMem(0xaa78, { 0x0 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x7040, gbc.sp());
        EXPECT(0x2395, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xaa78));
        // 74 0028
        gbc.setState(0xb560, 0x6c27, 0xbf40, 0x8232, 0xf450, 0xbd3b, 0x1, 0x0);
        gbc.writeMem(0xb560, { 0x74 });
        gbc.writeMem(0xbd3b, { 0x0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x6c27, gbc.sp());
        EXPECT(0xb561, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xb560));
        EXPECT(0xbd, gbc.readMem(0xbd3b));
        // 74 002A
        gbc.setState(0xb939, 0x23a3, 0xdc60, 0x1074, 0x307f, 0xec5a, 0x0, 0x0);
        gbc.writeMem(0xb939, { 0x74 });
        gbc.writeMem(0xec5a, { 0x0 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x23a3, gbc.sp());
        EXPECT(0xb93a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xb939));
        EXPECT(0xec, gbc.readMem(0xec5a));
        // 74 002B
        gbc.setState(0xbb42, 0x8216, 0x2fe0, 0x6078, 0xefe0, 0xea8c, 0x0, 0x1);
        gbc.writeMem(0xbb42, { 0x74 });
        gbc.writeMem(0xea8c, { 0x0 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x8216, gbc.sp());
        EXPECT(0xbb43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xbb42));
        EXPECT(0xea, gbc.readMem(0xea8c));
        // 74 002E
        gbc.setState(0xdfe6, 0x4488, 0x51e0, 0x7712, 0xabc0, 0x8942, 0x1, 0x1);
        gbc.writeMem(0x8942, { 0x0 });
        gbc.writeMem(0xdfe6, { 0x74 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x4488, gbc.sp());
        EXPECT(0xdfe7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x8942));
        EXPECT(0x74, gbc.readMem(0xdfe6));
        // 74 0031
        gbc.setState(0x13a7, 0xae22, 0x15a0, 0x4902, 0x74c4, 0xff67, 0x1, 0x0);
        gbc.writeMem(0x13a7, { 0x74 });
        gbc.writeMem(0xff67, { 0x0 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xae22, gbc.sp());
        EXPECT(0x13a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xff67));
        // 74 0032
        gbc.setState(0x2c62, 0x35b3, 0xf7a0, 0x96b3, 0x8630, 0x85b6, 0x0, 0x0);
        gbc.writeMem(0x2c62, { 0x74 });
        gbc.writeMem(0x85b6, { 0x0 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x35b3, gbc.sp());
        EXPECT(0x2c63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x85b6));
        // 74 0033
        gbc.setState(0x992a, 0x1956, 0x2330, 0x38ab, 0x5abf, 0x9ee3, 0x0, 0x0);
        gbc.writeMem(0x992a, { 0x74 });
        gbc.writeMem(0x9ee3, { 0x0 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x1956, gbc.sp());
        EXPECT(0x992b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0x992a));
        EXPECT(0x9e, gbc.readMem(0x9ee3));
        // 74 0034
        gbc.setState(0x2ef5, 0xd836, 0x44f0, 0xdcb2, 0x3840, 0x8479, 0x1, 0x0);
        gbc.writeMem(0x2ef5, { 0x74 });
        gbc.writeMem(0x8479, { 0x0 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xd836, gbc.sp());
        EXPECT(0x2ef6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0x8479));
        // 74 0035
        gbc.setState(0xbdf6, 0x6ea8, 0x1680, 0x6ce4, 0x2b0b, 0xd760, 0x0, 0x0);
        gbc.writeMem(0xbdf6, { 0x74 });
        gbc.writeMem(0xd760, { 0x0 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x6ea8, gbc.sp());
        EXPECT(0xbdf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xbdf6));
        EXPECT(0xd7, gbc.readMem(0xd760));
        // 74 0036
        gbc.setState(0x6e14, 0x14dd, 0x8100, 0x355c, 0x6737, 0xcdde, 0x1, 0x0);
        gbc.writeMem(0x6e14, { 0x74 });
        gbc.writeMem(0xcdde, { 0x0 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x14dd, gbc.sp());
        EXPECT(0x6e15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0xcdde));
        // 74 0037
        gbc.setState(0xedeb, 0xb525, 0xe190, 0x1373, 0x9ee9, 0x9a56, 0x0, 0x0);
        gbc.writeMem(0x9a56, { 0x0 });
        gbc.writeMem(0xedeb, { 0x74 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xb525, gbc.sp());
        EXPECT(0xedec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x9a56));
        EXPECT(0x74, gbc.readMem(0xedeb));
        // 74 0038
        gbc.setState(0x9b7f, 0x39c9, 0x500, 0xbef4, 0x18b0, 0xe8a6, 0x1, 0x0);
        gbc.writeMem(0x9b7f, { 0x74 });
        gbc.writeMem(0xe8a6, { 0x0 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x39c9, gbc.sp());
        EXPECT(0x9b80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0x9b7f));
        EXPECT(0xe8, gbc.readMem(0xe8a6));
        // 74 003A
        gbc.setState(0x631d, 0x91e9, 0x2ed0, 0x182f, 0xe645, 0xe2c8, 0x0, 0x1);
        gbc.writeMem(0x631d, { 0x74 });
        gbc.writeMem(0xe2c8, { 0x0 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x91e9, gbc.sp());
        EXPECT(0x631e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xe2c8));
        // 74 003D
        gbc.setState(0x7e08, 0x4376, 0xba10, 0xf626, 0x373f, 0xeb14, 0x0, 0x0);
        gbc.writeMem(0x7e08, { 0x74 });
        gbc.writeMem(0xeb14, { 0x0 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x4376, gbc.sp());
        EXPECT(0x7e09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xeb, gbc.readMem(0xeb14));
        // 74 003E
        gbc.setState(0x2fb5, 0x10f4, 0x6500, 0x49b7, 0xcf0c, 0xb5db, 0x0, 0x0);
        gbc.writeMem(0x2fb5, { 0x74 });
        gbc.writeMem(0xb5db, { 0x0 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x10f4, gbc.sp());
        EXPECT(0x2fb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xb5db));
        // 74 0041
        gbc.setState(0x1dfd, 0x49bf, 0x74c0, 0xac03, 0xc210, 0xbc71, 0x1, 0x1);
        gbc.writeMem(0x1dfd, { 0x74 });
        gbc.writeMem(0xbc71, { 0x0 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x49bf, gbc.sp());
        EXPECT(0x1dfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xbc71));
        // 74 0042
        gbc.setState(0x13df, 0x3d35, 0xc3c0, 0x181, 0x571b, 0xc240, 0x0, 0x0);
        gbc.writeMem(0x13df, { 0x74 });
        gbc.writeMem(0xc240, { 0x0 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x3d35, gbc.sp());
        EXPECT(0x13e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xc240));
        // 74 0044
        gbc.setState(0x9426, 0x27dd, 0x2e90, 0xa86e, 0xb047, 0xf334, 0x0, 0x0);
        gbc.writeMem(0x9426, { 0x74 });
        gbc.writeMem(0xf334, { 0x0 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x27dd, gbc.sp());
        EXPECT(0x9427, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0x9426));
        EXPECT(0xf3, gbc.readMem(0xf334));
        // 74 0046
        gbc.setState(0x9d82, 0x164b, 0xc980, 0x1839, 0xe3db, 0xb37a, 0x1, 0x1);
        gbc.writeMem(0x9d82, { 0x74 });
        gbc.writeMem(0xb37a, { 0x0 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x164b, gbc.sp());
        EXPECT(0x9d83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0x9d82));
        EXPECT(0xb3, gbc.readMem(0xb37a));
        // 74 004B
        gbc.setState(0x8230, 0xa2c5, 0x5b30, 0xece4, 0xa393, 0x93ae, 0x1, 0x1);
        gbc.writeMem(0x8230, { 0x74 });
        gbc.writeMem(0x93ae, { 0x0 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xa2c5, gbc.sp());
        EXPECT(0x8231, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0x8230));
        EXPECT(0x93, gbc.readMem(0x93ae));
        // 74 004C
        gbc.setState(0x14b7, 0xc7e3, 0xec80, 0xc7b8, 0xfe9f, 0x8e37, 0x0, 0x1);
        gbc.writeMem(0x14b7, { 0x74 });
        gbc.writeMem(0x8e37, { 0x0 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xc7e3, gbc.sp());
        EXPECT(0x14b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0x8e37));
        // 74 004E
        gbc.setState(0x405c, 0x9151, 0x73f0, 0x158e, 0xe988, 0xecb6, 0x1, 0x0);
        gbc.writeMem(0x405c, { 0x74 });
        gbc.writeMem(0xecb6, { 0x0 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x9151, gbc.sp());
        EXPECT(0x405d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0xecb6));
        // 74 004F
        gbc.setState(0x5613, 0xa35d, 0x19f0, 0x97cd, 0x7f11, 0xc43c, 0x1, 0x1);
        gbc.writeMem(0x5613, { 0x74 });
        gbc.writeMem(0xc43c, { 0x0 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xa35d, gbc.sp());
        EXPECT(0x5614, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc4, gbc.readMem(0xc43c));
        // 74 0050
        gbc.setState(0x5ebc, 0x1c41, 0xe050, 0xb250, 0x3d8d, 0xb3d5, 0x0, 0x0);
        gbc.writeMem(0x5ebc, { 0x74 });
        gbc.writeMem(0xb3d5, { 0x0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x1c41, gbc.sp());
        EXPECT(0x5ebd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xb3d5));
        // 74 0051
        gbc.setState(0x519b, 0x5164, 0xd290, 0xdb36, 0x703a, 0xbfc6, 0x1, 0x0);
        gbc.writeMem(0x519b, { 0x74 });
        gbc.writeMem(0xbfc6, { 0x0 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x5164, gbc.sp());
        EXPECT(0x519c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xbfc6));
        // 74 0052
        gbc.setState(0x33ac, 0x6861, 0xa490, 0xdeee, 0x482, 0xb3d3, 0x1, 0x1);
        gbc.writeMem(0x33ac, { 0x74 });
        gbc.writeMem(0xb3d3, { 0x0 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x6861, gbc.sp());
        EXPECT(0x33ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xb3d3));
        // 74 0055
        gbc.setState(0xe9e4, 0x9754, 0x9060, 0xc614, 0x4d0e, 0xc2f4, 0x0, 0x1);
        gbc.writeMem(0xc2f4, { 0x0 });
        gbc.writeMem(0xe9e4, { 0x74 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x9754, gbc.sp());
        EXPECT(0xe9e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xc2f4));
        EXPECT(0x74, gbc.readMem(0xe9e4));
        // 74 0058
        gbc.setState(0x15f2, 0xcaa, 0x78d0, 0xde7e, 0x654d, 0x9ecc, 0x1, 0x0);
        gbc.writeMem(0x15f2, { 0x74 });
        gbc.writeMem(0x9ecc, { 0x0 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xcaa, gbc.sp());
        EXPECT(0x15f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x9ecc));
        // 74 0059
        gbc.setState(0xa8af, 0x6e08, 0xcfe0, 0xcb62, 0x6841, 0xf972, 0x1, 0x1);
        gbc.writeMem(0xa8af, { 0x74 });
        gbc.writeMem(0xf972, { 0x0 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x6e08, gbc.sp());
        EXPECT(0xa8b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xa8af));
        EXPECT(0xf9, gbc.readMem(0xf972));
        // 74 005A
        gbc.setState(0x1c33, 0xf85e, 0xb400, 0x6f28, 0x88f6, 0xcabe, 0x1, 0x0);
        gbc.writeMem(0x1c33, { 0x74 });
        gbc.writeMem(0xcabe, { 0x0 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xf85e, gbc.sp());
        EXPECT(0x1c34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0xcabe));
        // 74 005D
        gbc.setState(0x421d, 0x3a28, 0x9bf0, 0xfd8d, 0x78c8, 0xfc6e, 0x1, 0x0);
        gbc.writeMem(0x421d, { 0x74 });
        gbc.writeMem(0xfc6e, { 0x0 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x3a28, gbc.sp());
        EXPECT(0x421e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfc, gbc.readMem(0xfc6e));
        // 74 005E
        gbc.setState(0xe806, 0x546d, 0x8070, 0xbbaa, 0xa1d9, 0x97e2, 0x0, 0x1);
        gbc.writeMem(0x97e2, { 0x0 });
        gbc.writeMem(0xe806, { 0x74 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x546d, gbc.sp());
        EXPECT(0xe807, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x97e2));
        EXPECT(0x74, gbc.readMem(0xe806));
        // 74 0060
        gbc.setState(0x8cb4, 0x7079, 0xe720, 0x9172, 0x882a, 0xdcb6, 0x1, 0x1);
        gbc.writeMem(0x8cb4, { 0x74 });
        gbc.writeMem(0xdcb6, { 0x0 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x7079, gbc.sp());
        EXPECT(0x8cb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0x8cb4));
        EXPECT(0xdc, gbc.readMem(0xdcb6));
        // 74 0061
        gbc.setState(0x6c13, 0x8ce0, 0xdf10, 0x847c, 0x6993, 0x988a, 0x1, 0x0);
        gbc.writeMem(0x6c13, { 0x74 });
        gbc.writeMem(0x988a, { 0x0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x8ce0, gbc.sp());
        EXPECT(0x6c14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x988a));
        // 74 0063
        gbc.setState(0x9840, 0xeb76, 0x5a0, 0x6706, 0x17ce, 0xa122, 0x0, 0x1);
        gbc.writeMem(0x9840, { 0x74 });
        gbc.writeMem(0xa122, { 0x0 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xeb76, gbc.sp());
        EXPECT(0x9841, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0x9840));
        EXPECT(0xa1, gbc.readMem(0xa122));
        // 74 0067
        gbc.setState(0xa559, 0xe551, 0xe780, 0x5daf, 0x8868, 0xe716, 0x0, 0x1);
        gbc.writeMem(0xa559, { 0x74 });
        gbc.writeMem(0xe716, { 0x0 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xe551, gbc.sp());
        EXPECT(0xa55a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xa559));
        EXPECT(0xe7, gbc.readMem(0xe716));
        // 74 0069
        gbc.setState(0x9e08, 0x981e, 0x5e30, 0xc8b0, 0xaa6d, 0xae46, 0x0, 0x0);
        gbc.writeMem(0x9e08, { 0x74 });
        gbc.writeMem(0xae46, { 0x0 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x981e, gbc.sp());
        EXPECT(0x9e09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0x9e08));
        EXPECT(0xae, gbc.readMem(0xae46));
        // 74 006B
        gbc.setState(0x6fc3, 0xb56b, 0x80e0, 0x374f, 0x2718, 0x9e11, 0x0, 0x0);
        gbc.writeMem(0x6fc3, { 0x74 });
        gbc.writeMem(0x9e11, { 0x0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xb56b, gbc.sp());
        EXPECT(0x6fc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x9e11));
        // 74 006E
        gbc.setState(0xab3a, 0x9f11, 0xee70, 0xd820, 0x2129, 0xd42d, 0x1, 0x1);
        gbc.writeMem(0xab3a, { 0x74 });
        gbc.writeMem(0xd42d, { 0x0 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x9f11, gbc.sp());
        EXPECT(0xab3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xab3a));
        EXPECT(0xd4, gbc.readMem(0xd42d));
        // 74 0073
        gbc.setState(0xb358, 0x5979, 0x32c0, 0x7351, 0xfd45, 0xb701, 0x0, 0x1);
        gbc.writeMem(0xb358, { 0x74 });
        gbc.writeMem(0xb701, { 0x0 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x5979, gbc.sp());
        EXPECT(0xb359, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xb358));
        EXPECT(0xb7, gbc.readMem(0xb701));
        // 74 0074
        gbc.setState(0xcd0, 0x2677, 0xfc90, 0x187e, 0x39c, 0xb1b9, 0x0, 0x1);
        gbc.writeMem(0xcd0, { 0x74 });
        gbc.writeMem(0xb1b9, { 0x0 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x2677, gbc.sp());
        EXPECT(0xcd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb1, gbc.readMem(0xb1b9));
        // 74 0076
        gbc.setState(0x791a, 0x92aa, 0xefe0, 0x4cf9, 0x2ef9, 0xa306, 0x1, 0x1);
        gbc.writeMem(0x791a, { 0x74 });
        gbc.writeMem(0xa306, { 0x0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x92aa, gbc.sp());
        EXPECT(0x791b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xa306));
        // 74 0079
        gbc.setState(0xe42a, 0xd5b1, 0x37b0, 0x363d, 0x2169, 0x86f8, 0x0, 0x0);
        gbc.writeMem(0x86f8, { 0x0 });
        gbc.writeMem(0xe42a, { 0x74 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xd5b1, gbc.sp());
        EXPECT(0xe42b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x86f8));
        EXPECT(0x74, gbc.readMem(0xe42a));
        // 74 007A
        gbc.setState(0x8e37, 0x71f1, 0x62a0, 0x4cd6, 0xd7e9, 0x8b4d, 0x1, 0x1);
        gbc.writeMem(0x8b4d, { 0x0 });
        gbc.writeMem(0x8e37, { 0x74 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x71f1, gbc.sp());
        EXPECT(0x8e38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0x8b4d));
        EXPECT(0x74, gbc.readMem(0x8e37));
        // 74 007C
        gbc.setState(0x293f, 0xad05, 0xc20, 0xb3d6, 0x88b5, 0xbc52, 0x0, 0x0);
        gbc.writeMem(0x293f, { 0x74 });
        gbc.writeMem(0xbc52, { 0x0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xad05, gbc.sp());
        EXPECT(0x2940, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xbc52));
        // 74 007D
        gbc.setState(0xe0f2, 0x1d57, 0x14c0, 0x4edc, 0x9a5e, 0x8686, 0x1, 0x1);
        gbc.writeMem(0x8686, { 0x0 });
        gbc.writeMem(0xe0f2, { 0x74 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x1d57, gbc.sp());
        EXPECT(0xe0f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x8686));
        EXPECT(0x74, gbc.readMem(0xe0f2));
        // 74 007E
        gbc.setState(0xdd01, 0xd560, 0x67e0, 0xb903, 0x6b3, 0x97cf, 0x0, 0x1);
        gbc.writeMem(0x97cf, { 0x0 });
        gbc.writeMem(0xdd01, { 0x74 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xd560, gbc.sp());
        EXPECT(0xdd02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x97cf));
        EXPECT(0x74, gbc.readMem(0xdd01));
        // 74 0082
        gbc.setState(0xebb9, 0xd46d, 0x4ff0, 0x88b, 0x3d54, 0xad30, 0x0, 0x1);
        gbc.writeMem(0xad30, { 0x0 });
        gbc.writeMem(0xebb9, { 0x74 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xd46d, gbc.sp());
        EXPECT(0xebba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0xad30));
        EXPECT(0x74, gbc.readMem(0xebb9));
        // 74 0085
        gbc.setState(0x24eb, 0x7b3a, 0xc440, 0xc0f4, 0xd571, 0xecbc, 0x0, 0x1);
        gbc.writeMem(0x24eb, { 0x74 });
        gbc.writeMem(0xecbc, { 0x0 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x7b3a, gbc.sp());
        EXPECT(0x24ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0xecbc));
        // 74 0086
        gbc.setState(0x6154, 0xa471, 0x4c60, 0x394c, 0x592, 0xd758, 0x1, 0x1);
        gbc.writeMem(0x6154, { 0x74 });
        gbc.writeMem(0xd758, { 0x0 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xa471, gbc.sp());
        EXPECT(0x6155, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0xd758));
        // 74 008C
        gbc.setState(0x9acb, 0xc17a, 0xf2b0, 0x585b, 0x9061, 0x900b, 0x0, 0x1);
        gbc.writeMem(0x900b, { 0x0 });
        gbc.writeMem(0x9acb, { 0x74 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xc17a, gbc.sp());
        EXPECT(0x9acc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0x900b));
        EXPECT(0x74, gbc.readMem(0x9acb));
        // 74 008D
        gbc.setState(0xaadc, 0x9aff, 0x6ca0, 0xbaac, 0xac97, 0xfced, 0x0, 0x0);
        gbc.writeMem(0xaadc, { 0x74 });
        gbc.writeMem(0xfced, { 0x0 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x9aff, gbc.sp());
        EXPECT(0xaadd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xaadc));
        EXPECT(0xfc, gbc.readMem(0xfced));
        // 74 0093
        gbc.setState(0xdfd1, 0x8f19, 0x4ff0, 0xfd43, 0x5fb5, 0xf4e0, 0x1, 0x0);
        gbc.writeMem(0xdfd1, { 0x74 });
        gbc.writeMem(0xf4e0, { 0x0 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x8f19, gbc.sp());
        EXPECT(0xdfd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xdfd1));
        EXPECT(0xf4, gbc.readMem(0xf4e0));
        // 74 009C
        gbc.setState(0x8fe1, 0x6b43, 0x8760, 0x5a87, 0x93d8, 0x8116, 0x1, 0x1);
        gbc.writeMem(0x8116, { 0x0 });
        gbc.writeMem(0x8fe1, { 0x74 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x6b43, gbc.sp());
        EXPECT(0x8fe2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x8116));
        EXPECT(0x74, gbc.readMem(0x8fe1));
        // 74 009D
        gbc.setState(0x4c2e, 0x9556, 0xa260, 0xc838, 0x55b0, 0xb592, 0x0, 0x1);
        gbc.writeMem(0x4c2e, { 0x74 });
        gbc.writeMem(0xb592, { 0x0 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x9556, gbc.sp());
        EXPECT(0x4c2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xb592));
        // 74 009E
        gbc.setState(0xb028, 0xb7b1, 0x3b40, 0x3ee3, 0x589, 0xa377, 0x1, 0x0);
        gbc.writeMem(0xa377, { 0x0 });
        gbc.writeMem(0xb028, { 0x74 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xb7b1, gbc.sp());
        EXPECT(0xb029, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xa377));
        EXPECT(0x74, gbc.readMem(0xb028));
        // 74 00A0
        gbc.setState(0x13d7, 0xda79, 0xb3f0, 0xcea1, 0x9b8d, 0xac83, 0x1, 0x1);
        gbc.writeMem(0x13d7, { 0x74 });
        gbc.writeMem(0xac83, { 0x0 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xda79, gbc.sp());
        EXPECT(0x13d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xac83));
        // 74 00A3
        gbc.setState(0x96f6, 0x6fed, 0xec0, 0x5fe, 0xa6c5, 0xae5e, 0x0, 0x1);
        gbc.writeMem(0x96f6, { 0x74 });
        gbc.writeMem(0xae5e, { 0x0 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x6fed, gbc.sp());
        EXPECT(0x96f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0x96f6));
        EXPECT(0xae, gbc.readMem(0xae5e));
        // 74 00A8
        gbc.setState(0x76c6, 0xc40b, 0x97d0, 0xffd5, 0x8b6, 0xd760, 0x0, 0x0);
        gbc.writeMem(0x76c6, { 0x74 });
        gbc.writeMem(0xd760, { 0x0 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xc40b, gbc.sp());
        EXPECT(0x76c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0xd760));
        // 74 00A9
        gbc.setState(0x5395, 0x492b, 0x1570, 0x8a43, 0x5bb2, 0xcba9, 0x0, 0x1);
        gbc.writeMem(0x5395, { 0x74 });
        gbc.writeMem(0xcba9, { 0x0 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x492b, gbc.sp());
        EXPECT(0x5396, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcba9));
        // 74 00AA
        gbc.setState(0xad44, 0x1285, 0x90c0, 0xca74, 0xe009, 0x8ddc, 0x0, 0x1);
        gbc.writeMem(0x8ddc, { 0x0 });
        gbc.writeMem(0xad44, { 0x74 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x1285, gbc.sp());
        EXPECT(0xad45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x8ddc));
        EXPECT(0x74, gbc.readMem(0xad44));
        // 74 00AB
        gbc.setState(0x38fd, 0xe0e0, 0xa900, 0x1e09, 0x70e3, 0xba53, 0x1, 0x0);
        gbc.writeMem(0x38fd, { 0x74 });
        gbc.writeMem(0xba53, { 0x0 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xe0e0, gbc.sp());
        EXPECT(0x38fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0xba53));
        // 74 00AE
        gbc.setState(0x5534, 0x5c2a, 0x7350, 0xd892, 0x790d, 0xb3b9, 0x1, 0x1);
        gbc.writeMem(0x5534, { 0x74 });
        gbc.writeMem(0xb3b9, { 0x0 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x5c2a, gbc.sp());
        EXPECT(0x5535, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xb3b9));
        // 74 00B0
        gbc.setState(0xe7bf, 0xc88, 0xc20, 0x8056, 0x54e3, 0xa02e, 0x1, 0x0);
        gbc.writeMem(0xa02e, { 0x0 });
        gbc.writeMem(0xe7bf, { 0x74 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xc88, gbc.sp());
        EXPECT(0xe7c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xa02e));
        EXPECT(0x74, gbc.readMem(0xe7bf));
        // 74 00B3
        gbc.setState(0x4a65, 0x23c, 0xaba0, 0xd76b, 0xf685, 0xce42, 0x1, 0x1);
        gbc.writeMem(0x4a65, { 0x74 });
        gbc.writeMem(0xce42, { 0x0 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x23c, gbc.sp());
        EXPECT(0x4a66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0xce42));
        // 74 00B6
        gbc.setState(0x5993, 0xcc4e, 0xa480, 0x5c2c, 0x9636, 0x9fe3, 0x1, 0x1);
        gbc.writeMem(0x5993, { 0x74 });
        gbc.writeMem(0x9fe3, { 0x0 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xcc4e, gbc.sp());
        EXPECT(0x5994, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x9fe3));
        // 74 00B7
        gbc.setState(0x611d, 0x8765, 0x32e0, 0x31bc, 0xa253, 0xb3b1, 0x0, 0x0);
        gbc.writeMem(0x611d, { 0x74 });
        gbc.writeMem(0xb3b1, { 0x0 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x8765, gbc.sp());
        EXPECT(0x611e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xb3b1));
        // 74 00B8
        gbc.setState(0x28d5, 0x339d, 0x2780, 0xac18, 0x6278, 0xd18e, 0x0, 0x1);
        gbc.writeMem(0x28d5, { 0x74 });
        gbc.writeMem(0xd18e, { 0x0 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x339d, gbc.sp());
        EXPECT(0x28d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0xd18e));
        // 74 00B9
        gbc.setState(0x6056, 0x64e3, 0xbc0, 0x128d, 0x5bbd, 0x9cf2, 0x1, 0x1);
        gbc.writeMem(0x6056, { 0x74 });
        gbc.writeMem(0x9cf2, { 0x0 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x64e3, gbc.sp());
        EXPECT(0x6057, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x9cf2));
        // 74 00BA
        gbc.setState(0x5aad, 0x645c, 0x7b10, 0x133f, 0x36b9, 0xf8fa, 0x1, 0x1);
        gbc.writeMem(0x5aad, { 0x74 });
        gbc.writeMem(0xf8fa, { 0x0 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x645c, gbc.sp());
        EXPECT(0x5aae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xf8fa));
        // 74 00BD
        gbc.setState(0xaff0, 0xe06d, 0x8bc0, 0x6b65, 0xef44, 0xba88, 0x0, 0x0);
        gbc.writeMem(0xaff0, { 0x74 });
        gbc.writeMem(0xba88, { 0x0 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xe06d, gbc.sp());
        EXPECT(0xaff1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xaff0));
        EXPECT(0xba, gbc.readMem(0xba88));
        // 74 00C4
        gbc.setState(0x1f09, 0xc7da, 0x2090, 0xe11d, 0xd9a, 0xe697, 0x1, 0x0);
        gbc.writeMem(0x1f09, { 0x74 });
        gbc.writeMem(0xe697, { 0x0 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xc7da, gbc.sp());
        EXPECT(0x1f0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xe697));
        // 74 00C7
        gbc.setState(0xd4d3, 0x976d, 0x3090, 0xb9aa, 0x8c2, 0xd64b, 0x0, 0x1);
        gbc.writeMem(0xd4d3, { 0x74 });
        gbc.writeMem(0xd64b, { 0x0 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x976d, gbc.sp());
        EXPECT(0xd4d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xd4d3));
        EXPECT(0xd6, gbc.readMem(0xd64b));
        // 74 00C8
        gbc.setState(0x5f38, 0xcff5, 0xdaa0, 0x8ed7, 0xd983, 0x8766, 0x1, 0x1);
        gbc.writeMem(0x5f38, { 0x74 });
        gbc.writeMem(0x8766, { 0x0 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xcff5, gbc.sp());
        EXPECT(0x5f39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x8766));
        // 74 00C9
        gbc.setState(0xa3b8, 0x9b5, 0xb2b0, 0x4d27, 0x88c8, 0xff98, 0x1, 0x0);
        gbc.writeMem(0xa3b8, { 0x74 });
        gbc.writeMem(0xff98, { 0x0 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x9b5, gbc.sp());
        EXPECT(0xa3b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xa3b8));
        EXPECT(0xff, gbc.readMem(0xff98));
        // 74 00CA
        gbc.setState(0xce45, 0xe3b0, 0xc2b0, 0x403d, 0xa56b, 0xedff, 0x0, 0x1);
        gbc.writeMem(0xce45, { 0x74 });
        gbc.writeMem(0xedff, { 0x0 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xe3b0, gbc.sp());
        EXPECT(0xce46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xce45));
        EXPECT(0xed, gbc.readMem(0xedff));
        // 74 00CB
        gbc.setState(0x8cc0, 0xf801, 0xe3f0, 0xe7cf, 0x3d0c, 0xe3a2, 0x0, 0x0);
        gbc.writeMem(0x8cc0, { 0x74 });
        gbc.writeMem(0xe3a2, { 0x0 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xf801, gbc.sp());
        EXPECT(0x8cc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0x8cc0));
        EXPECT(0xe3, gbc.readMem(0xe3a2));
        // 74 00CC
        gbc.setState(0x5d01, 0x8440, 0xe0f0, 0x6262, 0x4ed0, 0xcb13, 0x1, 0x1);
        gbc.writeMem(0x5d01, { 0x74 });
        gbc.writeMem(0xcb13, { 0x0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x8440, gbc.sp());
        EXPECT(0x5d02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb13));
        // 74 00CE
        gbc.setState(0xedf5, 0xa7e2, 0xd9c0, 0xa291, 0x7b59, 0xa364, 0x0, 0x0);
        gbc.writeMem(0xa364, { 0x0 });
        gbc.writeMem(0xedf5, { 0x74 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xa7e2, gbc.sp());
        EXPECT(0xedf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xa364));
        EXPECT(0x74, gbc.readMem(0xedf5));
        // 74 00CF
        gbc.setState(0xa37c, 0x812, 0xd5d0, 0x1d7b, 0x2a6f, 0x9f44, 0x0, 0x1);
        gbc.writeMem(0x9f44, { 0x0 });
        gbc.writeMem(0xa37c, { 0x74 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x812, gbc.sp());
        EXPECT(0xa37d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x9f44));
        EXPECT(0x74, gbc.readMem(0xa37c));
        // 74 00D0
        gbc.setState(0xeb34, 0xe2a, 0x8580, 0xea22, 0x72e4, 0xc6dc, 0x1, 0x0);
        gbc.writeMem(0xc6dc, { 0x0 });
        gbc.writeMem(0xeb34, { 0x74 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xe2a, gbc.sp());
        EXPECT(0xeb35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xc6dc));
        EXPECT(0x74, gbc.readMem(0xeb34));
        // 74 00D1
        gbc.setState(0x379, 0x40ab, 0x4ab0, 0xbd4b, 0xeeb3, 0x9b6b, 0x1, 0x1);
        gbc.writeMem(0x379, { 0x74 });
        gbc.writeMem(0x9b6b, { 0x0 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x40ab, gbc.sp());
        EXPECT(0x37a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x9b6b));
        // 74 00D2
        gbc.setState(0x392d, 0x6cf4, 0xcd0, 0xc610, 0xeb55, 0x8e68, 0x0, 0x1);
        gbc.writeMem(0x392d, { 0x74 });
        gbc.writeMem(0x8e68, { 0x0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x6cf4, gbc.sp());
        EXPECT(0x392e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0x8e68));
        // 74 00D3
        gbc.setState(0xf09, 0x8952, 0x5620, 0x3d45, 0xdce6, 0xd3b8, 0x0, 0x1);
        gbc.writeMem(0xf09, { 0x74 });
        gbc.writeMem(0xd3b8, { 0x0 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x8952, gbc.sp());
        EXPECT(0xf0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd3, gbc.readMem(0xd3b8));
        // 74 00D9
        gbc.setState(0x166c, 0xc78f, 0x1d40, 0x8bc1, 0x6672, 0xabf1, 0x0, 0x0);
        gbc.writeMem(0x166c, { 0x74 });
        gbc.writeMem(0xabf1, { 0x0 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xc78f, gbc.sp());
        EXPECT(0x166d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xab, gbc.readMem(0xabf1));
        // 74 00DB
        gbc.setState(0xd936, 0xbc82, 0x1f30, 0xe478, 0x61ac, 0xdc22, 0x1, 0x1);
        gbc.writeMem(0xd936, { 0x74 });
        gbc.writeMem(0xdc22, { 0x0 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xbc82, gbc.sp());
        EXPECT(0xd937, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xd936));
        EXPECT(0xdc, gbc.readMem(0xdc22));
        // 74 00DC
        gbc.setState(0x89da, 0x9c74, 0x33d0, 0x1864, 0xaaba, 0xd839, 0x0, 0x0);
        gbc.writeMem(0x89da, { 0x74 });
        gbc.writeMem(0xd839, { 0x0 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x9c74, gbc.sp());
        EXPECT(0x89db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0x89da));
        EXPECT(0xd8, gbc.readMem(0xd839));
        // 74 00DE
        gbc.setState(0x5f8d, 0xd659, 0xf730, 0x5cfb, 0xeca1, 0xca6c, 0x0, 0x1);
        gbc.writeMem(0x5f8d, { 0x74 });
        gbc.writeMem(0xca6c, { 0x0 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xd659, gbc.sp());
        EXPECT(0x5f8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0xca6c));
        // 74 00E0
        gbc.setState(0x977f, 0xda4, 0x65a0, 0x2588, 0x5cd9, 0xe6e1, 0x1, 0x1);
        gbc.writeMem(0x977f, { 0x74 });
        gbc.writeMem(0xe6e1, { 0x0 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xda4, gbc.sp());
        EXPECT(0x9780, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0x977f));
        EXPECT(0xe6, gbc.readMem(0xe6e1));
        // 74 00E4
        gbc.setState(0x908b, 0x4b4b, 0x3e80, 0xd33d, 0x583f, 0xa62e, 0x1, 0x1);
        gbc.writeMem(0x908b, { 0x74 });
        gbc.writeMem(0xa62e, { 0x0 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x4b4b, gbc.sp());
        EXPECT(0x908c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0x908b));
        EXPECT(0xa6, gbc.readMem(0xa62e));
        // 74 00E5
        gbc.setState(0x4354, 0x1579, 0xcf00, 0xba66, 0xbc95, 0xa3d2, 0x0, 0x0);
        gbc.writeMem(0x4354, { 0x74 });
        gbc.writeMem(0xa3d2, { 0x0 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x1579, gbc.sp());
        EXPECT(0x4355, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xa3d2));
        // 74 00E6
        gbc.setState(0xd7a7, 0x4ed6, 0x68d0, 0x5d8, 0xe3a7, 0xd454, 0x0, 0x0);
        gbc.writeMem(0xd454, { 0x0 });
        gbc.writeMem(0xd7a7, { 0x74 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x4ed6, gbc.sp());
        EXPECT(0xd7a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xd454));
        EXPECT(0x74, gbc.readMem(0xd7a7));
        // 74 00E9
        gbc.setState(0x85cf, 0xe880, 0xc720, 0x1a25, 0xbaa5, 0xa1df, 0x1, 0x0);
        gbc.writeMem(0x85cf, { 0x74 });
        gbc.writeMem(0xa1df, { 0x0 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xe880, gbc.sp());
        EXPECT(0x85d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0x85cf));
        EXPECT(0xa1, gbc.readMem(0xa1df));
        // 74 00EB
        gbc.setState(0x9767, 0x9e7, 0x2bd0, 0x5821, 0xba04, 0xd012, 0x1, 0x1);
        gbc.writeMem(0x9767, { 0x74 });
        gbc.writeMem(0xd012, { 0x0 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x9e7, gbc.sp());
        EXPECT(0x9768, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0x9767));
        EXPECT(0xd0, gbc.readMem(0xd012));
        // 74 00ED
        gbc.setState(0x29ba, 0x8ef6, 0x69b0, 0x9d4c, 0xdf49, 0x9dca, 0x1, 0x1);
        gbc.writeMem(0x29ba, { 0x74 });
        gbc.writeMem(0x9dca, { 0x0 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x8ef6, gbc.sp());
        EXPECT(0x29bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x9dca));
        // 74 00F2
        gbc.setState(0x7247, 0x5aa0, 0xa290, 0x780f, 0x49ba, 0xd16f, 0x0, 0x0);
        gbc.writeMem(0x7247, { 0x74 });
        gbc.writeMem(0xd16f, { 0x0 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x5aa0, gbc.sp());
        EXPECT(0x7248, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0xd16f));
        // 74 00F3
        gbc.setState(0x393e, 0x71b3, 0xf460, 0xeeef, 0x30e, 0xadd5, 0x0, 0x0);
        gbc.writeMem(0x393e, { 0x74 });
        gbc.writeMem(0xadd5, { 0x0 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x71b3, gbc.sp());
        EXPECT(0x393f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0xadd5));
        // 74 00F4
        gbc.setState(0xbc1f, 0xea48, 0x4e40, 0x1cf6, 0xced2, 0x97ac, 0x1, 0x0);
        gbc.writeMem(0x97ac, { 0x0 });
        gbc.writeMem(0xbc1f, { 0x74 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xea48, gbc.sp());
        EXPECT(0xbc20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x97ac));
        EXPECT(0x74, gbc.readMem(0xbc1f));
        // 74 00F5
        gbc.setState(0xec33, 0xad0b, 0x240, 0x2885, 0x7635, 0x93ba, 0x1, 0x1);
        gbc.writeMem(0x93ba, { 0x0 });
        gbc.writeMem(0xec33, { 0x74 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xad0b, gbc.sp());
        EXPECT(0xec34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x93ba));
        EXPECT(0x74, gbc.readMem(0xec33));
        // 74 00F6
        gbc.setState(0x9acd, 0xddde, 0xa0, 0xc4c, 0xa9b5, 0xc917, 0x1, 0x1);
        gbc.writeMem(0x9acd, { 0x74 });
        gbc.writeMem(0xc917, { 0x0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xddde, gbc.sp());
        EXPECT(0x9ace, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0x9acd));
        EXPECT(0xc9, gbc.readMem(0xc917));
        // 74 00F8
        gbc.setState(0xc3c4, 0x9c21, 0x6c00, 0x2632, 0xc012, 0xc3c0, 0x1, 0x1);
        gbc.writeMem(0xc3c0, { 0x0 });
        gbc.writeMem(0xc3c4, { 0x74 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x9c21, gbc.sp());
        EXPECT(0xc3c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xc3c0));
        EXPECT(0x74, gbc.readMem(0xc3c4));
        // 74 00FB
        gbc.setState(0xea2d, 0x3aee, 0x44e0, 0x979c, 0xd2fe, 0xca7c, 0x0, 0x0);
        gbc.writeMem(0xca7c, { 0x0 });
        gbc.writeMem(0xea2d, { 0x74 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x3aee, gbc.sp());
        EXPECT(0xea2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0xca7c));
        EXPECT(0x74, gbc.readMem(0xea2d));
        // 74 00FC
        gbc.setState(0x7615, 0xf5f6, 0xd7e0, 0xb5ba, 0x4f8, 0x8d6e, 0x1, 0x0);
        gbc.writeMem(0x7615, { 0x74 });
        gbc.writeMem(0x8d6e, { 0x0 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xf5f6, gbc.sp());
        EXPECT(0x7616, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x8d6e));
        // 74 00FE
        gbc.setState(0xec22, 0xa600, 0xae20, 0xa078, 0xb935, 0x9140, 0x0, 0x1);
        gbc.writeMem(0x9140, { 0x0 });
        gbc.writeMem(0xec22, { 0x74 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xa600, gbc.sp());
        EXPECT(0xec23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x9140));
        EXPECT(0x74, gbc.readMem(0xec22));
        // 74 0100
        gbc.setState(0xe98, 0xe9d6, 0x8080, 0x1f2a, 0xd8b2, 0x9fdd, 0x1, 0x1);
        gbc.writeMem(0xe98, { 0x74 });
        gbc.writeMem(0x9fdd, { 0x0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xe9d6, gbc.sp());
        EXPECT(0xe99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x9fdd));
        // 74 0101
        gbc.setState(0xaa44, 0xa75, 0xfbf0, 0x4fa0, 0xad3, 0xe63b, 0x1, 0x1);
        gbc.writeMem(0xaa44, { 0x74 });
        gbc.writeMem(0xe63b, { 0x0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xa75, gbc.sp());
        EXPECT(0xaa45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xaa44));
        EXPECT(0xe6, gbc.readMem(0xe63b));
        // 74 0103
        gbc.setState(0xcb85, 0x4671, 0x8c80, 0xa673, 0x5766, 0x86cd, 0x1, 0x0);
        gbc.writeMem(0x86cd, { 0x0 });
        gbc.writeMem(0xcb85, { 0x74 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x4671, gbc.sp());
        EXPECT(0xcb86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x86cd));
        EXPECT(0x74, gbc.readMem(0xcb85));
        // 74 0107
        gbc.setState(0xec02, 0xde0a, 0x8520, 0x783b, 0x4fd2, 0xb93a, 0x0, 0x1);
        gbc.writeMem(0xb93a, { 0x0 });
        gbc.writeMem(0xec02, { 0x74 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xde0a, gbc.sp());
        EXPECT(0xec03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xb93a));
        EXPECT(0x74, gbc.readMem(0xec02));
        // 74 0108
        gbc.setState(0x9603, 0x8d37, 0xadd0, 0x59a7, 0x7d7a, 0x9428, 0x1, 0x0);
        gbc.writeMem(0x9428, { 0x0 });
        gbc.writeMem(0x9603, { 0x74 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x8d37, gbc.sp());
        EXPECT(0x9604, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x9428));
        EXPECT(0x74, gbc.readMem(0x9603));
        // 74 0109
        gbc.setState(0xc6bc, 0x38db, 0x34d0, 0x1b16, 0x7f31, 0x9faa, 0x1, 0x0);
        gbc.writeMem(0x9faa, { 0x0 });
        gbc.writeMem(0xc6bc, { 0x74 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x38db, gbc.sp());
        EXPECT(0xc6bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x9faa));
        EXPECT(0x74, gbc.readMem(0xc6bc));
        // 74 010B
        gbc.setState(0x2f9f, 0x4861, 0x5170, 0x8772, 0x168, 0x80ca, 0x0, 0x1);
        gbc.writeMem(0x2f9f, { 0x74 });
        gbc.writeMem(0x80ca, { 0x0 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x4861, gbc.sp());
        EXPECT(0x2fa0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x80ca));
        // 74 0110
        gbc.setState(0x3836, 0xe4da, 0xa690, 0xe1d7, 0x7c2b, 0xbc94, 0x1, 0x0);
        gbc.writeMem(0x3836, { 0x74 });
        gbc.writeMem(0xbc94, { 0x0 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xe4da, gbc.sp());
        EXPECT(0x3837, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xbc94));
        // 74 0113
        gbc.setState(0x766b, 0x929d, 0x5d00, 0xc409, 0x9e23, 0xe20c, 0x1, 0x0);
        gbc.writeMem(0x766b, { 0x74 });
        gbc.writeMem(0xe20c, { 0x0 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x929d, gbc.sp());
        EXPECT(0x766c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xe20c));
        // 74 0115
        gbc.setState(0x3565, 0x24d0, 0xfe00, 0xa0f8, 0xe8ec, 0xb590, 0x1, 0x1);
        gbc.writeMem(0x3565, { 0x74 });
        gbc.writeMem(0xb590, { 0x0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x24d0, gbc.sp());
        EXPECT(0x3566, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xb590));
        // 74 0116
        gbc.setState(0x12f2, 0x815, 0xaad0, 0xe8ea, 0xa9ed, 0xff89, 0x1, 0x1);
        gbc.writeMem(0x12f2, { 0x74 });
        gbc.writeMem(0xff89, { 0x0 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x815, gbc.sp());
        EXPECT(0x12f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xff89));
        // 74 0119
        gbc.setState(0x418d, 0x1442, 0xaf20, 0x57eb, 0xb4a2, 0xb0f8, 0x1, 0x0);
        gbc.writeMem(0x418d, { 0x74 });
        gbc.writeMem(0xb0f8, { 0x0 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x1442, gbc.sp());
        EXPECT(0x418e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xb0f8));
        // 74 011A
        gbc.setState(0x119, 0xedd7, 0x2330, 0x3ec3, 0x33d0, 0x9036, 0x1, 0x0);
        gbc.writeMem(0x119, { 0x74 });
        gbc.writeMem(0x9036, { 0x0 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xedd7, gbc.sp());
        EXPECT(0x11a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0x9036));
        // 74 011B
        gbc.setState(0x37d3, 0x348, 0xf1e0, 0xfb3d, 0xe07f, 0xaa0d, 0x1, 0x0);
        gbc.writeMem(0x37d3, { 0x74 });
        gbc.writeMem(0xaa0d, { 0x0 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x348, gbc.sp());
        EXPECT(0x37d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xaa0d));
        // 74 011F
        gbc.setState(0x643f, 0x53c1, 0xdbe0, 0xf951, 0xb8ed, 0xeccd, 0x0, 0x0);
        gbc.writeMem(0x643f, { 0x74 });
        gbc.writeMem(0xeccd, { 0x0 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x53c1, gbc.sp());
        EXPECT(0x6440, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0xeccd));
        // 74 0120
        gbc.setState(0xd242, 0x294f, 0x1df0, 0x19d, 0x99c2, 0xb8fa, 0x1, 0x0);
        gbc.writeMem(0xb8fa, { 0x0 });
        gbc.writeMem(0xd242, { 0x74 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x294f, gbc.sp());
        EXPECT(0xd243, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0xb8fa));
        EXPECT(0x74, gbc.readMem(0xd242));
        // 74 0121
        gbc.setState(0x626e, 0x1438, 0xf1f0, 0x5d91, 0xf5cb, 0xfb58, 0x0, 0x1);
        gbc.writeMem(0x626e, { 0x74 });
        gbc.writeMem(0xfb58, { 0x0 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x1438, gbc.sp());
        EXPECT(0x626f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfb, gbc.readMem(0xfb58));
        // 74 0123
        gbc.setState(0xdb2, 0x25a5, 0xb040, 0xc0e0, 0xee52, 0xf44e, 0x1, 0x1);
        gbc.writeMem(0xdb2, { 0x74 });
        gbc.writeMem(0xf44e, { 0x0 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x25a5, gbc.sp());
        EXPECT(0xdb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0xf44e));
        // 74 0125
        gbc.setState(0xd95d, 0x7f3, 0x1a10, 0xda06, 0x3181, 0xe7d7, 0x1, 0x0);
        gbc.writeMem(0xd95d, { 0x74 });
        gbc.writeMem(0xe7d7, { 0x0 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x7f3, gbc.sp());
        EXPECT(0xd95e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xd95d));
        EXPECT(0xe7, gbc.readMem(0xe7d7));
        // 74 012E
        gbc.setState(0x5e96, 0x902d, 0x9a50, 0xfee0, 0x6916, 0xed85, 0x1, 0x1);
        gbc.writeMem(0x5e96, { 0x74 });
        gbc.writeMem(0xed85, { 0x0 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x902d, gbc.sp());
        EXPECT(0x5e97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0xed85));
        // 74 012F
        gbc.setState(0x98f2, 0x93d7, 0x2420, 0x419a, 0x8f49, 0xbead, 0x1, 0x1);
        gbc.writeMem(0x98f2, { 0x74 });
        gbc.writeMem(0xbead, { 0x0 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x93d7, gbc.sp());
        EXPECT(0x98f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0x98f2));
        EXPECT(0xbe, gbc.readMem(0xbead));
        // 74 0130
        gbc.setState(0x910d, 0xcaaf, 0x2fb0, 0xc4c2, 0xd39f, 0xc595, 0x1, 0x0);
        gbc.writeMem(0x910d, { 0x74 });
        gbc.writeMem(0xc595, { 0x0 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xcaaf, gbc.sp());
        EXPECT(0x910e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0x910d));
        EXPECT(0xc5, gbc.readMem(0xc595));
        // 74 0132
        gbc.setState(0xd255, 0xfa6b, 0x75e0, 0xd2ae, 0x2bb6, 0x8a87, 0x1, 0x0);
        gbc.writeMem(0x8a87, { 0x0 });
        gbc.writeMem(0xd255, { 0x74 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xfa6b, gbc.sp());
        EXPECT(0xd256, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x8a87));
        EXPECT(0x74, gbc.readMem(0xd255));
        // 74 0135
        gbc.setState(0x8660, 0x3665, 0x8d70, 0xbafa, 0xf8e2, 0xc639, 0x0, 0x1);
        gbc.writeMem(0x8660, { 0x74 });
        gbc.writeMem(0xc639, { 0x0 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x3665, gbc.sp());
        EXPECT(0x8661, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0x8660));
        EXPECT(0xc6, gbc.readMem(0xc639));
        // 74 0136
        gbc.setState(0xe91, 0xc406, 0x3150, 0x1987, 0xeca0, 0xe123, 0x0, 0x1);
        gbc.writeMem(0xe91, { 0x74 });
        gbc.writeMem(0xe123, { 0x0 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xc406, gbc.sp());
        EXPECT(0xe92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xe123));
        // 74 0138
        gbc.setState(0x4a8b, 0x616a, 0x82a0, 0xaead, 0xd48c, 0xd4a9, 0x1, 0x1);
        gbc.writeMem(0x4a8b, { 0x74 });
        gbc.writeMem(0xd4a9, { 0x0 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x616a, gbc.sp());
        EXPECT(0x4a8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xd4a9));
        // 74 0139
        gbc.setState(0xb9e5, 0xdb9a, 0x12f0, 0xbb43, 0x85ef, 0xd363, 0x0, 0x1);
        gbc.writeMem(0xb9e5, { 0x74 });
        gbc.writeMem(0xd363, { 0x0 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xdb9a, gbc.sp());
        EXPECT(0xb9e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xb9e5));
        EXPECT(0xd3, gbc.readMem(0xd363));
        // 74 013A
        gbc.setState(0x6604, 0xe548, 0xa7d0, 0x564b, 0xb5a9, 0x83a6, 0x1, 0x0);
        gbc.writeMem(0x6604, { 0x74 });
        gbc.writeMem(0x83a6, { 0x0 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xe548, gbc.sp());
        EXPECT(0x6605, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0x83a6));
        // 74 013F
        gbc.setState(0xe4c, 0xfb0a, 0x5f90, 0x3b0c, 0x7d0a, 0xfe11, 0x1, 0x0);
        gbc.writeMem(0xe4c, { 0x74 });
        gbc.writeMem(0xfe11, { 0x0 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xfb0a, gbc.sp());
        EXPECT(0xe4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xfe11));
        // 74 0140
        gbc.setState(0x91e1, 0xbc9d, 0xf570, 0xae1b, 0xbf84, 0xf9c2, 0x1, 0x0);
        gbc.writeMem(0x91e1, { 0x74 });
        gbc.writeMem(0xf9c2, { 0x0 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xbc9d, gbc.sp());
        EXPECT(0x91e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0x91e1));
        EXPECT(0xf9, gbc.readMem(0xf9c2));
        // 74 0142
        gbc.setState(0x580f, 0xe636, 0x9cf0, 0x1d4e, 0x4ee0, 0xa589, 0x1, 0x1);
        gbc.writeMem(0x580f, { 0x74 });
        gbc.writeMem(0xa589, { 0x0 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xe636, gbc.sp());
        EXPECT(0x5810, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa5, gbc.readMem(0xa589));
        // 74 0145
        gbc.setState(0xafa, 0x1f9c, 0xe880, 0x1ea6, 0xe05d, 0xfb5d, 0x0, 0x0);
        gbc.writeMem(0xafa, { 0x74 });
        gbc.writeMem(0xfb5d, { 0x0 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x1f9c, gbc.sp());
        EXPECT(0xafb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfb, gbc.readMem(0xfb5d));
        // 74 014B
        gbc.setState(0x8556, 0x6f85, 0x57c0, 0xec07, 0x1997, 0x8c76, 0x0, 0x1);
        gbc.writeMem(0x8556, { 0x74 });
        gbc.writeMem(0x8c76, { 0x0 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x6f85, gbc.sp());
        EXPECT(0x8557, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0x8556));
        EXPECT(0x8c, gbc.readMem(0x8c76));
        // 74 014D
        gbc.setState(0xbde6, 0xe937, 0x98e0, 0x8667, 0x8a32, 0xb012, 0x0, 0x1);
        gbc.writeMem(0xb012, { 0x0 });
        gbc.writeMem(0xbde6, { 0x74 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xe937, gbc.sp());
        EXPECT(0xbde7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xb012));
        EXPECT(0x74, gbc.readMem(0xbde6));
        // 74 014E
        gbc.setState(0x51f5, 0xb964, 0xa20, 0x69ac, 0xa123, 0x9de0, 0x0, 0x0);
        gbc.writeMem(0x51f5, { 0x74 });
        gbc.writeMem(0x9de0, { 0x0 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xb964, gbc.sp());
        EXPECT(0x51f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x9de0));
        // 74 014F
        gbc.setState(0xb3d2, 0x2fc9, 0xcd40, 0xe69c, 0xe703, 0xb7b1, 0x1, 0x0);
        gbc.writeMem(0xb3d2, { 0x74 });
        gbc.writeMem(0xb7b1, { 0x0 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x2fc9, gbc.sp());
        EXPECT(0xb3d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xb3d2));
        EXPECT(0xb7, gbc.readMem(0xb7b1));
        // 74 0150
        gbc.setState(0x88f5, 0x9c1, 0xc300, 0x571c, 0x4a6c, 0xa153, 0x1, 0x0);
        gbc.writeMem(0x88f5, { 0x74 });
        gbc.writeMem(0xa153, { 0x0 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x9c1, gbc.sp());
        EXPECT(0x88f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0x88f5));
        EXPECT(0xa1, gbc.readMem(0xa153));
        // 74 0151
        gbc.setState(0x4fba, 0xa6e, 0xcfc0, 0xa566, 0x5dd5, 0x9f5e, 0x1, 0x1);
        gbc.writeMem(0x4fba, { 0x74 });
        gbc.writeMem(0x9f5e, { 0x0 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xa6e, gbc.sp());
        EXPECT(0x4fbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x9f5e));
        // 74 0153
        gbc.setState(0x22b6, 0xa056, 0x66c0, 0x5b9f, 0xd32b, 0x94a6, 0x0, 0x1);
        gbc.writeMem(0x22b6, { 0x74 });
        gbc.writeMem(0x94a6, { 0x0 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xa056, gbc.sp());
        EXPECT(0x22b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x94a6));
        // 74 0155
        gbc.setState(0x75a, 0x38a5, 0xbe50, 0x298e, 0xa041, 0xd354, 0x0, 0x1);
        gbc.writeMem(0x75a, { 0x74 });
        gbc.writeMem(0xd354, { 0x0 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x38a5, gbc.sp());
        EXPECT(0x75b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd3, gbc.readMem(0xd354));
        // 74 0157
        gbc.setState(0xc455, 0x13c1, 0xbbe0, 0x7878, 0xb53, 0xc1aa, 0x1, 0x1);
        gbc.writeMem(0xc1aa, { 0x0 });
        gbc.writeMem(0xc455, { 0x74 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x13c1, gbc.sp());
        EXPECT(0xc456, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xc1aa));
        EXPECT(0x74, gbc.readMem(0xc455));
        // 74 015E
        gbc.setState(0x4210, 0xab13, 0xbbe0, 0xd57f, 0x3bc8, 0xdb45, 0x0, 0x1);
        gbc.writeMem(0x4210, { 0x74 });
        gbc.writeMem(0xdb45, { 0x0 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xab13, gbc.sp());
        EXPECT(0x4211, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0xdb45));
        // 74 0165
        gbc.setState(0x2bd1, 0xd1db, 0x3cd0, 0x5708, 0x78a1, 0xe53d, 0x0, 0x0);
        gbc.writeMem(0x2bd1, { 0x74 });
        gbc.writeMem(0xe53d, { 0x0 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xd1db, gbc.sp());
        EXPECT(0x2bd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xe53d));
        // 74 0169
        gbc.setState(0x6608, 0xeaac, 0x5da0, 0x4690, 0xf3b, 0xb517, 0x0, 0x0);
        gbc.writeMem(0x6608, { 0x74 });
        gbc.writeMem(0xb517, { 0x0 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xeaac, gbc.sp());
        EXPECT(0x6609, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xb517));
        // 74 016B
        gbc.setState(0xe9b, 0xb6a0, 0x7f70, 0x5475, 0x41ff, 0xf7c4, 0x0, 0x1);
        gbc.writeMem(0xe9b, { 0x74 });
        gbc.writeMem(0xf7c4, { 0x0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xb6a0, gbc.sp());
        EXPECT(0xe9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xf7c4));
        // 74 016E
        gbc.setState(0x6ca4, 0x1ae4, 0xdab0, 0x59cc, 0x7795, 0xe261, 0x0, 0x0);
        gbc.writeMem(0x6ca4, { 0x74 });
        gbc.writeMem(0xe261, { 0x0 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x1ae4, gbc.sp());
        EXPECT(0x6ca5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xe261));
        // 74 016F
        gbc.setState(0xbe21, 0x7711, 0x7720, 0xb385, 0x4a41, 0xc597, 0x1, 0x1);
        gbc.writeMem(0xbe21, { 0x74 });
        gbc.writeMem(0xc597, { 0x0 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x7711, gbc.sp());
        EXPECT(0xbe22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xbe21));
        EXPECT(0xc5, gbc.readMem(0xc597));
        // 74 0171
        gbc.setState(0x5c2c, 0x851c, 0x3920, 0xb9f9, 0x1552, 0xe344, 0x1, 0x0);
        gbc.writeMem(0x5c2c, { 0x74 });
        gbc.writeMem(0xe344, { 0x0 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x851c, gbc.sp());
        EXPECT(0x5c2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0xe344));
        // 74 0173
        gbc.setState(0xcd8b, 0x4367, 0xc860, 0x46f, 0x4a41, 0xe5cc, 0x0, 0x1);
        gbc.writeMem(0xcd8b, { 0x74 });
        gbc.writeMem(0xe5cc, { 0x0 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x4367, gbc.sp());
        EXPECT(0xcd8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xcd8b));
        EXPECT(0xe5, gbc.readMem(0xe5cc));
        // 74 0174
        gbc.setState(0x16db, 0xa95f, 0xb580, 0x1019, 0x3d62, 0x8332, 0x0, 0x1);
        gbc.writeMem(0x16db, { 0x74 });
        gbc.writeMem(0x8332, { 0x0 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xa95f, gbc.sp());
        EXPECT(0x16dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0x8332));
        // 74 0176
        gbc.setState(0x86c5, 0x1b12, 0x3a90, 0x80dd, 0x474e, 0xffaf, 0x1, 0x0);
        gbc.writeMem(0x86c5, { 0x74 });
        gbc.writeMem(0xffaf, { 0x0 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x1b12, gbc.sp());
        EXPECT(0x86c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0x86c5));
        EXPECT(0xff, gbc.readMem(0xffaf));
        // 74 0178
        gbc.setState(0x2521, 0xf6dc, 0x8fe0, 0xdce1, 0x48c7, 0xcc41, 0x0, 0x1);
        gbc.writeMem(0x2521, { 0x74 });
        gbc.writeMem(0xcc41, { 0x0 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xf6dc, gbc.sp());
        EXPECT(0x2522, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcc, gbc.readMem(0xcc41));
        // 74 0179
        gbc.setState(0x2bb4, 0x2ca1, 0xcf90, 0x6f29, 0xac23, 0xde18, 0x1, 0x0);
        gbc.writeMem(0x2bb4, { 0x74 });
        gbc.writeMem(0xde18, { 0x0 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x2ca1, gbc.sp());
        EXPECT(0x2bb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0xde18));
        // 74 017A
        gbc.setState(0x25ca, 0x233c, 0xa030, 0x5179, 0xbf19, 0xb4a3, 0x0, 0x1);
        gbc.writeMem(0x25ca, { 0x74 });
        gbc.writeMem(0xb4a3, { 0x0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x233c, gbc.sp());
        EXPECT(0x25cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0xb4a3));
        // 74 017C
        gbc.setState(0x10f7, 0x274, 0xb990, 0x9482, 0x33df, 0xf503, 0x0, 0x0);
        gbc.writeMem(0x10f7, { 0x74 });
        gbc.writeMem(0xf503, { 0x0 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x274, gbc.sp());
        EXPECT(0x10f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xf503));
        // 74 017D
        gbc.setState(0x7167, 0x1237, 0x82e0, 0x6232, 0xa2d9, 0xf0f0, 0x0, 0x1);
        gbc.writeMem(0x7167, { 0x74 });
        gbc.writeMem(0xf0f0, { 0x0 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x1237, gbc.sp());
        EXPECT(0x7168, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xf0f0));
        // 74 017E
        gbc.setState(0xd425, 0x7e1a, 0x4430, 0x9e1b, 0x55a7, 0xc12b, 0x0, 0x0);
        gbc.writeMem(0xc12b, { 0x0 });
        gbc.writeMem(0xd425, { 0x74 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x7e1a, gbc.sp());
        EXPECT(0xd426, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xc12b));
        EXPECT(0x74, gbc.readMem(0xd425));
        // 74 0181
        gbc.setState(0x92ed, 0xcf6c, 0xb660, 0x3a84, 0x3417, 0xcf15, 0x0, 0x0);
        gbc.writeMem(0x92ed, { 0x74 });
        gbc.writeMem(0xcf15, { 0x0 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xcf6c, gbc.sp());
        EXPECT(0x92ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0x92ed));
        EXPECT(0xcf, gbc.readMem(0xcf15));
        // 74 0184
        gbc.setState(0x7aa5, 0x2d5f, 0xf340, 0xf43f, 0x9462, 0xdc7d, 0x1, 0x0);
        gbc.writeMem(0x7aa5, { 0x74 });
        gbc.writeMem(0xdc7d, { 0x0 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x2d5f, gbc.sp());
        EXPECT(0x7aa6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0xdc7d));
        // 74 0188
        gbc.setState(0xc3dc, 0x5658, 0x49a0, 0x445e, 0x8210, 0x8b5b, 0x0, 0x1);
        gbc.writeMem(0x8b5b, { 0x0 });
        gbc.writeMem(0xc3dc, { 0x74 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x5658, gbc.sp());
        EXPECT(0xc3dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0x8b5b));
        EXPECT(0x74, gbc.readMem(0xc3dc));
        // 74 018A
        gbc.setState(0x4b8d, 0x53ac, 0x1590, 0xdf53, 0x20f6, 0x85af, 0x1, 0x1);
        gbc.writeMem(0x4b8d, { 0x74 });
        gbc.writeMem(0x85af, { 0x0 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x53ac, gbc.sp());
        EXPECT(0x4b8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x85af));
        // 74 018C
        gbc.setState(0xacad, 0xf1c6, 0xf4f0, 0x680c, 0xf8cd, 0x93c9, 0x0, 0x0);
        gbc.writeMem(0x93c9, { 0x0 });
        gbc.writeMem(0xacad, { 0x74 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xf1c6, gbc.sp());
        EXPECT(0xacae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x93c9));
        EXPECT(0x74, gbc.readMem(0xacad));
        // 74 018D
        gbc.setState(0xcc0a, 0xefa1, 0x6250, 0xbc36, 0x5a20, 0xe6c8, 0x1, 0x0);
        gbc.writeMem(0xcc0a, { 0x74 });
        gbc.writeMem(0xe6c8, { 0x0 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xefa1, gbc.sp());
        EXPECT(0xcc0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xcc0a));
        EXPECT(0xe6, gbc.readMem(0xe6c8));
        // 74 0190
        gbc.setState(0xc6fc, 0xe485, 0x5b70, 0xdfe4, 0x4bd1, 0xf6ee, 0x1, 0x1);
        gbc.writeMem(0xc6fc, { 0x74 });
        gbc.writeMem(0xf6ee, { 0x0 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xe485, gbc.sp());
        EXPECT(0xc6fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xc6fc));
        EXPECT(0xf6, gbc.readMem(0xf6ee));
        // 74 0193
        gbc.setState(0x8353, 0xc1c4, 0x4290, 0xa566, 0x784a, 0xce36, 0x1, 0x0);
        gbc.writeMem(0x8353, { 0x74 });
        gbc.writeMem(0xce36, { 0x0 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xc1c4, gbc.sp());
        EXPECT(0x8354, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0x8353));
        EXPECT(0xce, gbc.readMem(0xce36));
        // 74 019C
        gbc.setState(0x67b9, 0xf99, 0x50e0, 0x9380, 0x9db8, 0x8dce, 0x0, 0x1);
        gbc.writeMem(0x67b9, { 0x74 });
        gbc.writeMem(0x8dce, { 0x0 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xf99, gbc.sp());
        EXPECT(0x67ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x8dce));
        // 74 01A0
        gbc.setState(0x79ea, 0xd280, 0x9d50, 0xd011, 0x6650, 0xbe11, 0x1, 0x1);
        gbc.writeMem(0x79ea, { 0x74 });
        gbc.writeMem(0xbe11, { 0x0 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xd280, gbc.sp());
        EXPECT(0x79eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0xbe11));
        // 74 01A1
        gbc.setState(0x907c, 0x9adf, 0xdc20, 0xae86, 0xaf96, 0xc2e1, 0x1, 0x0);
        gbc.writeMem(0x907c, { 0x74 });
        gbc.writeMem(0xc2e1, { 0x0 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x9adf, gbc.sp());
        EXPECT(0x907d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0x907c));
        EXPECT(0xc2, gbc.readMem(0xc2e1));
        // 74 01A3
        gbc.setState(0x4d62, 0xb9e7, 0x120, 0x9a13, 0x5284, 0x941b, 0x0, 0x0);
        gbc.writeMem(0x4d62, { 0x74 });
        gbc.writeMem(0x941b, { 0x0 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xb9e7, gbc.sp());
        EXPECT(0x4d63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x941b));
        // 74 01A9
        gbc.setState(0x1f0f, 0x4e5b, 0x70b0, 0x2cb9, 0x6f2a, 0x8026, 0x0, 0x0);
        gbc.writeMem(0x1f0f, { 0x74 });
        gbc.writeMem(0x8026, { 0x0 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x4e5b, gbc.sp());
        EXPECT(0x1f10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x8026));
        // 74 01AA
        gbc.setState(0xd545, 0x81f0, 0xedf0, 0x9e3c, 0x809c, 0xd258, 0x1, 0x1);
        gbc.writeMem(0xd258, { 0x0 });
        gbc.writeMem(0xd545, { 0x74 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x81f0, gbc.sp());
        EXPECT(0xd546, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0xd258));
        EXPECT(0x74, gbc.readMem(0xd545));
        // 74 01AB
        gbc.setState(0xec05, 0x582d, 0x1d90, 0x8cd9, 0x2d11, 0xd410, 0x0, 0x0);
        gbc.writeMem(0xd410, { 0x0 });
        gbc.writeMem(0xec05, { 0x74 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x582d, gbc.sp());
        EXPECT(0xec06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xd410));
        EXPECT(0x74, gbc.readMem(0xec05));
        // 74 01AC
        gbc.setState(0xa53a, 0xba0e, 0x8f20, 0xaefd, 0xbdb6, 0x9bf3, 0x0, 0x1);
        gbc.writeMem(0x9bf3, { 0x0 });
        gbc.writeMem(0xa53a, { 0x74 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xba0e, gbc.sp());
        EXPECT(0xa53b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x9bf3));
        EXPECT(0x74, gbc.readMem(0xa53a));
        // 74 01AD
        gbc.setState(0xd7fa, 0xc1d8, 0x6d30, 0x9115, 0xf9cc, 0xf334, 0x1, 0x0);
        gbc.writeMem(0xd7fa, { 0x74 });
        gbc.writeMem(0xf334, { 0x0 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xc1d8, gbc.sp());
        EXPECT(0xd7fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xd7fa));
        EXPECT(0xf3, gbc.readMem(0xf334));
        // 74 01AF
        gbc.setState(0x5fe7, 0x81b3, 0xd4b0, 0xe707, 0x19ad, 0xcfef, 0x0, 0x0);
        gbc.writeMem(0x5fe7, { 0x74 });
        gbc.writeMem(0xcfef, { 0x0 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x81b3, gbc.sp());
        EXPECT(0x5fe8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0xcfef));
        // 74 01B0
        gbc.setState(0xa9bc, 0x4c41, 0xeb20, 0x304c, 0x2de2, 0xd5b4, 0x0, 0x0);
        gbc.writeMem(0xa9bc, { 0x74 });
        gbc.writeMem(0xd5b4, { 0x0 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x4c41, gbc.sp());
        EXPECT(0xa9bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xa9bc));
        EXPECT(0xd5, gbc.readMem(0xd5b4));
        // 74 01B3
        gbc.setState(0x7812, 0xa15, 0xf70, 0x19da, 0x43bd, 0xe538, 0x1, 0x1);
        gbc.writeMem(0x7812, { 0x74 });
        gbc.writeMem(0xe538, { 0x0 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xa15, gbc.sp());
        EXPECT(0x7813, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xe538));
        // 74 01B5
        gbc.setState(0x200a, 0x3c37, 0x1030, 0x55c4, 0x50b2, 0xfb85, 0x1, 0x1);
        gbc.writeMem(0x200a, { 0x74 });
        gbc.writeMem(0xfb85, { 0x0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x3c37, gbc.sp());
        EXPECT(0x200b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfb, gbc.readMem(0xfb85));
        // 74 01B6
        gbc.setState(0x9223, 0x1e0f, 0xf9f0, 0xc3e3, 0x1c2c, 0xa82f, 0x1, 0x0);
        gbc.writeMem(0x9223, { 0x74 });
        gbc.writeMem(0xa82f, { 0x0 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x1e0f, gbc.sp());
        EXPECT(0x9224, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0x9223));
        EXPECT(0xa8, gbc.readMem(0xa82f));
        // 74 01B7
        gbc.setState(0xdd42, 0xdbe6, 0x9970, 0x570c, 0x106b, 0x89e0, 0x0, 0x0);
        gbc.writeMem(0x89e0, { 0x0 });
        gbc.writeMem(0xdd42, { 0x74 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xdbe6, gbc.sp());
        EXPECT(0xdd43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x89e0));
        EXPECT(0x74, gbc.readMem(0xdd42));
        // 74 01B8
        gbc.setState(0x15a7, 0xc741, 0xfb70, 0x7d0e, 0x0, 0x88ce, 0x0, 0x0);
        gbc.writeMem(0x15a7, { 0x74 });
        gbc.writeMem(0x88ce, { 0x0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xc741, gbc.sp());
        EXPECT(0x15a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x88ce));
        // 74 01BC
        gbc.setState(0x3e95, 0x87c6, 0xab50, 0xebad, 0xa610, 0x8684, 0x1, 0x1);
        gbc.writeMem(0x3e95, { 0x74 });
        gbc.writeMem(0x8684, { 0x0 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x87c6, gbc.sp());
        EXPECT(0x3e96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x8684));
        // 74 01BE
        gbc.setState(0x9f85, 0x1177, 0x64e0, 0xc56e, 0x1b32, 0x94bf, 0x1, 0x1);
        gbc.writeMem(0x94bf, { 0x0 });
        gbc.writeMem(0x9f85, { 0x74 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x1177, gbc.sp());
        EXPECT(0x9f86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x94bf));
        EXPECT(0x74, gbc.readMem(0x9f85));
        // 74 01C0
        gbc.setState(0x6b0, 0x9777, 0x5ca0, 0xa878, 0xcdd8, 0x8789, 0x0, 0x1);
        gbc.writeMem(0x6b0, { 0x74 });
        gbc.writeMem(0x8789, { 0x0 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x9777, gbc.sp());
        EXPECT(0x6b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x8789));
        // 74 01C1
        gbc.setState(0x72ac, 0x696, 0xc830, 0xcfaa, 0xb3c9, 0xba28, 0x0, 0x1);
        gbc.writeMem(0x72ac, { 0x74 });
        gbc.writeMem(0xba28, { 0x0 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x696, gbc.sp());
        EXPECT(0x72ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0xba28));
        // 74 01C3
        gbc.setState(0x3bcd, 0xce40, 0x2b10, 0x95e5, 0x79c3, 0xb4bd, 0x0, 0x0);
        gbc.writeMem(0x3bcd, { 0x74 });
        gbc.writeMem(0xb4bd, { 0x0 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xce40, gbc.sp());
        EXPECT(0x3bce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0xb4bd));
        // 74 01C4
        gbc.setState(0x2016, 0x2ec1, 0xf90, 0xabcc, 0xbb88, 0xf79a, 0x0, 0x1);
        gbc.writeMem(0x2016, { 0x74 });
        gbc.writeMem(0xf79a, { 0x0 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x2ec1, gbc.sp());
        EXPECT(0x2017, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xf79a));
        // 74 01C5
        gbc.setState(0x4e54, 0x8b47, 0x4fe0, 0x3e68, 0x4c7b, 0xf6b7, 0x1, 0x0);
        gbc.writeMem(0x4e54, { 0x74 });
        gbc.writeMem(0xf6b7, { 0x0 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x8b47, gbc.sp());
        EXPECT(0x4e55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf6, gbc.readMem(0xf6b7));
        // 74 01C6
        gbc.setState(0x7d0d, 0x5ffe, 0xe0c0, 0x828c, 0x5ff0, 0xc399, 0x0, 0x1);
        gbc.writeMem(0x7d0d, { 0x74 });
        gbc.writeMem(0xc399, { 0x0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x5ffe, gbc.sp());
        EXPECT(0x7d0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xc399));
        // 74 01C9
        gbc.setState(0xd791, 0x6525, 0x5050, 0xe250, 0x60db, 0x978a, 0x0, 0x0);
        gbc.writeMem(0x978a, { 0x0 });
        gbc.writeMem(0xd791, { 0x74 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x6525, gbc.sp());
        EXPECT(0xd792, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x978a));
        EXPECT(0x74, gbc.readMem(0xd791));
        // 74 01CA
        gbc.setState(0xe6a2, 0xa2c8, 0x2620, 0x19af, 0x3256, 0x9fea, 0x1, 0x0);
        gbc.writeMem(0x9fea, { 0x0 });
        gbc.writeMem(0xe6a2, { 0x74 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xa2c8, gbc.sp());
        EXPECT(0xe6a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x9fea));
        EXPECT(0x74, gbc.readMem(0xe6a2));
        // 74 01CC
        gbc.setState(0x79fa, 0x8edc, 0x8d90, 0x3c5f, 0xd5f, 0xf04e, 0x0, 0x1);
        gbc.writeMem(0x79fa, { 0x74 });
        gbc.writeMem(0xf04e, { 0x0 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x8edc, gbc.sp());
        EXPECT(0x79fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xf04e));
        // 74 01CD
        gbc.setState(0x5281, 0x7351, 0x93b0, 0x4b92, 0xe6e2, 0xfce9, 0x1, 0x0);
        gbc.writeMem(0x5281, { 0x74 });
        gbc.writeMem(0xfce9, { 0x0 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x7351, gbc.sp());
        EXPECT(0x5282, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfc, gbc.readMem(0xfce9));
        // 74 01CF
        gbc.setState(0x225d, 0xbdec, 0xc6b0, 0x6721, 0x13ea, 0xde5f, 0x0, 0x1);
        gbc.writeMem(0x225d, { 0x74 });
        gbc.writeMem(0xde5f, { 0x0 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xbdec, gbc.sp());
        EXPECT(0x225e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0xde5f));
        // 74 01D0
        gbc.setState(0x824b, 0x7b40, 0x6730, 0x8a45, 0xcbfb, 0xe6f7, 0x1, 0x0);
        gbc.writeMem(0x824b, { 0x74 });
        gbc.writeMem(0xe6f7, { 0x0 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x7b40, gbc.sp());
        EXPECT(0x824c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0x824b));
        EXPECT(0xe6, gbc.readMem(0xe6f7));
        // 74 01D1
        gbc.setState(0x7961, 0xc7e1, 0x1b70, 0xa3ce, 0xe256, 0xe152, 0x0, 0x1);
        gbc.writeMem(0x7961, { 0x74 });
        gbc.writeMem(0xe152, { 0x0 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xc7e1, gbc.sp());
        EXPECT(0x7962, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xe152));
        // 74 01D2
        gbc.setState(0xbf66, 0x44f7, 0xbc50, 0x2380, 0x16f2, 0xfa98, 0x0, 0x1);
        gbc.writeMem(0xbf66, { 0x74 });
        gbc.writeMem(0xfa98, { 0x0 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x44f7, gbc.sp());
        EXPECT(0xbf67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xbf66));
        EXPECT(0xfa, gbc.readMem(0xfa98));
        // 74 01D3
        gbc.setState(0xa60b, 0x4282, 0x3940, 0x7f13, 0xdbe, 0x9538, 0x0, 0x1);
        gbc.writeMem(0x9538, { 0x0 });
        gbc.writeMem(0xa60b, { 0x74 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x4282, gbc.sp());
        EXPECT(0xa60c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x9538));
        EXPECT(0x74, gbc.readMem(0xa60b));
        // 74 01D5
        gbc.setState(0x481b, 0x47c1, 0xc060, 0x7d17, 0x115, 0xa00f, 0x1, 0x0);
        gbc.writeMem(0x481b, { 0x74 });
        gbc.writeMem(0xa00f, { 0x0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x47c1, gbc.sp());
        EXPECT(0x481c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xa00f));
        // 74 01D8
        gbc.setState(0x5bf3, 0xbfee, 0xd480, 0x25d, 0xfdb4, 0x8a54, 0x1, 0x1);
        gbc.writeMem(0x5bf3, { 0x74 });
        gbc.writeMem(0x8a54, { 0x0 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xbfee, gbc.sp());
        EXPECT(0x5bf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x8a54));
        // 74 01DA
        gbc.setState(0x86c1, 0xffe9, 0x7b70, 0x62de, 0xe9d0, 0xdcb0, 0x0, 0x1);
        gbc.writeMem(0x86c1, { 0x74 });
        gbc.writeMem(0xdcb0, { 0x0 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xffe9, gbc.sp());
        EXPECT(0x86c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0x86c1));
        EXPECT(0xdc, gbc.readMem(0xdcb0));
        // 74 01E0
        gbc.setState(0x8ee7, 0xcf3c, 0x1cb0, 0x5f32, 0x5222, 0x8652, 0x1, 0x1);
        gbc.writeMem(0x8652, { 0x0 });
        gbc.writeMem(0x8ee7, { 0x74 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xcf3c, gbc.sp());
        EXPECT(0x8ee8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x8652));
        EXPECT(0x74, gbc.readMem(0x8ee7));
        // 74 01E1
        gbc.setState(0xd25e, 0xb2c1, 0x2bf0, 0x1d7f, 0xb663, 0xf57a, 0x1, 0x0);
        gbc.writeMem(0xd25e, { 0x74 });
        gbc.writeMem(0xf57a, { 0x0 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xb2c1, gbc.sp());
        EXPECT(0xd25f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xd25e));
        EXPECT(0xf5, gbc.readMem(0xf57a));
        // 74 01E2
        gbc.setState(0x30cd, 0xe53, 0xe970, 0x3e92, 0x6222, 0xfd43, 0x1, 0x1);
        gbc.writeMem(0x30cd, { 0x74 });
        gbc.writeMem(0xfd43, { 0x0 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xe53, gbc.sp());
        EXPECT(0x30ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0xfd43));
        // 74 01E3
        gbc.setState(0x4a4f, 0xa03a, 0xef00, 0x37d2, 0xf4c6, 0xa735, 0x1, 0x0);
        gbc.writeMem(0x4a4f, { 0x74 });
        gbc.writeMem(0xa735, { 0x0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xa03a, gbc.sp());
        EXPECT(0x4a50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xa735));
        // 74 01E8
        gbc.setState(0x506c, 0xad9e, 0xbf60, 0x8570, 0x5723, 0x8e9f, 0x0, 0x0);
        gbc.writeMem(0x506c, { 0x74 });
        gbc.writeMem(0x8e9f, { 0x0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xad9e, gbc.sp());
        EXPECT(0x506d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0x8e9f));
        // 74 01E9
        gbc.setState(0xdaf7, 0xed11, 0x91f0, 0x33a8, 0x6fa, 0x9d86, 0x0, 0x0);
        gbc.writeMem(0x9d86, { 0x0 });
        gbc.writeMem(0xdaf7, { 0x74 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xed11, gbc.sp());
        EXPECT(0xdaf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x9d86));
        EXPECT(0x74, gbc.readMem(0xdaf7));
        // 74 01EB
        gbc.setState(0x727f, 0xbbf1, 0x7140, 0xdeeb, 0x62a5, 0x8033, 0x1, 0x1);
        gbc.writeMem(0x727f, { 0x74 });
        gbc.writeMem(0x8033, { 0x0 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xbbf1, gbc.sp());
        EXPECT(0x7280, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x8033));
        // 74 01EC
        gbc.setState(0xb846, 0x4d47, 0x7030, 0x9b5f, 0x5a0d, 0xb6f8, 0x0, 0x1);
        gbc.writeMem(0xb6f8, { 0x0 });
        gbc.writeMem(0xb846, { 0x74 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x4d47, gbc.sp());
        EXPECT(0xb847, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xb6f8));
        EXPECT(0x74, gbc.readMem(0xb846));
        // 74 01ED
        gbc.setState(0x8c50, 0x271e, 0x6b90, 0x6862, 0x21e6, 0xaa14, 0x0, 0x0);
        gbc.writeMem(0x8c50, { 0x74 });
        gbc.writeMem(0xaa14, { 0x0 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x271e, gbc.sp());
        EXPECT(0x8c51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0x8c50));
        EXPECT(0xaa, gbc.readMem(0xaa14));
        // 74 01EE
        gbc.setState(0x9555, 0xbe1c, 0x3ce0, 0x849b, 0x5632, 0x9068, 0x1, 0x0);
        gbc.writeMem(0x9068, { 0x0 });
        gbc.writeMem(0x9555, { 0x74 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xbe1c, gbc.sp());
        EXPECT(0x9556, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0x9068));
        EXPECT(0x74, gbc.readMem(0x9555));
        // 74 01F1
        gbc.setState(0x8632, 0xed10, 0xd3a0, 0x6999, 0x5fe8, 0xbbf5, 0x1, 0x0);
        gbc.writeMem(0x8632, { 0x74 });
        gbc.writeMem(0xbbf5, { 0x0 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xed10, gbc.sp());
        EXPECT(0x8633, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0x8632));
        EXPECT(0xbb, gbc.readMem(0xbbf5));
        // 74 01F3
        gbc.setState(0x7fe4, 0x4c44, 0x5f80, 0x7d68, 0x6f50, 0xcb5f, 0x0, 0x1);
        gbc.writeMem(0x7fe4, { 0x74 });
        gbc.writeMem(0xcb5f, { 0x0 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x4c44, gbc.sp());
        EXPECT(0x7fe5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb5f));
        // 74 01F4
        gbc.setState(0xa47, 0x5b3c, 0x45f0, 0x9cff, 0x1a94, 0xc2b0, 0x1, 0x1);
        gbc.writeMem(0xa47, { 0x74 });
        gbc.writeMem(0xc2b0, { 0x0 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x5b3c, gbc.sp());
        EXPECT(0xa48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xc2b0));
        // 74 01F5
        gbc.setState(0x863d, 0xd9e9, 0x3010, 0x9c57, 0x6906, 0xd7a3, 0x1, 0x1);
        gbc.writeMem(0x863d, { 0x74 });
        gbc.writeMem(0xd7a3, { 0x0 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xd9e9, gbc.sp());
        EXPECT(0x863e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0x863d));
        EXPECT(0xd7, gbc.readMem(0xd7a3));
        // 74 01F7
        gbc.setState(0x384, 0x20f8, 0xec00, 0xafb5, 0xd918, 0xea36, 0x0, 0x1);
        gbc.writeMem(0x384, { 0x74 });
        gbc.writeMem(0xea36, { 0x0 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x20f8, gbc.sp());
        EXPECT(0x385, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0xea36));
        // 74 01FA
        gbc.setState(0xad40, 0x89e8, 0x3dc0, 0xa12e, 0xfefe, 0x9566, 0x1, 0x0);
        gbc.writeMem(0x9566, { 0x0 });
        gbc.writeMem(0xad40, { 0x74 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x89e8, gbc.sp());
        EXPECT(0xad41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x9566));
        EXPECT(0x74, gbc.readMem(0xad40));
        // 74 01FB
        gbc.setState(0xce77, 0x2f5b, 0x4690, 0x4141, 0xb87b, 0xb6c7, 0x0, 0x1);
        gbc.writeMem(0xb6c7, { 0x0 });
        gbc.writeMem(0xce77, { 0x74 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x2f5b, gbc.sp());
        EXPECT(0xce78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xb6c7));
        EXPECT(0x74, gbc.readMem(0xce77));
        // 74 01FC
        gbc.setState(0x44ba, 0xf31d, 0xbb70, 0x4212, 0x12c2, 0xe317, 0x0, 0x0);
        gbc.writeMem(0x44ba, { 0x74 });
        gbc.writeMem(0xe317, { 0x0 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xf31d, gbc.sp());
        EXPECT(0x44bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0xe317));
        // 74 01FD
        gbc.setState(0x6808, 0xf41, 0x21d0, 0xfead, 0x4762, 0xbf06, 0x0, 0x1);
        gbc.writeMem(0x6808, { 0x74 });
        gbc.writeMem(0xbf06, { 0x0 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xf41, gbc.sp());
        EXPECT(0x6809, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xbf06));
        // 74 0200
        gbc.setState(0x7f8e, 0x295b, 0xa800, 0x831c, 0xc465, 0x8255, 0x1, 0x0);
        gbc.writeMem(0x7f8e, { 0x74 });
        gbc.writeMem(0x8255, { 0x0 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x295b, gbc.sp());
        EXPECT(0x7f8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x8255));
        // 74 0203
        gbc.setState(0x5736, 0x1d77, 0xca80, 0x7779, 0x53e6, 0x90f3, 0x0, 0x0);
        gbc.writeMem(0x5736, { 0x74 });
        gbc.writeMem(0x90f3, { 0x0 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x1d77, gbc.sp());
        EXPECT(0x5737, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0x90f3));
        // 74 0204
        gbc.setState(0x7ed8, 0xbbd0, 0xc70, 0x5fe2, 0xbba4, 0xa443, 0x1, 0x0);
        gbc.writeMem(0x7ed8, { 0x74 });
        gbc.writeMem(0xa443, { 0x0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xbbd0, gbc.sp());
        EXPECT(0x7ed9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xa443));
        // 74 0205
        gbc.setState(0x9b61, 0x1c21, 0x7c0, 0x7429, 0x6f1a, 0xfebf, 0x1, 0x0);
        gbc.writeMem(0x9b61, { 0x74 });
        gbc.writeMem(0xfebf, { 0x0 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x1c21, gbc.sp());
        EXPECT(0x9b62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0x9b61));
        EXPECT(0xfe, gbc.readMem(0xfebf));
        // 74 0208
        gbc.setState(0xe86a, 0xfcd4, 0x1b60, 0x12f9, 0x9377, 0xb2c1, 0x0, 0x0);
        gbc.writeMem(0xb2c1, { 0x0 });
        gbc.writeMem(0xe86a, { 0x74 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xfcd4, gbc.sp());
        EXPECT(0xe86b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xb2c1));
        EXPECT(0x74, gbc.readMem(0xe86a));
        // 74 0209
        gbc.setState(0xb53e, 0x8d3d, 0xa600, 0xcd7c, 0xc75b, 0xe72f, 0x1, 0x0);
        gbc.writeMem(0xb53e, { 0x74 });
        gbc.writeMem(0xe72f, { 0x0 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x8d3d, gbc.sp());
        EXPECT(0xb53f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xb53e));
        EXPECT(0xe7, gbc.readMem(0xe72f));
        // 74 020B
        gbc.setState(0x93dc, 0xb692, 0xd560, 0x81c9, 0x5c99, 0xc260, 0x1, 0x1);
        gbc.writeMem(0x93dc, { 0x74 });
        gbc.writeMem(0xc260, { 0x0 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xb692, gbc.sp());
        EXPECT(0x93dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0x93dc));
        EXPECT(0xc2, gbc.readMem(0xc260));
        // 74 020C
        gbc.setState(0x2ad9, 0x825, 0xec00, 0x1ccc, 0xd4e, 0xcadb, 0x0, 0x1);
        gbc.writeMem(0x2ad9, { 0x74 });
        gbc.writeMem(0xcadb, { 0x0 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x825, gbc.sp());
        EXPECT(0x2ada, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0xcadb));
        // 74 020D
        gbc.setState(0x9523, 0xadf8, 0x9630, 0x718f, 0xde8b, 0x9ba0, 0x0, 0x1);
        gbc.writeMem(0x9523, { 0x74 });
        gbc.writeMem(0x9ba0, { 0x0 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xadf8, gbc.sp());
        EXPECT(0x9524, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0x9523));
        EXPECT(0x9b, gbc.readMem(0x9ba0));
        // 74 020E
        gbc.setState(0x2410, 0x4dcd, 0x45e0, 0x870f, 0x7d27, 0xddc8, 0x0, 0x0);
        gbc.writeMem(0x2410, { 0x74 });
        gbc.writeMem(0xddc8, { 0x0 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x4dcd, gbc.sp());
        EXPECT(0x2411, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0xddc8));
        // 74 0210
        gbc.setState(0xcef8, 0x4e1c, 0xd510, 0xa794, 0x5c6f, 0xc10c, 0x1, 0x0);
        gbc.writeMem(0xc10c, { 0x0 });
        gbc.writeMem(0xcef8, { 0x74 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x4e1c, gbc.sp());
        EXPECT(0xcef9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xc10c));
        EXPECT(0x74, gbc.readMem(0xcef8));
        // 74 0211
        gbc.setState(0xb2b2, 0x1e12, 0xe320, 0x17d5, 0x258, 0x8ef2, 0x0, 0x1);
        gbc.writeMem(0x8ef2, { 0x0 });
        gbc.writeMem(0xb2b2, { 0x74 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x1e12, gbc.sp());
        EXPECT(0xb2b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0x8ef2));
        EXPECT(0x74, gbc.readMem(0xb2b2));
        // 74 0214
        gbc.setState(0x9628, 0x9aed, 0x1950, 0x5ad1, 0xb20c, 0xb4dd, 0x0, 0x1);
        gbc.writeMem(0x9628, { 0x74 });
        gbc.writeMem(0xb4dd, { 0x0 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x9aed, gbc.sp());
        EXPECT(0x9629, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0x9628));
        EXPECT(0xb4, gbc.readMem(0xb4dd));
        // 74 0215
        gbc.setState(0x1438, 0x3612, 0x14d0, 0x918d, 0xd651, 0xd415, 0x0, 0x0);
        gbc.writeMem(0x1438, { 0x74 });
        gbc.writeMem(0xd415, { 0x0 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x3612, gbc.sp());
        EXPECT(0x1439, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xd415));
        // 74 0216
        gbc.setState(0x54db, 0xd00, 0x6b50, 0xaf5e, 0x1926, 0xcd10, 0x0, 0x0);
        gbc.writeMem(0x54db, { 0x74 });
        gbc.writeMem(0xcd10, { 0x0 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xd00, gbc.sp());
        EXPECT(0x54dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0xcd10));
        // 74 021C
        gbc.setState(0x8992, 0xb604, 0xedc0, 0xcf99, 0xb60e, 0xb903, 0x0, 0x0);
        gbc.writeMem(0x8992, { 0x74 });
        gbc.writeMem(0xb903, { 0x0 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xb604, gbc.sp());
        EXPECT(0x8993, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0x8992));
        EXPECT(0xb9, gbc.readMem(0xb903));
        // 74 021D
        gbc.setState(0xdfb1, 0xfbf3, 0x2630, 0xcacd, 0x67fd, 0xba64, 0x1, 0x1);
        gbc.writeMem(0xba64, { 0x0 });
        gbc.writeMem(0xdfb1, { 0x74 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xfbf3, gbc.sp());
        EXPECT(0xdfb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0xba64));
        EXPECT(0x74, gbc.readMem(0xdfb1));
        // 74 021E
        gbc.setState(0x246a, 0x3c5d, 0x8af0, 0x4fc7, 0x1a54, 0xbceb, 0x1, 0x1);
        gbc.writeMem(0x246a, { 0x74 });
        gbc.writeMem(0xbceb, { 0x0 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x3c5d, gbc.sp());
        EXPECT(0x246b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xbceb));
        // 74 021F
        gbc.setState(0x8c1e, 0x3e4, 0x2500, 0xe1c9, 0x76c8, 0xe793, 0x0, 0x0);
        gbc.writeMem(0x8c1e, { 0x74 });
        gbc.writeMem(0xe793, { 0x0 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x3e4, gbc.sp());
        EXPECT(0x8c1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0x8c1e));
        EXPECT(0xe7, gbc.readMem(0xe793));
        // 74 0222
        gbc.setState(0xe1f, 0x76bd, 0x19f0, 0xfd77, 0x19bf, 0xb8c5, 0x0, 0x1);
        gbc.writeMem(0xe1f, { 0x74 });
        gbc.writeMem(0xb8c5, { 0x0 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x76bd, gbc.sp());
        EXPECT(0xe20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0xb8c5));
        // 74 0225
        gbc.setState(0x5362, 0x872d, 0xd1b0, 0x31e3, 0x85b0, 0xa1cc, 0x1, 0x0);
        gbc.writeMem(0x5362, { 0x74 });
        gbc.writeMem(0xa1cc, { 0x0 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x872d, gbc.sp());
        EXPECT(0x5363, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xa1cc));
        // 74 0226
        gbc.setState(0xeddd, 0x90eb, 0xf860, 0x56a8, 0x3e37, 0xe6f6, 0x1, 0x0);
        gbc.writeMem(0xe6f6, { 0x0 });
        gbc.writeMem(0xeddd, { 0x74 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x90eb, gbc.sp());
        EXPECT(0xedde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xe6f6));
        EXPECT(0x74, gbc.readMem(0xeddd));
        // 74 022C
        gbc.setState(0xa1dd, 0xef66, 0x2cc0, 0x9f6, 0xc365, 0xa8ad, 0x0, 0x1);
        gbc.writeMem(0xa1dd, { 0x74 });
        gbc.writeMem(0xa8ad, { 0x0 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xef66, gbc.sp());
        EXPECT(0xa1de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xa1dd));
        EXPECT(0xa8, gbc.readMem(0xa8ad));
        // 74 022E
        gbc.setState(0xe426, 0xb77c, 0x5ab0, 0x7b9c, 0xeef9, 0xfcb1, 0x1, 0x1);
        gbc.writeMem(0xe426, { 0x74 });
        gbc.writeMem(0xfcb1, { 0x0 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xb77c, gbc.sp());
        EXPECT(0xe427, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xe426));
        EXPECT(0xfc, gbc.readMem(0xfcb1));
        // 74 0230
        gbc.setState(0xabdc, 0x84eb, 0x6270, 0x6bcf, 0x880d, 0x9b4f, 0x1, 0x0);
        gbc.writeMem(0x9b4f, { 0x0 });
        gbc.writeMem(0xabdc, { 0x74 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x84eb, gbc.sp());
        EXPECT(0xabdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x9b4f));
        EXPECT(0x74, gbc.readMem(0xabdc));
        // 74 0231
        gbc.setState(0xa678, 0xdc90, 0x2f70, 0xb749, 0x405b, 0xb415, 0x0, 0x0);
        gbc.writeMem(0xa678, { 0x74 });
        gbc.writeMem(0xb415, { 0x0 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xdc90, gbc.sp());
        EXPECT(0xa679, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xa678));
        EXPECT(0xb4, gbc.readMem(0xb415));
        // 74 0233
        gbc.setState(0x9602, 0x837c, 0x40b0, 0xbc48, 0x6cec, 0xd88f, 0x0, 0x1);
        gbc.writeMem(0x9602, { 0x74 });
        gbc.writeMem(0xd88f, { 0x0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x837c, gbc.sp());
        EXPECT(0x9603, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0x9602));
        EXPECT(0xd8, gbc.readMem(0xd88f));
        // 74 0234
        gbc.setState(0xacc4, 0x8a34, 0x8470, 0x29ee, 0xbc5f, 0xe202, 0x1, 0x0);
        gbc.writeMem(0xacc4, { 0x74 });
        gbc.writeMem(0xe202, { 0x0 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x8a34, gbc.sp());
        EXPECT(0xacc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xacc4));
        EXPECT(0xe2, gbc.readMem(0xe202));
        // 74 0237
        gbc.setState(0xc7f4, 0x9418, 0x81f0, 0x7f7, 0xfe4e, 0x9a6a, 0x0, 0x0);
        gbc.writeMem(0x9a6a, { 0x0 });
        gbc.writeMem(0xc7f4, { 0x74 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x9418, gbc.sp());
        EXPECT(0xc7f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x9a6a));
        EXPECT(0x74, gbc.readMem(0xc7f4));
        // 74 0238
        gbc.setState(0x6f33, 0xa7ad, 0x9be0, 0xe229, 0x2a54, 0xac4e, 0x1, 0x0);
        gbc.writeMem(0x6f33, { 0x74 });
        gbc.writeMem(0xac4e, { 0x0 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xa7ad, gbc.sp());
        EXPECT(0x6f34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xac4e));
        // 74 023A
        gbc.setState(0x8e80, 0xc9a6, 0x7f90, 0x628c, 0x96f1, 0xc99f, 0x0, 0x0);
        gbc.writeMem(0x8e80, { 0x74 });
        gbc.writeMem(0xc99f, { 0x0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xc9a6, gbc.sp());
        EXPECT(0x8e81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0x8e80));
        EXPECT(0xc9, gbc.readMem(0xc99f));
        // 74 0240
        gbc.setState(0x6b56, 0x783b, 0x18b0, 0xbe89, 0x789e, 0x94c5, 0x1, 0x1);
        gbc.writeMem(0x6b56, { 0x74 });
        gbc.writeMem(0x94c5, { 0x0 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x783b, gbc.sp());
        EXPECT(0x6b57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x94c5));
        // 74 0241
        gbc.setState(0xbd2f, 0x77fb, 0x1e00, 0x726f, 0xf18d, 0xdf22, 0x1, 0x1);
        gbc.writeMem(0xbd2f, { 0x74 });
        gbc.writeMem(0xdf22, { 0x0 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x77fb, gbc.sp());
        EXPECT(0xbd30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xbd2f));
        EXPECT(0xdf, gbc.readMem(0xdf22));
        // 74 0244
        gbc.setState(0x821a, 0x8e12, 0xb030, 0xff2f, 0x7dc1, 0xbc67, 0x1, 0x0);
        gbc.writeMem(0x821a, { 0x74 });
        gbc.writeMem(0xbc67, { 0x0 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x8e12, gbc.sp());
        EXPECT(0x821b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0x821a));
        EXPECT(0xbc, gbc.readMem(0xbc67));
        // 74 0248
        gbc.setState(0x62e, 0xcc42, 0x1050, 0x7777, 0x324b, 0xa8dc, 0x0, 0x1);
        gbc.writeMem(0x62e, { 0x74 });
        gbc.writeMem(0xa8dc, { 0x0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xcc42, gbc.sp());
        EXPECT(0x62f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa8, gbc.readMem(0xa8dc));
        // 74 0249
        gbc.setState(0x4981, 0x6f95, 0xe610, 0xa4a5, 0x6dbe, 0xa732, 0x1, 0x1);
        gbc.writeMem(0x4981, { 0x74 });
        gbc.writeMem(0xa732, { 0x0 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x6f95, gbc.sp());
        EXPECT(0x4982, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xa732));
        // 74 024C
        gbc.setState(0x8abc, 0xc021, 0xadb0, 0x5240, 0x9dff, 0x8055, 0x0, 0x1);
        gbc.writeMem(0x8055, { 0x0 });
        gbc.writeMem(0x8abc, { 0x74 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xc021, gbc.sp());
        EXPECT(0x8abd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x8055));
        EXPECT(0x74, gbc.readMem(0x8abc));
        // 74 024E
        gbc.setState(0xe7cf, 0x943c, 0x940, 0xed54, 0x8354, 0xd49a, 0x1, 0x1);
        gbc.writeMem(0xd49a, { 0x0 });
        gbc.writeMem(0xe7cf, { 0x74 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x943c, gbc.sp());
        EXPECT(0xe7d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xd49a));
        EXPECT(0x74, gbc.readMem(0xe7cf));
        // 74 0251
        gbc.setState(0x774e, 0x446, 0x240, 0x15dd, 0x6c32, 0xa7d2, 0x0, 0x1);
        gbc.writeMem(0x774e, { 0x74 });
        gbc.writeMem(0xa7d2, { 0x0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x446, gbc.sp());
        EXPECT(0x774f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xa7d2));
        // 74 0252
        gbc.setState(0x7f67, 0xe4d3, 0xd240, 0x42d0, 0xf541, 0x8f72, 0x0, 0x1);
        gbc.writeMem(0x7f67, { 0x74 });
        gbc.writeMem(0x8f72, { 0x0 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xe4d3, gbc.sp());
        EXPECT(0x7f68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x8f72));
        // 74 0256
        gbc.setState(0x2c74, 0x799a, 0xe190, 0x577b, 0xc826, 0xd732, 0x1, 0x1);
        gbc.writeMem(0x2c74, { 0x74 });
        gbc.writeMem(0xd732, { 0x0 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x799a, gbc.sp());
        EXPECT(0x2c75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0xd732));
        // 74 0257
        gbc.setState(0xd95d, 0x8930, 0x6260, 0x3a85, 0x6add, 0x92cf, 0x1, 0x0);
        gbc.writeMem(0x92cf, { 0x0 });
        gbc.writeMem(0xd95d, { 0x74 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x8930, gbc.sp());
        EXPECT(0xd95e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x92cf));
        EXPECT(0x74, gbc.readMem(0xd95d));
        // 74 0258
        gbc.setState(0x2fd4, 0xc24c, 0xa120, 0x6020, 0x8a4f, 0x87b0, 0x1, 0x0);
        gbc.writeMem(0x2fd4, { 0x74 });
        gbc.writeMem(0x87b0, { 0x0 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xc24c, gbc.sp());
        EXPECT(0x2fd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x87b0));
        // 74 0259
        gbc.setState(0x8bb8, 0x1978, 0x7ac0, 0xacb, 0x468e, 0x87ef, 0x1, 0x1);
        gbc.writeMem(0x87ef, { 0x0 });
        gbc.writeMem(0x8bb8, { 0x74 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x1978, gbc.sp());
        EXPECT(0x8bb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x87ef));
        EXPECT(0x74, gbc.readMem(0x8bb8));
        // 74 025D
        gbc.setState(0x86a9, 0x3564, 0x3da0, 0x3763, 0x7e71, 0xaab1, 0x0, 0x0);
        gbc.writeMem(0x86a9, { 0x74 });
        gbc.writeMem(0xaab1, { 0x0 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x3564, gbc.sp());
        EXPECT(0x86aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0x86a9));
        EXPECT(0xaa, gbc.readMem(0xaab1));
        // 74 025E
        gbc.setState(0xcf21, 0x7a9b, 0x4020, 0xe38, 0xabd5, 0x90a8, 0x0, 0x1);
        gbc.writeMem(0x90a8, { 0x0 });
        gbc.writeMem(0xcf21, { 0x74 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x7a9b, gbc.sp());
        EXPECT(0xcf22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0x90a8));
        EXPECT(0x74, gbc.readMem(0xcf21));
        // 74 0260
        gbc.setState(0xe68d, 0x5bcb, 0xae20, 0x1045, 0xefa4, 0xecd8, 0x1, 0x1);
        gbc.writeMem(0xe68d, { 0x74 });
        gbc.writeMem(0xecd8, { 0x0 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x5bcb, gbc.sp());
        EXPECT(0xe68e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xe68d));
        EXPECT(0xec, gbc.readMem(0xecd8));
        // 74 0266
        gbc.setState(0xb98e, 0xfbe7, 0x4610, 0x1130, 0x342a, 0x8541, 0x1, 0x1);
        gbc.writeMem(0x8541, { 0x0 });
        gbc.writeMem(0xb98e, { 0x74 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xfbe7, gbc.sp());
        EXPECT(0xb98f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x8541));
        EXPECT(0x74, gbc.readMem(0xb98e));
        // 74 026C
        gbc.setState(0x5782, 0xaa90, 0x23b0, 0xca2d, 0xe878, 0xfa2d, 0x1, 0x0);
        gbc.writeMem(0x5782, { 0x74 });
        gbc.writeMem(0xfa2d, { 0x0 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xaa90, gbc.sp());
        EXPECT(0x5783, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xfa2d));
        // 74 0270
        gbc.setState(0xec7a, 0xb921, 0xa4a0, 0xd3bd, 0xc1ce, 0x9fba, 0x0, 0x0);
        gbc.writeMem(0x9fba, { 0x0 });
        gbc.writeMem(0xec7a, { 0x74 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xb921, gbc.sp());
        EXPECT(0xec7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x9fba));
        EXPECT(0x74, gbc.readMem(0xec7a));
        // 74 0272
        gbc.setState(0x3cb0, 0x4b12, 0x9a30, 0x864c, 0x417f, 0xa380, 0x1, 0x1);
        gbc.writeMem(0x3cb0, { 0x74 });
        gbc.writeMem(0xa380, { 0x0 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x4b12, gbc.sp());
        EXPECT(0x3cb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xa380));
        // 74 0275
        gbc.setState(0x4322, 0x22b1, 0x7480, 0x5720, 0x9a33, 0xa4db, 0x1, 0x1);
        gbc.writeMem(0x4322, { 0x74 });
        gbc.writeMem(0xa4db, { 0x0 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x22b1, gbc.sp());
        EXPECT(0x4323, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xa4db));
        // 74 0276
        gbc.setState(0xc972, 0x81a7, 0x8f10, 0x3a87, 0xe680, 0xc4ff, 0x0, 0x1);
        gbc.writeMem(0xc4ff, { 0x0 });
        gbc.writeMem(0xc972, { 0x74 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x81a7, gbc.sp());
        EXPECT(0xc973, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc4, gbc.readMem(0xc4ff));
        EXPECT(0x74, gbc.readMem(0xc972));
        // 74 0278
        gbc.setState(0x5baa, 0x9b4e, 0x8c00, 0xabd, 0x1001, 0x80c7, 0x0, 0x1);
        gbc.writeMem(0x5baa, { 0x74 });
        gbc.writeMem(0x80c7, { 0x0 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x9b4e, gbc.sp());
        EXPECT(0x5bab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x80c7));
        // 74 027A
        gbc.setState(0x7be9, 0xe88b, 0xcbe0, 0x9983, 0x3bbf, 0xe5f7, 0x1, 0x1);
        gbc.writeMem(0x7be9, { 0x74 });
        gbc.writeMem(0xe5f7, { 0x0 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xe88b, gbc.sp());
        EXPECT(0x7bea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xe5f7));
        // 74 027C
        gbc.setState(0xdb9e, 0xd6a4, 0xf110, 0x7e7f, 0x8c9d, 0x88d9, 0x1, 0x1);
        gbc.writeMem(0x88d9, { 0x0 });
        gbc.writeMem(0xdb9e, { 0x74 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xd6a4, gbc.sp());
        EXPECT(0xdb9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x88d9));
        EXPECT(0x74, gbc.readMem(0xdb9e));
        // 74 027D
        gbc.setState(0xd05e, 0xe834, 0x97a0, 0xfce9, 0xfead, 0xefe5, 0x0, 0x0);
        gbc.writeMem(0xd05e, { 0x74 });
        gbc.writeMem(0xefe5, { 0x0 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xe834, gbc.sp());
        EXPECT(0xd05f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xd05e));
        EXPECT(0xef, gbc.readMem(0xefe5));
        // 74 027E
        gbc.setState(0x9be3, 0xb0a5, 0x51f0, 0xa073, 0x2c3, 0xec2f, 0x0, 0x1);
        gbc.writeMem(0x9be3, { 0x74 });
        gbc.writeMem(0xec2f, { 0x0 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xb0a5, gbc.sp());
        EXPECT(0x9be4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0x9be3));
        EXPECT(0xec, gbc.readMem(0xec2f));
        // 74 0280
        gbc.setState(0xe3eb, 0xcb1f, 0x45e0, 0xa3ed, 0x202b, 0xf3d6, 0x0, 0x0);
        gbc.writeMem(0xe3eb, { 0x74 });
        gbc.writeMem(0xf3d6, { 0x0 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xcb1f, gbc.sp());
        EXPECT(0xe3ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xe3eb));
        EXPECT(0xf3, gbc.readMem(0xf3d6));
        // 74 0281
        gbc.setState(0x760e, 0x7cca, 0x4380, 0x13df, 0x8889, 0x969b, 0x0, 0x0);
        gbc.writeMem(0x760e, { 0x74 });
        gbc.writeMem(0x969b, { 0x0 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x7cca, gbc.sp());
        EXPECT(0x760f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0x969b));
        // 74 0284
        gbc.setState(0x8d67, 0xd821, 0xd0e0, 0x2bce, 0x4a7a, 0xc823, 0x0, 0x1);
        gbc.writeMem(0x8d67, { 0x74 });
        gbc.writeMem(0xc823, { 0x0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xd821, gbc.sp());
        EXPECT(0x8d68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0x8d67));
        EXPECT(0xc8, gbc.readMem(0xc823));
        // 74 0285
        gbc.setState(0x370e, 0x5263, 0x1050, 0x4f6c, 0x81d1, 0xfaca, 0x0, 0x0);
        gbc.writeMem(0x370e, { 0x74 });
        gbc.writeMem(0xfaca, { 0x0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x5263, gbc.sp());
        EXPECT(0x370f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xfaca));
        // 74 0286
        gbc.setState(0xbc5, 0x32ec, 0x3670, 0xd219, 0x12a4, 0xfd71, 0x0, 0x1);
        gbc.writeMem(0xbc5, { 0x74 });
        gbc.writeMem(0xfd71, { 0x0 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x32ec, gbc.sp());
        EXPECT(0xbc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0xfd71));
        // 74 0287
        gbc.setState(0x431f, 0x7099, 0xacf0, 0x319, 0xbaec, 0xe259, 0x1, 0x0);
        gbc.writeMem(0x431f, { 0x74 });
        gbc.writeMem(0xe259, { 0x0 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x7099, gbc.sp());
        EXPECT(0x4320, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xe259));
        // 74 0288
        gbc.setState(0xcf31, 0x4741, 0x6070, 0xae2a, 0x8139, 0xfc97, 0x0, 0x0);
        gbc.writeMem(0xcf31, { 0x74 });
        gbc.writeMem(0xfc97, { 0x0 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x4741, gbc.sp());
        EXPECT(0xcf32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xcf31));
        EXPECT(0xfc, gbc.readMem(0xfc97));
        // 74 028A
        gbc.setState(0xe505, 0x6f71, 0x7900, 0xafad, 0xae5d, 0xa3df, 0x1, 0x1);
        gbc.writeMem(0xa3df, { 0x0 });
        gbc.writeMem(0xe505, { 0x74 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x6f71, gbc.sp());
        EXPECT(0xe506, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xa3df));
        EXPECT(0x74, gbc.readMem(0xe505));
        // 74 028C
        gbc.setState(0xeff, 0x7f0f, 0x7fc0, 0x9671, 0xcdd1, 0x8cd9, 0x1, 0x1);
        gbc.writeMem(0xeff, { 0x74 });
        gbc.writeMem(0x8cd9, { 0x0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x7f0f, gbc.sp());
        EXPECT(0xf00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x8cd9));
        // 74 028D
        gbc.setState(0x7f5b, 0x24fd, 0xd640, 0xd9b3, 0x3ec4, 0xeedf, 0x0, 0x1);
        gbc.writeMem(0x7f5b, { 0x74 });
        gbc.writeMem(0xeedf, { 0x0 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x24fd, gbc.sp());
        EXPECT(0x7f5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0xeedf));
        // 74 028E
        gbc.setState(0x89c0, 0x5c87, 0x89e0, 0x6996, 0xa13, 0xbf2a, 0x1, 0x1);
        gbc.writeMem(0x89c0, { 0x74 });
        gbc.writeMem(0xbf2a, { 0x0 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x5c87, gbc.sp());
        EXPECT(0x89c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0x89c0));
        EXPECT(0xbf, gbc.readMem(0xbf2a));
        // 74 0290
        gbc.setState(0x22dc, 0x4a60, 0x3390, 0x81bd, 0x2edf, 0xceaf, 0x1, 0x1);
        gbc.writeMem(0x22dc, { 0x74 });
        gbc.writeMem(0xceaf, { 0x0 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x4a60, gbc.sp());
        EXPECT(0x22dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0xceaf));
        // 74 0294
        gbc.setState(0x24d5, 0x8aba, 0xce0, 0x86ba, 0xc4e9, 0xe15f, 0x0, 0x0);
        gbc.writeMem(0x24d5, { 0x74 });
        gbc.writeMem(0xe15f, { 0x0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x8aba, gbc.sp());
        EXPECT(0x24d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xe15f));
        // 74 0295
        gbc.setState(0x393, 0xd9c, 0xefd0, 0x8296, 0x6aa2, 0x8707, 0x0, 0x1);
        gbc.writeMem(0x393, { 0x74 });
        gbc.writeMem(0x8707, { 0x0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xd9c, gbc.sp());
        EXPECT(0x394, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x8707));
        // 74 0296
        gbc.setState(0xc084, 0x291c, 0xefd0, 0x38b0, 0x68c2, 0xa2f0, 0x0, 0x0);
        gbc.writeMem(0xa2f0, { 0x0 });
        gbc.writeMem(0xc084, { 0x74 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x291c, gbc.sp());
        EXPECT(0xc085, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xa2f0));
        EXPECT(0x74, gbc.readMem(0xc084));
        // 74 0298
        gbc.setState(0xa74e, 0xf921, 0x8240, 0x71fe, 0xd865, 0xd5d0, 0x1, 0x0);
        gbc.writeMem(0xa74e, { 0x74 });
        gbc.writeMem(0xd5d0, { 0x0 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xf921, gbc.sp());
        EXPECT(0xa74f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xa74e));
        EXPECT(0xd5, gbc.readMem(0xd5d0));
        // 74 0299
        gbc.setState(0x3035, 0x49c5, 0x3680, 0x1b97, 0xa9d8, 0xb632, 0x0, 0x0);
        gbc.writeMem(0x3035, { 0x74 });
        gbc.writeMem(0xb632, { 0x0 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x49c5, gbc.sp());
        EXPECT(0x3036, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xb632));
        // 74 029A
        gbc.setState(0x1a3b, 0x5f9c, 0xb4d0, 0xbf5e, 0x5397, 0xd17e, 0x1, 0x0);
        gbc.writeMem(0x1a3b, { 0x74 });
        gbc.writeMem(0xd17e, { 0x0 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x5f9c, gbc.sp());
        EXPECT(0x1a3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0xd17e));
        // 74 029B
        gbc.setState(0x5ffd, 0x6ad0, 0x3480, 0x78b2, 0x9c85, 0xf2fd, 0x0, 0x0);
        gbc.writeMem(0x5ffd, { 0x74 });
        gbc.writeMem(0xf2fd, { 0x0 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x6ad0, gbc.sp());
        EXPECT(0x5ffe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0xf2fd));
        // 74 029C
        gbc.setState(0x38ca, 0xb9e0, 0xee60, 0x3dbf, 0x297e, 0x886f, 0x1, 0x1);
        gbc.writeMem(0x38ca, { 0x74 });
        gbc.writeMem(0x886f, { 0x0 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xb9e0, gbc.sp());
        EXPECT(0x38cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x886f));
        // 74 029D
        gbc.setState(0xb5e3, 0x6b64, 0x120, 0x6c30, 0x1ef8, 0xa83d, 0x0, 0x0);
        gbc.writeMem(0xa83d, { 0x0 });
        gbc.writeMem(0xb5e3, { 0x74 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x6b64, gbc.sp());
        EXPECT(0xb5e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa8, gbc.readMem(0xa83d));
        EXPECT(0x74, gbc.readMem(0xb5e3));
        // 74 029E
        gbc.setState(0xb7c6, 0x52b, 0xddf0, 0xfba5, 0x35c0, 0xa22f, 0x0, 0x0);
        gbc.writeMem(0xa22f, { 0x0 });
        gbc.writeMem(0xb7c6, { 0x74 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x52b, gbc.sp());
        EXPECT(0xb7c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xa22f));
        EXPECT(0x74, gbc.readMem(0xb7c6));
        // 74 029F
        gbc.setState(0x7519, 0x4a97, 0x32a0, 0x803c, 0xc907, 0x8a01, 0x1, 0x0);
        gbc.writeMem(0x7519, { 0x74 });
        gbc.writeMem(0x8a01, { 0x0 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x4a97, gbc.sp());
        EXPECT(0x751a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x8a01));
        // 74 02A0
        gbc.setState(0x7982, 0xe439, 0xfcd0, 0x60f0, 0x9fa5, 0xc4c1, 0x0, 0x0);
        gbc.writeMem(0x7982, { 0x74 });
        gbc.writeMem(0xc4c1, { 0x0 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xe439, gbc.sp());
        EXPECT(0x7983, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc4, gbc.readMem(0xc4c1));
        // 74 02A1
        gbc.setState(0xc10, 0x1e77, 0xdf20, 0x7cb9, 0x372, 0x94ec, 0x0, 0x1);
        gbc.writeMem(0xc10, { 0x74 });
        gbc.writeMem(0x94ec, { 0x0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x1e77, gbc.sp());
        EXPECT(0xc11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x94ec));
        // 74 02A3
        gbc.setState(0xbbb, 0x105f, 0xebb0, 0xab86, 0x7918, 0xc1f9, 0x1, 0x0);
        gbc.writeMem(0xbbb, { 0x74 });
        gbc.writeMem(0xc1f9, { 0x0 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x105f, gbc.sp());
        EXPECT(0xbbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xc1f9));
        // 74 02A9
        gbc.setState(0xe46, 0x1f0f, 0xd180, 0x43fb, 0x6fb9, 0xc9b7, 0x1, 0x1);
        gbc.writeMem(0xe46, { 0x74 });
        gbc.writeMem(0xc9b7, { 0x0 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x1f0f, gbc.sp());
        EXPECT(0xe47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xc9b7));
        // 74 02AA
        gbc.setState(0x3f0f, 0xc2, 0x8e0, 0xbf18, 0xdd7c, 0xdd77, 0x0, 0x1);
        gbc.writeMem(0x3f0f, { 0x74 });
        gbc.writeMem(0xdd77, { 0x0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xc2, gbc.sp());
        EXPECT(0x3f10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0xdd77));
        // 74 02AB
        gbc.setState(0x2d99, 0xa179, 0x4f50, 0xe4fd, 0x3cca, 0x9ce9, 0x1, 0x0);
        gbc.writeMem(0x2d99, { 0x74 });
        gbc.writeMem(0x9ce9, { 0x0 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xa179, gbc.sp());
        EXPECT(0x2d9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x9ce9));
        // 74 02AC
        gbc.setState(0x10a, 0x73a6, 0xbc40, 0x4d51, 0x3bfa, 0xa56b, 0x0, 0x1);
        gbc.writeMem(0x10a, { 0x74 });
        gbc.writeMem(0xa56b, { 0x0 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x73a6, gbc.sp());
        EXPECT(0x10b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa5, gbc.readMem(0xa56b));
        // 74 02AF
        gbc.setState(0x3712, 0xf97a, 0xed0, 0xa0fa, 0xe2cd, 0xe0d1, 0x1, 0x1);
        gbc.writeMem(0x3712, { 0x74 });
        gbc.writeMem(0xe0d1, { 0x0 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xf97a, gbc.sp());
        EXPECT(0x3713, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xe0d1));
        // 74 02B1
        gbc.setState(0x4226, 0x82c6, 0xe620, 0x4771, 0x89e7, 0xac93, 0x0, 0x1);
        gbc.writeMem(0x4226, { 0x74 });
        gbc.writeMem(0xac93, { 0x0 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x82c6, gbc.sp());
        EXPECT(0x4227, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xac93));
        // 74 02B2
        gbc.setState(0x3aeb, 0x4f87, 0x9440, 0xc446, 0xf72d, 0x9d26, 0x1, 0x0);
        gbc.writeMem(0x3aeb, { 0x74 });
        gbc.writeMem(0x9d26, { 0x0 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x4f87, gbc.sp());
        EXPECT(0x3aec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x9d26));
        // 74 02B3
        gbc.setState(0x77e7, 0x1632, 0xcf0, 0x86f2, 0x4ffe, 0xaef3, 0x0, 0x0);
        gbc.writeMem(0x77e7, { 0x74 });
        gbc.writeMem(0xaef3, { 0x0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x1632, gbc.sp());
        EXPECT(0x77e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xae, gbc.readMem(0xaef3));
        // 74 02B8
        gbc.setState(0x7fb4, 0x665b, 0x8ae0, 0xf52f, 0xf9ac, 0xdf, 0x1, 0x0);
        gbc.writeMem(0xdf, { 0x0 });
        gbc.writeMem(0x7fb4, { 0x74 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x665b, gbc.sp());
        EXPECT(0x7fb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 74 02B9
        gbc.setState(0xbbef, 0xd5a2, 0xf280, 0xc47b, 0xadcc, 0xd1d9, 0x0, 0x1);
        gbc.writeMem(0xbbef, { 0x74 });
        gbc.writeMem(0xd1d9, { 0x0 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xd5a2, gbc.sp());
        EXPECT(0xbbf0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xbbef));
        EXPECT(0xd1, gbc.readMem(0xd1d9));
        // 74 02BA
        gbc.setState(0xcde3, 0x7dc6, 0xd560, 0xf849, 0x6a99, 0xf422, 0x1, 0x0);
        gbc.writeMem(0xcde3, { 0x74 });
        gbc.writeMem(0xf422, { 0x0 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x7dc6, gbc.sp());
        EXPECT(0xcde4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xcde3));
        EXPECT(0xf4, gbc.readMem(0xf422));
        // 74 02BF
        gbc.setState(0x8971, 0x44af, 0x9700, 0x78ea, 0x435f, 0xdae2, 0x1, 0x0);
        gbc.writeMem(0x8971, { 0x74 });
        gbc.writeMem(0xdae2, { 0x0 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x44af, gbc.sp());
        EXPECT(0x8972, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0x8971));
        EXPECT(0xda, gbc.readMem(0xdae2));
        // 74 02C2
        gbc.setState(0x95d, 0xe876, 0x9780, 0x55fc, 0x79af, 0xcdb5, 0x1, 0x1);
        gbc.writeMem(0x95d, { 0x74 });
        gbc.writeMem(0xcdb5, { 0x0 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xe876, gbc.sp());
        EXPECT(0x95e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0xcdb5));
        // 74 02C4
        gbc.setState(0xba77, 0x3bb9, 0xab60, 0x2a0a, 0xf5, 0xd737, 0x1, 0x0);
        gbc.writeMem(0xba77, { 0x74 });
        gbc.writeMem(0xd737, { 0x0 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x3bb9, gbc.sp());
        EXPECT(0xba78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xba77));
        EXPECT(0xd7, gbc.readMem(0xd737));
        // 74 02C5
        gbc.setState(0xcb62, 0x346, 0x4270, 0xa3f4, 0xae75, 0xb2fd, 0x1, 0x0);
        gbc.writeMem(0xb2fd, { 0x0 });
        gbc.writeMem(0xcb62, { 0x74 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x346, gbc.sp());
        EXPECT(0xcb63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xb2fd));
        EXPECT(0x74, gbc.readMem(0xcb62));
        // 74 02C6
        gbc.setState(0x952a, 0x1c2a, 0x92d0, 0xe81f, 0x4ac5, 0xba60, 0x1, 0x0);
        gbc.writeMem(0x952a, { 0x74 });
        gbc.writeMem(0xba60, { 0x0 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x1c2a, gbc.sp());
        EXPECT(0x952b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0x952a));
        EXPECT(0xba, gbc.readMem(0xba60));
        // 74 02C8
        gbc.setState(0xa9d9, 0xb886, 0xef60, 0x98f0, 0x5ded, 0xe6bf, 0x0, 0x0);
        gbc.writeMem(0xa9d9, { 0x74 });
        gbc.writeMem(0xe6bf, { 0x0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xb886, gbc.sp());
        EXPECT(0xa9da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xa9d9));
        EXPECT(0xe6, gbc.readMem(0xe6bf));
        // 74 02CB
        gbc.setState(0x5fc3, 0xfa7a, 0xb120, 0x3a36, 0x3366, 0x9419, 0x1, 0x1);
        gbc.writeMem(0x5fc3, { 0x74 });
        gbc.writeMem(0x9419, { 0x0 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xfa7a, gbc.sp());
        EXPECT(0x5fc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x9419));
        // 74 02CE
        gbc.setState(0xac09, 0x9f6, 0xdc90, 0x20a6, 0xfc68, 0x9b74, 0x0, 0x1);
        gbc.writeMem(0x9b74, { 0x0 });
        gbc.writeMem(0xac09, { 0x74 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x9f6, gbc.sp());
        EXPECT(0xac0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x9b74));
        EXPECT(0x74, gbc.readMem(0xac09));
        // 74 02D0
        gbc.setState(0x2b51, 0x5b1, 0xd6f0, 0x14a2, 0x622d, 0xf520, 0x0, 0x0);
        gbc.writeMem(0x2b51, { 0x74 });
        gbc.writeMem(0xf520, { 0x0 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x5b1, gbc.sp());
        EXPECT(0x2b52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xf520));
        // 74 02D1
        gbc.setState(0xd1b, 0xf0f0, 0x1d60, 0x894, 0xcc87, 0xf7f3, 0x0, 0x0);
        gbc.writeMem(0xd1b, { 0x74 });
        gbc.writeMem(0xf7f3, { 0x0 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xf0f0, gbc.sp());
        EXPECT(0xd1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xf7f3));
        // 74 02D2
        gbc.setState(0x998f, 0x5ff, 0xc5c0, 0xf7a4, 0xc7b0, 0x80aa, 0x0, 0x0);
        gbc.writeMem(0x80aa, { 0x0 });
        gbc.writeMem(0x998f, { 0x74 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x5ff, gbc.sp());
        EXPECT(0x9990, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x80aa));
        EXPECT(0x74, gbc.readMem(0x998f));
        // 74 02D5
        gbc.setState(0x991b, 0xcadb, 0x5f00, 0x422f, 0x2738, 0xa15f, 0x1, 0x1);
        gbc.writeMem(0x991b, { 0x74 });
        gbc.writeMem(0xa15f, { 0x0 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xcadb, gbc.sp());
        EXPECT(0x991c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0x991b));
        EXPECT(0xa1, gbc.readMem(0xa15f));
        // 74 02D6
        gbc.setState(0x2151, 0x8f63, 0xe9b0, 0xc05e, 0x7465, 0x8ff2, 0x1, 0x0);
        gbc.writeMem(0x2151, { 0x74 });
        gbc.writeMem(0x8ff2, { 0x0 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x8f63, gbc.sp());
        EXPECT(0x2152, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x8ff2));
        // 74 02D7
        gbc.setState(0x1624, 0xcd74, 0xd370, 0x61a9, 0xd878, 0xe55f, 0x1, 0x0);
        gbc.writeMem(0x1624, { 0x74 });
        gbc.writeMem(0xe55f, { 0x0 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xcd74, gbc.sp());
        EXPECT(0x1625, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xe55f));
        // 74 02D9
        gbc.setState(0xae, 0xb9ee, 0xf4a0, 0xb5ef, 0x37cd, 0xdc36, 0x1, 0x1);
        gbc.writeMem(0xae, { 0x74 });
        gbc.writeMem(0xdc36, { 0x0 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xb9ee, gbc.sp());
        EXPECT(0xaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0xdc36));
        // 74 02DA
        gbc.setState(0x14f1, 0xda1e, 0x92b0, 0xb4be, 0xe924, 0xfb3c, 0x1, 0x0);
        gbc.writeMem(0x14f1, { 0x74 });
        gbc.writeMem(0xfb3c, { 0x0 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xda1e, gbc.sp());
        EXPECT(0x14f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfb, gbc.readMem(0xfb3c));
        // 74 02DC
        gbc.setState(0xae0, 0xe0cf, 0x88e0, 0x6d9b, 0x4f7f, 0x868f, 0x0, 0x0);
        gbc.writeMem(0xae0, { 0x74 });
        gbc.writeMem(0x868f, { 0x0 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xe0cf, gbc.sp());
        EXPECT(0xae1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x868f));
        // 74 02DF
        gbc.setState(0xd11d, 0x3a75, 0x4cd0, 0xdf7d, 0xed9c, 0xcd32, 0x1, 0x1);
        gbc.writeMem(0xcd32, { 0x0 });
        gbc.writeMem(0xd11d, { 0x74 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x3a75, gbc.sp());
        EXPECT(0xd11e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0xcd32));
        EXPECT(0x74, gbc.readMem(0xd11d));
        // 74 02E0
        gbc.setState(0x374a, 0x4d41, 0x3880, 0x4d36, 0x978, 0xa7f5, 0x0, 0x1);
        gbc.writeMem(0x374a, { 0x74 });
        gbc.writeMem(0xa7f5, { 0x0 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x4d41, gbc.sp());
        EXPECT(0x374b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xa7f5));
        // 74 02E2
        gbc.setState(0x114f, 0xf45c, 0x7750, 0x91be, 0xe611, 0xa4ab, 0x1, 0x1);
        gbc.writeMem(0x114f, { 0x74 });
        gbc.writeMem(0xa4ab, { 0x0 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xf45c, gbc.sp());
        EXPECT(0x1150, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xa4ab));
        // 74 02E5
        gbc.setState(0xacbc, 0x7c04, 0xc710, 0xe749, 0x7c4d, 0xcddd, 0x0, 0x0);
        gbc.writeMem(0xacbc, { 0x74 });
        gbc.writeMem(0xcddd, { 0x0 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x7c04, gbc.sp());
        EXPECT(0xacbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xacbc));
        EXPECT(0xcd, gbc.readMem(0xcddd));
        // 74 02E6
        gbc.setState(0x3d12, 0x7b79, 0x21e0, 0xa5b3, 0xc1ba, 0xf305, 0x1, 0x0);
        gbc.writeMem(0x3d12, { 0x74 });
        gbc.writeMem(0xf305, { 0x0 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x7b79, gbc.sp());
        EXPECT(0x3d13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0xf305));
        // 74 02E7
        gbc.setState(0x27c3, 0x9cb, 0xfaf0, 0x35d4, 0x625a, 0xa4d8, 0x0, 0x1);
        gbc.writeMem(0x27c3, { 0x74 });
        gbc.writeMem(0xa4d8, { 0x0 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x9cb, gbc.sp());
        EXPECT(0x27c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xa4d8));
        // 74 02EA
        gbc.setState(0x7f05, 0x279f, 0x78d0, 0xb1b8, 0xad92, 0xcf63, 0x1, 0x1);
        gbc.writeMem(0x7f05, { 0x74 });
        gbc.writeMem(0xcf63, { 0x0 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x279f, gbc.sp());
        EXPECT(0x7f06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0xcf63));
        // 74 02F1
        gbc.setState(0xa31e, 0x3fe8, 0xc7a0, 0xd9dc, 0xe59a, 0xc4dc, 0x1, 0x1);
        gbc.writeMem(0xa31e, { 0x74 });
        gbc.writeMem(0xc4dc, { 0x0 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x3fe8, gbc.sp());
        EXPECT(0xa31f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xa31e));
        EXPECT(0xc4, gbc.readMem(0xc4dc));
        // 74 02F4
        gbc.setState(0x8625, 0x8f9f, 0x48a0, 0xd838, 0xf838, 0x94f0, 0x0, 0x1);
        gbc.writeMem(0x8625, { 0x74 });
        gbc.writeMem(0x94f0, { 0x0 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x8f9f, gbc.sp());
        EXPECT(0x8626, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0x8625));
        EXPECT(0x94, gbc.readMem(0x94f0));
        // 74 02F5
        gbc.setState(0xea72, 0x8bcb, 0xb8d0, 0xf5a8, 0xbe40, 0x954c, 0x0, 0x1);
        gbc.writeMem(0x954c, { 0x0 });
        gbc.writeMem(0xea72, { 0x74 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x8bcb, gbc.sp());
        EXPECT(0xea73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x954c));
        EXPECT(0x74, gbc.readMem(0xea72));
        // 74 02F6
        gbc.setState(0x7564, 0xd74b, 0xc890, 0x5944, 0xc58a, 0xfe93, 0x0, 0x0);
        gbc.writeMem(0x7564, { 0x74 });
        gbc.writeMem(0xfe93, { 0x0 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xd74b, gbc.sp());
        EXPECT(0x7565, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xfe93));
        // 74 02F8
        gbc.setState(0x921d, 0xcc24, 0xb0f0, 0x4ab, 0x8b5b, 0x8eeb, 0x0, 0x0);
        gbc.writeMem(0x8eeb, { 0x0 });
        gbc.writeMem(0x921d, { 0x74 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xcc24, gbc.sp());
        EXPECT(0x921e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0x8eeb));
        EXPECT(0x74, gbc.readMem(0x921d));
        // 74 02FA
        gbc.setState(0x4771, 0xf147, 0x4b0, 0x7208, 0xef0a, 0x992b, 0x0, 0x0);
        gbc.writeMem(0x4771, { 0x74 });
        gbc.writeMem(0x992b, { 0x0 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xf147, gbc.sp());
        EXPECT(0x4772, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x992b));
        // 74 02FC
        gbc.setState(0xe346, 0x78c1, 0xc230, 0x4c2f, 0x707b, 0x9125, 0x1, 0x1);
        gbc.writeMem(0x9125, { 0x0 });
        gbc.writeMem(0xe346, { 0x74 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x78c1, gbc.sp());
        EXPECT(0xe347, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x9125));
        EXPECT(0x74, gbc.readMem(0xe346));
        // 74 02FD
        gbc.setState(0x367f, 0x7260, 0x4010, 0x7d39, 0x815a, 0x90d5, 0x0, 0x1);
        gbc.writeMem(0x367f, { 0x74 });
        gbc.writeMem(0x90d5, { 0x0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x7260, gbc.sp());
        EXPECT(0x3680, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0x90d5));
        // 74 02FE
        gbc.setState(0x3dde, 0x9080, 0x2660, 0x22af, 0xc57b, 0xf008, 0x1, 0x1);
        gbc.writeMem(0x3dde, { 0x74 });
        gbc.writeMem(0xf008, { 0x0 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x9080, gbc.sp());
        EXPECT(0x3ddf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xf008));
        // 74 02FF
        gbc.setState(0x63db, 0xf31b, 0xfa60, 0x5d49, 0xe374, 0xf09a, 0x1, 0x1);
        gbc.writeMem(0x63db, { 0x74 });
        gbc.writeMem(0xf09a, { 0x0 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xf31b, gbc.sp());
        EXPECT(0x63dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xf09a));
        // 74 0300
        gbc.setState(0x4864, 0xf5aa, 0x90, 0x9b15, 0x82a6, 0xca15, 0x1, 0x1);
        gbc.writeMem(0x4864, { 0x74 });
        gbc.writeMem(0xca15, { 0x0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xf5aa, gbc.sp());
        EXPECT(0x4865, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0xca15));
        // 74 0302
        gbc.setState(0x678a, 0xe23, 0x94c0, 0x27ce, 0x62e, 0xcc4f, 0x0, 0x1);
        gbc.writeMem(0x678a, { 0x74 });
        gbc.writeMem(0xcc4f, { 0x0 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xe23, gbc.sp());
        EXPECT(0x678b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcc, gbc.readMem(0xcc4f));
        // 74 0306
        gbc.setState(0x13a0, 0xf4e8, 0x9b40, 0xc790, 0x2d61, 0xf5e8, 0x0, 0x0);
        gbc.writeMem(0x13a0, { 0x74 });
        gbc.writeMem(0xf5e8, { 0x0 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xf4e8, gbc.sp());
        EXPECT(0x13a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xf5e8));
        // 74 030A
        gbc.setState(0xbc2, 0x97a5, 0xbc70, 0x98e6, 0x1083, 0xc229, 0x1, 0x1);
        gbc.writeMem(0xbc2, { 0x74 });
        gbc.writeMem(0xc229, { 0x0 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x97a5, gbc.sp());
        EXPECT(0xbc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xc229));
        // 74 030F
        gbc.setState(0x4ec1, 0xce9f, 0x3bb0, 0x4d08, 0xa70, 0xc9ad, 0x0, 0x0);
        gbc.writeMem(0x4ec1, { 0x74 });
        gbc.writeMem(0xc9ad, { 0x0 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xce9f, gbc.sp());
        EXPECT(0x4ec2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xc9ad));
        // 74 0310
        gbc.setState(0xc953, 0x3bac, 0x66b0, 0x38d2, 0x8611, 0xde4f, 0x1, 0x0);
        gbc.writeMem(0xc953, { 0x74 });
        gbc.writeMem(0xde4f, { 0x0 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x3bac, gbc.sp());
        EXPECT(0xc954, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xc953));
        EXPECT(0xde, gbc.readMem(0xde4f));
        // 74 0311
        gbc.setState(0xa103, 0x1715, 0x1f0, 0x95ca, 0x27f6, 0xa939, 0x0, 0x1);
        gbc.writeMem(0xa103, { 0x74 });
        gbc.writeMem(0xa939, { 0x0 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x1715, gbc.sp());
        EXPECT(0xa104, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xa103));
        EXPECT(0xa9, gbc.readMem(0xa939));
        // 74 0313
        gbc.setState(0xe576, 0xa542, 0x9b50, 0xc827, 0x3dd, 0xf0f6, 0x0, 0x1);
        gbc.writeMem(0xe576, { 0x74 });
        gbc.writeMem(0xf0f6, { 0x0 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xa542, gbc.sp());
        EXPECT(0xe577, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xe576));
        EXPECT(0xf0, gbc.readMem(0xf0f6));
        // 74 0316
        gbc.setState(0xd1f8, 0xb20d, 0x3cd0, 0x83e0, 0xbcb4, 0xf8bd, 0x0, 0x1);
        gbc.writeMem(0xd1f8, { 0x74 });
        gbc.writeMem(0xf8bd, { 0x0 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xb20d, gbc.sp());
        EXPECT(0xd1f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xd1f8));
        EXPECT(0xf8, gbc.readMem(0xf8bd));
        // 74 0317
        gbc.setState(0x7bbc, 0x4dea, 0xdd30, 0x4e03, 0xa971, 0xcd79, 0x0, 0x0);
        gbc.writeMem(0x7bbc, { 0x74 });
        gbc.writeMem(0xcd79, { 0x0 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x4dea, gbc.sp());
        EXPECT(0x7bbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0xcd79));
        // 74 0318
        gbc.setState(0x8c43, 0x432a, 0x3050, 0x4af7, 0x3479, 0xba1d, 0x1, 0x1);
        gbc.writeMem(0x8c43, { 0x74 });
        gbc.writeMem(0xba1d, { 0x0 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x432a, gbc.sp());
        EXPECT(0x8c44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0x8c43));
        EXPECT(0xba, gbc.readMem(0xba1d));
        // 74 031A
        gbc.setState(0x4114, 0xe645, 0xe4d0, 0x76e9, 0x69a1, 0x8abc, 0x0, 0x1);
        gbc.writeMem(0x4114, { 0x74 });
        gbc.writeMem(0x8abc, { 0x0 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xe645, gbc.sp());
        EXPECT(0x4115, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x8abc));
        // 74 031C
        gbc.setState(0xbb55, 0x2ca9, 0x3460, 0xbdf9, 0xd416, 0xabb1, 0x0, 0x0);
        gbc.writeMem(0xabb1, { 0x0 });
        gbc.writeMem(0xbb55, { 0x74 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x2ca9, gbc.sp());
        EXPECT(0xbb56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xab, gbc.readMem(0xabb1));
        EXPECT(0x74, gbc.readMem(0xbb55));
        // 74 031D
        gbc.setState(0xe0d1, 0x5992, 0xb4f0, 0xd011, 0xb23c, 0xff18, 0x1, 0x0);
        gbc.writeMem(0xe0d1, { 0x74 });
        gbc.writeMem(0xff18, { 0x0 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x5992, gbc.sp());
        EXPECT(0xe0d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xe0d1));
        EXPECT(0xff, gbc.readMem(0xff18));
        // 74 031F
        gbc.setState(0xdad7, 0x3fdc, 0x84b0, 0xebd3, 0xcc3e, 0xc4b9, 0x1, 0x0);
        gbc.writeMem(0xc4b9, { 0x0 });
        gbc.writeMem(0xdad7, { 0x74 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x3fdc, gbc.sp());
        EXPECT(0xdad8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc4, gbc.readMem(0xc4b9));
        EXPECT(0x74, gbc.readMem(0xdad7));
        // 74 0322
        gbc.setState(0xddce, 0x7bef, 0x8c70, 0x52d2, 0x9627, 0xda3b, 0x0, 0x1);
        gbc.writeMem(0xda3b, { 0x0 });
        gbc.writeMem(0xddce, { 0x74 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x7bef, gbc.sp());
        EXPECT(0xddcf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xda3b));
        EXPECT(0x74, gbc.readMem(0xddce));
        // 74 0323
        gbc.setState(0xeb04, 0x5f6e, 0x7d80, 0x230a, 0x1520, 0xee15, 0x1, 0x1);
        gbc.writeMem(0xeb04, { 0x74 });
        gbc.writeMem(0xee15, { 0x0 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x5f6e, gbc.sp());
        EXPECT(0xeb05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xeb04));
        EXPECT(0xee, gbc.readMem(0xee15));
        // 74 0324
        gbc.setState(0x6b14, 0xa9fc, 0x2110, 0xb3c6, 0xc104, 0xa3f0, 0x1, 0x0);
        gbc.writeMem(0x6b14, { 0x74 });
        gbc.writeMem(0xa3f0, { 0x0 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xa9fc, gbc.sp());
        EXPECT(0x6b15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xa3f0));
        // 74 0325
        gbc.setState(0x4b24, 0x19ea, 0x8f10, 0x2dd8, 0xb50a, 0xa9da, 0x0, 0x1);
        gbc.writeMem(0x4b24, { 0x74 });
        gbc.writeMem(0xa9da, { 0x0 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x19ea, gbc.sp());
        EXPECT(0x4b25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa9, gbc.readMem(0xa9da));
        // 74 0326
        gbc.setState(0x408e, 0x7390, 0xf3c0, 0xb317, 0xcc3, 0xc267, 0x0, 0x1);
        gbc.writeMem(0x408e, { 0x74 });
        gbc.writeMem(0xc267, { 0x0 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x7390, gbc.sp());
        EXPECT(0x408f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xc267));
        // 74 0327
        gbc.setState(0x43f, 0x6980, 0x3e20, 0xb528, 0x5eba, 0x8f06, 0x0, 0x1);
        gbc.writeMem(0x43f, { 0x74 });
        gbc.writeMem(0x8f06, { 0x0 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x6980, gbc.sp());
        EXPECT(0x440, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x8f06));
        // 74 0328
        gbc.setState(0x2d4e, 0x5a53, 0x5f70, 0xa701, 0xe828, 0x9cef, 0x0, 0x1);
        gbc.writeMem(0x2d4e, { 0x74 });
        gbc.writeMem(0x9cef, { 0x0 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x5a53, gbc.sp());
        EXPECT(0x2d4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x9cef));
        // 74 032B
        gbc.setState(0xca06, 0x8112, 0x51f0, 0x97b0, 0x5110, 0xd96c, 0x1, 0x0);
        gbc.writeMem(0xca06, { 0x74 });
        gbc.writeMem(0xd96c, { 0x0 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x8112, gbc.sp());
        EXPECT(0xca07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xca06));
        EXPECT(0xd9, gbc.readMem(0xd96c));
        // 74 032C
        gbc.setState(0x27cf, 0xf07, 0x1130, 0xbc00, 0x2455, 0xe9a8, 0x1, 0x0);
        gbc.writeMem(0x27cf, { 0x74 });
        gbc.writeMem(0xe9a8, { 0x0 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xf07, gbc.sp());
        EXPECT(0x27d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xe9a8));
        // 74 032E
        gbc.setState(0x89cf, 0xdb41, 0x6120, 0x4938, 0xdd28, 0xb919, 0x0, 0x1);
        gbc.writeMem(0x89cf, { 0x74 });
        gbc.writeMem(0xb919, { 0x0 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xdb41, gbc.sp());
        EXPECT(0x89d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0x89cf));
        EXPECT(0xb9, gbc.readMem(0xb919));
        // 74 032F
        gbc.setState(0x3d73, 0x3ad4, 0x1950, 0x34c1, 0x2485, 0xde91, 0x1, 0x1);
        gbc.writeMem(0x3d73, { 0x74 });
        gbc.writeMem(0xde91, { 0x0 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x3ad4, gbc.sp());
        EXPECT(0x3d74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0xde91));
        // 74 0330
        gbc.setState(0xd697, 0xebfb, 0x6af0, 0xd500, 0xdaf7, 0x8f78, 0x1, 0x0);
        gbc.writeMem(0x8f78, { 0x0 });
        gbc.writeMem(0xd697, { 0x74 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xebfb, gbc.sp());
        EXPECT(0xd698, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x8f78));
        EXPECT(0x74, gbc.readMem(0xd697));
        // 74 0331
        gbc.setState(0x9657, 0x2965, 0xdaa0, 0x3839, 0xe6fb, 0xaaac, 0x0, 0x0);
        gbc.writeMem(0x9657, { 0x74 });
        gbc.writeMem(0xaaac, { 0x0 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x2965, gbc.sp());
        EXPECT(0x9658, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0x9657));
        EXPECT(0xaa, gbc.readMem(0xaaac));
        // 74 0333
        gbc.setState(0xc6df, 0xb852, 0x6680, 0x3207, 0x5c66, 0xe76c, 0x0, 0x0);
        gbc.writeMem(0xc6df, { 0x74 });
        gbc.writeMem(0xe76c, { 0x0 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xb852, gbc.sp());
        EXPECT(0xc6e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xc6df));
        EXPECT(0xe7, gbc.readMem(0xe76c));
        // 74 0336
        gbc.setState(0xa656, 0x52ef, 0xa8d0, 0xd49e, 0x73f2, 0x92a8, 0x1, 0x0);
        gbc.writeMem(0x92a8, { 0x0 });
        gbc.writeMem(0xa656, { 0x74 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x52ef, gbc.sp());
        EXPECT(0xa657, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x92a8));
        EXPECT(0x74, gbc.readMem(0xa656));
        // 74 0338
        gbc.setState(0x2b7, 0xed98, 0x15c0, 0x6a4d, 0x11d8, 0xa4d4, 0x0, 0x0);
        gbc.writeMem(0x2b7, { 0x74 });
        gbc.writeMem(0xa4d4, { 0x0 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xed98, gbc.sp());
        EXPECT(0x2b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xa4d4));
        // 74 0339
        gbc.setState(0x9fb5, 0xd41e, 0x1590, 0x9c76, 0x4ced, 0x9cb2, 0x0, 0x0);
        gbc.writeMem(0x9cb2, { 0x0 });
        gbc.writeMem(0x9fb5, { 0x74 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xd41e, gbc.sp());
        EXPECT(0x9fb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x9cb2));
        EXPECT(0x74, gbc.readMem(0x9fb5));
        // 74 033A
        gbc.setState(0xdd5d, 0x7dd4, 0xecc0, 0xf168, 0xa08a, 0x9a13, 0x0, 0x0);
        gbc.writeMem(0x9a13, { 0x0 });
        gbc.writeMem(0xdd5d, { 0x74 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x7dd4, gbc.sp());
        EXPECT(0xdd5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x9a13));
        EXPECT(0x74, gbc.readMem(0xdd5d));
        // 74 033E
        gbc.setState(0x5d0, 0x2fe1, 0x9720, 0x9318, 0x926c, 0x973a, 0x1, 0x1);
        gbc.writeMem(0x5d0, { 0x74 });
        gbc.writeMem(0x973a, { 0x0 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x2fe1, gbc.sp());
        EXPECT(0x5d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x973a));
        // 74 0342
        gbc.setState(0x454c, 0x3a3f, 0xc790, 0x60f9, 0xa1c0, 0xecd3, 0x1, 0x1);
        gbc.writeMem(0x454c, { 0x74 });
        gbc.writeMem(0xecd3, { 0x0 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x3a3f, gbc.sp());
        EXPECT(0x454d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0xecd3));
        // 74 0345
        gbc.setState(0x358d, 0x341d, 0xeb0, 0xa63f, 0x9c32, 0x9e6e, 0x1, 0x0);
        gbc.writeMem(0x358d, { 0x74 });
        gbc.writeMem(0x9e6e, { 0x0 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x341d, gbc.sp());
        EXPECT(0x358e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x9e6e));
        // 74 0346
        gbc.setState(0xdfbd, 0x975a, 0x7800, 0xac36, 0xa49e, 0xc29a, 0x1, 0x1);
        gbc.writeMem(0xc29a, { 0x0 });
        gbc.writeMem(0xdfbd, { 0x74 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x975a, gbc.sp());
        EXPECT(0xdfbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xc29a));
        EXPECT(0x74, gbc.readMem(0xdfbd));
        // 74 0347
        gbc.setState(0x274, 0xc718, 0x7850, 0x8dad, 0x8b71, 0xaf66, 0x0, 0x1);
        gbc.writeMem(0x274, { 0x74 });
        gbc.writeMem(0xaf66, { 0x0 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xc718, gbc.sp());
        EXPECT(0x275, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xaf, gbc.readMem(0xaf66));
        // 74 0348
        gbc.setState(0xa06c, 0xd20, 0x64f0, 0xb163, 0x8219, 0xa7a9, 0x1, 0x0);
        gbc.writeMem(0xa06c, { 0x74 });
        gbc.writeMem(0xa7a9, { 0x0 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xd20, gbc.sp());
        EXPECT(0xa06d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xa06c));
        EXPECT(0xa7, gbc.readMem(0xa7a9));
        // 74 034B
        gbc.setState(0xddc2, 0x538, 0x2b60, 0x69f7, 0x50e7, 0xb828, 0x0, 0x0);
        gbc.writeMem(0xb828, { 0x0 });
        gbc.writeMem(0xddc2, { 0x74 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x538, gbc.sp());
        EXPECT(0xddc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0xb828));
        EXPECT(0x74, gbc.readMem(0xddc2));
        // 74 034D
        gbc.setState(0x1a5e, 0x3890, 0x6ca0, 0x90ed, 0xfbe, 0xd32a, 0x1, 0x1);
        gbc.writeMem(0x1a5e, { 0x74 });
        gbc.writeMem(0xd32a, { 0x0 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x3890, gbc.sp());
        EXPECT(0x1a5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd3, gbc.readMem(0xd32a));
        // 74 0354
        gbc.setState(0x3d9b, 0x3a55, 0xa0d0, 0x21ce, 0xc637, 0xf192, 0x0, 0x0);
        gbc.writeMem(0x3d9b, { 0x74 });
        gbc.writeMem(0xf192, { 0x0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x3a55, gbc.sp());
        EXPECT(0x3d9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xf192));
        // 74 0357
        gbc.setState(0x632b, 0x51be, 0x8880, 0xabc, 0xf582, 0xca68, 0x0, 0x0);
        gbc.writeMem(0x632b, { 0x74 });
        gbc.writeMem(0xca68, { 0x0 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x51be, gbc.sp());
        EXPECT(0x632c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0xca68));
        // 74 0358
        gbc.setState(0x2c1a, 0x89b9, 0xc2b0, 0x6b8d, 0x203c, 0xa742, 0x1, 0x0);
        gbc.writeMem(0x2c1a, { 0x74 });
        gbc.writeMem(0xa742, { 0x0 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x89b9, gbc.sp());
        EXPECT(0x2c1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xa742));
        // 74 0359
        gbc.setState(0xc7b2, 0xf2f3, 0xcce0, 0x55dd, 0xce95, 0xf809, 0x1, 0x0);
        gbc.writeMem(0xc7b2, { 0x74 });
        gbc.writeMem(0xf809, { 0x0 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xf2f3, gbc.sp());
        EXPECT(0xc7b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xc7b2));
        EXPECT(0xf8, gbc.readMem(0xf809));
        // 74 035A
        gbc.setState(0xeb63, 0xe941, 0xdab0, 0x3d79, 0x6725, 0xf1a2, 0x1, 0x0);
        gbc.writeMem(0xeb63, { 0x74 });
        gbc.writeMem(0xf1a2, { 0x0 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xe941, gbc.sp());
        EXPECT(0xeb64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xeb63));
        EXPECT(0xf1, gbc.readMem(0xf1a2));
        // 74 035E
        gbc.setState(0xc81, 0xe414, 0x43c0, 0x990b, 0x1698, 0xf4d3, 0x0, 0x0);
        gbc.writeMem(0xc81, { 0x74 });
        gbc.writeMem(0xf4d3, { 0x0 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xe414, gbc.sp());
        EXPECT(0xc82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0xf4d3));
        // 74 035F
        gbc.setState(0x684c, 0x94e1, 0x30a0, 0xccab, 0xe817, 0x898b, 0x0, 0x0);
        gbc.writeMem(0x684c, { 0x74 });
        gbc.writeMem(0x898b, { 0x0 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x94e1, gbc.sp());
        EXPECT(0x684d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x898b));
        // 74 0360
        gbc.setState(0xd9, 0x673, 0x6ce0, 0x40aa, 0xe57c, 0xecf9, 0x1, 0x1);
        gbc.writeMem(0xd9, { 0x74 });
        gbc.writeMem(0xecf9, { 0x0 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x673, gbc.sp());
        EXPECT(0xda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0xecf9));
        // 74 0361
        gbc.setState(0x1583, 0xda5b, 0xb340, 0x9e61, 0xe40a, 0xf78b, 0x0, 0x0);
        gbc.writeMem(0x1583, { 0x74 });
        gbc.writeMem(0xf78b, { 0x0 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xda5b, gbc.sp());
        EXPECT(0x1584, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xf78b));
        // 74 0365
        gbc.setState(0x331a, 0x94eb, 0xd420, 0x1067, 0x6af5, 0xba59, 0x0, 0x0);
        gbc.writeMem(0x331a, { 0x74 });
        gbc.writeMem(0xba59, { 0x0 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x94eb, gbc.sp());
        EXPECT(0x331b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0xba59));
        // 74 0369
        gbc.setState(0x9b7e, 0x9e50, 0xfee0, 0x26c4, 0x4d2e, 0x9267, 0x1, 0x1);
        gbc.writeMem(0x9267, { 0x0 });
        gbc.writeMem(0x9b7e, { 0x74 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x9e50, gbc.sp());
        EXPECT(0x9b7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x9267));
        EXPECT(0x74, gbc.readMem(0x9b7e));
        // 74 036A
        gbc.setState(0x2761, 0x9d59, 0x4220, 0xa46, 0xed93, 0x83a6, 0x0, 0x0);
        gbc.writeMem(0x2761, { 0x74 });
        gbc.writeMem(0x83a6, { 0x0 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x9d59, gbc.sp());
        EXPECT(0x2762, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0x83a6));
        // 74 036B
        gbc.setState(0x4cbe, 0xf85d, 0x1090, 0xa752, 0x8b2f, 0xb479, 0x0, 0x0);
        gbc.writeMem(0x4cbe, { 0x74 });
        gbc.writeMem(0xb479, { 0x0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xf85d, gbc.sp());
        EXPECT(0x4cbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0xb479));
        // 74 036C
        gbc.setState(0x4977, 0xcef6, 0x4050, 0x2141, 0xa4a7, 0xe0b0, 0x1, 0x0);
        gbc.writeMem(0x4977, { 0x74 });
        gbc.writeMem(0xe0b0, { 0x0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xcef6, gbc.sp());
        EXPECT(0x4978, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xe0b0));
        // 74 036E
        gbc.setState(0x5eab, 0x958a, 0x9d20, 0x2994, 0xc196, 0xd201, 0x0, 0x1);
        gbc.writeMem(0x5eab, { 0x74 });
        gbc.writeMem(0xd201, { 0x0 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x958a, gbc.sp());
        EXPECT(0x5eac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0xd201));
        // 74 036F
        gbc.setState(0x42a1, 0xb1e0, 0xcef0, 0x66c, 0x7515, 0xa127, 0x1, 0x0);
        gbc.writeMem(0x42a1, { 0x74 });
        gbc.writeMem(0xa127, { 0x0 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xb1e0, gbc.sp());
        EXPECT(0x42a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xa127));
        // 74 0370
        gbc.setState(0xcd81, 0x32b4, 0xf9a0, 0x4761, 0x5b39, 0xf5af, 0x1, 0x1);
        gbc.writeMem(0xcd81, { 0x74 });
        gbc.writeMem(0xf5af, { 0x0 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x32b4, gbc.sp());
        EXPECT(0xcd82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xcd81));
        EXPECT(0xf5, gbc.readMem(0xf5af));
        // 74 0372
        gbc.setState(0x2dc8, 0xbbe7, 0xff40, 0x9042, 0x7ef0, 0xdbd1, 0x1, 0x1);
        gbc.writeMem(0x2dc8, { 0x74 });
        gbc.writeMem(0xdbd1, { 0x0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xbbe7, gbc.sp());
        EXPECT(0x2dc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0xdbd1));
        // 74 0373
        gbc.setState(0xaf82, 0x280, 0x7eb0, 0xc69b, 0x4d, 0xe93a, 0x1, 0x0);
        gbc.writeMem(0xaf82, { 0x74 });
        gbc.writeMem(0xe93a, { 0x0 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x280, gbc.sp());
        EXPECT(0xaf83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xaf82));
        EXPECT(0xe9, gbc.readMem(0xe93a));
        // 74 0375
        gbc.setState(0x6b45, 0x4c5e, 0xf310, 0xf568, 0x5010, 0x9467, 0x1, 0x0);
        gbc.writeMem(0x6b45, { 0x74 });
        gbc.writeMem(0x9467, { 0x0 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x4c5e, gbc.sp());
        EXPECT(0x6b46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x9467));
        // 74 0378
        gbc.setState(0xd0d9, 0x9dd, 0x8a70, 0xd063, 0x510c, 0xbb48, 0x0, 0x1);
        gbc.writeMem(0xbb48, { 0x0 });
        gbc.writeMem(0xd0d9, { 0x74 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x9dd, gbc.sp());
        EXPECT(0xd0da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xbb48));
        EXPECT(0x74, gbc.readMem(0xd0d9));
        // 74 037A
        gbc.setState(0x4db4, 0x8fac, 0x88b0, 0xba00, 0xfd08, 0xfcf9, 0x1, 0x1);
        gbc.writeMem(0x4db4, { 0x74 });
        gbc.writeMem(0xfcf9, { 0x0 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x8fac, gbc.sp());
        EXPECT(0x4db5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfc, gbc.readMem(0xfcf9));
        // 74 037D
        gbc.setState(0x1882, 0xa52b, 0x4940, 0xe22, 0xa559, 0xb650, 0x1, 0x1);
        gbc.writeMem(0x1882, { 0x74 });
        gbc.writeMem(0xb650, { 0x0 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xa52b, gbc.sp());
        EXPECT(0x1883, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xb650));
        // 74 037E
        gbc.setState(0x3ceb, 0x2f35, 0x9b70, 0x9a48, 0xeec5, 0xb815, 0x1, 0x1);
        gbc.writeMem(0x3ceb, { 0x74 });
        gbc.writeMem(0xb815, { 0x0 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x2f35, gbc.sp());
        EXPECT(0x3cec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0xb815));
        // 74 037F
        gbc.setState(0x9aa6, 0x6cc1, 0x3fe0, 0xd1dc, 0x6193, 0x9ab4, 0x1, 0x1);
        gbc.writeMem(0x9aa6, { 0x74 });
        gbc.writeMem(0x9ab4, { 0x0 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x6cc1, gbc.sp());
        EXPECT(0x9aa7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0x9aa6));
        EXPECT(0x9a, gbc.readMem(0x9ab4));
        // 74 0381
        gbc.setState(0x66f6, 0xb261, 0x21f0, 0x4ec0, 0xde53, 0xec90, 0x1, 0x1);
        gbc.writeMem(0x66f6, { 0x74 });
        gbc.writeMem(0xec90, { 0x0 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xb261, gbc.sp());
        EXPECT(0x66f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0xec90));
        // 74 0382
        gbc.setState(0x3b9f, 0xfb6a, 0xc450, 0x45f2, 0xd909, 0xdc6c, 0x0, 0x1);
        gbc.writeMem(0x3b9f, { 0x74 });
        gbc.writeMem(0xdc6c, { 0x0 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xfb6a, gbc.sp());
        EXPECT(0x3ba0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0xdc6c));
        // 74 0384
        gbc.setState(0xa853, 0x29fe, 0x8af0, 0xc6ca, 0xf9ff, 0xff5f, 0x0, 0x0);
        gbc.writeMem(0xa853, { 0x74 });
        gbc.writeMem(0xff5f, { 0x0 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x29fe, gbc.sp());
        EXPECT(0xa854, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xa853));
        EXPECT(0xff, gbc.readMem(0xff5f));
        // 74 0385
        gbc.setState(0x97c0, 0x2ba1, 0xea40, 0x9825, 0x679c, 0xbf62, 0x1, 0x1);
        gbc.writeMem(0x97c0, { 0x74 });
        gbc.writeMem(0xbf62, { 0x0 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x2ba1, gbc.sp());
        EXPECT(0x97c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0x97c0));
        EXPECT(0xbf, gbc.readMem(0xbf62));
        // 74 0387
        gbc.setState(0x2ea9, 0x8fae, 0x6e80, 0x2233, 0xf750, 0x8f91, 0x1, 0x1);
        gbc.writeMem(0x2ea9, { 0x74 });
        gbc.writeMem(0x8f91, { 0x0 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x8fae, gbc.sp());
        EXPECT(0x2eaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x8f91));
        // 74 0388
        gbc.setState(0x824e, 0x9f5, 0x1980, 0x57c2, 0x6d13, 0xfd92, 0x0, 0x1);
        gbc.writeMem(0x824e, { 0x74 });
        gbc.writeMem(0xfd92, { 0x0 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x9f5, gbc.sp());
        EXPECT(0x824f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0x824e));
        EXPECT(0xfd, gbc.readMem(0xfd92));
        // 74 038A
        gbc.setState(0xb41d, 0x20e4, 0x2c00, 0x9d3b, 0x77bd, 0x8411, 0x0, 0x0);
        gbc.writeMem(0x8411, { 0x0 });
        gbc.writeMem(0xb41d, { 0x74 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x20e4, gbc.sp());
        EXPECT(0xb41e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0x8411));
        EXPECT(0x74, gbc.readMem(0xb41d));
        // 74 038B
        gbc.setState(0xeed7, 0xa263, 0x3840, 0xbc44, 0xa075, 0x83ba, 0x1, 0x0);
        gbc.writeMem(0x83ba, { 0x0 });
        gbc.writeMem(0xeed7, { 0x74 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xa263, gbc.sp());
        EXPECT(0xeed8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0x83ba));
        EXPECT(0x74, gbc.readMem(0xeed7));
        // 74 038E
        gbc.setState(0x3f85, 0xe4ae, 0x5790, 0x9bb9, 0x190, 0xeea6, 0x0, 0x0);
        gbc.writeMem(0x3f85, { 0x74 });
        gbc.writeMem(0xeea6, { 0x0 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xe4ae, gbc.sp());
        EXPECT(0x3f86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0xeea6));
        // 74 0390
        gbc.setState(0xc5ff, 0x26a5, 0xab70, 0xdeb7, 0xaa42, 0xace4, 0x0, 0x1);
        gbc.writeMem(0xace4, { 0x0 });
        gbc.writeMem(0xc5ff, { 0x74 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x26a5, gbc.sp());
        EXPECT(0xc600, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xace4));
        EXPECT(0x74, gbc.readMem(0xc5ff));
        // 74 0394
        gbc.setState(0xc2e2, 0x1665, 0x5a0, 0x38b3, 0xf77b, 0x825e, 0x1, 0x0);
        gbc.writeMem(0x825e, { 0x0 });
        gbc.writeMem(0xc2e2, { 0x74 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x1665, gbc.sp());
        EXPECT(0xc2e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x825e));
        EXPECT(0x74, gbc.readMem(0xc2e2));
        // 74 0396
        gbc.setState(0xdfcd, 0xf88, 0xe690, 0x9c16, 0x3e1b, 0x95f6, 0x1, 0x0);
        gbc.writeMem(0x95f6, { 0x0 });
        gbc.writeMem(0xdfcd, { 0x74 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xf88, gbc.sp());
        EXPECT(0xdfce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x95f6));
        EXPECT(0x74, gbc.readMem(0xdfcd));
        // 74 0398
        gbc.setState(0xaee7, 0x1d9f, 0xdd70, 0x1e70, 0xcb24, 0x9f4e, 0x0, 0x0);
        gbc.writeMem(0x9f4e, { 0x0 });
        gbc.writeMem(0xaee7, { 0x74 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x1d9f, gbc.sp());
        EXPECT(0xaee8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x9f4e));
        EXPECT(0x74, gbc.readMem(0xaee7));
        // 74 039C
        gbc.setState(0xd159, 0xfa0b, 0x38d0, 0xe869, 0x6d06, 0xa38d, 0x0, 0x1);
        gbc.writeMem(0xa38d, { 0x0 });
        gbc.writeMem(0xd159, { 0x74 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xfa0b, gbc.sp());
        EXPECT(0xd15a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xa38d));
        EXPECT(0x74, gbc.readMem(0xd159));
        // 74 039E
        gbc.setState(0x8214, 0xdb64, 0xfd10, 0x51a, 0x6160, 0xcdc8, 0x1, 0x0);
        gbc.writeMem(0x8214, { 0x74 });
        gbc.writeMem(0xcdc8, { 0x0 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xdb64, gbc.sp());
        EXPECT(0x8215, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0x8214));
        EXPECT(0xcd, gbc.readMem(0xcdc8));
        // 74 03A0
        gbc.setState(0xc859, 0xfb3, 0x6b30, 0x3946, 0xa695, 0xc3c9, 0x1, 0x0);
        gbc.writeMem(0xc3c9, { 0x0 });
        gbc.writeMem(0xc859, { 0x74 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xfb3, gbc.sp());
        EXPECT(0xc85a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xc3c9));
        EXPECT(0x74, gbc.readMem(0xc859));
        // 74 03A1
        gbc.setState(0xabdc, 0x64f0, 0x30f0, 0x63d0, 0x5fd7, 0x8a27, 0x1, 0x0);
        gbc.writeMem(0x8a27, { 0x0 });
        gbc.writeMem(0xabdc, { 0x74 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x64f0, gbc.sp());
        EXPECT(0xabdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x8a27));
        EXPECT(0x74, gbc.readMem(0xabdc));
        // 74 03A4
        gbc.setState(0xce0c, 0xa5ef, 0x2c70, 0x63fb, 0xd064, 0x9c3f, 0x1, 0x1);
        gbc.writeMem(0x9c3f, { 0x0 });
        gbc.writeMem(0xce0c, { 0x74 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xa5ef, gbc.sp());
        EXPECT(0xce0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x9c3f));
        EXPECT(0x74, gbc.readMem(0xce0c));
        // 74 03A6
        gbc.setState(0x75c, 0x53b4, 0x9120, 0x7856, 0xb858, 0xff7e, 0x1, 0x1);
        gbc.writeMem(0x75c, { 0x74 });
        gbc.writeMem(0xff7e, { 0x0 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x53b4, gbc.sp());
        EXPECT(0x75d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xff7e));
        // 74 03A9
        gbc.setState(0x3cd4, 0x3ad8, 0xf100, 0x3f98, 0x588b, 0xa2a6, 0x0, 0x1);
        gbc.writeMem(0x3cd4, { 0x74 });
        gbc.writeMem(0xa2a6, { 0x0 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x3ad8, gbc.sp());
        EXPECT(0x3cd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xa2a6));
        // 74 03AA
        gbc.setState(0xb4b9, 0xd09c, 0x3440, 0x8e95, 0xd335, 0x8084, 0x0, 0x1);
        gbc.writeMem(0x8084, { 0x0 });
        gbc.writeMem(0xb4b9, { 0x74 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xd09c, gbc.sp());
        EXPECT(0xb4ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x8084));
        EXPECT(0x74, gbc.readMem(0xb4b9));
        // 74 03AB
        gbc.setState(0xbc3d, 0x4b8e, 0xd70, 0x744e, 0x9b5e, 0x8d47, 0x0, 0x0);
        gbc.writeMem(0x8d47, { 0x0 });
        gbc.writeMem(0xbc3d, { 0x74 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x4b8e, gbc.sp());
        EXPECT(0xbc3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x8d47));
        EXPECT(0x74, gbc.readMem(0xbc3d));
        // 74 03AC
        gbc.setState(0xc9f5, 0xa183, 0xaa80, 0x67d4, 0xd587, 0xb347, 0x0, 0x0);
        gbc.writeMem(0xb347, { 0x0 });
        gbc.writeMem(0xc9f5, { 0x74 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xa183, gbc.sp());
        EXPECT(0xc9f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xb347));
        EXPECT(0x74, gbc.readMem(0xc9f5));
        // 74 03AF
        gbc.setState(0xd1d9, 0xec2b, 0x7510, 0x88e4, 0x5212, 0xc759, 0x1, 0x1);
        gbc.writeMem(0xc759, { 0x0 });
        gbc.writeMem(0xd1d9, { 0x74 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xec2b, gbc.sp());
        EXPECT(0xd1da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xc759));
        EXPECT(0x74, gbc.readMem(0xd1d9));
        // 74 03B0
        gbc.setState(0xa108, 0xc55f, 0xbeb0, 0x60b5, 0x5998, 0x8f4e, 0x0, 0x1);
        gbc.writeMem(0x8f4e, { 0x0 });
        gbc.writeMem(0xa108, { 0x74 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xc55f, gbc.sp());
        EXPECT(0xa109, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x8f4e));
        EXPECT(0x74, gbc.readMem(0xa108));
        // 74 03B1
        gbc.setState(0x814d, 0xb10f, 0x14d0, 0xcf58, 0x9b5d, 0x8762, 0x1, 0x1);
        gbc.writeMem(0x814d, { 0x74 });
        gbc.writeMem(0x8762, { 0x0 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xb10f, gbc.sp());
        EXPECT(0x814e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0x814d));
        EXPECT(0x87, gbc.readMem(0x8762));
        // 74 03B2
        gbc.setState(0x5b6e, 0xf715, 0x2740, 0x5659, 0xd07b, 0xc01f, 0x0, 0x1);
        gbc.writeMem(0x5b6e, { 0x74 });
        gbc.writeMem(0xc01f, { 0x0 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xf715, gbc.sp());
        EXPECT(0x5b6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0xc01f));
        // 74 03B5
        gbc.setState(0x58e1, 0x35fe, 0x1b90, 0xb052, 0x31ef, 0x8e66, 0x1, 0x1);
        gbc.writeMem(0x58e1, { 0x74 });
        gbc.writeMem(0x8e66, { 0x0 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x35fe, gbc.sp());
        EXPECT(0x58e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0x8e66));
        // 74 03B7
        gbc.setState(0x4934, 0xc486, 0x2d40, 0x5374, 0xffcc, 0xbec3, 0x0, 0x0);
        gbc.writeMem(0x4934, { 0x74 });
        gbc.writeMem(0xbec3, { 0x0 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xc486, gbc.sp());
        EXPECT(0x4935, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0xbec3));
        // 74 03BA
        gbc.setState(0x92ae, 0xc19c, 0xec0, 0x2fc5, 0xe8f5, 0xa09c, 0x1, 0x1);
        gbc.writeMem(0x92ae, { 0x74 });
        gbc.writeMem(0xa09c, { 0x0 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xc19c, gbc.sp());
        EXPECT(0x92af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0x92ae));
        EXPECT(0xa0, gbc.readMem(0xa09c));
        // 74 03BE
        gbc.setState(0xd09c, 0xe237, 0x2390, 0x9aa, 0x7639, 0xcb79, 0x0, 0x1);
        gbc.writeMem(0xcb79, { 0x0 });
        gbc.writeMem(0xd09c, { 0x74 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xe237, gbc.sp());
        EXPECT(0xd09d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb79));
        EXPECT(0x74, gbc.readMem(0xd09c));
        // 74 03C2
        gbc.setState(0xcfc4, 0x4f8e, 0x6fc0, 0xde9d, 0xc0a4, 0xc9f7, 0x1, 0x0);
        gbc.writeMem(0xc9f7, { 0x0 });
        gbc.writeMem(0xcfc4, { 0x74 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x4f8e, gbc.sp());
        EXPECT(0xcfc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xc9f7));
        EXPECT(0x74, gbc.readMem(0xcfc4));
        // 74 03C3
        gbc.setState(0x358, 0xf7ad, 0x45e0, 0x92f5, 0xa13d, 0x836b, 0x0, 0x0);
        gbc.writeMem(0x358, { 0x74 });
        gbc.writeMem(0x836b, { 0x0 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xf7ad, gbc.sp());
        EXPECT(0x359, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0x836b));
        // 74 03C5
        gbc.setState(0xca2f, 0xff79, 0x1080, 0x825b, 0x1cce, 0xe729, 0x1, 0x0);
        gbc.writeMem(0xca2f, { 0x74 });
        gbc.writeMem(0xe729, { 0x0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xff79, gbc.sp());
        EXPECT(0xca30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xca2f));
        EXPECT(0xe7, gbc.readMem(0xe729));
        // 74 03C7
        gbc.setState(0x95d0, 0x8687, 0xc890, 0xabcd, 0xac66, 0xfbea, 0x0, 0x0);
        gbc.writeMem(0x95d0, { 0x74 });
        gbc.writeMem(0xfbea, { 0x0 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x8687, gbc.sp());
        EXPECT(0x95d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0x95d0));
        EXPECT(0xfb, gbc.readMem(0xfbea));
        // 74 03C9
        gbc.setState(0x9f78, 0x6e51, 0x220, 0xa53c, 0x941e, 0xc780, 0x0, 0x1);
        gbc.writeMem(0x9f78, { 0x74 });
        gbc.writeMem(0xc780, { 0x0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x6e51, gbc.sp());
        EXPECT(0x9f79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0x9f78));
        EXPECT(0xc7, gbc.readMem(0xc780));
        // 74 03CA
        gbc.setState(0x6831, 0xed4c, 0xec60, 0x70b6, 0x5a72, 0xd4b2, 0x1, 0x1);
        gbc.writeMem(0x6831, { 0x74 });
        gbc.writeMem(0xd4b2, { 0x0 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xed4c, gbc.sp());
        EXPECT(0x6832, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xd4b2));
        // 74 03CB
        gbc.setState(0x724f, 0xc2b6, 0x87b0, 0x3ec9, 0x6c53, 0xf0f4, 0x0, 0x0);
        gbc.writeMem(0x724f, { 0x74 });
        gbc.writeMem(0xf0f4, { 0x0 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xc2b6, gbc.sp());
        EXPECT(0x7250, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xf0f4));
        // 74 03CD
        gbc.setState(0x7dd1, 0x4060, 0x9900, 0x6a5a, 0xc4c, 0xa19d, 0x1, 0x1);
        gbc.writeMem(0x7dd1, { 0x74 });
        gbc.writeMem(0xa19d, { 0x0 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x4060, gbc.sp());
        EXPECT(0x7dd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xa19d));
        // 74 03CE
        gbc.setState(0x4695, 0xdeb8, 0x8510, 0x5118, 0xf52d, 0x83e3, 0x0, 0x1);
        gbc.writeMem(0x4695, { 0x74 });
        gbc.writeMem(0x83e3, { 0x0 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xdeb8, gbc.sp());
        EXPECT(0x4696, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0x83e3));
        // 74 03CF
        gbc.setState(0xccbc, 0x24fb, 0x4b40, 0xc526, 0x9d6c, 0x89fd, 0x1, 0x1);
        gbc.writeMem(0x89fd, { 0x0 });
        gbc.writeMem(0xccbc, { 0x74 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x24fb, gbc.sp());
        EXPECT(0xccbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x89fd));
        EXPECT(0x74, gbc.readMem(0xccbc));
        // 74 03D1
        gbc.setState(0xc9e4, 0x3d1e, 0xd3e0, 0xe857, 0x90c6, 0xa814, 0x1, 0x1);
        gbc.writeMem(0xa814, { 0x0 });
        gbc.writeMem(0xc9e4, { 0x74 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x3d1e, gbc.sp());
        EXPECT(0xc9e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa8, gbc.readMem(0xa814));
        EXPECT(0x74, gbc.readMem(0xc9e4));
        // 74 03D6
        gbc.setState(0x13e5, 0xe132, 0x1530, 0x22f9, 0xc855, 0xb4f2, 0x1, 0x0);
        gbc.writeMem(0x13e5, { 0x74 });
        gbc.writeMem(0xb4f2, { 0x0 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xe132, gbc.sp());
        EXPECT(0x13e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0xb4f2));
        // 74 03D7
        gbc.setState(0xe602, 0x879e, 0x7070, 0x1995, 0xe683, 0xa3c4, 0x0, 0x1);
        gbc.writeMem(0xa3c4, { 0x0 });
        gbc.writeMem(0xe602, { 0x74 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x879e, gbc.sp());
        EXPECT(0xe603, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xa3c4));
        EXPECT(0x74, gbc.readMem(0xe602));
        // 74 03D8
        gbc.setState(0x57f3, 0x874f, 0x15b0, 0xc9de, 0x868e, 0x88d8, 0x0, 0x0);
        gbc.writeMem(0x57f3, { 0x74 });
        gbc.writeMem(0x88d8, { 0x0 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x874f, gbc.sp());
        EXPECT(0x57f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x88d8));
        // 74 03D9
        gbc.setState(0x398b, 0x8a28, 0xf800, 0x1fe8, 0xfcc4, 0xeb50, 0x1, 0x1);
        gbc.writeMem(0x398b, { 0x74 });
        gbc.writeMem(0xeb50, { 0x0 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x8a28, gbc.sp());
        EXPECT(0x398c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xeb, gbc.readMem(0xeb50));
        // 74 03DA
        gbc.setState(0x7373, 0x9610, 0x81f0, 0x2e2f, 0x175c, 0xd2cf, 0x1, 0x0);
        gbc.writeMem(0x7373, { 0x74 });
        gbc.writeMem(0xd2cf, { 0x0 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x9610, gbc.sp());
        EXPECT(0x7374, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0xd2cf));
        // 74 03DC
        gbc.setState(0x66a5, 0x1620, 0xeef0, 0xa169, 0x13bf, 0xce1f, 0x0, 0x1);
        gbc.writeMem(0x66a5, { 0x74 });
        gbc.writeMem(0xce1f, { 0x0 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x1620, gbc.sp());
        EXPECT(0x66a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0xce1f));
        // 74 03DD
        gbc.setState(0x3cf4, 0x4290, 0xd290, 0xe7e2, 0xbc61, 0xd46a, 0x0, 0x1);
        gbc.writeMem(0x3cf4, { 0x74 });
        gbc.writeMem(0xd46a, { 0x0 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x4290, gbc.sp());
        EXPECT(0x3cf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xd46a));
        // 74 03DF
        gbc.setState(0x9f4f, 0x8e86, 0xee90, 0x5b0c, 0x991a, 0xf929, 0x0, 0x0);
        gbc.writeMem(0x9f4f, { 0x74 });
        gbc.writeMem(0xf929, { 0x0 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x8e86, gbc.sp());
        EXPECT(0x9f50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0x9f4f));
        EXPECT(0xf9, gbc.readMem(0xf929));
        // 74 03E3
        gbc.setState(0xaa3, 0x427b, 0x2a0, 0x3573, 0x9963, 0x9e06, 0x0, 0x0);
        gbc.writeMem(0xaa3, { 0x74 });
        gbc.writeMem(0x9e06, { 0x0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x427b, gbc.sp());
        EXPECT(0xaa4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x9e06));
        // 74 03E5
        gbc.setState(0x9831, 0x933d, 0x3e50, 0xaf92, 0x9055, 0xe9fa, 0x0, 0x0);
        gbc.writeMem(0x9831, { 0x74 });
        gbc.writeMem(0xe9fa, { 0x0 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x933d, gbc.sp());
        EXPECT(0x9832, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0x9831));
        EXPECT(0xe9, gbc.readMem(0xe9fa));
    }
