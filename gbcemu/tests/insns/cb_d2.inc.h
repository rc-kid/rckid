    TEST(gbcemu, opcode_cb_d2) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB D2 0000
        gbc.setState(0xb2e4, 0x88d7, 0x95b0, 0xe913, 0x3158, 0xc0c7, 0x0, 0x0);
        gbc.writeMem(0xb2e4, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x88d7, gbc.sp());
        EXPECT(0xb2e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2e4));
        EXPECT(0xd2, gbc.readMem(0xb2e5));
        // CB D2 0001
        gbc.setState(0x8b07, 0xfb2d, 0xcff0, 0x73d8, 0xf512, 0x8962, 0x0, 0x1);
        gbc.writeMem(0x8b07, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xfb2d, gbc.sp());
        EXPECT(0x8b09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b07));
        EXPECT(0xd2, gbc.readMem(0x8b08));
        // CB D2 0002
        gbc.setState(0xd78c, 0xf681, 0x84f0, 0x64f6, 0xb2f3, 0x1a57, 0x1, 0x1);
        gbc.writeMem(0xd78c, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xf681, gbc.sp());
        EXPECT(0xd78e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd78c));
        EXPECT(0xd2, gbc.readMem(0xd78d));
        // CB D2 0003
        gbc.setState(0xd743, 0xe637, 0xdb80, 0x4242, 0x601e, 0xc108, 0x1, 0x1);
        gbc.writeMem(0xd743, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xe637, gbc.sp());
        EXPECT(0xd745, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd743));
        EXPECT(0xd2, gbc.readMem(0xd744));
        // CB D2 0004
        gbc.setState(0x98dc, 0xe34b, 0x1e30, 0x39bc, 0xd372, 0x98ce, 0x1, 0x0);
        gbc.writeMem(0x98dc, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xe34b, gbc.sp());
        EXPECT(0x98de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98dc));
        EXPECT(0xd2, gbc.readMem(0x98dd));
        // CB D2 0005
        gbc.setState(0xcb7c, 0x63b1, 0x7d00, 0x148b, 0xb73c, 0xf7f6, 0x0, 0x1);
        gbc.writeMem(0xcb7c, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x63b1, gbc.sp());
        EXPECT(0xcb7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb7c));
        EXPECT(0xd2, gbc.readMem(0xcb7d));
        // CB D2 0006
        gbc.setState(0xcfa6, 0xb9b2, 0x2430, 0x9468, 0x73d9, 0xd6c7, 0x0, 0x1);
        gbc.writeMem(0xcfa6, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xb9b2, gbc.sp());
        EXPECT(0xcfa8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfa6));
        EXPECT(0xd2, gbc.readMem(0xcfa7));
        // CB D2 0007
        gbc.setState(0x1c96, 0x7836, 0x3120, 0x9b75, 0x4457, 0xaa27, 0x1, 0x0);
        gbc.writeMem(0x1c96, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x7836, gbc.sp());
        EXPECT(0x1c98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0008
        gbc.setState(0xea19, 0xecc1, 0x9e80, 0x386d, 0x4b03, 0xde15, 0x1, 0x1);
        gbc.writeMem(0xea19, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xecc1, gbc.sp());
        EXPECT(0xea1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea19));
        EXPECT(0xd2, gbc.readMem(0xea1a));
        // CB D2 0009
        gbc.setState(0x7e8d, 0x6da2, 0xb690, 0x934a, 0x36c5, 0xe775, 0x1, 0x0);
        gbc.writeMem(0x7e8d, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x6da2, gbc.sp());
        EXPECT(0x7e8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 000A
        gbc.setState(0xa42f, 0x35c1, 0xf850, 0xd01e, 0x2566, 0x7f85, 0x0, 0x0);
        gbc.writeMem(0xa42f, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x35c1, gbc.sp());
        EXPECT(0xa431, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa42f));
        EXPECT(0xd2, gbc.readMem(0xa430));
        // CB D2 000B
        gbc.setState(0x3c12, 0xa7d7, 0x9580, 0x805b, 0xc473, 0xa043, 0x1, 0x0);
        gbc.writeMem(0x3c12, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xa7d7, gbc.sp());
        EXPECT(0x3c14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 000C
        gbc.setState(0x68c9, 0x2bfb, 0x8a0, 0x2f3f, 0x5ab3, 0xbb56, 0x0, 0x1);
        gbc.writeMem(0x68c9, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x2bfb, gbc.sp());
        EXPECT(0x68cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 000D
        gbc.setState(0xd511, 0x86c2, 0xb4a0, 0xfaa5, 0x7343, 0xd47, 0x1, 0x0);
        gbc.writeMem(0xd511, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x86c2, gbc.sp());
        EXPECT(0xd513, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd511));
        EXPECT(0xd2, gbc.readMem(0xd512));
        // CB D2 000E
        gbc.setState(0x6fc9, 0xbe6f, 0x6a40, 0xb40d, 0x621b, 0x96f5, 0x1, 0x1);
        gbc.writeMem(0x6fc9, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xbe6f, gbc.sp());
        EXPECT(0x6fcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 000F
        gbc.setState(0x9b80, 0x8b1d, 0x200, 0x7f60, 0x19f0, 0x6cf4, 0x1, 0x1);
        gbc.writeMem(0x9b80, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x8b1d, gbc.sp());
        EXPECT(0x9b82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b80));
        EXPECT(0xd2, gbc.readMem(0x9b81));
        // CB D2 0010
        gbc.setState(0xbf3b, 0x28e, 0xa00, 0x490b, 0x56aa, 0xa6af, 0x0, 0x1);
        gbc.writeMem(0xbf3b, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x28e, gbc.sp());
        EXPECT(0xbf3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf3b));
        EXPECT(0xd2, gbc.readMem(0xbf3c));
        // CB D2 0011
        gbc.setState(0x7a6b, 0xc9c4, 0x33f0, 0xb949, 0x807d, 0xf48f, 0x1, 0x0);
        gbc.writeMem(0x7a6b, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xc9c4, gbc.sp());
        EXPECT(0x7a6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0012
        gbc.setState(0xdddb, 0xcf41, 0x6c50, 0xc84, 0xe0b5, 0x7b8d, 0x1, 0x1);
        gbc.writeMem(0xdddb, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xcf41, gbc.sp());
        EXPECT(0xdddd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdddb));
        EXPECT(0xd2, gbc.readMem(0xdddc));
        // CB D2 0013
        gbc.setState(0x4b12, 0xa3a9, 0x8c70, 0xf508, 0x6a05, 0x4b2e, 0x0, 0x0);
        gbc.writeMem(0x4b12, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xa3a9, gbc.sp());
        EXPECT(0x4b14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0014
        gbc.setState(0x61fb, 0x57e6, 0x740, 0x8566, 0x1c0c, 0x8eef, 0x0, 0x1);
        gbc.writeMem(0x61fb, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x57e6, gbc.sp());
        EXPECT(0x61fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0015
        gbc.setState(0x45fa, 0xb33b, 0xe0e0, 0xb17f, 0x7621, 0xa146, 0x0, 0x1);
        gbc.writeMem(0x45fa, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xb33b, gbc.sp());
        EXPECT(0x45fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0016
        gbc.setState(0xde69, 0x594c, 0x9690, 0x6e17, 0xb6f6, 0xb48c, 0x0, 0x1);
        gbc.writeMem(0xde69, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x594c, gbc.sp());
        EXPECT(0xde6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde69));
        EXPECT(0xd2, gbc.readMem(0xde6a));
        // CB D2 0017
        gbc.setState(0xa9b1, 0x5e10, 0x8b90, 0xa8b3, 0x664d, 0x17ee, 0x1, 0x0);
        gbc.writeMem(0xa9b1, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x5e10, gbc.sp());
        EXPECT(0xa9b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9b1));
        EXPECT(0xd2, gbc.readMem(0xa9b2));
        // CB D2 0018
        gbc.setState(0x5ee8, 0x9b7b, 0x3ed0, 0x5c, 0x60f7, 0xe5ae, 0x1, 0x0);
        gbc.writeMem(0x5ee8, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x9b7b, gbc.sp());
        EXPECT(0x5eea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0019
        gbc.setState(0x7a83, 0x6913, 0xbef0, 0xf53f, 0x6673, 0x8fa9, 0x0, 0x0);
        gbc.writeMem(0x7a83, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x6913, gbc.sp());
        EXPECT(0x7a85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 001A
        gbc.setState(0xe6e4, 0x566, 0xab40, 0x6649, 0x5c63, 0x684e, 0x0, 0x1);
        gbc.writeMem(0xe6e4, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x566, gbc.sp());
        EXPECT(0xe6e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6e4));
        EXPECT(0xd2, gbc.readMem(0xe6e5));
        // CB D2 001B
        gbc.setState(0x3b16, 0x6868, 0x8180, 0xb6ac, 0xe576, 0x412a, 0x0, 0x0);
        gbc.writeMem(0x3b16, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x6868, gbc.sp());
        EXPECT(0x3b18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 001C
        gbc.setState(0xe89d, 0x865a, 0x9f00, 0xed75, 0xa1e5, 0x7c01, 0x1, 0x0);
        gbc.writeMem(0xe89d, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x865a, gbc.sp());
        EXPECT(0xe89f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe89d));
        EXPECT(0xd2, gbc.readMem(0xe89e));
        // CB D2 001D
        gbc.setState(0x13b8, 0x2cc6, 0xeec0, 0xe3cd, 0x9270, 0x29d0, 0x0, 0x1);
        gbc.writeMem(0x13b8, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x2cc6, gbc.sp());
        EXPECT(0x13ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 001E
        gbc.setState(0x177d, 0xd9a2, 0xb9e0, 0xbdb7, 0xed9e, 0x36bd, 0x0, 0x1);
        gbc.writeMem(0x177d, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xd9a2, gbc.sp());
        EXPECT(0x177f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 001F
        gbc.setState(0x61ac, 0x6077, 0xb760, 0x2705, 0x57c0, 0xb5b3, 0x1, 0x1);
        gbc.writeMem(0x61ac, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x6077, gbc.sp());
        EXPECT(0x61ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0020
        gbc.setState(0xadd4, 0x5925, 0x28a0, 0xbdc8, 0x776c, 0x53c5, 0x1, 0x0);
        gbc.writeMem(0xadd4, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x5925, gbc.sp());
        EXPECT(0xadd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadd4));
        EXPECT(0xd2, gbc.readMem(0xadd5));
        // CB D2 0021
        gbc.setState(0xc28c, 0xa7ee, 0x66c0, 0x68ef, 0x86cf, 0xe536, 0x1, 0x0);
        gbc.writeMem(0xc28c, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xa7ee, gbc.sp());
        EXPECT(0xc28e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc28c));
        EXPECT(0xd2, gbc.readMem(0xc28d));
        // CB D2 0022
        gbc.setState(0x1f2a, 0x553, 0x8470, 0x387d, 0x35a, 0x3cef, 0x0, 0x1);
        gbc.writeMem(0x1f2a, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x553, gbc.sp());
        EXPECT(0x1f2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0023
        gbc.setState(0x698, 0x1bbd, 0x2210, 0xc58f, 0x8e4f, 0x6600, 0x1, 0x0);
        gbc.writeMem(0x698, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x1bbd, gbc.sp());
        EXPECT(0x69a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0024
        gbc.setState(0xd854, 0x3925, 0x2470, 0xba18, 0xf0f8, 0xa093, 0x1, 0x0);
        gbc.writeMem(0xd854, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x3925, gbc.sp());
        EXPECT(0xd856, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd854));
        EXPECT(0xd2, gbc.readMem(0xd855));
        // CB D2 0025
        gbc.setState(0x1dc7, 0x8bde, 0xf3a0, 0x97ee, 0x9a03, 0xa810, 0x0, 0x0);
        gbc.writeMem(0x1dc7, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x8bde, gbc.sp());
        EXPECT(0x1dc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0026
        gbc.setState(0x66d0, 0xd53f, 0x1d40, 0x894e, 0x9f4b, 0xbb9d, 0x0, 0x0);
        gbc.writeMem(0x66d0, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xd53f, gbc.sp());
        EXPECT(0x66d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0027
        gbc.setState(0xce08, 0x6766, 0x4e50, 0x8b56, 0xa84b, 0xc830, 0x1, 0x0);
        gbc.writeMem(0xce08, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x6766, gbc.sp());
        EXPECT(0xce0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce08));
        EXPECT(0xd2, gbc.readMem(0xce09));
        // CB D2 0028
        gbc.setState(0xaa6a, 0xfd12, 0x4f70, 0xd981, 0xd618, 0x33d, 0x0, 0x1);
        gbc.writeMem(0xaa6a, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xfd12, gbc.sp());
        EXPECT(0xaa6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa6a));
        EXPECT(0xd2, gbc.readMem(0xaa6b));
        // CB D2 0029
        gbc.setState(0x5302, 0x8008, 0x3d0, 0xdf93, 0x2690, 0x507f, 0x0, 0x1);
        gbc.writeMem(0x5302, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x8008, gbc.sp());
        EXPECT(0x5304, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 002A
        gbc.setState(0x8491, 0x967f, 0x3550, 0x98f4, 0xe4c2, 0x142c, 0x0, 0x0);
        gbc.writeMem(0x8491, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x967f, gbc.sp());
        EXPECT(0x8493, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8491));
        EXPECT(0xd2, gbc.readMem(0x8492));
        // CB D2 002B
        gbc.setState(0x83, 0x1dd, 0x1dd0, 0xc898, 0x63bd, 0xf800, 0x0, 0x0);
        gbc.writeMem(0x83, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x1dd, gbc.sp());
        EXPECT(0x85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 002C
        gbc.setState(0xb16d, 0xc8b9, 0x3de0, 0x9ed8, 0x4441, 0xcdb, 0x0, 0x0);
        gbc.writeMem(0xb16d, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xc8b9, gbc.sp());
        EXPECT(0xb16f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb16d));
        EXPECT(0xd2, gbc.readMem(0xb16e));
        // CB D2 002D
        gbc.setState(0xacc, 0xb127, 0xaa0, 0xc957, 0xc103, 0x99e8, 0x1, 0x1);
        gbc.writeMem(0xacc, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xb127, gbc.sp());
        EXPECT(0xace, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 002E
        gbc.setState(0x3b89, 0x7187, 0xeba0, 0xab9, 0x703d, 0x1247, 0x1, 0x0);
        gbc.writeMem(0x3b89, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x7187, gbc.sp());
        EXPECT(0x3b8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 002F
        gbc.setState(0x316a, 0x98b2, 0x9be0, 0x8428, 0x5865, 0xf54e, 0x1, 0x1);
        gbc.writeMem(0x316a, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x98b2, gbc.sp());
        EXPECT(0x316c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0030
        gbc.setState(0xb480, 0xdaf5, 0x610, 0x9c3c, 0xec4d, 0xd927, 0x1, 0x0);
        gbc.writeMem(0xb480, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xdaf5, gbc.sp());
        EXPECT(0xb482, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb480));
        EXPECT(0xd2, gbc.readMem(0xb481));
        // CB D2 0031
        gbc.setState(0xb1b5, 0xcf0d, 0xbaf0, 0xd06f, 0x5974, 0xe102, 0x0, 0x1);
        gbc.writeMem(0xb1b5, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xcf0d, gbc.sp());
        EXPECT(0xb1b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1b5));
        EXPECT(0xd2, gbc.readMem(0xb1b6));
        // CB D2 0032
        gbc.setState(0x8a21, 0x4c51, 0x4e0, 0x4c58, 0x4b9, 0x90a7, 0x0, 0x0);
        gbc.writeMem(0x8a21, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x4c51, gbc.sp());
        EXPECT(0x8a23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a21));
        EXPECT(0xd2, gbc.readMem(0x8a22));
        // CB D2 0033
        gbc.setState(0xbc28, 0x13a6, 0x4730, 0x72d3, 0xaef, 0xcf5c, 0x0, 0x1);
        gbc.writeMem(0xbc28, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x13a6, gbc.sp());
        EXPECT(0xbc2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc28));
        EXPECT(0xd2, gbc.readMem(0xbc29));
        // CB D2 0034
        gbc.setState(0x433, 0xb31f, 0x9250, 0x4200, 0x7065, 0xf7fd, 0x0, 0x1);
        gbc.writeMem(0x433, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xb31f, gbc.sp());
        EXPECT(0x435, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0035
        gbc.setState(0x47db, 0xcc60, 0xf340, 0xfa9c, 0xdcc, 0x1f6c, 0x1, 0x0);
        gbc.writeMem(0x47db, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xcc60, gbc.sp());
        EXPECT(0x47dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0036
        gbc.setState(0x9582, 0x731e, 0xca90, 0x8537, 0x283e, 0x5d97, 0x1, 0x1);
        gbc.writeMem(0x9582, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x731e, gbc.sp());
        EXPECT(0x9584, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9582));
        EXPECT(0xd2, gbc.readMem(0x9583));
        // CB D2 0038
        gbc.setState(0x9af3, 0x9249, 0x5f20, 0x2337, 0x9da6, 0xd2af, 0x0, 0x1);
        gbc.writeMem(0x9af3, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x9249, gbc.sp());
        EXPECT(0x9af5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9af3));
        EXPECT(0xd2, gbc.readMem(0x9af4));
        // CB D2 0039
        gbc.setState(0x156e, 0xf9d3, 0x8610, 0xd7f1, 0x49f8, 0x35bf, 0x1, 0x0);
        gbc.writeMem(0x156e, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xf9d3, gbc.sp());
        EXPECT(0x1570, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 003A
        gbc.setState(0x67cf, 0xda9c, 0x74e0, 0x15a6, 0xe817, 0x791d, 0x0, 0x1);
        gbc.writeMem(0x67cf, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xda9c, gbc.sp());
        EXPECT(0x67d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 003B
        gbc.setState(0x3dab, 0x350f, 0x92a0, 0xcf8d, 0xf555, 0x76a1, 0x0, 0x1);
        gbc.writeMem(0x3dab, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x350f, gbc.sp());
        EXPECT(0x3dad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 003C
        gbc.setState(0x66cf, 0xc7a9, 0x56e0, 0x33ce, 0x9d4, 0x4e87, 0x1, 0x1);
        gbc.writeMem(0x66cf, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xc7a9, gbc.sp());
        EXPECT(0x66d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 003D
        gbc.setState(0xc28e, 0x9fb5, 0xa220, 0xb8a4, 0x4738, 0x19c6, 0x0, 0x0);
        gbc.writeMem(0xc28e, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x9fb5, gbc.sp());
        EXPECT(0xc290, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc28e));
        EXPECT(0xd2, gbc.readMem(0xc28f));
        // CB D2 003E
        gbc.setState(0x253f, 0xc5f8, 0x1f80, 0xe9ca, 0x46ab, 0x519e, 0x1, 0x0);
        gbc.writeMem(0x253f, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xc5f8, gbc.sp());
        EXPECT(0x2541, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 003F
        gbc.setState(0xce1d, 0xe0b5, 0x48e0, 0xf462, 0x1e97, 0xbf2, 0x1, 0x1);
        gbc.writeMem(0xce1d, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xe0b5, gbc.sp());
        EXPECT(0xce1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce1d));
        EXPECT(0xd2, gbc.readMem(0xce1e));
        // CB D2 0040
        gbc.setState(0xd1a3, 0xbbc2, 0x6b00, 0xf450, 0x9bb8, 0xebe4, 0x0, 0x0);
        gbc.writeMem(0xd1a3, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xbbc2, gbc.sp());
        EXPECT(0xd1a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1a3));
        EXPECT(0xd2, gbc.readMem(0xd1a4));
        // CB D2 0041
        gbc.setState(0x7663, 0x684a, 0xf630, 0x3524, 0xad3c, 0x28cf, 0x1, 0x0);
        gbc.writeMem(0x7663, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x684a, gbc.sp());
        EXPECT(0x7665, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0042
        gbc.setState(0xc82a, 0xdb69, 0x16e0, 0xc691, 0xfb99, 0xe071, 0x0, 0x1);
        gbc.writeMem(0xc82a, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xdb69, gbc.sp());
        EXPECT(0xc82c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc82a));
        EXPECT(0xd2, gbc.readMem(0xc82b));
        // CB D2 0043
        gbc.setState(0xcf90, 0x3a0e, 0x3590, 0x27b3, 0x48b5, 0xc79, 0x1, 0x0);
        gbc.writeMem(0xcf90, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x3a0e, gbc.sp());
        EXPECT(0xcf92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf90));
        EXPECT(0xd2, gbc.readMem(0xcf91));
        // CB D2 0044
        gbc.setState(0xc88f, 0x8b2c, 0xfbe0, 0x1c64, 0xcb47, 0x1003, 0x1, 0x1);
        gbc.writeMem(0xc88f, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x8b2c, gbc.sp());
        EXPECT(0xc891, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc88f));
        EXPECT(0xd2, gbc.readMem(0xc890));
        // CB D2 0045
        gbc.setState(0x11f0, 0x61e4, 0xd910, 0x6b76, 0x8e7, 0x9911, 0x1, 0x1);
        gbc.writeMem(0x11f0, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x61e4, gbc.sp());
        EXPECT(0x11f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0046
        gbc.setState(0x2796, 0x831f, 0xe120, 0xdcdd, 0x4e9e, 0xd58d, 0x1, 0x0);
        gbc.writeMem(0x2796, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x831f, gbc.sp());
        EXPECT(0x2798, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0047
        gbc.setState(0x5fe9, 0x99dd, 0x9580, 0xdadd, 0x8c5f, 0x9105, 0x1, 0x0);
        gbc.writeMem(0x5fe9, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x99dd, gbc.sp());
        EXPECT(0x5feb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0049
        gbc.setState(0x6808, 0xa5fb, 0x9830, 0xc6f1, 0x909c, 0x872b, 0x1, 0x1);
        gbc.writeMem(0x6808, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xa5fb, gbc.sp());
        EXPECT(0x680a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 004B
        gbc.setState(0x9140, 0x2538, 0xe1d0, 0x12f5, 0xfc23, 0x4e60, 0x1, 0x1);
        gbc.writeMem(0x9140, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x2538, gbc.sp());
        EXPECT(0x9142, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9140));
        EXPECT(0xd2, gbc.readMem(0x9141));
        // CB D2 004C
        gbc.setState(0x922, 0x9d3a, 0x3da0, 0xce1d, 0xc04b, 0x9dd7, 0x0, 0x1);
        gbc.writeMem(0x922, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x9d3a, gbc.sp());
        EXPECT(0x924, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 004D
        gbc.setState(0x2519, 0xed30, 0x7980, 0xdfa1, 0x1405, 0x9b11, 0x1, 0x1);
        gbc.writeMem(0x2519, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xed30, gbc.sp());
        EXPECT(0x251b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 004F
        gbc.setState(0x504c, 0x2ea0, 0xaa60, 0x1986, 0x3474, 0x133, 0x1, 0x0);
        gbc.writeMem(0x504c, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x2ea0, gbc.sp());
        EXPECT(0x504e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0050
        gbc.setState(0xe8af, 0x6fcf, 0xe720, 0xfc31, 0x8929, 0x4fd, 0x0, 0x1);
        gbc.writeMem(0xe8af, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x6fcf, gbc.sp());
        EXPECT(0xe8b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8af));
        EXPECT(0xd2, gbc.readMem(0xe8b0));
        // CB D2 0051
        gbc.setState(0x2e80, 0xd5dd, 0x1190, 0x6ae1, 0x823c, 0xe934, 0x0, 0x1);
        gbc.writeMem(0x2e80, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xd5dd, gbc.sp());
        EXPECT(0x2e82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0052
        gbc.setState(0xa544, 0x15b7, 0xbd50, 0xc5e6, 0x362a, 0x2f72, 0x1, 0x0);
        gbc.writeMem(0xa544, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x15b7, gbc.sp());
        EXPECT(0xa546, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa544));
        EXPECT(0xd2, gbc.readMem(0xa545));
        // CB D2 0053
        gbc.setState(0x1bab, 0x70d8, 0xfb70, 0x6a1b, 0xbc65, 0x8d77, 0x0, 0x1);
        gbc.writeMem(0x1bab, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x70d8, gbc.sp());
        EXPECT(0x1bad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0054
        gbc.setState(0x97b0, 0xae5, 0xc6d0, 0x38cb, 0x387, 0x23b3, 0x1, 0x0);
        gbc.writeMem(0x97b0, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xae5, gbc.sp());
        EXPECT(0x97b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97b0));
        EXPECT(0xd2, gbc.readMem(0x97b1));
        // CB D2 0055
        gbc.setState(0xb31d, 0xf2de, 0x5090, 0xbd0a, 0xc29e, 0xc2dc, 0x0, 0x0);
        gbc.writeMem(0xb31d, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xf2de, gbc.sp());
        EXPECT(0xb31f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb31d));
        EXPECT(0xd2, gbc.readMem(0xb31e));
        // CB D2 0056
        gbc.setState(0x64c2, 0x4590, 0xffd0, 0xa6dd, 0x709d, 0x1fd7, 0x1, 0x1);
        gbc.writeMem(0x64c2, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x4590, gbc.sp());
        EXPECT(0x64c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0057
        gbc.setState(0x3913, 0x1aee, 0x930, 0x3cf2, 0xb29, 0xe5a6, 0x1, 0x1);
        gbc.writeMem(0x3913, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x1aee, gbc.sp());
        EXPECT(0x3915, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0058
        gbc.setState(0x6c6a, 0x4f9c, 0x1320, 0xc485, 0xf550, 0x8aa0, 0x0, 0x0);
        gbc.writeMem(0x6c6a, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x4f9c, gbc.sp());
        EXPECT(0x6c6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0059
        gbc.setState(0xce3f, 0xabb1, 0x6a0, 0x931c, 0xd0b6, 0x471b, 0x0, 0x0);
        gbc.writeMem(0xce3f, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xabb1, gbc.sp());
        EXPECT(0xce41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce3f));
        EXPECT(0xd2, gbc.readMem(0xce40));
        // CB D2 005A
        gbc.setState(0xb54a, 0xc869, 0x8d90, 0x7252, 0x7461, 0xfde0, 0x0, 0x0);
        gbc.writeMem(0xb54a, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xc869, gbc.sp());
        EXPECT(0xb54c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb54a));
        EXPECT(0xd2, gbc.readMem(0xb54b));
        // CB D2 005B
        gbc.setState(0x510c, 0x38bf, 0x5260, 0xc7f1, 0x8cb5, 0x8da6, 0x1, 0x1);
        gbc.writeMem(0x510c, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x38bf, gbc.sp());
        EXPECT(0x510e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 005C
        gbc.setState(0xb52e, 0x92c3, 0x1f40, 0x764d, 0xc01c, 0x5060, 0x0, 0x1);
        gbc.writeMem(0xb52e, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x92c3, gbc.sp());
        EXPECT(0xb530, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb52e));
        EXPECT(0xd2, gbc.readMem(0xb52f));
        // CB D2 005D
        gbc.setState(0x6e19, 0xb850, 0xd100, 0x9a4d, 0x843c, 0xac1, 0x0, 0x1);
        gbc.writeMem(0x6e19, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xb850, gbc.sp());
        EXPECT(0x6e1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 005E
        gbc.setState(0x1fb1, 0x3073, 0x8520, 0x630c, 0xbd4e, 0xe98b, 0x0, 0x1);
        gbc.writeMem(0x1fb1, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x3073, gbc.sp());
        EXPECT(0x1fb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 005F
        gbc.setState(0xc5db, 0xf9a9, 0x1f70, 0x4dc2, 0x8aff, 0x469a, 0x0, 0x1);
        gbc.writeMem(0xc5db, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xf9a9, gbc.sp());
        EXPECT(0xc5dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5db));
        EXPECT(0xd2, gbc.readMem(0xc5dc));
        // CB D2 0060
        gbc.setState(0x1b09, 0x342e, 0xaa60, 0x2250, 0x4ec8, 0x9be7, 0x1, 0x0);
        gbc.writeMem(0x1b09, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x342e, gbc.sp());
        EXPECT(0x1b0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0062
        gbc.setState(0x973, 0x299e, 0x90b0, 0x1775, 0x5e62, 0xf78c, 0x0, 0x0);
        gbc.writeMem(0x973, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x299e, gbc.sp());
        EXPECT(0x975, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0063
        gbc.setState(0xaed4, 0x4e70, 0x6870, 0xe928, 0xd929, 0x5bee, 0x0, 0x0);
        gbc.writeMem(0xaed4, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x4e70, gbc.sp());
        EXPECT(0xaed6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaed4));
        EXPECT(0xd2, gbc.readMem(0xaed5));
        // CB D2 0064
        gbc.setState(0x55dd, 0x8ce1, 0xaf0, 0x75ff, 0x8569, 0x3616, 0x1, 0x0);
        gbc.writeMem(0x55dd, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x8ce1, gbc.sp());
        EXPECT(0x55df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0065
        gbc.setState(0xd98f, 0x711d, 0x7580, 0x3b1a, 0x1d6d, 0x232f, 0x0, 0x0);
        gbc.writeMem(0xd98f, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x711d, gbc.sp());
        EXPECT(0xd991, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd98f));
        EXPECT(0xd2, gbc.readMem(0xd990));
        // CB D2 0066
        gbc.setState(0xa99f, 0xf6e5, 0xbf70, 0xdbaf, 0x72f3, 0x83d6, 0x1, 0x0);
        gbc.writeMem(0xa99f, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xf6e5, gbc.sp());
        EXPECT(0xa9a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa99f));
        EXPECT(0xd2, gbc.readMem(0xa9a0));
        // CB D2 0067
        gbc.setState(0xc9, 0x5703, 0x3c20, 0x93f8, 0x1ad5, 0x2443, 0x0, 0x1);
        gbc.writeMem(0xc9, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x5703, gbc.sp());
        EXPECT(0xcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0068
        gbc.setState(0xc646, 0xf1f0, 0x31f0, 0xfebc, 0x4da1, 0xd23e, 0x1, 0x1);
        gbc.writeMem(0xc646, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xf1f0, gbc.sp());
        EXPECT(0xc648, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc646));
        EXPECT(0xd2, gbc.readMem(0xc647));
        // CB D2 0069
        gbc.setState(0xee73, 0x875d, 0x23f0, 0x90aa, 0x351c, 0x5cea, 0x1, 0x1);
        gbc.writeMem(0xee73, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x875d, gbc.sp());
        EXPECT(0xee75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee73));
        EXPECT(0xd2, gbc.readMem(0xee74));
        // CB D2 006A
        gbc.setState(0xc724, 0x536d, 0xf060, 0x44d9, 0xd134, 0xae7a, 0x0, 0x0);
        gbc.writeMem(0xc724, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x536d, gbc.sp());
        EXPECT(0xc726, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc724));
        EXPECT(0xd2, gbc.readMem(0xc725));
        // CB D2 006C
        gbc.setState(0x33dd, 0xbce9, 0x4aa0, 0x8260, 0x92cd, 0x4799, 0x1, 0x1);
        gbc.writeMem(0x33dd, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xbce9, gbc.sp());
        EXPECT(0x33df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 006D
        gbc.setState(0x73fb, 0x4628, 0xf210, 0x4fdd, 0x2338, 0x79af, 0x1, 0x1);
        gbc.writeMem(0x73fb, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x4628, gbc.sp());
        EXPECT(0x73fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 006F
        gbc.setState(0x6722, 0xa524, 0x61f0, 0xd1b1, 0xa491, 0xba8c, 0x1, 0x0);
        gbc.writeMem(0x6722, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xa524, gbc.sp());
        EXPECT(0x6724, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0070
        gbc.setState(0x4d9d, 0x42eb, 0x10a0, 0x3955, 0xd468, 0x853b, 0x0, 0x1);
        gbc.writeMem(0x4d9d, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x42eb, gbc.sp());
        EXPECT(0x4d9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0071
        gbc.setState(0x9b3b, 0xdc22, 0x9e40, 0xf105, 0xabdd, 0x7efa, 0x0, 0x1);
        gbc.writeMem(0x9b3b, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xdc22, gbc.sp());
        EXPECT(0x9b3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b3b));
        EXPECT(0xd2, gbc.readMem(0x9b3c));
        // CB D2 0072
        gbc.setState(0x205c, 0x45e6, 0x9ae0, 0x7c9c, 0x4301, 0x72ec, 0x1, 0x1);
        gbc.writeMem(0x205c, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x45e6, gbc.sp());
        EXPECT(0x205e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0073
        gbc.setState(0x1d76, 0xb2de, 0xe630, 0x8f6, 0xc9d9, 0x19b7, 0x0, 0x0);
        gbc.writeMem(0x1d76, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xb2de, gbc.sp());
        EXPECT(0x1d78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0075
        gbc.setState(0x9744, 0xffd8, 0x6780, 0x3a09, 0x5bef, 0xff5c, 0x1, 0x1);
        gbc.writeMem(0x9744, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xffd8, gbc.sp());
        EXPECT(0x9746, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9744));
        EXPECT(0xd2, gbc.readMem(0x9745));
        // CB D2 0076
        gbc.setState(0x40e3, 0x10d6, 0x2d90, 0x414d, 0x84e8, 0x3694, 0x1, 0x0);
        gbc.writeMem(0x40e3, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x10d6, gbc.sp());
        EXPECT(0x40e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0077
        gbc.setState(0x720a, 0x68e9, 0x5520, 0xabc9, 0xf261, 0xc2ab, 0x0, 0x0);
        gbc.writeMem(0x720a, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x68e9, gbc.sp());
        EXPECT(0x720c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 007A
        gbc.setState(0xc5b7, 0x3312, 0xc2f0, 0x458b, 0x8bc7, 0xa119, 0x0, 0x0);
        gbc.writeMem(0xc5b7, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x3312, gbc.sp());
        EXPECT(0xc5b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5b7));
        EXPECT(0xd2, gbc.readMem(0xc5b8));
        // CB D2 007C
        gbc.setState(0x8c24, 0x2acb, 0x8130, 0xbd7d, 0xedd6, 0x22d1, 0x0, 0x1);
        gbc.writeMem(0x8c24, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x2acb, gbc.sp());
        EXPECT(0x8c26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c24));
        EXPECT(0xd2, gbc.readMem(0x8c25));
        // CB D2 007D
        gbc.setState(0x18f6, 0x297b, 0xb6d0, 0x2139, 0x3cf4, 0xdb4e, 0x0, 0x0);
        gbc.writeMem(0x18f6, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x297b, gbc.sp());
        EXPECT(0x18f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 007E
        gbc.setState(0x9d74, 0xa347, 0x12a0, 0x7eca, 0xc65, 0xaa6c, 0x0, 0x1);
        gbc.writeMem(0x9d74, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xa347, gbc.sp());
        EXPECT(0x9d76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d74));
        EXPECT(0xd2, gbc.readMem(0x9d75));
        // CB D2 007F
        gbc.setState(0x3df4, 0x3e96, 0xb310, 0x7c1f, 0xae1e, 0x43f8, 0x1, 0x0);
        gbc.writeMem(0x3df4, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x3e96, gbc.sp());
        EXPECT(0x3df6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0080
        gbc.setState(0x50dd, 0x1b3a, 0xeb70, 0xd1be, 0x698a, 0x4e38, 0x0, 0x0);
        gbc.writeMem(0x50dd, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x1b3a, gbc.sp());
        EXPECT(0x50df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0081
        gbc.setState(0x53c8, 0x3ac7, 0xd0b0, 0x7812, 0x25b5, 0x2c6a, 0x1, 0x1);
        gbc.writeMem(0x53c8, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x3ac7, gbc.sp());
        EXPECT(0x53ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0083
        gbc.setState(0xd4fb, 0xd11, 0xf110, 0x3182, 0x3b8d, 0xe531, 0x1, 0x0);
        gbc.writeMem(0xd4fb, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xd11, gbc.sp());
        EXPECT(0xd4fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4fb));
        EXPECT(0xd2, gbc.readMem(0xd4fc));
        // CB D2 0084
        gbc.setState(0x3d18, 0x50f0, 0xdb0, 0x34da, 0xaff2, 0xefde, 0x1, 0x1);
        gbc.writeMem(0x3d18, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x50f0, gbc.sp());
        EXPECT(0x3d1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0085
        gbc.setState(0x730, 0xb274, 0x46d0, 0x22af, 0x5c94, 0x457a, 0x1, 0x0);
        gbc.writeMem(0x730, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xb274, gbc.sp());
        EXPECT(0x732, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0086
        gbc.setState(0x8a05, 0xd2f6, 0x3720, 0xebf5, 0x89df, 0xfd97, 0x1, 0x0);
        gbc.writeMem(0x8a05, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xd2f6, gbc.sp());
        EXPECT(0x8a07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a05));
        EXPECT(0xd2, gbc.readMem(0x8a06));
        // CB D2 0087
        gbc.setState(0x3153, 0xeaba, 0x6510, 0x645, 0x98ed, 0x93a, 0x1, 0x0);
        gbc.writeMem(0x3153, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xeaba, gbc.sp());
        EXPECT(0x3155, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0088
        gbc.setState(0x3b1b, 0x7528, 0x7460, 0x36a6, 0x75ae, 0x8a02, 0x0, 0x1);
        gbc.writeMem(0x3b1b, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x7528, gbc.sp());
        EXPECT(0x3b1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0089
        gbc.setState(0xe1e4, 0x56b3, 0xd190, 0xab25, 0x7e26, 0x1e04, 0x0, 0x1);
        gbc.writeMem(0xe1e4, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x56b3, gbc.sp());
        EXPECT(0xe1e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1e4));
        EXPECT(0xd2, gbc.readMem(0xe1e5));
        // CB D2 008A
        gbc.setState(0xcc5d, 0x5d6b, 0x8340, 0xa4f8, 0x4f7a, 0x7218, 0x1, 0x1);
        gbc.writeMem(0xcc5d, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x5d6b, gbc.sp());
        EXPECT(0xcc5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc5d));
        EXPECT(0xd2, gbc.readMem(0xcc5e));
        // CB D2 008B
        gbc.setState(0xde57, 0x4da, 0xc810, 0x3b12, 0xd998, 0xcb4a, 0x0, 0x0);
        gbc.writeMem(0xde57, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x4da, gbc.sp());
        EXPECT(0xde59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde57));
        EXPECT(0xd2, gbc.readMem(0xde58));
        // CB D2 008C
        gbc.setState(0xa018, 0x80ec, 0x4350, 0x7c99, 0xc5d8, 0x7dd6, 0x1, 0x0);
        gbc.writeMem(0xa018, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x80ec, gbc.sp());
        EXPECT(0xa01a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa018));
        EXPECT(0xd2, gbc.readMem(0xa019));
        // CB D2 008D
        gbc.setState(0x36a5, 0x27b, 0xdba0, 0x7fd0, 0x989c, 0x9c21, 0x0, 0x0);
        gbc.writeMem(0x36a5, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x27b, gbc.sp());
        EXPECT(0x36a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 008E
        gbc.setState(0xb670, 0x7ea8, 0x2c90, 0xc491, 0xebf4, 0x3564, 0x1, 0x0);
        gbc.writeMem(0xb670, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x7ea8, gbc.sp());
        EXPECT(0xb672, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb670));
        EXPECT(0xd2, gbc.readMem(0xb671));
        // CB D2 0090
        gbc.setState(0x2d85, 0xf417, 0xae30, 0xac4e, 0xdae4, 0x12b0, 0x1, 0x1);
        gbc.writeMem(0x2d85, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xf417, gbc.sp());
        EXPECT(0x2d87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0091
        gbc.setState(0x5c2e, 0x4e31, 0x3f50, 0xdb13, 0xc5ac, 0x6ba3, 0x0, 0x0);
        gbc.writeMem(0x5c2e, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x4e31, gbc.sp());
        EXPECT(0x5c30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0093
        gbc.setState(0xaad3, 0xe115, 0x5a10, 0x6af5, 0xbf84, 0xed4a, 0x0, 0x0);
        gbc.writeMem(0xaad3, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xe115, gbc.sp());
        EXPECT(0xaad5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaad3));
        EXPECT(0xd2, gbc.readMem(0xaad4));
        // CB D2 0094
        gbc.setState(0x94d9, 0xc0ae, 0x8ea0, 0xf598, 0x1749, 0x2b08, 0x1, 0x1);
        gbc.writeMem(0x94d9, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xc0ae, gbc.sp());
        EXPECT(0x94db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94d9));
        EXPECT(0xd2, gbc.readMem(0x94da));
        // CB D2 0095
        gbc.setState(0x34bd, 0xf658, 0x5c00, 0x6b29, 0x6b59, 0xb409, 0x0, 0x0);
        gbc.writeMem(0x34bd, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xf658, gbc.sp());
        EXPECT(0x34bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0096
        gbc.setState(0x9dff, 0xadc8, 0x610, 0x2fd1, 0x9349, 0x9350, 0x0, 0x1);
        gbc.writeMem(0x9dff, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xadc8, gbc.sp());
        EXPECT(0x9e01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dff));
        EXPECT(0xd2, gbc.readMem(0x9e00));
        // CB D2 0097
        gbc.setState(0x6f8e, 0xf40f, 0x4d90, 0x9de8, 0xb5a3, 0x1b44, 0x1, 0x0);
        gbc.writeMem(0x6f8e, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xf40f, gbc.sp());
        EXPECT(0x6f90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0098
        gbc.setState(0x6fed, 0x10da, 0x8250, 0x2d25, 0xc19, 0xcb4a, 0x1, 0x1);
        gbc.writeMem(0x6fed, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x10da, gbc.sp());
        EXPECT(0x6fef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0099
        gbc.setState(0x20fe, 0x36d, 0xc0e0, 0xf9b7, 0x76a4, 0x691c, 0x1, 0x0);
        gbc.writeMem(0x20fe, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x36d, gbc.sp());
        EXPECT(0x2100, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 009A
        gbc.setState(0x72b2, 0xfc5, 0x94a0, 0x6f5a, 0x6d21, 0xaf48, 0x1, 0x1);
        gbc.writeMem(0x72b2, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xfc5, gbc.sp());
        EXPECT(0x72b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 009B
        gbc.setState(0x6be2, 0x8e60, 0xf70, 0xc5a9, 0x35c5, 0xb91e, 0x1, 0x1);
        gbc.writeMem(0x6be2, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x8e60, gbc.sp());
        EXPECT(0x6be4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 009C
        gbc.setState(0x8ec4, 0xcf73, 0x3b60, 0x8e1d, 0x8b51, 0xeb13, 0x1, 0x1);
        gbc.writeMem(0x8ec4, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xcf73, gbc.sp());
        EXPECT(0x8ec6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ec4));
        EXPECT(0xd2, gbc.readMem(0x8ec5));
        // CB D2 009D
        gbc.setState(0x5ea6, 0x70b4, 0xd310, 0xfe79, 0xe2b9, 0x7d3a, 0x1, 0x1);
        gbc.writeMem(0x5ea6, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x70b4, gbc.sp());
        EXPECT(0x5ea8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 009E
        gbc.setState(0x6001, 0xe321, 0xfc70, 0x6b2f, 0x6c76, 0x73fd, 0x1, 0x1);
        gbc.writeMem(0x6001, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xe321, gbc.sp());
        EXPECT(0x6003, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 009F
        gbc.setState(0x71df, 0x2e4, 0x4e30, 0x6868, 0x44c2, 0x2f45, 0x1, 0x0);
        gbc.writeMem(0x71df, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x2e4, gbc.sp());
        EXPECT(0x71e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 00A0
        gbc.setState(0x4919, 0x3da0, 0x1a10, 0x1045, 0x3dce, 0xd3e6, 0x1, 0x0);
        gbc.writeMem(0x4919, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x3da0, gbc.sp());
        EXPECT(0x491b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 00A1
        gbc.setState(0x8a41, 0x17c, 0xed0, 0x869f, 0xb07f, 0x3cad, 0x0, 0x1);
        gbc.writeMem(0x8a41, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x17c, gbc.sp());
        EXPECT(0x8a43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a41));
        EXPECT(0xd2, gbc.readMem(0x8a42));
        // CB D2 00A2
        gbc.setState(0xef36, 0x72e7, 0x41a0, 0x9e11, 0x3e54, 0xa429, 0x1, 0x1);
        gbc.writeMem(0xef36, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x72e7, gbc.sp());
        EXPECT(0xef38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef36));
        EXPECT(0xd2, gbc.readMem(0xef37));
        // CB D2 00A3
        gbc.setState(0xd5f3, 0x2685, 0x6e0, 0x7fbc, 0x626a, 0x74f9, 0x0, 0x0);
        gbc.writeMem(0xd5f3, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x2685, gbc.sp());
        EXPECT(0xd5f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5f3));
        EXPECT(0xd2, gbc.readMem(0xd5f4));
        // CB D2 00A4
        gbc.setState(0x128d, 0xb684, 0xb4c0, 0x5604, 0x59f5, 0x5a0, 0x0, 0x1);
        gbc.writeMem(0x128d, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xb684, gbc.sp());
        EXPECT(0x128f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 00A6
        gbc.setState(0xe560, 0xacfc, 0x66c0, 0x13de, 0x1114, 0x9605, 0x0, 0x0);
        gbc.writeMem(0xe560, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xacfc, gbc.sp());
        EXPECT(0xe562, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe560));
        EXPECT(0xd2, gbc.readMem(0xe561));
        // CB D2 00A7
        gbc.setState(0x7ddf, 0xb9e7, 0xf780, 0x4512, 0x8b82, 0x9225, 0x0, 0x1);
        gbc.writeMem(0x7ddf, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xb9e7, gbc.sp());
        EXPECT(0x7de1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 00A8
        gbc.setState(0x8d1b, 0xef90, 0x49f0, 0xc8ea, 0x2121, 0x80f6, 0x1, 0x1);
        gbc.writeMem(0x8d1b, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xef90, gbc.sp());
        EXPECT(0x8d1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d1b));
        EXPECT(0xd2, gbc.readMem(0x8d1c));
        // CB D2 00A9
        gbc.setState(0x9ad7, 0xcb70, 0xbde0, 0xce44, 0x586b, 0xa1b8, 0x0, 0x1);
        gbc.writeMem(0x9ad7, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xcb70, gbc.sp());
        EXPECT(0x9ad9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ad7));
        EXPECT(0xd2, gbc.readMem(0x9ad8));
        // CB D2 00AA
        gbc.setState(0xdb62, 0x77cc, 0xecc0, 0x32c1, 0x425, 0x2797, 0x0, 0x1);
        gbc.writeMem(0xdb62, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x77cc, gbc.sp());
        EXPECT(0xdb64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb62));
        EXPECT(0xd2, gbc.readMem(0xdb63));
        // CB D2 00AB
        gbc.setState(0x4984, 0xd853, 0x2a30, 0x771a, 0x63ff, 0x3b0f, 0x0, 0x1);
        gbc.writeMem(0x4984, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xd853, gbc.sp());
        EXPECT(0x4986, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 00AC
        gbc.setState(0xd13a, 0xcac1, 0x47a0, 0xa619, 0xfe42, 0x87f7, 0x0, 0x1);
        gbc.writeMem(0xd13a, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xcac1, gbc.sp());
        EXPECT(0xd13c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd13a));
        EXPECT(0xd2, gbc.readMem(0xd13b));
        // CB D2 00AD
        gbc.setState(0x61c7, 0xdf03, 0x7070, 0x6641, 0x5c14, 0x3405, 0x1, 0x1);
        gbc.writeMem(0x61c7, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xdf03, gbc.sp());
        EXPECT(0x61c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 00AE
        gbc.setState(0xcc30, 0x2996, 0x62a0, 0x1dc3, 0xb620, 0x920b, 0x1, 0x0);
        gbc.writeMem(0xcc30, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x2996, gbc.sp());
        EXPECT(0xcc32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc30));
        EXPECT(0xd2, gbc.readMem(0xcc31));
        // CB D2 00AF
        gbc.setState(0x322e, 0xb0f4, 0x3c20, 0x7819, 0x76d7, 0x7e, 0x1, 0x1);
        gbc.writeMem(0x322e, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xb0f4, gbc.sp());
        EXPECT(0x3230, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 00B0
        gbc.setState(0x4ad4, 0xaaa6, 0x98a0, 0xb366, 0xd3a5, 0x818, 0x0, 0x0);
        gbc.writeMem(0x4ad4, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xaaa6, gbc.sp());
        EXPECT(0x4ad6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 00B1
        gbc.setState(0x5efd, 0x7269, 0x3650, 0xb206, 0xc737, 0xab40, 0x0, 0x0);
        gbc.writeMem(0x5efd, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x7269, gbc.sp());
        EXPECT(0x5eff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 00B2
        gbc.setState(0xcb2, 0x6e2b, 0x8dc0, 0xfc2f, 0xb868, 0x7bfb, 0x0, 0x0);
        gbc.writeMem(0xcb2, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x6e2b, gbc.sp());
        EXPECT(0xcb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 00B3
        gbc.setState(0xe66c, 0x372c, 0x280, 0x43da, 0x758, 0x3dd5, 0x1, 0x1);
        gbc.writeMem(0xe66c, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x372c, gbc.sp());
        EXPECT(0xe66e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe66c));
        EXPECT(0xd2, gbc.readMem(0xe66d));
        // CB D2 00B4
        gbc.setState(0x5f23, 0xe7e8, 0x3220, 0x3fee, 0xe04b, 0xef94, 0x1, 0x0);
        gbc.writeMem(0x5f23, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xe7e8, gbc.sp());
        EXPECT(0x5f25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 00B5
        gbc.setState(0xa63, 0x7d05, 0xac20, 0xc096, 0xc636, 0x5f2d, 0x0, 0x1);
        gbc.writeMem(0xa63, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x7d05, gbc.sp());
        EXPECT(0xa65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 00B6
        gbc.setState(0x4b18, 0xe7ae, 0xe700, 0xcd7c, 0xf824, 0xa65e, 0x1, 0x0);
        gbc.writeMem(0x4b18, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xe7ae, gbc.sp());
        EXPECT(0x4b1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 00B7
        gbc.setState(0x11a3, 0xcdfa, 0xa370, 0x54b0, 0x1737, 0x6637, 0x1, 0x0);
        gbc.writeMem(0x11a3, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xcdfa, gbc.sp());
        EXPECT(0x11a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 00B8
        gbc.setState(0x6ccc, 0x90c8, 0x8e40, 0x11f6, 0xc4e4, 0x21ca, 0x1, 0x1);
        gbc.writeMem(0x6ccc, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x90c8, gbc.sp());
        EXPECT(0x6cce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 00B9
        gbc.setState(0x48dc, 0x9f75, 0x2950, 0x4770, 0x7ab0, 0x6ffb, 0x0, 0x0);
        gbc.writeMem(0x48dc, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x9f75, gbc.sp());
        EXPECT(0x48de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 00BA
        gbc.setState(0xc905, 0x32ad, 0xec80, 0x3de3, 0x4711, 0x7b24, 0x1, 0x1);
        gbc.writeMem(0xc905, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x32ad, gbc.sp());
        EXPECT(0xc907, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc905));
        EXPECT(0xd2, gbc.readMem(0xc906));
        // CB D2 00BB
        gbc.setState(0x132b, 0x702c, 0x1670, 0x8c45, 0x7b92, 0x29bd, 0x1, 0x0);
        gbc.writeMem(0x132b, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x702c, gbc.sp());
        EXPECT(0x132d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 00BC
        gbc.setState(0x9766, 0xe084, 0x4940, 0xb5b7, 0x7937, 0x8413, 0x1, 0x1);
        gbc.writeMem(0x9766, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xe084, gbc.sp());
        EXPECT(0x9768, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9766));
        EXPECT(0xd2, gbc.readMem(0x9767));
        // CB D2 00BD
        gbc.setState(0xb433, 0xd9ef, 0x3f0, 0x1caa, 0x6ba0, 0x57da, 0x1, 0x1);
        gbc.writeMem(0xb433, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xd9ef, gbc.sp());
        EXPECT(0xb435, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb433));
        EXPECT(0xd2, gbc.readMem(0xb434));
        // CB D2 00BE
        gbc.setState(0x6f07, 0x5be0, 0xa8a0, 0xeb7f, 0xece7, 0x2c23, 0x0, 0x0);
        gbc.writeMem(0x6f07, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x5be0, gbc.sp());
        EXPECT(0x6f09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 00BF
        gbc.setState(0x80fa, 0xd126, 0xd0b0, 0x1843, 0x8d94, 0x920f, 0x0, 0x1);
        gbc.writeMem(0x80fa, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xd126, gbc.sp());
        EXPECT(0x80fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80fa));
        EXPECT(0xd2, gbc.readMem(0x80fb));
        // CB D2 00C0
        gbc.setState(0x53a5, 0x1608, 0x6a70, 0xf9ce, 0xdd19, 0x1d6, 0x0, 0x1);
        gbc.writeMem(0x53a5, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x1608, gbc.sp());
        EXPECT(0x53a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 00C1
        gbc.setState(0x6342, 0x733d, 0x9760, 0x2196, 0x87d5, 0xffa5, 0x0, 0x1);
        gbc.writeMem(0x6342, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x733d, gbc.sp());
        EXPECT(0x6344, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 00C2
        gbc.setState(0x1170, 0xdbc0, 0x6fb0, 0x9a60, 0xe767, 0x3b15, 0x0, 0x1);
        gbc.writeMem(0x1170, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xdbc0, gbc.sp());
        EXPECT(0x1172, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 00C3
        gbc.setState(0x604f, 0x7df5, 0xe520, 0x106e, 0x98d0, 0xfffa, 0x1, 0x1);
        gbc.writeMem(0x604f, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x7df5, gbc.sp());
        EXPECT(0x6051, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 00C4
        gbc.setState(0xd60e, 0xd4b5, 0xe5d0, 0x78f5, 0xdfea, 0xdc01, 0x0, 0x0);
        gbc.writeMem(0xd60e, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xd4b5, gbc.sp());
        EXPECT(0xd610, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd60e));
        EXPECT(0xd2, gbc.readMem(0xd60f));
        // CB D2 00C5
        gbc.setState(0xb49e, 0x41b3, 0x8b40, 0x224d, 0x6ec3, 0xf488, 0x0, 0x1);
        gbc.writeMem(0xb49e, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x41b3, gbc.sp());
        EXPECT(0xb4a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb49e));
        EXPECT(0xd2, gbc.readMem(0xb49f));
        // CB D2 00C6
        gbc.setState(0x1973, 0x131a, 0x1660, 0x6383, 0x1ae0, 0x284d, 0x1, 0x1);
        gbc.writeMem(0x1973, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x131a, gbc.sp());
        EXPECT(0x1975, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 00C7
        gbc.setState(0x6bad, 0x9cb1, 0xa360, 0x627d, 0x511a, 0x62e9, 0x0, 0x1);
        gbc.writeMem(0x6bad, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x9cb1, gbc.sp());
        EXPECT(0x6baf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 00C8
        gbc.setState(0x2aeb, 0x9430, 0x930, 0x4168, 0x882d, 0x830e, 0x1, 0x1);
        gbc.writeMem(0x2aeb, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x9430, gbc.sp());
        EXPECT(0x2aed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 00C9
        gbc.setState(0x5559, 0xc31e, 0x5e0, 0xe46a, 0x7bd0, 0xd38d, 0x0, 0x0);
        gbc.writeMem(0x5559, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xc31e, gbc.sp());
        EXPECT(0x555b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 00CA
        gbc.setState(0x8c3e, 0xedf7, 0xed0, 0xe6ae, 0x60ba, 0xf7a8, 0x0, 0x0);
        gbc.writeMem(0x8c3e, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xedf7, gbc.sp());
        EXPECT(0x8c40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c3e));
        EXPECT(0xd2, gbc.readMem(0x8c3f));
        // CB D2 00CB
        gbc.setState(0xee60, 0x297b, 0x33f0, 0x198d, 0xec25, 0x4f94, 0x0, 0x0);
        gbc.writeMem(0xee60, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x297b, gbc.sp());
        EXPECT(0xee62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee60));
        EXPECT(0xd2, gbc.readMem(0xee61));
        // CB D2 00CC
        gbc.setState(0xb20e, 0x3b63, 0x4360, 0x5388, 0xfc69, 0x417, 0x1, 0x1);
        gbc.writeMem(0xb20e, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x3b63, gbc.sp());
        EXPECT(0xb210, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb20e));
        EXPECT(0xd2, gbc.readMem(0xb20f));
        // CB D2 00CD
        gbc.setState(0x11c0, 0xfed0, 0x2a0, 0x2066, 0x9f34, 0x5e7c, 0x1, 0x1);
        gbc.writeMem(0x11c0, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xfed0, gbc.sp());
        EXPECT(0x11c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 00CE
        gbc.setState(0x2dbb, 0xcd54, 0x83e0, 0x5f3e, 0x2f2c, 0x6f8c, 0x0, 0x1);
        gbc.writeMem(0x2dbb, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xcd54, gbc.sp());
        EXPECT(0x2dbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 00CF
        gbc.setState(0xe03, 0xb303, 0x5bb0, 0xed1a, 0x10d6, 0x4b62, 0x1, 0x0);
        gbc.writeMem(0xe03, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xb303, gbc.sp());
        EXPECT(0xe05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 00D0
        gbc.setState(0x3ad7, 0x64db, 0x2f30, 0x7f15, 0x6c87, 0x60b2, 0x0, 0x0);
        gbc.writeMem(0x3ad7, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x64db, gbc.sp());
        EXPECT(0x3ad9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 00D1
        gbc.setState(0x2ec, 0x6c89, 0xd790, 0xf86, 0x8b53, 0xc73d, 0x0, 0x0);
        gbc.writeMem(0x2ec, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x6c89, gbc.sp());
        EXPECT(0x2ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 00D2
        gbc.setState(0xc38f, 0x500c, 0x740, 0x5437, 0x8129, 0x3051, 0x0, 0x1);
        gbc.writeMem(0xc38f, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x500c, gbc.sp());
        EXPECT(0xc391, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc38f));
        EXPECT(0xd2, gbc.readMem(0xc390));
        // CB D2 00D3
        gbc.setState(0xb4df, 0x1acd, 0x6070, 0xe0f6, 0x1e4e, 0xb6d4, 0x0, 0x0);
        gbc.writeMem(0xb4df, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x1acd, gbc.sp());
        EXPECT(0xb4e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4df));
        EXPECT(0xd2, gbc.readMem(0xb4e0));
        // CB D2 00D4
        gbc.setState(0xe17c, 0xa437, 0x2660, 0x50c3, 0x7325, 0xd520, 0x1, 0x0);
        gbc.writeMem(0xe17c, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xa437, gbc.sp());
        EXPECT(0xe17e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe17c));
        EXPECT(0xd2, gbc.readMem(0xe17d));
        // CB D2 00D5
        gbc.setState(0xc786, 0xca8e, 0x4660, 0x8405, 0x3653, 0x589, 0x0, 0x0);
        gbc.writeMem(0xc786, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xca8e, gbc.sp());
        EXPECT(0xc788, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc786));
        EXPECT(0xd2, gbc.readMem(0xc787));
        // CB D2 00D6
        gbc.setState(0x7310, 0xf209, 0x73e0, 0x295d, 0x6635, 0xcd7f, 0x1, 0x0);
        gbc.writeMem(0x7310, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xf209, gbc.sp());
        EXPECT(0x7312, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 00D7
        gbc.setState(0x5906, 0xc7fc, 0x8260, 0xb240, 0x7720, 0xaf24, 0x0, 0x0);
        gbc.writeMem(0x5906, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xc7fc, gbc.sp());
        EXPECT(0x5908, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 00D8
        gbc.setState(0x67c9, 0xd1d6, 0x5310, 0x95a5, 0x8517, 0xbe66, 0x0, 0x1);
        gbc.writeMem(0x67c9, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xd1d6, gbc.sp());
        EXPECT(0x67cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 00D9
        gbc.setState(0x30e5, 0xe575, 0xe9d0, 0xf7d2, 0xadb1, 0xc6e, 0x0, 0x1);
        gbc.writeMem(0x30e5, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xe575, gbc.sp());
        EXPECT(0x30e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 00DA
        gbc.setState(0x29c3, 0xf42, 0x66b0, 0x91fd, 0x6f96, 0x4e23, 0x0, 0x0);
        gbc.writeMem(0x29c3, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xf42, gbc.sp());
        EXPECT(0x29c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 00DB
        gbc.setState(0xb19d, 0xd625, 0xebd0, 0xad2f, 0x2f90, 0x8ea5, 0x0, 0x0);
        gbc.writeMem(0xb19d, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xd625, gbc.sp());
        EXPECT(0xb19f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb19d));
        EXPECT(0xd2, gbc.readMem(0xb19e));
        // CB D2 00DC
        gbc.setState(0x30c3, 0x1c07, 0x590, 0x279d, 0xb3a9, 0x582, 0x0, 0x1);
        gbc.writeMem(0x30c3, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x1c07, gbc.sp());
        EXPECT(0x30c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 00DD
        gbc.setState(0x55c1, 0xbf97, 0x6590, 0x7e1b, 0xb626, 0xcebc, 0x0, 0x0);
        gbc.writeMem(0x55c1, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xbf97, gbc.sp());
        EXPECT(0x55c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 00DE
        gbc.setState(0x21a3, 0x926b, 0x52f0, 0xa809, 0x501, 0x3362, 0x0, 0x1);
        gbc.writeMem(0x21a3, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x926b, gbc.sp());
        EXPECT(0x21a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 00DF
        gbc.setState(0x80e9, 0xbaf1, 0xda80, 0xa270, 0x597d, 0x1094, 0x0, 0x0);
        gbc.writeMem(0x80e9, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xbaf1, gbc.sp());
        EXPECT(0x80eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80e9));
        EXPECT(0xd2, gbc.readMem(0x80ea));
        // CB D2 00E0
        gbc.setState(0xc15b, 0x59ca, 0x43a0, 0x2f41, 0xef95, 0x78f4, 0x0, 0x0);
        gbc.writeMem(0xc15b, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x59ca, gbc.sp());
        EXPECT(0xc15d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc15b));
        EXPECT(0xd2, gbc.readMem(0xc15c));
        // CB D2 00E1
        gbc.setState(0x8ace, 0xf1ea, 0xee30, 0x2735, 0xce16, 0xd97a, 0x1, 0x0);
        gbc.writeMem(0x8ace, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xf1ea, gbc.sp());
        EXPECT(0x8ad0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ace));
        EXPECT(0xd2, gbc.readMem(0x8acf));
        // CB D2 00E2
        gbc.setState(0xccdc, 0x68ca, 0x1300, 0x3844, 0x6d8d, 0x3f18, 0x0, 0x0);
        gbc.writeMem(0xccdc, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x68ca, gbc.sp());
        EXPECT(0xccde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccdc));
        EXPECT(0xd2, gbc.readMem(0xccdd));
        // CB D2 00E3
        gbc.setState(0x2550, 0xfcc8, 0xeaa0, 0x32bd, 0xbb56, 0xfb0e, 0x1, 0x1);
        gbc.writeMem(0x2550, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xfcc8, gbc.sp());
        EXPECT(0x2552, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 00E4
        gbc.setState(0x56, 0x8f53, 0x7ae0, 0x2db8, 0x893b, 0x9251, 0x1, 0x0);
        gbc.writeMem(0x56, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x8f53, gbc.sp());
        EXPECT(0x58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 00E5
        gbc.setState(0x5163, 0x23e6, 0x8770, 0xfbe6, 0xb20f, 0xebdc, 0x1, 0x1);
        gbc.writeMem(0x5163, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x23e6, gbc.sp());
        EXPECT(0x5165, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 00E6
        gbc.setState(0x7438, 0x2646, 0xee80, 0xb1fd, 0x2df6, 0xfb92, 0x1, 0x0);
        gbc.writeMem(0x7438, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x2646, gbc.sp());
        EXPECT(0x743a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 00E7
        gbc.setState(0x9102, 0xfafb, 0xeac0, 0xd26a, 0x446b, 0xd77, 0x1, 0x0);
        gbc.writeMem(0x9102, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xfafb, gbc.sp());
        EXPECT(0x9104, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9102));
        EXPECT(0xd2, gbc.readMem(0x9103));
        // CB D2 00E8
        gbc.setState(0x8ca7, 0x5dfb, 0x9c40, 0xce0e, 0x1f97, 0x6030, 0x1, 0x0);
        gbc.writeMem(0x8ca7, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x5dfb, gbc.sp());
        EXPECT(0x8ca9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ca7));
        EXPECT(0xd2, gbc.readMem(0x8ca8));
        // CB D2 00E9
        gbc.setState(0x8757, 0xcc3b, 0x82f0, 0x6caa, 0xaa09, 0xe280, 0x1, 0x0);
        gbc.writeMem(0x8757, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xcc3b, gbc.sp());
        EXPECT(0x8759, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8757));
        EXPECT(0xd2, gbc.readMem(0x8758));
        // CB D2 00EA
        gbc.setState(0xca35, 0x1f1c, 0xe7e0, 0x6395, 0x21b8, 0x10bf, 0x1, 0x0);
        gbc.writeMem(0xca35, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x1f1c, gbc.sp());
        EXPECT(0xca37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca35));
        EXPECT(0xd2, gbc.readMem(0xca36));
        // CB D2 00EB
        gbc.setState(0x533c, 0xabfa, 0x36a0, 0xcdf7, 0x1cec, 0x4382, 0x0, 0x0);
        gbc.writeMem(0x533c, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xabfa, gbc.sp());
        EXPECT(0x533e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 00EC
        gbc.setState(0xe1e3, 0x9888, 0x7590, 0xc066, 0x2ffd, 0x3edf, 0x1, 0x0);
        gbc.writeMem(0xe1e3, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x9888, gbc.sp());
        EXPECT(0xe1e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1e3));
        EXPECT(0xd2, gbc.readMem(0xe1e4));
        // CB D2 00ED
        gbc.setState(0xb054, 0xef81, 0x5c70, 0xe6f4, 0x672, 0xebcf, 0x0, 0x1);
        gbc.writeMem(0xb054, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xef81, gbc.sp());
        EXPECT(0xb056, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb054));
        EXPECT(0xd2, gbc.readMem(0xb055));
        // CB D2 00EE
        gbc.setState(0x1370, 0xfc4e, 0x15f0, 0x5c83, 0x90b, 0x1fe4, 0x1, 0x0);
        gbc.writeMem(0x1370, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xfc4e, gbc.sp());
        EXPECT(0x1372, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 00F0
        gbc.setState(0xcb87, 0x6bee, 0x51f0, 0x2c68, 0x3e8c, 0x4696, 0x1, 0x1);
        gbc.writeMem(0xcb87, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x6bee, gbc.sp());
        EXPECT(0xcb89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb87));
        EXPECT(0xd2, gbc.readMem(0xcb88));
        // CB D2 00F1
        gbc.setState(0x45b1, 0xb5b2, 0xe970, 0x6b80, 0x4a70, 0xe7ea, 0x0, 0x0);
        gbc.writeMem(0x45b1, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xb5b2, gbc.sp());
        EXPECT(0x45b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 00F2
        gbc.setState(0xec65, 0x9c13, 0x90d0, 0x31bb, 0x7c57, 0x6b91, 0x0, 0x1);
        gbc.writeMem(0xec65, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x9c13, gbc.sp());
        EXPECT(0xec67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec65));
        EXPECT(0xd2, gbc.readMem(0xec66));
        // CB D2 00F3
        gbc.setState(0xc074, 0xa03f, 0xd000, 0xc84e, 0xf905, 0x81bc, 0x0, 0x0);
        gbc.writeMem(0xc074, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xa03f, gbc.sp());
        EXPECT(0xc076, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc074));
        EXPECT(0xd2, gbc.readMem(0xc075));
        // CB D2 00F4
        gbc.setState(0x79e2, 0xb1b4, 0xd900, 0xa305, 0xc94f, 0x2ce8, 0x1, 0x1);
        gbc.writeMem(0x79e2, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xb1b4, gbc.sp());
        EXPECT(0x79e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 00F5
        gbc.setState(0x3f05, 0x4af4, 0x2ad0, 0x4884, 0xe1a8, 0x19c8, 0x1, 0x0);
        gbc.writeMem(0x3f05, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x4af4, gbc.sp());
        EXPECT(0x3f07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 00F6
        gbc.setState(0x659e, 0x4877, 0xa940, 0x4612, 0x522d, 0xa1d8, 0x1, 0x0);
        gbc.writeMem(0x659e, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x4877, gbc.sp());
        EXPECT(0x65a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 00F7
        gbc.setState(0x95a0, 0x6074, 0xb4d0, 0x7bd3, 0xc943, 0x2709, 0x0, 0x1);
        gbc.writeMem(0x95a0, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x6074, gbc.sp());
        EXPECT(0x95a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95a0));
        EXPECT(0xd2, gbc.readMem(0x95a1));
        // CB D2 00F8
        gbc.setState(0x9f3, 0x1c5d, 0xc30, 0xbe26, 0x796e, 0xd23, 0x1, 0x1);
        gbc.writeMem(0x9f3, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x1c5d, gbc.sp());
        EXPECT(0x9f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 00F9
        gbc.setState(0x716f, 0x79b4, 0xf750, 0x1ff9, 0x41f7, 0x2811, 0x0, 0x0);
        gbc.writeMem(0x716f, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x79b4, gbc.sp());
        EXPECT(0x7171, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 00FA
        gbc.setState(0xee2b, 0x4a89, 0xd460, 0x1d16, 0x8f63, 0x4462, 0x0, 0x0);
        gbc.writeMem(0xee2b, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x4a89, gbc.sp());
        EXPECT(0xee2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee2b));
        EXPECT(0xd2, gbc.readMem(0xee2c));
        // CB D2 00FC
        gbc.setState(0x5f21, 0xa7eb, 0xc190, 0xb5ab, 0x4b74, 0xb6cc, 0x1, 0x1);
        gbc.writeMem(0x5f21, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xa7eb, gbc.sp());
        EXPECT(0x5f23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 00FE
        gbc.setState(0xe9ac, 0x6c35, 0x3260, 0x9727, 0xb499, 0xa5f1, 0x1, 0x1);
        gbc.writeMem(0xe9ac, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x6c35, gbc.sp());
        EXPECT(0xe9ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9ac));
        EXPECT(0xd2, gbc.readMem(0xe9ad));
        // CB D2 00FF
        gbc.setState(0x62ab, 0x9efe, 0x1e50, 0xaad0, 0xd570, 0xf427, 0x1, 0x1);
        gbc.writeMem(0x62ab, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x9efe, gbc.sp());
        EXPECT(0x62ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0100
        gbc.setState(0x8a37, 0xe8c1, 0xf280, 0x1009, 0x190b, 0x79fc, 0x1, 0x1);
        gbc.writeMem(0x8a37, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xe8c1, gbc.sp());
        EXPECT(0x8a39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a37));
        EXPECT(0xd2, gbc.readMem(0x8a38));
        // CB D2 0101
        gbc.setState(0x9509, 0x74f2, 0x900, 0xfab1, 0xcc98, 0xc641, 0x1, 0x1);
        gbc.writeMem(0x9509, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x74f2, gbc.sp());
        EXPECT(0x950b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9509));
        EXPECT(0xd2, gbc.readMem(0x950a));
        // CB D2 0102
        gbc.setState(0xaa78, 0x21e4, 0x43b0, 0x7603, 0xa686, 0xf0f9, 0x0, 0x1);
        gbc.writeMem(0xaa78, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x21e4, gbc.sp());
        EXPECT(0xaa7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa78));
        EXPECT(0xd2, gbc.readMem(0xaa79));
        // CB D2 0103
        gbc.setState(0x8f4c, 0xb8fe, 0xc500, 0x3505, 0x3bb5, 0xca8d, 0x1, 0x1);
        gbc.writeMem(0x8f4c, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xb8fe, gbc.sp());
        EXPECT(0x8f4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f4c));
        EXPECT(0xd2, gbc.readMem(0x8f4d));
        // CB D2 0104
        gbc.setState(0x6faa, 0xdf17, 0xb880, 0xe188, 0x9826, 0x60c5, 0x0, 0x1);
        gbc.writeMem(0x6faa, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xdf17, gbc.sp());
        EXPECT(0x6fac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0105
        gbc.setState(0x4293, 0x6a10, 0x64e0, 0xe768, 0xa582, 0xf3a4, 0x0, 0x1);
        gbc.writeMem(0x4293, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x6a10, gbc.sp());
        EXPECT(0x4295, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0106
        gbc.setState(0x8691, 0xcd9f, 0x4d90, 0x4987, 0xabfc, 0x53a3, 0x1, 0x1);
        gbc.writeMem(0x8691, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xcd9f, gbc.sp());
        EXPECT(0x8693, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8691));
        EXPECT(0xd2, gbc.readMem(0x8692));
        // CB D2 0107
        gbc.setState(0x8991, 0x542c, 0x8340, 0x59c8, 0x37aa, 0x2b20, 0x1, 0x0);
        gbc.writeMem(0x8991, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x542c, gbc.sp());
        EXPECT(0x8993, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8991));
        EXPECT(0xd2, gbc.readMem(0x8992));
        // CB D2 0108
        gbc.setState(0xd673, 0x4ce8, 0xf450, 0xc274, 0x6fe, 0xc363, 0x1, 0x0);
        gbc.writeMem(0xd673, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x4ce8, gbc.sp());
        EXPECT(0xd675, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd673));
        EXPECT(0xd2, gbc.readMem(0xd674));
        // CB D2 0109
        gbc.setState(0x7a6d, 0xd177, 0x56e0, 0x91db, 0x23ee, 0xd2d8, 0x0, 0x1);
        gbc.writeMem(0x7a6d, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xd177, gbc.sp());
        EXPECT(0x7a6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 010B
        gbc.setState(0xcfa, 0x576e, 0x2a30, 0x3287, 0xeda0, 0x49fe, 0x0, 0x1);
        gbc.writeMem(0xcfa, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x576e, gbc.sp());
        EXPECT(0xcfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 010C
        gbc.setState(0x8a97, 0xd94a, 0x66c0, 0x2ba1, 0xad8d, 0x9151, 0x0, 0x0);
        gbc.writeMem(0x8a97, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xd94a, gbc.sp());
        EXPECT(0x8a99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a97));
        EXPECT(0xd2, gbc.readMem(0x8a98));
        // CB D2 010D
        gbc.setState(0x8ca2, 0xdad1, 0x1900, 0xb1ae, 0x9985, 0x32be, 0x0, 0x0);
        gbc.writeMem(0x8ca2, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xdad1, gbc.sp());
        EXPECT(0x8ca4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ca2));
        EXPECT(0xd2, gbc.readMem(0x8ca3));
        // CB D2 010E
        gbc.setState(0xea3e, 0x9395, 0x2b90, 0x2667, 0x71c2, 0x78e6, 0x0, 0x0);
        gbc.writeMem(0xea3e, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x9395, gbc.sp());
        EXPECT(0xea40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea3e));
        EXPECT(0xd2, gbc.readMem(0xea3f));
        // CB D2 010F
        gbc.setState(0xcc45, 0xc7fd, 0x9430, 0xe802, 0x10a1, 0xca29, 0x1, 0x1);
        gbc.writeMem(0xcc45, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xc7fd, gbc.sp());
        EXPECT(0xcc47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc45));
        EXPECT(0xd2, gbc.readMem(0xcc46));
        // CB D2 0110
        gbc.setState(0x2db, 0xd257, 0xc110, 0xedf7, 0x7819, 0x9b2a, 0x1, 0x0);
        gbc.writeMem(0x2db, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xd257, gbc.sp());
        EXPECT(0x2dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0111
        gbc.setState(0x42f1, 0x21d8, 0x4e0, 0xe9e3, 0xcdff, 0x5188, 0x0, 0x0);
        gbc.writeMem(0x42f1, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x21d8, gbc.sp());
        EXPECT(0x42f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0112
        gbc.setState(0x6244, 0xab9f, 0x6610, 0xcdb2, 0x4f6f, 0x7cc2, 0x0, 0x0);
        gbc.writeMem(0x6244, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xab9f, gbc.sp());
        EXPECT(0x6246, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0113
        gbc.setState(0x307c, 0x149f, 0x8140, 0x681f, 0x3280, 0xb8c7, 0x0, 0x1);
        gbc.writeMem(0x307c, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x149f, gbc.sp());
        EXPECT(0x307e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0114
        gbc.setState(0xc3ea, 0x4a9f, 0xc750, 0x3252, 0x981d, 0x6e73, 0x1, 0x1);
        gbc.writeMem(0xc3ea, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x4a9f, gbc.sp());
        EXPECT(0xc3ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3ea));
        EXPECT(0xd2, gbc.readMem(0xc3eb));
        // CB D2 0115
        gbc.setState(0x8374, 0x9030, 0x1320, 0xe93a, 0x9ce6, 0xc30e, 0x0, 0x0);
        gbc.writeMem(0x8374, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x9030, gbc.sp());
        EXPECT(0x8376, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8374));
        EXPECT(0xd2, gbc.readMem(0x8375));
        // CB D2 0116
        gbc.setState(0xc20f, 0x46fd, 0x8af0, 0x9def, 0xef3a, 0xc334, 0x1, 0x0);
        gbc.writeMem(0xc20f, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x46fd, gbc.sp());
        EXPECT(0xc211, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc20f));
        EXPECT(0xd2, gbc.readMem(0xc210));
        // CB D2 0117
        gbc.setState(0xece6, 0xb91d, 0x93f0, 0x156e, 0x3f53, 0xd41e, 0x0, 0x0);
        gbc.writeMem(0xece6, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xb91d, gbc.sp());
        EXPECT(0xece8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xece6));
        EXPECT(0xd2, gbc.readMem(0xece7));
        // CB D2 0118
        gbc.setState(0xa6df, 0x4a5e, 0xe490, 0x9dda, 0x64d6, 0x4977, 0x0, 0x1);
        gbc.writeMem(0xa6df, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x4a5e, gbc.sp());
        EXPECT(0xa6e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6df));
        EXPECT(0xd2, gbc.readMem(0xa6e0));
        // CB D2 011A
        gbc.setState(0x8e09, 0xb1f, 0x960, 0x9fe0, 0xe9f0, 0x671a, 0x1, 0x1);
        gbc.writeMem(0x8e09, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xb1f, gbc.sp());
        EXPECT(0x8e0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e09));
        EXPECT(0xd2, gbc.readMem(0x8e0a));
        // CB D2 011B
        gbc.setState(0xd71d, 0x3cc7, 0x9760, 0x2871, 0x2595, 0xa97b, 0x0, 0x0);
        gbc.writeMem(0xd71d, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x3cc7, gbc.sp());
        EXPECT(0xd71f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd71d));
        EXPECT(0xd2, gbc.readMem(0xd71e));
        // CB D2 011C
        gbc.setState(0xc447, 0x4ad7, 0xa050, 0x293a, 0x7ae1, 0xbc38, 0x1, 0x1);
        gbc.writeMem(0xc447, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x4ad7, gbc.sp());
        EXPECT(0xc449, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc447));
        EXPECT(0xd2, gbc.readMem(0xc448));
        // CB D2 011D
        gbc.setState(0x1f0f, 0x91c6, 0x64b0, 0x10a0, 0x5908, 0xb1e5, 0x0, 0x0);
        gbc.writeMem(0x1f0f, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x91c6, gbc.sp());
        EXPECT(0x1f11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 011F
        gbc.setState(0xd67c, 0x8c8e, 0x8df0, 0x2b96, 0xeae0, 0x8400, 0x0, 0x1);
        gbc.writeMem(0xd67c, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x8c8e, gbc.sp());
        EXPECT(0xd67e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd67c));
        EXPECT(0xd2, gbc.readMem(0xd67d));
        // CB D2 0121
        gbc.setState(0x5a70, 0xc09b, 0x81d0, 0x5117, 0xf669, 0x196e, 0x1, 0x0);
        gbc.writeMem(0x5a70, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xc09b, gbc.sp());
        EXPECT(0x5a72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0123
        gbc.setState(0x5a73, 0xab15, 0x3200, 0x9596, 0x5d48, 0xc47, 0x0, 0x0);
        gbc.writeMem(0x5a73, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xab15, gbc.sp());
        EXPECT(0x5a75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0124
        gbc.setState(0x446, 0xae5b, 0x60c0, 0x418d, 0x2850, 0x3fc7, 0x0, 0x0);
        gbc.writeMem(0x446, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xae5b, gbc.sp());
        EXPECT(0x448, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0125
        gbc.setState(0xa4cf, 0x6038, 0x3620, 0x71a6, 0x92ab, 0x127e, 0x1, 0x1);
        gbc.writeMem(0xa4cf, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x6038, gbc.sp());
        EXPECT(0xa4d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4cf));
        EXPECT(0xd2, gbc.readMem(0xa4d0));
        // CB D2 0126
        gbc.setState(0x83b5, 0xfc6f, 0x9bc0, 0x28be, 0xd00f, 0x407d, 0x0, 0x0);
        gbc.writeMem(0x83b5, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xfc6f, gbc.sp());
        EXPECT(0x83b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83b5));
        EXPECT(0xd2, gbc.readMem(0x83b6));
        // CB D2 0127
        gbc.setState(0x47d, 0x2c27, 0xdea0, 0x8e9f, 0x1d29, 0xaf8d, 0x0, 0x0);
        gbc.writeMem(0x47d, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x2c27, gbc.sp());
        EXPECT(0x47f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0128
        gbc.setState(0xcfc9, 0x638c, 0xf9f0, 0x33e, 0x3f29, 0x5067, 0x0, 0x1);
        gbc.writeMem(0xcfc9, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x638c, gbc.sp());
        EXPECT(0xcfcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfc9));
        EXPECT(0xd2, gbc.readMem(0xcfca));
        // CB D2 0129
        gbc.setState(0x5992, 0xe790, 0xd5e0, 0xbdb0, 0x70d7, 0x6d06, 0x0, 0x1);
        gbc.writeMem(0x5992, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xe790, gbc.sp());
        EXPECT(0x5994, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 012A
        gbc.setState(0x60d0, 0xe413, 0x5710, 0x36a3, 0x627d, 0x487b, 0x1, 0x0);
        gbc.writeMem(0x60d0, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xe413, gbc.sp());
        EXPECT(0x60d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 012B
        gbc.setState(0x2fae, 0xa915, 0x64b0, 0x401a, 0x2da5, 0x6d82, 0x0, 0x1);
        gbc.writeMem(0x2fae, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xa915, gbc.sp());
        EXPECT(0x2fb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 012C
        gbc.setState(0x5732, 0x5800, 0x2f20, 0xe3fc, 0xbc76, 0x8729, 0x0, 0x0);
        gbc.writeMem(0x5732, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x5800, gbc.sp());
        EXPECT(0x5734, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 012D
        gbc.setState(0x4d9c, 0xb867, 0x7250, 0x3d0a, 0x88a2, 0x2d76, 0x1, 0x1);
        gbc.writeMem(0x4d9c, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xb867, gbc.sp());
        EXPECT(0x4d9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 012E
        gbc.setState(0xb194, 0xe8d5, 0x6a40, 0x2aa3, 0x1541, 0x48b3, 0x1, 0x0);
        gbc.writeMem(0xb194, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xe8d5, gbc.sp());
        EXPECT(0xb196, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb194));
        EXPECT(0xd2, gbc.readMem(0xb195));
        // CB D2 012F
        gbc.setState(0x91e1, 0x317c, 0x4d20, 0xb249, 0x52cd, 0xaf6c, 0x1, 0x1);
        gbc.writeMem(0x91e1, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x317c, gbc.sp());
        EXPECT(0x91e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91e1));
        EXPECT(0xd2, gbc.readMem(0x91e2));
        // CB D2 0130
        gbc.setState(0x4937, 0xd567, 0xd5d0, 0x9a9, 0x5ee9, 0x5483, 0x1, 0x1);
        gbc.writeMem(0x4937, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xd567, gbc.sp());
        EXPECT(0x4939, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0131
        gbc.setState(0x9cb9, 0xb3e4, 0xaef0, 0xf78c, 0xc836, 0xf98d, 0x0, 0x0);
        gbc.writeMem(0x9cb9, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xb3e4, gbc.sp());
        EXPECT(0x9cbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cb9));
        EXPECT(0xd2, gbc.readMem(0x9cba));
        // CB D2 0132
        gbc.setState(0xa8e2, 0x6aac, 0x8390, 0x1eed, 0x3cb4, 0xbf5c, 0x0, 0x1);
        gbc.writeMem(0xa8e2, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x6aac, gbc.sp());
        EXPECT(0xa8e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8e2));
        EXPECT(0xd2, gbc.readMem(0xa8e3));
        // CB D2 0133
        gbc.setState(0x5230, 0x7781, 0x1440, 0x85d1, 0x4040, 0x8e90, 0x0, 0x0);
        gbc.writeMem(0x5230, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x7781, gbc.sp());
        EXPECT(0x5232, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0134
        gbc.setState(0xef75, 0x9c32, 0x6e30, 0x5a57, 0x99b6, 0xaabb, 0x1, 0x0);
        gbc.writeMem(0xef75, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x9c32, gbc.sp());
        EXPECT(0xef77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef75));
        EXPECT(0xd2, gbc.readMem(0xef76));
        // CB D2 0135
        gbc.setState(0x6aa0, 0x6548, 0xacc0, 0x8524, 0x4042, 0xf747, 0x0, 0x0);
        gbc.writeMem(0x6aa0, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x6548, gbc.sp());
        EXPECT(0x6aa2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0136
        gbc.setState(0x2d2d, 0x9cb5, 0xb070, 0x3c87, 0xfa66, 0xa0e3, 0x1, 0x0);
        gbc.writeMem(0x2d2d, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x9cb5, gbc.sp());
        EXPECT(0x2d2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0137
        gbc.setState(0xb2b8, 0xd20a, 0x6140, 0x3c00, 0x2d61, 0x943, 0x1, 0x0);
        gbc.writeMem(0xb2b8, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xd20a, gbc.sp());
        EXPECT(0xb2ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2b8));
        EXPECT(0xd2, gbc.readMem(0xb2b9));
        // CB D2 0138
        gbc.setState(0x1ff2, 0x4fd, 0x71e0, 0x1551, 0xb785, 0x20c9, 0x0, 0x0);
        gbc.writeMem(0x1ff2, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x4fd, gbc.sp());
        EXPECT(0x1ff4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 013A
        gbc.setState(0x2ff3, 0x61f0, 0x2f90, 0x3b12, 0x89e, 0x2021, 0x1, 0x1);
        gbc.writeMem(0x2ff3, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x61f0, gbc.sp());
        EXPECT(0x2ff5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 013B
        gbc.setState(0x8576, 0x28b1, 0x4930, 0xd896, 0x4e90, 0x5bd5, 0x1, 0x0);
        gbc.writeMem(0x8576, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x28b1, gbc.sp());
        EXPECT(0x8578, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8576));
        EXPECT(0xd2, gbc.readMem(0x8577));
        // CB D2 013C
        gbc.setState(0x125c, 0x3bbf, 0x7ba0, 0x5cf5, 0x2fc7, 0x2bbd, 0x1, 0x0);
        gbc.writeMem(0x125c, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x3bbf, gbc.sp());
        EXPECT(0x125e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 013D
        gbc.setState(0xd8ce, 0x1aaf, 0x8e10, 0x689f, 0xbc93, 0x6823, 0x1, 0x1);
        gbc.writeMem(0xd8ce, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x1aaf, gbc.sp());
        EXPECT(0xd8d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8ce));
        EXPECT(0xd2, gbc.readMem(0xd8cf));
        // CB D2 013E
        gbc.setState(0x6543, 0xc0c8, 0x5960, 0x530a, 0x9143, 0xd5fa, 0x0, 0x1);
        gbc.writeMem(0x6543, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xc0c8, gbc.sp());
        EXPECT(0x6545, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 013F
        gbc.setState(0x78d8, 0xe9e6, 0x9d00, 0xe0e, 0x6eec, 0xd639, 0x0, 0x0);
        gbc.writeMem(0x78d8, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xe9e6, gbc.sp());
        EXPECT(0x78da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0140
        gbc.setState(0x37fb, 0x459, 0xd330, 0x601b, 0xae17, 0x91c6, 0x1, 0x0);
        gbc.writeMem(0x37fb, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x459, gbc.sp());
        EXPECT(0x37fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0141
        gbc.setState(0xbebb, 0xbe01, 0x1860, 0x18c9, 0x21ae, 0xa831, 0x1, 0x1);
        gbc.writeMem(0xbebb, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xbe01, gbc.sp());
        EXPECT(0xbebd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbebb));
        EXPECT(0xd2, gbc.readMem(0xbebc));
        // CB D2 0142
        gbc.setState(0x464d, 0x8563, 0x5100, 0xcb57, 0x4bb0, 0xfd33, 0x1, 0x0);
        gbc.writeMem(0x464d, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x8563, gbc.sp());
        EXPECT(0x464f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0143
        gbc.setState(0xed55, 0xc832, 0xcd20, 0x4e55, 0x9c47, 0xf076, 0x1, 0x0);
        gbc.writeMem(0xed55, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xc832, gbc.sp());
        EXPECT(0xed57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed55));
        EXPECT(0xd2, gbc.readMem(0xed56));
        // CB D2 0144
        gbc.setState(0x187e, 0x3561, 0x6b10, 0x84f6, 0x7259, 0xf857, 0x0, 0x1);
        gbc.writeMem(0x187e, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x3561, gbc.sp());
        EXPECT(0x1880, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0145
        gbc.setState(0x171e, 0x829f, 0xd680, 0x8e8a, 0x59d6, 0xd61b, 0x0, 0x1);
        gbc.writeMem(0x171e, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x829f, gbc.sp());
        EXPECT(0x1720, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0146
        gbc.setState(0x97f8, 0xb074, 0x49c0, 0xe24f, 0xf33e, 0xa232, 0x1, 0x1);
        gbc.writeMem(0x97f8, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xb074, gbc.sp());
        EXPECT(0x97fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97f8));
        EXPECT(0xd2, gbc.readMem(0x97f9));
        // CB D2 0147
        gbc.setState(0x7c71, 0xab45, 0xa5c0, 0x857, 0xbdee, 0x9e40, 0x0, 0x1);
        gbc.writeMem(0x7c71, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xab45, gbc.sp());
        EXPECT(0x7c73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0148
        gbc.setState(0x63d2, 0x506c, 0xf30, 0xf0d, 0x3db, 0x3acb, 0x1, 0x0);
        gbc.writeMem(0x63d2, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x506c, gbc.sp());
        EXPECT(0x63d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0149
        gbc.setState(0x8b5a, 0x6c47, 0xd150, 0x5307, 0xa2ca, 0x1c37, 0x1, 0x0);
        gbc.writeMem(0x8b5a, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x6c47, gbc.sp());
        EXPECT(0x8b5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b5a));
        EXPECT(0xd2, gbc.readMem(0x8b5b));
        // CB D2 014A
        gbc.setState(0x8027, 0x7008, 0xd420, 0x382e, 0xa521, 0xdc19, 0x1, 0x0);
        gbc.writeMem(0x8027, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x7008, gbc.sp());
        EXPECT(0x8029, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8027));
        EXPECT(0xd2, gbc.readMem(0x8028));
        // CB D2 014B
        gbc.setState(0x69d, 0x5720, 0x9a70, 0x53c8, 0x183e, 0x1af9, 0x0, 0x1);
        gbc.writeMem(0x69d, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x5720, gbc.sp());
        EXPECT(0x69f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 014C
        gbc.setState(0x4ace, 0x9112, 0xd550, 0xc9e7, 0xfd90, 0x2a48, 0x1, 0x1);
        gbc.writeMem(0x4ace, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x9112, gbc.sp());
        EXPECT(0x4ad0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 014D
        gbc.setState(0x4f80, 0x6505, 0xcaf0, 0x98d5, 0x6179, 0xf53a, 0x1, 0x0);
        gbc.writeMem(0x4f80, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x6505, gbc.sp());
        EXPECT(0x4f82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 014F
        gbc.setState(0xbf0d, 0x2a3a, 0xf7b0, 0x832f, 0xb7f9, 0x3f01, 0x1, 0x0);
        gbc.writeMem(0xbf0d, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x2a3a, gbc.sp());
        EXPECT(0xbf0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf0d));
        EXPECT(0xd2, gbc.readMem(0xbf0e));
        // CB D2 0150
        gbc.setState(0x790d, 0xb62d, 0x5ff0, 0x1b03, 0x15e3, 0xb1a6, 0x0, 0x1);
        gbc.writeMem(0x790d, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xb62d, gbc.sp());
        EXPECT(0x790f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0151
        gbc.setState(0x1957, 0xf412, 0x13b0, 0x5403, 0x77f8, 0x5426, 0x1, 0x0);
        gbc.writeMem(0x1957, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xf412, gbc.sp());
        EXPECT(0x1959, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0152
        gbc.setState(0x5d8c, 0xdc8d, 0x6320, 0xb5cf, 0x7ac8, 0xc030, 0x1, 0x1);
        gbc.writeMem(0x5d8c, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xdc8d, gbc.sp());
        EXPECT(0x5d8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0153
        gbc.setState(0xd28c, 0xaf46, 0x4bd0, 0xa38d, 0x193d, 0x9892, 0x1, 0x0);
        gbc.writeMem(0xd28c, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xaf46, gbc.sp());
        EXPECT(0xd28e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd28c));
        EXPECT(0xd2, gbc.readMem(0xd28d));
        // CB D2 0154
        gbc.setState(0x4f21, 0xac81, 0x84b0, 0xf984, 0x1a01, 0x893c, 0x0, 0x1);
        gbc.writeMem(0x4f21, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xac81, gbc.sp());
        EXPECT(0x4f23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0155
        gbc.setState(0xdcf7, 0x7cec, 0x42a0, 0x58db, 0xdca0, 0xf013, 0x0, 0x0);
        gbc.writeMem(0xdcf7, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x7cec, gbc.sp());
        EXPECT(0xdcf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcf7));
        EXPECT(0xd2, gbc.readMem(0xdcf8));
        // CB D2 0156
        gbc.setState(0xd5a3, 0x4766, 0xea0, 0x1cf6, 0x8fed, 0x3a36, 0x0, 0x0);
        gbc.writeMem(0xd5a3, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x4766, gbc.sp());
        EXPECT(0xd5a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5a3));
        EXPECT(0xd2, gbc.readMem(0xd5a4));
        // CB D2 0157
        gbc.setState(0x4b6b, 0xb23b, 0x5b30, 0xb34, 0x9d5, 0x6b51, 0x0, 0x1);
        gbc.writeMem(0x4b6b, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xb23b, gbc.sp());
        EXPECT(0x4b6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0158
        gbc.setState(0x1f46, 0x2154, 0x2ec0, 0xc0f1, 0xcd6, 0xe8c8, 0x0, 0x0);
        gbc.writeMem(0x1f46, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x2154, gbc.sp());
        EXPECT(0x1f48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0159
        gbc.setState(0xb8e8, 0x69f3, 0x2fc0, 0x28da, 0x679b, 0x3276, 0x1, 0x1);
        gbc.writeMem(0xb8e8, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x69f3, gbc.sp());
        EXPECT(0xb8ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8e8));
        EXPECT(0xd2, gbc.readMem(0xb8e9));
        // CB D2 015A
        gbc.setState(0x5f7, 0xce5d, 0x1ea0, 0xa232, 0xee2e, 0x31fe, 0x0, 0x0);
        gbc.writeMem(0x5f7, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xce5d, gbc.sp());
        EXPECT(0x5f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 015B
        gbc.setState(0x4b45, 0xd4f7, 0xd510, 0xf4e2, 0xc164, 0x6406, 0x1, 0x1);
        gbc.writeMem(0x4b45, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xd4f7, gbc.sp());
        EXPECT(0x4b47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 015C
        gbc.setState(0x7ca, 0x209, 0xcb20, 0xd0f1, 0x8c2e, 0x826a, 0x0, 0x1);
        gbc.writeMem(0x7ca, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x209, gbc.sp());
        EXPECT(0x7cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 015D
        gbc.setState(0x92f5, 0xb69f, 0x2180, 0x7dc2, 0xdd74, 0x3c85, 0x1, 0x0);
        gbc.writeMem(0x92f5, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xb69f, gbc.sp());
        EXPECT(0x92f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92f5));
        EXPECT(0xd2, gbc.readMem(0x92f6));
        // CB D2 015F
        gbc.setState(0xbaa9, 0xc114, 0x8640, 0xa81b, 0x368d, 0xfc1e, 0x0, 0x0);
        gbc.writeMem(0xbaa9, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xc114, gbc.sp());
        EXPECT(0xbaab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbaa9));
        EXPECT(0xd2, gbc.readMem(0xbaaa));
        // CB D2 0160
        gbc.setState(0x4f3b, 0x9bda, 0x8e0, 0x47ff, 0x5bf2, 0x8bf5, 0x0, 0x1);
        gbc.writeMem(0x4f3b, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x9bda, gbc.sp());
        EXPECT(0x4f3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0162
        gbc.setState(0x8381, 0xb6e8, 0x6060, 0x77e5, 0x926c, 0x9691, 0x1, 0x0);
        gbc.writeMem(0x8381, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xb6e8, gbc.sp());
        EXPECT(0x8383, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8381));
        EXPECT(0xd2, gbc.readMem(0x8382));
        // CB D2 0163
        gbc.setState(0x128f, 0x8fd8, 0x9760, 0xd9e1, 0xeda9, 0xd38c, 0x0, 0x1);
        gbc.writeMem(0x128f, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x8fd8, gbc.sp());
        EXPECT(0x1291, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0164
        gbc.setState(0xc032, 0xae8b, 0x31f0, 0xc28d, 0xc481, 0xc801, 0x1, 0x0);
        gbc.writeMem(0xc032, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xae8b, gbc.sp());
        EXPECT(0xc034, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc032));
        EXPECT(0xd2, gbc.readMem(0xc033));
        // CB D2 0166
        gbc.setState(0x8c74, 0xe2b3, 0xf640, 0xc1e9, 0xc7f3, 0xeb98, 0x1, 0x1);
        gbc.writeMem(0x8c74, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xe2b3, gbc.sp());
        EXPECT(0x8c76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c74));
        EXPECT(0xd2, gbc.readMem(0x8c75));
        // CB D2 0167
        gbc.setState(0xde56, 0x82e5, 0x66c0, 0x9b07, 0x56ca, 0xa4ad, 0x0, 0x1);
        gbc.writeMem(0xde56, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x82e5, gbc.sp());
        EXPECT(0xde58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde56));
        EXPECT(0xd2, gbc.readMem(0xde57));
        // CB D2 0168
        gbc.setState(0xa8f4, 0xacfe, 0x53b0, 0x588c, 0xb73e, 0xde5c, 0x1, 0x1);
        gbc.writeMem(0xa8f4, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xacfe, gbc.sp());
        EXPECT(0xa8f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8f4));
        EXPECT(0xd2, gbc.readMem(0xa8f5));
        // CB D2 0169
        gbc.setState(0x450c, 0x8e5, 0x4500, 0x2672, 0x2ccc, 0x6deb, 0x1, 0x1);
        gbc.writeMem(0x450c, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x8e5, gbc.sp());
        EXPECT(0x450e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 016A
        gbc.setState(0xa78, 0xe7b, 0x1ab0, 0x9b15, 0xd61a, 0x18ea, 0x1, 0x1);
        gbc.writeMem(0xa78, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xe7b, gbc.sp());
        EXPECT(0xa7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 016B
        gbc.setState(0x97f0, 0xd97e, 0x53d0, 0xfafb, 0x44b6, 0xe65d, 0x0, 0x1);
        gbc.writeMem(0x97f0, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xd97e, gbc.sp());
        EXPECT(0x97f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97f0));
        EXPECT(0xd2, gbc.readMem(0x97f1));
        // CB D2 016C
        gbc.setState(0x2e01, 0x4698, 0x8900, 0xdc5a, 0x7366, 0x56c2, 0x1, 0x0);
        gbc.writeMem(0x2e01, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x4698, gbc.sp());
        EXPECT(0x2e03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 016D
        gbc.setState(0xdeea, 0x819c, 0xe9b0, 0x6b6c, 0x92de, 0x3fa8, 0x0, 0x0);
        gbc.writeMem(0xdeea, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x819c, gbc.sp());
        EXPECT(0xdeec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdeea));
        EXPECT(0xd2, gbc.readMem(0xdeeb));
        // CB D2 016E
        gbc.setState(0x5583, 0x8493, 0xf390, 0x56e2, 0xd217, 0xbc3a, 0x0, 0x0);
        gbc.writeMem(0x5583, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x8493, gbc.sp());
        EXPECT(0x5585, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0170
        gbc.setState(0xc43c, 0xd9d5, 0xb8e0, 0x560, 0x97a6, 0xa205, 0x0, 0x0);
        gbc.writeMem(0xc43c, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xd9d5, gbc.sp());
        EXPECT(0xc43e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc43c));
        EXPECT(0xd2, gbc.readMem(0xc43d));
        // CB D2 0171
        gbc.setState(0xd66f, 0x1347, 0x1670, 0x67ea, 0x8265, 0x6fb6, 0x0, 0x0);
        gbc.writeMem(0xd66f, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x1347, gbc.sp());
        EXPECT(0xd671, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd66f));
        EXPECT(0xd2, gbc.readMem(0xd670));
        // CB D2 0172
        gbc.setState(0x9606, 0x110e, 0x98a0, 0xb739, 0xc0b5, 0x59c7, 0x0, 0x0);
        gbc.writeMem(0x9606, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x110e, gbc.sp());
        EXPECT(0x9608, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9606));
        EXPECT(0xd2, gbc.readMem(0x9607));
        // CB D2 0173
        gbc.setState(0x651b, 0x5c85, 0x250, 0xaa, 0x3ed1, 0x90c4, 0x0, 0x0);
        gbc.writeMem(0x651b, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x5c85, gbc.sp());
        EXPECT(0x651d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0174
        gbc.setState(0xd1a3, 0x58c2, 0x25c0, 0x5c00, 0x159c, 0x5a19, 0x1, 0x0);
        gbc.writeMem(0xd1a3, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x58c2, gbc.sp());
        EXPECT(0xd1a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1a3));
        EXPECT(0xd2, gbc.readMem(0xd1a4));
        // CB D2 0175
        gbc.setState(0xe3a0, 0xb5f8, 0xc890, 0x7ba6, 0x6234, 0x27f4, 0x1, 0x0);
        gbc.writeMem(0xe3a0, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xb5f8, gbc.sp());
        EXPECT(0xe3a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3a0));
        EXPECT(0xd2, gbc.readMem(0xe3a1));
        // CB D2 0176
        gbc.setState(0x4a26, 0x64bd, 0x9110, 0x3cc3, 0xb9c4, 0x7a8, 0x0, 0x0);
        gbc.writeMem(0x4a26, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x64bd, gbc.sp());
        EXPECT(0x4a28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0177
        gbc.setState(0x8aca, 0x2d7f, 0x9820, 0x3431, 0x53bc, 0x8900, 0x1, 0x1);
        gbc.writeMem(0x8aca, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x2d7f, gbc.sp());
        EXPECT(0x8acc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8aca));
        EXPECT(0xd2, gbc.readMem(0x8acb));
        // CB D2 0178
        gbc.setState(0xa84d, 0xda58, 0x4160, 0xd320, 0x8e88, 0xb129, 0x0, 0x1);
        gbc.writeMem(0xa84d, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xda58, gbc.sp());
        EXPECT(0xa84f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa84d));
        EXPECT(0xd2, gbc.readMem(0xa84e));
        // CB D2 0179
        gbc.setState(0xb3d6, 0xd145, 0x6120, 0xac3e, 0xf8aa, 0x802c, 0x1, 0x0);
        gbc.writeMem(0xb3d6, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xd145, gbc.sp());
        EXPECT(0xb3d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3d6));
        EXPECT(0xd2, gbc.readMem(0xb3d7));
        // CB D2 017A
        gbc.setState(0xed80, 0x99a8, 0x3b20, 0x81d1, 0xc1, 0x84ed, 0x0, 0x0);
        gbc.writeMem(0xed80, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x99a8, gbc.sp());
        EXPECT(0xed82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed80));
        EXPECT(0xd2, gbc.readMem(0xed81));
        // CB D2 017B
        gbc.setState(0xc187, 0xb2fb, 0xf930, 0x5510, 0xeab2, 0xaaca, 0x1, 0x0);
        gbc.writeMem(0xc187, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xb2fb, gbc.sp());
        EXPECT(0xc189, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc187));
        EXPECT(0xd2, gbc.readMem(0xc188));
        // CB D2 017C
        gbc.setState(0x5e3c, 0x5042, 0x2000, 0x304d, 0xedd5, 0x79e3, 0x0, 0x1);
        gbc.writeMem(0x5e3c, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x5042, gbc.sp());
        EXPECT(0x5e3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 017D
        gbc.setState(0x7860, 0x324d, 0x7440, 0x5a9a, 0xad4f, 0xe1ea, 0x0, 0x0);
        gbc.writeMem(0x7860, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x324d, gbc.sp());
        EXPECT(0x7862, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 017E
        gbc.setState(0x8417, 0x4497, 0x49e0, 0xc90b, 0x132a, 0x681a, 0x1, 0x1);
        gbc.writeMem(0x8417, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x4497, gbc.sp());
        EXPECT(0x8419, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8417));
        EXPECT(0xd2, gbc.readMem(0x8418));
        // CB D2 017F
        gbc.setState(0x6cb4, 0xe7d2, 0x8ee0, 0x1688, 0x41cd, 0xeac5, 0x1, 0x0);
        gbc.writeMem(0x6cb4, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xe7d2, gbc.sp());
        EXPECT(0x6cb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0180
        gbc.setState(0x8144, 0xf4c8, 0xc970, 0xf1c8, 0xa77f, 0x42db, 0x1, 0x1);
        gbc.writeMem(0x8144, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xf4c8, gbc.sp());
        EXPECT(0x8146, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8144));
        EXPECT(0xd2, gbc.readMem(0x8145));
        // CB D2 0181
        gbc.setState(0xcd5d, 0xc1f, 0x4a70, 0x1f6c, 0xcf97, 0xb075, 0x0, 0x0);
        gbc.writeMem(0xcd5d, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xc1f, gbc.sp());
        EXPECT(0xcd5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd5d));
        EXPECT(0xd2, gbc.readMem(0xcd5e));
        // CB D2 0182
        gbc.setState(0xcba0, 0x7dc4, 0xea50, 0x2dcc, 0x595a, 0xa8ee, 0x1, 0x1);
        gbc.writeMem(0xcba0, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x7dc4, gbc.sp());
        EXPECT(0xcba2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcba0));
        EXPECT(0xd2, gbc.readMem(0xcba1));
        // CB D2 0183
        gbc.setState(0xb19c, 0x9e37, 0x80a0, 0xd9b5, 0x9df0, 0x2334, 0x1, 0x0);
        gbc.writeMem(0xb19c, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x9e37, gbc.sp());
        EXPECT(0xb19e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb19c));
        EXPECT(0xd2, gbc.readMem(0xb19d));
        // CB D2 0184
        gbc.setState(0x8237, 0xf858, 0x6dc0, 0xf468, 0x8134, 0xb8fc, 0x0, 0x1);
        gbc.writeMem(0x8237, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xf858, gbc.sp());
        EXPECT(0x8239, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8237));
        EXPECT(0xd2, gbc.readMem(0x8238));
        // CB D2 0185
        gbc.setState(0xc30a, 0x5a5e, 0xaa0, 0xbdd, 0x1cf4, 0xea75, 0x1, 0x1);
        gbc.writeMem(0xc30a, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x5a5e, gbc.sp());
        EXPECT(0xc30c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc30a));
        EXPECT(0xd2, gbc.readMem(0xc30b));
        // CB D2 0186
        gbc.setState(0x30d0, 0xc104, 0x8c00, 0xbada, 0x9bb0, 0x63b1, 0x0, 0x0);
        gbc.writeMem(0x30d0, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xc104, gbc.sp());
        EXPECT(0x30d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0187
        gbc.setState(0x5f30, 0xafb2, 0x7830, 0x68fc, 0x189a, 0x770b, 0x0, 0x1);
        gbc.writeMem(0x5f30, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xafb2, gbc.sp());
        EXPECT(0x5f32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0188
        gbc.setState(0xee34, 0xb03d, 0xc5a0, 0x1977, 0x679d, 0x4488, 0x0, 0x1);
        gbc.writeMem(0xee34, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xb03d, gbc.sp());
        EXPECT(0xee36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee34));
        EXPECT(0xd2, gbc.readMem(0xee35));
        // CB D2 0189
        gbc.setState(0x46e9, 0xc902, 0xe4e0, 0xb93d, 0x898e, 0x6c1e, 0x0, 0x1);
        gbc.writeMem(0x46e9, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xc902, gbc.sp());
        EXPECT(0x46eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 018A
        gbc.setState(0x15a, 0xd195, 0x98c0, 0xac6e, 0x96c8, 0x6128, 0x0, 0x0);
        gbc.writeMem(0x15a, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xd195, gbc.sp());
        EXPECT(0x15c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 018B
        gbc.setState(0x2205, 0x587c, 0x5b70, 0x489f, 0x299, 0x2ce4, 0x1, 0x1);
        gbc.writeMem(0x2205, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x587c, gbc.sp());
        EXPECT(0x2207, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 018C
        gbc.setState(0x3f02, 0x960c, 0x6c90, 0x2415, 0xeabb, 0x6dc8, 0x1, 0x0);
        gbc.writeMem(0x3f02, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x960c, gbc.sp());
        EXPECT(0x3f04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 018D
        gbc.setState(0x9bea, 0x62ab, 0xbb00, 0x71ef, 0x4d0f, 0x2f14, 0x0, 0x0);
        gbc.writeMem(0x9bea, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x62ab, gbc.sp());
        EXPECT(0x9bec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bea));
        EXPECT(0xd2, gbc.readMem(0x9beb));
        // CB D2 018E
        gbc.setState(0x5a29, 0xdc9a, 0x24f0, 0xaa0b, 0x7cfe, 0xadc3, 0x0, 0x1);
        gbc.writeMem(0x5a29, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xdc9a, gbc.sp());
        EXPECT(0x5a2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 018F
        gbc.setState(0xdfed, 0x76d4, 0x79b0, 0xbfbe, 0x1f74, 0x6c41, 0x1, 0x1);
        gbc.writeMem(0xdfed, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x76d4, gbc.sp());
        EXPECT(0xdfef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfed));
        EXPECT(0xd2, gbc.readMem(0xdfee));
        // CB D2 0190
        gbc.setState(0xb9c2, 0xeab5, 0xaec0, 0xbbc3, 0xeb88, 0xd55c, 0x1, 0x0);
        gbc.writeMem(0xb9c2, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xeab5, gbc.sp());
        EXPECT(0xb9c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9c2));
        EXPECT(0xd2, gbc.readMem(0xb9c3));
        // CB D2 0191
        gbc.setState(0x364, 0x760d, 0x8250, 0xbe3c, 0xb121, 0x9b37, 0x0, 0x1);
        gbc.writeMem(0x364, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x760d, gbc.sp());
        EXPECT(0x366, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0192
        gbc.setState(0x8084, 0xd86, 0x26c0, 0xbd89, 0x30a1, 0x896a, 0x1, 0x1);
        gbc.writeMem(0x8084, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xd86, gbc.sp());
        EXPECT(0x8086, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8084));
        EXPECT(0xd2, gbc.readMem(0x8085));
        // CB D2 0193
        gbc.setState(0x1bd0, 0x62b1, 0x3080, 0xe3c5, 0x320, 0xde3d, 0x0, 0x0);
        gbc.writeMem(0x1bd0, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x62b1, gbc.sp());
        EXPECT(0x1bd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0194
        gbc.setState(0x67d8, 0x6d98, 0xb9c0, 0x364d, 0xfd7, 0x7eea, 0x1, 0x0);
        gbc.writeMem(0x67d8, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x6d98, gbc.sp());
        EXPECT(0x67da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0195
        gbc.setState(0x95eb, 0xf077, 0x3720, 0xcaf1, 0xc8ad, 0xcac3, 0x0, 0x1);
        gbc.writeMem(0x95eb, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xf077, gbc.sp());
        EXPECT(0x95ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95eb));
        EXPECT(0xd2, gbc.readMem(0x95ec));
        // CB D2 0196
        gbc.setState(0xdecd, 0x8418, 0xd8e0, 0x8d8e, 0xbf9e, 0xaa6a, 0x1, 0x0);
        gbc.writeMem(0xdecd, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x8418, gbc.sp());
        EXPECT(0xdecf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdecd));
        EXPECT(0xd2, gbc.readMem(0xdece));
        // CB D2 0197
        gbc.setState(0xb17b, 0x79e, 0x17e0, 0x1e5f, 0x1f2f, 0xe81a, 0x0, 0x0);
        gbc.writeMem(0xb17b, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x79e, gbc.sp());
        EXPECT(0xb17d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb17b));
        EXPECT(0xd2, gbc.readMem(0xb17c));
        // CB D2 0198
        gbc.setState(0x5219, 0x982e, 0xd7a0, 0x601b, 0xfbd7, 0xc049, 0x0, 0x0);
        gbc.writeMem(0x5219, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x982e, gbc.sp());
        EXPECT(0x521b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0199
        gbc.setState(0xc277, 0xf0, 0xf300, 0x250d, 0xf424, 0x21e9, 0x1, 0x0);
        gbc.writeMem(0xc277, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xf0, gbc.sp());
        EXPECT(0xc279, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc277));
        EXPECT(0xd2, gbc.readMem(0xc278));
        // CB D2 019A
        gbc.setState(0x785, 0x2ed3, 0x8540, 0x293b, 0x7c36, 0x900c, 0x0, 0x0);
        gbc.writeMem(0x785, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x2ed3, gbc.sp());
        EXPECT(0x787, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 019B
        gbc.setState(0x12eb, 0x6be8, 0xc920, 0xcaa5, 0x16af, 0x7866, 0x1, 0x1);
        gbc.writeMem(0x12eb, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x6be8, gbc.sp());
        EXPECT(0x12ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 019C
        gbc.setState(0xc59f, 0x7df5, 0xf080, 0xe82a, 0x117a, 0x240a, 0x0, 0x1);
        gbc.writeMem(0xc59f, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x7df5, gbc.sp());
        EXPECT(0xc5a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc59f));
        EXPECT(0xd2, gbc.readMem(0xc5a0));
        // CB D2 019D
        gbc.setState(0x741f, 0x9fb1, 0xa7a0, 0x772f, 0xe63c, 0xc171, 0x0, 0x0);
        gbc.writeMem(0x741f, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x9fb1, gbc.sp());
        EXPECT(0x7421, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 019E
        gbc.setState(0xeef9, 0x9992, 0x3860, 0x7ab1, 0xe6e9, 0x269c, 0x0, 0x0);
        gbc.writeMem(0xeef9, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x9992, gbc.sp());
        EXPECT(0xeefb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeef9));
        EXPECT(0xd2, gbc.readMem(0xeefa));
        // CB D2 019F
        gbc.setState(0x4c25, 0x7232, 0x1d50, 0x1e8d, 0x5636, 0x2211, 0x1, 0x1);
        gbc.writeMem(0x4c25, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x7232, gbc.sp());
        EXPECT(0x4c27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 01A0
        gbc.setState(0x9b0, 0x3515, 0xdac0, 0x485a, 0x57ad, 0xf72b, 0x1, 0x1);
        gbc.writeMem(0x9b0, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x3515, gbc.sp());
        EXPECT(0x9b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 01A1
        gbc.setState(0xf02, 0xb562, 0xbb60, 0x56d3, 0x1ede, 0xce3c, 0x1, 0x1);
        gbc.writeMem(0xf02, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xb562, gbc.sp());
        EXPECT(0xf04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 01A2
        gbc.setState(0xec90, 0x557d, 0xea60, 0x9138, 0x567f, 0x6f88, 0x1, 0x0);
        gbc.writeMem(0xec90, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x557d, gbc.sp());
        EXPECT(0xec92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec90));
        EXPECT(0xd2, gbc.readMem(0xec91));
        // CB D2 01A3
        gbc.setState(0xa996, 0x5129, 0x4eb0, 0x8f, 0xd33f, 0x6f76, 0x0, 0x0);
        gbc.writeMem(0xa996, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x5129, gbc.sp());
        EXPECT(0xa998, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa996));
        EXPECT(0xd2, gbc.readMem(0xa997));
        // CB D2 01A4
        gbc.setState(0xc6e, 0x1aa8, 0x97e0, 0xcb02, 0x2649, 0x465b, 0x0, 0x1);
        gbc.writeMem(0xc6e, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x1aa8, gbc.sp());
        EXPECT(0xc70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 01A5
        gbc.setState(0xbd78, 0x6a0e, 0x85c0, 0xa42c, 0x8a73, 0x89d0, 0x1, 0x1);
        gbc.writeMem(0xbd78, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x6a0e, gbc.sp());
        EXPECT(0xbd7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd78));
        EXPECT(0xd2, gbc.readMem(0xbd79));
        // CB D2 01A6
        gbc.setState(0x9c6d, 0xa5d, 0x6a70, 0x8fc3, 0x2ce9, 0x2526, 0x0, 0x0);
        gbc.writeMem(0x9c6d, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xa5d, gbc.sp());
        EXPECT(0x9c6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c6d));
        EXPECT(0xd2, gbc.readMem(0x9c6e));
        // CB D2 01A7
        gbc.setState(0x7507, 0x2684, 0xc10, 0xacd6, 0x8d45, 0x93, 0x0, 0x0);
        gbc.writeMem(0x7507, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x2684, gbc.sp());
        EXPECT(0x7509, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 01A8
        gbc.setState(0x9ef, 0x282b, 0x8fe0, 0x9dcc, 0x1ba9, 0xc5ef, 0x1, 0x0);
        gbc.writeMem(0x9ef, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x282b, gbc.sp());
        EXPECT(0x9f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 01A9
        gbc.setState(0xab21, 0x989c, 0x6cc0, 0xd6ed, 0xb15b, 0x8726, 0x0, 0x0);
        gbc.writeMem(0xab21, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x989c, gbc.sp());
        EXPECT(0xab23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab21));
        EXPECT(0xd2, gbc.readMem(0xab22));
        // CB D2 01AA
        gbc.setState(0xdbe1, 0x9820, 0x95a0, 0xea61, 0x67d9, 0x2759, 0x0, 0x1);
        gbc.writeMem(0xdbe1, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x9820, gbc.sp());
        EXPECT(0xdbe3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbe1));
        EXPECT(0xd2, gbc.readMem(0xdbe2));
        // CB D2 01AB
        gbc.setState(0x528d, 0x2542, 0xe9b0, 0x9bc8, 0xa407, 0x15f3, 0x1, 0x0);
        gbc.writeMem(0x528d, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x2542, gbc.sp());
        EXPECT(0x528f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 01AC
        gbc.setState(0x7802, 0xb9d0, 0x77f0, 0x9fcf, 0xb67a, 0x84c7, 0x0, 0x1);
        gbc.writeMem(0x7802, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xb9d0, gbc.sp());
        EXPECT(0x7804, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 01AD
        gbc.setState(0xc2b4, 0x633a, 0x4990, 0xcb3d, 0x7400, 0x34be, 0x1, 0x1);
        gbc.writeMem(0xc2b4, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x633a, gbc.sp());
        EXPECT(0xc2b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2b4));
        EXPECT(0xd2, gbc.readMem(0xc2b5));
        // CB D2 01AE
        gbc.setState(0x9813, 0x33f2, 0x4cf0, 0x27f5, 0x8363, 0x145a, 0x1, 0x0);
        gbc.writeMem(0x9813, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x33f2, gbc.sp());
        EXPECT(0x9815, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9813));
        EXPECT(0xd2, gbc.readMem(0x9814));
        // CB D2 01AF
        gbc.setState(0x73e5, 0x14ae, 0x5010, 0x3f44, 0xc621, 0x48d1, 0x0, 0x1);
        gbc.writeMem(0x73e5, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x14ae, gbc.sp());
        EXPECT(0x73e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 01B0
        gbc.setState(0x53ec, 0x2cc1, 0x1530, 0x99d8, 0x9dac, 0xbb23, 0x0, 0x0);
        gbc.writeMem(0x53ec, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x2cc1, gbc.sp());
        EXPECT(0x53ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 01B1
        gbc.setState(0xb856, 0xf1ca, 0x4ca0, 0xf9ca, 0x5ca8, 0x3106, 0x1, 0x1);
        gbc.writeMem(0xb856, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xf1ca, gbc.sp());
        EXPECT(0xb858, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb856));
        EXPECT(0xd2, gbc.readMem(0xb857));
        // CB D2 01B2
        gbc.setState(0xb46d, 0xb579, 0xf690, 0xfea2, 0x8565, 0xf67b, 0x0, 0x1);
        gbc.writeMem(0xb46d, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xb579, gbc.sp());
        EXPECT(0xb46f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb46d));
        EXPECT(0xd2, gbc.readMem(0xb46e));
        // CB D2 01B3
        gbc.setState(0x3581, 0x96fa, 0xd8b0, 0x679c, 0x41ca, 0x4674, 0x1, 0x1);
        gbc.writeMem(0x3581, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x96fa, gbc.sp());
        EXPECT(0x3583, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 01B4
        gbc.setState(0x8682, 0x6360, 0xd240, 0x6dd7, 0x58ba, 0x3878, 0x1, 0x0);
        gbc.writeMem(0x8682, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x6360, gbc.sp());
        EXPECT(0x8684, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8682));
        EXPECT(0xd2, gbc.readMem(0x8683));
        // CB D2 01B5
        gbc.setState(0x9cd6, 0xd0b4, 0x5140, 0x3c8, 0x5432, 0xfa36, 0x1, 0x0);
        gbc.writeMem(0x9cd6, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xd0b4, gbc.sp());
        EXPECT(0x9cd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cd6));
        EXPECT(0xd2, gbc.readMem(0x9cd7));
        // CB D2 01B6
        gbc.setState(0xb608, 0x93b2, 0x7050, 0x77b8, 0xff0e, 0xa51a, 0x0, 0x0);
        gbc.writeMem(0xb608, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x93b2, gbc.sp());
        EXPECT(0xb60a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb608));
        EXPECT(0xd2, gbc.readMem(0xb609));
        // CB D2 01B7
        gbc.setState(0x5373, 0x2aea, 0xf730, 0x95be, 0x1dd0, 0x64f0, 0x0, 0x0);
        gbc.writeMem(0x5373, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x2aea, gbc.sp());
        EXPECT(0x5375, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 01B8
        gbc.setState(0xe069, 0xf8dd, 0xe9e0, 0x6a6e, 0xe7a, 0xe23, 0x0, 0x1);
        gbc.writeMem(0xe069, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xf8dd, gbc.sp());
        EXPECT(0xe06b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe069));
        EXPECT(0xd2, gbc.readMem(0xe06a));
        // CB D2 01B9
        gbc.setState(0x434a, 0x9c2d, 0xb010, 0x77e5, 0x847f, 0x7049, 0x0, 0x1);
        gbc.writeMem(0x434a, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x9c2d, gbc.sp());
        EXPECT(0x434c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 01BA
        gbc.setState(0x999f, 0x6b63, 0xa200, 0xa008, 0xa1dc, 0x630, 0x0, 0x1);
        gbc.writeMem(0x999f, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x6b63, gbc.sp());
        EXPECT(0x99a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x999f));
        EXPECT(0xd2, gbc.readMem(0x99a0));
        // CB D2 01BB
        gbc.setState(0x80c7, 0xbabd, 0xb9a0, 0x845e, 0x1788, 0xed46, 0x1, 0x1);
        gbc.writeMem(0x80c7, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xbabd, gbc.sp());
        EXPECT(0x80c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80c7));
        EXPECT(0xd2, gbc.readMem(0x80c8));
        // CB D2 01BC
        gbc.setState(0x6a, 0xe9d7, 0xe990, 0xf7be, 0xb3e5, 0x9705, 0x1, 0x1);
        gbc.writeMem(0x6a, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xe9d7, gbc.sp());
        EXPECT(0x6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 01BD
        gbc.setState(0xe75, 0xb3a3, 0x7bd0, 0xcea5, 0x80e0, 0x3522, 0x0, 0x0);
        gbc.writeMem(0xe75, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xb3a3, gbc.sp());
        EXPECT(0xe77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 01BE
        gbc.setState(0xdf53, 0xc311, 0x6150, 0x2a67, 0xd728, 0x6872, 0x0, 0x1);
        gbc.writeMem(0xdf53, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xc311, gbc.sp());
        EXPECT(0xdf55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf53));
        EXPECT(0xd2, gbc.readMem(0xdf54));
        // CB D2 01BF
        gbc.setState(0xd0d6, 0xe58, 0xb8f0, 0x4d0c, 0x2a29, 0x1ef2, 0x1, 0x0);
        gbc.writeMem(0xd0d6, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xe58, gbc.sp());
        EXPECT(0xd0d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0d6));
        EXPECT(0xd2, gbc.readMem(0xd0d7));
        // CB D2 01C0
        gbc.setState(0x37e3, 0xeb6a, 0x9a30, 0xd6b3, 0x119b, 0x8301, 0x0, 0x0);
        gbc.writeMem(0x37e3, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xeb6a, gbc.sp());
        EXPECT(0x37e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 01C1
        gbc.setState(0x62fc, 0x8087, 0x95e0, 0xab36, 0xc436, 0x1bdd, 0x1, 0x0);
        gbc.writeMem(0x62fc, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x8087, gbc.sp());
        EXPECT(0x62fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 01C2
        gbc.setState(0x4e00, 0x32d5, 0x6de0, 0xa8d7, 0xd01, 0x3c61, 0x1, 0x1);
        gbc.writeMem(0x4e00, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x32d5, gbc.sp());
        EXPECT(0x4e02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 01C3
        gbc.setState(0x7c25, 0x9def, 0x59e0, 0xa45d, 0x23f8, 0x29e9, 0x1, 0x0);
        gbc.writeMem(0x7c25, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x9def, gbc.sp());
        EXPECT(0x7c27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 01C4
        gbc.setState(0x201c, 0x26f0, 0xa360, 0x80f6, 0x1f8d, 0x9c04, 0x1, 0x0);
        gbc.writeMem(0x201c, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x26f0, gbc.sp());
        EXPECT(0x201e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 01C5
        gbc.setState(0xa1d, 0x7616, 0x6100, 0x5004, 0x537b, 0xcf7b, 0x1, 0x1);
        gbc.writeMem(0xa1d, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x7616, gbc.sp());
        EXPECT(0xa1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 01C6
        gbc.setState(0xb689, 0x2463, 0x3bb0, 0x467e, 0x5152, 0x75ea, 0x1, 0x1);
        gbc.writeMem(0xb689, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x2463, gbc.sp());
        EXPECT(0xb68b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb689));
        EXPECT(0xd2, gbc.readMem(0xb68a));
        // CB D2 01C7
        gbc.setState(0x24c6, 0x8a5, 0x4220, 0x7289, 0xd2a9, 0x670f, 0x1, 0x1);
        gbc.writeMem(0x24c6, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x8a5, gbc.sp());
        EXPECT(0x24c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 01C8
        gbc.setState(0x56ca, 0xd76c, 0x6c50, 0x88b, 0xc0de, 0xabfc, 0x1, 0x1);
        gbc.writeMem(0x56ca, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xd76c, gbc.sp());
        EXPECT(0x56cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 01C9
        gbc.setState(0x5441, 0xbcb7, 0x6810, 0xba5, 0x5892, 0x7150, 0x1, 0x0);
        gbc.writeMem(0x5441, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xbcb7, gbc.sp());
        EXPECT(0x5443, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 01CA
        gbc.setState(0x8a7c, 0xe13f, 0xec50, 0xef20, 0x8bf3, 0x16c3, 0x1, 0x1);
        gbc.writeMem(0x8a7c, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xe13f, gbc.sp());
        EXPECT(0x8a7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a7c));
        EXPECT(0xd2, gbc.readMem(0x8a7d));
        // CB D2 01CB
        gbc.setState(0x2736, 0x13cd, 0x540, 0x85f8, 0xd551, 0x8d13, 0x0, 0x1);
        gbc.writeMem(0x2736, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x13cd, gbc.sp());
        EXPECT(0x2738, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 01CC
        gbc.setState(0x378e, 0x9340, 0x11d0, 0xa5b0, 0x98c6, 0xdd34, 0x1, 0x0);
        gbc.writeMem(0x378e, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x9340, gbc.sp());
        EXPECT(0x3790, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 01CD
        gbc.setState(0x8a8, 0x3600, 0xaa0, 0xa3c, 0xbebe, 0x575b, 0x1, 0x0);
        gbc.writeMem(0x8a8, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x3600, gbc.sp());
        EXPECT(0x8aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 01CF
        gbc.setState(0x4a3d, 0xc48, 0x8340, 0xca9d, 0x3191, 0xf197, 0x0, 0x1);
        gbc.writeMem(0x4a3d, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xc48, gbc.sp());
        EXPECT(0x4a3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 01D0
        gbc.setState(0xd57c, 0xd8ea, 0x22d0, 0x2b89, 0x7c02, 0x8832, 0x0, 0x1);
        gbc.writeMem(0xd57c, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xd8ea, gbc.sp());
        EXPECT(0xd57e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd57c));
        EXPECT(0xd2, gbc.readMem(0xd57d));
        // CB D2 01D1
        gbc.setState(0x8665, 0x84e, 0xa060, 0xee7e, 0xa8d6, 0x7cc6, 0x1, 0x1);
        gbc.writeMem(0x8665, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x84e, gbc.sp());
        EXPECT(0x8667, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8665));
        EXPECT(0xd2, gbc.readMem(0x8666));
        // CB D2 01D2
        gbc.setState(0x29af, 0x4447, 0xf300, 0x4faf, 0xa807, 0xe359, 0x1, 0x1);
        gbc.writeMem(0x29af, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x4447, gbc.sp());
        EXPECT(0x29b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 01D3
        gbc.setState(0x1f72, 0x48c1, 0x9560, 0x7975, 0x3cdb, 0xff41, 0x0, 0x1);
        gbc.writeMem(0x1f72, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x48c1, gbc.sp());
        EXPECT(0x1f74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 01D4
        gbc.setState(0x825d, 0xd239, 0xfb0, 0x8dae, 0x48f2, 0x7e60, 0x0, 0x0);
        gbc.writeMem(0x825d, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xd239, gbc.sp());
        EXPECT(0x825f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x825d));
        EXPECT(0xd2, gbc.readMem(0x825e));
        // CB D2 01D5
        gbc.setState(0x352c, 0xe20a, 0x9540, 0xdc61, 0x51bf, 0x5261, 0x0, 0x1);
        gbc.writeMem(0x352c, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xe20a, gbc.sp());
        EXPECT(0x352e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 01D6
        gbc.setState(0x9700, 0x921e, 0xc480, 0x8a38, 0x3d02, 0xfc6f, 0x0, 0x0);
        gbc.writeMem(0x9700, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x921e, gbc.sp());
        EXPECT(0x9702, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9700));
        EXPECT(0xd2, gbc.readMem(0x9701));
        // CB D2 01D7
        gbc.setState(0x1ec, 0xf047, 0xc9b0, 0x19ab, 0x5db7, 0xc781, 0x0, 0x0);
        gbc.writeMem(0x1ec, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xf047, gbc.sp());
        EXPECT(0x1ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 01D8
        gbc.setState(0xd760, 0x1894, 0x6e80, 0x27c9, 0x5eb9, 0xe655, 0x1, 0x0);
        gbc.writeMem(0xd760, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x1894, gbc.sp());
        EXPECT(0xd762, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd760));
        EXPECT(0xd2, gbc.readMem(0xd761));
        // CB D2 01D9
        gbc.setState(0xb0cc, 0xc67a, 0xd350, 0xce37, 0xb03c, 0xd960, 0x0, 0x1);
        gbc.writeMem(0xb0cc, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xc67a, gbc.sp());
        EXPECT(0xb0ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0cc));
        EXPECT(0xd2, gbc.readMem(0xb0cd));
        // CB D2 01DA
        gbc.setState(0x1015, 0x5091, 0xed10, 0x3d1c, 0x41a4, 0x9d40, 0x0, 0x0);
        gbc.writeMem(0x1015, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x5091, gbc.sp());
        EXPECT(0x1017, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 01DB
        gbc.setState(0x5da6, 0x45c4, 0x4220, 0xd895, 0x3e44, 0x366e, 0x0, 0x0);
        gbc.writeMem(0x5da6, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x45c4, gbc.sp());
        EXPECT(0x5da8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 01DC
        gbc.setState(0x7529, 0x5651, 0x6510, 0x78b8, 0x6be0, 0x22b1, 0x1, 0x0);
        gbc.writeMem(0x7529, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x5651, gbc.sp());
        EXPECT(0x752b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 01DD
        gbc.setState(0xebc0, 0x1723, 0x1a80, 0x8f30, 0xaf3, 0x4f35, 0x1, 0x1);
        gbc.writeMem(0xebc0, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x1723, gbc.sp());
        EXPECT(0xebc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebc0));
        EXPECT(0xd2, gbc.readMem(0xebc1));
        // CB D2 01DE
        gbc.setState(0x3b78, 0xd73e, 0x2f10, 0x103d, 0xa089, 0xe8e1, 0x0, 0x0);
        gbc.writeMem(0x3b78, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xd73e, gbc.sp());
        EXPECT(0x3b7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 01DF
        gbc.setState(0x748b, 0x76fb, 0xd790, 0x57e5, 0x84ee, 0x2496, 0x0, 0x1);
        gbc.writeMem(0x748b, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x76fb, gbc.sp());
        EXPECT(0x748d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 01E0
        gbc.setState(0x7767, 0x3156, 0x1e80, 0xc4be, 0xd55d, 0x76ce, 0x0, 0x0);
        gbc.writeMem(0x7767, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x3156, gbc.sp());
        EXPECT(0x7769, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 01E1
        gbc.setState(0x256d, 0xb17f, 0xf5d0, 0xbcfc, 0x961c, 0xb208, 0x0, 0x0);
        gbc.writeMem(0x256d, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xb17f, gbc.sp());
        EXPECT(0x256f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 01E2
        gbc.setState(0xd067, 0x5164, 0xce80, 0xc321, 0x41fa, 0xf3f7, 0x1, 0x0);
        gbc.writeMem(0xd067, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x5164, gbc.sp());
        EXPECT(0xd069, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd067));
        EXPECT(0xd2, gbc.readMem(0xd068));
        // CB D2 01E3
        gbc.setState(0x7a02, 0x7f36, 0x34b0, 0x1ecd, 0xe198, 0x1fb3, 0x1, 0x1);
        gbc.writeMem(0x7a02, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x7f36, gbc.sp());
        EXPECT(0x7a04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 01E4
        gbc.setState(0x9d3e, 0xfe03, 0x40d0, 0xf223, 0xd8e4, 0xc20f, 0x0, 0x1);
        gbc.writeMem(0x9d3e, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xfe03, gbc.sp());
        EXPECT(0x9d40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d3e));
        EXPECT(0xd2, gbc.readMem(0x9d3f));
        // CB D2 01E6
        gbc.setState(0xa49d, 0x44c1, 0xfdd0, 0x6dcc, 0xc00e, 0x61ae, 0x0, 0x1);
        gbc.writeMem(0xa49d, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x44c1, gbc.sp());
        EXPECT(0xa49f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa49d));
        EXPECT(0xd2, gbc.readMem(0xa49e));
        // CB D2 01E7
        gbc.setState(0x5e2c, 0x95fc, 0x3e40, 0x6f9, 0x56e, 0x5d1c, 0x0, 0x0);
        gbc.writeMem(0x5e2c, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x95fc, gbc.sp());
        EXPECT(0x5e2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 01E8
        gbc.setState(0xb5ea, 0x4898, 0x3580, 0x9107, 0x7224, 0x45e6, 0x1, 0x1);
        gbc.writeMem(0xb5ea, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x4898, gbc.sp());
        EXPECT(0xb5ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5ea));
        EXPECT(0xd2, gbc.readMem(0xb5eb));
        // CB D2 01E9
        gbc.setState(0x24af, 0x4d3f, 0xe4a0, 0xd203, 0xd527, 0xd1f1, 0x0, 0x1);
        gbc.writeMem(0x24af, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x4d3f, gbc.sp());
        EXPECT(0x24b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 01EA
        gbc.setState(0x5d8b, 0x4b52, 0x7080, 0xd8b5, 0xcd78, 0xde30, 0x0, 0x0);
        gbc.writeMem(0x5d8b, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x4b52, gbc.sp());
        EXPECT(0x5d8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 01EB
        gbc.setState(0x4ee1, 0x717c, 0xd590, 0x77b6, 0x4f49, 0xc516, 0x0, 0x0);
        gbc.writeMem(0x4ee1, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x717c, gbc.sp());
        EXPECT(0x4ee3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 01EC
        gbc.setState(0x7316, 0xd071, 0x55b0, 0x9ad7, 0x3cbe, 0x1213, 0x1, 0x0);
        gbc.writeMem(0x7316, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xd071, gbc.sp());
        EXPECT(0x7318, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 01ED
        gbc.setState(0x942e, 0x8a78, 0xda90, 0xed02, 0x4f73, 0x642e, 0x1, 0x0);
        gbc.writeMem(0x942e, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x8a78, gbc.sp());
        EXPECT(0x9430, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x942e));
        EXPECT(0xd2, gbc.readMem(0x942f));
        // CB D2 01EE
        gbc.setState(0x3e11, 0x50fa, 0x5b60, 0xb0dd, 0x63c0, 0x982, 0x1, 0x1);
        gbc.writeMem(0x3e11, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x50fa, gbc.sp());
        EXPECT(0x3e13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 01EF
        gbc.setState(0xca9, 0xd74, 0xfef0, 0x8e2a, 0x44ee, 0x56b2, 0x0, 0x1);
        gbc.writeMem(0xca9, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xd74, gbc.sp());
        EXPECT(0xcab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 01F0
        gbc.setState(0x9e0d, 0xa3a1, 0xb1d0, 0x6180, 0x46fb, 0x5eb1, 0x1, 0x1);
        gbc.writeMem(0x9e0d, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xa3a1, gbc.sp());
        EXPECT(0x9e0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e0d));
        EXPECT(0xd2, gbc.readMem(0x9e0e));
        // CB D2 01F1
        gbc.setState(0x44d5, 0xa3b8, 0x7970, 0xb036, 0x5f52, 0x44e4, 0x1, 0x1);
        gbc.writeMem(0x44d5, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xa3b8, gbc.sp());
        EXPECT(0x44d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 01F2
        gbc.setState(0xbf91, 0x2570, 0xff40, 0xda8d, 0x87e9, 0x4e3e, 0x0, 0x1);
        gbc.writeMem(0xbf91, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x2570, gbc.sp());
        EXPECT(0xbf93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf91));
        EXPECT(0xd2, gbc.readMem(0xbf92));
        // CB D2 01F3
        gbc.setState(0xd862, 0x844a, 0xfa70, 0x51ce, 0x81f, 0xfcf9, 0x1, 0x0);
        gbc.writeMem(0xd862, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x844a, gbc.sp());
        EXPECT(0xd864, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd862));
        EXPECT(0xd2, gbc.readMem(0xd863));
        // CB D2 01F4
        gbc.setState(0xe492, 0xa184, 0x2060, 0x1f02, 0x3308, 0xc182, 0x0, 0x1);
        gbc.writeMem(0xe492, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xa184, gbc.sp());
        EXPECT(0xe494, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe492));
        EXPECT(0xd2, gbc.readMem(0xe493));
        // CB D2 01F5
        gbc.setState(0x55f6, 0x8cb3, 0x47a0, 0x4cc1, 0x8f33, 0x4693, 0x1, 0x0);
        gbc.writeMem(0x55f6, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x8cb3, gbc.sp());
        EXPECT(0x55f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 01F6
        gbc.setState(0x7a7e, 0x7512, 0x7fc0, 0x8e3d, 0xe2cb, 0xa5ea, 0x1, 0x0);
        gbc.writeMem(0x7a7e, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x7512, gbc.sp());
        EXPECT(0x7a80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 01F7
        gbc.setState(0x4474, 0xa766, 0xdf80, 0x9515, 0x3b4d, 0x7268, 0x1, 0x0);
        gbc.writeMem(0x4474, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xa766, gbc.sp());
        EXPECT(0x4476, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 01F8
        gbc.setState(0x911e, 0x8292, 0x23d0, 0x698a, 0x83d0, 0x16c0, 0x1, 0x0);
        gbc.writeMem(0x911e, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x8292, gbc.sp());
        EXPECT(0x9120, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x911e));
        EXPECT(0xd2, gbc.readMem(0x911f));
        // CB D2 01F9
        gbc.setState(0xb66, 0x4cb2, 0xae10, 0x9508, 0xa9cf, 0xfc0e, 0x1, 0x0);
        gbc.writeMem(0xb66, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x4cb2, gbc.sp());
        EXPECT(0xb68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 01FA
        gbc.setState(0x2619, 0x49b9, 0x9070, 0x4ea1, 0x97e8, 0x4ca4, 0x1, 0x0);
        gbc.writeMem(0x2619, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x49b9, gbc.sp());
        EXPECT(0x261b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 01FB
        gbc.setState(0x9f2a, 0xc70e, 0x1b20, 0xda84, 0x9590, 0xaee4, 0x1, 0x0);
        gbc.writeMem(0x9f2a, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xc70e, gbc.sp());
        EXPECT(0x9f2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f2a));
        EXPECT(0xd2, gbc.readMem(0x9f2b));
        // CB D2 01FC
        gbc.setState(0x1566, 0xbf14, 0x3d30, 0x16c9, 0xbed2, 0xf39c, 0x1, 0x1);
        gbc.writeMem(0x1566, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xbf14, gbc.sp());
        EXPECT(0x1568, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 01FD
        gbc.setState(0xc211, 0x1a4e, 0x4950, 0x896b, 0x8817, 0x29c8, 0x1, 0x0);
        gbc.writeMem(0xc211, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x1a4e, gbc.sp());
        EXPECT(0xc213, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc211));
        EXPECT(0xd2, gbc.readMem(0xc212));
        // CB D2 01FE
        gbc.setState(0x91aa, 0x4736, 0x2200, 0x7d07, 0x7f3d, 0xc6d1, 0x1, 0x0);
        gbc.writeMem(0x91aa, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x4736, gbc.sp());
        EXPECT(0x91ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91aa));
        EXPECT(0xd2, gbc.readMem(0x91ab));
        // CB D2 01FF
        gbc.setState(0xb, 0x778, 0x280, 0x50e1, 0x3412, 0xef14, 0x0, 0x0);
        gbc.writeMem(0xb, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x778, gbc.sp());
        EXPECT(0xd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0200
        gbc.setState(0x3eac, 0x40fa, 0x60c0, 0x2819, 0x848f, 0xe458, 0x0, 0x1);
        gbc.writeMem(0x3eac, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x40fa, gbc.sp());
        EXPECT(0x3eae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0201
        gbc.setState(0x8cb6, 0x7afe, 0xbc50, 0x5d8, 0x7179, 0x4135, 0x0, 0x0);
        gbc.writeMem(0x8cb6, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x7afe, gbc.sp());
        EXPECT(0x8cb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cb6));
        EXPECT(0xd2, gbc.readMem(0x8cb7));
        // CB D2 0202
        gbc.setState(0x9480, 0xb167, 0xe3c0, 0xa1ed, 0xcd86, 0x3ef3, 0x1, 0x1);
        gbc.writeMem(0x9480, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xb167, gbc.sp());
        EXPECT(0x9482, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9480));
        EXPECT(0xd2, gbc.readMem(0x9481));
        // CB D2 0203
        gbc.setState(0xd959, 0x302b, 0xd980, 0x6ce3, 0x3602, 0x4c11, 0x0, 0x1);
        gbc.writeMem(0xd959, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x302b, gbc.sp());
        EXPECT(0xd95b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd959));
        EXPECT(0xd2, gbc.readMem(0xd95a));
        // CB D2 0204
        gbc.setState(0xd5e4, 0x7c6f, 0x2d0, 0xb438, 0x2b26, 0x4d8e, 0x1, 0x1);
        gbc.writeMem(0xd5e4, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x7c6f, gbc.sp());
        EXPECT(0xd5e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5e4));
        EXPECT(0xd2, gbc.readMem(0xd5e5));
        // CB D2 0205
        gbc.setState(0xc16b, 0xcc72, 0x7340, 0x4b89, 0x2177, 0x7ac1, 0x0, 0x1);
        gbc.writeMem(0xc16b, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xcc72, gbc.sp());
        EXPECT(0xc16d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc16b));
        EXPECT(0xd2, gbc.readMem(0xc16c));
        // CB D2 0206
        gbc.setState(0x27a7, 0xbc9c, 0x22f0, 0xf5d, 0xa80d, 0x628, 0x0, 0x1);
        gbc.writeMem(0x27a7, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xbc9c, gbc.sp());
        EXPECT(0x27a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0207
        gbc.setState(0x800d, 0x9ed0, 0x2d30, 0x7366, 0xc42a, 0x62a4, 0x0, 0x0);
        gbc.writeMem(0x800d, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x9ed0, gbc.sp());
        EXPECT(0x800f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x800d));
        EXPECT(0xd2, gbc.readMem(0x800e));
        // CB D2 0208
        gbc.setState(0xca93, 0xebaf, 0x770, 0x78c6, 0x5360, 0xe770, 0x0, 0x0);
        gbc.writeMem(0xca93, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xebaf, gbc.sp());
        EXPECT(0xca95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca93));
        EXPECT(0xd2, gbc.readMem(0xca94));
        // CB D2 0209
        gbc.setState(0x8224, 0x96ea, 0x4370, 0x51d7, 0xce37, 0xd882, 0x1, 0x0);
        gbc.writeMem(0x8224, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x96ea, gbc.sp());
        EXPECT(0x8226, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8224));
        EXPECT(0xd2, gbc.readMem(0x8225));
        // CB D2 020A
        gbc.setState(0xc384, 0x3ebc, 0x73c0, 0xed90, 0xd184, 0x3495, 0x1, 0x1);
        gbc.writeMem(0xc384, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x3ebc, gbc.sp());
        EXPECT(0xc386, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc384));
        EXPECT(0xd2, gbc.readMem(0xc385));
        // CB D2 020B
        gbc.setState(0x9de5, 0x340, 0xbce0, 0xb11d, 0x673e, 0x14f4, 0x1, 0x0);
        gbc.writeMem(0x9de5, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x340, gbc.sp());
        EXPECT(0x9de7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9de5));
        EXPECT(0xd2, gbc.readMem(0x9de6));
        // CB D2 020D
        gbc.setState(0x6328, 0x6212, 0x8390, 0x7be2, 0xf0d6, 0xe529, 0x1, 0x1);
        gbc.writeMem(0x6328, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x6212, gbc.sp());
        EXPECT(0x632a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 020E
        gbc.setState(0xba6e, 0x830c, 0xd930, 0x6435, 0x4fa6, 0xa21e, 0x1, 0x0);
        gbc.writeMem(0xba6e, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x830c, gbc.sp());
        EXPECT(0xba70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba6e));
        EXPECT(0xd2, gbc.readMem(0xba6f));
        // CB D2 020F
        gbc.setState(0x45b1, 0xa992, 0xc090, 0x7b4c, 0xb05b, 0x8c0c, 0x1, 0x0);
        gbc.writeMem(0x45b1, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xa992, gbc.sp());
        EXPECT(0x45b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0210
        gbc.setState(0x49f2, 0x54a3, 0x5a40, 0x818d, 0x41b9, 0x3b18, 0x1, 0x0);
        gbc.writeMem(0x49f2, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x54a3, gbc.sp());
        EXPECT(0x49f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0211
        gbc.setState(0x86fd, 0x44c3, 0xc940, 0x45bb, 0xf08e, 0x660b, 0x0, 0x0);
        gbc.writeMem(0x86fd, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x44c3, gbc.sp());
        EXPECT(0x86ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86fd));
        EXPECT(0xd2, gbc.readMem(0x86fe));
        // CB D2 0212
        gbc.setState(0xa3f4, 0x2cc8, 0x57f0, 0xfed1, 0x12c8, 0x6ab2, 0x0, 0x0);
        gbc.writeMem(0xa3f4, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x2cc8, gbc.sp());
        EXPECT(0xa3f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3f4));
        EXPECT(0xd2, gbc.readMem(0xa3f5));
        // CB D2 0213
        gbc.setState(0x6558, 0x901a, 0xa5c0, 0x7f80, 0x3f03, 0x3195, 0x1, 0x0);
        gbc.writeMem(0x6558, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x901a, gbc.sp());
        EXPECT(0x655a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0214
        gbc.setState(0xc3e1, 0x6364, 0xb940, 0x900e, 0x4439, 0x3d82, 0x0, 0x0);
        gbc.writeMem(0xc3e1, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x6364, gbc.sp());
        EXPECT(0xc3e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3e1));
        EXPECT(0xd2, gbc.readMem(0xc3e2));
        // CB D2 0215
        gbc.setState(0x475c, 0x3e6, 0x53c0, 0xcdd2, 0x225b, 0x666b, 0x0, 0x1);
        gbc.writeMem(0x475c, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x3e6, gbc.sp());
        EXPECT(0x475e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0216
        gbc.setState(0x89d1, 0xbd57, 0xb830, 0xd1f7, 0x2c08, 0x19d7, 0x0, 0x0);
        gbc.writeMem(0x89d1, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xbd57, gbc.sp());
        EXPECT(0x89d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89d1));
        EXPECT(0xd2, gbc.readMem(0x89d2));
        // CB D2 0217
        gbc.setState(0x9caf, 0x84d6, 0x5f70, 0x4127, 0x707c, 0xcab3, 0x0, 0x0);
        gbc.writeMem(0x9caf, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x84d6, gbc.sp());
        EXPECT(0x9cb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9caf));
        EXPECT(0xd2, gbc.readMem(0x9cb0));
        // CB D2 0218
        gbc.setState(0xd19f, 0x845e, 0x9320, 0x527c, 0x6188, 0xda3b, 0x1, 0x0);
        gbc.writeMem(0xd19f, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x845e, gbc.sp());
        EXPECT(0xd1a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd19f));
        EXPECT(0xd2, gbc.readMem(0xd1a0));
        // CB D2 021A
        gbc.setState(0x63c3, 0x7dc8, 0xbe40, 0x67ae, 0xdf3f, 0x4b0e, 0x1, 0x1);
        gbc.writeMem(0x63c3, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x7dc8, gbc.sp());
        EXPECT(0x63c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 021B
        gbc.setState(0xea58, 0x67b, 0xed10, 0x702f, 0x2b5e, 0xa34c, 0x0, 0x0);
        gbc.writeMem(0xea58, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x67b, gbc.sp());
        EXPECT(0xea5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea58));
        EXPECT(0xd2, gbc.readMem(0xea59));
        // CB D2 021C
        gbc.setState(0x1e63, 0x1adc, 0xeb20, 0xe976, 0x4e6, 0x452e, 0x1, 0x0);
        gbc.writeMem(0x1e63, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x1adc, gbc.sp());
        EXPECT(0x1e65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 021D
        gbc.setState(0x199c, 0xfe2b, 0xc610, 0x16bf, 0x175a, 0xc99b, 0x0, 0x0);
        gbc.writeMem(0x199c, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xfe2b, gbc.sp());
        EXPECT(0x199e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 021E
        gbc.setState(0x204b, 0x1e18, 0xe4b0, 0x2fb3, 0x43a7, 0xe28f, 0x1, 0x1);
        gbc.writeMem(0x204b, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x1e18, gbc.sp());
        EXPECT(0x204d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 021F
        gbc.setState(0x5a50, 0xa6a4, 0x7690, 0xbaa1, 0x8fd, 0x927e, 0x1, 0x1);
        gbc.writeMem(0x5a50, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xa6a4, gbc.sp());
        EXPECT(0x5a52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0220
        gbc.setState(0x59cc, 0xc007, 0xc840, 0x8e3b, 0xa111, 0x679b, 0x1, 0x1);
        gbc.writeMem(0x59cc, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xc007, gbc.sp());
        EXPECT(0x59ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0223
        gbc.setState(0xcd8, 0x49bb, 0x3680, 0x5ee1, 0x76b0, 0x6348, 0x0, 0x0);
        gbc.writeMem(0xcd8, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x49bb, gbc.sp());
        EXPECT(0xcda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0224
        gbc.setState(0x5e12, 0xc81b, 0xc520, 0x1d46, 0x7cb3, 0x1c1d, 0x1, 0x1);
        gbc.writeMem(0x5e12, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xc81b, gbc.sp());
        EXPECT(0x5e14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0225
        gbc.setState(0x2e88, 0x51b7, 0x68f0, 0x8d79, 0x4bd, 0xc259, 0x1, 0x1);
        gbc.writeMem(0x2e88, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x51b7, gbc.sp());
        EXPECT(0x2e8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0226
        gbc.setState(0x6509, 0xd401, 0x2710, 0x3435, 0xe728, 0xa82, 0x1, 0x1);
        gbc.writeMem(0x6509, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xd401, gbc.sp());
        EXPECT(0x650b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0227
        gbc.setState(0x4cbe, 0x2de9, 0xe990, 0x90f, 0x5f90, 0x3296, 0x1, 0x1);
        gbc.writeMem(0x4cbe, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x2de9, gbc.sp());
        EXPECT(0x4cc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0228
        gbc.setState(0x39cc, 0xc473, 0xab60, 0x8be7, 0xb680, 0xb55d, 0x1, 0x0);
        gbc.writeMem(0x39cc, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xc473, gbc.sp());
        EXPECT(0x39ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0229
        gbc.setState(0x232c, 0xd7f6, 0x22e0, 0x67b3, 0x5ca2, 0x7c7d, 0x0, 0x0);
        gbc.writeMem(0x232c, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xd7f6, gbc.sp());
        EXPECT(0x232e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 022A
        gbc.setState(0x75d3, 0xc323, 0xb950, 0x44e9, 0xc32c, 0xf9e6, 0x1, 0x0);
        gbc.writeMem(0x75d3, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xc323, gbc.sp());
        EXPECT(0x75d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 022B
        gbc.setState(0x14f7, 0xfc53, 0xe3c0, 0xc1be, 0xfe32, 0xdb16, 0x1, 0x1);
        gbc.writeMem(0x14f7, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xfc53, gbc.sp());
        EXPECT(0x14f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 022C
        gbc.setState(0x7efe, 0x773c, 0x6bf0, 0xaa80, 0xdb5b, 0xee1b, 0x1, 0x1);
        gbc.writeMem(0x7efe, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x773c, gbc.sp());
        EXPECT(0x7f00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 022D
        gbc.setState(0x8ace, 0x67e2, 0xf390, 0x3af5, 0x7af3, 0x6e58, 0x0, 0x1);
        gbc.writeMem(0x8ace, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x67e2, gbc.sp());
        EXPECT(0x8ad0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ace));
        EXPECT(0xd2, gbc.readMem(0x8acf));
        // CB D2 022E
        gbc.setState(0x4e44, 0x85aa, 0x6880, 0xd0f1, 0x6588, 0x350c, 0x1, 0x1);
        gbc.writeMem(0x4e44, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x85aa, gbc.sp());
        EXPECT(0x4e46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 022F
        gbc.setState(0x26d0, 0x5065, 0xac10, 0x6e15, 0x27a7, 0x13a2, 0x1, 0x0);
        gbc.writeMem(0x26d0, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x5065, gbc.sp());
        EXPECT(0x26d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0230
        gbc.setState(0x34b5, 0xfc1d, 0x3bc0, 0xabf, 0x76d0, 0x83ea, 0x1, 0x0);
        gbc.writeMem(0x34b5, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xfc1d, gbc.sp());
        EXPECT(0x34b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0231
        gbc.setState(0x4b88, 0x9cf1, 0x3fe0, 0x19b5, 0x8633, 0xfcbf, 0x0, 0x0);
        gbc.writeMem(0x4b88, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x9cf1, gbc.sp());
        EXPECT(0x4b8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0232
        gbc.setState(0x3f70, 0xc74a, 0xdd40, 0xc3eb, 0x33b2, 0x683d, 0x0, 0x1);
        gbc.writeMem(0x3f70, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xc74a, gbc.sp());
        EXPECT(0x3f72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0233
        gbc.setState(0x54e1, 0x7dd3, 0x5ea0, 0x26fa, 0x35fd, 0xc95f, 0x1, 0x1);
        gbc.writeMem(0x54e1, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x7dd3, gbc.sp());
        EXPECT(0x54e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0234
        gbc.setState(0x7f3b, 0x1567, 0x5a70, 0x12ee, 0x9c08, 0xc16b, 0x1, 0x1);
        gbc.writeMem(0x7f3b, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x1567, gbc.sp());
        EXPECT(0x7f3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0235
        gbc.setState(0x6e26, 0x659, 0x3310, 0x1883, 0x78a3, 0x816, 0x0, 0x0);
        gbc.writeMem(0x6e26, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x659, gbc.sp());
        EXPECT(0x6e28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0236
        gbc.setState(0xbcfb, 0xa65f, 0x5f30, 0x4102, 0x4a52, 0x49f8, 0x1, 0x0);
        gbc.writeMem(0xbcfb, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xa65f, gbc.sp());
        EXPECT(0xbcfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcfb));
        EXPECT(0xd2, gbc.readMem(0xbcfc));
        // CB D2 0237
        gbc.setState(0x353, 0xecbc, 0x4690, 0xbc63, 0x783, 0x3ebb, 0x1, 0x0);
        gbc.writeMem(0x353, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xecbc, gbc.sp());
        EXPECT(0x355, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0238
        gbc.setState(0x68d0, 0xdc45, 0xbd90, 0x45c4, 0xcf18, 0xf0a6, 0x0, 0x0);
        gbc.writeMem(0x68d0, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xdc45, gbc.sp());
        EXPECT(0x68d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0239
        gbc.setState(0x7255, 0xcf65, 0x51a0, 0xd66d, 0xd467, 0x6f74, 0x1, 0x1);
        gbc.writeMem(0x7255, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xcf65, gbc.sp());
        EXPECT(0x7257, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 023A
        gbc.setState(0x4348, 0x13ca, 0x1dd0, 0xcc70, 0x1049, 0x8bd0, 0x0, 0x0);
        gbc.writeMem(0x4348, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x13ca, gbc.sp());
        EXPECT(0x434a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 023B
        gbc.setState(0x38fd, 0x89e7, 0xa710, 0x48de, 0xcf6a, 0x8328, 0x0, 0x0);
        gbc.writeMem(0x38fd, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x89e7, gbc.sp());
        EXPECT(0x38ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 023C
        gbc.setState(0x6992, 0xccc9, 0x9340, 0x1b11, 0x7b5a, 0x416d, 0x0, 0x1);
        gbc.writeMem(0x6992, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xccc9, gbc.sp());
        EXPECT(0x6994, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 023D
        gbc.setState(0x9f2c, 0x6c4d, 0xc530, 0xa623, 0xb28b, 0x2c83, 0x1, 0x0);
        gbc.writeMem(0x9f2c, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x6c4d, gbc.sp());
        EXPECT(0x9f2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f2c));
        EXPECT(0xd2, gbc.readMem(0x9f2d));
        // CB D2 023F
        gbc.setState(0xc926, 0xabae, 0xc530, 0x35c0, 0x12e, 0xa633, 0x0, 0x0);
        gbc.writeMem(0xc926, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xabae, gbc.sp());
        EXPECT(0xc928, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc926));
        EXPECT(0xd2, gbc.readMem(0xc927));
        // CB D2 0240
        gbc.setState(0x7f8f, 0x8111, 0x4410, 0x9d0a, 0x9144, 0x458e, 0x0, 0x0);
        gbc.writeMem(0x7f8f, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x8111, gbc.sp());
        EXPECT(0x7f91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0241
        gbc.setState(0xb79d, 0x4819, 0x6e20, 0x8e18, 0xc4df, 0x7898, 0x0, 0x1);
        gbc.writeMem(0xb79d, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x4819, gbc.sp());
        EXPECT(0xb79f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb79d));
        EXPECT(0xd2, gbc.readMem(0xb79e));
        // CB D2 0242
        gbc.setState(0x415, 0xa8, 0xa8c0, 0xbcfb, 0xef46, 0x63bb, 0x1, 0x1);
        gbc.writeMem(0x415, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xa8, gbc.sp());
        EXPECT(0x417, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0243
        gbc.setState(0xd8df, 0xd27b, 0xfb30, 0xff46, 0x3946, 0x383f, 0x0, 0x0);
        gbc.writeMem(0xd8df, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xd27b, gbc.sp());
        EXPECT(0xd8e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8df));
        EXPECT(0xd2, gbc.readMem(0xd8e0));
        // CB D2 0244
        gbc.setState(0x3729, 0x7c1, 0x17a0, 0x316e, 0x130f, 0xc400, 0x1, 0x1);
        gbc.writeMem(0x3729, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x7c1, gbc.sp());
        EXPECT(0x372b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0245
        gbc.setState(0xe58a, 0x9eb3, 0xf2f0, 0xe9e6, 0x6f34, 0x29cd, 0x0, 0x0);
        gbc.writeMem(0xe58a, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x9eb3, gbc.sp());
        EXPECT(0xe58c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe58a));
        EXPECT(0xd2, gbc.readMem(0xe58b));
        // CB D2 0246
        gbc.setState(0xe261, 0x253c, 0xb590, 0x86e3, 0xa5d5, 0xea3d, 0x1, 0x0);
        gbc.writeMem(0xe261, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x253c, gbc.sp());
        EXPECT(0xe263, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe261));
        EXPECT(0xd2, gbc.readMem(0xe262));
        // CB D2 0247
        gbc.setState(0x2f00, 0x30e9, 0x5f50, 0xf1fa, 0xb9fd, 0xe32c, 0x0, 0x0);
        gbc.writeMem(0x2f00, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x30e9, gbc.sp());
        EXPECT(0x2f02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0248
        gbc.setState(0xc3ba, 0xb12b, 0x8960, 0xc47b, 0xa728, 0x7ea9, 0x1, 0x0);
        gbc.writeMem(0xc3ba, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xb12b, gbc.sp());
        EXPECT(0xc3bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3ba));
        EXPECT(0xd2, gbc.readMem(0xc3bb));
        // CB D2 0249
        gbc.setState(0x6ed1, 0x6d5e, 0x8a0, 0xaefe, 0x1034, 0x5be6, 0x1, 0x1);
        gbc.writeMem(0x6ed1, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x6d5e, gbc.sp());
        EXPECT(0x6ed3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 024B
        gbc.setState(0xad38, 0x9c6e, 0x1990, 0x70, 0x3cbc, 0xa2df, 0x0, 0x1);
        gbc.writeMem(0xad38, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x9c6e, gbc.sp());
        EXPECT(0xad3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad38));
        EXPECT(0xd2, gbc.readMem(0xad39));
        // CB D2 024C
        gbc.setState(0xd50, 0xd8cd, 0x6e60, 0x5676, 0x1668, 0xe42e, 0x1, 0x0);
        gbc.writeMem(0xd50, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xd8cd, gbc.sp());
        EXPECT(0xd52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 024D
        gbc.setState(0x13b4, 0x7b60, 0xa6a0, 0x2bb5, 0xb5c9, 0xbbb, 0x1, 0x1);
        gbc.writeMem(0x13b4, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x7b60, gbc.sp());
        EXPECT(0x13b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 024E
        gbc.setState(0x1ad3, 0x5012, 0xd530, 0x96fe, 0x2a1f, 0xf8da, 0x1, 0x0);
        gbc.writeMem(0x1ad3, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x5012, gbc.sp());
        EXPECT(0x1ad5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 024F
        gbc.setState(0x7848, 0x38d2, 0x43f0, 0x8f94, 0xde, 0x2e02, 0x0, 0x0);
        gbc.writeMem(0x7848, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x38d2, gbc.sp());
        EXPECT(0x784a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0250
        gbc.setState(0x34b2, 0x431c, 0x9e60, 0x5263, 0x29b9, 0x26c5, 0x0, 0x1);
        gbc.writeMem(0x34b2, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x431c, gbc.sp());
        EXPECT(0x34b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0251
        gbc.setState(0x3310, 0xbff5, 0xf420, 0x4ee, 0xf983, 0xb531, 0x0, 0x0);
        gbc.writeMem(0x3310, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xbff5, gbc.sp());
        EXPECT(0x3312, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0252
        gbc.setState(0x1aa8, 0x5f83, 0x7bb0, 0xcce3, 0x827c, 0xd59a, 0x1, 0x1);
        gbc.writeMem(0x1aa8, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x5f83, gbc.sp());
        EXPECT(0x1aaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0253
        gbc.setState(0xa772, 0xde63, 0x82f0, 0x7011, 0xd4e1, 0x9e36, 0x0, 0x1);
        gbc.writeMem(0xa772, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xde63, gbc.sp());
        EXPECT(0xa774, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa772));
        EXPECT(0xd2, gbc.readMem(0xa773));
        // CB D2 0254
        gbc.setState(0xa765, 0x3a88, 0x6b50, 0xc6f6, 0x22dd, 0xef1b, 0x0, 0x1);
        gbc.writeMem(0xa765, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x3a88, gbc.sp());
        EXPECT(0xa767, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa765));
        EXPECT(0xd2, gbc.readMem(0xa766));
        // CB D2 0255
        gbc.setState(0x4d50, 0x46e1, 0x8e00, 0x965f, 0x115b, 0x6bea, 0x0, 0x1);
        gbc.writeMem(0x4d50, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x46e1, gbc.sp());
        EXPECT(0x4d52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0256
        gbc.setState(0xb573, 0x3ce9, 0x6c30, 0x741b, 0xab53, 0xb0f8, 0x0, 0x1);
        gbc.writeMem(0xb573, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x3ce9, gbc.sp());
        EXPECT(0xb575, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb573));
        EXPECT(0xd2, gbc.readMem(0xb574));
        // CB D2 0257
        gbc.setState(0x6cf9, 0x1c57, 0x7a80, 0x83c4, 0xfc1a, 0x18aa, 0x1, 0x0);
        gbc.writeMem(0x6cf9, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x1c57, gbc.sp());
        EXPECT(0x6cfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0258
        gbc.setState(0x180a, 0x696, 0xb970, 0xb233, 0x24f8, 0x9c99, 0x0, 0x1);
        gbc.writeMem(0x180a, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x696, gbc.sp());
        EXPECT(0x180c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0259
        gbc.setState(0xebec, 0xb90c, 0xe50, 0x1318, 0xcd1, 0x2c70, 0x0, 0x0);
        gbc.writeMem(0xebec, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xb90c, gbc.sp());
        EXPECT(0xebee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebec));
        EXPECT(0xd2, gbc.readMem(0xebed));
        // CB D2 025A
        gbc.setState(0x4bf5, 0xa032, 0xb750, 0x2810, 0xec27, 0x2332, 0x0, 0x1);
        gbc.writeMem(0x4bf5, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xa032, gbc.sp());
        EXPECT(0x4bf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 025B
        gbc.setState(0x9658, 0xa154, 0x5020, 0xf05b, 0x5235, 0x9884, 0x0, 0x1);
        gbc.writeMem(0x9658, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xa154, gbc.sp());
        EXPECT(0x965a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9658));
        EXPECT(0xd2, gbc.readMem(0x9659));
        // CB D2 025C
        gbc.setState(0x80bb, 0xed02, 0xa190, 0xe4e6, 0x6b67, 0x18ab, 0x1, 0x0);
        gbc.writeMem(0x80bb, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xed02, gbc.sp());
        EXPECT(0x80bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80bb));
        EXPECT(0xd2, gbc.readMem(0x80bc));
        // CB D2 025D
        gbc.setState(0x249d, 0x3876, 0x6b80, 0x2b7a, 0x258e, 0x2d59, 0x1, 0x1);
        gbc.writeMem(0x249d, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x3876, gbc.sp());
        EXPECT(0x249f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 025E
        gbc.setState(0xbd3b, 0x7432, 0x28f0, 0xb5e6, 0x944f, 0xd1d6, 0x0, 0x0);
        gbc.writeMem(0xbd3b, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x7432, gbc.sp());
        EXPECT(0xbd3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd3b));
        EXPECT(0xd2, gbc.readMem(0xbd3c));
        // CB D2 025F
        gbc.setState(0x849e, 0x3346, 0xd540, 0x6c29, 0xaf3, 0xc5ac, 0x1, 0x1);
        gbc.writeMem(0x849e, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x3346, gbc.sp());
        EXPECT(0x84a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x849e));
        EXPECT(0xd2, gbc.readMem(0x849f));
        // CB D2 0260
        gbc.setState(0xddd8, 0xee1f, 0xaca0, 0xdb0e, 0x7680, 0xa35d, 0x0, 0x1);
        gbc.writeMem(0xddd8, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xee1f, gbc.sp());
        EXPECT(0xddda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddd8));
        EXPECT(0xd2, gbc.readMem(0xddd9));
        // CB D2 0261
        gbc.setState(0x47a3, 0xe8ac, 0xefa0, 0x6917, 0x6a3f, 0x7523, 0x1, 0x0);
        gbc.writeMem(0x47a3, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xe8ac, gbc.sp());
        EXPECT(0x47a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0262
        gbc.setState(0x5886, 0x167c, 0x62a0, 0x963e, 0x1159, 0xc959, 0x1, 0x1);
        gbc.writeMem(0x5886, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x167c, gbc.sp());
        EXPECT(0x5888, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0263
        gbc.setState(0x2b5e, 0x8699, 0xe740, 0xc1c4, 0x1519, 0xa14e, 0x1, 0x0);
        gbc.writeMem(0x2b5e, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x8699, gbc.sp());
        EXPECT(0x2b60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0264
        gbc.setState(0x49a1, 0x53ee, 0xfbd0, 0x65b1, 0x2caa, 0x50cb, 0x0, 0x0);
        gbc.writeMem(0x49a1, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x53ee, gbc.sp());
        EXPECT(0x49a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0265
        gbc.setState(0x9c79, 0x664b, 0x4a10, 0x8a87, 0xac4a, 0xb8d9, 0x1, 0x0);
        gbc.writeMem(0x9c79, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x664b, gbc.sp());
        EXPECT(0x9c7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c79));
        EXPECT(0xd2, gbc.readMem(0x9c7a));
        // CB D2 0267
        gbc.setState(0x53ae, 0x251c, 0xf510, 0xb82e, 0xb719, 0x1290, 0x1, 0x1);
        gbc.writeMem(0x53ae, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x251c, gbc.sp());
        EXPECT(0x53b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0268
        gbc.setState(0x3cd3, 0x6625, 0x9440, 0xa0a4, 0xe608, 0x9ef9, 0x0, 0x0);
        gbc.writeMem(0x3cd3, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x6625, gbc.sp());
        EXPECT(0x3cd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0269
        gbc.setState(0x8034, 0x323d, 0xdfa0, 0xa52, 0xb969, 0x7ac6, 0x0, 0x0);
        gbc.writeMem(0x8034, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x323d, gbc.sp());
        EXPECT(0x8036, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8034));
        EXPECT(0xd2, gbc.readMem(0x8035));
        // CB D2 026A
        gbc.setState(0xb91, 0xaff9, 0x19b0, 0xb85d, 0xc255, 0x824e, 0x0, 0x0);
        gbc.writeMem(0xb91, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xaff9, gbc.sp());
        EXPECT(0xb93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 026B
        gbc.setState(0x325e, 0xe7f5, 0xc900, 0x106d, 0xc2, 0x3e31, 0x1, 0x1);
        gbc.writeMem(0x325e, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xe7f5, gbc.sp());
        EXPECT(0x3260, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 026C
        gbc.setState(0xd00, 0xe52a, 0x5c20, 0x73d7, 0x1c0e, 0x3513, 0x1, 0x0);
        gbc.writeMem(0xd00, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xe52a, gbc.sp());
        EXPECT(0xd02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 026D
        gbc.setState(0xa582, 0x3226, 0xe660, 0x217a, 0x6861, 0xd4dd, 0x0, 0x1);
        gbc.writeMem(0xa582, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x3226, gbc.sp());
        EXPECT(0xa584, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa582));
        EXPECT(0xd2, gbc.readMem(0xa583));
        // CB D2 026E
        gbc.setState(0xe838, 0xe1e9, 0x3730, 0xf69b, 0x5c4f, 0x1358, 0x0, 0x1);
        gbc.writeMem(0xe838, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xe1e9, gbc.sp());
        EXPECT(0xe83a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe838));
        EXPECT(0xd2, gbc.readMem(0xe839));
        // CB D2 026F
        gbc.setState(0xedc8, 0xf714, 0x26a0, 0x603e, 0x27ea, 0x33b7, 0x1, 0x1);
        gbc.writeMem(0xedc8, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xf714, gbc.sp());
        EXPECT(0xedca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedc8));
        EXPECT(0xd2, gbc.readMem(0xedc9));
        // CB D2 0270
        gbc.setState(0x6da6, 0x2c17, 0xf0f0, 0x4bb8, 0x8b40, 0x5be2, 0x0, 0x0);
        gbc.writeMem(0x6da6, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x2c17, gbc.sp());
        EXPECT(0x6da8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0271
        gbc.setState(0x3239, 0x5f7a, 0x2470, 0x2a89, 0x8119, 0xbaf6, 0x0, 0x1);
        gbc.writeMem(0x3239, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x5f7a, gbc.sp());
        EXPECT(0x323b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0272
        gbc.setState(0x39be, 0x4d13, 0x7220, 0xc63, 0xbfe, 0x605e, 0x1, 0x0);
        gbc.writeMem(0x39be, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x4d13, gbc.sp());
        EXPECT(0x39c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0273
        gbc.setState(0xe75f, 0xdfe3, 0x9870, 0x966f, 0xd597, 0x79e5, 0x1, 0x1);
        gbc.writeMem(0xe75f, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xdfe3, gbc.sp());
        EXPECT(0xe761, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe75f));
        EXPECT(0xd2, gbc.readMem(0xe760));
        // CB D2 0274
        gbc.setState(0x2b57, 0x8d7e, 0x970, 0xe29a, 0xd4ba, 0x29ca, 0x0, 0x1);
        gbc.writeMem(0x2b57, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x8d7e, gbc.sp());
        EXPECT(0x2b59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0275
        gbc.setState(0x651b, 0x603, 0x4980, 0x34a8, 0xdce0, 0x8f72, 0x1, 0x1);
        gbc.writeMem(0x651b, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x603, gbc.sp());
        EXPECT(0x651d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0276
        gbc.setState(0x51a0, 0xf001, 0x5160, 0x281f, 0x92ba, 0x5f5, 0x0, 0x1);
        gbc.writeMem(0x51a0, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xf001, gbc.sp());
        EXPECT(0x51a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0277
        gbc.setState(0xec1f, 0xa566, 0x90b0, 0x376a, 0x9c1f, 0x576, 0x0, 0x0);
        gbc.writeMem(0xec1f, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xa566, gbc.sp());
        EXPECT(0xec21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec1f));
        EXPECT(0xd2, gbc.readMem(0xec20));
        // CB D2 0278
        gbc.setState(0x24be, 0x56e1, 0x1cd0, 0x2572, 0xd96, 0x34ae, 0x1, 0x1);
        gbc.writeMem(0x24be, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x56e1, gbc.sp());
        EXPECT(0x24c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0279
        gbc.setState(0x4714, 0xa320, 0x19d0, 0x7b18, 0x23e2, 0x62d0, 0x0, 0x1);
        gbc.writeMem(0x4714, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xa320, gbc.sp());
        EXPECT(0x4716, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 027A
        gbc.setState(0xa4f6, 0xb153, 0xfc80, 0x2c0f, 0x5de5, 0x470a, 0x0, 0x0);
        gbc.writeMem(0xa4f6, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xb153, gbc.sp());
        EXPECT(0xa4f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4f6));
        EXPECT(0xd2, gbc.readMem(0xa4f7));
        // CB D2 027B
        gbc.setState(0xbd40, 0x7777, 0x8a40, 0x2409, 0xe08c, 0x4251, 0x1, 0x1);
        gbc.writeMem(0xbd40, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x7777, gbc.sp());
        EXPECT(0xbd42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd40));
        EXPECT(0xd2, gbc.readMem(0xbd41));
        // CB D2 027C
        gbc.setState(0xdcbf, 0x1089, 0x22b0, 0x83e3, 0x5b77, 0x2b78, 0x0, 0x0);
        gbc.writeMem(0xdcbf, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x1089, gbc.sp());
        EXPECT(0xdcc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcbf));
        EXPECT(0xd2, gbc.readMem(0xdcc0));
        // CB D2 027D
        gbc.setState(0x75f6, 0xc41, 0x7b70, 0x8630, 0xcdd1, 0x413d, 0x0, 0x1);
        gbc.writeMem(0x75f6, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xc41, gbc.sp());
        EXPECT(0x75f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 027E
        gbc.setState(0x446c, 0xd65f, 0xb120, 0xc33d, 0x3898, 0x19f5, 0x0, 0x0);
        gbc.writeMem(0x446c, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xd65f, gbc.sp());
        EXPECT(0x446e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 027F
        gbc.setState(0x585e, 0x60e7, 0x6380, 0x9631, 0xd2bb, 0x8b35, 0x0, 0x1);
        gbc.writeMem(0x585e, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x60e7, gbc.sp());
        EXPECT(0x5860, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0280
        gbc.setState(0x4b38, 0xa755, 0xcfb0, 0x17f3, 0xe73d, 0x55e1, 0x0, 0x1);
        gbc.writeMem(0x4b38, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xa755, gbc.sp());
        EXPECT(0x4b3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0281
        gbc.setState(0xe067, 0xa799, 0x60e0, 0x6aea, 0x2dff, 0x1d, 0x0, 0x0);
        gbc.writeMem(0xe067, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xa799, gbc.sp());
        EXPECT(0xe069, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe067));
        EXPECT(0xd2, gbc.readMem(0xe068));
        // CB D2 0282
        gbc.setState(0x32c3, 0x6bb9, 0x22d0, 0x7bc, 0x3c08, 0xe91f, 0x0, 0x1);
        gbc.writeMem(0x32c3, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x6bb9, gbc.sp());
        EXPECT(0x32c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0283
        gbc.setState(0x808b, 0x8ac5, 0x6690, 0x9d2, 0x254a, 0xd727, 0x1, 0x0);
        gbc.writeMem(0x808b, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x8ac5, gbc.sp());
        EXPECT(0x808d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x808b));
        EXPECT(0xd2, gbc.readMem(0x808c));
        // CB D2 0284
        gbc.setState(0xc2ca, 0x55f9, 0xd9c0, 0xcd0, 0xaf6f, 0xa4cb, 0x1, 0x1);
        gbc.writeMem(0xc2ca, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x55f9, gbc.sp());
        EXPECT(0xc2cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2ca));
        EXPECT(0xd2, gbc.readMem(0xc2cb));
        // CB D2 0285
        gbc.setState(0xed6, 0xd2e2, 0xf4b0, 0xbc7b, 0x56ad, 0x372f, 0x1, 0x0);
        gbc.writeMem(0xed6, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xd2e2, gbc.sp());
        EXPECT(0xed8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0286
        gbc.setState(0x3a81, 0xab81, 0x3a0, 0x2f6c, 0xd6bb, 0x76c7, 0x0, 0x1);
        gbc.writeMem(0x3a81, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xab81, gbc.sp());
        EXPECT(0x3a83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0287
        gbc.setState(0xcf3d, 0x404e, 0xc8b0, 0x45da, 0xbd17, 0x5daf, 0x1, 0x1);
        gbc.writeMem(0xcf3d, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x404e, gbc.sp());
        EXPECT(0xcf3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf3d));
        EXPECT(0xd2, gbc.readMem(0xcf3e));
        // CB D2 0288
        gbc.setState(0x495a, 0xbd49, 0x2120, 0xea6c, 0x679f, 0x4968, 0x0, 0x1);
        gbc.writeMem(0x495a, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xbd49, gbc.sp());
        EXPECT(0x495c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0289
        gbc.setState(0x7c2b, 0x7d20, 0xf2a0, 0xf12a, 0x5b01, 0x66d5, 0x0, 0x0);
        gbc.writeMem(0x7c2b, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x7d20, gbc.sp());
        EXPECT(0x7c2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 028A
        gbc.setState(0x3a71, 0xa28, 0xedb0, 0x64af, 0xad56, 0xbc12, 0x1, 0x0);
        gbc.writeMem(0x3a71, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xa28, gbc.sp());
        EXPECT(0x3a73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 028B
        gbc.setState(0x3ad4, 0x222, 0x5880, 0xb169, 0x8baa, 0x4b3c, 0x1, 0x0);
        gbc.writeMem(0x3ad4, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x222, gbc.sp());
        EXPECT(0x3ad6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 028C
        gbc.setState(0x4e8c, 0xb8c2, 0x12b0, 0x896, 0x2804, 0x8e0f, 0x1, 0x1);
        gbc.writeMem(0x4e8c, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xb8c2, gbc.sp());
        EXPECT(0x4e8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 028D
        gbc.setState(0x504d, 0xb36b, 0x7b0, 0x9deb, 0x247a, 0x8ba0, 0x1, 0x1);
        gbc.writeMem(0x504d, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xb36b, gbc.sp());
        EXPECT(0x504f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 028E
        gbc.setState(0xabdf, 0xfb38, 0x7270, 0x6fe1, 0x864c, 0xc25c, 0x1, 0x1);
        gbc.writeMem(0xabdf, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xfb38, gbc.sp());
        EXPECT(0xabe1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabdf));
        EXPECT(0xd2, gbc.readMem(0xabe0));
        // CB D2 028F
        gbc.setState(0x387e, 0x3dac, 0x7ce0, 0xd9fe, 0x4a6, 0x2397, 0x1, 0x0);
        gbc.writeMem(0x387e, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x3dac, gbc.sp());
        EXPECT(0x3880, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0290
        gbc.setState(0x2abd, 0xdc0c, 0xdb60, 0x8642, 0xbf7f, 0x1e5, 0x0, 0x1);
        gbc.writeMem(0x2abd, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xdc0c, gbc.sp());
        EXPECT(0x2abf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0291
        gbc.setState(0x8a19, 0x4605, 0x5da0, 0xe57a, 0xade9, 0x2784, 0x1, 0x0);
        gbc.writeMem(0x8a19, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x4605, gbc.sp());
        EXPECT(0x8a1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a19));
        EXPECT(0xd2, gbc.readMem(0x8a1a));
        // CB D2 0292
        gbc.setState(0x82c9, 0xc84c, 0xc4c0, 0xed87, 0xc26f, 0x89ee, 0x1, 0x0);
        gbc.writeMem(0x82c9, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xc84c, gbc.sp());
        EXPECT(0x82cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82c9));
        EXPECT(0xd2, gbc.readMem(0x82ca));
        // CB D2 0293
        gbc.setState(0xa046, 0x4d4d, 0x5790, 0x244f, 0xd593, 0x8cd3, 0x0, 0x0);
        gbc.writeMem(0xa046, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x4d4d, gbc.sp());
        EXPECT(0xa048, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa046));
        EXPECT(0xd2, gbc.readMem(0xa047));
        // CB D2 0294
        gbc.setState(0x5622, 0xd7f, 0x5530, 0xce3a, 0x4f2e, 0x5cfa, 0x0, 0x0);
        gbc.writeMem(0x5622, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xd7f, gbc.sp());
        EXPECT(0x5624, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0295
        gbc.setState(0xb1f8, 0xb503, 0x4110, 0xebc1, 0x2600, 0xd782, 0x1, 0x0);
        gbc.writeMem(0xb1f8, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xb503, gbc.sp());
        EXPECT(0xb1fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1f8));
        EXPECT(0xd2, gbc.readMem(0xb1f9));
        // CB D2 0296
        gbc.setState(0xb691, 0x254a, 0xc5d0, 0xa18d, 0x3f39, 0xd31, 0x0, 0x1);
        gbc.writeMem(0xb691, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x254a, gbc.sp());
        EXPECT(0xb693, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb691));
        EXPECT(0xd2, gbc.readMem(0xb692));
        // CB D2 0298
        gbc.setState(0x6046, 0x9c40, 0x6fe0, 0xf953, 0x7bd4, 0xd592, 0x0, 0x1);
        gbc.writeMem(0x6046, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x9c40, gbc.sp());
        EXPECT(0x6048, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0299
        gbc.setState(0x9280, 0x75ea, 0x9940, 0xbe7a, 0x2e68, 0x984, 0x0, 0x0);
        gbc.writeMem(0x9280, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x75ea, gbc.sp());
        EXPECT(0x9282, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9280));
        EXPECT(0xd2, gbc.readMem(0x9281));
        // CB D2 029A
        gbc.setState(0x6595, 0x27c1, 0xc610, 0x4d94, 0xe6d4, 0xa11f, 0x1, 0x1);
        gbc.writeMem(0x6595, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x27c1, gbc.sp());
        EXPECT(0x6597, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 029B
        gbc.setState(0xcb74, 0xd2ff, 0x85a0, 0x9190, 0xb126, 0x2729, 0x1, 0x0);
        gbc.writeMem(0xcb74, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xd2ff, gbc.sp());
        EXPECT(0xcb76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb74));
        EXPECT(0xd2, gbc.readMem(0xcb75));
        // CB D2 029C
        gbc.setState(0x3bfa, 0x25dc, 0xc640, 0x9438, 0x468f, 0xa335, 0x0, 0x0);
        gbc.writeMem(0x3bfa, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x25dc, gbc.sp());
        EXPECT(0x3bfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 029D
        gbc.setState(0x6aba, 0xd7b7, 0xb3b0, 0xd2ae, 0x6d07, 0xb042, 0x1, 0x1);
        gbc.writeMem(0x6aba, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xd7b7, gbc.sp());
        EXPECT(0x6abc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 029E
        gbc.setState(0x487b, 0x201b, 0x1600, 0xc6e4, 0xd2b9, 0x825c, 0x1, 0x1);
        gbc.writeMem(0x487b, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x201b, gbc.sp());
        EXPECT(0x487d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 029F
        gbc.setState(0x7366, 0xaeea, 0x6540, 0xd637, 0xdfd8, 0xb89a, 0x0, 0x1);
        gbc.writeMem(0x7366, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xaeea, gbc.sp());
        EXPECT(0x7368, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 02A0
        gbc.setState(0x6460, 0x11a1, 0xadb0, 0xabf3, 0xab72, 0xe39c, 0x1, 0x1);
        gbc.writeMem(0x6460, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x11a1, gbc.sp());
        EXPECT(0x6462, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 02A1
        gbc.setState(0x43af, 0x95d1, 0x2dd0, 0xc5b4, 0x40ed, 0xab26, 0x1, 0x1);
        gbc.writeMem(0x43af, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x95d1, gbc.sp());
        EXPECT(0x43b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 02A2
        gbc.setState(0xc9c3, 0x9d47, 0xf120, 0x7481, 0x255f, 0xca72, 0x1, 0x0);
        gbc.writeMem(0xc9c3, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x9d47, gbc.sp());
        EXPECT(0xc9c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9c3));
        EXPECT(0xd2, gbc.readMem(0xc9c4));
        // CB D2 02A3
        gbc.setState(0xb078, 0xaf65, 0x56f0, 0xcb09, 0xdb05, 0x7795, 0x1, 0x0);
        gbc.writeMem(0xb078, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xaf65, gbc.sp());
        EXPECT(0xb07a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb078));
        EXPECT(0xd2, gbc.readMem(0xb079));
        // CB D2 02A4
        gbc.setState(0x2daa, 0x2b8, 0x8440, 0x3a2e, 0xbed3, 0x945c, 0x0, 0x0);
        gbc.writeMem(0x2daa, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x2b8, gbc.sp());
        EXPECT(0x2dac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 02A5
        gbc.setState(0x14e5, 0xa43a, 0x94a0, 0x463f, 0xca6a, 0xa09c, 0x1, 0x0);
        gbc.writeMem(0x14e5, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xa43a, gbc.sp());
        EXPECT(0x14e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 02A6
        gbc.setState(0xa5a, 0xa7cd, 0x6c50, 0x25a7, 0x5db2, 0xd08a, 0x1, 0x1);
        gbc.writeMem(0xa5a, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xa7cd, gbc.sp());
        EXPECT(0xa5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 02A7
        gbc.setState(0x5c3d, 0xb5dc, 0xa0c0, 0x1621, 0x89ad, 0x7117, 0x1, 0x0);
        gbc.writeMem(0x5c3d, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xb5dc, gbc.sp());
        EXPECT(0x5c3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 02A8
        gbc.setState(0x3654, 0xa063, 0x9d10, 0x3257, 0xdb92, 0xc95, 0x1, 0x0);
        gbc.writeMem(0x3654, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xa063, gbc.sp());
        EXPECT(0x3656, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 02A9
        gbc.setState(0x3207, 0xea64, 0xb870, 0x8602, 0xd7f2, 0x52b4, 0x1, 0x1);
        gbc.writeMem(0x3207, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xea64, gbc.sp());
        EXPECT(0x3209, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 02AA
        gbc.setState(0x4410, 0x2e1b, 0x3350, 0xfdf3, 0x1f09, 0xfb07, 0x1, 0x0);
        gbc.writeMem(0x4410, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x2e1b, gbc.sp());
        EXPECT(0x4412, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 02AB
        gbc.setState(0x469f, 0x8922, 0xc3d0, 0x661b, 0x9bcc, 0x8ec, 0x0, 0x0);
        gbc.writeMem(0x469f, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x8922, gbc.sp());
        EXPECT(0x46a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 02AC
        gbc.setState(0x995b, 0xb199, 0x9e70, 0x6ba8, 0xdee3, 0x1181, 0x0, 0x0);
        gbc.writeMem(0x995b, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xb199, gbc.sp());
        EXPECT(0x995d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x995b));
        EXPECT(0xd2, gbc.readMem(0x995c));
        // CB D2 02AE
        gbc.setState(0x9aff, 0xf3a9, 0x95b0, 0xd4ca, 0x25cc, 0x152b, 0x1, 0x0);
        gbc.writeMem(0x9aff, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xf3a9, gbc.sp());
        EXPECT(0x9b01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9aff));
        EXPECT(0xd2, gbc.readMem(0x9b00));
        // CB D2 02AF
        gbc.setState(0xb504, 0xcf65, 0x4980, 0xd5aa, 0xf4a9, 0x49e9, 0x1, 0x1);
        gbc.writeMem(0xb504, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xcf65, gbc.sp());
        EXPECT(0xb506, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb504));
        EXPECT(0xd2, gbc.readMem(0xb505));
        // CB D2 02B0
        gbc.setState(0x98de, 0xd547, 0xd590, 0x461d, 0x70f0, 0xc44, 0x0, 0x0);
        gbc.writeMem(0x98de, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xd547, gbc.sp());
        EXPECT(0x98e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98de));
        EXPECT(0xd2, gbc.readMem(0x98df));
        // CB D2 02B1
        gbc.setState(0x3cce, 0x5f64, 0x97b0, 0x2beb, 0x9f45, 0x50a3, 0x1, 0x0);
        gbc.writeMem(0x3cce, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x5f64, gbc.sp());
        EXPECT(0x3cd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 02B2
        gbc.setState(0xe133, 0xff5d, 0x1cc0, 0x864f, 0x6598, 0xa425, 0x0, 0x0);
        gbc.writeMem(0xe133, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xff5d, gbc.sp());
        EXPECT(0xe135, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe133));
        EXPECT(0xd2, gbc.readMem(0xe134));
        // CB D2 02B3
        gbc.setState(0x2d92, 0x87a9, 0xee50, 0xac5d, 0xb334, 0xc8d1, 0x1, 0x0);
        gbc.writeMem(0x2d92, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x87a9, gbc.sp());
        EXPECT(0x2d94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 02B4
        gbc.setState(0x97c, 0x2c2b, 0xf6e0, 0x2b9d, 0x5a7e, 0x4338, 0x0, 0x0);
        gbc.writeMem(0x97c, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x2c2b, gbc.sp());
        EXPECT(0x97e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 02B5
        gbc.setState(0x7506, 0x1330, 0x40b0, 0x8d6b, 0x440b, 0x2421, 0x0, 0x1);
        gbc.writeMem(0x7506, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x1330, gbc.sp());
        EXPECT(0x7508, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 02B6
        gbc.setState(0x6a52, 0xa56, 0x3a50, 0x96bc, 0xa74b, 0x3fe5, 0x0, 0x0);
        gbc.writeMem(0x6a52, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xa56, gbc.sp());
        EXPECT(0x6a54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 02B7
        gbc.setState(0xb8be, 0x7bab, 0x9630, 0x2c7a, 0xec23, 0x6b81, 0x1, 0x1);
        gbc.writeMem(0xb8be, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x7bab, gbc.sp());
        EXPECT(0xb8c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8be));
        EXPECT(0xd2, gbc.readMem(0xb8bf));
        // CB D2 02B8
        gbc.setState(0xc48f, 0xb023, 0x6430, 0xede, 0x392a, 0x245a, 0x1, 0x0);
        gbc.writeMem(0xc48f, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xb023, gbc.sp());
        EXPECT(0xc491, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc48f));
        EXPECT(0xd2, gbc.readMem(0xc490));
        // CB D2 02B9
        gbc.setState(0xe6f3, 0x1271, 0xf010, 0xd0e7, 0x5975, 0xb837, 0x0, 0x0);
        gbc.writeMem(0xe6f3, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x1271, gbc.sp());
        EXPECT(0xe6f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6f3));
        EXPECT(0xd2, gbc.readMem(0xe6f4));
        // CB D2 02BA
        gbc.setState(0x1d88, 0x677, 0x6120, 0x7f84, 0xad9f, 0xe003, 0x0, 0x1);
        gbc.writeMem(0x1d88, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x677, gbc.sp());
        EXPECT(0x1d8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 02BB
        gbc.setState(0xc39d, 0x5b62, 0xfe60, 0xc4f8, 0xf1b0, 0xac1f, 0x0, 0x0);
        gbc.writeMem(0xc39d, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x5b62, gbc.sp());
        EXPECT(0xc39f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc39d));
        EXPECT(0xd2, gbc.readMem(0xc39e));
        // CB D2 02BD
        gbc.setState(0x1f5a, 0x38ed, 0xd1b0, 0x275, 0xb2d8, 0x5a31, 0x0, 0x0);
        gbc.writeMem(0x1f5a, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x38ed, gbc.sp());
        EXPECT(0x1f5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 02BE
        gbc.setState(0xb277, 0xb07e, 0xa20, 0x2a0e, 0x888b, 0x52f, 0x0, 0x1);
        gbc.writeMem(0xb277, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xb07e, gbc.sp());
        EXPECT(0xb279, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb277));
        EXPECT(0xd2, gbc.readMem(0xb278));
        // CB D2 02BF
        gbc.setState(0x6074, 0xbaf7, 0x8d90, 0xb25c, 0xd23e, 0x4558, 0x1, 0x1);
        gbc.writeMem(0x6074, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xbaf7, gbc.sp());
        EXPECT(0x6076, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 02C0
        gbc.setState(0xd972, 0xd618, 0xf5f0, 0x4c67, 0xc8f6, 0x5692, 0x0, 0x0);
        gbc.writeMem(0xd972, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xd618, gbc.sp());
        EXPECT(0xd974, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd972));
        EXPECT(0xd2, gbc.readMem(0xd973));
        // CB D2 02C1
        gbc.setState(0xdc99, 0x7761, 0xe440, 0x66fe, 0xac96, 0xf645, 0x0, 0x0);
        gbc.writeMem(0xdc99, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x7761, gbc.sp());
        EXPECT(0xdc9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc99));
        EXPECT(0xd2, gbc.readMem(0xdc9a));
        // CB D2 02C2
        gbc.setState(0x4051, 0x7b39, 0x6820, 0x82a2, 0xcb93, 0x159b, 0x0, 0x1);
        gbc.writeMem(0x4051, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x7b39, gbc.sp());
        EXPECT(0x4053, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 02C3
        gbc.setState(0xad37, 0x6943, 0x4530, 0x65f8, 0x1d67, 0xa8d0, 0x0, 0x1);
        gbc.writeMem(0xad37, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x6943, gbc.sp());
        EXPECT(0xad39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad37));
        EXPECT(0xd2, gbc.readMem(0xad38));
        // CB D2 02C4
        gbc.setState(0x758f, 0x3548, 0xd3c0, 0x6628, 0xb3bf, 0x2737, 0x1, 0x1);
        gbc.writeMem(0x758f, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x3548, gbc.sp());
        EXPECT(0x7591, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 02C5
        gbc.setState(0x28fb, 0x9505, 0x57e0, 0xf88c, 0x1326, 0x3d3e, 0x0, 0x0);
        gbc.writeMem(0x28fb, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x9505, gbc.sp());
        EXPECT(0x28fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 02C6
        gbc.setState(0x4223, 0xd31b, 0x1820, 0x78e6, 0x5efb, 0x477, 0x0, 0x1);
        gbc.writeMem(0x4223, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xd31b, gbc.sp());
        EXPECT(0x4225, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 02C7
        gbc.setState(0x75be, 0xb89a, 0x730, 0xa2c8, 0xa850, 0x7b1e, 0x0, 0x1);
        gbc.writeMem(0x75be, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xb89a, gbc.sp());
        EXPECT(0x75c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 02C8
        gbc.setState(0x1d2e, 0x34bc, 0xf3e0, 0xf4c8, 0xe7df, 0xf068, 0x1, 0x1);
        gbc.writeMem(0x1d2e, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x34bc, gbc.sp());
        EXPECT(0x1d30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 02C9
        gbc.setState(0x4f98, 0x3926, 0xa140, 0x3699, 0xb9c3, 0xa08e, 0x0, 0x0);
        gbc.writeMem(0x4f98, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x3926, gbc.sp());
        EXPECT(0x4f9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 02CA
        gbc.setState(0x30d, 0x11a4, 0x6e90, 0x64e5, 0xa44d, 0x3945, 0x1, 0x0);
        gbc.writeMem(0x30d, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x11a4, gbc.sp());
        EXPECT(0x30f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 02CB
        gbc.setState(0xa143, 0xb2d2, 0x5fe0, 0x7f0, 0x8f0c, 0xe2c4, 0x1, 0x1);
        gbc.writeMem(0xa143, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xb2d2, gbc.sp());
        EXPECT(0xa145, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa143));
        EXPECT(0xd2, gbc.readMem(0xa144));
        // CB D2 02CC
        gbc.setState(0x8133, 0x8eab, 0x50, 0xe07a, 0xe3ba, 0x48ac, 0x0, 0x0);
        gbc.writeMem(0x8133, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x8eab, gbc.sp());
        EXPECT(0x8135, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8133));
        EXPECT(0xd2, gbc.readMem(0x8134));
        // CB D2 02CD
        gbc.setState(0x45e2, 0x7f4, 0x800, 0x524d, 0x8259, 0xaa7, 0x1, 0x1);
        gbc.writeMem(0x45e2, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x7f4, gbc.sp());
        EXPECT(0x45e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 02CE
        gbc.setState(0x2ebd, 0x45c8, 0x6b70, 0x24ed, 0x899b, 0xa142, 0x1, 0x0);
        gbc.writeMem(0x2ebd, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x45c8, gbc.sp());
        EXPECT(0x2ebf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 02CF
        gbc.setState(0xc643, 0x7b45, 0x2f60, 0x47fd, 0x3e45, 0x497c, 0x1, 0x0);
        gbc.writeMem(0xc643, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x7b45, gbc.sp());
        EXPECT(0xc645, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc643));
        EXPECT(0xd2, gbc.readMem(0xc644));
        // CB D2 02D0
        gbc.setState(0xe30f, 0x3b07, 0x7f10, 0x9dff, 0x6e9f, 0xdbc0, 0x0, 0x0);
        gbc.writeMem(0xe30f, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x3b07, gbc.sp());
        EXPECT(0xe311, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe30f));
        EXPECT(0xd2, gbc.readMem(0xe310));
        // CB D2 02D1
        gbc.setState(0x9d59, 0xd097, 0x1ed0, 0x4c2c, 0xdc9c, 0x9d60, 0x1, 0x0);
        gbc.writeMem(0x9d59, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xd097, gbc.sp());
        EXPECT(0x9d5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d59));
        EXPECT(0xd2, gbc.readMem(0x9d5a));
        // CB D2 02D2
        gbc.setState(0x523b, 0xf6c4, 0x6e40, 0x946d, 0xa44c, 0xd311, 0x0, 0x1);
        gbc.writeMem(0x523b, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xf6c4, gbc.sp());
        EXPECT(0x523d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 02D3
        gbc.setState(0x651c, 0x49a3, 0xb370, 0xcec5, 0x32, 0x74fb, 0x1, 0x0);
        gbc.writeMem(0x651c, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x49a3, gbc.sp());
        EXPECT(0x651e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 02D4
        gbc.setState(0xddce, 0xb25c, 0x4ee0, 0x79c9, 0xfd79, 0x1d5c, 0x1, 0x1);
        gbc.writeMem(0xddce, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xb25c, gbc.sp());
        EXPECT(0xddd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddce));
        EXPECT(0xd2, gbc.readMem(0xddcf));
        // CB D2 02D5
        gbc.setState(0x5734, 0xcf37, 0x5910, 0xc431, 0xf6d6, 0xa96b, 0x0, 0x0);
        gbc.writeMem(0x5734, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xcf37, gbc.sp());
        EXPECT(0x5736, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 02D6
        gbc.setState(0xdeb1, 0xd52, 0x7800, 0x32b8, 0xdf17, 0x704d, 0x0, 0x0);
        gbc.writeMem(0xdeb1, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xd52, gbc.sp());
        EXPECT(0xdeb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdeb1));
        EXPECT(0xd2, gbc.readMem(0xdeb2));
        // CB D2 02D7
        gbc.setState(0xd734, 0xfee3, 0x66b0, 0xa83e, 0x54, 0xa214, 0x0, 0x0);
        gbc.writeMem(0xd734, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xfee3, gbc.sp());
        EXPECT(0xd736, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd734));
        EXPECT(0xd2, gbc.readMem(0xd735));
        // CB D2 02D8
        gbc.setState(0xa27e, 0x30e5, 0xd230, 0x986a, 0xb2f7, 0xafcf, 0x0, 0x1);
        gbc.writeMem(0xa27e, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x30e5, gbc.sp());
        EXPECT(0xa280, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa27e));
        EXPECT(0xd2, gbc.readMem(0xa27f));
        // CB D2 02D9
        gbc.setState(0x768, 0x3307, 0xcaf0, 0x9a58, 0x1abc, 0x4aa8, 0x1, 0x1);
        gbc.writeMem(0x768, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x3307, gbc.sp());
        EXPECT(0x76a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 02DA
        gbc.setState(0xe4ac, 0xbfe0, 0xf900, 0xe293, 0x8f9d, 0x991f, 0x1, 0x1);
        gbc.writeMem(0xe4ac, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xbfe0, gbc.sp());
        EXPECT(0xe4ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4ac));
        EXPECT(0xd2, gbc.readMem(0xe4ad));
        // CB D2 02DB
        gbc.setState(0x49e6, 0x28a8, 0xbc30, 0xfa8a, 0x6f4e, 0x2f2, 0x1, 0x1);
        gbc.writeMem(0x49e6, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x28a8, gbc.sp());
        EXPECT(0x49e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 02DC
        gbc.setState(0x75e7, 0xe34a, 0x8e50, 0xd625, 0xbcc9, 0x96cc, 0x1, 0x0);
        gbc.writeMem(0x75e7, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xe34a, gbc.sp());
        EXPECT(0x75e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 02DD
        gbc.setState(0x8b89, 0x6670, 0x9be0, 0x587e, 0x1915, 0x7350, 0x1, 0x0);
        gbc.writeMem(0x8b89, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x6670, gbc.sp());
        EXPECT(0x8b8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b89));
        EXPECT(0xd2, gbc.readMem(0x8b8a));
        // CB D2 02DE
        gbc.setState(0xbb7f, 0xa312, 0x4b60, 0xc731, 0x3526, 0x4f3, 0x1, 0x0);
        gbc.writeMem(0xbb7f, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xa312, gbc.sp());
        EXPECT(0xbb81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb7f));
        EXPECT(0xd2, gbc.readMem(0xbb80));
        // CB D2 02DF
        gbc.setState(0xd0e3, 0x39db, 0xe070, 0x5def, 0xb785, 0xca21, 0x0, 0x0);
        gbc.writeMem(0xd0e3, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x39db, gbc.sp());
        EXPECT(0xd0e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0e3));
        EXPECT(0xd2, gbc.readMem(0xd0e4));
        // CB D2 02E0
        gbc.setState(0x7875, 0xf07b, 0x12a0, 0x59c6, 0xd09b, 0xd1a4, 0x1, 0x1);
        gbc.writeMem(0x7875, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xf07b, gbc.sp());
        EXPECT(0x7877, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 02E1
        gbc.setState(0xd1a7, 0xccda, 0xa1e0, 0xde83, 0xceef, 0xe47e, 0x1, 0x0);
        gbc.writeMem(0xd1a7, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xccda, gbc.sp());
        EXPECT(0xd1a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1a7));
        EXPECT(0xd2, gbc.readMem(0xd1a8));
        // CB D2 02E2
        gbc.setState(0x2f2f, 0x42f9, 0x85f0, 0xc018, 0x988e, 0xdf75, 0x1, 0x1);
        gbc.writeMem(0x2f2f, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x42f9, gbc.sp());
        EXPECT(0x2f31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 02E3
        gbc.setState(0xc7e4, 0x1e87, 0x3940, 0x468a, 0x983, 0xf6d9, 0x0, 0x0);
        gbc.writeMem(0xc7e4, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x1e87, gbc.sp());
        EXPECT(0xc7e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7e4));
        EXPECT(0xd2, gbc.readMem(0xc7e5));
        // CB D2 02E4
        gbc.setState(0x4f79, 0xbf24, 0x5d70, 0x6718, 0x5ca5, 0xb045, 0x1, 0x0);
        gbc.writeMem(0x4f79, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xbf24, gbc.sp());
        EXPECT(0x4f7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 02E5
        gbc.setState(0x78d8, 0xd386, 0x1590, 0xfb9a, 0x95e6, 0xa39d, 0x1, 0x1);
        gbc.writeMem(0x78d8, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xd386, gbc.sp());
        EXPECT(0x78da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 02E6
        gbc.setState(0x7f82, 0xd0f8, 0xd550, 0x59e7, 0xf300, 0x4f3f, 0x0, 0x1);
        gbc.writeMem(0x7f82, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xd0f8, gbc.sp());
        EXPECT(0x7f84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 02E7
        gbc.setState(0x2180, 0xa997, 0x4df0, 0xf933, 0x6ace, 0x223d, 0x0, 0x1);
        gbc.writeMem(0x2180, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xa997, gbc.sp());
        EXPECT(0x2182, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 02E8
        gbc.setState(0x5cd, 0xc5cd, 0x7480, 0x9222, 0x545e, 0x2364, 0x1, 0x1);
        gbc.writeMem(0x5cd, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xc5cd, gbc.sp());
        EXPECT(0x5cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 02E9
        gbc.setState(0x82bc, 0x3a91, 0x7830, 0x80c5, 0x1313, 0x2b81, 0x0, 0x1);
        gbc.writeMem(0x82bc, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x3a91, gbc.sp());
        EXPECT(0x82be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82bc));
        EXPECT(0xd2, gbc.readMem(0x82bd));
        // CB D2 02EA
        gbc.setState(0xae95, 0x736a, 0x93a0, 0x8f8a, 0xdbeb, 0x42c, 0x1, 0x1);
        gbc.writeMem(0xae95, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x736a, gbc.sp());
        EXPECT(0xae97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae95));
        EXPECT(0xd2, gbc.readMem(0xae96));
        // CB D2 02EB
        gbc.setState(0xed27, 0xd40, 0xa80, 0x4c58, 0xe119, 0x9786, 0x1, 0x1);
        gbc.writeMem(0xed27, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xd40, gbc.sp());
        EXPECT(0xed29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed27));
        EXPECT(0xd2, gbc.readMem(0xed28));
        // CB D2 02EC
        gbc.setState(0xbb68, 0xec0f, 0x32e0, 0xf22f, 0x5244, 0x61c, 0x0, 0x0);
        gbc.writeMem(0xbb68, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xec0f, gbc.sp());
        EXPECT(0xbb6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb68));
        EXPECT(0xd2, gbc.readMem(0xbb69));
        // CB D2 02ED
        gbc.setState(0xcd75, 0xdd02, 0x5480, 0x3ca2, 0x3c54, 0x7e28, 0x0, 0x1);
        gbc.writeMem(0xcd75, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xdd02, gbc.sp());
        EXPECT(0xcd77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd75));
        EXPECT(0xd2, gbc.readMem(0xcd76));
        // CB D2 02EE
        gbc.setState(0x26d4, 0x116d, 0x6f70, 0xa88f, 0xfb81, 0x4ef5, 0x1, 0x0);
        gbc.writeMem(0x26d4, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x116d, gbc.sp());
        EXPECT(0x26d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 02EF
        gbc.setState(0x8451, 0xf55d, 0xfa0, 0x9558, 0xaddc, 0x135b, 0x0, 0x1);
        gbc.writeMem(0x8451, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xf55d, gbc.sp());
        EXPECT(0x8453, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8451));
        EXPECT(0xd2, gbc.readMem(0x8452));
        // CB D2 02F0
        gbc.setState(0x4c14, 0xd760, 0x2410, 0xc6af, 0x7917, 0x134d, 0x1, 0x1);
        gbc.writeMem(0x4c14, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xd760, gbc.sp());
        EXPECT(0x4c16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 02F1
        gbc.setState(0x8b87, 0x1ee1, 0xc300, 0x9466, 0xce3a, 0x60a3, 0x0, 0x0);
        gbc.writeMem(0x8b87, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x1ee1, gbc.sp());
        EXPECT(0x8b89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b87));
        EXPECT(0xd2, gbc.readMem(0x8b88));
        // CB D2 02F2
        gbc.setState(0x3905, 0x19ae, 0x15a0, 0x1e68, 0x5343, 0xf25e, 0x0, 0x1);
        gbc.writeMem(0x3905, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x19ae, gbc.sp());
        EXPECT(0x3907, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 02F3
        gbc.setState(0xb25d, 0xef29, 0xc7e0, 0x6768, 0xf2f0, 0x211b, 0x0, 0x1);
        gbc.writeMem(0xb25d, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xef29, gbc.sp());
        EXPECT(0xb25f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb25d));
        EXPECT(0xd2, gbc.readMem(0xb25e));
        // CB D2 02F4
        gbc.setState(0x1234, 0x33a3, 0x5b60, 0xeb9c, 0x88a5, 0x8c80, 0x0, 0x0);
        gbc.writeMem(0x1234, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x33a3, gbc.sp());
        EXPECT(0x1236, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 02F5
        gbc.setState(0x7b0a, 0x82b8, 0xe850, 0x40ab, 0xc413, 0x3f0f, 0x0, 0x1);
        gbc.writeMem(0x7b0a, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x82b8, gbc.sp());
        EXPECT(0x7b0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 02F6
        gbc.setState(0xe5a0, 0x26df, 0xeab0, 0xa2e, 0xe5a2, 0x4419, 0x1, 0x0);
        gbc.writeMem(0xe5a0, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x26df, gbc.sp());
        EXPECT(0xe5a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5a0));
        EXPECT(0xd2, gbc.readMem(0xe5a1));
        // CB D2 02F8
        gbc.setState(0x2728, 0x7f44, 0xa1d0, 0x7887, 0x8354, 0x2f8f, 0x0, 0x1);
        gbc.writeMem(0x2728, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x7f44, gbc.sp());
        EXPECT(0x272a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 02F9
        gbc.setState(0xc579, 0x446f, 0x8880, 0x652d, 0x2453, 0x1b0e, 0x1, 0x1);
        gbc.writeMem(0xc579, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x446f, gbc.sp());
        EXPECT(0xc57b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc579));
        EXPECT(0xd2, gbc.readMem(0xc57a));
        // CB D2 02FA
        gbc.setState(0x278d, 0xb06c, 0x8860, 0xd549, 0x6a59, 0x76e0, 0x1, 0x1);
        gbc.writeMem(0x278d, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xb06c, gbc.sp());
        EXPECT(0x278f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 02FC
        gbc.setState(0x93a, 0xa372, 0xd4e0, 0x7f84, 0x38c0, 0x727b, 0x1, 0x1);
        gbc.writeMem(0x93a, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xa372, gbc.sp());
        EXPECT(0x93c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 02FD
        gbc.setState(0x8831, 0x71f6, 0x780, 0xf3bb, 0xab1d, 0x22f, 0x0, 0x0);
        gbc.writeMem(0x8831, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x71f6, gbc.sp());
        EXPECT(0x8833, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8831));
        EXPECT(0xd2, gbc.readMem(0x8832));
        // CB D2 02FE
        gbc.setState(0x6bbe, 0xd63a, 0x3190, 0xa997, 0x86fc, 0x26f3, 0x1, 0x1);
        gbc.writeMem(0x6bbe, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xd63a, gbc.sp());
        EXPECT(0x6bc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 02FF
        gbc.setState(0x3150, 0x4214, 0x4870, 0x7f22, 0x693b, 0xb810, 0x1, 0x1);
        gbc.writeMem(0x3150, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x4214, gbc.sp());
        EXPECT(0x3152, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0300
        gbc.setState(0x11fc, 0xd5f2, 0x5120, 0x2355, 0xdd30, 0xa273, 0x1, 0x1);
        gbc.writeMem(0x11fc, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xd5f2, gbc.sp());
        EXPECT(0x11fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0301
        gbc.setState(0x2a5f, 0x4259, 0xf210, 0x206b, 0x8481, 0xa131, 0x0, 0x0);
        gbc.writeMem(0x2a5f, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x4259, gbc.sp());
        EXPECT(0x2a61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0302
        gbc.setState(0x5165, 0xd7da, 0x6fb0, 0xc08a, 0xe1d6, 0xb3eb, 0x0, 0x1);
        gbc.writeMem(0x5165, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xd7da, gbc.sp());
        EXPECT(0x5167, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0303
        gbc.setState(0xefdc, 0x602a, 0xe5c0, 0x643f, 0x93c6, 0xdec1, 0x0, 0x0);
        gbc.writeMem(0xefdc, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x602a, gbc.sp());
        EXPECT(0xefde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefdc));
        EXPECT(0xd2, gbc.readMem(0xefdd));
        // CB D2 0304
        gbc.setState(0x8b67, 0x3db7, 0x6770, 0x6c24, 0xf01f, 0xfc5f, 0x1, 0x1);
        gbc.writeMem(0x8b67, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x3db7, gbc.sp());
        EXPECT(0x8b69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b67));
        EXPECT(0xd2, gbc.readMem(0x8b68));
        // CB D2 0305
        gbc.setState(0x1f27, 0xa3b2, 0xcc10, 0x8f9c, 0x3c1e, 0x9953, 0x1, 0x0);
        gbc.writeMem(0x1f27, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xa3b2, gbc.sp());
        EXPECT(0x1f29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0306
        gbc.setState(0x38b0, 0xc23b, 0x60, 0x1fad, 0x887e, 0x6d61, 0x1, 0x1);
        gbc.writeMem(0x38b0, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xc23b, gbc.sp());
        EXPECT(0x38b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0307
        gbc.setState(0x6023, 0xc8e3, 0xd330, 0x55bc, 0x93ef, 0xae52, 0x1, 0x0);
        gbc.writeMem(0x6023, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xc8e3, gbc.sp());
        EXPECT(0x6025, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0308
        gbc.setState(0xbd03, 0x6807, 0x2400, 0x5a10, 0x2300, 0xd65e, 0x0, 0x0);
        gbc.writeMem(0xbd03, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x6807, gbc.sp());
        EXPECT(0xbd05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd03));
        EXPECT(0xd2, gbc.readMem(0xbd04));
        // CB D2 030A
        gbc.setState(0xc8ca, 0x48a0, 0x3ab0, 0x9ee, 0x1350, 0x50df, 0x0, 0x1);
        gbc.writeMem(0xc8ca, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x48a0, gbc.sp());
        EXPECT(0xc8cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8ca));
        EXPECT(0xd2, gbc.readMem(0xc8cb));
        // CB D2 030B
        gbc.setState(0x8584, 0x2e2c, 0xab10, 0xb30b, 0x682, 0xa92c, 0x0, 0x0);
        gbc.writeMem(0x8584, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x2e2c, gbc.sp());
        EXPECT(0x8586, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8584));
        EXPECT(0xd2, gbc.readMem(0x8585));
        // CB D2 030C
        gbc.setState(0x6c80, 0xedd2, 0x4280, 0xe423, 0x91e6, 0xb5c2, 0x1, 0x1);
        gbc.writeMem(0x6c80, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xedd2, gbc.sp());
        EXPECT(0x6c82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 030D
        gbc.setState(0x791f, 0xfa6c, 0x7c00, 0xc217, 0x4c39, 0x66be, 0x1, 0x0);
        gbc.writeMem(0x791f, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xfa6c, gbc.sp());
        EXPECT(0x7921, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 030E
        gbc.setState(0xe5c1, 0x7bdc, 0x67b0, 0x6b69, 0xd3ca, 0x8ce3, 0x1, 0x1);
        gbc.writeMem(0xe5c1, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x7bdc, gbc.sp());
        EXPECT(0xe5c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5c1));
        EXPECT(0xd2, gbc.readMem(0xe5c2));
        // CB D2 030F
        gbc.setState(0x3a38, 0xeae, 0x23d0, 0x2e62, 0x1a0a, 0x6213, 0x1, 0x0);
        gbc.writeMem(0x3a38, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xeae, gbc.sp());
        EXPECT(0x3a3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0310
        gbc.setState(0x423f, 0xece1, 0xbe20, 0x678c, 0x4bd9, 0x6725, 0x0, 0x1);
        gbc.writeMem(0x423f, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xece1, gbc.sp());
        EXPECT(0x4241, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0311
        gbc.setState(0x87b, 0x3ebb, 0x2670, 0x3c26, 0x784e, 0x8733, 0x1, 0x1);
        gbc.writeMem(0x87b, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x3ebb, gbc.sp());
        EXPECT(0x87d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0312
        gbc.setState(0x7c4d, 0xa704, 0x9820, 0x77a6, 0x5aba, 0x9d77, 0x0, 0x0);
        gbc.writeMem(0x7c4d, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xa704, gbc.sp());
        EXPECT(0x7c4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0313
        gbc.setState(0xd660, 0x26a8, 0x1dc0, 0x5839, 0x751, 0x4cd7, 0x1, 0x1);
        gbc.writeMem(0xd660, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x26a8, gbc.sp());
        EXPECT(0xd662, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd660));
        EXPECT(0xd2, gbc.readMem(0xd661));
        // CB D2 0314
        gbc.setState(0x2e54, 0x6a48, 0xfb50, 0x1864, 0xe568, 0xce4b, 0x1, 0x1);
        gbc.writeMem(0x2e54, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x6a48, gbc.sp());
        EXPECT(0x2e56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0315
        gbc.setState(0x29eb, 0x5df3, 0xc650, 0xca12, 0x6b18, 0x5a29, 0x1, 0x0);
        gbc.writeMem(0x29eb, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x5df3, gbc.sp());
        EXPECT(0x29ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0316
        gbc.setState(0xaea9, 0x2791, 0x8da0, 0x90ef, 0xb0b6, 0xb4bd, 0x0, 0x0);
        gbc.writeMem(0xaea9, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x2791, gbc.sp());
        EXPECT(0xaeab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaea9));
        EXPECT(0xd2, gbc.readMem(0xaeaa));
        // CB D2 0317
        gbc.setState(0xdc42, 0xc763, 0x1670, 0x4645, 0x463b, 0x7f19, 0x1, 0x1);
        gbc.writeMem(0xdc42, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xc763, gbc.sp());
        EXPECT(0xdc44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc42));
        EXPECT(0xd2, gbc.readMem(0xdc43));
        // CB D2 0319
        gbc.setState(0xcabe, 0x34d6, 0x2f60, 0x1415, 0x9e04, 0x9c1e, 0x0, 0x0);
        gbc.writeMem(0xcabe, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x34d6, gbc.sp());
        EXPECT(0xcac0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcabe));
        EXPECT(0xd2, gbc.readMem(0xcabf));
        // CB D2 031A
        gbc.setState(0xb434, 0x3093, 0x22a0, 0x85a3, 0xed2c, 0xbb47, 0x0, 0x1);
        gbc.writeMem(0xb434, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x3093, gbc.sp());
        EXPECT(0xb436, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb434));
        EXPECT(0xd2, gbc.readMem(0xb435));
        // CB D2 031B
        gbc.setState(0x5160, 0xc391, 0x4130, 0x6963, 0x5b14, 0x556d, 0x0, 0x1);
        gbc.writeMem(0x5160, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xc391, gbc.sp());
        EXPECT(0x5162, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 031C
        gbc.setState(0xbfe0, 0xbdb4, 0xcc10, 0x531, 0xefa8, 0x30db, 0x1, 0x1);
        gbc.writeMem(0xbfe0, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xbdb4, gbc.sp());
        EXPECT(0xbfe2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfe0));
        EXPECT(0xd2, gbc.readMem(0xbfe1));
        // CB D2 031D
        gbc.setState(0x4ae2, 0x1185, 0xd630, 0x224, 0x9802, 0xb7c4, 0x0, 0x1);
        gbc.writeMem(0x4ae2, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x1185, gbc.sp());
        EXPECT(0x4ae4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 031E
        gbc.setState(0x67cc, 0x6b36, 0xdb90, 0xc7d7, 0x1ba7, 0x4a78, 0x1, 0x1);
        gbc.writeMem(0x67cc, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x6b36, gbc.sp());
        EXPECT(0x67ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 031F
        gbc.setState(0x5623, 0x57f, 0xb2a0, 0x9024, 0xc3c9, 0xc655, 0x0, 0x0);
        gbc.writeMem(0x5623, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x57f, gbc.sp());
        EXPECT(0x5625, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0320
        gbc.setState(0xbbfe, 0x2a24, 0x40d0, 0x1565, 0xdda1, 0xfb28, 0x1, 0x1);
        gbc.writeMem(0xbbfe, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x2a24, gbc.sp());
        EXPECT(0xbc00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbfe));
        EXPECT(0xd2, gbc.readMem(0xbbff));
        // CB D2 0321
        gbc.setState(0xa93d, 0xea98, 0xac30, 0xae0b, 0x5abf, 0xc50f, 0x0, 0x1);
        gbc.writeMem(0xa93d, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xea98, gbc.sp());
        EXPECT(0xa93f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa93d));
        EXPECT(0xd2, gbc.readMem(0xa93e));
        // CB D2 0322
        gbc.setState(0x8d91, 0x7a98, 0x3920, 0xd77b, 0xd6b6, 0x44cc, 0x0, 0x0);
        gbc.writeMem(0x8d91, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x7a98, gbc.sp());
        EXPECT(0x8d93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d91));
        EXPECT(0xd2, gbc.readMem(0x8d92));
        // CB D2 0323
        gbc.setState(0x9d36, 0xc56f, 0xf50, 0x82af, 0xa4ff, 0x5fc1, 0x0, 0x0);
        gbc.writeMem(0x9d36, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xc56f, gbc.sp());
        EXPECT(0x9d38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d36));
        EXPECT(0xd2, gbc.readMem(0x9d37));
        // CB D2 0324
        gbc.setState(0xdd87, 0x8b95, 0xdd70, 0xa94c, 0x4aff, 0xeb7e, 0x1, 0x1);
        gbc.writeMem(0xdd87, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x8b95, gbc.sp());
        EXPECT(0xdd89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd87));
        EXPECT(0xd2, gbc.readMem(0xdd88));
        // CB D2 0325
        gbc.setState(0xe07d, 0x725c, 0xd80, 0xe9d3, 0x240b, 0xed88, 0x0, 0x1);
        gbc.writeMem(0xe07d, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x725c, gbc.sp());
        EXPECT(0xe07f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe07d));
        EXPECT(0xd2, gbc.readMem(0xe07e));
        // CB D2 0326
        gbc.setState(0xd03c, 0x3f60, 0xafd0, 0x18c0, 0x7904, 0xa51d, 0x1, 0x0);
        gbc.writeMem(0xd03c, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x3f60, gbc.sp());
        EXPECT(0xd03e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd03c));
        EXPECT(0xd2, gbc.readMem(0xd03d));
        // CB D2 0327
        gbc.setState(0x8e45, 0xd677, 0xfa20, 0x23fc, 0x7f76, 0x2b23, 0x0, 0x1);
        gbc.writeMem(0x8e45, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xd677, gbc.sp());
        EXPECT(0x8e47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e45));
        EXPECT(0xd2, gbc.readMem(0x8e46));
        // CB D2 0328
        gbc.setState(0x26a7, 0x436, 0x33a0, 0x51be, 0x4353, 0x517d, 0x1, 0x0);
        gbc.writeMem(0x26a7, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x436, gbc.sp());
        EXPECT(0x26a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0329
        gbc.setState(0xeb4e, 0x9b17, 0x3d40, 0xa4aa, 0x1d21, 0xd604, 0x0, 0x0);
        gbc.writeMem(0xeb4e, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x9b17, gbc.sp());
        EXPECT(0xeb50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb4e));
        EXPECT(0xd2, gbc.readMem(0xeb4f));
        // CB D2 032A
        gbc.setState(0x73bf, 0x94fe, 0x19f0, 0xf9f7, 0xa350, 0x4a10, 0x0, 0x1);
        gbc.writeMem(0x73bf, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x94fe, gbc.sp());
        EXPECT(0x73c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 032B
        gbc.setState(0x4d0, 0xda2f, 0x9970, 0xa31b, 0xaff9, 0x7698, 0x1, 0x1);
        gbc.writeMem(0x4d0, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xda2f, gbc.sp());
        EXPECT(0x4d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 032C
        gbc.setState(0xb26c, 0x156a, 0xe930, 0x9121, 0xaad5, 0x18fe, 0x1, 0x0);
        gbc.writeMem(0xb26c, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x156a, gbc.sp());
        EXPECT(0xb26e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb26c));
        EXPECT(0xd2, gbc.readMem(0xb26d));
        // CB D2 032D
        gbc.setState(0xb59a, 0xb9ae, 0x98a0, 0xb943, 0x4527, 0x3072, 0x0, 0x1);
        gbc.writeMem(0xb59a, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xb9ae, gbc.sp());
        EXPECT(0xb59c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb59a));
        EXPECT(0xd2, gbc.readMem(0xb59b));
        // CB D2 032E
        gbc.setState(0x6dfe, 0x8efe, 0x5ee0, 0xfafc, 0x8d65, 0xcbb5, 0x1, 0x1);
        gbc.writeMem(0x6dfe, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x8efe, gbc.sp());
        EXPECT(0x6e00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 032F
        gbc.setState(0xff, 0x4731, 0x3270, 0xe92a, 0x336b, 0xda74, 0x1, 0x0);
        gbc.writeMem(0xff, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x4731, gbc.sp());
        EXPECT(0x101, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0330
        gbc.setState(0xe284, 0x1a56, 0x6790, 0xae60, 0xb5e8, 0x81bf, 0x1, 0x1);
        gbc.writeMem(0xe284, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x1a56, gbc.sp());
        EXPECT(0xe286, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe284));
        EXPECT(0xd2, gbc.readMem(0xe285));
        // CB D2 0331
        gbc.setState(0x1553, 0x82b5, 0xe4c0, 0x55c2, 0xe3f5, 0xf4db, 0x0, 0x0);
        gbc.writeMem(0x1553, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x82b5, gbc.sp());
        EXPECT(0x1555, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0332
        gbc.setState(0x6158, 0x1212, 0x8850, 0x5535, 0xa86d, 0xc193, 0x0, 0x0);
        gbc.writeMem(0x6158, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x1212, gbc.sp());
        EXPECT(0x615a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0333
        gbc.setState(0x97b8, 0x8629, 0x1e70, 0x7b3a, 0x162e, 0xc131, 0x1, 0x0);
        gbc.writeMem(0x97b8, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x8629, gbc.sp());
        EXPECT(0x97ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97b8));
        EXPECT(0xd2, gbc.readMem(0x97b9));
        // CB D2 0334
        gbc.setState(0x3cb1, 0x4a88, 0xe090, 0x5455, 0x682a, 0x7541, 0x1, 0x1);
        gbc.writeMem(0x3cb1, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x4a88, gbc.sp());
        EXPECT(0x3cb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0335
        gbc.setState(0x8ad9, 0xdb0d, 0xc7a0, 0x270, 0x1cc2, 0x7609, 0x1, 0x0);
        gbc.writeMem(0x8ad9, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xdb0d, gbc.sp());
        EXPECT(0x8adb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ad9));
        EXPECT(0xd2, gbc.readMem(0x8ada));
        // CB D2 0336
        gbc.setState(0x4376, 0x744, 0xe7a0, 0x507, 0xc475, 0xcdfb, 0x1, 0x0);
        gbc.writeMem(0x4376, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x744, gbc.sp());
        EXPECT(0x4378, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0337
        gbc.setState(0x432f, 0x3c45, 0xa4c0, 0x9695, 0xd0a0, 0xe503, 0x1, 0x0);
        gbc.writeMem(0x432f, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x3c45, gbc.sp());
        EXPECT(0x4331, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0338
        gbc.setState(0xbe94, 0x63c4, 0xc800, 0x95bd, 0x49a0, 0xc10d, 0x1, 0x1);
        gbc.writeMem(0xbe94, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x63c4, gbc.sp());
        EXPECT(0xbe96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe94));
        EXPECT(0xd2, gbc.readMem(0xbe95));
        // CB D2 0339
        gbc.setState(0xcfa9, 0xbf5d, 0x3d50, 0x882, 0x6192, 0x9ba2, 0x0, 0x0);
        gbc.writeMem(0xcfa9, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xbf5d, gbc.sp());
        EXPECT(0xcfab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfa9));
        EXPECT(0xd2, gbc.readMem(0xcfaa));
        // CB D2 033A
        gbc.setState(0x62ea, 0xe8a5, 0xdf10, 0xa935, 0x489d, 0xf688, 0x0, 0x1);
        gbc.writeMem(0x62ea, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xe8a5, gbc.sp());
        EXPECT(0x62ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 033B
        gbc.setState(0xe6cc, 0x84c1, 0x4530, 0x62dc, 0x1232, 0x5a2f, 0x1, 0x1);
        gbc.writeMem(0xe6cc, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x84c1, gbc.sp());
        EXPECT(0xe6ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6cc));
        EXPECT(0xd2, gbc.readMem(0xe6cd));
        // CB D2 033E
        gbc.setState(0x6c57, 0x1af, 0x43e0, 0x4b9, 0x8475, 0xf200, 0x0, 0x0);
        gbc.writeMem(0x6c57, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x1af, gbc.sp());
        EXPECT(0x6c59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 033F
        gbc.setState(0xe82b, 0x53fb, 0x6a60, 0xd62d, 0xa066, 0x22b, 0x1, 0x1);
        gbc.writeMem(0xe82b, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x53fb, gbc.sp());
        EXPECT(0xe82d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe82b));
        EXPECT(0xd2, gbc.readMem(0xe82c));
        // CB D2 0340
        gbc.setState(0xe650, 0x7d99, 0x1610, 0x7f5, 0xb36a, 0x319d, 0x0, 0x1);
        gbc.writeMem(0xe650, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x7d99, gbc.sp());
        EXPECT(0xe652, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe650));
        EXPECT(0xd2, gbc.readMem(0xe651));
        // CB D2 0341
        gbc.setState(0xc2a7, 0x11d6, 0x1720, 0x8fd6, 0xddf, 0xffbb, 0x0, 0x0);
        gbc.writeMem(0xc2a7, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x11d6, gbc.sp());
        EXPECT(0xc2a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2a7));
        EXPECT(0xd2, gbc.readMem(0xc2a8));
        // CB D2 0342
        gbc.setState(0xaf5f, 0xc49a, 0x4f0, 0x98f6, 0x58d2, 0xabb, 0x0, 0x1);
        gbc.writeMem(0xaf5f, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xc49a, gbc.sp());
        EXPECT(0xaf61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf5f));
        EXPECT(0xd2, gbc.readMem(0xaf60));
        // CB D2 0343
        gbc.setState(0x5f65, 0xca52, 0xcc40, 0x2240, 0xb8b6, 0xacf5, 0x0, 0x1);
        gbc.writeMem(0x5f65, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xca52, gbc.sp());
        EXPECT(0x5f67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0344
        gbc.setState(0xd820, 0x37a3, 0xca30, 0xb9fd, 0x4f47, 0xf41d, 0x1, 0x0);
        gbc.writeMem(0xd820, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x37a3, gbc.sp());
        EXPECT(0xd822, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd820));
        EXPECT(0xd2, gbc.readMem(0xd821));
        // CB D2 0345
        gbc.setState(0xdda3, 0xa8cc, 0x58d0, 0x2ee7, 0x8e70, 0xea57, 0x0, 0x1);
        gbc.writeMem(0xdda3, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xa8cc, gbc.sp());
        EXPECT(0xdda5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdda3));
        EXPECT(0xd2, gbc.readMem(0xdda4));
        // CB D2 0346
        gbc.setState(0x41dc, 0xfb9e, 0x5c00, 0xd356, 0xdc79, 0x3548, 0x0, 0x1);
        gbc.writeMem(0x41dc, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xfb9e, gbc.sp());
        EXPECT(0x41de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0347
        gbc.setState(0xd056, 0xe736, 0x3640, 0x376d, 0x8c7c, 0xc1c6, 0x0, 0x1);
        gbc.writeMem(0xd056, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xe736, gbc.sp());
        EXPECT(0xd058, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd056));
        EXPECT(0xd2, gbc.readMem(0xd057));
        // CB D2 0348
        gbc.setState(0x95af, 0xa112, 0x4f70, 0x3cd9, 0x6a34, 0x5632, 0x0, 0x1);
        gbc.writeMem(0x95af, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xa112, gbc.sp());
        EXPECT(0x95b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95af));
        EXPECT(0xd2, gbc.readMem(0x95b0));
        // CB D2 0349
        gbc.setState(0x913e, 0x3e93, 0x6400, 0x4293, 0xbad2, 0x17ed, 0x0, 0x0);
        gbc.writeMem(0x913e, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x3e93, gbc.sp());
        EXPECT(0x9140, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x913e));
        EXPECT(0xd2, gbc.readMem(0x913f));
        // CB D2 034A
        gbc.setState(0x1fd1, 0xf0c, 0x9d30, 0x57d5, 0x13e4, 0x5651, 0x0, 0x0);
        gbc.writeMem(0x1fd1, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xf0c, gbc.sp());
        EXPECT(0x1fd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 034B
        gbc.setState(0xe5a3, 0xae5a, 0x6d30, 0x5499, 0x3483, 0xa311, 0x0, 0x0);
        gbc.writeMem(0xe5a3, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xae5a, gbc.sp());
        EXPECT(0xe5a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5a3));
        EXPECT(0xd2, gbc.readMem(0xe5a4));
        // CB D2 034C
        gbc.setState(0x17cf, 0x2a4b, 0x1ff0, 0x5927, 0xf01c, 0x4c9, 0x1, 0x1);
        gbc.writeMem(0x17cf, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x2a4b, gbc.sp());
        EXPECT(0x17d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 034D
        gbc.setState(0x2205, 0x8368, 0x8d20, 0xe271, 0x5c03, 0x4a13, 0x1, 0x1);
        gbc.writeMem(0x2205, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x8368, gbc.sp());
        EXPECT(0x2207, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 034E
        gbc.setState(0xb81d, 0xa8e9, 0x6330, 0x964a, 0x35ea, 0xa1f8, 0x0, 0x0);
        gbc.writeMem(0xb81d, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xa8e9, gbc.sp());
        EXPECT(0xb81f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb81d));
        EXPECT(0xd2, gbc.readMem(0xb81e));
        // CB D2 034F
        gbc.setState(0x54fb, 0x17c4, 0xed40, 0x1b0, 0x4d9c, 0x400b, 0x1, 0x1);
        gbc.writeMem(0x54fb, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x17c4, gbc.sp());
        EXPECT(0x54fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0350
        gbc.setState(0xb034, 0xb84e, 0x14b0, 0x1dec, 0x46f3, 0xaa54, 0x1, 0x0);
        gbc.writeMem(0xb034, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xb84e, gbc.sp());
        EXPECT(0xb036, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb034));
        EXPECT(0xd2, gbc.readMem(0xb035));
        // CB D2 0351
        gbc.setState(0x6124, 0x9c7c, 0xcba0, 0x3fcd, 0x7fbd, 0x681, 0x1, 0x0);
        gbc.writeMem(0x6124, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x9c7c, gbc.sp());
        EXPECT(0x6126, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0352
        gbc.setState(0x60e9, 0x8f6f, 0xe450, 0x4a7a, 0x94ae, 0xae5e, 0x1, 0x1);
        gbc.writeMem(0x60e9, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x8f6f, gbc.sp());
        EXPECT(0x60eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0353
        gbc.setState(0xaa08, 0x6234, 0x3660, 0x3a0f, 0x9428, 0x57ee, 0x0, 0x0);
        gbc.writeMem(0xaa08, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x6234, gbc.sp());
        EXPECT(0xaa0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa08));
        EXPECT(0xd2, gbc.readMem(0xaa09));
        // CB D2 0354
        gbc.setState(0x9ca4, 0x7ce4, 0x5670, 0xc06d, 0xd199, 0x508d, 0x0, 0x1);
        gbc.writeMem(0x9ca4, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x7ce4, gbc.sp());
        EXPECT(0x9ca6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ca4));
        EXPECT(0xd2, gbc.readMem(0x9ca5));
        // CB D2 0355
        gbc.setState(0x176c, 0x80cb, 0x8a30, 0x164f, 0x645f, 0x4ecd, 0x1, 0x1);
        gbc.writeMem(0x176c, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x80cb, gbc.sp());
        EXPECT(0x176e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0356
        gbc.setState(0x8efb, 0xe277, 0x86c0, 0xa378, 0xb0db, 0x996c, 0x0, 0x0);
        gbc.writeMem(0x8efb, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xe277, gbc.sp());
        EXPECT(0x8efd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8efb));
        EXPECT(0xd2, gbc.readMem(0x8efc));
        // CB D2 0357
        gbc.setState(0x8568, 0xa318, 0xbd30, 0x8db9, 0x8ebb, 0x2d98, 0x1, 0x0);
        gbc.writeMem(0x8568, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xa318, gbc.sp());
        EXPECT(0x856a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8568));
        EXPECT(0xd2, gbc.readMem(0x8569));
        // CB D2 0358
        gbc.setState(0x6962, 0x8df3, 0x8030, 0x886, 0x30b0, 0x4454, 0x0, 0x1);
        gbc.writeMem(0x6962, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x8df3, gbc.sp());
        EXPECT(0x6964, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 035A
        gbc.setState(0x2121, 0x8851, 0xdae0, 0x277a, 0xa43b, 0xf5e8, 0x1, 0x0);
        gbc.writeMem(0x2121, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x8851, gbc.sp());
        EXPECT(0x2123, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 035B
        gbc.setState(0x96d8, 0x5a2c, 0x5610, 0x5189, 0xa4dc, 0x7e2f, 0x1, 0x0);
        gbc.writeMem(0x96d8, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x5a2c, gbc.sp());
        EXPECT(0x96da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96d8));
        EXPECT(0xd2, gbc.readMem(0x96d9));
        // CB D2 035C
        gbc.setState(0xea1c, 0xebc7, 0x8bf0, 0xa3d0, 0xb42b, 0x832f, 0x0, 0x1);
        gbc.writeMem(0xea1c, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xebc7, gbc.sp());
        EXPECT(0xea1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea1c));
        EXPECT(0xd2, gbc.readMem(0xea1d));
        // CB D2 035D
        gbc.setState(0x7ea3, 0x3fc, 0xe570, 0xc9d5, 0x7042, 0x8493, 0x0, 0x1);
        gbc.writeMem(0x7ea3, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x3fc, gbc.sp());
        EXPECT(0x7ea5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 035E
        gbc.setState(0x558a, 0x6289, 0xbee0, 0x874e, 0x8c12, 0x817a, 0x1, 0x1);
        gbc.writeMem(0x558a, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x6289, gbc.sp());
        EXPECT(0x558c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 035F
        gbc.setState(0xe0a9, 0x6f43, 0xb30, 0xe637, 0xaee5, 0x7f7e, 0x1, 0x1);
        gbc.writeMem(0xe0a9, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x6f43, gbc.sp());
        EXPECT(0xe0ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0a9));
        EXPECT(0xd2, gbc.readMem(0xe0aa));
        // CB D2 0360
        gbc.setState(0xd474, 0x9bf9, 0x6c00, 0x7e1a, 0x51e5, 0xef12, 0x0, 0x0);
        gbc.writeMem(0xd474, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x9bf9, gbc.sp());
        EXPECT(0xd476, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd474));
        EXPECT(0xd2, gbc.readMem(0xd475));
        // CB D2 0361
        gbc.setState(0xb1c3, 0x12a6, 0x46a0, 0x2797, 0x9f71, 0xecea, 0x0, 0x0);
        gbc.writeMem(0xb1c3, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x12a6, gbc.sp());
        EXPECT(0xb1c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1c3));
        EXPECT(0xd2, gbc.readMem(0xb1c4));
        // CB D2 0362
        gbc.setState(0x36db, 0x7ff0, 0x6400, 0xd44f, 0x74e8, 0x2625, 0x0, 0x0);
        gbc.writeMem(0x36db, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x7ff0, gbc.sp());
        EXPECT(0x36dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0363
        gbc.setState(0x62a2, 0x394d, 0xad60, 0x426c, 0xb504, 0xb922, 0x1, 0x0);
        gbc.writeMem(0x62a2, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x394d, gbc.sp());
        EXPECT(0x62a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0364
        gbc.setState(0x55a7, 0x76c6, 0xc760, 0x5b73, 0xe31c, 0x6d31, 0x1, 0x1);
        gbc.writeMem(0x55a7, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x76c6, gbc.sp());
        EXPECT(0x55a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0365
        gbc.setState(0xa0cc, 0x5476, 0xfa80, 0x5a4a, 0x901, 0xf0de, 0x1, 0x1);
        gbc.writeMem(0xa0cc, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x5476, gbc.sp());
        EXPECT(0xa0ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0cc));
        EXPECT(0xd2, gbc.readMem(0xa0cd));
        // CB D2 0366
        gbc.setState(0x709c, 0x28a8, 0xf050, 0x6a34, 0xa9aa, 0xa081, 0x1, 0x0);
        gbc.writeMem(0x709c, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x28a8, gbc.sp());
        EXPECT(0x709e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0367
        gbc.setState(0x830f, 0x43b, 0x56b0, 0x20c1, 0xcaac, 0xd305, 0x0, 0x0);
        gbc.writeMem(0x830f, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x43b, gbc.sp());
        EXPECT(0x8311, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x830f));
        EXPECT(0xd2, gbc.readMem(0x8310));
        // CB D2 0369
        gbc.setState(0x70b, 0xf09f, 0x4d60, 0x15c9, 0x7a49, 0xb0a4, 0x1, 0x0);
        gbc.writeMem(0x70b, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xf09f, gbc.sp());
        EXPECT(0x70d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 036A
        gbc.setState(0xb74c, 0x761a, 0x8160, 0x989a, 0x120c, 0xa967, 0x0, 0x0);
        gbc.writeMem(0xb74c, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x761a, gbc.sp());
        EXPECT(0xb74e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb74c));
        EXPECT(0xd2, gbc.readMem(0xb74d));
        // CB D2 036B
        gbc.setState(0x1853, 0x736c, 0x4230, 0xb328, 0x90d9, 0xe8af, 0x1, 0x0);
        gbc.writeMem(0x1853, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x736c, gbc.sp());
        EXPECT(0x1855, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 036C
        gbc.setState(0xd6dc, 0xed23, 0xadd0, 0xf306, 0x4718, 0x67ba, 0x1, 0x0);
        gbc.writeMem(0xd6dc, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xed23, gbc.sp());
        EXPECT(0xd6de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6dc));
        EXPECT(0xd2, gbc.readMem(0xd6dd));
        // CB D2 036D
        gbc.setState(0x569f, 0x1750, 0x4be0, 0x7c93, 0xe573, 0xc39e, 0x0, 0x0);
        gbc.writeMem(0x569f, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x1750, gbc.sp());
        EXPECT(0x56a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 036E
        gbc.setState(0xcbc3, 0xf8c1, 0xdf0, 0x943e, 0x425a, 0xb094, 0x0, 0x0);
        gbc.writeMem(0xcbc3, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xf8c1, gbc.sp());
        EXPECT(0xcbc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbc3));
        EXPECT(0xd2, gbc.readMem(0xcbc4));
        // CB D2 036F
        gbc.setState(0x2516, 0xc3d6, 0x5de0, 0x1efb, 0xf389, 0xce4b, 0x0, 0x0);
        gbc.writeMem(0x2516, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xc3d6, gbc.sp());
        EXPECT(0x2518, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0370
        gbc.setState(0xb634, 0xb0e7, 0x1e0, 0x6542, 0xdd8e, 0xef79, 0x1, 0x0);
        gbc.writeMem(0xb634, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xb0e7, gbc.sp());
        EXPECT(0xb636, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb634));
        EXPECT(0xd2, gbc.readMem(0xb635));
        // CB D2 0371
        gbc.setState(0x3023, 0x468d, 0x1770, 0x9140, 0x4afc, 0x7a8d, 0x0, 0x1);
        gbc.writeMem(0x3023, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x468d, gbc.sp());
        EXPECT(0x3025, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0372
        gbc.setState(0x2fac, 0x2050, 0x5340, 0xc4a0, 0x95b4, 0xd7a8, 0x0, 0x1);
        gbc.writeMem(0x2fac, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x2050, gbc.sp());
        EXPECT(0x2fae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0373
        gbc.setState(0x8b24, 0x3582, 0x9ff0, 0x6781, 0xdb4e, 0xcbaa, 0x0, 0x1);
        gbc.writeMem(0x8b24, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x3582, gbc.sp());
        EXPECT(0x8b26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b24));
        EXPECT(0xd2, gbc.readMem(0x8b25));
        // CB D2 0374
        gbc.setState(0xd5f4, 0x6061, 0xfd10, 0xe6bd, 0xfbe6, 0x1c5b, 0x1, 0x0);
        gbc.writeMem(0xd5f4, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x6061, gbc.sp());
        EXPECT(0xd5f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5f4));
        EXPECT(0xd2, gbc.readMem(0xd5f5));
        // CB D2 0375
        gbc.setState(0x301, 0x99d4, 0xc320, 0x1f24, 0xfe75, 0x9e23, 0x0, 0x1);
        gbc.writeMem(0x301, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x99d4, gbc.sp());
        EXPECT(0x303, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0376
        gbc.setState(0x783b, 0xca6, 0x76b0, 0x163c, 0x1992, 0x3c03, 0x0, 0x1);
        gbc.writeMem(0x783b, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xca6, gbc.sp());
        EXPECT(0x783d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0377
        gbc.setState(0x843e, 0x89f0, 0xee00, 0xf7b1, 0x9dc3, 0xaf31, 0x0, 0x1);
        gbc.writeMem(0x843e, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x89f0, gbc.sp());
        EXPECT(0x8440, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x843e));
        EXPECT(0xd2, gbc.readMem(0x843f));
        // CB D2 0378
        gbc.setState(0x9d85, 0x9dfb, 0xe470, 0x4dc2, 0x2d96, 0x2108, 0x0, 0x0);
        gbc.writeMem(0x9d85, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x9dfb, gbc.sp());
        EXPECT(0x9d87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d85));
        EXPECT(0xd2, gbc.readMem(0x9d86));
        // CB D2 0379
        gbc.setState(0x8cd1, 0x6144, 0x9690, 0xa167, 0x74ad, 0xc791, 0x1, 0x1);
        gbc.writeMem(0x8cd1, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x6144, gbc.sp());
        EXPECT(0x8cd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cd1));
        EXPECT(0xd2, gbc.readMem(0x8cd2));
        // CB D2 037A
        gbc.setState(0x542d, 0x8c5d, 0xfe90, 0x78ea, 0x37, 0xc110, 0x1, 0x1);
        gbc.writeMem(0x542d, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x8c5d, gbc.sp());
        EXPECT(0x542f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 037B
        gbc.setState(0x69b2, 0x90b5, 0xaf20, 0xb991, 0x26e7, 0x1eef, 0x1, 0x0);
        gbc.writeMem(0x69b2, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x90b5, gbc.sp());
        EXPECT(0x69b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 037C
        gbc.setState(0x18e4, 0xb5b7, 0xc860, 0x9aab, 0x4174, 0x9d86, 0x0, 0x1);
        gbc.writeMem(0x18e4, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xb5b7, gbc.sp());
        EXPECT(0x18e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 037D
        gbc.setState(0x8860, 0x173c, 0x6a50, 0xe6d1, 0x9010, 0xf5bd, 0x1, 0x1);
        gbc.writeMem(0x8860, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x173c, gbc.sp());
        EXPECT(0x8862, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8860));
        EXPECT(0xd2, gbc.readMem(0x8861));
        // CB D2 037E
        gbc.setState(0x9619, 0x2e17, 0x5350, 0xbddd, 0xe648, 0xac79, 0x1, 0x0);
        gbc.writeMem(0x9619, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x2e17, gbc.sp());
        EXPECT(0x961b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9619));
        EXPECT(0xd2, gbc.readMem(0x961a));
        // CB D2 037F
        gbc.setState(0x6733, 0x91dc, 0x51d0, 0xa1c2, 0x1e9, 0x1090, 0x0, 0x1);
        gbc.writeMem(0x6733, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x91dc, gbc.sp());
        EXPECT(0x6735, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0380
        gbc.setState(0x367e, 0x8b28, 0xab10, 0xa859, 0x1c7a, 0xad11, 0x1, 0x0);
        gbc.writeMem(0x367e, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x8b28, gbc.sp());
        EXPECT(0x3680, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0381
        gbc.setState(0x7210, 0x9c57, 0xb940, 0x28fb, 0xb05, 0x12bc, 0x0, 0x0);
        gbc.writeMem(0x7210, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x9c57, gbc.sp());
        EXPECT(0x7212, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0382
        gbc.setState(0x41f2, 0xd4eb, 0xc690, 0x37ae, 0x5230, 0xc660, 0x1, 0x0);
        gbc.writeMem(0x41f2, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xd4eb, gbc.sp());
        EXPECT(0x41f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0383
        gbc.setState(0x22f4, 0x8bc3, 0x2e70, 0xad09, 0x7a1, 0xcb4, 0x1, 0x0);
        gbc.writeMem(0x22f4, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x8bc3, gbc.sp());
        EXPECT(0x22f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0384
        gbc.setState(0x5b3, 0xeb66, 0xca00, 0xef72, 0x34ab, 0x11f7, 0x0, 0x1);
        gbc.writeMem(0x5b3, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xeb66, gbc.sp());
        EXPECT(0x5b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0385
        gbc.setState(0xaefd, 0x6923, 0xc400, 0xa809, 0x10b1, 0x358a, 0x1, 0x1);
        gbc.writeMem(0xaefd, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x6923, gbc.sp());
        EXPECT(0xaeff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaefd));
        EXPECT(0xd2, gbc.readMem(0xaefe));
        // CB D2 0386
        gbc.setState(0xe27d, 0xa85d, 0xfbd0, 0xbad6, 0xa318, 0x8ae, 0x0, 0x1);
        gbc.writeMem(0xe27d, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xa85d, gbc.sp());
        EXPECT(0xe27f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe27d));
        EXPECT(0xd2, gbc.readMem(0xe27e));
        // CB D2 0387
        gbc.setState(0x5407, 0xce3a, 0xd0, 0xd903, 0xff7, 0x10e, 0x1, 0x1);
        gbc.writeMem(0x5407, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xce3a, gbc.sp());
        EXPECT(0x5409, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0388
        gbc.setState(0x9a5b, 0xed22, 0xa370, 0xd8e2, 0xef4a, 0xdf69, 0x0, 0x0);
        gbc.writeMem(0x9a5b, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xed22, gbc.sp());
        EXPECT(0x9a5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a5b));
        EXPECT(0xd2, gbc.readMem(0x9a5c));
        // CB D2 0389
        gbc.setState(0x105f, 0x7100, 0xbbd0, 0xf28d, 0x7abd, 0x3eb7, 0x1, 0x1);
        gbc.writeMem(0x105f, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x7100, gbc.sp());
        EXPECT(0x1061, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 038A
        gbc.setState(0x966e, 0xa164, 0x1850, 0x3908, 0x31aa, 0x74c1, 0x0, 0x1);
        gbc.writeMem(0x966e, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xa164, gbc.sp());
        EXPECT(0x9670, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x966e));
        EXPECT(0xd2, gbc.readMem(0x966f));
        // CB D2 038B
        gbc.setState(0xcc07, 0xf243, 0x87b0, 0x6b3, 0x3a7b, 0x2320, 0x1, 0x1);
        gbc.writeMem(0xcc07, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xf243, gbc.sp());
        EXPECT(0xcc09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc07));
        EXPECT(0xd2, gbc.readMem(0xcc08));
        // CB D2 038C
        gbc.setState(0x11df, 0x9b37, 0x4720, 0x5b4e, 0x83ad, 0x15d7, 0x0, 0x1);
        gbc.writeMem(0x11df, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x9b37, gbc.sp());
        EXPECT(0x11e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 038D
        gbc.setState(0x8865, 0xcfc6, 0xed0, 0x3bd2, 0xfe3e, 0xd0dd, 0x1, 0x0);
        gbc.writeMem(0x8865, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xcfc6, gbc.sp());
        EXPECT(0x8867, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8865));
        EXPECT(0xd2, gbc.readMem(0x8866));
        // CB D2 038E
        gbc.setState(0xbb35, 0x38df, 0x5f00, 0xcc60, 0x431d, 0x680c, 0x1, 0x0);
        gbc.writeMem(0xbb35, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x38df, gbc.sp());
        EXPECT(0xbb37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb35));
        EXPECT(0xd2, gbc.readMem(0xbb36));
        // CB D2 038F
        gbc.setState(0xd386, 0xfa3, 0xfc00, 0xedb3, 0xaf0f, 0x7db5, 0x0, 0x0);
        gbc.writeMem(0xd386, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xfa3, gbc.sp());
        EXPECT(0xd388, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd386));
        EXPECT(0xd2, gbc.readMem(0xd387));
        // CB D2 0390
        gbc.setState(0x3e78, 0xfcad, 0xb2c0, 0xb89b, 0x1c82, 0x4c4a, 0x1, 0x1);
        gbc.writeMem(0x3e78, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xfcad, gbc.sp());
        EXPECT(0x3e7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0391
        gbc.setState(0x9a8f, 0x314a, 0xa1b0, 0xb06, 0xcee9, 0x5941, 0x0, 0x1);
        gbc.writeMem(0x9a8f, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x314a, gbc.sp());
        EXPECT(0x9a91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a8f));
        EXPECT(0xd2, gbc.readMem(0x9a90));
        // CB D2 0393
        gbc.setState(0x87e3, 0xf8, 0xeb80, 0x1703, 0xc5dc, 0xa8b3, 0x1, 0x0);
        gbc.writeMem(0x87e3, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xf8, gbc.sp());
        EXPECT(0x87e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87e3));
        EXPECT(0xd2, gbc.readMem(0x87e4));
        // CB D2 0394
        gbc.setState(0x323c, 0xda98, 0xc7c0, 0xaf85, 0x60dc, 0xa996, 0x0, 0x0);
        gbc.writeMem(0x323c, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xda98, gbc.sp());
        EXPECT(0x323e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0395
        gbc.setState(0x486, 0x1cde, 0xeef0, 0x7b8b, 0x5029, 0x65a1, 0x1, 0x1);
        gbc.writeMem(0x486, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x1cde, gbc.sp());
        EXPECT(0x488, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 0396
        gbc.setState(0xc59e, 0xc648, 0x3a20, 0xdc5d, 0x5d0d, 0x8faa, 0x1, 0x0);
        gbc.writeMem(0xc59e, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xc648, gbc.sp());
        EXPECT(0xc5a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc59e));
        EXPECT(0xd2, gbc.readMem(0xc59f));
        // CB D2 0397
        gbc.setState(0xdb06, 0xae2e, 0xe040, 0x14be, 0x95e7, 0x4be4, 0x0, 0x1);
        gbc.writeMem(0xdb06, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xae2e, gbc.sp());
        EXPECT(0xdb08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb06));
        EXPECT(0xd2, gbc.readMem(0xdb07));
        // CB D2 0398
        gbc.setState(0x2c77, 0x9d30, 0xc5e0, 0x3b41, 0xee86, 0xaa65, 0x0, 0x1);
        gbc.writeMem(0x2c77, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x9d30, gbc.sp());
        EXPECT(0x2c79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 0399
        gbc.setState(0xbc7b, 0x6023, 0xce90, 0x1b4b, 0xc0d9, 0x15f7, 0x1, 0x1);
        gbc.writeMem(0xbc7b, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x6023, gbc.sp());
        EXPECT(0xbc7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc7b));
        EXPECT(0xd2, gbc.readMem(0xbc7c));
        // CB D2 039A
        gbc.setState(0xa9c8, 0x570d, 0x9d20, 0xa473, 0xdfbd, 0xab1f, 0x0, 0x0);
        gbc.writeMem(0xa9c8, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x570d, gbc.sp());
        EXPECT(0xa9ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9c8));
        EXPECT(0xd2, gbc.readMem(0xa9c9));
        // CB D2 039B
        gbc.setState(0x682a, 0x5410, 0x9300, 0x7411, 0xe101, 0xa0d5, 0x0, 0x0);
        gbc.writeMem(0x682a, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x5410, gbc.sp());
        EXPECT(0x682c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 039C
        gbc.setState(0xbd03, 0x644f, 0xad30, 0x943e, 0x44f2, 0xf5b7, 0x1, 0x0);
        gbc.writeMem(0xbd03, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x644f, gbc.sp());
        EXPECT(0xbd05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd03));
        EXPECT(0xd2, gbc.readMem(0xbd04));
        // CB D2 039D
        gbc.setState(0x1cd5, 0xbc06, 0x4020, 0xef8d, 0xeb6, 0xdd1a, 0x1, 0x1);
        gbc.writeMem(0x1cd5, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xbc06, gbc.sp());
        EXPECT(0x1cd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 039E
        gbc.setState(0x7f7a, 0xfb48, 0x1870, 0xad21, 0x3918, 0x36bf, 0x1, 0x1);
        gbc.writeMem(0x7f7a, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xfb48, gbc.sp());
        EXPECT(0x7f7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 039F
        gbc.setState(0x3379, 0xe353, 0x680, 0x720c, 0x3205, 0xf1b6, 0x0, 0x0);
        gbc.writeMem(0x3379, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xe353, gbc.sp());
        EXPECT(0x337b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 03A0
        gbc.setState(0xa8d8, 0xb0c6, 0x7bb0, 0xdd89, 0xfb6b, 0x8ce1, 0x0, 0x0);
        gbc.writeMem(0xa8d8, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xb0c6, gbc.sp());
        EXPECT(0xa8da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8d8));
        EXPECT(0xd2, gbc.readMem(0xa8d9));
        // CB D2 03A1
        gbc.setState(0x84e5, 0x9783, 0x7440, 0x6fb, 0x8141, 0x99ef, 0x0, 0x0);
        gbc.writeMem(0x84e5, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x9783, gbc.sp());
        EXPECT(0x84e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84e5));
        EXPECT(0xd2, gbc.readMem(0x84e6));
        // CB D2 03A2
        gbc.setState(0xddf7, 0xfe02, 0xcd50, 0x1fc0, 0x9ed1, 0x129d, 0x1, 0x1);
        gbc.writeMem(0xddf7, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xfe02, gbc.sp());
        EXPECT(0xddf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddf7));
        EXPECT(0xd2, gbc.readMem(0xddf8));
        // CB D2 03A3
        gbc.setState(0x85da, 0xff0d, 0xd670, 0x6c8d, 0xa34a, 0xc7a1, 0x0, 0x1);
        gbc.writeMem(0x85da, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xff0d, gbc.sp());
        EXPECT(0x85dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85da));
        EXPECT(0xd2, gbc.readMem(0x85db));
        // CB D2 03A4
        gbc.setState(0x6e93, 0x4220, 0x2410, 0xb082, 0x65a4, 0xd3b5, 0x1, 0x1);
        gbc.writeMem(0x6e93, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x4220, gbc.sp());
        EXPECT(0x6e95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 03A5
        gbc.setState(0x84a4, 0x560f, 0x390, 0xcadc, 0x9459, 0xf306, 0x0, 0x1);
        gbc.writeMem(0x84a4, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x560f, gbc.sp());
        EXPECT(0x84a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84a4));
        EXPECT(0xd2, gbc.readMem(0x84a5));
        // CB D2 03A6
        gbc.setState(0x727f, 0x99f0, 0x92c0, 0x20ee, 0x106a, 0x8035, 0x0, 0x1);
        gbc.writeMem(0x727f, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x99f0, gbc.sp());
        EXPECT(0x7281, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 03A7
        gbc.setState(0x8e56, 0xc381, 0x6a60, 0x16e0, 0xf480, 0x7742, 0x1, 0x1);
        gbc.writeMem(0x8e56, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xc381, gbc.sp());
        EXPECT(0x8e58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e56));
        EXPECT(0xd2, gbc.readMem(0x8e57));
        // CB D2 03A8
        gbc.setState(0xb090, 0xba10, 0xb1e0, 0xd0bb, 0x33de, 0x2046, 0x0, 0x1);
        gbc.writeMem(0xb090, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xba10, gbc.sp());
        EXPECT(0xb092, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb090));
        EXPECT(0xd2, gbc.readMem(0xb091));
        // CB D2 03A9
        gbc.setState(0x1a8f, 0xd7d1, 0x4630, 0x36e4, 0x339d, 0x4a3, 0x1, 0x0);
        gbc.writeMem(0x1a8f, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xd7d1, gbc.sp());
        EXPECT(0x1a91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 03AA
        gbc.setState(0x926, 0x27af, 0x92c0, 0x8cfd, 0x96a1, 0xeb50, 0x1, 0x1);
        gbc.writeMem(0x926, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x27af, gbc.sp());
        EXPECT(0x928, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 03AB
        gbc.setState(0x10a9, 0xe28b, 0x5690, 0x6638, 0xe53f, 0xbf2, 0x0, 0x1);
        gbc.writeMem(0x10a9, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xe28b, gbc.sp());
        EXPECT(0x10ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 03AC
        gbc.setState(0x6967, 0xa6f9, 0xded0, 0x751c, 0xa212, 0x5ec8, 0x0, 0x1);
        gbc.writeMem(0x6967, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xa6f9, gbc.sp());
        EXPECT(0x6969, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 03AD
        gbc.setState(0x2fa0, 0x8670, 0xa520, 0xd889, 0x5977, 0xce66, 0x1, 0x0);
        gbc.writeMem(0x2fa0, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x8670, gbc.sp());
        EXPECT(0x2fa2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 03AE
        gbc.setState(0x80e5, 0x1b70, 0x8a20, 0x923, 0xc61d, 0x8a07, 0x1, 0x1);
        gbc.writeMem(0x80e5, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x1b70, gbc.sp());
        EXPECT(0x80e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80e5));
        EXPECT(0xd2, gbc.readMem(0x80e6));
        // CB D2 03AF
        gbc.setState(0x83dc, 0x39a3, 0xd4b0, 0xf009, 0x9b35, 0x6812, 0x1, 0x0);
        gbc.writeMem(0x83dc, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x39a3, gbc.sp());
        EXPECT(0x83de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83dc));
        EXPECT(0xd2, gbc.readMem(0x83dd));
        // CB D2 03B0
        gbc.setState(0xc560, 0x3ee7, 0x2960, 0x88b, 0x4a97, 0x9a13, 0x1, 0x0);
        gbc.writeMem(0xc560, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x3ee7, gbc.sp());
        EXPECT(0xc562, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc560));
        EXPECT(0xd2, gbc.readMem(0xc561));
        // CB D2 03B1
        gbc.setState(0x9f9f, 0x6965, 0x7ea0, 0xc16c, 0xc9bd, 0xfbf5, 0x1, 0x0);
        gbc.writeMem(0x9f9f, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x6965, gbc.sp());
        EXPECT(0x9fa1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f9f));
        EXPECT(0xd2, gbc.readMem(0x9fa0));
        // CB D2 03B2
        gbc.setState(0x7734, 0x3b98, 0xac60, 0x312c, 0x5207, 0x2052, 0x1, 0x0);
        gbc.writeMem(0x7734, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x3b98, gbc.sp());
        EXPECT(0x7736, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 03B3
        gbc.setState(0x1a8d, 0x7ab, 0x7660, 0xb7bf, 0x3acc, 0x47d1, 0x1, 0x1);
        gbc.writeMem(0x1a8d, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x7ab, gbc.sp());
        EXPECT(0x1a8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 03B4
        gbc.setState(0x489e, 0x1a01, 0x5db0, 0xc15a, 0xd087, 0x1e38, 0x1, 0x0);
        gbc.writeMem(0x489e, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x1a01, gbc.sp());
        EXPECT(0x48a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 03B5
        gbc.setState(0x9bfc, 0x1c02, 0x8ea0, 0x822d, 0x8231, 0xbb12, 0x0, 0x1);
        gbc.writeMem(0x9bfc, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x1c02, gbc.sp());
        EXPECT(0x9bfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bfc));
        EXPECT(0xd2, gbc.readMem(0x9bfd));
        // CB D2 03B6
        gbc.setState(0x2578, 0xf197, 0x4b70, 0x6ac5, 0xaaa4, 0x2dfb, 0x0, 0x1);
        gbc.writeMem(0x2578, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xf197, gbc.sp());
        EXPECT(0x257a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 03B7
        gbc.setState(0xc72f, 0xc079, 0x4130, 0x3bd9, 0xa6c0, 0x9f65, 0x0, 0x1);
        gbc.writeMem(0xc72f, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xc079, gbc.sp());
        EXPECT(0xc731, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc72f));
        EXPECT(0xd2, gbc.readMem(0xc730));
        // CB D2 03B8
        gbc.setState(0x423c, 0x69d6, 0xb180, 0xb715, 0xac01, 0xacf3, 0x0, 0x1);
        gbc.writeMem(0x423c, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x69d6, gbc.sp());
        EXPECT(0x423e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 03B9
        gbc.setState(0x6c35, 0xc25d, 0xf2a0, 0x1dd1, 0x2bce, 0x8386, 0x1, 0x0);
        gbc.writeMem(0x6c35, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xc25d, gbc.sp());
        EXPECT(0x6c37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 03BA
        gbc.setState(0xd9fc, 0xea58, 0xff10, 0x1cc2, 0x3fb5, 0x3e3d, 0x1, 0x0);
        gbc.writeMem(0xd9fc, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xea58, gbc.sp());
        EXPECT(0xd9fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9fc));
        EXPECT(0xd2, gbc.readMem(0xd9fd));
        // CB D2 03BB
        gbc.setState(0xc62, 0x7534, 0xac00, 0xe90d, 0xc61, 0xa4f5, 0x1, 0x1);
        gbc.writeMem(0xc62, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x7534, gbc.sp());
        EXPECT(0xc64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 03BC
        gbc.setState(0x6618, 0xd05a, 0x5b80, 0x7c66, 0xff47, 0xfe48, 0x0, 0x0);
        gbc.writeMem(0x6618, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xd05a, gbc.sp());
        EXPECT(0x661a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 03BD
        gbc.setState(0xb549, 0xf520, 0xbc40, 0xe03d, 0xfe88, 0x920b, 0x0, 0x0);
        gbc.writeMem(0xb549, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xf520, gbc.sp());
        EXPECT(0xb54b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb549));
        EXPECT(0xd2, gbc.readMem(0xb54a));
        // CB D2 03BE
        gbc.setState(0xb17e, 0xfac2, 0x36a0, 0xd76a, 0xa198, 0xc8e6, 0x0, 0x0);
        gbc.writeMem(0xb17e, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xfac2, gbc.sp());
        EXPECT(0xb180, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb17e));
        EXPECT(0xd2, gbc.readMem(0xb17f));
        // CB D2 03BF
        gbc.setState(0xbe9e, 0xdace, 0x92d0, 0x3cae, 0xfb63, 0xd0f2, 0x0, 0x1);
        gbc.writeMem(0xbe9e, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xdace, gbc.sp());
        EXPECT(0xbea0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe9e));
        EXPECT(0xd2, gbc.readMem(0xbe9f));
        // CB D2 03C0
        gbc.setState(0x1001, 0x18d8, 0xa440, 0xf9de, 0x932c, 0x1023, 0x1, 0x0);
        gbc.writeMem(0x1001, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x18d8, gbc.sp());
        EXPECT(0x1003, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 03C1
        gbc.setState(0x2ac4, 0xf237, 0xa650, 0xa505, 0xe800, 0xfce7, 0x0, 0x0);
        gbc.writeMem(0x2ac4, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xf237, gbc.sp());
        EXPECT(0x2ac6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 03C2
        gbc.setState(0xb528, 0x9b72, 0x53b0, 0x8c40, 0x3bc7, 0x5468, 0x0, 0x1);
        gbc.writeMem(0xb528, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x9b72, gbc.sp());
        EXPECT(0xb52a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb528));
        EXPECT(0xd2, gbc.readMem(0xb529));
        // CB D2 03C3
        gbc.setState(0x4e7d, 0xcc27, 0x6000, 0x2334, 0x3297, 0xaa9e, 0x1, 0x1);
        gbc.writeMem(0x4e7d, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xcc27, gbc.sp());
        EXPECT(0x4e7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 03C4
        gbc.setState(0x859a, 0x3dbc, 0xe7a0, 0x827b, 0xdf49, 0x8252, 0x1, 0x1);
        gbc.writeMem(0x859a, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x3dbc, gbc.sp());
        EXPECT(0x859c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x859a));
        EXPECT(0xd2, gbc.readMem(0x859b));
        // CB D2 03C5
        gbc.setState(0xabc9, 0x7b06, 0x1100, 0x558f, 0x3ee8, 0x499c, 0x1, 0x0);
        gbc.writeMem(0xabc9, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x7b06, gbc.sp());
        EXPECT(0xabcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabc9));
        EXPECT(0xd2, gbc.readMem(0xabca));
        // CB D2 03C6
        gbc.setState(0x76d6, 0x1c9b, 0x3f80, 0x6ebf, 0xdc1e, 0xd728, 0x0, 0x0);
        gbc.writeMem(0x76d6, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x1c9b, gbc.sp());
        EXPECT(0x76d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 03C7
        gbc.setState(0xb9c, 0xa9e5, 0x1a50, 0xac78, 0x6ed3, 0xff11, 0x0, 0x0);
        gbc.writeMem(0xb9c, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xa9e5, gbc.sp());
        EXPECT(0xb9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 03C8
        gbc.setState(0xb831, 0x1069, 0xfe50, 0xf8, 0x9d00, 0x5820, 0x1, 0x1);
        gbc.writeMem(0xb831, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x1069, gbc.sp());
        EXPECT(0xb833, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb831));
        EXPECT(0xd2, gbc.readMem(0xb832));
        // CB D2 03C9
        gbc.setState(0xeff4, 0xcead, 0x4d10, 0x8af, 0x9e3f, 0xfc02, 0x0, 0x1);
        gbc.writeMem(0xeff4, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xcead, gbc.sp());
        EXPECT(0xeff6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeff4));
        EXPECT(0xd2, gbc.readMem(0xeff5));
        // CB D2 03CA
        gbc.setState(0xc3ec, 0x849d, 0x49e0, 0x30fe, 0x9af, 0x6bdb, 0x0, 0x0);
        gbc.writeMem(0xc3ec, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x849d, gbc.sp());
        EXPECT(0xc3ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3ec));
        EXPECT(0xd2, gbc.readMem(0xc3ed));
        // CB D2 03CB
        gbc.setState(0x25f6, 0x15da, 0x1190, 0xd166, 0xfb1e, 0x40b6, 0x0, 0x0);
        gbc.writeMem(0x25f6, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x15da, gbc.sp());
        EXPECT(0x25f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 03CC
        gbc.setState(0x9a8b, 0x1987, 0xef90, 0xf9b4, 0x61c1, 0xd3c4, 0x0, 0x1);
        gbc.writeMem(0x9a8b, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x1987, gbc.sp());
        EXPECT(0x9a8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a8b));
        EXPECT(0xd2, gbc.readMem(0x9a8c));
        // CB D2 03CE
        gbc.setState(0xaa2c, 0x783d, 0xd050, 0x6521, 0xd677, 0xa5a, 0x1, 0x0);
        gbc.writeMem(0xaa2c, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x783d, gbc.sp());
        EXPECT(0xaa2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa2c));
        EXPECT(0xd2, gbc.readMem(0xaa2d));
        // CB D2 03CF
        gbc.setState(0x4bcd, 0x8a15, 0xbe20, 0xdf9, 0x373b, 0x2118, 0x1, 0x0);
        gbc.writeMem(0x4bcd, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x8a15, gbc.sp());
        EXPECT(0x4bcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 03D0
        gbc.setState(0x3aaf, 0x3f4b, 0xa720, 0xb1bd, 0x2f50, 0xd7ff, 0x1, 0x0);
        gbc.writeMem(0x3aaf, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x3f4b, gbc.sp());
        EXPECT(0x3ab1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 03D1
        gbc.setState(0xebc1, 0xca95, 0x2510, 0x4f46, 0x5448, 0x5fad, 0x0, 0x0);
        gbc.writeMem(0xebc1, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xca95, gbc.sp());
        EXPECT(0xebc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebc1));
        EXPECT(0xd2, gbc.readMem(0xebc2));
        // CB D2 03D2
        gbc.setState(0xb0ce, 0x7f0a, 0xe200, 0x51d9, 0xaa1d, 0x233, 0x1, 0x1);
        gbc.writeMem(0xb0ce, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x7f0a, gbc.sp());
        EXPECT(0xb0d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0ce));
        EXPECT(0xd2, gbc.readMem(0xb0cf));
        // CB D2 03D3
        gbc.setState(0x6092, 0x488, 0xd410, 0x8c73, 0xbede, 0xcd9f, 0x1, 0x0);
        gbc.writeMem(0x6092, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x488, gbc.sp());
        EXPECT(0x6094, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 03D4
        gbc.setState(0x8ca5, 0x9e2, 0xf9a0, 0xc0a9, 0xc6e3, 0xf1da, 0x0, 0x0);
        gbc.writeMem(0x8ca5, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x9e2, gbc.sp());
        EXPECT(0x8ca7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ca5));
        EXPECT(0xd2, gbc.readMem(0x8ca6));
        // CB D2 03D6
        gbc.setState(0x8332, 0xa68, 0xef40, 0x1f7c, 0x6026, 0x7624, 0x0, 0x1);
        gbc.writeMem(0x8332, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xa68, gbc.sp());
        EXPECT(0x8334, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8332));
        EXPECT(0xd2, gbc.readMem(0x8333));
        // CB D2 03D7
        gbc.setState(0xe356, 0x8115, 0x2e00, 0x346a, 0x42c0, 0x368a, 0x1, 0x0);
        gbc.writeMem(0xe356, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x8115, gbc.sp());
        EXPECT(0xe358, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe356));
        EXPECT(0xd2, gbc.readMem(0xe357));
        // CB D2 03D8
        gbc.setState(0x5866, 0xabb7, 0xdce0, 0x8cfc, 0x1a20, 0xefcb, 0x0, 0x0);
        gbc.writeMem(0x5866, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xabb7, gbc.sp());
        EXPECT(0x5868, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 03D9
        gbc.setState(0xcde8, 0xe777, 0xe2e0, 0xc1f9, 0xe74c, 0x1680, 0x1, 0x0);
        gbc.writeMem(0xcde8, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xe777, gbc.sp());
        EXPECT(0xcdea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcde8));
        EXPECT(0xd2, gbc.readMem(0xcde9));
        // CB D2 03DA
        gbc.setState(0x2d23, 0x9c1c, 0x8f20, 0xa516, 0x5d78, 0xf0dc, 0x0, 0x0);
        gbc.writeMem(0x2d23, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x9c1c, gbc.sp());
        EXPECT(0x2d25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 03DB
        gbc.setState(0x2ac7, 0xa25d, 0x9170, 0xd115, 0xe2dd, 0x74e8, 0x1, 0x1);
        gbc.writeMem(0x2ac7, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xa25d, gbc.sp());
        EXPECT(0x2ac9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 03DC
        gbc.setState(0xda8d, 0x6608, 0xfb80, 0x415b, 0xd686, 0x6555, 0x1, 0x0);
        gbc.writeMem(0xda8d, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x6608, gbc.sp());
        EXPECT(0xda8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda8d));
        EXPECT(0xd2, gbc.readMem(0xda8e));
        // CB D2 03DD
        gbc.setState(0xaee8, 0xefbc, 0x6a00, 0xcefe, 0xa3f5, 0x356d, 0x0, 0x1);
        gbc.writeMem(0xaee8, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xefbc, gbc.sp());
        EXPECT(0xaeea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaee8));
        EXPECT(0xd2, gbc.readMem(0xaee9));
        // CB D2 03DE
        gbc.setState(0xc0d5, 0x9db, 0x2ad0, 0x6d71, 0xb97f, 0x7c7a, 0x1, 0x0);
        gbc.writeMem(0xc0d5, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x9db, gbc.sp());
        EXPECT(0xc0d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0d5));
        EXPECT(0xd2, gbc.readMem(0xc0d6));
        // CB D2 03DF
        gbc.setState(0x4b6b, 0xd8fe, 0x29e0, 0x75d4, 0xbc05, 0x3069, 0x0, 0x0);
        gbc.writeMem(0x4b6b, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xd8fe, gbc.sp());
        EXPECT(0x4b6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 03E0
        gbc.setState(0x45c, 0xe3ef, 0xca60, 0x6665, 0x5ef5, 0xf471, 0x0, 0x1);
        gbc.writeMem(0x45c, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xe3ef, gbc.sp());
        EXPECT(0x45e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 03E1
        gbc.setState(0x7931, 0x41c7, 0x25a0, 0x3b4a, 0x6971, 0xbad4, 0x1, 0x0);
        gbc.writeMem(0x7931, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x41c7, gbc.sp());
        EXPECT(0x7933, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB D2 03E2
        gbc.setState(0xd32b, 0x1e0c, 0x24e0, 0xacb8, 0x5f10, 0x3e15, 0x0, 0x0);
        gbc.writeMem(0xd32b, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x1e0c, gbc.sp());
        EXPECT(0xd32d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd32b));
        EXPECT(0xd2, gbc.readMem(0xd32c));
        // CB D2 03E4
        gbc.setState(0x34c2, 0xa47a, 0x4bd0, 0x7673, 0xaf30, 0xc4a2, 0x0, 0x1);
        gbc.writeMem(0x34c2, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xa47a, gbc.sp());
        EXPECT(0x34c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 03E6
        gbc.setState(0x725d, 0xbe26, 0x1d0, 0xf615, 0x9e2b, 0x18b0, 0x1, 0x1);
        gbc.writeMem(0x725d, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xbe26, gbc.sp());
        EXPECT(0x725f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB D2 03E7
        gbc.setState(0x2a0b, 0x6936, 0xfd00, 0xa7bc, 0xeded, 0xbaff, 0x1, 0x0);
        gbc.writeMem(0x2a0b, { 0xcb, 0xd2 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x6936, gbc.sp());
        EXPECT(0x2a0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
    }
