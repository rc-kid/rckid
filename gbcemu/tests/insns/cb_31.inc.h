    TEST(gbcemu, opcode_cb_31) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 31 0000
        gbc.setState(0x2144, 0x5490, 0x1830, 0xd1bb, 0xc527, 0x145, 0x1, 0x1);
        gbc.writeMem(0x2144, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x5490, gbc.sp());
        EXPECT(0x2146, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0001
        gbc.setState(0xec81, 0xf88f, 0x29d0, 0xc4a8, 0xfd67, 0xc136, 0x0, 0x0);
        gbc.writeMem(0xec81, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xf88f, gbc.sp());
        EXPECT(0xec83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec81));
        EXPECT(0x31, gbc.readMem(0xec82));
        // CB 31 0002
        gbc.setState(0x3cbb, 0x7f92, 0x94b0, 0x8caa, 0xe832, 0x3af6, 0x1, 0x1);
        gbc.writeMem(0x3cbb, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x7f92, gbc.sp());
        EXPECT(0x3cbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0003
        gbc.setState(0x4937, 0xdd86, 0xe680, 0xc0b9, 0xdd94, 0x1adf, 0x1, 0x0);
        gbc.writeMem(0x4937, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xdd86, gbc.sp());
        EXPECT(0x4939, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0004
        gbc.setState(0xbd98, 0x123f, 0xb2b0, 0xb25f, 0x5eef, 0xae3f, 0x1, 0x1);
        gbc.writeMem(0xbd98, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x123f, gbc.sp());
        EXPECT(0xbd9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd98));
        EXPECT(0x31, gbc.readMem(0xbd99));
        // CB 31 0005
        gbc.setState(0x6936, 0x92d4, 0x2d50, 0x4e17, 0xab1e, 0x6cc0, 0x0, 0x0);
        gbc.writeMem(0x6936, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x92d4, gbc.sp());
        EXPECT(0x6938, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0006
        gbc.setState(0x908c, 0x868d, 0xfc90, 0xee6, 0x5221, 0xff44, 0x1, 0x1);
        gbc.writeMem(0x908c, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x868d, gbc.sp());
        EXPECT(0x908e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x908c));
        EXPECT(0x31, gbc.readMem(0x908d));
        // CB 31 0007
        gbc.setState(0xb406, 0x4d6d, 0x7d50, 0xb3d7, 0x9adf, 0x75c6, 0x0, 0x1);
        gbc.writeMem(0xb406, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x4d6d, gbc.sp());
        EXPECT(0xb408, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb406));
        EXPECT(0x31, gbc.readMem(0xb407));
        // CB 31 0008
        gbc.setState(0x6b5, 0x2888, 0xa010, 0xc446, 0x227, 0xd9a, 0x0, 0x0);
        gbc.writeMem(0x6b5, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x2888, gbc.sp());
        EXPECT(0x6b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0009
        gbc.setState(0x2bfa, 0x1485, 0x13d0, 0xecc7, 0xd178, 0x78e4, 0x0, 0x1);
        gbc.writeMem(0x2bfa, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x1485, gbc.sp());
        EXPECT(0x2bfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 000A
        gbc.setState(0x4d8a, 0x43f7, 0x4a40, 0xe443, 0x4394, 0xc6af, 0x1, 0x0);
        gbc.writeMem(0x4d8a, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x43f7, gbc.sp());
        EXPECT(0x4d8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 000B
        gbc.setState(0xcb7e, 0xb739, 0x15a0, 0x20a6, 0xe6a2, 0x85db, 0x0, 0x1);
        gbc.writeMem(0xcb7e, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xb739, gbc.sp());
        EXPECT(0xcb80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb7e));
        EXPECT(0x31, gbc.readMem(0xcb7f));
        // CB 31 000C
        gbc.setState(0xd37e, 0xae82, 0xd9a0, 0xc559, 0x8352, 0x8684, 0x1, 0x1);
        gbc.writeMem(0xd37e, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xae82, gbc.sp());
        EXPECT(0xd380, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd37e));
        EXPECT(0x31, gbc.readMem(0xd37f));
        // CB 31 000D
        gbc.setState(0x47b0, 0x1878, 0xf250, 0xc927, 0x778e, 0x3108, 0x0, 0x0);
        gbc.writeMem(0x47b0, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x1878, gbc.sp());
        EXPECT(0x47b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 000E
        gbc.setState(0xcf3, 0x3baf, 0x3a60, 0x9f10, 0xf82, 0x40fd, 0x0, 0x0);
        gbc.writeMem(0xcf3, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x3baf, gbc.sp());
        EXPECT(0xcf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 000F
        gbc.setState(0xd247, 0x3692, 0x51f0, 0x2c74, 0x9bb1, 0xbc9, 0x1, 0x0);
        gbc.writeMem(0xd247, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x3692, gbc.sp());
        EXPECT(0xd249, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd247));
        EXPECT(0x31, gbc.readMem(0xd248));
        // CB 31 0010
        gbc.setState(0x99ee, 0x86f9, 0xea70, 0x6462, 0x6b32, 0xce58, 0x0, 0x1);
        gbc.writeMem(0x99ee, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x86f9, gbc.sp());
        EXPECT(0x99f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99ee));
        EXPECT(0x31, gbc.readMem(0x99ef));
        // CB 31 0012
        gbc.setState(0x7dda, 0x990c, 0x5da0, 0x55b1, 0xa86d, 0xffbd, 0x0, 0x0);
        gbc.writeMem(0x7dda, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x990c, gbc.sp());
        EXPECT(0x7ddc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0014
        gbc.setState(0xd253, 0xec82, 0x3010, 0x740a, 0xd583, 0x3692, 0x1, 0x1);
        gbc.writeMem(0xd253, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xec82, gbc.sp());
        EXPECT(0xd255, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd253));
        EXPECT(0x31, gbc.readMem(0xd254));
        // CB 31 0015
        gbc.setState(0x2c81, 0x477, 0xa8e0, 0x23e0, 0xc702, 0x7f0d, 0x0, 0x0);
        gbc.writeMem(0x2c81, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x477, gbc.sp());
        EXPECT(0x2c83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0016
        gbc.setState(0x7e82, 0xcefd, 0x6240, 0x9d83, 0xcba0, 0x877c, 0x1, 0x1);
        gbc.writeMem(0x7e82, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xcefd, gbc.sp());
        EXPECT(0x7e84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0017
        gbc.setState(0xeaf0, 0x9554, 0xe110, 0x9e1c, 0xc074, 0x3ec7, 0x0, 0x1);
        gbc.writeMem(0xeaf0, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x9554, gbc.sp());
        EXPECT(0xeaf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeaf0));
        EXPECT(0x31, gbc.readMem(0xeaf1));
        // CB 31 0018
        gbc.setState(0x4080, 0x6fef, 0x4c50, 0xfbd3, 0x4ce2, 0x36e5, 0x0, 0x0);
        gbc.writeMem(0x4080, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x6fef, gbc.sp());
        EXPECT(0x4082, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0019
        gbc.setState(0xe68d, 0xff3, 0x68b0, 0x9bcd, 0xb896, 0xdd02, 0x0, 0x0);
        gbc.writeMem(0xe68d, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xff3, gbc.sp());
        EXPECT(0xe68f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe68d));
        EXPECT(0x31, gbc.readMem(0xe68e));
        // CB 31 001A
        gbc.setState(0xab2f, 0x68ff, 0x7590, 0x593f, 0xee00, 0x481e, 0x1, 0x0);
        gbc.writeMem(0xab2f, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x68ff, gbc.sp());
        EXPECT(0xab31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab2f));
        EXPECT(0x31, gbc.readMem(0xab30));
        // CB 31 001C
        gbc.setState(0x43c3, 0x7316, 0xce0, 0x1813, 0x70a1, 0x8f68, 0x0, 0x1);
        gbc.writeMem(0x43c3, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x7316, gbc.sp());
        EXPECT(0x43c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 001D
        gbc.setState(0xd8fb, 0xf176, 0x6d20, 0x36f9, 0xa7bf, 0xe791, 0x0, 0x0);
        gbc.writeMem(0xd8fb, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xf176, gbc.sp());
        EXPECT(0xd8fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8fb));
        EXPECT(0x31, gbc.readMem(0xd8fc));
        // CB 31 001E
        gbc.setState(0xa3c9, 0xd0db, 0x1e10, 0x2eb, 0x30d0, 0xf2b5, 0x0, 0x0);
        gbc.writeMem(0xa3c9, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xd0db, gbc.sp());
        EXPECT(0xa3cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3c9));
        EXPECT(0x31, gbc.readMem(0xa3ca));
        // CB 31 001F
        gbc.setState(0x4851, 0x2b36, 0x4000, 0xac99, 0xd2a7, 0x358c, 0x0, 0x0);
        gbc.writeMem(0x4851, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x2b36, gbc.sp());
        EXPECT(0x4853, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0020
        gbc.setState(0x947f, 0x10c4, 0x4f50, 0x137a, 0x5649, 0x94, 0x1, 0x0);
        gbc.writeMem(0x947f, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x10c4, gbc.sp());
        EXPECT(0x9481, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x947f));
        EXPECT(0x31, gbc.readMem(0x9480));
        // CB 31 0021
        gbc.setState(0x5217, 0x86e0, 0x3ee0, 0xe98f, 0x3e65, 0x79d6, 0x0, 0x0);
        gbc.writeMem(0x5217, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x86e0, gbc.sp());
        EXPECT(0x5219, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0022
        gbc.setState(0x6f4f, 0x84c, 0x6440, 0xef38, 0xcdb1, 0x7a0b, 0x0, 0x0);
        gbc.writeMem(0x6f4f, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x84c, gbc.sp());
        EXPECT(0x6f51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0024
        gbc.setState(0x5f6e, 0x52c6, 0xf310, 0x9d24, 0xeb5, 0x458e, 0x0, 0x0);
        gbc.writeMem(0x5f6e, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x52c6, gbc.sp());
        EXPECT(0x5f70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0025
        gbc.setState(0xa80, 0xdf6d, 0xf520, 0xb9ad, 0xef79, 0xb007, 0x1, 0x0);
        gbc.writeMem(0xa80, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xdf6d, gbc.sp());
        EXPECT(0xa82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0026
        gbc.setState(0x7d04, 0xacd8, 0x8cb0, 0xae83, 0x311b, 0x3412, 0x0, 0x1);
        gbc.writeMem(0x7d04, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xacd8, gbc.sp());
        EXPECT(0x7d06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0027
        gbc.setState(0x213, 0xdfde, 0x6850, 0x27f9, 0xbec9, 0x66bb, 0x1, 0x1);
        gbc.writeMem(0x213, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xdfde, gbc.sp());
        EXPECT(0x215, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0028
        gbc.setState(0x4cf8, 0x7758, 0xcc20, 0x5e86, 0xa48f, 0xc0a4, 0x1, 0x1);
        gbc.writeMem(0x4cf8, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x7758, gbc.sp());
        EXPECT(0x4cfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0029
        gbc.setState(0xe4cd, 0xd080, 0x2800, 0xc228, 0x7397, 0xdfae, 0x0, 0x0);
        gbc.writeMem(0xe4cd, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xd080, gbc.sp());
        EXPECT(0xe4cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4cd));
        EXPECT(0x31, gbc.readMem(0xe4ce));
        // CB 31 002A
        gbc.setState(0xe9d8, 0x8a38, 0x7ee0, 0x7f92, 0x7140, 0x220b, 0x1, 0x1);
        gbc.writeMem(0xe9d8, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x8a38, gbc.sp());
        EXPECT(0xe9da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9d8));
        EXPECT(0x31, gbc.readMem(0xe9d9));
        // CB 31 002B
        gbc.setState(0xe593, 0x8580, 0x34c0, 0x6688, 0x5e35, 0xadf9, 0x0, 0x0);
        gbc.writeMem(0xe593, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x8580, gbc.sp());
        EXPECT(0xe595, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe593));
        EXPECT(0x31, gbc.readMem(0xe594));
        // CB 31 002C
        gbc.setState(0x2a2c, 0x361e, 0x2000, 0xa368, 0xf6ee, 0xb9f5, 0x0, 0x1);
        gbc.writeMem(0x2a2c, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x361e, gbc.sp());
        EXPECT(0x2a2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 002D
        gbc.setState(0x7f22, 0xcd9d, 0x9d90, 0xe9a1, 0xb0a1, 0x63a3, 0x0, 0x0);
        gbc.writeMem(0x7f22, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xcd9d, gbc.sp());
        EXPECT(0x7f24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 002E
        gbc.setState(0xeeab, 0x6712, 0xd260, 0x9a, 0x7cc2, 0xefce, 0x0, 0x1);
        gbc.writeMem(0xeeab, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x6712, gbc.sp());
        EXPECT(0xeead, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeeab));
        EXPECT(0x31, gbc.readMem(0xeeac));
        // CB 31 002F
        gbc.setState(0x2b1b, 0x1659, 0xa1e0, 0xed17, 0xe92a, 0x3dc5, 0x1, 0x0);
        gbc.writeMem(0x2b1b, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x1659, gbc.sp());
        EXPECT(0x2b1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0032
        gbc.setState(0xa09f, 0x8e13, 0x16e0, 0x6157, 0x90e1, 0xde24, 0x0, 0x0);
        gbc.writeMem(0xa09f, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x8e13, gbc.sp());
        EXPECT(0xa0a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa09f));
        EXPECT(0x31, gbc.readMem(0xa0a0));
        // CB 31 0033
        gbc.setState(0xb508, 0xf01f, 0xf060, 0x7e6c, 0x6048, 0x8e2b, 0x1, 0x0);
        gbc.writeMem(0xb508, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xf01f, gbc.sp());
        EXPECT(0xb50a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb508));
        EXPECT(0x31, gbc.readMem(0xb509));
        // CB 31 0034
        gbc.setState(0x9554, 0xbb06, 0x15a0, 0x7a50, 0xf74c, 0x4e41, 0x1, 0x1);
        gbc.writeMem(0x9554, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xbb06, gbc.sp());
        EXPECT(0x9556, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9554));
        EXPECT(0x31, gbc.readMem(0x9555));
        // CB 31 0035
        gbc.setState(0x3436, 0xded7, 0xd300, 0x5789, 0x35e3, 0xd885, 0x0, 0x1);
        gbc.writeMem(0x3436, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xded7, gbc.sp());
        EXPECT(0x3438, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0036
        gbc.setState(0xd4e2, 0x2758, 0x8dd0, 0x36fa, 0x1a60, 0xf1e0, 0x0, 0x0);
        gbc.writeMem(0xd4e2, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x2758, gbc.sp());
        EXPECT(0xd4e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4e2));
        EXPECT(0x31, gbc.readMem(0xd4e3));
        // CB 31 0037
        gbc.setState(0xb418, 0xb01b, 0x2b30, 0x141d, 0x2ee9, 0x5fb5, 0x0, 0x1);
        gbc.writeMem(0xb418, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xb01b, gbc.sp());
        EXPECT(0xb41a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb418));
        EXPECT(0x31, gbc.readMem(0xb419));
        // CB 31 0038
        gbc.setState(0x4364, 0x5798, 0x6d70, 0xacd5, 0x8624, 0xa6e5, 0x0, 0x0);
        gbc.writeMem(0x4364, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x5798, gbc.sp());
        EXPECT(0x4366, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0039
        gbc.setState(0x483d, 0x1088, 0x9e00, 0x5f10, 0x1d0, 0xb859, 0x0, 0x1);
        gbc.writeMem(0x483d, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x1088, gbc.sp());
        EXPECT(0x483f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 003B
        gbc.setState(0x17e1, 0x8353, 0xfa70, 0x780c, 0x32a3, 0x6213, 0x0, 0x0);
        gbc.writeMem(0x17e1, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x8353, gbc.sp());
        EXPECT(0x17e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 003D
        gbc.setState(0x2a3e, 0x4fbc, 0x6240, 0xcb4, 0x31b0, 0x310a, 0x0, 0x1);
        gbc.writeMem(0x2a3e, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x4fbc, gbc.sp());
        EXPECT(0x2a40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 003E
        gbc.setState(0x4da7, 0x29c1, 0x79c0, 0x1223, 0xad6b, 0xb995, 0x1, 0x1);
        gbc.writeMem(0x4da7, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x29c1, gbc.sp());
        EXPECT(0x4da9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 003F
        gbc.setState(0x93e3, 0x9f58, 0xcfe0, 0x6180, 0xeea8, 0xe2e8, 0x0, 0x1);
        gbc.writeMem(0x93e3, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x9f58, gbc.sp());
        EXPECT(0x93e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93e3));
        EXPECT(0x31, gbc.readMem(0x93e4));
        // CB 31 0040
        gbc.setState(0x37e3, 0xcdbf, 0x64a0, 0x8361, 0xc6ba, 0xa837, 0x1, 0x0);
        gbc.writeMem(0x37e3, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xcdbf, gbc.sp());
        EXPECT(0x37e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0041
        gbc.setState(0xb087, 0x2dfb, 0x40a0, 0xeca0, 0xe5a2, 0xac94, 0x1, 0x0);
        gbc.writeMem(0xb087, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x2dfb, gbc.sp());
        EXPECT(0xb089, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb087));
        EXPECT(0x31, gbc.readMem(0xb088));
        // CB 31 0042
        gbc.setState(0x3b5, 0x7ab, 0x91d0, 0x912f, 0x1a5e, 0xb3fc, 0x0, 0x1);
        gbc.writeMem(0x3b5, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x7ab, gbc.sp());
        EXPECT(0x3b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0043
        gbc.setState(0x5558, 0x4b8c, 0x7f60, 0xf8f2, 0x9459, 0x2633, 0x0, 0x1);
        gbc.writeMem(0x5558, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x4b8c, gbc.sp());
        EXPECT(0x555a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0044
        gbc.setState(0x75e7, 0x78d0, 0x4fd0, 0xa735, 0xce41, 0x971e, 0x0, 0x1);
        gbc.writeMem(0x75e7, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x78d0, gbc.sp());
        EXPECT(0x75e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0046
        gbc.setState(0x27e9, 0xd0cc, 0x3fb0, 0xac88, 0xf5a1, 0x3adb, 0x0, 0x0);
        gbc.writeMem(0x27e9, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xd0cc, gbc.sp());
        EXPECT(0x27eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0047
        gbc.setState(0x55f, 0xbaf9, 0x6600, 0x4242, 0xc4b, 0xc00f, 0x0, 0x1);
        gbc.writeMem(0x55f, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xbaf9, gbc.sp());
        EXPECT(0x561, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0048
        gbc.setState(0xa3ad, 0x6aeb, 0x7aa0, 0xf2a8, 0x4ab1, 0x88bf, 0x0, 0x0);
        gbc.writeMem(0xa3ad, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x6aeb, gbc.sp());
        EXPECT(0xa3af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3ad));
        EXPECT(0x31, gbc.readMem(0xa3ae));
        // CB 31 004A
        gbc.setState(0x71a5, 0xec28, 0x1620, 0x4da5, 0xf8f3, 0x8ee9, 0x1, 0x1);
        gbc.writeMem(0x71a5, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xec28, gbc.sp());
        EXPECT(0x71a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 004B
        gbc.setState(0x8b29, 0x6506, 0x1af0, 0x1683, 0x5000, 0xc1ea, 0x0, 0x1);
        gbc.writeMem(0x8b29, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x6506, gbc.sp());
        EXPECT(0x8b2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b29));
        EXPECT(0x31, gbc.readMem(0x8b2a));
        // CB 31 004C
        gbc.setState(0x82d9, 0x1217, 0x7150, 0xa3ab, 0x17f6, 0x25b0, 0x0, 0x0);
        gbc.writeMem(0x82d9, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x1217, gbc.sp());
        EXPECT(0x82db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82d9));
        EXPECT(0x31, gbc.readMem(0x82da));
        // CB 31 004D
        gbc.setState(0xc2ea, 0x96e6, 0x4430, 0xc98f, 0xfde6, 0x4607, 0x1, 0x1);
        gbc.writeMem(0xc2ea, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x96e6, gbc.sp());
        EXPECT(0xc2ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2ea));
        EXPECT(0x31, gbc.readMem(0xc2eb));
        // CB 31 004E
        gbc.setState(0x8e24, 0x7c6f, 0xc0f0, 0x5478, 0x66bd, 0xfbfe, 0x0, 0x1);
        gbc.writeMem(0x8e24, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x7c6f, gbc.sp());
        EXPECT(0x8e26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e24));
        EXPECT(0x31, gbc.readMem(0x8e25));
        // CB 31 004F
        gbc.setState(0x5ca2, 0x5e9e, 0xfd50, 0x7c5e, 0x1ca0, 0x8fd8, 0x1, 0x0);
        gbc.writeMem(0x5ca2, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x5e9e, gbc.sp());
        EXPECT(0x5ca4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0050
        gbc.setState(0x1c34, 0x3dac, 0x6030, 0xa5b3, 0xc37b, 0x7bc3, 0x1, 0x0);
        gbc.writeMem(0x1c34, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x3dac, gbc.sp());
        EXPECT(0x1c36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0051
        gbc.setState(0x82cf, 0x6f38, 0x8340, 0x6554, 0xcb6f, 0x59ce, 0x0, 0x1);
        gbc.writeMem(0x82cf, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x6f38, gbc.sp());
        EXPECT(0x82d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82cf));
        EXPECT(0x31, gbc.readMem(0x82d0));
        // CB 31 0052
        gbc.setState(0x5db0, 0x60d0, 0x4e90, 0x1951, 0xabe4, 0x5df7, 0x1, 0x0);
        gbc.writeMem(0x5db0, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x60d0, gbc.sp());
        EXPECT(0x5db2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0053
        gbc.setState(0xbe6c, 0xf3e7, 0xd330, 0x7bd3, 0x1a09, 0x164f, 0x1, 0x0);
        gbc.writeMem(0xbe6c, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xf3e7, gbc.sp());
        EXPECT(0xbe6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe6c));
        EXPECT(0x31, gbc.readMem(0xbe6d));
        // CB 31 0054
        gbc.setState(0x2630, 0x9496, 0x5d70, 0x2eac, 0xaf87, 0x4f72, 0x1, 0x0);
        gbc.writeMem(0x2630, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x9496, gbc.sp());
        EXPECT(0x2632, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0057
        gbc.setState(0x512d, 0xa165, 0xfa90, 0x60ad, 0x33b7, 0x42f5, 0x0, 0x0);
        gbc.writeMem(0x512d, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xa165, gbc.sp());
        EXPECT(0x512f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0058
        gbc.setState(0x7182, 0x5b3a, 0xe620, 0x2a41, 0xde14, 0x1034, 0x1, 0x1);
        gbc.writeMem(0x7182, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x5b3a, gbc.sp());
        EXPECT(0x7184, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0059
        gbc.setState(0x1818, 0xd604, 0x51d0, 0x422d, 0x7830, 0x7e81, 0x0, 0x1);
        gbc.writeMem(0x1818, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xd604, gbc.sp());
        EXPECT(0x181a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 005A
        gbc.setState(0x15f5, 0x567f, 0x5610, 0x3153, 0x1918, 0xfc60, 0x0, 0x0);
        gbc.writeMem(0x15f5, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x567f, gbc.sp());
        EXPECT(0x15f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 005B
        gbc.setState(0xb82b, 0xbe53, 0xca80, 0xb489, 0xad34, 0xc53f, 0x0, 0x0);
        gbc.writeMem(0xb82b, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xbe53, gbc.sp());
        EXPECT(0xb82d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb82b));
        EXPECT(0x31, gbc.readMem(0xb82c));
        // CB 31 005C
        gbc.setState(0xbe2, 0x3fbe, 0x1190, 0xce78, 0x1f02, 0xf778, 0x0, 0x1);
        gbc.writeMem(0xbe2, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x3fbe, gbc.sp());
        EXPECT(0xbe4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 005D
        gbc.setState(0xee3, 0x7655, 0xe7a0, 0xec50, 0xc163, 0xec71, 0x0, 0x1);
        gbc.writeMem(0xee3, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x7655, gbc.sp());
        EXPECT(0xee5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 005E
        gbc.setState(0xd24c, 0x9de3, 0x7fd0, 0x27d5, 0xf787, 0x17bf, 0x1, 0x1);
        gbc.writeMem(0xd24c, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x9de3, gbc.sp());
        EXPECT(0xd24e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd24c));
        EXPECT(0x31, gbc.readMem(0xd24d));
        // CB 31 005F
        gbc.setState(0x4601, 0xe460, 0x20b0, 0xaf9d, 0xe9a6, 0x7dd1, 0x1, 0x0);
        gbc.writeMem(0x4601, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xe460, gbc.sp());
        EXPECT(0x4603, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0060
        gbc.setState(0x9f60, 0x97ea, 0x11e0, 0x6f87, 0x11e1, 0xc5c0, 0x1, 0x0);
        gbc.writeMem(0x9f60, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x97ea, gbc.sp());
        EXPECT(0x9f62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f60));
        EXPECT(0x31, gbc.readMem(0x9f61));
        // CB 31 0061
        gbc.setState(0x46c8, 0x196c, 0x5fc0, 0x5312, 0x49df, 0xb906, 0x0, 0x0);
        gbc.writeMem(0x46c8, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x196c, gbc.sp());
        EXPECT(0x46ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0062
        gbc.setState(0xd1bf, 0xdc55, 0x6820, 0x1eb1, 0x8cc6, 0x357, 0x0, 0x1);
        gbc.writeMem(0xd1bf, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xdc55, gbc.sp());
        EXPECT(0xd1c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1bf));
        EXPECT(0x31, gbc.readMem(0xd1c0));
        // CB 31 0063
        gbc.setState(0x1cdc, 0xd4ec, 0xbd90, 0x9480, 0xa2fa, 0x2f57, 0x1, 0x0);
        gbc.writeMem(0x1cdc, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xd4ec, gbc.sp());
        EXPECT(0x1cde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0064
        gbc.setState(0x610b, 0x39dd, 0x6840, 0xf8cc, 0x6594, 0x72f1, 0x0, 0x1);
        gbc.writeMem(0x610b, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x39dd, gbc.sp());
        EXPECT(0x610d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0066
        gbc.setState(0xee2d, 0xc3ae, 0xd3f0, 0xace4, 0x2a80, 0xb2ab, 0x0, 0x1);
        gbc.writeMem(0xee2d, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xc3ae, gbc.sp());
        EXPECT(0xee2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee2d));
        EXPECT(0x31, gbc.readMem(0xee2e));
        // CB 31 0067
        gbc.setState(0xe20d, 0xb65e, 0x2280, 0xe62b, 0x5a37, 0x616, 0x0, 0x1);
        gbc.writeMem(0xe20d, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xb65e, gbc.sp());
        EXPECT(0xe20f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe20d));
        EXPECT(0x31, gbc.readMem(0xe20e));
        // CB 31 0068
        gbc.setState(0xb079, 0x3334, 0x3040, 0x41cc, 0xed1c, 0xce8d, 0x1, 0x1);
        gbc.writeMem(0xb079, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x3334, gbc.sp());
        EXPECT(0xb07b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb079));
        EXPECT(0x31, gbc.readMem(0xb07a));
        // CB 31 0069
        gbc.setState(0x9982, 0xef76, 0xf70, 0x90bb, 0x1163, 0xb15, 0x1, 0x0);
        gbc.writeMem(0x9982, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xef76, gbc.sp());
        EXPECT(0x9984, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9982));
        EXPECT(0x31, gbc.readMem(0x9983));
        // CB 31 006A
        gbc.setState(0x8acc, 0xf60a, 0x3bc0, 0x3455, 0xbc97, 0x9413, 0x0, 0x0);
        gbc.writeMem(0x8acc, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xf60a, gbc.sp());
        EXPECT(0x8ace, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8acc));
        EXPECT(0x31, gbc.readMem(0x8acd));
        // CB 31 006B
        gbc.setState(0x8edd, 0x9f6a, 0xeff0, 0x17d, 0xb9b3, 0xa70, 0x0, 0x1);
        gbc.writeMem(0x8edd, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x9f6a, gbc.sp());
        EXPECT(0x8edf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8edd));
        EXPECT(0x31, gbc.readMem(0x8ede));
        // CB 31 006C
        gbc.setState(0x5836, 0x251b, 0x7f40, 0xbe2b, 0x4d9a, 0xa322, 0x0, 0x0);
        gbc.writeMem(0x5836, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x251b, gbc.sp());
        EXPECT(0x5838, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 006D
        gbc.setState(0x7561, 0xe784, 0xfb70, 0x9531, 0x6d54, 0xa37a, 0x0, 0x0);
        gbc.writeMem(0x7561, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xe784, gbc.sp());
        EXPECT(0x7563, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 006E
        gbc.setState(0x4b88, 0xf7ed, 0xa110, 0xbf1f, 0x6085, 0x3eca, 0x1, 0x1);
        gbc.writeMem(0x4b88, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xf7ed, gbc.sp());
        EXPECT(0x4b8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 006F
        gbc.setState(0x9b2c, 0x2d92, 0xe580, 0xf41a, 0xb1a2, 0xf6e0, 0x1, 0x1);
        gbc.writeMem(0x9b2c, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x2d92, gbc.sp());
        EXPECT(0x9b2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b2c));
        EXPECT(0x31, gbc.readMem(0x9b2d));
        // CB 31 0071
        gbc.setState(0x8aae, 0x3c16, 0xbdc0, 0x1c25, 0xb8e6, 0x9147, 0x1, 0x1);
        gbc.writeMem(0x8aae, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x3c16, gbc.sp());
        EXPECT(0x8ab0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8aae));
        EXPECT(0x31, gbc.readMem(0x8aaf));
        // CB 31 0072
        gbc.setState(0x6daa, 0xbe33, 0xdde0, 0x8788, 0x1ba8, 0x864b, 0x1, 0x0);
        gbc.writeMem(0x6daa, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xbe33, gbc.sp());
        EXPECT(0x6dac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0073
        gbc.setState(0x41, 0x70cc, 0x9330, 0x4a7a, 0x3012, 0x3130, 0x0, 0x0);
        gbc.writeMem(0x41, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x70cc, gbc.sp());
        EXPECT(0x43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0074
        gbc.setState(0x45f, 0x3352, 0xf130, 0x4d8, 0xd00, 0xcc7, 0x1, 0x1);
        gbc.writeMem(0x45f, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x3352, gbc.sp());
        EXPECT(0x461, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0075
        gbc.setState(0x53a4, 0x1184, 0x42f0, 0xf27b, 0x413d, 0x3313, 0x0, 0x1);
        gbc.writeMem(0x53a4, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x1184, gbc.sp());
        EXPECT(0x53a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0076
        gbc.setState(0x4171, 0xfb9f, 0x68a0, 0xf480, 0x3f4a, 0xa329, 0x0, 0x1);
        gbc.writeMem(0x4171, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xfb9f, gbc.sp());
        EXPECT(0x4173, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0077
        gbc.setState(0xc700, 0x77ed, 0xdc50, 0xa7ee, 0x59d, 0xe53, 0x1, 0x1);
        gbc.writeMem(0xc700, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x77ed, gbc.sp());
        EXPECT(0xc702, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc700));
        EXPECT(0x31, gbc.readMem(0xc701));
        // CB 31 0078
        gbc.setState(0xe921, 0xc1b0, 0x1310, 0xf36b, 0xb1, 0x5ca5, 0x1, 0x1);
        gbc.writeMem(0xe921, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xc1b0, gbc.sp());
        EXPECT(0xe923, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe921));
        EXPECT(0x31, gbc.readMem(0xe922));
        // CB 31 0079
        gbc.setState(0x5bac, 0x45ad, 0x9070, 0x41d5, 0x1ed0, 0x1a9, 0x0, 0x0);
        gbc.writeMem(0x5bac, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x45ad, gbc.sp());
        EXPECT(0x5bae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 007A
        gbc.setState(0x3c87, 0xc361, 0x80f0, 0x1e86, 0x3b2d, 0x9cca, 0x1, 0x0);
        gbc.writeMem(0x3c87, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xc361, gbc.sp());
        EXPECT(0x3c89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 007B
        gbc.setState(0x829b, 0xdf59, 0x5f10, 0xf5af, 0x7ce7, 0x4c78, 0x1, 0x0);
        gbc.writeMem(0x829b, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xdf59, gbc.sp());
        EXPECT(0x829d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x829b));
        EXPECT(0x31, gbc.readMem(0x829c));
        // CB 31 007C
        gbc.setState(0x97bd, 0x6f58, 0xb3c0, 0xbe37, 0xa031, 0x42a6, 0x0, 0x1);
        gbc.writeMem(0x97bd, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x6f58, gbc.sp());
        EXPECT(0x97bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97bd));
        EXPECT(0x31, gbc.readMem(0x97be));
        // CB 31 007D
        gbc.setState(0xb636, 0x7720, 0xbce0, 0x233a, 0xa217, 0xa60d, 0x0, 0x0);
        gbc.writeMem(0xb636, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x7720, gbc.sp());
        EXPECT(0xb638, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb636));
        EXPECT(0x31, gbc.readMem(0xb637));
        // CB 31 007E
        gbc.setState(0x975d, 0xdbee, 0xa440, 0x9a14, 0xe8ac, 0xd9aa, 0x1, 0x0);
        gbc.writeMem(0x975d, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xdbee, gbc.sp());
        EXPECT(0x975f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x975d));
        EXPECT(0x31, gbc.readMem(0x975e));
        // CB 31 007F
        gbc.setState(0x6195, 0xc0cc, 0xecb0, 0x2d7a, 0xb502, 0xf851, 0x0, 0x1);
        gbc.writeMem(0x6195, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xc0cc, gbc.sp());
        EXPECT(0x6197, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0080
        gbc.setState(0x395f, 0x423c, 0xe210, 0x5341, 0xc051, 0xe635, 0x0, 0x0);
        gbc.writeMem(0x395f, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x423c, gbc.sp());
        EXPECT(0x3961, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0082
        gbc.setState(0x88, 0x3f8e, 0xe570, 0xb44, 0xfc78, 0x6857, 0x1, 0x0);
        gbc.writeMem(0x88, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x3f8e, gbc.sp());
        EXPECT(0x8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0083
        gbc.setState(0x2669, 0xf6c0, 0x6c80, 0x1e5c, 0x8eb5, 0xf751, 0x0, 0x0);
        gbc.writeMem(0x2669, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xf6c0, gbc.sp());
        EXPECT(0x266b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0084
        gbc.setState(0xb1a2, 0xec31, 0xa7c0, 0x3ce5, 0xed42, 0xd603, 0x0, 0x1);
        gbc.writeMem(0xb1a2, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xec31, gbc.sp());
        EXPECT(0xb1a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1a2));
        EXPECT(0x31, gbc.readMem(0xb1a3));
        // CB 31 0085
        gbc.setState(0xbdb9, 0x4894, 0xe830, 0x4eab, 0xbde4, 0x3b01, 0x0, 0x1);
        gbc.writeMem(0xbdb9, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x4894, gbc.sp());
        EXPECT(0xbdbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdb9));
        EXPECT(0x31, gbc.readMem(0xbdba));
        // CB 31 0086
        gbc.setState(0x9e26, 0xa7ed, 0x1f0, 0x2d8e, 0x7af5, 0x134c, 0x1, 0x0);
        gbc.writeMem(0x9e26, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xa7ed, gbc.sp());
        EXPECT(0x9e28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e26));
        EXPECT(0x31, gbc.readMem(0x9e27));
        // CB 31 0087
        gbc.setState(0x6d08, 0xf58a, 0x10, 0x4ce8, 0x5a7a, 0xbc95, 0x0, 0x0);
        gbc.writeMem(0x6d08, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xf58a, gbc.sp());
        EXPECT(0x6d0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0088
        gbc.setState(0x9cd0, 0xeb66, 0x1c40, 0x5735, 0x9b44, 0xbb77, 0x0, 0x1);
        gbc.writeMem(0x9cd0, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xeb66, gbc.sp());
        EXPECT(0x9cd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cd0));
        EXPECT(0x31, gbc.readMem(0x9cd1));
        // CB 31 0089
        gbc.setState(0xa200, 0x12e5, 0xe480, 0xde4e, 0xc0d0, 0xd8a3, 0x1, 0x0);
        gbc.writeMem(0xa200, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x12e5, gbc.sp());
        EXPECT(0xa202, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa200));
        EXPECT(0x31, gbc.readMem(0xa201));
        // CB 31 008A
        gbc.setState(0x6b4c, 0x2dd1, 0x5e10, 0xd9a2, 0x13e7, 0xf031, 0x0, 0x1);
        gbc.writeMem(0x6b4c, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x2dd1, gbc.sp());
        EXPECT(0x6b4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 008B
        gbc.setState(0x61a, 0xb504, 0xd2c0, 0x72a5, 0x784d, 0x43ca, 0x0, 0x1);
        gbc.writeMem(0x61a, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xb504, gbc.sp());
        EXPECT(0x61c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 008C
        gbc.setState(0x76ad, 0xf972, 0x9b30, 0x63a0, 0xd9f5, 0x9547, 0x0, 0x1);
        gbc.writeMem(0x76ad, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xf972, gbc.sp());
        EXPECT(0x76af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 008D
        gbc.setState(0x78be, 0x2656, 0x4550, 0xf8d7, 0xdb7e, 0x60e8, 0x1, 0x0);
        gbc.writeMem(0x78be, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x2656, gbc.sp());
        EXPECT(0x78c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 008F
        gbc.setState(0xe30f, 0x4d82, 0xb3b0, 0xc967, 0x1b5f, 0xc202, 0x1, 0x0);
        gbc.writeMem(0xe30f, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x4d82, gbc.sp());
        EXPECT(0xe311, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe30f));
        EXPECT(0x31, gbc.readMem(0xe310));
        // CB 31 0090
        gbc.setState(0x13c8, 0x281e, 0xecb0, 0x4393, 0x9bf4, 0xb4e0, 0x1, 0x0);
        gbc.writeMem(0x13c8, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x281e, gbc.sp());
        EXPECT(0x13ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0091
        gbc.setState(0xb070, 0x35c8, 0xf900, 0x5fe, 0x73df, 0xd2de, 0x1, 0x1);
        gbc.writeMem(0xb070, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x35c8, gbc.sp());
        EXPECT(0xb072, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb070));
        EXPECT(0x31, gbc.readMem(0xb071));
        // CB 31 0092
        gbc.setState(0xb84d, 0x79ae, 0xd860, 0xd92a, 0x1f95, 0xcdf8, 0x0, 0x0);
        gbc.writeMem(0xb84d, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x79ae, gbc.sp());
        EXPECT(0xb84f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb84d));
        EXPECT(0x31, gbc.readMem(0xb84e));
        // CB 31 0093
        gbc.setState(0x3fcb, 0x1c46, 0x45c0, 0x8560, 0x8ffa, 0xe767, 0x1, 0x1);
        gbc.writeMem(0x3fcb, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x1c46, gbc.sp());
        EXPECT(0x3fcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0094
        gbc.setState(0x5e69, 0xd60c, 0x9500, 0x6a8f, 0x9d9d, 0x2834, 0x1, 0x0);
        gbc.writeMem(0x5e69, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xd60c, gbc.sp());
        EXPECT(0x5e6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0095
        gbc.setState(0x459d, 0xf2a4, 0x5860, 0xabfc, 0xb70f, 0x6da2, 0x1, 0x1);
        gbc.writeMem(0x459d, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xf2a4, gbc.sp());
        EXPECT(0x459f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0096
        gbc.setState(0x984d, 0xfaa6, 0xaf20, 0xf58b, 0x1a3f, 0x937b, 0x0, 0x0);
        gbc.writeMem(0x984d, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xfaa6, gbc.sp());
        EXPECT(0x984f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x984d));
        EXPECT(0x31, gbc.readMem(0x984e));
        // CB 31 0097
        gbc.setState(0xc2bf, 0x8b8, 0x87e0, 0x32e2, 0x8809, 0x9869, 0x1, 0x0);
        gbc.writeMem(0xc2bf, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x8b8, gbc.sp());
        EXPECT(0xc2c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2bf));
        EXPECT(0x31, gbc.readMem(0xc2c0));
        // CB 31 0098
        gbc.setState(0x334f, 0xae16, 0xcc30, 0xf434, 0x9102, 0xb8d8, 0x0, 0x0);
        gbc.writeMem(0x334f, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xae16, gbc.sp());
        EXPECT(0x3351, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0099
        gbc.setState(0xe9b7, 0xdf50, 0xbe30, 0x18e5, 0x1326, 0x4ec3, 0x0, 0x1);
        gbc.writeMem(0xe9b7, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xdf50, gbc.sp());
        EXPECT(0xe9b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9b7));
        EXPECT(0x31, gbc.readMem(0xe9b8));
        // CB 31 009A
        gbc.setState(0xaba, 0x5d38, 0x5470, 0xdd91, 0xbb2a, 0xda7, 0x1, 0x1);
        gbc.writeMem(0xaba, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x5d38, gbc.sp());
        EXPECT(0xabc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 009B
        gbc.setState(0x282, 0x5be1, 0xeda0, 0x575b, 0xb572, 0xaad4, 0x1, 0x1);
        gbc.writeMem(0x282, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x5be1, gbc.sp());
        EXPECT(0x284, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 009D
        gbc.setState(0x61fe, 0x12e, 0x9fc0, 0x7acf, 0x7b6f, 0x6fab, 0x0, 0x1);
        gbc.writeMem(0x61fe, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x12e, gbc.sp());
        EXPECT(0x6200, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 009E
        gbc.setState(0xec79, 0x75c8, 0xdc10, 0xac73, 0xe334, 0x775f, 0x0, 0x0);
        gbc.writeMem(0xec79, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x75c8, gbc.sp());
        EXPECT(0xec7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec79));
        EXPECT(0x31, gbc.readMem(0xec7a));
        // CB 31 009F
        gbc.setState(0xb369, 0x642f, 0x87c0, 0xfeb6, 0xef2b, 0x35d, 0x1, 0x0);
        gbc.writeMem(0xb369, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x642f, gbc.sp());
        EXPECT(0xb36b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb369));
        EXPECT(0x31, gbc.readMem(0xb36a));
        // CB 31 00A0
        gbc.setState(0xe0ec, 0x4248, 0xbab0, 0xe335, 0x14f9, 0x9fad, 0x0, 0x0);
        gbc.writeMem(0xe0ec, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x4248, gbc.sp());
        EXPECT(0xe0ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0ec));
        EXPECT(0x31, gbc.readMem(0xe0ed));
        // CB 31 00A1
        gbc.setState(0x206d, 0x85bd, 0x4600, 0x8e15, 0x69e1, 0xbc61, 0x0, 0x1);
        gbc.writeMem(0x206d, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x85bd, gbc.sp());
        EXPECT(0x206f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 00A2
        gbc.setState(0xa128, 0xa58c, 0xb3d0, 0x7ea4, 0x66ab, 0x2a73, 0x1, 0x1);
        gbc.writeMem(0xa128, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xa58c, gbc.sp());
        EXPECT(0xa12a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa128));
        EXPECT(0x31, gbc.readMem(0xa129));
        // CB 31 00A3
        gbc.setState(0x3854, 0xd33b, 0xe7a0, 0x67ac, 0xb5dd, 0x457a, 0x1, 0x0);
        gbc.writeMem(0x3854, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xd33b, gbc.sp());
        EXPECT(0x3856, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 00A4
        gbc.setState(0xaf68, 0x9a16, 0xf790, 0xd35d, 0xabde, 0x85e, 0x0, 0x0);
        gbc.writeMem(0xaf68, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x9a16, gbc.sp());
        EXPECT(0xaf6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf68));
        EXPECT(0x31, gbc.readMem(0xaf69));
        // CB 31 00A5
        gbc.setState(0xc963, 0x6e42, 0x4a70, 0xb3c3, 0xf5f, 0x7b39, 0x1, 0x1);
        gbc.writeMem(0xc963, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x6e42, gbc.sp());
        EXPECT(0xc965, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc963));
        EXPECT(0x31, gbc.readMem(0xc964));
        // CB 31 00A6
        gbc.setState(0xc603, 0x7953, 0x7db0, 0x8bf4, 0x7762, 0xbb7d, 0x0, 0x1);
        gbc.writeMem(0xc603, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x7953, gbc.sp());
        EXPECT(0xc605, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc603));
        EXPECT(0x31, gbc.readMem(0xc604));
        // CB 31 00A7
        gbc.setState(0xcd69, 0xce51, 0xb150, 0x6d6c, 0x9c1b, 0xba32, 0x1, 0x0);
        gbc.writeMem(0xcd69, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xce51, gbc.sp());
        EXPECT(0xcd6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd69));
        EXPECT(0x31, gbc.readMem(0xcd6a));
        // CB 31 00A8
        gbc.setState(0x7d9b, 0x650d, 0x8160, 0xdf4a, 0xf87e, 0x3583, 0x1, 0x1);
        gbc.writeMem(0x7d9b, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x650d, gbc.sp());
        EXPECT(0x7d9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 00A9
        gbc.setState(0xcedc, 0x263, 0x3760, 0x7745, 0xd91f, 0x5868, 0x0, 0x0);
        gbc.writeMem(0xcedc, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x263, gbc.sp());
        EXPECT(0xcede, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcedc));
        EXPECT(0x31, gbc.readMem(0xcedd));
        // CB 31 00AA
        gbc.setState(0xdd49, 0xace3, 0xa3c0, 0xff16, 0xb6c6, 0x7b59, 0x1, 0x1);
        gbc.writeMem(0xdd49, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xace3, gbc.sp());
        EXPECT(0xdd4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd49));
        EXPECT(0x31, gbc.readMem(0xdd4a));
        // CB 31 00AB
        gbc.setState(0x4ffe, 0x2583, 0xc9e0, 0xa364, 0x5a40, 0x4496, 0x1, 0x0);
        gbc.writeMem(0x4ffe, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x2583, gbc.sp());
        EXPECT(0x5000, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 00AC
        gbc.setState(0xc89b, 0xca14, 0x7c80, 0x1c4f, 0x74d2, 0x3365, 0x1, 0x0);
        gbc.writeMem(0xc89b, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xca14, gbc.sp());
        EXPECT(0xc89d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc89b));
        EXPECT(0x31, gbc.readMem(0xc89c));
        // CB 31 00AD
        gbc.setState(0xb563, 0x5f18, 0xc2a0, 0xb9d5, 0x9040, 0xd0d6, 0x1, 0x0);
        gbc.writeMem(0xb563, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x5f18, gbc.sp());
        EXPECT(0xb565, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb563));
        EXPECT(0x31, gbc.readMem(0xb564));
        // CB 31 00AE
        gbc.setState(0x56dd, 0x269c, 0x7950, 0x9b6a, 0x7960, 0x453b, 0x1, 0x0);
        gbc.writeMem(0x56dd, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x269c, gbc.sp());
        EXPECT(0x56df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 00AF
        gbc.setState(0xb0c0, 0xb352, 0xa330, 0x68ba, 0x31a2, 0xf624, 0x0, 0x0);
        gbc.writeMem(0xb0c0, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xb352, gbc.sp());
        EXPECT(0xb0c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0c0));
        EXPECT(0x31, gbc.readMem(0xb0c1));
        // CB 31 00B0
        gbc.setState(0xc11f, 0x72da, 0x37b0, 0x41f, 0xc16c, 0x71b2, 0x0, 0x1);
        gbc.writeMem(0xc11f, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x72da, gbc.sp());
        EXPECT(0xc121, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc11f));
        EXPECT(0x31, gbc.readMem(0xc120));
        // CB 31 00B1
        gbc.setState(0x9cca, 0x9b8c, 0xf730, 0x88e, 0xd577, 0x2874, 0x0, 0x0);
        gbc.writeMem(0x9cca, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x9b8c, gbc.sp());
        EXPECT(0x9ccc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cca));
        EXPECT(0x31, gbc.readMem(0x9ccb));
        // CB 31 00B2
        gbc.setState(0xaf9c, 0x9f5e, 0xd6f0, 0xae49, 0xeabf, 0x23d8, 0x1, 0x1);
        gbc.writeMem(0xaf9c, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x9f5e, gbc.sp());
        EXPECT(0xaf9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf9c));
        EXPECT(0x31, gbc.readMem(0xaf9d));
        // CB 31 00B3
        gbc.setState(0x7d0b, 0x939e, 0xff10, 0xdd9f, 0x13a1, 0x83c, 0x0, 0x0);
        gbc.writeMem(0x7d0b, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x939e, gbc.sp());
        EXPECT(0x7d0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 00B4
        gbc.setState(0x767a, 0x987c, 0x2830, 0xd996, 0xbd0a, 0x5cce, 0x0, 0x1);
        gbc.writeMem(0x767a, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x987c, gbc.sp());
        EXPECT(0x767c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 00B5
        gbc.setState(0xb1c4, 0x5aaa, 0xd5c0, 0x5ed5, 0x4ef7, 0xd187, 0x0, 0x1);
        gbc.writeMem(0xb1c4, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x5aaa, gbc.sp());
        EXPECT(0xb1c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1c4));
        EXPECT(0x31, gbc.readMem(0xb1c5));
        // CB 31 00B6
        gbc.setState(0xabd2, 0x7b22, 0xae00, 0x40e6, 0xc076, 0x4ab9, 0x0, 0x0);
        gbc.writeMem(0xabd2, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x7b22, gbc.sp());
        EXPECT(0xabd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabd2));
        EXPECT(0x31, gbc.readMem(0xabd3));
        // CB 31 00B7
        gbc.setState(0x3731, 0xdeb4, 0x2820, 0x4c13, 0xc472, 0x52ee, 0x0, 0x0);
        gbc.writeMem(0x3731, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xdeb4, gbc.sp());
        EXPECT(0x3733, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 00B8
        gbc.setState(0x5560, 0xce6e, 0xccf0, 0xc5b1, 0x9304, 0x4c0f, 0x0, 0x0);
        gbc.writeMem(0x5560, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xce6e, gbc.sp());
        EXPECT(0x5562, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 00B9
        gbc.setState(0x9f73, 0x6151, 0xe170, 0x8d49, 0x8e43, 0x701a, 0x0, 0x0);
        gbc.writeMem(0x9f73, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x6151, gbc.sp());
        EXPECT(0x9f75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f73));
        EXPECT(0x31, gbc.readMem(0x9f74));
        // CB 31 00BA
        gbc.setState(0x3e9b, 0x7ae6, 0x3460, 0x3b14, 0x201d, 0x3014, 0x1, 0x0);
        gbc.writeMem(0x3e9b, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x7ae6, gbc.sp());
        EXPECT(0x3e9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 00BB
        gbc.setState(0x9b96, 0xc078, 0x8730, 0xf612, 0xe54c, 0x6149, 0x0, 0x0);
        gbc.writeMem(0x9b96, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xc078, gbc.sp());
        EXPECT(0x9b98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b96));
        EXPECT(0x31, gbc.readMem(0x9b97));
        // CB 31 00BC
        gbc.setState(0xbff7, 0xa295, 0x2e0, 0x91ed, 0x57d6, 0x5673, 0x0, 0x1);
        gbc.writeMem(0xbff7, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xa295, gbc.sp());
        EXPECT(0xbff9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbff7));
        EXPECT(0x31, gbc.readMem(0xbff8));
        // CB 31 00BD
        gbc.setState(0x3f08, 0x20cd, 0x1720, 0xae6e, 0x829e, 0x6ebb, 0x0, 0x1);
        gbc.writeMem(0x3f08, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x20cd, gbc.sp());
        EXPECT(0x3f0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 00BE
        gbc.setState(0xd171, 0x443c, 0x1330, 0x705c, 0xc943, 0x9b11, 0x0, 0x0);
        gbc.writeMem(0xd171, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x443c, gbc.sp());
        EXPECT(0xd173, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd171));
        EXPECT(0x31, gbc.readMem(0xd172));
        // CB 31 00BF
        gbc.setState(0x2529, 0xb29, 0x5ac0, 0xd1d9, 0x5924, 0x367d, 0x0, 0x0);
        gbc.writeMem(0x2529, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xb29, gbc.sp());
        EXPECT(0x252b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 00C0
        gbc.setState(0xc8c4, 0xa97f, 0xfcc0, 0xb263, 0x3688, 0x34aa, 0x0, 0x0);
        gbc.writeMem(0xc8c4, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xa97f, gbc.sp());
        EXPECT(0xc8c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8c4));
        EXPECT(0x31, gbc.readMem(0xc8c5));
        // CB 31 00C1
        gbc.setState(0x619c, 0x871d, 0x7530, 0x9c9f, 0x676, 0x714f, 0x1, 0x1);
        gbc.writeMem(0x619c, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x871d, gbc.sp());
        EXPECT(0x619e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 00C2
        gbc.setState(0x6386, 0x80fc, 0xa500, 0x3587, 0x8eae, 0xfb41, 0x1, 0x1);
        gbc.writeMem(0x6386, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x80fc, gbc.sp());
        EXPECT(0x6388, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 00C3
        gbc.setState(0x82d7, 0xf46e, 0x56c0, 0xd85a, 0xdb6f, 0x5d89, 0x0, 0x1);
        gbc.writeMem(0x82d7, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xf46e, gbc.sp());
        EXPECT(0x82d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82d7));
        EXPECT(0x31, gbc.readMem(0x82d8));
        // CB 31 00C4
        gbc.setState(0x334, 0x2502, 0xd000, 0x156a, 0xf3dc, 0x4ed0, 0x1, 0x1);
        gbc.writeMem(0x334, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x2502, gbc.sp());
        EXPECT(0x336, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 00C5
        gbc.setState(0x4315, 0x137b, 0xf4b0, 0x2229, 0xc77d, 0x5fb6, 0x1, 0x0);
        gbc.writeMem(0x4315, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x137b, gbc.sp());
        EXPECT(0x4317, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 00C6
        gbc.setState(0x802d, 0xb593, 0x5310, 0x6f31, 0x4194, 0x115, 0x0, 0x1);
        gbc.writeMem(0x802d, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xb593, gbc.sp());
        EXPECT(0x802f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x802d));
        EXPECT(0x31, gbc.readMem(0x802e));
        // CB 31 00C7
        gbc.setState(0x38c8, 0x7f50, 0xb490, 0x2b97, 0xebfb, 0x61e, 0x0, 0x1);
        gbc.writeMem(0x38c8, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x7f50, gbc.sp());
        EXPECT(0x38ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 00C8
        gbc.setState(0xa1b3, 0x92fd, 0xa230, 0xc315, 0x82cc, 0x4eed, 0x0, 0x1);
        gbc.writeMem(0xa1b3, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x92fd, gbc.sp());
        EXPECT(0xa1b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1b3));
        EXPECT(0x31, gbc.readMem(0xa1b4));
        // CB 31 00C9
        gbc.setState(0x17ae, 0xaf01, 0x7ff0, 0xe241, 0x4002, 0xdad2, 0x0, 0x0);
        gbc.writeMem(0x17ae, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xaf01, gbc.sp());
        EXPECT(0x17b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 00CA
        gbc.setState(0x2edc, 0x9634, 0x9690, 0xb6f0, 0xf574, 0x4b34, 0x0, 0x0);
        gbc.writeMem(0x2edc, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x9634, gbc.sp());
        EXPECT(0x2ede, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 00CB
        gbc.setState(0xaa4, 0x18d3, 0x380, 0xbd9, 0xeeff, 0x2c2e, 0x1, 0x1);
        gbc.writeMem(0xaa4, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x18d3, gbc.sp());
        EXPECT(0xaa6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 00CC
        gbc.setState(0x2d38, 0x4942, 0x7bf0, 0x4d79, 0xd10c, 0xdf71, 0x0, 0x0);
        gbc.writeMem(0x2d38, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x4942, gbc.sp());
        EXPECT(0x2d3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 00CD
        gbc.setState(0xde8b, 0x452f, 0x18d0, 0xa99b, 0xc43f, 0xb50b, 0x1, 0x0);
        gbc.writeMem(0xde8b, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x452f, gbc.sp());
        EXPECT(0xde8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde8b));
        EXPECT(0x31, gbc.readMem(0xde8c));
        // CB 31 00CE
        gbc.setState(0xd97, 0xef7b, 0x9370, 0x2c5a, 0xde2c, 0xe2a4, 0x1, 0x0);
        gbc.writeMem(0xd97, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xef7b, gbc.sp());
        EXPECT(0xd99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 00CF
        gbc.setState(0x2ce8, 0x523d, 0xa750, 0x75bc, 0xe2b8, 0x6799, 0x1, 0x0);
        gbc.writeMem(0x2ce8, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x523d, gbc.sp());
        EXPECT(0x2cea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 00D0
        gbc.setState(0x5c02, 0x251c, 0x9ae0, 0xbf3b, 0x1e2a, 0xd070, 0x0, 0x1);
        gbc.writeMem(0x5c02, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x251c, gbc.sp());
        EXPECT(0x5c04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 00D1
        gbc.setState(0x4c56, 0x5f0b, 0xca70, 0x5bfc, 0xa1dc, 0x32f8, 0x1, 0x0);
        gbc.writeMem(0x4c56, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x5f0b, gbc.sp());
        EXPECT(0x4c58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 00D2
        gbc.setState(0x65d2, 0xc9c8, 0x4e50, 0x8ef0, 0x7400, 0x1577, 0x0, 0x0);
        gbc.writeMem(0x65d2, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xc9c8, gbc.sp());
        EXPECT(0x65d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 00D3
        gbc.setState(0x53a5, 0x3282, 0x54c0, 0xcca6, 0x2232, 0x7172, 0x0, 0x1);
        gbc.writeMem(0x53a5, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x3282, gbc.sp());
        EXPECT(0x53a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 00D4
        gbc.setState(0x3a68, 0x1eaa, 0xbfd0, 0xd839, 0x51c1, 0x7a77, 0x1, 0x1);
        gbc.writeMem(0x3a68, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x1eaa, gbc.sp());
        EXPECT(0x3a6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 00D5
        gbc.setState(0x2419, 0xdbab, 0x4e0, 0xf770, 0x14c3, 0x4022, 0x0, 0x0);
        gbc.writeMem(0x2419, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xdbab, gbc.sp());
        EXPECT(0x241b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 00D6
        gbc.setState(0x8a34, 0xea3d, 0x47b0, 0x147b, 0x1945, 0x298a, 0x1, 0x0);
        gbc.writeMem(0x8a34, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xea3d, gbc.sp());
        EXPECT(0x8a36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a34));
        EXPECT(0x31, gbc.readMem(0x8a35));
        // CB 31 00D8
        gbc.setState(0x3815, 0x8d0c, 0xffe0, 0x5d30, 0xac77, 0xfb49, 0x0, 0x1);
        gbc.writeMem(0x3815, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x8d0c, gbc.sp());
        EXPECT(0x3817, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 00D9
        gbc.setState(0x5e81, 0x1b5b, 0x9810, 0x2b93, 0x5597, 0x373, 0x0, 0x1);
        gbc.writeMem(0x5e81, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x1b5b, gbc.sp());
        EXPECT(0x5e83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 00DA
        gbc.setState(0x7c6, 0x38de, 0x6010, 0xc104, 0xf46a, 0x5a4, 0x1, 0x0);
        gbc.writeMem(0x7c6, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x38de, gbc.sp());
        EXPECT(0x7c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 00DB
        gbc.setState(0x9c74, 0x8bb7, 0xcac0, 0x4d4d, 0x993c, 0x2037, 0x1, 0x1);
        gbc.writeMem(0x9c74, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x8bb7, gbc.sp());
        EXPECT(0x9c76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c74));
        EXPECT(0x31, gbc.readMem(0x9c75));
        // CB 31 00DC
        gbc.setState(0xad6d, 0x1a46, 0x4e70, 0x1f6e, 0x8581, 0xf45c, 0x1, 0x0);
        gbc.writeMem(0xad6d, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x1a46, gbc.sp());
        EXPECT(0xad6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad6d));
        EXPECT(0x31, gbc.readMem(0xad6e));
        // CB 31 00DD
        gbc.setState(0x6af, 0x2155, 0x2d70, 0x91c1, 0xa03b, 0x8bf0, 0x0, 0x0);
        gbc.writeMem(0x6af, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x2155, gbc.sp());
        EXPECT(0x6b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 00DE
        gbc.setState(0xeffe, 0xc477, 0xf490, 0xaf57, 0x5cf2, 0x71bf, 0x0, 0x0);
        gbc.writeMem(0xeffe, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xc477, gbc.sp());
        EXPECT(0xf000, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeffe));
        EXPECT(0x31, gbc.readMem(0xefff));
        // CB 31 00DF
        gbc.setState(0x63a8, 0xffe0, 0xb670, 0x1147, 0xf283, 0xad83, 0x0, 0x0);
        gbc.writeMem(0x63a8, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xffe0, gbc.sp());
        EXPECT(0x63aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 00E0
        gbc.setState(0x75a5, 0xa14c, 0xb8b0, 0x1ed2, 0x8c6a, 0x9025, 0x0, 0x1);
        gbc.writeMem(0x75a5, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xa14c, gbc.sp());
        EXPECT(0x75a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 00E1
        gbc.setState(0x113a, 0xf568, 0x54d0, 0x21da, 0x748f, 0xa9a1, 0x0, 0x0);
        gbc.writeMem(0x113a, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xf568, gbc.sp());
        EXPECT(0x113c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 00E2
        gbc.setState(0x10c3, 0x57cf, 0xa000, 0x4c79, 0x99de, 0x56f1, 0x0, 0x1);
        gbc.writeMem(0x10c3, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x57cf, gbc.sp());
        EXPECT(0x10c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 00E3
        gbc.setState(0xd99c, 0xa8ed, 0xb9f0, 0xff0e, 0x5711, 0x1764, 0x1, 0x1);
        gbc.writeMem(0xd99c, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xa8ed, gbc.sp());
        EXPECT(0xd99e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd99c));
        EXPECT(0x31, gbc.readMem(0xd99d));
        // CB 31 00E4
        gbc.setState(0xe1da, 0x982, 0x5ba0, 0xdcda, 0x9bc7, 0x4fac, 0x0, 0x1);
        gbc.writeMem(0xe1da, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x982, gbc.sp());
        EXPECT(0xe1dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1da));
        EXPECT(0x31, gbc.readMem(0xe1db));
        // CB 31 00E5
        gbc.setState(0x9063, 0x259c, 0x9700, 0x1a23, 0xea1c, 0x712c, 0x0, 0x1);
        gbc.writeMem(0x9063, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x259c, gbc.sp());
        EXPECT(0x9065, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9063));
        EXPECT(0x31, gbc.readMem(0x9064));
        // CB 31 00E6
        gbc.setState(0x7e80, 0x94a6, 0xaba0, 0x7089, 0x56cd, 0x6076, 0x1, 0x1);
        gbc.writeMem(0x7e80, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x94a6, gbc.sp());
        EXPECT(0x7e82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 00E8
        gbc.setState(0xd7d7, 0x2e5e, 0x9e10, 0x151a, 0xf855, 0xee91, 0x1, 0x0);
        gbc.writeMem(0xd7d7, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x2e5e, gbc.sp());
        EXPECT(0xd7d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7d7));
        EXPECT(0x31, gbc.readMem(0xd7d8));
        // CB 31 00E9
        gbc.setState(0x48c, 0x8152, 0x48f0, 0x8e21, 0x5fa3, 0x8eb8, 0x0, 0x1);
        gbc.writeMem(0x48c, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x8152, gbc.sp());
        EXPECT(0x48e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 00EA
        gbc.setState(0x9107, 0x2162, 0xaff0, 0x8ff2, 0x36e0, 0xa23, 0x0, 0x0);
        gbc.writeMem(0x9107, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x2162, gbc.sp());
        EXPECT(0x9109, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9107));
        EXPECT(0x31, gbc.readMem(0x9108));
        // CB 31 00EB
        gbc.setState(0x258f, 0x1fab, 0xfac0, 0x37df, 0x99e, 0xe328, 0x1, 0x0);
        gbc.writeMem(0x258f, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x1fab, gbc.sp());
        EXPECT(0x2591, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 00EC
        gbc.setState(0xdc05, 0x47b9, 0x9d30, 0x275b, 0xd907, 0xac58, 0x0, 0x1);
        gbc.writeMem(0xdc05, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x47b9, gbc.sp());
        EXPECT(0xdc07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc05));
        EXPECT(0x31, gbc.readMem(0xdc06));
        // CB 31 00ED
        gbc.setState(0x9185, 0x8c9e, 0xf100, 0x7843, 0xdc94, 0xeb93, 0x1, 0x0);
        gbc.writeMem(0x9185, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x8c9e, gbc.sp());
        EXPECT(0x9187, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9185));
        EXPECT(0x31, gbc.readMem(0x9186));
        // CB 31 00EE
        gbc.setState(0xe269, 0xc3ef, 0x6020, 0x3b7d, 0x1341, 0xdf04, 0x0, 0x0);
        gbc.writeMem(0xe269, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xc3ef, gbc.sp());
        EXPECT(0xe26b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe269));
        EXPECT(0x31, gbc.readMem(0xe26a));
        // CB 31 00EF
        gbc.setState(0xd314, 0xf2f1, 0xa30, 0xf13, 0x6b4d, 0x8d80, 0x0, 0x0);
        gbc.writeMem(0xd314, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xf2f1, gbc.sp());
        EXPECT(0xd316, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd314));
        EXPECT(0x31, gbc.readMem(0xd315));
        // CB 31 00F0
        gbc.setState(0x9f81, 0x54d4, 0xfd10, 0x74f8, 0x22f, 0x9e1e, 0x0, 0x0);
        gbc.writeMem(0x9f81, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x54d4, gbc.sp());
        EXPECT(0x9f83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f81));
        EXPECT(0x31, gbc.readMem(0x9f82));
        // CB 31 00F1
        gbc.setState(0xeb62, 0xff14, 0xd950, 0x9ddf, 0xb1f, 0x4639, 0x0, 0x1);
        gbc.writeMem(0xeb62, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xff14, gbc.sp());
        EXPECT(0xeb64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb62));
        EXPECT(0x31, gbc.readMem(0xeb63));
        // CB 31 00F3
        gbc.setState(0x1817, 0x92db, 0xe9f0, 0x3aaf, 0x126, 0xe0a6, 0x1, 0x1);
        gbc.writeMem(0x1817, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x92db, gbc.sp());
        EXPECT(0x1819, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 00F4
        gbc.setState(0x3373, 0x6937, 0xf090, 0xeab4, 0x64fe, 0x2842, 0x0, 0x1);
        gbc.writeMem(0x3373, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x6937, gbc.sp());
        EXPECT(0x3375, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 00F5
        gbc.setState(0x1673, 0xa13b, 0xdd50, 0xc6a0, 0x6f02, 0xc51, 0x0, 0x1);
        gbc.writeMem(0x1673, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xa13b, gbc.sp());
        EXPECT(0x1675, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 00F6
        gbc.setState(0xb9ab, 0x7c34, 0xfad0, 0xe225, 0x9b18, 0x3c12, 0x0, 0x0);
        gbc.writeMem(0xb9ab, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x7c34, gbc.sp());
        EXPECT(0xb9ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9ab));
        EXPECT(0x31, gbc.readMem(0xb9ac));
        // CB 31 00F7
        gbc.setState(0xb2a2, 0xb367, 0x5a50, 0xcda2, 0x7fe6, 0x1b48, 0x0, 0x1);
        gbc.writeMem(0xb2a2, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xb367, gbc.sp());
        EXPECT(0xb2a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2a2));
        EXPECT(0x31, gbc.readMem(0xb2a3));
        // CB 31 00F8
        gbc.setState(0x4b36, 0xc97a, 0x8060, 0x29af, 0x694a, 0x13d1, 0x1, 0x0);
        gbc.writeMem(0x4b36, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xc97a, gbc.sp());
        EXPECT(0x4b38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 00F9
        gbc.setState(0xa0c7, 0x978c, 0xa150, 0xb6ea, 0xaded, 0x981b, 0x1, 0x1);
        gbc.writeMem(0xa0c7, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x978c, gbc.sp());
        EXPECT(0xa0c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0c7));
        EXPECT(0x31, gbc.readMem(0xa0c8));
        // CB 31 00FB
        gbc.setState(0x5e5f, 0x930f, 0x7780, 0x4d, 0x1b07, 0x734a, 0x0, 0x1);
        gbc.writeMem(0x5e5f, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x930f, gbc.sp());
        EXPECT(0x5e61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 00FC
        gbc.setState(0xd8f4, 0xf754, 0xd560, 0xe132, 0xe2ce, 0xbc1e, 0x0, 0x0);
        gbc.writeMem(0xd8f4, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xf754, gbc.sp());
        EXPECT(0xd8f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8f4));
        EXPECT(0x31, gbc.readMem(0xd8f5));
        // CB 31 00FD
        gbc.setState(0x68cd, 0x26f4, 0xfd60, 0x1be5, 0x1c96, 0xcbc2, 0x0, 0x1);
        gbc.writeMem(0x68cd, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x26f4, gbc.sp());
        EXPECT(0x68cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 00FE
        gbc.setState(0x4504, 0xb122, 0xc130, 0x8bd9, 0x76bb, 0x7c23, 0x1, 0x0);
        gbc.writeMem(0x4504, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xb122, gbc.sp());
        EXPECT(0x4506, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 00FF
        gbc.setState(0xb5fc, 0x14f, 0xb160, 0xedec, 0x3e45, 0xd9fc, 0x0, 0x1);
        gbc.writeMem(0xb5fc, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x14f, gbc.sp());
        EXPECT(0xb5fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5fc));
        EXPECT(0x31, gbc.readMem(0xb5fd));
        // CB 31 0100
        gbc.setState(0x107, 0xa458, 0x2f50, 0x6446, 0x36cf, 0x8793, 0x1, 0x1);
        gbc.writeMem(0x107, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xa458, gbc.sp());
        EXPECT(0x109, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0101
        gbc.setState(0x33ec, 0xf0cc, 0x28d0, 0x5072, 0x8b81, 0xc120, 0x1, 0x1);
        gbc.writeMem(0x33ec, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xf0cc, gbc.sp());
        EXPECT(0x33ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0102
        gbc.setState(0xec31, 0xf615, 0xd0c0, 0x1cee, 0xd568, 0xdad, 0x1, 0x0);
        gbc.writeMem(0xec31, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xf615, gbc.sp());
        EXPECT(0xec33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec31));
        EXPECT(0x31, gbc.readMem(0xec32));
        // CB 31 0103
        gbc.setState(0x61e1, 0xd455, 0x9730, 0x884, 0xe38f, 0x2fc5, 0x1, 0x0);
        gbc.writeMem(0x61e1, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xd455, gbc.sp());
        EXPECT(0x61e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0104
        gbc.setState(0x957, 0xb7f0, 0xddb0, 0xb0ab, 0x721e, 0xf087, 0x1, 0x0);
        gbc.writeMem(0x957, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xb7f0, gbc.sp());
        EXPECT(0x959, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0105
        gbc.setState(0x3c2a, 0x3ce3, 0x9230, 0xd900, 0xbb50, 0xa6f8, 0x0, 0x1);
        gbc.writeMem(0x3c2a, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x3ce3, gbc.sp());
        EXPECT(0x3c2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0107
        gbc.setState(0xc417, 0x23d5, 0x7db0, 0x7a56, 0x5eff, 0x4982, 0x0, 0x0);
        gbc.writeMem(0xc417, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x23d5, gbc.sp());
        EXPECT(0xc419, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc417));
        EXPECT(0x31, gbc.readMem(0xc418));
        // CB 31 0108
        gbc.setState(0x3176, 0xa948, 0x5560, 0x77a9, 0x8553, 0x30d4, 0x1, 0x0);
        gbc.writeMem(0x3176, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xa948, gbc.sp());
        EXPECT(0x3178, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0109
        gbc.setState(0x524, 0x98e7, 0x17e0, 0x55d3, 0xafdd, 0xba56, 0x1, 0x0);
        gbc.writeMem(0x524, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x98e7, gbc.sp());
        EXPECT(0x526, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 010A
        gbc.setState(0x4549, 0xf7d8, 0xaf50, 0x6975, 0x200f, 0x2903, 0x1, 0x0);
        gbc.writeMem(0x4549, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xf7d8, gbc.sp());
        EXPECT(0x454b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 010B
        gbc.setState(0x4c67, 0x616a, 0xb310, 0x9536, 0x1da3, 0xea76, 0x1, 0x0);
        gbc.writeMem(0x4c67, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x616a, gbc.sp());
        EXPECT(0x4c69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 010C
        gbc.setState(0x2f99, 0x365, 0x2540, 0x8395, 0x971b, 0x5dd0, 0x1, 0x1);
        gbc.writeMem(0x2f99, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x365, gbc.sp());
        EXPECT(0x2f9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 010E
        gbc.setState(0x671b, 0x2488, 0x7e80, 0xffde, 0xf0f, 0x37ad, 0x1, 0x1);
        gbc.writeMem(0x671b, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x2488, gbc.sp());
        EXPECT(0x671d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 010F
        gbc.setState(0x44b7, 0xcc4, 0xaee0, 0xfe2f, 0xb33c, 0x5b63, 0x0, 0x0);
        gbc.writeMem(0x44b7, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xcc4, gbc.sp());
        EXPECT(0x44b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0110
        gbc.setState(0x70fe, 0xae38, 0x360, 0x6a7a, 0x8104, 0x59ce, 0x0, 0x1);
        gbc.writeMem(0x70fe, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xae38, gbc.sp());
        EXPECT(0x7100, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0111
        gbc.setState(0xb6aa, 0x6e88, 0x76a0, 0x25db, 0x7503, 0x1392, 0x1, 0x1);
        gbc.writeMem(0xb6aa, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x6e88, gbc.sp());
        EXPECT(0xb6ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6aa));
        EXPECT(0x31, gbc.readMem(0xb6ab));
        // CB 31 0112
        gbc.setState(0x51f1, 0x6a0b, 0x6d0, 0xe457, 0xb47e, 0x7552, 0x0, 0x1);
        gbc.writeMem(0x51f1, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x6a0b, gbc.sp());
        EXPECT(0x51f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0113
        gbc.setState(0xdf1e, 0x5eda, 0x3aa0, 0x6e05, 0x21fc, 0xc7fe, 0x0, 0x1);
        gbc.writeMem(0xdf1e, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x5eda, gbc.sp());
        EXPECT(0xdf20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf1e));
        EXPECT(0x31, gbc.readMem(0xdf1f));
        // CB 31 0114
        gbc.setState(0xa30e, 0x13b5, 0xd6c0, 0xba21, 0x3ace, 0x91f4, 0x0, 0x0);
        gbc.writeMem(0xa30e, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x13b5, gbc.sp());
        EXPECT(0xa310, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa30e));
        EXPECT(0x31, gbc.readMem(0xa30f));
        // CB 31 0115
        gbc.setState(0xdd62, 0x4625, 0xb100, 0xa183, 0xd409, 0xe1e9, 0x1, 0x0);
        gbc.writeMem(0xdd62, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x4625, gbc.sp());
        EXPECT(0xdd64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd62));
        EXPECT(0x31, gbc.readMem(0xdd63));
        // CB 31 0116
        gbc.setState(0xeed3, 0xc905, 0x25e0, 0xdc01, 0xcb40, 0xa8cc, 0x1, 0x1);
        gbc.writeMem(0xeed3, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xc905, gbc.sp());
        EXPECT(0xeed5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeed3));
        EXPECT(0x31, gbc.readMem(0xeed4));
        // CB 31 0117
        gbc.setState(0x61ae, 0x9169, 0xa60, 0xd7dd, 0x32c9, 0x1c50, 0x1, 0x1);
        gbc.writeMem(0x61ae, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x9169, gbc.sp());
        EXPECT(0x61b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0118
        gbc.setState(0x891a, 0x1628, 0xf530, 0x1c24, 0x2e0, 0xc289, 0x0, 0x1);
        gbc.writeMem(0x891a, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x1628, gbc.sp());
        EXPECT(0x891c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x891a));
        EXPECT(0x31, gbc.readMem(0x891b));
        // CB 31 0119
        gbc.setState(0xdae6, 0xd2e1, 0x94c0, 0x9f36, 0x413, 0x5728, 0x0, 0x1);
        gbc.writeMem(0xdae6, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xd2e1, gbc.sp());
        EXPECT(0xdae8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdae6));
        EXPECT(0x31, gbc.readMem(0xdae7));
        // CB 31 011A
        gbc.setState(0x7d5a, 0xd472, 0xd8a0, 0x3f87, 0x5cec, 0x5c6f, 0x1, 0x0);
        gbc.writeMem(0x7d5a, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xd472, gbc.sp());
        EXPECT(0x7d5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 011B
        gbc.setState(0x513c, 0xb5cf, 0x6f50, 0x64f1, 0x3b5c, 0x5439, 0x0, 0x0);
        gbc.writeMem(0x513c, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xb5cf, gbc.sp());
        EXPECT(0x513e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 011C
        gbc.setState(0x64e3, 0x987c, 0xb9f0, 0x6665, 0x5afa, 0xc9f2, 0x0, 0x0);
        gbc.writeMem(0x64e3, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x987c, gbc.sp());
        EXPECT(0x64e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 011D
        gbc.setState(0xf31, 0xee8e, 0x2f90, 0xa46c, 0x31bb, 0x6a65, 0x1, 0x1);
        gbc.writeMem(0xf31, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xee8e, gbc.sp());
        EXPECT(0xf33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 011E
        gbc.setState(0xb509, 0x1f2, 0x5130, 0x4488, 0x201f, 0xd598, 0x0, 0x0);
        gbc.writeMem(0xb509, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x1f2, gbc.sp());
        EXPECT(0xb50b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb509));
        EXPECT(0x31, gbc.readMem(0xb50a));
        // CB 31 011F
        gbc.setState(0xcbd4, 0xd806, 0x1c40, 0x218a, 0x7608, 0xcb51, 0x0, 0x0);
        gbc.writeMem(0xcbd4, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xd806, gbc.sp());
        EXPECT(0xcbd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbd4));
        EXPECT(0x31, gbc.readMem(0xcbd5));
        // CB 31 0120
        gbc.setState(0x3076, 0xfd43, 0x9000, 0xf5e2, 0xe539, 0x6b4d, 0x1, 0x1);
        gbc.writeMem(0x3076, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xfd43, gbc.sp());
        EXPECT(0x3078, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0121
        gbc.setState(0x4219, 0x3a1, 0xc6f0, 0xd52a, 0x4f9b, 0x1064, 0x1, 0x1);
        gbc.writeMem(0x4219, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x3a1, gbc.sp());
        EXPECT(0x421b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0122
        gbc.setState(0xc60, 0x9084, 0x82e0, 0x12c3, 0xd9b1, 0x8c17, 0x0, 0x0);
        gbc.writeMem(0xc60, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x9084, gbc.sp());
        EXPECT(0xc62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0123
        gbc.setState(0xaa78, 0x220c, 0xa700, 0xae50, 0xe38c, 0xc82a, 0x0, 0x1);
        gbc.writeMem(0xaa78, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x220c, gbc.sp());
        EXPECT(0xaa7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa78));
        EXPECT(0x31, gbc.readMem(0xaa79));
        // CB 31 0124
        gbc.setState(0xb4e8, 0xde96, 0x8820, 0x990b, 0x32e3, 0xea85, 0x0, 0x0);
        gbc.writeMem(0xb4e8, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xde96, gbc.sp());
        EXPECT(0xb4ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4e8));
        EXPECT(0x31, gbc.readMem(0xb4e9));
        // CB 31 0125
        gbc.setState(0x5ca3, 0x1108, 0xd900, 0xdec4, 0xecf3, 0xe667, 0x0, 0x1);
        gbc.writeMem(0x5ca3, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x1108, gbc.sp());
        EXPECT(0x5ca5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0126
        gbc.setState(0x55a9, 0xc71d, 0xb810, 0xa9e0, 0xf0c2, 0xe795, 0x0, 0x0);
        gbc.writeMem(0x55a9, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xc71d, gbc.sp());
        EXPECT(0x55ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0127
        gbc.setState(0xd1b1, 0x9b45, 0x500, 0x2599, 0x8c88, 0xea16, 0x0, 0x0);
        gbc.writeMem(0xd1b1, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x9b45, gbc.sp());
        EXPECT(0xd1b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1b1));
        EXPECT(0x31, gbc.readMem(0xd1b2));
        // CB 31 0128
        gbc.setState(0xc37c, 0xad7f, 0x7b20, 0x75cb, 0x1711, 0xa08a, 0x0, 0x1);
        gbc.writeMem(0xc37c, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xad7f, gbc.sp());
        EXPECT(0xc37e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc37c));
        EXPECT(0x31, gbc.readMem(0xc37d));
        // CB 31 012A
        gbc.setState(0xc447, 0x5c5d, 0xc4a0, 0x1934, 0xd97c, 0xa4aa, 0x0, 0x1);
        gbc.writeMem(0xc447, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x5c5d, gbc.sp());
        EXPECT(0xc449, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc447));
        EXPECT(0x31, gbc.readMem(0xc448));
        // CB 31 012B
        gbc.setState(0xdd27, 0x4f74, 0x37d0, 0x9515, 0x9223, 0x3cf3, 0x0, 0x0);
        gbc.writeMem(0xdd27, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x4f74, gbc.sp());
        EXPECT(0xdd29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd27));
        EXPECT(0x31, gbc.readMem(0xdd28));
        // CB 31 012C
        gbc.setState(0x99b3, 0xe8aa, 0x4db0, 0x64b7, 0xa093, 0xb78b, 0x1, 0x1);
        gbc.writeMem(0x99b3, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xe8aa, gbc.sp());
        EXPECT(0x99b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99b3));
        EXPECT(0x31, gbc.readMem(0x99b4));
        // CB 31 012E
        gbc.setState(0x4589, 0xfa9, 0x4d10, 0xd634, 0x4ed2, 0x33bc, 0x0, 0x1);
        gbc.writeMem(0x4589, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xfa9, gbc.sp());
        EXPECT(0x458b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 012F
        gbc.setState(0xe98a, 0xdf7a, 0xf580, 0x4559, 0xbd8c, 0x1cd2, 0x1, 0x0);
        gbc.writeMem(0xe98a, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xdf7a, gbc.sp());
        EXPECT(0xe98c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe98a));
        EXPECT(0x31, gbc.readMem(0xe98b));
        // CB 31 0130
        gbc.setState(0x8662, 0xc2ca, 0xf1a0, 0xc096, 0xc721, 0x543, 0x0, 0x0);
        gbc.writeMem(0x8662, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xc2ca, gbc.sp());
        EXPECT(0x8664, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8662));
        EXPECT(0x31, gbc.readMem(0x8663));
        // CB 31 0131
        gbc.setState(0xacd8, 0xcb82, 0x4d80, 0x3cf4, 0x6b46, 0x688c, 0x0, 0x1);
        gbc.writeMem(0xacd8, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xcb82, gbc.sp());
        EXPECT(0xacda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacd8));
        EXPECT(0x31, gbc.readMem(0xacd9));
        // CB 31 0132
        gbc.setState(0x7e04, 0x8e81, 0xb5d0, 0xf074, 0x61c, 0xcea5, 0x0, 0x1);
        gbc.writeMem(0x7e04, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x8e81, gbc.sp());
        EXPECT(0x7e06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0133
        gbc.setState(0x916c, 0xb270, 0x91b0, 0x439f, 0xc4ea, 0xeeb4, 0x1, 0x1);
        gbc.writeMem(0x916c, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xb270, gbc.sp());
        EXPECT(0x916e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x916c));
        EXPECT(0x31, gbc.readMem(0x916d));
        // CB 31 0134
        gbc.setState(0x2f0c, 0xabe2, 0xc8e0, 0xbfd8, 0x7622, 0x7ce0, 0x0, 0x0);
        gbc.writeMem(0x2f0c, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xabe2, gbc.sp());
        EXPECT(0x2f0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0135
        gbc.setState(0x30a3, 0x4054, 0x7650, 0x8654, 0x2d94, 0x5768, 0x1, 0x1);
        gbc.writeMem(0x30a3, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x4054, gbc.sp());
        EXPECT(0x30a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0136
        gbc.setState(0xaa6a, 0xc981, 0x3130, 0x7087, 0x5b85, 0x70fb, 0x1, 0x1);
        gbc.writeMem(0xaa6a, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xc981, gbc.sp());
        EXPECT(0xaa6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa6a));
        EXPECT(0x31, gbc.readMem(0xaa6b));
        // CB 31 0137
        gbc.setState(0xaeb2, 0x851c, 0x6380, 0x9cfb, 0xa0a2, 0x99bc, 0x0, 0x1);
        gbc.writeMem(0xaeb2, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x851c, gbc.sp());
        EXPECT(0xaeb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaeb2));
        EXPECT(0x31, gbc.readMem(0xaeb3));
        // CB 31 0138
        gbc.setState(0x2da9, 0x7141, 0x5d50, 0x6422, 0x76d8, 0xe6ab, 0x0, 0x1);
        gbc.writeMem(0x2da9, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x7141, gbc.sp());
        EXPECT(0x2dab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0139
        gbc.setState(0xa33d, 0x8cc3, 0x5610, 0x1bf7, 0x1a5e, 0xe2a9, 0x0, 0x1);
        gbc.writeMem(0xa33d, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x8cc3, gbc.sp());
        EXPECT(0xa33f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa33d));
        EXPECT(0x31, gbc.readMem(0xa33e));
        // CB 31 013A
        gbc.setState(0xca73, 0xe081, 0x4f90, 0x92a9, 0x9db3, 0xbaf1, 0x1, 0x0);
        gbc.writeMem(0xca73, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xe081, gbc.sp());
        EXPECT(0xca75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca73));
        EXPECT(0x31, gbc.readMem(0xca74));
        // CB 31 013B
        gbc.setState(0x1be6, 0x69c2, 0xd360, 0x152b, 0xaa0f, 0x262, 0x1, 0x0);
        gbc.writeMem(0x1be6, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x69c2, gbc.sp());
        EXPECT(0x1be8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 013C
        gbc.setState(0x9d7a, 0x4ba4, 0x9170, 0x4f85, 0x408a, 0x2ecb, 0x1, 0x1);
        gbc.writeMem(0x9d7a, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x4ba4, gbc.sp());
        EXPECT(0x9d7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d7a));
        EXPECT(0x31, gbc.readMem(0x9d7b));
        // CB 31 013D
        gbc.setState(0xdb3b, 0x289e, 0x1800, 0xb81, 0x9112, 0xe80c, 0x1, 0x0);
        gbc.writeMem(0xdb3b, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x289e, gbc.sp());
        EXPECT(0xdb3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb3b));
        EXPECT(0x31, gbc.readMem(0xdb3c));
        // CB 31 013E
        gbc.setState(0xd358, 0x65b3, 0x980, 0x4d4f, 0x6f88, 0x14b7, 0x1, 0x1);
        gbc.writeMem(0xd358, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x65b3, gbc.sp());
        EXPECT(0xd35a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd358));
        EXPECT(0x31, gbc.readMem(0xd359));
        // CB 31 013F
        gbc.setState(0x3648, 0x679c, 0xcc30, 0x187b, 0x7521, 0x7867, 0x0, 0x1);
        gbc.writeMem(0x3648, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x679c, gbc.sp());
        EXPECT(0x364a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0140
        gbc.setState(0x739c, 0x2e5b, 0x28f0, 0x75fd, 0xa3c0, 0x970b, 0x0, 0x1);
        gbc.writeMem(0x739c, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x2e5b, gbc.sp());
        EXPECT(0x739e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0141
        gbc.setState(0x2f08, 0x4ad4, 0xffd0, 0x666, 0x26e6, 0x5a08, 0x1, 0x1);
        gbc.writeMem(0x2f08, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x4ad4, gbc.sp());
        EXPECT(0x2f0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0142
        gbc.setState(0x5e23, 0xec44, 0x7d10, 0xc1fa, 0x8e0b, 0x931b, 0x1, 0x1);
        gbc.writeMem(0x5e23, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xec44, gbc.sp());
        EXPECT(0x5e25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0143
        gbc.setState(0xc22e, 0x244f, 0xdc70, 0x501c, 0x10e1, 0x9216, 0x1, 0x0);
        gbc.writeMem(0xc22e, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x244f, gbc.sp());
        EXPECT(0xc230, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc22e));
        EXPECT(0x31, gbc.readMem(0xc22f));
        // CB 31 0144
        gbc.setState(0x1c1, 0xe79e, 0x6eb0, 0xf5c1, 0xf293, 0xb649, 0x1, 0x0);
        gbc.writeMem(0x1c1, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xe79e, gbc.sp());
        EXPECT(0x1c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0145
        gbc.setState(0xaf14, 0x9a40, 0xd740, 0xa98b, 0xe622, 0x489b, 0x0, 0x0);
        gbc.writeMem(0xaf14, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x9a40, gbc.sp());
        EXPECT(0xaf16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf14));
        EXPECT(0x31, gbc.readMem(0xaf15));
        // CB 31 0147
        gbc.setState(0x80f, 0x2c6a, 0x8790, 0x5c5c, 0xf96d, 0xcad, 0x0, 0x0);
        gbc.writeMem(0x80f, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x2c6a, gbc.sp());
        EXPECT(0x811, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0148
        gbc.setState(0x908a, 0xe66b, 0x9380, 0x4f3c, 0x521e, 0x127a, 0x1, 0x0);
        gbc.writeMem(0x908a, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xe66b, gbc.sp());
        EXPECT(0x908c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x908a));
        EXPECT(0x31, gbc.readMem(0x908b));
        // CB 31 0149
        gbc.setState(0xacb2, 0x5d4, 0x5b0, 0xf4e0, 0xd134, 0x2c39, 0x0, 0x0);
        gbc.writeMem(0xacb2, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x5d4, gbc.sp());
        EXPECT(0xacb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacb2));
        EXPECT(0x31, gbc.readMem(0xacb3));
        // CB 31 014A
        gbc.setState(0x3aeb, 0xcbbb, 0xc810, 0x8ad7, 0xb1f1, 0xae0d, 0x1, 0x1);
        gbc.writeMem(0x3aeb, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xcbbb, gbc.sp());
        EXPECT(0x3aed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 014B
        gbc.setState(0x48f1, 0x719, 0xfb80, 0x65a3, 0x950c, 0x1255, 0x0, 0x1);
        gbc.writeMem(0x48f1, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x719, gbc.sp());
        EXPECT(0x48f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 014C
        gbc.setState(0x22f, 0x638e, 0x5a30, 0x3553, 0x21cf, 0x5d4d, 0x0, 0x0);
        gbc.writeMem(0x22f, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x638e, gbc.sp());
        EXPECT(0x231, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 014D
        gbc.setState(0x80d, 0x46be, 0x1520, 0xd5b0, 0xaf6a, 0xe36f, 0x0, 0x0);
        gbc.writeMem(0x80d, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x46be, gbc.sp());
        EXPECT(0x80f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 014E
        gbc.setState(0xea6b, 0x977e, 0x6f40, 0x4366, 0x93fa, 0x6da1, 0x0, 0x0);
        gbc.writeMem(0xea6b, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x977e, gbc.sp());
        EXPECT(0xea6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea6b));
        EXPECT(0x31, gbc.readMem(0xea6c));
        // CB 31 014F
        gbc.setState(0x44d, 0xcd5a, 0xd690, 0x2d7, 0xf537, 0xc57d, 0x1, 0x1);
        gbc.writeMem(0x44d, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xcd5a, gbc.sp());
        EXPECT(0x44f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0150
        gbc.setState(0xe14d, 0xdd35, 0x18d0, 0x556d, 0x3bbb, 0x7d3f, 0x1, 0x0);
        gbc.writeMem(0xe14d, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xdd35, gbc.sp());
        EXPECT(0xe14f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe14d));
        EXPECT(0x31, gbc.readMem(0xe14e));
        // CB 31 0151
        gbc.setState(0x34e3, 0x45d, 0x4780, 0xec68, 0xb0bd, 0xf7c7, 0x0, 0x0);
        gbc.writeMem(0x34e3, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x45d, gbc.sp());
        EXPECT(0x34e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0152
        gbc.setState(0x3f75, 0xef27, 0x3900, 0x6cee, 0x1a12, 0x18b7, 0x1, 0x0);
        gbc.writeMem(0x3f75, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xef27, gbc.sp());
        EXPECT(0x3f77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0153
        gbc.setState(0xce32, 0xccd5, 0xa320, 0x6ee8, 0x341, 0xa53c, 0x0, 0x1);
        gbc.writeMem(0xce32, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xccd5, gbc.sp());
        EXPECT(0xce34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce32));
        EXPECT(0x31, gbc.readMem(0xce33));
        // CB 31 0154
        gbc.setState(0x8f7e, 0xe874, 0x9fb0, 0xebf0, 0x7383, 0x7944, 0x1, 0x1);
        gbc.writeMem(0x8f7e, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xe874, gbc.sp());
        EXPECT(0x8f80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f7e));
        EXPECT(0x31, gbc.readMem(0x8f7f));
        // CB 31 0155
        gbc.setState(0x81e4, 0x5504, 0x7a40, 0xb2dd, 0x20b3, 0x1347, 0x0, 0x0);
        gbc.writeMem(0x81e4, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x5504, gbc.sp());
        EXPECT(0x81e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81e4));
        EXPECT(0x31, gbc.readMem(0x81e5));
        // CB 31 0156
        gbc.setState(0x2d5, 0xfa1c, 0xa2d0, 0xd6df, 0x393d, 0x3c5e, 0x0, 0x1);
        gbc.writeMem(0x2d5, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xfa1c, gbc.sp());
        EXPECT(0x2d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0157
        gbc.setState(0xb6e9, 0xcc8f, 0xbc40, 0x270f, 0xdd3d, 0x67df, 0x0, 0x0);
        gbc.writeMem(0xb6e9, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xcc8f, gbc.sp());
        EXPECT(0xb6eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6e9));
        EXPECT(0x31, gbc.readMem(0xb6ea));
        // CB 31 0158
        gbc.setState(0xd8cd, 0x59bd, 0x5900, 0x6c, 0x434e, 0x648a, 0x0, 0x1);
        gbc.writeMem(0xd8cd, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x59bd, gbc.sp());
        EXPECT(0xd8cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8cd));
        EXPECT(0x31, gbc.readMem(0xd8ce));
        // CB 31 0159
        gbc.setState(0x63c1, 0x6a4c, 0xab10, 0x56dc, 0x68d4, 0x36e, 0x1, 0x0);
        gbc.writeMem(0x63c1, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x6a4c, gbc.sp());
        EXPECT(0x63c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 015A
        gbc.setState(0x446d, 0x4619, 0xa020, 0xfbce, 0xbc35, 0x4dc0, 0x0, 0x0);
        gbc.writeMem(0x446d, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x4619, gbc.sp());
        EXPECT(0x446f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 015C
        gbc.setState(0x3473, 0x9426, 0xd8e0, 0x7af7, 0x206a, 0x5fc2, 0x1, 0x1);
        gbc.writeMem(0x3473, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x9426, gbc.sp());
        EXPECT(0x3475, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 015D
        gbc.setState(0xc61f, 0x3ff8, 0xd930, 0x272f, 0x938c, 0x1f6d, 0x1, 0x1);
        gbc.writeMem(0xc61f, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x3ff8, gbc.sp());
        EXPECT(0xc621, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc61f));
        EXPECT(0x31, gbc.readMem(0xc620));
        // CB 31 015F
        gbc.setState(0xe96c, 0x7cc2, 0x9ce0, 0x7a2a, 0xea34, 0xc5a8, 0x1, 0x0);
        gbc.writeMem(0xe96c, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x7cc2, gbc.sp());
        EXPECT(0xe96e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe96c));
        EXPECT(0x31, gbc.readMem(0xe96d));
        // CB 31 0160
        gbc.setState(0xe50f, 0x1c, 0xe940, 0xde9c, 0xebd2, 0xff60, 0x1, 0x1);
        gbc.writeMem(0xe50f, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x1c, gbc.sp());
        EXPECT(0xe511, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe50f));
        EXPECT(0x31, gbc.readMem(0xe510));
        // CB 31 0162
        gbc.setState(0x68dc, 0xeffc, 0x2710, 0x63cd, 0x45dc, 0x4e27, 0x0, 0x1);
        gbc.writeMem(0x68dc, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xeffc, gbc.sp());
        EXPECT(0x68de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0165
        gbc.setState(0x3563, 0x1b72, 0x6600, 0xedbf, 0x341e, 0xd85c, 0x1, 0x1);
        gbc.writeMem(0x3563, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x1b72, gbc.sp());
        EXPECT(0x3565, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0166
        gbc.setState(0x5070, 0x9fec, 0xfff0, 0xb5a5, 0x31ed, 0x1bc3, 0x0, 0x0);
        gbc.writeMem(0x5070, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x9fec, gbc.sp());
        EXPECT(0x5072, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0167
        gbc.setState(0xb9fd, 0xe3e2, 0xbf10, 0x3173, 0x7c2d, 0x62e8, 0x1, 0x1);
        gbc.writeMem(0xb9fd, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xe3e2, gbc.sp());
        EXPECT(0xb9ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9fd));
        EXPECT(0x31, gbc.readMem(0xb9fe));
        // CB 31 0169
        gbc.setState(0x5850, 0xe756, 0xcef0, 0x61a1, 0x5bf8, 0x487d, 0x0, 0x1);
        gbc.writeMem(0x5850, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xe756, gbc.sp());
        EXPECT(0x5852, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 016A
        gbc.setState(0xd18a, 0xb145, 0x530, 0xe77e, 0x9ed2, 0x852b, 0x0, 0x0);
        gbc.writeMem(0xd18a, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xb145, gbc.sp());
        EXPECT(0xd18c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd18a));
        EXPECT(0x31, gbc.readMem(0xd18b));
        // CB 31 016B
        gbc.setState(0x1769, 0x7a87, 0xc3c0, 0x55ea, 0x819b, 0x5263, 0x0, 0x1);
        gbc.writeMem(0x1769, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x7a87, gbc.sp());
        EXPECT(0x176b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 016C
        gbc.setState(0x4d6e, 0xe896, 0x1b90, 0xddd5, 0x106f, 0x5d1, 0x0, 0x1);
        gbc.writeMem(0x4d6e, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xe896, gbc.sp());
        EXPECT(0x4d70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 016D
        gbc.setState(0x23cf, 0xded4, 0x8ef0, 0xf7cd, 0x6143, 0x3352, 0x1, 0x1);
        gbc.writeMem(0x23cf, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xded4, gbc.sp());
        EXPECT(0x23d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 016E
        gbc.setState(0x563c, 0xc194, 0x38f0, 0xd113, 0x574f, 0x76b6, 0x0, 0x0);
        gbc.writeMem(0x563c, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xc194, gbc.sp());
        EXPECT(0x563e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 016F
        gbc.setState(0x46ca, 0xc823, 0x1b10, 0x2f9e, 0x3906, 0xc75c, 0x1, 0x0);
        gbc.writeMem(0x46ca, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xc823, gbc.sp());
        EXPECT(0x46cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0170
        gbc.setState(0xdc1e, 0x6d16, 0x2700, 0x48ab, 0xd535, 0xc717, 0x0, 0x0);
        gbc.writeMem(0xdc1e, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x6d16, gbc.sp());
        EXPECT(0xdc20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc1e));
        EXPECT(0x31, gbc.readMem(0xdc1f));
        // CB 31 0171
        gbc.setState(0xd0fc, 0xb982, 0x41f0, 0xa9ee, 0xde71, 0x5dcb, 0x0, 0x1);
        gbc.writeMem(0xd0fc, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xb982, gbc.sp());
        EXPECT(0xd0fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0fc));
        EXPECT(0x31, gbc.readMem(0xd0fd));
        // CB 31 0172
        gbc.setState(0xa8a1, 0x598e, 0x15e0, 0xa12e, 0x7520, 0x3651, 0x1, 0x1);
        gbc.writeMem(0xa8a1, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x598e, gbc.sp());
        EXPECT(0xa8a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8a1));
        EXPECT(0x31, gbc.readMem(0xa8a2));
        // CB 31 0173
        gbc.setState(0x2ddc, 0x308c, 0x730, 0x2f45, 0x1552, 0x6fde, 0x1, 0x1);
        gbc.writeMem(0x2ddc, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x308c, gbc.sp());
        EXPECT(0x2dde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0174
        gbc.setState(0x7160, 0x152d, 0x45a0, 0xb8c3, 0x87a2, 0xfdf2, 0x1, 0x0);
        gbc.writeMem(0x7160, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x152d, gbc.sp());
        EXPECT(0x7162, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0175
        gbc.setState(0x88e6, 0xb265, 0xc3e0, 0x57a9, 0xc9fc, 0xf0c5, 0x1, 0x0);
        gbc.writeMem(0x88e6, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xb265, gbc.sp());
        EXPECT(0x88e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88e6));
        EXPECT(0x31, gbc.readMem(0x88e7));
        // CB 31 0176
        gbc.setState(0x87f9, 0x6796, 0x1300, 0x7432, 0xdee4, 0xb41d, 0x0, 0x1);
        gbc.writeMem(0x87f9, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x6796, gbc.sp());
        EXPECT(0x87fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87f9));
        EXPECT(0x31, gbc.readMem(0x87fa));
        // CB 31 0177
        gbc.setState(0x9143, 0x3bbb, 0x2d00, 0x941a, 0x8cf9, 0xa258, 0x1, 0x0);
        gbc.writeMem(0x9143, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x3bbb, gbc.sp());
        EXPECT(0x9145, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9143));
        EXPECT(0x31, gbc.readMem(0x9144));
        // CB 31 0178
        gbc.setState(0x1254, 0xba47, 0xb420, 0xebea, 0xfc58, 0x431, 0x0, 0x1);
        gbc.writeMem(0x1254, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xba47, gbc.sp());
        EXPECT(0x1256, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0179
        gbc.setState(0xd4c4, 0xd985, 0xcf50, 0x6025, 0x577d, 0xb326, 0x1, 0x1);
        gbc.writeMem(0xd4c4, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xd985, gbc.sp());
        EXPECT(0xd4c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4c4));
        EXPECT(0x31, gbc.readMem(0xd4c5));
        // CB 31 017A
        gbc.setState(0xcd5c, 0x3e5, 0x7220, 0x46f5, 0x350d, 0x53e9, 0x1, 0x0);
        gbc.writeMem(0xcd5c, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x3e5, gbc.sp());
        EXPECT(0xcd5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd5c));
        EXPECT(0x31, gbc.readMem(0xcd5d));
        // CB 31 017B
        gbc.setState(0xc939, 0xb621, 0xbcb0, 0x5714, 0x7169, 0x7e13, 0x1, 0x1);
        gbc.writeMem(0xc939, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xb621, gbc.sp());
        EXPECT(0xc93b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc939));
        EXPECT(0x31, gbc.readMem(0xc93a));
        // CB 31 017C
        gbc.setState(0x1cf, 0x82a4, 0x56d0, 0x9a31, 0x192, 0x3ace, 0x1, 0x0);
        gbc.writeMem(0x1cf, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x82a4, gbc.sp());
        EXPECT(0x1d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 017D
        gbc.setState(0x53d5, 0x202, 0x18f0, 0x7606, 0xdbfd, 0x3278, 0x1, 0x1);
        gbc.writeMem(0x53d5, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x202, gbc.sp());
        EXPECT(0x53d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 017E
        gbc.setState(0xfd3, 0x6252, 0xbbc0, 0xa350, 0xd739, 0x6f82, 0x0, 0x1);
        gbc.writeMem(0xfd3, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x6252, gbc.sp());
        EXPECT(0xfd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 017F
        gbc.setState(0x3240, 0x59ac, 0x82b0, 0x32df, 0xd383, 0x2b40, 0x1, 0x1);
        gbc.writeMem(0x3240, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x59ac, gbc.sp());
        EXPECT(0x3242, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0180
        gbc.setState(0x5c00, 0xb380, 0x5c50, 0xccbf, 0xf0c5, 0xf797, 0x0, 0x1);
        gbc.writeMem(0x5c00, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xb380, gbc.sp());
        EXPECT(0x5c02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0181
        gbc.setState(0x3a2b, 0xcc18, 0x4400, 0x7de0, 0x1f7f, 0x935, 0x0, 0x1);
        gbc.writeMem(0x3a2b, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xcc18, gbc.sp());
        EXPECT(0x3a2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0183
        gbc.setState(0xa2f8, 0x5033, 0xaef0, 0xf05f, 0x36b5, 0x440c, 0x0, 0x0);
        gbc.writeMem(0xa2f8, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x5033, gbc.sp());
        EXPECT(0xa2fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2f8));
        EXPECT(0x31, gbc.readMem(0xa2f9));
        // CB 31 0185
        gbc.setState(0xcb30, 0xbd69, 0xd1d0, 0x4c30, 0xe52b, 0xc569, 0x1, 0x1);
        gbc.writeMem(0xcb30, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xbd69, gbc.sp());
        EXPECT(0xcb32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb30));
        EXPECT(0x31, gbc.readMem(0xcb31));
        // CB 31 0188
        gbc.setState(0xb5b4, 0x363f, 0xda50, 0x194a, 0xde24, 0xf03c, 0x0, 0x1);
        gbc.writeMem(0xb5b4, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x363f, gbc.sp());
        EXPECT(0xb5b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5b4));
        EXPECT(0x31, gbc.readMem(0xb5b5));
        // CB 31 0189
        gbc.setState(0x88ec, 0xc9e5, 0xfec0, 0x6d61, 0xdac5, 0x3c55, 0x0, 0x1);
        gbc.writeMem(0x88ec, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xc9e5, gbc.sp());
        EXPECT(0x88ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88ec));
        EXPECT(0x31, gbc.readMem(0x88ed));
        // CB 31 018A
        gbc.setState(0xd2e8, 0x3340, 0x3320, 0x50e4, 0x2125, 0x5466, 0x0, 0x1);
        gbc.writeMem(0xd2e8, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x3340, gbc.sp());
        EXPECT(0xd2ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2e8));
        EXPECT(0x31, gbc.readMem(0xd2e9));
        // CB 31 018B
        gbc.setState(0x7f4d, 0xaf95, 0x2d80, 0x1210, 0x60d2, 0x34a5, 0x0, 0x1);
        gbc.writeMem(0x7f4d, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xaf95, gbc.sp());
        EXPECT(0x7f4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 018C
        gbc.setState(0x28d9, 0xf133, 0x57f0, 0x80f6, 0xb099, 0xffa5, 0x0, 0x0);
        gbc.writeMem(0x28d9, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xf133, gbc.sp());
        EXPECT(0x28db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 018D
        gbc.setState(0xa326, 0x26bf, 0x2fc0, 0x9499, 0xb450, 0x74ec, 0x0, 0x1);
        gbc.writeMem(0xa326, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x26bf, gbc.sp());
        EXPECT(0xa328, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa326));
        EXPECT(0x31, gbc.readMem(0xa327));
        // CB 31 018E
        gbc.setState(0x1ae8, 0x6485, 0xeb40, 0xd71f, 0xdf20, 0x98d9, 0x1, 0x1);
        gbc.writeMem(0x1ae8, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x6485, gbc.sp());
        EXPECT(0x1aea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 018F
        gbc.setState(0xcef0, 0x5c70, 0x9580, 0xc245, 0xca98, 0x3ba, 0x0, 0x0);
        gbc.writeMem(0xcef0, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x5c70, gbc.sp());
        EXPECT(0xcef2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcef0));
        EXPECT(0x31, gbc.readMem(0xcef1));
        // CB 31 0190
        gbc.setState(0xad3e, 0x130b, 0x3ff0, 0x2f77, 0xa99e, 0x707f, 0x1, 0x0);
        gbc.writeMem(0xad3e, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x130b, gbc.sp());
        EXPECT(0xad40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad3e));
        EXPECT(0x31, gbc.readMem(0xad3f));
        // CB 31 0191
        gbc.setState(0x3dc1, 0x445f, 0xda30, 0x9648, 0x6791, 0x83ad, 0x0, 0x1);
        gbc.writeMem(0x3dc1, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x445f, gbc.sp());
        EXPECT(0x3dc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0192
        gbc.setState(0x474c, 0xf9a, 0x51f0, 0x596, 0xae75, 0xd4f2, 0x0, 0x0);
        gbc.writeMem(0x474c, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xf9a, gbc.sp());
        EXPECT(0x474e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0193
        gbc.setState(0x398b, 0xa391, 0xf2a0, 0xbf9e, 0x1552, 0xd7fa, 0x1, 0x0);
        gbc.writeMem(0x398b, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xa391, gbc.sp());
        EXPECT(0x398d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0194
        gbc.setState(0x11e3, 0x8509, 0xeea0, 0xb529, 0x5c94, 0xd1fe, 0x1, 0x0);
        gbc.writeMem(0x11e3, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x8509, gbc.sp());
        EXPECT(0x11e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0195
        gbc.setState(0xed5d, 0x78ed, 0xaaf0, 0x10f7, 0x47b8, 0xa58e, 0x1, 0x1);
        gbc.writeMem(0xed5d, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x78ed, gbc.sp());
        EXPECT(0xed5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed5d));
        EXPECT(0x31, gbc.readMem(0xed5e));
        // CB 31 0196
        gbc.setState(0x97f, 0x1699, 0xa5a0, 0xda1f, 0x65b3, 0xa202, 0x1, 0x0);
        gbc.writeMem(0x97f, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x1699, gbc.sp());
        EXPECT(0x981, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0197
        gbc.setState(0x56e1, 0x37dc, 0x8cc0, 0x4596, 0xd5d2, 0x712, 0x0, 0x0);
        gbc.writeMem(0x56e1, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x37dc, gbc.sp());
        EXPECT(0x56e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0198
        gbc.setState(0x606d, 0xe2ae, 0x5d90, 0xfa5f, 0x5a1f, 0xfbda, 0x0, 0x1);
        gbc.writeMem(0x606d, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xe2ae, gbc.sp());
        EXPECT(0x606f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0199
        gbc.setState(0x7e74, 0x9dba, 0xe240, 0xbb7e, 0xf1fc, 0x2bbe, 0x1, 0x1);
        gbc.writeMem(0x7e74, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x9dba, gbc.sp());
        EXPECT(0x7e76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 019A
        gbc.setState(0x725f, 0xbf24, 0x22e0, 0xda30, 0x60dd, 0x1e4a, 0x1, 0x0);
        gbc.writeMem(0x725f, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xbf24, gbc.sp());
        EXPECT(0x7261, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 019B
        gbc.setState(0x5a0, 0x176e, 0x66a0, 0xca23, 0x1781, 0xb6a3, 0x1, 0x0);
        gbc.writeMem(0x5a0, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x176e, gbc.sp());
        EXPECT(0x5a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 019C
        gbc.setState(0xa2d1, 0xf4fe, 0xff10, 0x9227, 0xb189, 0x3c92, 0x0, 0x1);
        gbc.writeMem(0xa2d1, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xf4fe, gbc.sp());
        EXPECT(0xa2d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2d1));
        EXPECT(0x31, gbc.readMem(0xa2d2));
        // CB 31 019D
        gbc.setState(0x9da2, 0xea12, 0x6a50, 0x6566, 0xbba2, 0xecbc, 0x0, 0x1);
        gbc.writeMem(0x9da2, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xea12, gbc.sp());
        EXPECT(0x9da4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9da2));
        EXPECT(0x31, gbc.readMem(0x9da3));
        // CB 31 019E
        gbc.setState(0xce12, 0x9599, 0x9d70, 0xc2c5, 0x9402, 0x6d1c, 0x1, 0x1);
        gbc.writeMem(0xce12, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x9599, gbc.sp());
        EXPECT(0xce14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce12));
        EXPECT(0x31, gbc.readMem(0xce13));
        // CB 31 019F
        gbc.setState(0x94a5, 0xdfb1, 0x8f50, 0x44d1, 0x97f, 0x749, 0x1, 0x0);
        gbc.writeMem(0x94a5, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xdfb1, gbc.sp());
        EXPECT(0x94a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94a5));
        EXPECT(0x31, gbc.readMem(0x94a6));
        // CB 31 01A0
        gbc.setState(0x1b79, 0x6225, 0x7100, 0x98c5, 0x491b, 0x9cc1, 0x0, 0x1);
        gbc.writeMem(0x1b79, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x6225, gbc.sp());
        EXPECT(0x1b7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 01A1
        gbc.setState(0x1b3f, 0xf1f2, 0x95b0, 0xe947, 0xb200, 0xe75, 0x1, 0x0);
        gbc.writeMem(0x1b3f, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xf1f2, gbc.sp());
        EXPECT(0x1b41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 01A4
        gbc.setState(0x5bda, 0xb297, 0x27d0, 0x5e55, 0x8546, 0xcca2, 0x1, 0x0);
        gbc.writeMem(0x5bda, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xb297, gbc.sp());
        EXPECT(0x5bdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 01A5
        gbc.setState(0xc7db, 0xd159, 0x2940, 0x8b92, 0x7ea2, 0x8699, 0x1, 0x0);
        gbc.writeMem(0xc7db, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xd159, gbc.sp());
        EXPECT(0xc7dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7db));
        EXPECT(0x31, gbc.readMem(0xc7dc));
        // CB 31 01A6
        gbc.setState(0x4568, 0x517f, 0x8880, 0xc19a, 0x478d, 0x8d0, 0x0, 0x0);
        gbc.writeMem(0x4568, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x517f, gbc.sp());
        EXPECT(0x456a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 01A8
        gbc.setState(0x77c3, 0x5046, 0x53b0, 0xf77d, 0x6d49, 0x3c99, 0x0, 0x1);
        gbc.writeMem(0x77c3, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x5046, gbc.sp());
        EXPECT(0x77c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 01A9
        gbc.setState(0x778f, 0x80a9, 0x17f0, 0x12d3, 0xe564, 0xfa1a, 0x1, 0x0);
        gbc.writeMem(0x778f, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x80a9, gbc.sp());
        EXPECT(0x7791, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 01AA
        gbc.setState(0xbe2a, 0xfa3c, 0xb980, 0xf512, 0xb094, 0x36, 0x1, 0x0);
        gbc.writeMem(0xbe2a, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xfa3c, gbc.sp());
        EXPECT(0xbe2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe2a));
        EXPECT(0x31, gbc.readMem(0xbe2b));
        // CB 31 01AB
        gbc.setState(0xc24b, 0xaa91, 0xb0d0, 0x6c5f, 0xee7d, 0x5e22, 0x0, 0x1);
        gbc.writeMem(0xc24b, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xaa91, gbc.sp());
        EXPECT(0xc24d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc24b));
        EXPECT(0x31, gbc.readMem(0xc24c));
        // CB 31 01AC
        gbc.setState(0xd8b9, 0x2ea7, 0x9a00, 0xebaa, 0x7fdf, 0xd851, 0x0, 0x1);
        gbc.writeMem(0xd8b9, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x2ea7, gbc.sp());
        EXPECT(0xd8bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8b9));
        EXPECT(0x31, gbc.readMem(0xd8ba));
        // CB 31 01AD
        gbc.setState(0x8528, 0x4d36, 0x6080, 0xb873, 0xb32f, 0xbb97, 0x0, 0x1);
        gbc.writeMem(0x8528, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x4d36, gbc.sp());
        EXPECT(0x852a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8528));
        EXPECT(0x31, gbc.readMem(0x8529));
        // CB 31 01AE
        gbc.setState(0x4ad1, 0x1662, 0xb9b0, 0xa21e, 0x9edb, 0x5615, 0x1, 0x0);
        gbc.writeMem(0x4ad1, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x1662, gbc.sp());
        EXPECT(0x4ad3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 01AF
        gbc.setState(0x69b6, 0x26fc, 0xc6c0, 0x21ae, 0xc58b, 0x5463, 0x0, 0x1);
        gbc.writeMem(0x69b6, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x26fc, gbc.sp());
        EXPECT(0x69b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 01B0
        gbc.setState(0x9632, 0x2743, 0x4680, 0x53bf, 0x9035, 0x2455, 0x0, 0x0);
        gbc.writeMem(0x9632, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x2743, gbc.sp());
        EXPECT(0x9634, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9632));
        EXPECT(0x31, gbc.readMem(0x9633));
        // CB 31 01B1
        gbc.setState(0xe213, 0x5dd1, 0xaf00, 0x42d9, 0xcb8, 0xd479, 0x1, 0x1);
        gbc.writeMem(0xe213, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x5dd1, gbc.sp());
        EXPECT(0xe215, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe213));
        EXPECT(0x31, gbc.readMem(0xe214));
        // CB 31 01B2
        gbc.setState(0xcf0f, 0x62a, 0xaa20, 0x285a, 0x5779, 0x337c, 0x0, 0x1);
        gbc.writeMem(0xcf0f, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x62a, gbc.sp());
        EXPECT(0xcf11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf0f));
        EXPECT(0x31, gbc.readMem(0xcf10));
        // CB 31 01B3
        gbc.setState(0xee72, 0xc2b3, 0x2990, 0x9304, 0xda88, 0x1c63, 0x0, 0x0);
        gbc.writeMem(0xee72, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xc2b3, gbc.sp());
        EXPECT(0xee74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee72));
        EXPECT(0x31, gbc.readMem(0xee73));
        // CB 31 01B4
        gbc.setState(0xc52, 0x8f43, 0x1580, 0xf912, 0x32c3, 0xf800, 0x1, 0x0);
        gbc.writeMem(0xc52, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x8f43, gbc.sp());
        EXPECT(0xc54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 01B5
        gbc.setState(0x32ff, 0x1916, 0x30c0, 0x17d6, 0x371b, 0x2312, 0x1, 0x0);
        gbc.writeMem(0x32ff, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x1916, gbc.sp());
        EXPECT(0x3301, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 01B6
        gbc.setState(0xd526, 0xa048, 0x82f0, 0x1050, 0x90fb, 0xe8f1, 0x1, 0x1);
        gbc.writeMem(0xd526, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xa048, gbc.sp());
        EXPECT(0xd528, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd526));
        EXPECT(0x31, gbc.readMem(0xd527));
        // CB 31 01B7
        gbc.setState(0x5ad3, 0xfe3c, 0xabd0, 0x3873, 0x6a09, 0xbfb9, 0x1, 0x0);
        gbc.writeMem(0x5ad3, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xfe3c, gbc.sp());
        EXPECT(0x5ad5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 01B8
        gbc.setState(0xbb29, 0x7626, 0x6510, 0x59b0, 0x2a92, 0x7f5a, 0x1, 0x1);
        gbc.writeMem(0xbb29, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x7626, gbc.sp());
        EXPECT(0xbb2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb29));
        EXPECT(0x31, gbc.readMem(0xbb2a));
        // CB 31 01B9
        gbc.setState(0x3e30, 0x1849, 0x5300, 0xe3e, 0x3db4, 0x7d93, 0x1, 0x1);
        gbc.writeMem(0x3e30, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x1849, gbc.sp());
        EXPECT(0x3e32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 01BA
        gbc.setState(0x98b2, 0xeb81, 0x70f0, 0xbb0, 0x5e86, 0x7916, 0x1, 0x1);
        gbc.writeMem(0x98b2, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xeb81, gbc.sp());
        EXPECT(0x98b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98b2));
        EXPECT(0x31, gbc.readMem(0x98b3));
        // CB 31 01BB
        gbc.setState(0xdbbc, 0x6c14, 0x18d0, 0x74f0, 0x6cd5, 0x99b1, 0x1, 0x1);
        gbc.writeMem(0xdbbc, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x6c14, gbc.sp());
        EXPECT(0xdbbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbbc));
        EXPECT(0x31, gbc.readMem(0xdbbd));
        // CB 31 01BC
        gbc.setState(0x61, 0xb6cd, 0x3360, 0x9058, 0xd151, 0x5221, 0x0, 0x1);
        gbc.writeMem(0x61, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xb6cd, gbc.sp());
        EXPECT(0x63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 01BD
        gbc.setState(0x45bf, 0x7e0a, 0x67e0, 0x9252, 0xa54d, 0x8c6c, 0x0, 0x1);
        gbc.writeMem(0x45bf, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x7e0a, gbc.sp());
        EXPECT(0x45c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 01BE
        gbc.setState(0x1b60, 0x3433, 0xc110, 0x75c, 0x51b2, 0x1262, 0x1, 0x0);
        gbc.writeMem(0x1b60, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x3433, gbc.sp());
        EXPECT(0x1b62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 01BF
        gbc.setState(0x1df3, 0x8ff9, 0x9ca0, 0xc151, 0xe112, 0x70b2, 0x0, 0x1);
        gbc.writeMem(0x1df3, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x8ff9, gbc.sp());
        EXPECT(0x1df5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 01C0
        gbc.setState(0x7f62, 0xb831, 0x7e60, 0xc115, 0xb0a2, 0x54f4, 0x1, 0x0);
        gbc.writeMem(0x7f62, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xb831, gbc.sp());
        EXPECT(0x7f64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 01C1
        gbc.setState(0x82e8, 0xf5df, 0x4510, 0x3a63, 0x45a4, 0x984e, 0x0, 0x1);
        gbc.writeMem(0x82e8, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xf5df, gbc.sp());
        EXPECT(0x82ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82e8));
        EXPECT(0x31, gbc.readMem(0x82e9));
        // CB 31 01C2
        gbc.setState(0x64e2, 0xca18, 0x6260, 0x61db, 0x1b99, 0x9e3c, 0x1, 0x0);
        gbc.writeMem(0x64e2, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xca18, gbc.sp());
        EXPECT(0x64e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 01C3
        gbc.setState(0x4773, 0xf662, 0xfe90, 0x559b, 0xde0, 0xa8c0, 0x0, 0x0);
        gbc.writeMem(0x4773, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xf662, gbc.sp());
        EXPECT(0x4775, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 01C4
        gbc.setState(0x4f27, 0xd2eb, 0x7020, 0x32d3, 0xb4f, 0xdd6c, 0x0, 0x0);
        gbc.writeMem(0x4f27, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xd2eb, gbc.sp());
        EXPECT(0x4f29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 01C5
        gbc.setState(0x72cf, 0x9eb0, 0x7220, 0x7425, 0x7773, 0xd4c2, 0x1, 0x1);
        gbc.writeMem(0x72cf, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x9eb0, gbc.sp());
        EXPECT(0x72d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 01C6
        gbc.setState(0x57c0, 0x8a16, 0x4140, 0x81a8, 0xe2ab, 0xb017, 0x0, 0x1);
        gbc.writeMem(0x57c0, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x8a16, gbc.sp());
        EXPECT(0x57c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 01C7
        gbc.setState(0xee14, 0x4d79, 0x5cc0, 0xa06e, 0x42eb, 0x9cfe, 0x1, 0x1);
        gbc.writeMem(0xee14, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x4d79, gbc.sp());
        EXPECT(0xee16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee14));
        EXPECT(0x31, gbc.readMem(0xee15));
        // CB 31 01C8
        gbc.setState(0x4a87, 0xad09, 0x2340, 0x15c6, 0x62d, 0x2fae, 0x1, 0x1);
        gbc.writeMem(0x4a87, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xad09, gbc.sp());
        EXPECT(0x4a89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 01C9
        gbc.setState(0x67bb, 0x1f21, 0xca30, 0xdcf7, 0xfd4d, 0xbf84, 0x0, 0x0);
        gbc.writeMem(0x67bb, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x1f21, gbc.sp());
        EXPECT(0x67bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 01CA
        gbc.setState(0x51d3, 0xa6fa, 0x6830, 0x3d48, 0xbc05, 0xa64d, 0x0, 0x0);
        gbc.writeMem(0x51d3, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xa6fa, gbc.sp());
        EXPECT(0x51d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 01CB
        gbc.setState(0x7fda, 0xdf34, 0x3a20, 0x1592, 0x97b9, 0x7b8c, 0x0, 0x1);
        gbc.writeMem(0x7fda, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xdf34, gbc.sp());
        EXPECT(0x7fdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 01CC
        gbc.setState(0x39bc, 0xe4b4, 0x1110, 0x611d, 0xe847, 0xaa05, 0x1, 0x1);
        gbc.writeMem(0x39bc, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xe4b4, gbc.sp());
        EXPECT(0x39be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 01CD
        gbc.setState(0x1d7f, 0xfee5, 0xedf0, 0xf2ca, 0x9578, 0x710a, 0x1, 0x0);
        gbc.writeMem(0x1d7f, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xfee5, gbc.sp());
        EXPECT(0x1d81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 01CE
        gbc.setState(0xa4ec, 0xde12, 0xec10, 0x41a0, 0x1f19, 0x5835, 0x1, 0x1);
        gbc.writeMem(0xa4ec, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xde12, gbc.sp());
        EXPECT(0xa4ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4ec));
        EXPECT(0x31, gbc.readMem(0xa4ed));
        // CB 31 01CF
        gbc.setState(0x194b, 0x4d11, 0xb720, 0xeca5, 0x1631, 0x5c16, 0x0, 0x0);
        gbc.writeMem(0x194b, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x4d11, gbc.sp());
        EXPECT(0x194d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 01D0
        gbc.setState(0x1e28, 0x8980, 0x2440, 0xb4c3, 0xd6fd, 0x2ddb, 0x1, 0x1);
        gbc.writeMem(0x1e28, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x8980, gbc.sp());
        EXPECT(0x1e2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 01D1
        gbc.setState(0x37f7, 0xd9ff, 0xcac0, 0x872e, 0xd735, 0x4b97, 0x0, 0x1);
        gbc.writeMem(0x37f7, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xd9ff, gbc.sp());
        EXPECT(0x37f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 01D2
        gbc.setState(0xc867, 0x2483, 0x6c60, 0x8a46, 0x20e8, 0x4cc5, 0x1, 0x1);
        gbc.writeMem(0xc867, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x2483, gbc.sp());
        EXPECT(0xc869, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc867));
        EXPECT(0x31, gbc.readMem(0xc868));
        // CB 31 01D3
        gbc.setState(0x4481, 0x4776, 0x1b90, 0x2d41, 0x417e, 0x9a06, 0x1, 0x1);
        gbc.writeMem(0x4481, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x4776, gbc.sp());
        EXPECT(0x4483, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 01D4
        gbc.setState(0xc07d, 0x5ac, 0xa1e0, 0x1e8f, 0x837d, 0xbfcb, 0x1, 0x0);
        gbc.writeMem(0xc07d, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x5ac, gbc.sp());
        EXPECT(0xc07f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc07d));
        EXPECT(0x31, gbc.readMem(0xc07e));
        // CB 31 01D5
        gbc.setState(0xcdc8, 0xb39f, 0xe160, 0xae73, 0x6603, 0x105a, 0x1, 0x0);
        gbc.writeMem(0xcdc8, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xb39f, gbc.sp());
        EXPECT(0xcdca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdc8));
        EXPECT(0x31, gbc.readMem(0xcdc9));
        // CB 31 01D6
        gbc.setState(0x520a, 0x77d2, 0xca00, 0xc451, 0x6019, 0xdf7, 0x0, 0x0);
        gbc.writeMem(0x520a, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x77d2, gbc.sp());
        EXPECT(0x520c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 01D7
        gbc.setState(0x711a, 0x946c, 0xa220, 0x7de2, 0x12e3, 0x308, 0x1, 0x1);
        gbc.writeMem(0x711a, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x946c, gbc.sp());
        EXPECT(0x711c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 01D8
        gbc.setState(0xb8f9, 0xf3c5, 0x39a0, 0xabf5, 0x36bd, 0x22bb, 0x1, 0x1);
        gbc.writeMem(0xb8f9, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xf3c5, gbc.sp());
        EXPECT(0xb8fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8f9));
        EXPECT(0x31, gbc.readMem(0xb8fa));
        // CB 31 01D9
        gbc.setState(0xeb1e, 0xaf8f, 0x9300, 0xd47c, 0xd7cf, 0x69fc, 0x0, 0x1);
        gbc.writeMem(0xeb1e, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xaf8f, gbc.sp());
        EXPECT(0xeb20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb1e));
        EXPECT(0x31, gbc.readMem(0xeb1f));
        // CB 31 01DA
        gbc.setState(0x9781, 0x65d9, 0xf6b0, 0xacf9, 0x3522, 0xa7d5, 0x0, 0x0);
        gbc.writeMem(0x9781, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x65d9, gbc.sp());
        EXPECT(0x9783, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9781));
        EXPECT(0x31, gbc.readMem(0x9782));
        // CB 31 01DB
        gbc.setState(0xbfce, 0xa9d2, 0x2280, 0x7151, 0x390c, 0x5765, 0x0, 0x0);
        gbc.writeMem(0xbfce, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xa9d2, gbc.sp());
        EXPECT(0xbfd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfce));
        EXPECT(0x31, gbc.readMem(0xbfcf));
        // CB 31 01DC
        gbc.setState(0x9818, 0xf46b, 0x9370, 0xc376, 0x6010, 0xa9e5, 0x1, 0x0);
        gbc.writeMem(0x9818, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xf46b, gbc.sp());
        EXPECT(0x981a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9818));
        EXPECT(0x31, gbc.readMem(0x9819));
        // CB 31 01DD
        gbc.setState(0x24e1, 0x1641, 0xd490, 0xe090, 0x770f, 0x17b9, 0x0, 0x1);
        gbc.writeMem(0x24e1, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x1641, gbc.sp());
        EXPECT(0x24e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 01DE
        gbc.setState(0x903a, 0x4484, 0x9b70, 0xc653, 0xcfb4, 0xc664, 0x0, 0x1);
        gbc.writeMem(0x903a, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x4484, gbc.sp());
        EXPECT(0x903c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x903a));
        EXPECT(0x31, gbc.readMem(0x903b));
        // CB 31 01E0
        gbc.setState(0xb2a9, 0x12c0, 0x180, 0xa86c, 0x252c, 0x4983, 0x1, 0x1);
        gbc.writeMem(0xb2a9, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x12c0, gbc.sp());
        EXPECT(0xb2ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2a9));
        EXPECT(0x31, gbc.readMem(0xb2aa));
        // CB 31 01E1
        gbc.setState(0xb57f, 0xea5b, 0xd9e0, 0x308a, 0xfa59, 0x727, 0x0, 0x0);
        gbc.writeMem(0xb57f, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xea5b, gbc.sp());
        EXPECT(0xb581, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb57f));
        EXPECT(0x31, gbc.readMem(0xb580));
        // CB 31 01E2
        gbc.setState(0xecab, 0x7fcb, 0x7150, 0xa13b, 0x44b6, 0xe7f4, 0x0, 0x0);
        gbc.writeMem(0xecab, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x7fcb, gbc.sp());
        EXPECT(0xecad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecab));
        EXPECT(0x31, gbc.readMem(0xecac));
        // CB 31 01E3
        gbc.setState(0x88c7, 0x1c01, 0xd060, 0xfcf5, 0x2c9e, 0x1bb8, 0x0, 0x0);
        gbc.writeMem(0x88c7, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x1c01, gbc.sp());
        EXPECT(0x88c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88c7));
        EXPECT(0x31, gbc.readMem(0x88c8));
        // CB 31 01E4
        gbc.setState(0xa908, 0xca15, 0x670, 0xd6aa, 0xe90a, 0x38ac, 0x1, 0x0);
        gbc.writeMem(0xa908, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xca15, gbc.sp());
        EXPECT(0xa90a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa908));
        EXPECT(0x31, gbc.readMem(0xa909));
        // CB 31 01E5
        gbc.setState(0x2fa0, 0x9679, 0x6ff0, 0x2ebd, 0xc2cb, 0x90b3, 0x1, 0x0);
        gbc.writeMem(0x2fa0, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x9679, gbc.sp());
        EXPECT(0x2fa2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 01E6
        gbc.setState(0x8855, 0x391d, 0x26f0, 0xf0e6, 0xfacb, 0x584f, 0x0, 0x0);
        gbc.writeMem(0x8855, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x391d, gbc.sp());
        EXPECT(0x8857, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8855));
        EXPECT(0x31, gbc.readMem(0x8856));
        // CB 31 01E7
        gbc.setState(0xecbd, 0xa31, 0xa420, 0xdc8c, 0x59ce, 0xf972, 0x0, 0x1);
        gbc.writeMem(0xecbd, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xa31, gbc.sp());
        EXPECT(0xecbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecbd));
        EXPECT(0x31, gbc.readMem(0xecbe));
        // CB 31 01E8
        gbc.setState(0x395c, 0xf727, 0xdc90, 0x9567, 0xbc96, 0x7207, 0x0, 0x1);
        gbc.writeMem(0x395c, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xf727, gbc.sp());
        EXPECT(0x395e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 01E9
        gbc.setState(0x3a78, 0xb3c5, 0x82d0, 0x5e8f, 0x2a8d, 0xc5a0, 0x0, 0x1);
        gbc.writeMem(0x3a78, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xb3c5, gbc.sp());
        EXPECT(0x3a7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 01EA
        gbc.setState(0x41ab, 0x1dd, 0xd490, 0xd7b6, 0x6ffe, 0xc6ad, 0x0, 0x1);
        gbc.writeMem(0x41ab, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x1dd, gbc.sp());
        EXPECT(0x41ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 01EB
        gbc.setState(0x233f, 0x2c86, 0xdf60, 0x49b6, 0x693, 0xfc52, 0x1, 0x0);
        gbc.writeMem(0x233f, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x2c86, gbc.sp());
        EXPECT(0x2341, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 01EC
        gbc.setState(0x3099, 0x84af, 0xd240, 0xb390, 0x1c0c, 0x38c1, 0x1, 0x0);
        gbc.writeMem(0x3099, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x84af, gbc.sp());
        EXPECT(0x309b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 01ED
        gbc.setState(0xe15e, 0x8c59, 0xbac0, 0x8fd5, 0x1e2d, 0x2041, 0x1, 0x1);
        gbc.writeMem(0xe15e, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x8c59, gbc.sp());
        EXPECT(0xe160, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe15e));
        EXPECT(0x31, gbc.readMem(0xe15f));
        // CB 31 01EE
        gbc.setState(0xc8a2, 0xc9d, 0x6430, 0x36b1, 0xdd76, 0x29a3, 0x0, 0x1);
        gbc.writeMem(0xc8a2, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xc9d, gbc.sp());
        EXPECT(0xc8a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8a2));
        EXPECT(0x31, gbc.readMem(0xc8a3));
        // CB 31 01EF
        gbc.setState(0x2600, 0xfa88, 0x8510, 0xa540, 0xe13e, 0x8ead, 0x0, 0x0);
        gbc.writeMem(0x2600, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xfa88, gbc.sp());
        EXPECT(0x2602, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 01F0
        gbc.setState(0x4265, 0xff39, 0xcc50, 0x2478, 0x70f1, 0x5a38, 0x0, 0x1);
        gbc.writeMem(0x4265, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xff39, gbc.sp());
        EXPECT(0x4267, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 01F1
        gbc.setState(0x49dc, 0x994e, 0xd110, 0x23db, 0x90a1, 0xe11d, 0x1, 0x1);
        gbc.writeMem(0x49dc, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x994e, gbc.sp());
        EXPECT(0x49de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 01F2
        gbc.setState(0x2afe, 0xc2c9, 0xec60, 0x5b7d, 0x1ff7, 0x7046, 0x0, 0x0);
        gbc.writeMem(0x2afe, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xc2c9, gbc.sp());
        EXPECT(0x2b00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 01F3
        gbc.setState(0xa9b7, 0x7b3b, 0x67f0, 0xcd7d, 0x4c2b, 0x3ddb, 0x0, 0x1);
        gbc.writeMem(0xa9b7, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x7b3b, gbc.sp());
        EXPECT(0xa9b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9b7));
        EXPECT(0x31, gbc.readMem(0xa9b8));
        // CB 31 01F4
        gbc.setState(0x9103, 0xd67, 0x8040, 0x1477, 0x659d, 0xce6e, 0x1, 0x0);
        gbc.writeMem(0x9103, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xd67, gbc.sp());
        EXPECT(0x9105, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9103));
        EXPECT(0x31, gbc.readMem(0x9104));
        // CB 31 01F5
        gbc.setState(0xd96c, 0x52fd, 0xd00, 0x3dfc, 0xd3ed, 0xad42, 0x1, 0x1);
        gbc.writeMem(0xd96c, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x52fd, gbc.sp());
        EXPECT(0xd96e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd96c));
        EXPECT(0x31, gbc.readMem(0xd96d));
        // CB 31 01F6
        gbc.setState(0xea14, 0xa16c, 0x3c60, 0x9374, 0x25ae, 0x6999, 0x0, 0x1);
        gbc.writeMem(0xea14, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xa16c, gbc.sp());
        EXPECT(0xea16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea14));
        EXPECT(0x31, gbc.readMem(0xea15));
        // CB 31 01F7
        gbc.setState(0xbf39, 0xde90, 0xcd90, 0x1e7d, 0x2221, 0xb8ed, 0x1, 0x0);
        gbc.writeMem(0xbf39, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xde90, gbc.sp());
        EXPECT(0xbf3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf39));
        EXPECT(0x31, gbc.readMem(0xbf3a));
        // CB 31 01F8
        gbc.setState(0x4cd8, 0x80ad, 0x1d50, 0xbf9d, 0x192f, 0xb0ea, 0x1, 0x1);
        gbc.writeMem(0x4cd8, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x80ad, gbc.sp());
        EXPECT(0x4cda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 01F9
        gbc.setState(0xb830, 0xa72a, 0xd8f0, 0x44ef, 0xd85, 0x59f3, 0x1, 0x0);
        gbc.writeMem(0xb830, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xa72a, gbc.sp());
        EXPECT(0xb832, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb830));
        EXPECT(0x31, gbc.readMem(0xb831));
        // CB 31 01FA
        gbc.setState(0xdee8, 0x2992, 0x2e60, 0xdcda, 0x67dd, 0x26c, 0x1, 0x0);
        gbc.writeMem(0xdee8, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x2992, gbc.sp());
        EXPECT(0xdeea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdee8));
        EXPECT(0x31, gbc.readMem(0xdee9));
        // CB 31 01FB
        gbc.setState(0x96e7, 0xe439, 0xe00, 0xbf07, 0xf4f8, 0x732c, 0x1, 0x0);
        gbc.writeMem(0x96e7, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xe439, gbc.sp());
        EXPECT(0x96e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96e7));
        EXPECT(0x31, gbc.readMem(0x96e8));
        // CB 31 01FC
        gbc.setState(0x66c, 0xebda, 0xea70, 0x3946, 0xb75, 0xdf03, 0x0, 0x1);
        gbc.writeMem(0x66c, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xebda, gbc.sp());
        EXPECT(0x66e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 01FD
        gbc.setState(0x8f2d, 0xae82, 0x9ce0, 0x3d05, 0x9348, 0x7c74, 0x1, 0x1);
        gbc.writeMem(0x8f2d, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xae82, gbc.sp());
        EXPECT(0x8f2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f2d));
        EXPECT(0x31, gbc.readMem(0x8f2e));
        // CB 31 01FE
        gbc.setState(0x641f, 0xbc5b, 0xca10, 0xda9e, 0x52f5, 0xb2db, 0x1, 0x0);
        gbc.writeMem(0x641f, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xbc5b, gbc.sp());
        EXPECT(0x6421, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 01FF
        gbc.setState(0x20a4, 0x880d, 0x29f0, 0x694a, 0x32d7, 0xf81f, 0x1, 0x1);
        gbc.writeMem(0x20a4, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x880d, gbc.sp());
        EXPECT(0x20a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0200
        gbc.setState(0x17d4, 0x2d72, 0x63e0, 0x6e8a, 0x103a, 0x6f87, 0x1, 0x1);
        gbc.writeMem(0x17d4, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x2d72, gbc.sp());
        EXPECT(0x17d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0201
        gbc.setState(0x9df5, 0xb425, 0x6500, 0xc0b7, 0xf5c0, 0xd3fc, 0x0, 0x1);
        gbc.writeMem(0x9df5, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xb425, gbc.sp());
        EXPECT(0x9df7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9df5));
        EXPECT(0x31, gbc.readMem(0x9df6));
        // CB 31 0202
        gbc.setState(0x9bbf, 0x1b03, 0x90c0, 0x10a7, 0x1602, 0xea6a, 0x1, 0x1);
        gbc.writeMem(0x9bbf, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x1b03, gbc.sp());
        EXPECT(0x9bc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bbf));
        EXPECT(0x31, gbc.readMem(0x9bc0));
        // CB 31 0203
        gbc.setState(0xcb2e, 0x810f, 0xef50, 0x46e8, 0xbbfd, 0xf848, 0x1, 0x0);
        gbc.writeMem(0xcb2e, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x810f, gbc.sp());
        EXPECT(0xcb30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb2e));
        EXPECT(0x31, gbc.readMem(0xcb2f));
        // CB 31 0204
        gbc.setState(0x1aad, 0xfd9a, 0x8560, 0x949c, 0x3e48, 0x1e45, 0x0, 0x1);
        gbc.writeMem(0x1aad, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xfd9a, gbc.sp());
        EXPECT(0x1aaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0205
        gbc.setState(0xa072, 0xf94b, 0xf660, 0xd67f, 0x9425, 0x275b, 0x1, 0x0);
        gbc.writeMem(0xa072, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xf94b, gbc.sp());
        EXPECT(0xa074, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa072));
        EXPECT(0x31, gbc.readMem(0xa073));
        // CB 31 0206
        gbc.setState(0xcccd, 0xf03f, 0x2160, 0x2c2d, 0x9ca1, 0x37d0, 0x0, 0x0);
        gbc.writeMem(0xcccd, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xf03f, gbc.sp());
        EXPECT(0xcccf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcccd));
        EXPECT(0x31, gbc.readMem(0xccce));
        // CB 31 0207
        gbc.setState(0x4c8, 0xfdae, 0x6dc0, 0xda04, 0xab6f, 0x3ba, 0x0, 0x0);
        gbc.writeMem(0x4c8, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xfdae, gbc.sp());
        EXPECT(0x4ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0208
        gbc.setState(0x2d6b, 0x6b9b, 0xc770, 0xb17a, 0x22cc, 0xa4e5, 0x1, 0x0);
        gbc.writeMem(0x2d6b, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x6b9b, gbc.sp());
        EXPECT(0x2d6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0209
        gbc.setState(0xa67b, 0xf76, 0x19d0, 0x657d, 0x441f, 0x91ab, 0x0, 0x1);
        gbc.writeMem(0xa67b, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xf76, gbc.sp());
        EXPECT(0xa67d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa67b));
        EXPECT(0x31, gbc.readMem(0xa67c));
        // CB 31 020A
        gbc.setState(0x72d8, 0x43cf, 0xa720, 0x5201, 0x5c69, 0x49b, 0x0, 0x1);
        gbc.writeMem(0x72d8, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x43cf, gbc.sp());
        EXPECT(0x72da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 020B
        gbc.setState(0xd7b5, 0xc165, 0x5f70, 0xa9c8, 0x7eba, 0xf89a, 0x0, 0x1);
        gbc.writeMem(0xd7b5, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xc165, gbc.sp());
        EXPECT(0xd7b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7b5));
        EXPECT(0x31, gbc.readMem(0xd7b6));
        // CB 31 020C
        gbc.setState(0x35a7, 0xd085, 0xbc0, 0x79fb, 0x3bc8, 0x6473, 0x0, 0x0);
        gbc.writeMem(0x35a7, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xd085, gbc.sp());
        EXPECT(0x35a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 020F
        gbc.setState(0xda60, 0xfeb6, 0xa870, 0x1a1b, 0x2ad4, 0xb298, 0x0, 0x1);
        gbc.writeMem(0xda60, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xfeb6, gbc.sp());
        EXPECT(0xda62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda60));
        EXPECT(0x31, gbc.readMem(0xda61));
        // CB 31 0210
        gbc.setState(0x9f40, 0x5760, 0xf30, 0x753, 0x2b4d, 0xa316, 0x0, 0x1);
        gbc.writeMem(0x9f40, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x5760, gbc.sp());
        EXPECT(0x9f42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f40));
        EXPECT(0x31, gbc.readMem(0x9f41));
        // CB 31 0211
        gbc.setState(0x1724, 0xb2bf, 0x4380, 0x41cb, 0xd25, 0x5459, 0x0, 0x0);
        gbc.writeMem(0x1724, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xb2bf, gbc.sp());
        EXPECT(0x1726, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0212
        gbc.setState(0x8f7, 0x95e7, 0xa6f0, 0x873c, 0xaba5, 0x37f6, 0x1, 0x1);
        gbc.writeMem(0x8f7, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x95e7, gbc.sp());
        EXPECT(0x8f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0213
        gbc.setState(0x2f51, 0x2fee, 0xd00, 0x7fc5, 0xc7c1, 0x5243, 0x0, 0x1);
        gbc.writeMem(0x2f51, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x2fee, gbc.sp());
        EXPECT(0x2f53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0214
        gbc.setState(0x682b, 0x5fa8, 0xbd10, 0x7fc2, 0x376e, 0x6dd9, 0x1, 0x1);
        gbc.writeMem(0x682b, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x5fa8, gbc.sp());
        EXPECT(0x682d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0215
        gbc.setState(0x9271, 0x2e67, 0x54e0, 0xc745, 0x86a8, 0x38f0, 0x1, 0x0);
        gbc.writeMem(0x9271, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x2e67, gbc.sp());
        EXPECT(0x9273, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9271));
        EXPECT(0x31, gbc.readMem(0x9272));
        // CB 31 0216
        gbc.setState(0x3e37, 0xb058, 0x2260, 0x695b, 0xe157, 0x41df, 0x1, 0x0);
        gbc.writeMem(0x3e37, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xb058, gbc.sp());
        EXPECT(0x3e39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0217
        gbc.setState(0xa569, 0x9977, 0x47a0, 0x135, 0xb458, 0xaf50, 0x1, 0x1);
        gbc.writeMem(0xa569, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x9977, gbc.sp());
        EXPECT(0xa56b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa569));
        EXPECT(0x31, gbc.readMem(0xa56a));
        // CB 31 0218
        gbc.setState(0x490d, 0x2a79, 0xea50, 0x1c62, 0x6f68, 0xe34c, 0x1, 0x0);
        gbc.writeMem(0x490d, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x2a79, gbc.sp());
        EXPECT(0x490f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0219
        gbc.setState(0x51c8, 0x5f0f, 0x1240, 0x15ab, 0xc54c, 0x561b, 0x0, 0x0);
        gbc.writeMem(0x51c8, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x5f0f, gbc.sp());
        EXPECT(0x51ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 021A
        gbc.setState(0x5d04, 0x3990, 0xac0, 0xa8c9, 0x7cd6, 0xd18f, 0x0, 0x1);
        gbc.writeMem(0x5d04, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x3990, gbc.sp());
        EXPECT(0x5d06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 021B
        gbc.setState(0xe2a7, 0xade0, 0x4a90, 0xd7ba, 0xde3f, 0xe32d, 0x1, 0x0);
        gbc.writeMem(0xe2a7, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xade0, gbc.sp());
        EXPECT(0xe2a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2a7));
        EXPECT(0x31, gbc.readMem(0xe2a8));
        // CB 31 021C
        gbc.setState(0xe319, 0x9e58, 0xd3e0, 0x6aa7, 0x2583, 0x126f, 0x1, 0x1);
        gbc.writeMem(0xe319, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x9e58, gbc.sp());
        EXPECT(0xe31b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe319));
        EXPECT(0x31, gbc.readMem(0xe31a));
        // CB 31 021D
        gbc.setState(0xc3f8, 0x8d0, 0xe260, 0xb5e8, 0x395f, 0x349d, 0x1, 0x0);
        gbc.writeMem(0xc3f8, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x8d0, gbc.sp());
        EXPECT(0xc3fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3f8));
        EXPECT(0x31, gbc.readMem(0xc3f9));
        // CB 31 021E
        gbc.setState(0xcd88, 0xe29d, 0x12c0, 0xb24e, 0xc8c5, 0x9ae7, 0x1, 0x0);
        gbc.writeMem(0xcd88, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xe29d, gbc.sp());
        EXPECT(0xcd8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd88));
        EXPECT(0x31, gbc.readMem(0xcd89));
        // CB 31 021F
        gbc.setState(0x915c, 0xc8d6, 0xb90, 0x9b66, 0xbee9, 0x5525, 0x1, 0x1);
        gbc.writeMem(0x915c, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xc8d6, gbc.sp());
        EXPECT(0x915e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x915c));
        EXPECT(0x31, gbc.readMem(0x915d));
        // CB 31 0220
        gbc.setState(0x2ebb, 0x73ab, 0x7db0, 0xf971, 0x7aa5, 0xe61d, 0x0, 0x1);
        gbc.writeMem(0x2ebb, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x73ab, gbc.sp());
        EXPECT(0x2ebd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0221
        gbc.setState(0xe0ad, 0x3a85, 0xc240, 0x1101, 0x3184, 0x514e, 0x0, 0x1);
        gbc.writeMem(0xe0ad, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x3a85, gbc.sp());
        EXPECT(0xe0af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0ad));
        EXPECT(0x31, gbc.readMem(0xe0ae));
        // CB 31 0222
        gbc.setState(0x42d0, 0x3483, 0x1800, 0x1b44, 0x830d, 0x2dce, 0x0, 0x1);
        gbc.writeMem(0x42d0, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x3483, gbc.sp());
        EXPECT(0x42d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0223
        gbc.setState(0x7c06, 0x361, 0x7580, 0x6df1, 0x9740, 0xecac, 0x1, 0x1);
        gbc.writeMem(0x7c06, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x361, gbc.sp());
        EXPECT(0x7c08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0224
        gbc.setState(0x2238, 0x5111, 0xc700, 0x2fdc, 0x342e, 0xbacd, 0x0, 0x1);
        gbc.writeMem(0x2238, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x5111, gbc.sp());
        EXPECT(0x223a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0225
        gbc.setState(0xc1b5, 0xe4d7, 0xd460, 0xe3ca, 0x995e, 0xf136, 0x0, 0x0);
        gbc.writeMem(0xc1b5, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xe4d7, gbc.sp());
        EXPECT(0xc1b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1b5));
        EXPECT(0x31, gbc.readMem(0xc1b6));
        // CB 31 0226
        gbc.setState(0x5f10, 0x2017, 0xa730, 0x96d6, 0x2974, 0xd6c2, 0x1, 0x1);
        gbc.writeMem(0x5f10, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x2017, gbc.sp());
        EXPECT(0x5f12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0228
        gbc.setState(0x2084, 0x1bfa, 0x4b70, 0x22d6, 0xb1b3, 0x72ef, 0x1, 0x0);
        gbc.writeMem(0x2084, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x1bfa, gbc.sp());
        EXPECT(0x2086, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0229
        gbc.setState(0x8eff, 0xd13e, 0x3e90, 0xb353, 0x9060, 0x226b, 0x0, 0x1);
        gbc.writeMem(0x8eff, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xd13e, gbc.sp());
        EXPECT(0x8f01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8eff));
        EXPECT(0x31, gbc.readMem(0x8f00));
        // CB 31 022A
        gbc.setState(0x426a, 0xb9fd, 0x6eb0, 0xbb0a, 0xb406, 0x653b, 0x0, 0x0);
        gbc.writeMem(0x426a, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xb9fd, gbc.sp());
        EXPECT(0x426c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 022B
        gbc.setState(0xa62d, 0x61d4, 0x160, 0xd682, 0x3b71, 0xb38c, 0x1, 0x0);
        gbc.writeMem(0xa62d, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x61d4, gbc.sp());
        EXPECT(0xa62f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa62d));
        EXPECT(0x31, gbc.readMem(0xa62e));
        // CB 31 022C
        gbc.setState(0x7e43, 0xc793, 0xe0f0, 0x2590, 0x52dd, 0x1eef, 0x1, 0x0);
        gbc.writeMem(0x7e43, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xc793, gbc.sp());
        EXPECT(0x7e45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 022E
        gbc.setState(0x5660, 0x8d19, 0xd3f0, 0xad41, 0x1a67, 0xd41c, 0x0, 0x1);
        gbc.writeMem(0x5660, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x8d19, gbc.sp());
        EXPECT(0x5662, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 022F
        gbc.setState(0x8672, 0x7b9d, 0xb650, 0x69ca, 0x55cc, 0x5e8e, 0x1, 0x0);
        gbc.writeMem(0x8672, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x7b9d, gbc.sp());
        EXPECT(0x8674, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8672));
        EXPECT(0x31, gbc.readMem(0x8673));
        // CB 31 0230
        gbc.setState(0x8ccf, 0x1271, 0x8ec0, 0xef0c, 0x9111, 0xfa51, 0x0, 0x0);
        gbc.writeMem(0x8ccf, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x1271, gbc.sp());
        EXPECT(0x8cd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ccf));
        EXPECT(0x31, gbc.readMem(0x8cd0));
        // CB 31 0231
        gbc.setState(0xba61, 0xbeab, 0xb680, 0xadbe, 0x56e9, 0xb7b3, 0x1, 0x1);
        gbc.writeMem(0xba61, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xbeab, gbc.sp());
        EXPECT(0xba63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba61));
        EXPECT(0x31, gbc.readMem(0xba62));
        // CB 31 0232
        gbc.setState(0x1279, 0x85d7, 0xc820, 0x2227, 0xf11b, 0x177b, 0x0, 0x0);
        gbc.writeMem(0x1279, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x85d7, gbc.sp());
        EXPECT(0x127b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0233
        gbc.setState(0x25ab, 0x2702, 0x5d60, 0xa861, 0x4dbb, 0xf65c, 0x1, 0x0);
        gbc.writeMem(0x25ab, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x2702, gbc.sp());
        EXPECT(0x25ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0234
        gbc.setState(0x5c68, 0xaf8b, 0x9070, 0x5e46, 0x4717, 0xda48, 0x1, 0x1);
        gbc.writeMem(0x5c68, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xaf8b, gbc.sp());
        EXPECT(0x5c6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0235
        gbc.setState(0x4b05, 0x7a41, 0x7960, 0x849b, 0x1c4f, 0x890, 0x1, 0x1);
        gbc.writeMem(0x4b05, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x7a41, gbc.sp());
        EXPECT(0x4b07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0236
        gbc.setState(0x1cd5, 0x6b3, 0x7760, 0x537e, 0x2e58, 0xbd3b, 0x0, 0x0);
        gbc.writeMem(0x1cd5, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x6b3, gbc.sp());
        EXPECT(0x1cd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0237
        gbc.setState(0xb45a, 0x9595, 0x2310, 0xa882, 0x2324, 0x2dea, 0x1, 0x1);
        gbc.writeMem(0xb45a, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x9595, gbc.sp());
        EXPECT(0xb45c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb45a));
        EXPECT(0x31, gbc.readMem(0xb45b));
        // CB 31 0238
        gbc.setState(0x8716, 0x52db, 0xbe20, 0x9185, 0x61d6, 0x6ce6, 0x1, 0x0);
        gbc.writeMem(0x8716, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x52db, gbc.sp());
        EXPECT(0x8718, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8716));
        EXPECT(0x31, gbc.readMem(0x8717));
        // CB 31 023A
        gbc.setState(0xea24, 0x6d35, 0x1c50, 0x620e, 0x904e, 0xbc17, 0x0, 0x1);
        gbc.writeMem(0xea24, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x6d35, gbc.sp());
        EXPECT(0xea26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea24));
        EXPECT(0x31, gbc.readMem(0xea25));
        // CB 31 023B
        gbc.setState(0x1d5f, 0x11ea, 0x71a0, 0x46d, 0xbfe8, 0xe17d, 0x0, 0x1);
        gbc.writeMem(0x1d5f, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x11ea, gbc.sp());
        EXPECT(0x1d61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 023C
        gbc.setState(0x19f9, 0x8bc4, 0xeec0, 0x816b, 0x3d17, 0x6435, 0x0, 0x0);
        gbc.writeMem(0x19f9, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x8bc4, gbc.sp());
        EXPECT(0x19fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 023D
        gbc.setState(0xef3e, 0xca7d, 0x8600, 0xf94, 0xd843, 0x52b8, 0x0, 0x0);
        gbc.writeMem(0xef3e, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xca7d, gbc.sp());
        EXPECT(0xef40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef3e));
        EXPECT(0x31, gbc.readMem(0xef3f));
        // CB 31 023E
        gbc.setState(0x383, 0x53c6, 0xadb0, 0x9340, 0xfa2c, 0x5096, 0x0, 0x1);
        gbc.writeMem(0x383, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x53c6, gbc.sp());
        EXPECT(0x385, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 023F
        gbc.setState(0xd2b8, 0x8cdc, 0x2a50, 0x2c1b, 0xa3fc, 0x9141, 0x1, 0x1);
        gbc.writeMem(0xd2b8, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x8cdc, gbc.sp());
        EXPECT(0xd2ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2b8));
        EXPECT(0x31, gbc.readMem(0xd2b9));
        // CB 31 0240
        gbc.setState(0xa37, 0x8fdf, 0x6ec0, 0xa650, 0xa2be, 0x44e, 0x0, 0x1);
        gbc.writeMem(0xa37, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x8fdf, gbc.sp());
        EXPECT(0xa39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0241
        gbc.setState(0x6eb1, 0x4e5e, 0x6f60, 0x6bd7, 0x7beb, 0xc176, 0x1, 0x1);
        gbc.writeMem(0x6eb1, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x4e5e, gbc.sp());
        EXPECT(0x6eb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0242
        gbc.setState(0x18d, 0xbe2d, 0x79d0, 0xf378, 0x9b6f, 0x36a6, 0x1, 0x0);
        gbc.writeMem(0x18d, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xbe2d, gbc.sp());
        EXPECT(0x18f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0243
        gbc.setState(0xce21, 0x240a, 0x8d30, 0x20d7, 0xb4fd, 0xb06, 0x1, 0x0);
        gbc.writeMem(0xce21, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x240a, gbc.sp());
        EXPECT(0xce23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce21));
        EXPECT(0x31, gbc.readMem(0xce22));
        // CB 31 0244
        gbc.setState(0xd0d0, 0x4e39, 0x1ed0, 0x56c, 0x359b, 0xd76b, 0x1, 0x0);
        gbc.writeMem(0xd0d0, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x4e39, gbc.sp());
        EXPECT(0xd0d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0d0));
        EXPECT(0x31, gbc.readMem(0xd0d1));
        // CB 31 0245
        gbc.setState(0x70be, 0xa6ef, 0x8cb0, 0x1d87, 0xe8e7, 0xa009, 0x0, 0x0);
        gbc.writeMem(0x70be, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xa6ef, gbc.sp());
        EXPECT(0x70c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0246
        gbc.setState(0xa5ae, 0xb701, 0x7f30, 0xb0b9, 0x61ec, 0x78b3, 0x0, 0x1);
        gbc.writeMem(0xa5ae, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xb701, gbc.sp());
        EXPECT(0xa5b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5ae));
        EXPECT(0x31, gbc.readMem(0xa5af));
        // CB 31 0248
        gbc.setState(0x8e6b, 0xd3ee, 0x98a0, 0xeb5d, 0x4da9, 0xebf7, 0x1, 0x1);
        gbc.writeMem(0x8e6b, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xd3ee, gbc.sp());
        EXPECT(0x8e6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e6b));
        EXPECT(0x31, gbc.readMem(0x8e6c));
        // CB 31 0249
        gbc.setState(0xb32b, 0x819a, 0x6900, 0xfdb9, 0x8763, 0x3787, 0x1, 0x0);
        gbc.writeMem(0xb32b, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x819a, gbc.sp());
        EXPECT(0xb32d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb32b));
        EXPECT(0x31, gbc.readMem(0xb32c));
        // CB 31 024A
        gbc.setState(0x9ac7, 0x712, 0xffd0, 0xcd4, 0x161f, 0xd1dc, 0x1, 0x1);
        gbc.writeMem(0x9ac7, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x712, gbc.sp());
        EXPECT(0x9ac9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ac7));
        EXPECT(0x31, gbc.readMem(0x9ac8));
        // CB 31 024B
        gbc.setState(0x39bb, 0x8a88, 0xca50, 0xcdc3, 0x3f1f, 0x31fc, 0x0, 0x1);
        gbc.writeMem(0x39bb, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x8a88, gbc.sp());
        EXPECT(0x39bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 024C
        gbc.setState(0x5ab5, 0x8a03, 0x4630, 0x9161, 0x4717, 0x84cb, 0x1, 0x1);
        gbc.writeMem(0x5ab5, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x8a03, gbc.sp());
        EXPECT(0x5ab7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 024D
        gbc.setState(0x4989, 0x43e8, 0xbf60, 0x93a0, 0xde7f, 0xa2a5, 0x1, 0x1);
        gbc.writeMem(0x4989, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x43e8, gbc.sp());
        EXPECT(0x498b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 024E
        gbc.setState(0xd9f, 0x54bc, 0xd630, 0xd644, 0x9e39, 0x1dcf, 0x0, 0x0);
        gbc.writeMem(0xd9f, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x54bc, gbc.sp());
        EXPECT(0xda1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 024F
        gbc.setState(0x42ca, 0x7c8c, 0x5d70, 0xe7d7, 0x4b37, 0xf2bd, 0x0, 0x1);
        gbc.writeMem(0x42ca, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x7c8c, gbc.sp());
        EXPECT(0x42cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0250
        gbc.setState(0x660, 0x621e, 0x98f0, 0x93ef, 0x5ae7, 0x4d2e, 0x1, 0x0);
        gbc.writeMem(0x660, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x621e, gbc.sp());
        EXPECT(0x662, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0251
        gbc.setState(0x1e96, 0x847d, 0x4ca0, 0xdfac, 0xc546, 0x5312, 0x0, 0x0);
        gbc.writeMem(0x1e96, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x847d, gbc.sp());
        EXPECT(0x1e98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0252
        gbc.setState(0x8ca8, 0x56c3, 0xe960, 0x26ba, 0x663e, 0xce44, 0x1, 0x1);
        gbc.writeMem(0x8ca8, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x56c3, gbc.sp());
        EXPECT(0x8caa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ca8));
        EXPECT(0x31, gbc.readMem(0x8ca9));
        // CB 31 0253
        gbc.setState(0xb3eb, 0x7306, 0xb640, 0x4b67, 0xecc2, 0x9ff5, 0x1, 0x1);
        gbc.writeMem(0xb3eb, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x7306, gbc.sp());
        EXPECT(0xb3ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3eb));
        EXPECT(0x31, gbc.readMem(0xb3ec));
        // CB 31 0254
        gbc.setState(0x597c, 0x70fb, 0x9640, 0x700a, 0xa1a4, 0xe2b, 0x1, 0x1);
        gbc.writeMem(0x597c, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x70fb, gbc.sp());
        EXPECT(0x597e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0255
        gbc.setState(0x8119, 0xac2f, 0x58e0, 0x2af8, 0x6351, 0x4e04, 0x0, 0x0);
        gbc.writeMem(0x8119, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xac2f, gbc.sp());
        EXPECT(0x811b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8119));
        EXPECT(0x31, gbc.readMem(0x811a));
        // CB 31 0256
        gbc.setState(0xe707, 0x8e74, 0x49a0, 0x2bf, 0xb539, 0x9b0, 0x0, 0x1);
        gbc.writeMem(0xe707, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x8e74, gbc.sp());
        EXPECT(0xe709, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe707));
        EXPECT(0x31, gbc.readMem(0xe708));
        // CB 31 0257
        gbc.setState(0x4863, 0x21c2, 0xb430, 0xe93c, 0x9ba2, 0x9bdd, 0x1, 0x0);
        gbc.writeMem(0x4863, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x21c2, gbc.sp());
        EXPECT(0x4865, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0258
        gbc.setState(0x6c1a, 0x7173, 0xe4e0, 0x68b5, 0x760b, 0xc8a3, 0x0, 0x0);
        gbc.writeMem(0x6c1a, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x7173, gbc.sp());
        EXPECT(0x6c1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0259
        gbc.setState(0x8823, 0x906c, 0x6470, 0xd04c, 0x4ed4, 0x7a7a, 0x0, 0x0);
        gbc.writeMem(0x8823, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x906c, gbc.sp());
        EXPECT(0x8825, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8823));
        EXPECT(0x31, gbc.readMem(0x8824));
        // CB 31 025A
        gbc.setState(0x46b6, 0x6075, 0x7a40, 0x785a, 0xc9da, 0xdab2, 0x0, 0x1);
        gbc.writeMem(0x46b6, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x6075, gbc.sp());
        EXPECT(0x46b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 025B
        gbc.setState(0x4785, 0x64cd, 0x2440, 0x7ce0, 0x1ac4, 0x917a, 0x1, 0x0);
        gbc.writeMem(0x4785, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x64cd, gbc.sp());
        EXPECT(0x4787, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 025C
        gbc.setState(0xab7e, 0x9c0e, 0x1d0, 0xc57, 0x34f7, 0x63f1, 0x0, 0x0);
        gbc.writeMem(0xab7e, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x9c0e, gbc.sp());
        EXPECT(0xab80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab7e));
        EXPECT(0x31, gbc.readMem(0xab7f));
        // CB 31 025D
        gbc.setState(0xecd6, 0x6da3, 0x4d0, 0x2850, 0x7a3f, 0xe7c1, 0x1, 0x0);
        gbc.writeMem(0xecd6, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x6da3, gbc.sp());
        EXPECT(0xecd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecd6));
        EXPECT(0x31, gbc.readMem(0xecd7));
        // CB 31 025E
        gbc.setState(0xdbc7, 0xea4e, 0x3d0, 0xea7a, 0x4ecb, 0xc5a7, 0x1, 0x1);
        gbc.writeMem(0xdbc7, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xea4e, gbc.sp());
        EXPECT(0xdbc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbc7));
        EXPECT(0x31, gbc.readMem(0xdbc8));
        // CB 31 025F
        gbc.setState(0x29cc, 0x4172, 0xd720, 0xd351, 0x280b, 0x4115, 0x0, 0x0);
        gbc.writeMem(0x29cc, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x4172, gbc.sp());
        EXPECT(0x29ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0260
        gbc.setState(0xeb0c, 0x9edf, 0x26f0, 0xb5d9, 0x4e0b, 0xf97a, 0x1, 0x1);
        gbc.writeMem(0xeb0c, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x9edf, gbc.sp());
        EXPECT(0xeb0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb0c));
        EXPECT(0x31, gbc.readMem(0xeb0d));
        // CB 31 0261
        gbc.setState(0x5093, 0x35ec, 0x1e30, 0x77d2, 0xa648, 0xd97c, 0x1, 0x1);
        gbc.writeMem(0x5093, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x35ec, gbc.sp());
        EXPECT(0x5095, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0262
        gbc.setState(0x23c4, 0xa065, 0x5910, 0x8358, 0x4d5c, 0x1443, 0x0, 0x0);
        gbc.writeMem(0x23c4, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xa065, gbc.sp());
        EXPECT(0x23c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0263
        gbc.setState(0x646c, 0x4d76, 0x22f0, 0xfc0e, 0xab60, 0x9409, 0x1, 0x0);
        gbc.writeMem(0x646c, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x4d76, gbc.sp());
        EXPECT(0x646e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0264
        gbc.setState(0x48e1, 0xeac4, 0xaee0, 0x16bb, 0x9798, 0xf007, 0x1, 0x0);
        gbc.writeMem(0x48e1, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xeac4, gbc.sp());
        EXPECT(0x48e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0265
        gbc.setState(0x8c25, 0x4ad5, 0xa0e0, 0x5709, 0x3c2b, 0x78b0, 0x0, 0x1);
        gbc.writeMem(0x8c25, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x4ad5, gbc.sp());
        EXPECT(0x8c27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c25));
        EXPECT(0x31, gbc.readMem(0x8c26));
        // CB 31 0266
        gbc.setState(0x477a, 0xd969, 0x57b0, 0x3a5, 0xa2da, 0xcd2b, 0x0, 0x1);
        gbc.writeMem(0x477a, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xd969, gbc.sp());
        EXPECT(0x477c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0267
        gbc.setState(0x48fd, 0xe0f1, 0x9740, 0xe5fe, 0x393b, 0x313e, 0x1, 0x1);
        gbc.writeMem(0x48fd, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xe0f1, gbc.sp());
        EXPECT(0x48ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0268
        gbc.setState(0x6be3, 0x9f4e, 0x9400, 0x7918, 0xe1d3, 0x99b9, 0x1, 0x1);
        gbc.writeMem(0x6be3, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x9f4e, gbc.sp());
        EXPECT(0x6be5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0269
        gbc.setState(0x92c0, 0x1b95, 0xaf60, 0x24bf, 0x1ea0, 0x33be, 0x1, 0x0);
        gbc.writeMem(0x92c0, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x1b95, gbc.sp());
        EXPECT(0x92c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92c0));
        EXPECT(0x31, gbc.readMem(0x92c1));
        // CB 31 026A
        gbc.setState(0x3c47, 0x2681, 0x8d70, 0x29a6, 0x6665, 0x57f2, 0x0, 0x0);
        gbc.writeMem(0x3c47, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x2681, gbc.sp());
        EXPECT(0x3c49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 026B
        gbc.setState(0x1bac, 0x500c, 0xf260, 0xa7ce, 0x552b, 0x7a57, 0x0, 0x0);
        gbc.writeMem(0x1bac, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x500c, gbc.sp());
        EXPECT(0x1bae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 026C
        gbc.setState(0x5ff6, 0xe0b6, 0x5d50, 0x5dcf, 0x96af, 0x827b, 0x0, 0x0);
        gbc.writeMem(0x5ff6, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xe0b6, gbc.sp());
        EXPECT(0x5ff8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 026D
        gbc.setState(0xd08a, 0x76d9, 0x23c0, 0xda63, 0x201c, 0x489, 0x0, 0x1);
        gbc.writeMem(0xd08a, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x76d9, gbc.sp());
        EXPECT(0xd08c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd08a));
        EXPECT(0x31, gbc.readMem(0xd08b));
        // CB 31 026E
        gbc.setState(0x6b2f, 0x6836, 0xd530, 0x635, 0xe885, 0x3e71, 0x1, 0x0);
        gbc.writeMem(0x6b2f, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x6836, gbc.sp());
        EXPECT(0x6b31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 026F
        gbc.setState(0x7f0b, 0x3525, 0xa770, 0x2672, 0xa64, 0xcc, 0x0, 0x0);
        gbc.writeMem(0x7f0b, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x3525, gbc.sp());
        EXPECT(0x7f0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0270
        gbc.setState(0x7bd2, 0xdd32, 0x2d90, 0x4fe2, 0x11b0, 0xae19, 0x1, 0x1);
        gbc.writeMem(0x7bd2, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xdd32, gbc.sp());
        EXPECT(0x7bd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0271
        gbc.setState(0x18e5, 0x183f, 0xa320, 0xb2f, 0xe5ad, 0xb71b, 0x1, 0x1);
        gbc.writeMem(0x18e5, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x183f, gbc.sp());
        EXPECT(0x18e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0272
        gbc.setState(0x9dc5, 0x60c5, 0xfbe0, 0x8a4c, 0xec70, 0x3990, 0x0, 0x0);
        gbc.writeMem(0x9dc5, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x60c5, gbc.sp());
        EXPECT(0x9dc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dc5));
        EXPECT(0x31, gbc.readMem(0x9dc6));
        // CB 31 0273
        gbc.setState(0x1e79, 0x9294, 0xec0, 0xc872, 0xe721, 0xf2ae, 0x0, 0x1);
        gbc.writeMem(0x1e79, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x9294, gbc.sp());
        EXPECT(0x1e7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0274
        gbc.setState(0xe014, 0x87fe, 0x57c0, 0xb53e, 0xf24e, 0xf725, 0x0, 0x1);
        gbc.writeMem(0xe014, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x87fe, gbc.sp());
        EXPECT(0xe016, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe014));
        EXPECT(0x31, gbc.readMem(0xe015));
        // CB 31 0275
        gbc.setState(0xa821, 0xab5b, 0x9ae0, 0x3618, 0xf583, 0x412f, 0x0, 0x0);
        gbc.writeMem(0xa821, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xab5b, gbc.sp());
        EXPECT(0xa823, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa821));
        EXPECT(0x31, gbc.readMem(0xa822));
        // CB 31 0276
        gbc.setState(0x2c41, 0xe060, 0x2ac0, 0xcc41, 0x33ca, 0xb106, 0x0, 0x0);
        gbc.writeMem(0x2c41, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xe060, gbc.sp());
        EXPECT(0x2c43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0277
        gbc.setState(0x23bf, 0x5c35, 0x4790, 0xc4f6, 0xdbcd, 0x6071, 0x1, 0x1);
        gbc.writeMem(0x23bf, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x5c35, gbc.sp());
        EXPECT(0x23c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0278
        gbc.setState(0x61b5, 0xf2c1, 0x5150, 0x3cb7, 0x912d, 0x36b8, 0x0, 0x0);
        gbc.writeMem(0x61b5, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xf2c1, gbc.sp());
        EXPECT(0x61b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0279
        gbc.setState(0x62ab, 0xd21b, 0x88e0, 0x7f73, 0x23ca, 0x1733, 0x0, 0x1);
        gbc.writeMem(0x62ab, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xd21b, gbc.sp());
        EXPECT(0x62ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 027A
        gbc.setState(0xa44c, 0xd0d2, 0x7c30, 0xae92, 0x633c, 0xe184, 0x1, 0x1);
        gbc.writeMem(0xa44c, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xd0d2, gbc.sp());
        EXPECT(0xa44e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa44c));
        EXPECT(0x31, gbc.readMem(0xa44d));
        // CB 31 027B
        gbc.setState(0xda5c, 0x807f, 0x33d0, 0x674e, 0xf2b6, 0x2796, 0x1, 0x0);
        gbc.writeMem(0xda5c, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x807f, gbc.sp());
        EXPECT(0xda5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda5c));
        EXPECT(0x31, gbc.readMem(0xda5d));
        // CB 31 027C
        gbc.setState(0x6d44, 0x98f9, 0x9770, 0x99fe, 0xc394, 0x63a, 0x1, 0x0);
        gbc.writeMem(0x6d44, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x98f9, gbc.sp());
        EXPECT(0x6d46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 027D
        gbc.setState(0x6513, 0x3ccf, 0xf3f0, 0x7694, 0x25cf, 0xf057, 0x1, 0x0);
        gbc.writeMem(0x6513, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x3ccf, gbc.sp());
        EXPECT(0x6515, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 027E
        gbc.setState(0x772d, 0x1aec, 0xf3e0, 0xb01b, 0x580, 0x2ef9, 0x0, 0x1);
        gbc.writeMem(0x772d, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x1aec, gbc.sp());
        EXPECT(0x772f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 027F
        gbc.setState(0x993a, 0xe9f, 0x6010, 0x818c, 0xf71a, 0x7aeb, 0x0, 0x1);
        gbc.writeMem(0x993a, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xe9f, gbc.sp());
        EXPECT(0x993c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x993a));
        EXPECT(0x31, gbc.readMem(0x993b));
        // CB 31 0280
        gbc.setState(0x5023, 0xd8de, 0x3770, 0x959f, 0x751c, 0x6850, 0x1, 0x1);
        gbc.writeMem(0x5023, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xd8de, gbc.sp());
        EXPECT(0x5025, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0281
        gbc.setState(0x88a, 0x451b, 0x7d50, 0x771d, 0x9c13, 0xaba3, 0x0, 0x0);
        gbc.writeMem(0x88a, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x451b, gbc.sp());
        EXPECT(0x88c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0282
        gbc.setState(0x3edf, 0x8760, 0x5e0, 0x655, 0x70c9, 0xb7ad, 0x1, 0x0);
        gbc.writeMem(0x3edf, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x8760, gbc.sp());
        EXPECT(0x3ee1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0283
        gbc.setState(0xacaa, 0xdef, 0xef00, 0x11f0, 0x989d, 0x744f, 0x0, 0x0);
        gbc.writeMem(0xacaa, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xdef, gbc.sp());
        EXPECT(0xacac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacaa));
        EXPECT(0x31, gbc.readMem(0xacab));
        // CB 31 0284
        gbc.setState(0xede8, 0x1a61, 0x3d00, 0xc0f1, 0x93d5, 0x313f, 0x1, 0x0);
        gbc.writeMem(0xede8, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x1a61, gbc.sp());
        EXPECT(0xedea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xede8));
        EXPECT(0x31, gbc.readMem(0xede9));
        // CB 31 0285
        gbc.setState(0xac6, 0xf1d1, 0x2350, 0x605d, 0x16fa, 0x3730, 0x1, 0x0);
        gbc.writeMem(0xac6, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xf1d1, gbc.sp());
        EXPECT(0xac8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0286
        gbc.setState(0x85dd, 0xf7bf, 0x68f0, 0xf784, 0xac39, 0x762a, 0x1, 0x0);
        gbc.writeMem(0x85dd, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xf7bf, gbc.sp());
        EXPECT(0x85df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85dd));
        EXPECT(0x31, gbc.readMem(0x85de));
        // CB 31 0287
        gbc.setState(0x1d23, 0x7a0a, 0xaf0, 0x8215, 0x8dea, 0xe6f2, 0x0, 0x0);
        gbc.writeMem(0x1d23, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x7a0a, gbc.sp());
        EXPECT(0x1d25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0288
        gbc.setState(0x5dc7, 0xe0d4, 0xf30, 0xed24, 0xecbb, 0x317e, 0x0, 0x0);
        gbc.writeMem(0x5dc7, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xe0d4, gbc.sp());
        EXPECT(0x5dc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0289
        gbc.setState(0x17cc, 0x84a1, 0x8380, 0x141c, 0x5fbe, 0x7723, 0x1, 0x1);
        gbc.writeMem(0x17cc, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x84a1, gbc.sp());
        EXPECT(0x17ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 028A
        gbc.setState(0xe350, 0x5e37, 0x7ba0, 0xc08a, 0xe3d8, 0x88d5, 0x0, 0x1);
        gbc.writeMem(0xe350, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x5e37, gbc.sp());
        EXPECT(0xe352, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe350));
        EXPECT(0x31, gbc.readMem(0xe351));
        // CB 31 028B
        gbc.setState(0x47cc, 0x9a2c, 0x1510, 0xd3c9, 0x2803, 0x670c, 0x0, 0x1);
        gbc.writeMem(0x47cc, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x9a2c, gbc.sp());
        EXPECT(0x47ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 028C
        gbc.setState(0x3e94, 0xe7c9, 0x2c10, 0x1d2e, 0x2c25, 0x4d62, 0x0, 0x0);
        gbc.writeMem(0x3e94, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xe7c9, gbc.sp());
        EXPECT(0x3e96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 028D
        gbc.setState(0xe185, 0xf8bd, 0x870, 0x9c90, 0x6349, 0xcb8d, 0x1, 0x1);
        gbc.writeMem(0xe185, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xf8bd, gbc.sp());
        EXPECT(0xe187, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe185));
        EXPECT(0x31, gbc.readMem(0xe186));
        // CB 31 028E
        gbc.setState(0xdb08, 0xa2bb, 0x80a0, 0xe573, 0x911f, 0x467e, 0x0, 0x1);
        gbc.writeMem(0xdb08, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xa2bb, gbc.sp());
        EXPECT(0xdb0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb08));
        EXPECT(0x31, gbc.readMem(0xdb09));
        // CB 31 028F
        gbc.setState(0x541d, 0x4cc7, 0x5d00, 0xcf9e, 0xf4bb, 0x5561, 0x0, 0x1);
        gbc.writeMem(0x541d, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x4cc7, gbc.sp());
        EXPECT(0x541f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0291
        gbc.setState(0xdfc0, 0xac6f, 0xa230, 0x66fc, 0x29aa, 0x4dce, 0x0, 0x1);
        gbc.writeMem(0xdfc0, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xac6f, gbc.sp());
        EXPECT(0xdfc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfc0));
        EXPECT(0x31, gbc.readMem(0xdfc1));
        // CB 31 0292
        gbc.setState(0x3ef9, 0x1e5d, 0xb860, 0xf8e3, 0x8094, 0x926a, 0x1, 0x0);
        gbc.writeMem(0x3ef9, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x1e5d, gbc.sp());
        EXPECT(0x3efb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0293
        gbc.setState(0x2730, 0x3334, 0x1ab0, 0x34b5, 0x41ee, 0x9ca5, 0x0, 0x0);
        gbc.writeMem(0x2730, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x3334, gbc.sp());
        EXPECT(0x2732, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0294
        gbc.setState(0xaf76, 0x86bd, 0x1f90, 0x4c38, 0x7f09, 0xa85c, 0x1, 0x0);
        gbc.writeMem(0xaf76, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x86bd, gbc.sp());
        EXPECT(0xaf78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf76));
        EXPECT(0x31, gbc.readMem(0xaf77));
        // CB 31 0295
        gbc.setState(0xed40, 0x2537, 0x560, 0x347b, 0xa429, 0xb8eb, 0x0, 0x0);
        gbc.writeMem(0xed40, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x2537, gbc.sp());
        EXPECT(0xed42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed40));
        EXPECT(0x31, gbc.readMem(0xed41));
        // CB 31 0296
        gbc.setState(0xc4bb, 0x613b, 0x3240, 0xd8c9, 0x37c8, 0x5520, 0x1, 0x1);
        gbc.writeMem(0xc4bb, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x613b, gbc.sp());
        EXPECT(0xc4bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4bb));
        EXPECT(0x31, gbc.readMem(0xc4bc));
        // CB 31 0297
        gbc.setState(0x5dc1, 0xcc86, 0x5900, 0xaa89, 0x44d1, 0x52bc, 0x0, 0x1);
        gbc.writeMem(0x5dc1, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xcc86, gbc.sp());
        EXPECT(0x5dc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0299
        gbc.setState(0x8643, 0x61e7, 0x13c0, 0x16f8, 0xc04f, 0x1cf6, 0x1, 0x0);
        gbc.writeMem(0x8643, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x61e7, gbc.sp());
        EXPECT(0x8645, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8643));
        EXPECT(0x31, gbc.readMem(0x8644));
        // CB 31 029A
        gbc.setState(0x8b58, 0xa1d2, 0x4150, 0x2ae6, 0x5012, 0x21ae, 0x1, 0x1);
        gbc.writeMem(0x8b58, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xa1d2, gbc.sp());
        EXPECT(0x8b5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b58));
        EXPECT(0x31, gbc.readMem(0x8b59));
        // CB 31 029B
        gbc.setState(0x7855, 0xa071, 0x8360, 0x3df5, 0xb7bb, 0xfa0a, 0x1, 0x0);
        gbc.writeMem(0x7855, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xa071, gbc.sp());
        EXPECT(0x7857, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 029C
        gbc.setState(0x28d6, 0x514b, 0x5170, 0x446e, 0x5936, 0xc63, 0x0, 0x0);
        gbc.writeMem(0x28d6, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x514b, gbc.sp());
        EXPECT(0x28d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 029D
        gbc.setState(0x9254, 0xa486, 0x5120, 0x7449, 0x419f, 0x8ac9, 0x0, 0x1);
        gbc.writeMem(0x9254, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xa486, gbc.sp());
        EXPECT(0x9256, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9254));
        EXPECT(0x31, gbc.readMem(0x9255));
        // CB 31 029F
        gbc.setState(0x5e40, 0x260, 0xdfa0, 0xe309, 0x24ce, 0x116b, 0x0, 0x1);
        gbc.writeMem(0x5e40, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x260, gbc.sp());
        EXPECT(0x5e42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 02A0
        gbc.setState(0x9c50, 0xf052, 0xaa80, 0x408, 0x7e11, 0xb22d, 0x1, 0x0);
        gbc.writeMem(0x9c50, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xf052, gbc.sp());
        EXPECT(0x9c52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c50));
        EXPECT(0x31, gbc.readMem(0x9c51));
        // CB 31 02A1
        gbc.setState(0x5d8e, 0xce4, 0x6b40, 0x9a92, 0x597e, 0xb315, 0x1, 0x0);
        gbc.writeMem(0x5d8e, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xce4, gbc.sp());
        EXPECT(0x5d90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 02A2
        gbc.setState(0xd656, 0xbdb4, 0x52c0, 0xf352, 0x7525, 0xcdce, 0x0, 0x1);
        gbc.writeMem(0xd656, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xbdb4, gbc.sp());
        EXPECT(0xd658, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd656));
        EXPECT(0x31, gbc.readMem(0xd657));
        // CB 31 02A3
        gbc.setState(0xacba, 0xfc6d, 0x18f0, 0xce0f, 0xd2aa, 0xeec9, 0x0, 0x1);
        gbc.writeMem(0xacba, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xfc6d, gbc.sp());
        EXPECT(0xacbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacba));
        EXPECT(0x31, gbc.readMem(0xacbb));
        // CB 31 02A4
        gbc.setState(0xacc5, 0xf797, 0x4720, 0xfd1a, 0x966, 0x8067, 0x1, 0x1);
        gbc.writeMem(0xacc5, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xf797, gbc.sp());
        EXPECT(0xacc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacc5));
        EXPECT(0x31, gbc.readMem(0xacc6));
        // CB 31 02A5
        gbc.setState(0x8302, 0x1812, 0x9b30, 0x68e5, 0x2fa, 0xa397, 0x1, 0x0);
        gbc.writeMem(0x8302, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x1812, gbc.sp());
        EXPECT(0x8304, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8302));
        EXPECT(0x31, gbc.readMem(0x8303));
        // CB 31 02A6
        gbc.setState(0x3e1c, 0xbbfe, 0xd0e0, 0x57a1, 0xb4d0, 0x9fa4, 0x0, 0x1);
        gbc.writeMem(0x3e1c, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xbbfe, gbc.sp());
        EXPECT(0x3e1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 02A7
        gbc.setState(0xc72, 0x6311, 0xf20, 0x7a6f, 0xce9c, 0x3be1, 0x0, 0x1);
        gbc.writeMem(0xc72, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x6311, gbc.sp());
        EXPECT(0xc74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 02A8
        gbc.setState(0x5082, 0x37f1, 0x4d40, 0x8f70, 0x69c9, 0xf8ec, 0x1, 0x1);
        gbc.writeMem(0x5082, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x37f1, gbc.sp());
        EXPECT(0x5084, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 02A9
        gbc.setState(0xb1ea, 0xc262, 0x3a20, 0xdc0b, 0x6710, 0xfd95, 0x1, 0x1);
        gbc.writeMem(0xb1ea, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xc262, gbc.sp());
        EXPECT(0xb1ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1ea));
        EXPECT(0x31, gbc.readMem(0xb1eb));
        // CB 31 02AA
        gbc.setState(0x8675, 0xb075, 0x9eb0, 0xa877, 0x5969, 0x1679, 0x1, 0x1);
        gbc.writeMem(0x8675, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xb075, gbc.sp());
        EXPECT(0x8677, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8675));
        EXPECT(0x31, gbc.readMem(0x8676));
        // CB 31 02AB
        gbc.setState(0x1c9c, 0xe165, 0xf4c0, 0x8757, 0x838d, 0xdc7b, 0x0, 0x0);
        gbc.writeMem(0x1c9c, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xe165, gbc.sp());
        EXPECT(0x1c9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 02AD
        gbc.setState(0xc998, 0x177f, 0x3b60, 0x8f2c, 0x9a09, 0xff90, 0x1, 0x1);
        gbc.writeMem(0xc998, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x177f, gbc.sp());
        EXPECT(0xc99a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc998));
        EXPECT(0x31, gbc.readMem(0xc999));
        // CB 31 02AF
        gbc.setState(0x4a05, 0x3737, 0x540, 0x8470, 0xa562, 0x5e76, 0x1, 0x0);
        gbc.writeMem(0x4a05, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x3737, gbc.sp());
        EXPECT(0x4a07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 02B0
        gbc.setState(0x6dee, 0x1762, 0xe4b0, 0xf2e6, 0xeb56, 0x968b, 0x1, 0x0);
        gbc.writeMem(0x6dee, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x1762, gbc.sp());
        EXPECT(0x6df0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 02B1
        gbc.setState(0x61b1, 0x5061, 0x3250, 0x9903, 0xf56e, 0xa631, 0x0, 0x1);
        gbc.writeMem(0x61b1, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x5061, gbc.sp());
        EXPECT(0x61b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 02B3
        gbc.setState(0xb145, 0xc5c1, 0xb8d0, 0xd3d4, 0x25f5, 0xe7ce, 0x1, 0x0);
        gbc.writeMem(0xb145, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xc5c1, gbc.sp());
        EXPECT(0xb147, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb145));
        EXPECT(0x31, gbc.readMem(0xb146));
        // CB 31 02B4
        gbc.setState(0x1fce, 0xf608, 0x6b10, 0x709c, 0xf82f, 0x1930, 0x1, 0x1);
        gbc.writeMem(0x1fce, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xf608, gbc.sp());
        EXPECT(0x1fd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 02B6
        gbc.setState(0x1d25, 0x3786, 0x4660, 0x16bf, 0x1894, 0xfcc9, 0x1, 0x1);
        gbc.writeMem(0x1d25, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x3786, gbc.sp());
        EXPECT(0x1d27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 02B7
        gbc.setState(0x37ee, 0x13fc, 0xa0b0, 0x590f, 0xb75f, 0x7e18, 0x0, 0x1);
        gbc.writeMem(0x37ee, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x13fc, gbc.sp());
        EXPECT(0x37f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 02B8
        gbc.setState(0xef4c, 0x1948, 0x97f0, 0xbc48, 0x6cb8, 0x3d12, 0x0, 0x0);
        gbc.writeMem(0xef4c, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x1948, gbc.sp());
        EXPECT(0xef4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef4c));
        EXPECT(0x31, gbc.readMem(0xef4d));
        // CB 31 02B9
        gbc.setState(0x9a4, 0x8e00, 0x40e0, 0xb93e, 0x2d72, 0xb6ca, 0x1, 0x1);
        gbc.writeMem(0x9a4, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x8e00, gbc.sp());
        EXPECT(0x9a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 02BA
        gbc.setState(0x8c9e, 0x9b23, 0x4de0, 0xf1db, 0x60aa, 0x595, 0x0, 0x0);
        gbc.writeMem(0x8c9e, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x9b23, gbc.sp());
        EXPECT(0x8ca0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c9e));
        EXPECT(0x31, gbc.readMem(0x8c9f));
        // CB 31 02BB
        gbc.setState(0xa7a2, 0xcde5, 0xf080, 0x4cf3, 0xdaa5, 0x2b22, 0x0, 0x0);
        gbc.writeMem(0xa7a2, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xcde5, gbc.sp());
        EXPECT(0xa7a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7a2));
        EXPECT(0x31, gbc.readMem(0xa7a3));
        // CB 31 02BC
        gbc.setState(0x84bf, 0x5148, 0x6f20, 0x6bba, 0x85c6, 0xeaf0, 0x1, 0x0);
        gbc.writeMem(0x84bf, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x5148, gbc.sp());
        EXPECT(0x84c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84bf));
        EXPECT(0x31, gbc.readMem(0x84c0));
        // CB 31 02BD
        gbc.setState(0x1b1e, 0xa031, 0xe290, 0x1174, 0x4415, 0x1986, 0x0, 0x0);
        gbc.writeMem(0x1b1e, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xa031, gbc.sp());
        EXPECT(0x1b20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 02BE
        gbc.setState(0x79b, 0xf4b4, 0xdf30, 0xd31e, 0xb00b, 0x7269, 0x1, 0x1);
        gbc.writeMem(0x79b, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xf4b4, gbc.sp());
        EXPECT(0x79d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 02BF
        gbc.setState(0x9ea6, 0xcbdf, 0xf390, 0x8b6e, 0x3aad, 0xee37, 0x1, 0x1);
        gbc.writeMem(0x9ea6, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xcbdf, gbc.sp());
        EXPECT(0x9ea8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ea6));
        EXPECT(0x31, gbc.readMem(0x9ea7));
        // CB 31 02C0
        gbc.setState(0xc0a, 0xf455, 0x4650, 0xa9ff, 0x2333, 0x2ac4, 0x1, 0x1);
        gbc.writeMem(0xc0a, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xf455, gbc.sp());
        EXPECT(0xc0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 02C1
        gbc.setState(0xd6e3, 0x8505, 0x7100, 0xaa7, 0x9681, 0x60d0, 0x1, 0x0);
        gbc.writeMem(0xd6e3, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x8505, gbc.sp());
        EXPECT(0xd6e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6e3));
        EXPECT(0x31, gbc.readMem(0xd6e4));
        // CB 31 02C2
        gbc.setState(0x7259, 0xb531, 0x8130, 0x4318, 0xc52f, 0x8681, 0x0, 0x1);
        gbc.writeMem(0x7259, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xb531, gbc.sp());
        EXPECT(0x725b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 02C3
        gbc.setState(0x799, 0xc40f, 0xe770, 0x29ea, 0x67a4, 0xf1b2, 0x1, 0x0);
        gbc.writeMem(0x799, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xc40f, gbc.sp());
        EXPECT(0x79b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 02C4
        gbc.setState(0x991c, 0x83b3, 0x860, 0x6c1, 0xbab9, 0x6102, 0x0, 0x0);
        gbc.writeMem(0x991c, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x83b3, gbc.sp());
        EXPECT(0x991e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x991c));
        EXPECT(0x31, gbc.readMem(0x991d));
        // CB 31 02C5
        gbc.setState(0xdcb8, 0x1d1f, 0xad20, 0xff39, 0xde11, 0x9ed3, 0x0, 0x0);
        gbc.writeMem(0xdcb8, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x1d1f, gbc.sp());
        EXPECT(0xdcba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcb8));
        EXPECT(0x31, gbc.readMem(0xdcb9));
        // CB 31 02C6
        gbc.setState(0xa561, 0x9f41, 0xc6e0, 0xdf9b, 0x8dc5, 0xaece, 0x0, 0x1);
        gbc.writeMem(0xa561, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x9f41, gbc.sp());
        EXPECT(0xa563, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa561));
        EXPECT(0x31, gbc.readMem(0xa562));
        // CB 31 02C7
        gbc.setState(0x63b7, 0xb4c, 0x4930, 0x5eb, 0xbed4, 0x39b1, 0x0, 0x1);
        gbc.writeMem(0x63b7, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xb4c, gbc.sp());
        EXPECT(0x63b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 02C8
        gbc.setState(0xd70f, 0xf53f, 0x30f0, 0x175d, 0x2bb9, 0xe43, 0x0, 0x0);
        gbc.writeMem(0xd70f, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xf53f, gbc.sp());
        EXPECT(0xd711, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd70f));
        EXPECT(0x31, gbc.readMem(0xd710));
        // CB 31 02CA
        gbc.setState(0x8959, 0x28de, 0x3540, 0x6ba0, 0x7b9b, 0x98, 0x1, 0x0);
        gbc.writeMem(0x8959, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x28de, gbc.sp());
        EXPECT(0x895b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8959));
        EXPECT(0x31, gbc.readMem(0x895a));
        // CB 31 02CB
        gbc.setState(0xc889, 0x507f, 0xef00, 0xced8, 0x8444, 0x2596, 0x0, 0x0);
        gbc.writeMem(0xc889, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x507f, gbc.sp());
        EXPECT(0xc88b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc889));
        EXPECT(0x31, gbc.readMem(0xc88a));
        // CB 31 02CD
        gbc.setState(0xccfe, 0x6a82, 0xcab0, 0xd7a6, 0xd0f5, 0x90ce, 0x0, 0x1);
        gbc.writeMem(0xccfe, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x6a82, gbc.sp());
        EXPECT(0xcd00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccfe));
        EXPECT(0x31, gbc.readMem(0xccff));
        // CB 31 02CE
        gbc.setState(0x25f1, 0x252b, 0xeb00, 0xe61a, 0xc9ee, 0x4997, 0x1, 0x1);
        gbc.writeMem(0x25f1, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x252b, gbc.sp());
        EXPECT(0x25f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 02CF
        gbc.setState(0xd859, 0x507a, 0x83c0, 0x1895, 0x2511, 0x16a6, 0x1, 0x0);
        gbc.writeMem(0xd859, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x507a, gbc.sp());
        EXPECT(0xd85b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd859));
        EXPECT(0x31, gbc.readMem(0xd85a));
        // CB 31 02D1
        gbc.setState(0xd643, 0xddc2, 0xdeb0, 0xf4f8, 0xbb56, 0xd101, 0x0, 0x0);
        gbc.writeMem(0xd643, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xddc2, gbc.sp());
        EXPECT(0xd645, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd643));
        EXPECT(0x31, gbc.readMem(0xd644));
        // CB 31 02D2
        gbc.setState(0xb6bc, 0xf633, 0x1e90, 0x1153, 0x6e4a, 0xb38a, 0x0, 0x0);
        gbc.writeMem(0xb6bc, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xf633, gbc.sp());
        EXPECT(0xb6be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6bc));
        EXPECT(0x31, gbc.readMem(0xb6bd));
        // CB 31 02D3
        gbc.setState(0xa86f, 0x9a71, 0x86f0, 0x22cf, 0x6e24, 0x93a4, 0x0, 0x1);
        gbc.writeMem(0xa86f, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x9a71, gbc.sp());
        EXPECT(0xa871, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa86f));
        EXPECT(0x31, gbc.readMem(0xa870));
        // CB 31 02D4
        gbc.setState(0xa9ae, 0xa248, 0xfd20, 0x7d7a, 0x44bb, 0x53c1, 0x0, 0x0);
        gbc.writeMem(0xa9ae, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xa248, gbc.sp());
        EXPECT(0xa9b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9ae));
        EXPECT(0x31, gbc.readMem(0xa9af));
        // CB 31 02D5
        gbc.setState(0x691b, 0x8129, 0x220, 0xda6d, 0x5799, 0xd8e1, 0x1, 0x1);
        gbc.writeMem(0x691b, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x8129, gbc.sp());
        EXPECT(0x691d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 02D6
        gbc.setState(0x9424, 0xd6aa, 0x7620, 0xc95f, 0x995a, 0x83c9, 0x0, 0x1);
        gbc.writeMem(0x9424, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xd6aa, gbc.sp());
        EXPECT(0x9426, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9424));
        EXPECT(0x31, gbc.readMem(0x9425));
        // CB 31 02D7
        gbc.setState(0x5e45, 0x21c2, 0xd40, 0xab15, 0xf972, 0xe0d7, 0x1, 0x0);
        gbc.writeMem(0x5e45, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x21c2, gbc.sp());
        EXPECT(0x5e47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 02D8
        gbc.setState(0xe70e, 0x1d4b, 0x200, 0x8792, 0x54ad, 0xdc14, 0x1, 0x0);
        gbc.writeMem(0xe70e, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x1d4b, gbc.sp());
        EXPECT(0xe710, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe70e));
        EXPECT(0x31, gbc.readMem(0xe70f));
        // CB 31 02D9
        gbc.setState(0xe049, 0xe436, 0xffa0, 0x8984, 0x273d, 0xb668, 0x0, 0x1);
        gbc.writeMem(0xe049, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xe436, gbc.sp());
        EXPECT(0xe04b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe049));
        EXPECT(0x31, gbc.readMem(0xe04a));
        // CB 31 02DA
        gbc.setState(0x9d62, 0x801a, 0xb060, 0x99de, 0xfd8a, 0x68bf, 0x0, 0x0);
        gbc.writeMem(0x9d62, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x801a, gbc.sp());
        EXPECT(0x9d64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d62));
        EXPECT(0x31, gbc.readMem(0x9d63));
        // CB 31 02DB
        gbc.setState(0x566b, 0xb2d8, 0x3660, 0x1c52, 0x869d, 0xd532, 0x1, 0x1);
        gbc.writeMem(0x566b, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xb2d8, gbc.sp());
        EXPECT(0x566d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 02DC
        gbc.setState(0xee07, 0xd5ff, 0x3dc0, 0xebce, 0xdce5, 0x333f, 0x0, 0x1);
        gbc.writeMem(0xee07, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xd5ff, gbc.sp());
        EXPECT(0xee09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee07));
        EXPECT(0x31, gbc.readMem(0xee08));
        // CB 31 02DD
        gbc.setState(0x1226, 0x94c7, 0x6460, 0x2edf, 0xc8d, 0x44d3, 0x0, 0x0);
        gbc.writeMem(0x1226, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x94c7, gbc.sp());
        EXPECT(0x1228, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 02DF
        gbc.setState(0x817d, 0xf683, 0x6260, 0x6c5, 0x206, 0x8558, 0x0, 0x1);
        gbc.writeMem(0x817d, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xf683, gbc.sp());
        EXPECT(0x817f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x817d));
        EXPECT(0x31, gbc.readMem(0x817e));
        // CB 31 02E0
        gbc.setState(0xc099, 0x80ee, 0x9420, 0x562b, 0xb7a1, 0xb2dd, 0x1, 0x0);
        gbc.writeMem(0xc099, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x80ee, gbc.sp());
        EXPECT(0xc09b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc099));
        EXPECT(0x31, gbc.readMem(0xc09a));
        // CB 31 02E1
        gbc.setState(0x1bff, 0x1459, 0x5860, 0x633b, 0x8a35, 0x90ab, 0x0, 0x1);
        gbc.writeMem(0x1bff, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x1459, gbc.sp());
        EXPECT(0x1c01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 02E2
        gbc.setState(0xb6, 0xcdea, 0xc100, 0x9ee2, 0x39d2, 0xad06, 0x1, 0x1);
        gbc.writeMem(0xb6, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xcdea, gbc.sp());
        EXPECT(0xb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 02E3
        gbc.setState(0xa633, 0x3f50, 0x97d0, 0x32df, 0xbc6b, 0x7b7, 0x1, 0x1);
        gbc.writeMem(0xa633, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x3f50, gbc.sp());
        EXPECT(0xa635, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa633));
        EXPECT(0x31, gbc.readMem(0xa634));
        // CB 31 02E4
        gbc.setState(0xb11e, 0xd7c, 0xd130, 0x22c3, 0x970f, 0xbc44, 0x1, 0x1);
        gbc.writeMem(0xb11e, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xd7c, gbc.sp());
        EXPECT(0xb120, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb11e));
        EXPECT(0x31, gbc.readMem(0xb11f));
        // CB 31 02E5
        gbc.setState(0x86b2, 0xc8c9, 0x94a0, 0x8bb5, 0x408b, 0xa641, 0x0, 0x1);
        gbc.writeMem(0x86b2, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xc8c9, gbc.sp());
        EXPECT(0x86b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86b2));
        EXPECT(0x31, gbc.readMem(0x86b3));
        // CB 31 02E6
        gbc.setState(0xb164, 0x97ea, 0x2790, 0x341c, 0x4aca, 0x64ac, 0x0, 0x0);
        gbc.writeMem(0xb164, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x97ea, gbc.sp());
        EXPECT(0xb166, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb164));
        EXPECT(0x31, gbc.readMem(0xb165));
        // CB 31 02E7
        gbc.setState(0xac29, 0x601a, 0x3a80, 0x338f, 0x8b45, 0x6505, 0x1, 0x1);
        gbc.writeMem(0xac29, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x601a, gbc.sp());
        EXPECT(0xac2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac29));
        EXPECT(0x31, gbc.readMem(0xac2a));
        // CB 31 02E8
        gbc.setState(0x5f5e, 0x4e5b, 0x7210, 0xcdd3, 0x7f50, 0xf742, 0x0, 0x0);
        gbc.writeMem(0x5f5e, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x4e5b, gbc.sp());
        EXPECT(0x5f60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 02E9
        gbc.setState(0x23a8, 0x380b, 0x6650, 0x2988, 0xb2eb, 0xdc48, 0x0, 0x1);
        gbc.writeMem(0x23a8, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x380b, gbc.sp());
        EXPECT(0x23aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 02EA
        gbc.setState(0xc604, 0x19cc, 0xf50, 0xb10e, 0x2b0d, 0x1062, 0x0, 0x1);
        gbc.writeMem(0xc604, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x19cc, gbc.sp());
        EXPECT(0xc606, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc604));
        EXPECT(0x31, gbc.readMem(0xc605));
        // CB 31 02EB
        gbc.setState(0x96c9, 0x6bb0, 0xaf10, 0x93d5, 0xfb84, 0x4527, 0x0, 0x1);
        gbc.writeMem(0x96c9, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x6bb0, gbc.sp());
        EXPECT(0x96cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96c9));
        EXPECT(0x31, gbc.readMem(0x96ca));
        // CB 31 02ED
        gbc.setState(0x459d, 0x7914, 0x91e0, 0xea08, 0x4d96, 0x4bea, 0x1, 0x1);
        gbc.writeMem(0x459d, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x7914, gbc.sp());
        EXPECT(0x459f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 02EE
        gbc.setState(0xc6c3, 0x8c06, 0xad0, 0x1c49, 0x2904, 0x9a31, 0x0, 0x1);
        gbc.writeMem(0xc6c3, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x8c06, gbc.sp());
        EXPECT(0xc6c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6c3));
        EXPECT(0x31, gbc.readMem(0xc6c4));
        // CB 31 02EF
        gbc.setState(0x9793, 0x2f05, 0x5610, 0x31eb, 0xc3d5, 0xf38c, 0x1, 0x0);
        gbc.writeMem(0x9793, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x2f05, gbc.sp());
        EXPECT(0x9795, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9793));
        EXPECT(0x31, gbc.readMem(0x9794));
        // CB 31 02F0
        gbc.setState(0x489, 0x217b, 0xc3e0, 0x4185, 0xf201, 0x557c, 0x1, 0x1);
        gbc.writeMem(0x489, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x217b, gbc.sp());
        EXPECT(0x48b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 02F1
        gbc.setState(0x9d6a, 0xf39b, 0x4780, 0x8160, 0xf519, 0x1863, 0x1, 0x1);
        gbc.writeMem(0x9d6a, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xf39b, gbc.sp());
        EXPECT(0x9d6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d6a));
        EXPECT(0x31, gbc.readMem(0x9d6b));
        // CB 31 02F2
        gbc.setState(0x7fbb, 0x8f63, 0x93d0, 0x6a54, 0xb367, 0x7a81, 0x1, 0x1);
        gbc.writeMem(0x7fbb, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x8f63, gbc.sp());
        EXPECT(0x7fbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 02F4
        gbc.setState(0xef72, 0xde87, 0xfd10, 0x5b48, 0x470c, 0xb526, 0x0, 0x0);
        gbc.writeMem(0xef72, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xde87, gbc.sp());
        EXPECT(0xef74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef72));
        EXPECT(0x31, gbc.readMem(0xef73));
        // CB 31 02F5
        gbc.setState(0x73cb, 0x87d, 0x9b90, 0xee4e, 0x56c8, 0xc54c, 0x0, 0x1);
        gbc.writeMem(0x73cb, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x87d, gbc.sp());
        EXPECT(0x73cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 02F7
        gbc.setState(0x14b7, 0xf451, 0x8e00, 0x3971, 0xa949, 0xeb3f, 0x1, 0x0);
        gbc.writeMem(0x14b7, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xf451, gbc.sp());
        EXPECT(0x14b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 02F8
        gbc.setState(0x1fcf, 0xd792, 0x95a0, 0x6bd2, 0xc7c1, 0xdc09, 0x1, 0x0);
        gbc.writeMem(0x1fcf, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xd792, gbc.sp());
        EXPECT(0x1fd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 02F9
        gbc.setState(0x1c4b, 0xea5d, 0x9bd0, 0xafc1, 0x75ad, 0xf68, 0x0, 0x0);
        gbc.writeMem(0x1c4b, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xea5d, gbc.sp());
        EXPECT(0x1c4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 02FA
        gbc.setState(0x6f1c, 0xaf92, 0x7ea0, 0x4ba0, 0x3813, 0xfa0, 0x1, 0x0);
        gbc.writeMem(0x6f1c, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xaf92, gbc.sp());
        EXPECT(0x6f1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 02FB
        gbc.setState(0x75dc, 0xd950, 0xba50, 0xe035, 0x78d, 0xb010, 0x1, 0x0);
        gbc.writeMem(0x75dc, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xd950, gbc.sp());
        EXPECT(0x75de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 02FC
        gbc.setState(0x57d2, 0xa312, 0x73a0, 0x735f, 0x5504, 0x9f6f, 0x1, 0x1);
        gbc.writeMem(0x57d2, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xa312, gbc.sp());
        EXPECT(0x57d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 02FD
        gbc.setState(0x8f7, 0xd4ef, 0xbb50, 0x55b3, 0x1567, 0x164a, 0x1, 0x0);
        gbc.writeMem(0x8f7, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xd4ef, gbc.sp());
        EXPECT(0x8f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 02FE
        gbc.setState(0x904, 0x7347, 0x6fb0, 0xabd4, 0xa765, 0x7494, 0x0, 0x1);
        gbc.writeMem(0x904, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x7347, gbc.sp());
        EXPECT(0x906, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0300
        gbc.setState(0x34c0, 0x6bcf, 0x8370, 0x1e8e, 0x2af7, 0x4d28, 0x0, 0x0);
        gbc.writeMem(0x34c0, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x6bcf, gbc.sp());
        EXPECT(0x34c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0301
        gbc.setState(0xef4b, 0x5049, 0x4700, 0xe013, 0x8e22, 0xde71, 0x1, 0x0);
        gbc.writeMem(0xef4b, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x5049, gbc.sp());
        EXPECT(0xef4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef4b));
        EXPECT(0x31, gbc.readMem(0xef4c));
        // CB 31 0302
        gbc.setState(0x8124, 0xa87b, 0x2a20, 0xe288, 0x74ed, 0xca2d, 0x0, 0x1);
        gbc.writeMem(0x8124, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xa87b, gbc.sp());
        EXPECT(0x8126, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8124));
        EXPECT(0x31, gbc.readMem(0x8125));
        // CB 31 0303
        gbc.setState(0xc3ce, 0xaf77, 0xfc30, 0x1a94, 0x1a88, 0x3fb6, 0x1, 0x0);
        gbc.writeMem(0xc3ce, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xaf77, gbc.sp());
        EXPECT(0xc3d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3ce));
        EXPECT(0x31, gbc.readMem(0xc3cf));
        // CB 31 0304
        gbc.setState(0x2261, 0xf098, 0x52c0, 0x43b5, 0x3585, 0x319f, 0x1, 0x0);
        gbc.writeMem(0x2261, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xf098, gbc.sp());
        EXPECT(0x2263, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0305
        gbc.setState(0x6590, 0xb2f5, 0xba80, 0x325a, 0x10df, 0xa3e8, 0x1, 0x0);
        gbc.writeMem(0x6590, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xb2f5, gbc.sp());
        EXPECT(0x6592, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0306
        gbc.setState(0x15a8, 0x3130, 0xf370, 0x3e54, 0x69c5, 0x8e34, 0x1, 0x1);
        gbc.writeMem(0x15a8, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x3130, gbc.sp());
        EXPECT(0x15aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0307
        gbc.setState(0x2e47, 0x49a7, 0xa1b0, 0x25f1, 0x9573, 0x9e0e, 0x1, 0x0);
        gbc.writeMem(0x2e47, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x49a7, gbc.sp());
        EXPECT(0x2e49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0308
        gbc.setState(0x5e86, 0x962, 0x8b0, 0xb0eb, 0x7ef4, 0x155d, 0x1, 0x1);
        gbc.writeMem(0x5e86, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x962, gbc.sp());
        EXPECT(0x5e88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0309
        gbc.setState(0x20b8, 0x45c3, 0x7310, 0x89e, 0x6948, 0xbf27, 0x1, 0x1);
        gbc.writeMem(0x20b8, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x45c3, gbc.sp());
        EXPECT(0x20ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 030A
        gbc.setState(0xe513, 0xd724, 0x42a0, 0x4906, 0xf7d7, 0x356b, 0x1, 0x0);
        gbc.writeMem(0xe513, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xd724, gbc.sp());
        EXPECT(0xe515, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe513));
        EXPECT(0x31, gbc.readMem(0xe514));
        // CB 31 030B
        gbc.setState(0xda89, 0x8f82, 0xb670, 0x7e2, 0x68b4, 0x9caa, 0x0, 0x0);
        gbc.writeMem(0xda89, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x8f82, gbc.sp());
        EXPECT(0xda8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda89));
        EXPECT(0x31, gbc.readMem(0xda8a));
        // CB 31 030C
        gbc.setState(0xd6f2, 0x2cc3, 0xb530, 0x4c30, 0xf32d, 0x98b, 0x0, 0x0);
        gbc.writeMem(0xd6f2, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x2cc3, gbc.sp());
        EXPECT(0xd6f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6f2));
        EXPECT(0x31, gbc.readMem(0xd6f3));
        // CB 31 030D
        gbc.setState(0x712a, 0x338, 0x1b00, 0x92a7, 0xe4f4, 0x6f0a, 0x1, 0x1);
        gbc.writeMem(0x712a, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x338, gbc.sp());
        EXPECT(0x712c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 030F
        gbc.setState(0x5d44, 0xca1e, 0x1fa0, 0xdd24, 0x8151, 0xea51, 0x0, 0x1);
        gbc.writeMem(0x5d44, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xca1e, gbc.sp());
        EXPECT(0x5d46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0310
        gbc.setState(0x3db0, 0x3507, 0xd060, 0x530c, 0x1057, 0xd8d0, 0x1, 0x1);
        gbc.writeMem(0x3db0, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x3507, gbc.sp());
        EXPECT(0x3db2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0311
        gbc.setState(0x17c4, 0x4b71, 0x300, 0x1be2, 0x8e38, 0x9ab0, 0x0, 0x1);
        gbc.writeMem(0x17c4, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x4b71, gbc.sp());
        EXPECT(0x17c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0312
        gbc.setState(0xc817, 0x6ab, 0x5e0, 0x228f, 0x3147, 0x9ed6, 0x0, 0x1);
        gbc.writeMem(0xc817, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x6ab, gbc.sp());
        EXPECT(0xc819, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc817));
        EXPECT(0x31, gbc.readMem(0xc818));
        // CB 31 0313
        gbc.setState(0x22e3, 0x8569, 0x5810, 0x500b, 0x95d1, 0xe680, 0x0, 0x0);
        gbc.writeMem(0x22e3, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x8569, gbc.sp());
        EXPECT(0x22e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0314
        gbc.setState(0x4375, 0x203, 0xb1d0, 0xefc4, 0xcf12, 0x1d1f, 0x0, 0x0);
        gbc.writeMem(0x4375, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x203, gbc.sp());
        EXPECT(0x4377, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0315
        gbc.setState(0x4c33, 0x3ffe, 0xc5f0, 0x7237, 0x1492, 0xded2, 0x1, 0x0);
        gbc.writeMem(0x4c33, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x3ffe, gbc.sp());
        EXPECT(0x4c35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0316
        gbc.setState(0xd118, 0x28df, 0x1900, 0xe670, 0x50d5, 0xe80c, 0x0, 0x1);
        gbc.writeMem(0xd118, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x28df, gbc.sp());
        EXPECT(0xd11a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd118));
        EXPECT(0x31, gbc.readMem(0xd119));
        // CB 31 0317
        gbc.setState(0xb254, 0x2b38, 0x660, 0x1c60, 0x97fc, 0xeab3, 0x0, 0x0);
        gbc.writeMem(0xb254, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x2b38, gbc.sp());
        EXPECT(0xb256, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb254));
        EXPECT(0x31, gbc.readMem(0xb255));
        // CB 31 0318
        gbc.setState(0xa2bb, 0x55e, 0x6b00, 0xd73c, 0x5cee, 0xc017, 0x0, 0x0);
        gbc.writeMem(0xa2bb, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x55e, gbc.sp());
        EXPECT(0xa2bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2bb));
        EXPECT(0x31, gbc.readMem(0xa2bc));
        // CB 31 0319
        gbc.setState(0xa866, 0x878b, 0xf40, 0xda13, 0x92bc, 0x26e1, 0x0, 0x1);
        gbc.writeMem(0xa866, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x878b, gbc.sp());
        EXPECT(0xa868, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa866));
        EXPECT(0x31, gbc.readMem(0xa867));
        // CB 31 031A
        gbc.setState(0x966f, 0xe15f, 0x7e30, 0x59af, 0x745f, 0x5c7d, 0x0, 0x1);
        gbc.writeMem(0x966f, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xe15f, gbc.sp());
        EXPECT(0x9671, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x966f));
        EXPECT(0x31, gbc.readMem(0x9670));
        // CB 31 031B
        gbc.setState(0xe073, 0xc35d, 0x7d70, 0xf63c, 0x4992, 0xf045, 0x1, 0x1);
        gbc.writeMem(0xe073, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xc35d, gbc.sp());
        EXPECT(0xe075, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe073));
        EXPECT(0x31, gbc.readMem(0xe074));
        // CB 31 031C
        gbc.setState(0xd141, 0x16a2, 0xa380, 0x1e1f, 0x4e9e, 0x7091, 0x1, 0x1);
        gbc.writeMem(0xd141, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x16a2, gbc.sp());
        EXPECT(0xd143, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd141));
        EXPECT(0x31, gbc.readMem(0xd142));
        // CB 31 031D
        gbc.setState(0xa652, 0xd67e, 0x3e20, 0xaed, 0x1057, 0x1b46, 0x0, 0x1);
        gbc.writeMem(0xa652, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xd67e, gbc.sp());
        EXPECT(0xa654, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa652));
        EXPECT(0x31, gbc.readMem(0xa653));
        // CB 31 031E
        gbc.setState(0xe109, 0x7e8e, 0xbe00, 0x75be, 0xbe13, 0x4b08, 0x1, 0x1);
        gbc.writeMem(0xe109, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x7e8e, gbc.sp());
        EXPECT(0xe10b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe109));
        EXPECT(0x31, gbc.readMem(0xe10a));
        // CB 31 031F
        gbc.setState(0x317a, 0xfc8c, 0xddf0, 0xd7fe, 0x88c8, 0x452f, 0x0, 0x1);
        gbc.writeMem(0x317a, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xfc8c, gbc.sp());
        EXPECT(0x317c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0320
        gbc.setState(0x4c11, 0xbb17, 0x76f0, 0x695a, 0x9d6b, 0xf8cd, 0x1, 0x1);
        gbc.writeMem(0x4c11, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xbb17, gbc.sp());
        EXPECT(0x4c13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0321
        gbc.setState(0xe3e2, 0x8a59, 0xe4c0, 0x8ec9, 0x8946, 0x7f91, 0x0, 0x0);
        gbc.writeMem(0xe3e2, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x8a59, gbc.sp());
        EXPECT(0xe3e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3e2));
        EXPECT(0x31, gbc.readMem(0xe3e3));
        // CB 31 0322
        gbc.setState(0x35a8, 0xdd71, 0xf8a0, 0xd934, 0x9ca4, 0xf7bb, 0x1, 0x1);
        gbc.writeMem(0x35a8, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xdd71, gbc.sp());
        EXPECT(0x35aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0323
        gbc.setState(0x7d1, 0x6a89, 0x9d40, 0xe9bc, 0xa994, 0x1812, 0x0, 0x1);
        gbc.writeMem(0x7d1, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x6a89, gbc.sp());
        EXPECT(0x7d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0324
        gbc.setState(0x6a7e, 0x21e, 0xbf60, 0xa358, 0x8dc8, 0x995d, 0x1, 0x1);
        gbc.writeMem(0x6a7e, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x21e, gbc.sp());
        EXPECT(0x6a80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0325
        gbc.setState(0xae86, 0xd55c, 0x85f0, 0x5403, 0x4560, 0x19bd, 0x1, 0x0);
        gbc.writeMem(0xae86, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xd55c, gbc.sp());
        EXPECT(0xae88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae86));
        EXPECT(0x31, gbc.readMem(0xae87));
        // CB 31 0326
        gbc.setState(0xc7d5, 0xf0d4, 0x5be0, 0x5465, 0xf03e, 0xff88, 0x1, 0x0);
        gbc.writeMem(0xc7d5, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xf0d4, gbc.sp());
        EXPECT(0xc7d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7d5));
        EXPECT(0x31, gbc.readMem(0xc7d6));
        // CB 31 0327
        gbc.setState(0x132b, 0xc6d2, 0xd560, 0xdfef, 0xaa88, 0x232e, 0x1, 0x0);
        gbc.writeMem(0x132b, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xc6d2, gbc.sp());
        EXPECT(0x132d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0328
        gbc.setState(0xef57, 0xab37, 0xed0, 0x2100, 0xc776, 0x3899, 0x1, 0x1);
        gbc.writeMem(0xef57, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xab37, gbc.sp());
        EXPECT(0xef59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef57));
        EXPECT(0x31, gbc.readMem(0xef58));
        // CB 31 0329
        gbc.setState(0xad91, 0x7d67, 0xe640, 0xe790, 0xece1, 0xae31, 0x1, 0x1);
        gbc.writeMem(0xad91, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x7d67, gbc.sp());
        EXPECT(0xad93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad91));
        EXPECT(0x31, gbc.readMem(0xad92));
        // CB 31 032A
        gbc.setState(0xb4ca, 0x9213, 0xb200, 0x54f2, 0x72a1, 0x2cea, 0x1, 0x0);
        gbc.writeMem(0xb4ca, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x9213, gbc.sp());
        EXPECT(0xb4cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4ca));
        EXPECT(0x31, gbc.readMem(0xb4cb));
        // CB 31 032B
        gbc.setState(0x22f8, 0x87a9, 0xd7c0, 0xbdb7, 0x45a9, 0xed70, 0x0, 0x0);
        gbc.writeMem(0x22f8, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x87a9, gbc.sp());
        EXPECT(0x22fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 032C
        gbc.setState(0xad30, 0xe1b9, 0x2970, 0xdcac, 0x3f40, 0x289a, 0x0, 0x0);
        gbc.writeMem(0xad30, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xe1b9, gbc.sp());
        EXPECT(0xad32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad30));
        EXPECT(0x31, gbc.readMem(0xad31));
        // CB 31 032D
        gbc.setState(0x165f, 0xffa, 0x84d0, 0x68db, 0x64b6, 0xbf8a, 0x1, 0x1);
        gbc.writeMem(0x165f, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xffa, gbc.sp());
        EXPECT(0x1661, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 032E
        gbc.setState(0xaea8, 0x6360, 0x46d0, 0x7f0c, 0xb288, 0x70f5, 0x0, 0x1);
        gbc.writeMem(0xaea8, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x6360, gbc.sp());
        EXPECT(0xaeaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaea8));
        EXPECT(0x31, gbc.readMem(0xaea9));
        // CB 31 0330
        gbc.setState(0xac5f, 0x9321, 0xf430, 0x9bbf, 0xcc30, 0xee22, 0x0, 0x0);
        gbc.writeMem(0xac5f, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x9321, gbc.sp());
        EXPECT(0xac61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac5f));
        EXPECT(0x31, gbc.readMem(0xac60));
        // CB 31 0331
        gbc.setState(0x8425, 0x3038, 0x2840, 0xdcf, 0x5d17, 0x8f16, 0x0, 0x1);
        gbc.writeMem(0x8425, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x3038, gbc.sp());
        EXPECT(0x8427, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8425));
        EXPECT(0x31, gbc.readMem(0x8426));
        // CB 31 0332
        gbc.setState(0x33b8, 0x7f44, 0x5040, 0x37ef, 0xf4b7, 0x33, 0x0, 0x1);
        gbc.writeMem(0x33b8, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x7f44, gbc.sp());
        EXPECT(0x33ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0333
        gbc.setState(0xa99f, 0x72b, 0xe910, 0x29ff, 0x8914, 0x94be, 0x0, 0x1);
        gbc.writeMem(0xa99f, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x72b, gbc.sp());
        EXPECT(0xa9a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa99f));
        EXPECT(0x31, gbc.readMem(0xa9a0));
        // CB 31 0334
        gbc.setState(0x22c7, 0xb712, 0x96a0, 0xd90d, 0x4a72, 0x62a2, 0x1, 0x0);
        gbc.writeMem(0x22c7, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xb712, gbc.sp());
        EXPECT(0x22c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0335
        gbc.setState(0xba6b, 0x2459, 0x2c70, 0xfb, 0x5bcc, 0xb39c, 0x0, 0x0);
        gbc.writeMem(0xba6b, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x2459, gbc.sp());
        EXPECT(0xba6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba6b));
        EXPECT(0x31, gbc.readMem(0xba6c));
        // CB 31 0336
        gbc.setState(0x3d6f, 0xa12e, 0x7a60, 0xf6d3, 0xc778, 0x69a6, 0x0, 0x0);
        gbc.writeMem(0x3d6f, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xa12e, gbc.sp());
        EXPECT(0x3d71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0337
        gbc.setState(0xae27, 0xf2d1, 0x86d0, 0x6b32, 0xb4e, 0x8647, 0x1, 0x1);
        gbc.writeMem(0xae27, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xf2d1, gbc.sp());
        EXPECT(0xae29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae27));
        EXPECT(0x31, gbc.readMem(0xae28));
        // CB 31 0338
        gbc.setState(0x1978, 0x7ebf, 0x9820, 0x2284, 0xd734, 0xb8e4, 0x1, 0x1);
        gbc.writeMem(0x1978, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x7ebf, gbc.sp());
        EXPECT(0x197a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0339
        gbc.setState(0xe9b4, 0xcdd4, 0x2ea0, 0x6911, 0x3397, 0x8f54, 0x0, 0x1);
        gbc.writeMem(0xe9b4, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xcdd4, gbc.sp());
        EXPECT(0xe9b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9b4));
        EXPECT(0x31, gbc.readMem(0xe9b5));
        // CB 31 033A
        gbc.setState(0x6f25, 0x5283, 0x1fd0, 0xe63f, 0xf648, 0x2ad7, 0x0, 0x0);
        gbc.writeMem(0x6f25, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x5283, gbc.sp());
        EXPECT(0x6f27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 033B
        gbc.setState(0x32c0, 0xa9f, 0x8570, 0x4ad7, 0xfdf6, 0x21e1, 0x1, 0x1);
        gbc.writeMem(0x32c0, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xa9f, gbc.sp());
        EXPECT(0x32c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 033C
        gbc.setState(0x3c6d, 0xdbd4, 0xd040, 0x8745, 0x850b, 0x2383, 0x0, 0x0);
        gbc.writeMem(0x3c6d, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xdbd4, gbc.sp());
        EXPECT(0x3c6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 033D
        gbc.setState(0xb8ac, 0xab67, 0x8a20, 0xab8f, 0x533d, 0x1b89, 0x1, 0x1);
        gbc.writeMem(0xb8ac, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xab67, gbc.sp());
        EXPECT(0xb8ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8ac));
        EXPECT(0x31, gbc.readMem(0xb8ad));
        // CB 31 033E
        gbc.setState(0x3d2d, 0xfcce, 0xba90, 0x3727, 0x4bd3, 0x74f6, 0x0, 0x0);
        gbc.writeMem(0x3d2d, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xfcce, gbc.sp());
        EXPECT(0x3d2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 033F
        gbc.setState(0xda6, 0x3c5f, 0x1240, 0xa8ef, 0x84cf, 0xcc61, 0x1, 0x0);
        gbc.writeMem(0xda6, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x3c5f, gbc.sp());
        EXPECT(0xda8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0340
        gbc.setState(0x181c, 0xc84, 0x110, 0xc2ac, 0xc2a, 0xbab6, 0x0, 0x0);
        gbc.writeMem(0x181c, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xc84, gbc.sp());
        EXPECT(0x181e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0341
        gbc.setState(0x8c86, 0x8890, 0xf70, 0x4de1, 0x8de6, 0x6f91, 0x0, 0x0);
        gbc.writeMem(0x8c86, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x8890, gbc.sp());
        EXPECT(0x8c88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c86));
        EXPECT(0x31, gbc.readMem(0x8c87));
        // CB 31 0342
        gbc.setState(0x13d2, 0x3a0e, 0xf160, 0x50f5, 0x7472, 0xcfb1, 0x1, 0x1);
        gbc.writeMem(0x13d2, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x3a0e, gbc.sp());
        EXPECT(0x13d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0343
        gbc.setState(0xc75, 0x14f6, 0x21b0, 0xac08, 0xa422, 0xb002, 0x1, 0x1);
        gbc.writeMem(0xc75, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x14f6, gbc.sp());
        EXPECT(0xc77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0344
        gbc.setState(0xa0ff, 0x7ed3, 0xbc20, 0x20c9, 0xc69d, 0xb898, 0x1, 0x1);
        gbc.writeMem(0xa0ff, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x7ed3, gbc.sp());
        EXPECT(0xa101, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0ff));
        EXPECT(0x31, gbc.readMem(0xa100));
        // CB 31 0345
        gbc.setState(0x37f5, 0x1a62, 0x9e80, 0xf921, 0xf754, 0x5aed, 0x1, 0x1);
        gbc.writeMem(0x37f5, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x1a62, gbc.sp());
        EXPECT(0x37f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0346
        gbc.setState(0xd8b0, 0x3999, 0xf570, 0x2d97, 0xae56, 0x8d7e, 0x0, 0x1);
        gbc.writeMem(0xd8b0, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x3999, gbc.sp());
        EXPECT(0xd8b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8b0));
        EXPECT(0x31, gbc.readMem(0xd8b1));
        // CB 31 0347
        gbc.setState(0x4800, 0x651d, 0x95e0, 0xc793, 0x7a3f, 0xeaee, 0x0, 0x1);
        gbc.writeMem(0x4800, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x651d, gbc.sp());
        EXPECT(0x4802, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0348
        gbc.setState(0xb286, 0xb6fc, 0x37a0, 0xd6, 0xbf11, 0x8977, 0x0, 0x0);
        gbc.writeMem(0xb286, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xb6fc, gbc.sp());
        EXPECT(0xb288, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb286));
        EXPECT(0x31, gbc.readMem(0xb287));
        // CB 31 0349
        gbc.setState(0x2879, 0xfde4, 0xcc0, 0xe863, 0x4356, 0x280, 0x0, 0x0);
        gbc.writeMem(0x2879, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xfde4, gbc.sp());
        EXPECT(0x287b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 034A
        gbc.setState(0xef6d, 0xd832, 0x8050, 0x317e, 0x5dc8, 0xd786, 0x0, 0x0);
        gbc.writeMem(0xef6d, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xd832, gbc.sp());
        EXPECT(0xef6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef6d));
        EXPECT(0x31, gbc.readMem(0xef6e));
        // CB 31 034B
        gbc.setState(0x1ca3, 0x187f, 0x9c80, 0x4adb, 0xc760, 0x126f, 0x0, 0x0);
        gbc.writeMem(0x1ca3, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x187f, gbc.sp());
        EXPECT(0x1ca5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 034C
        gbc.setState(0x21af, 0x55ec, 0xb210, 0x9344, 0x1665, 0x1506, 0x0, 0x1);
        gbc.writeMem(0x21af, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x55ec, gbc.sp());
        EXPECT(0x21b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 034D
        gbc.setState(0x4e7b, 0xe, 0x8880, 0xc04b, 0x98df, 0x1074, 0x0, 0x1);
        gbc.writeMem(0x4e7b, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xe, gbc.sp());
        EXPECT(0x4e7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 034E
        gbc.setState(0x1f3c, 0xe7a0, 0xebe0, 0xd02d, 0x9d74, 0x27e3, 0x1, 0x1);
        gbc.writeMem(0x1f3c, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xe7a0, gbc.sp());
        EXPECT(0x1f3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 034F
        gbc.setState(0xa0, 0xe766, 0xc910, 0x7e45, 0xf6a4, 0xf50d, 0x1, 0x0);
        gbc.writeMem(0xa0, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xe766, gbc.sp());
        EXPECT(0xa2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0350
        gbc.setState(0x18f3, 0xc3fd, 0xcb50, 0x4fa, 0xe76a, 0x84c9, 0x0, 0x1);
        gbc.writeMem(0x18f3, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xc3fd, gbc.sp());
        EXPECT(0x18f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0351
        gbc.setState(0xa218, 0xdf24, 0x8db0, 0x1677, 0x461b, 0xefe, 0x0, 0x0);
        gbc.writeMem(0xa218, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xdf24, gbc.sp());
        EXPECT(0xa21a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa218));
        EXPECT(0x31, gbc.readMem(0xa219));
        // CB 31 0352
        gbc.setState(0x5cc7, 0x9e72, 0x56e0, 0x7f6a, 0x6b28, 0x8eba, 0x1, 0x0);
        gbc.writeMem(0x5cc7, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x9e72, gbc.sp());
        EXPECT(0x5cc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0353
        gbc.setState(0x2f78, 0x2284, 0x65b0, 0xe123, 0x11bb, 0x6187, 0x0, 0x1);
        gbc.writeMem(0x2f78, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x2284, gbc.sp());
        EXPECT(0x2f7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0354
        gbc.setState(0xa553, 0x4d25, 0xb0a0, 0x929b, 0x2761, 0xf7c1, 0x0, 0x0);
        gbc.writeMem(0xa553, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x4d25, gbc.sp());
        EXPECT(0xa555, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa553));
        EXPECT(0x31, gbc.readMem(0xa554));
        // CB 31 0355
        gbc.setState(0x7c16, 0xa01, 0xad70, 0xd334, 0x3d93, 0x7c0, 0x0, 0x0);
        gbc.writeMem(0x7c16, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xa01, gbc.sp());
        EXPECT(0x7c18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0356
        gbc.setState(0xc4d9, 0x9afc, 0x9b30, 0xd2b9, 0xda0e, 0x72e1, 0x0, 0x0);
        gbc.writeMem(0xc4d9, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x9afc, gbc.sp());
        EXPECT(0xc4db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4d9));
        EXPECT(0x31, gbc.readMem(0xc4da));
        // CB 31 0357
        gbc.setState(0xa9b7, 0x8793, 0xaad0, 0xc228, 0x6a04, 0x3954, 0x1, 0x1);
        gbc.writeMem(0xa9b7, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x8793, gbc.sp());
        EXPECT(0xa9b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9b7));
        EXPECT(0x31, gbc.readMem(0xa9b8));
        // CB 31 0358
        gbc.setState(0x74d1, 0x5973, 0x1620, 0x797d, 0x306a, 0xd36c, 0x1, 0x0);
        gbc.writeMem(0x74d1, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x5973, gbc.sp());
        EXPECT(0x74d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0359
        gbc.setState(0x15f4, 0xbf8d, 0x690, 0x6f84, 0x8fa, 0x8734, 0x0, 0x1);
        gbc.writeMem(0x15f4, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xbf8d, gbc.sp());
        EXPECT(0x15f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 035A
        gbc.setState(0x63a0, 0x4c8f, 0x16d0, 0xa1a4, 0xb687, 0x2686, 0x1, 0x0);
        gbc.writeMem(0x63a0, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x4c8f, gbc.sp());
        EXPECT(0x63a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 035B
        gbc.setState(0x57ad, 0x920a, 0x8e10, 0xacbb, 0x96af, 0xfeb2, 0x1, 0x1);
        gbc.writeMem(0x57ad, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x920a, gbc.sp());
        EXPECT(0x57af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 035C
        gbc.setState(0xb81f, 0x6b39, 0xa450, 0x1be5, 0xe445, 0xd0b1, 0x1, 0x1);
        gbc.writeMem(0xb81f, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x6b39, gbc.sp());
        EXPECT(0xb821, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb81f));
        EXPECT(0x31, gbc.readMem(0xb820));
        // CB 31 035D
        gbc.setState(0xe713, 0xd3ff, 0x38d0, 0x2a35, 0xc8d6, 0x3a9c, 0x1, 0x0);
        gbc.writeMem(0xe713, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xd3ff, gbc.sp());
        EXPECT(0xe715, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe713));
        EXPECT(0x31, gbc.readMem(0xe714));
        // CB 31 035E
        gbc.setState(0xb0a4, 0x5713, 0x8710, 0xb3a1, 0xf6e2, 0xe76b, 0x1, 0x0);
        gbc.writeMem(0xb0a4, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x5713, gbc.sp());
        EXPECT(0xb0a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0a4));
        EXPECT(0x31, gbc.readMem(0xb0a5));
        // CB 31 035F
        gbc.setState(0xae0d, 0x58a6, 0x8440, 0xff5f, 0x596b, 0xb63d, 0x0, 0x0);
        gbc.writeMem(0xae0d, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x58a6, gbc.sp());
        EXPECT(0xae0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae0d));
        EXPECT(0x31, gbc.readMem(0xae0e));
        // CB 31 0360
        gbc.setState(0x577, 0x8220, 0x39b0, 0x4c80, 0x77a5, 0x918c, 0x0, 0x1);
        gbc.writeMem(0x577, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x8220, gbc.sp());
        EXPECT(0x579, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0361
        gbc.setState(0x1fbd, 0x1ba7, 0x1d20, 0x9ae8, 0x7fd1, 0x2f01, 0x0, 0x1);
        gbc.writeMem(0x1fbd, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x1ba7, gbc.sp());
        EXPECT(0x1fbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0362
        gbc.setState(0xce2e, 0xd4cc, 0xea30, 0xcee7, 0x4067, 0x8836, 0x0, 0x0);
        gbc.writeMem(0xce2e, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xd4cc, gbc.sp());
        EXPECT(0xce30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce2e));
        EXPECT(0x31, gbc.readMem(0xce2f));
        // CB 31 0363
        gbc.setState(0x5ccb, 0x8968, 0x6130, 0xe13f, 0xb353, 0xdd5e, 0x1, 0x0);
        gbc.writeMem(0x5ccb, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x8968, gbc.sp());
        EXPECT(0x5ccd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0364
        gbc.setState(0xe034, 0x535, 0xbd20, 0x27bd, 0x354c, 0x4e69, 0x0, 0x1);
        gbc.writeMem(0xe034, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x535, gbc.sp());
        EXPECT(0xe036, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe034));
        EXPECT(0x31, gbc.readMem(0xe035));
        // CB 31 0365
        gbc.setState(0x8368, 0x9950, 0x8540, 0x2a12, 0x8a7a, 0x9bfa, 0x1, 0x1);
        gbc.writeMem(0x8368, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x9950, gbc.sp());
        EXPECT(0x836a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8368));
        EXPECT(0x31, gbc.readMem(0x8369));
        // CB 31 0366
        gbc.setState(0x7583, 0x9a13, 0x2d10, 0x8228, 0x2354, 0xa3db, 0x1, 0x1);
        gbc.writeMem(0x7583, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x9a13, gbc.sp());
        EXPECT(0x7585, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0367
        gbc.setState(0x4d39, 0xdac8, 0x350, 0x4ce6, 0xcf5b, 0x936a, 0x1, 0x0);
        gbc.writeMem(0x4d39, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xdac8, gbc.sp());
        EXPECT(0x4d3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0368
        gbc.setState(0x940a, 0x7a42, 0x69b0, 0xfc23, 0x4d12, 0xe94e, 0x1, 0x0);
        gbc.writeMem(0x940a, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x7a42, gbc.sp());
        EXPECT(0x940c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x940a));
        EXPECT(0x31, gbc.readMem(0x940b));
        // CB 31 0369
        gbc.setState(0x239b, 0xd9ef, 0xcf90, 0x9f31, 0xf0d9, 0x893, 0x1, 0x1);
        gbc.writeMem(0x239b, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xd9ef, gbc.sp());
        EXPECT(0x239d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 036A
        gbc.setState(0xd01d, 0x7ea, 0xb960, 0xb9db, 0xa30a, 0xf3e0, 0x0, 0x0);
        gbc.writeMem(0xd01d, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x7ea, gbc.sp());
        EXPECT(0xd01f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd01d));
        EXPECT(0x31, gbc.readMem(0xd01e));
        // CB 31 036B
        gbc.setState(0x4562, 0x81ff, 0x44b0, 0xebab, 0xb782, 0x958d, 0x0, 0x1);
        gbc.writeMem(0x4562, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x81ff, gbc.sp());
        EXPECT(0x4564, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 036C
        gbc.setState(0x399f, 0xa42, 0x82b0, 0xe175, 0xf201, 0xbbd9, 0x1, 0x1);
        gbc.writeMem(0x399f, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xa42, gbc.sp());
        EXPECT(0x39a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 036D
        gbc.setState(0x593f, 0x21b, 0x1560, 0x2703, 0x5fe4, 0xce12, 0x0, 0x0);
        gbc.writeMem(0x593f, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x21b, gbc.sp());
        EXPECT(0x5941, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 036E
        gbc.setState(0x5b0b, 0x6e31, 0x7430, 0x4dc4, 0xbc02, 0x65ac, 0x1, 0x1);
        gbc.writeMem(0x5b0b, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x6e31, gbc.sp());
        EXPECT(0x5b0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 036F
        gbc.setState(0x3658, 0x9e37, 0x45c0, 0xf072, 0xcdca, 0x1e4, 0x0, 0x0);
        gbc.writeMem(0x3658, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x9e37, gbc.sp());
        EXPECT(0x365a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0370
        gbc.setState(0x49ee, 0x58ec, 0x8810, 0x6de1, 0x4897, 0x9321, 0x0, 0x0);
        gbc.writeMem(0x49ee, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x58ec, gbc.sp());
        EXPECT(0x49f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0371
        gbc.setState(0x1104, 0x91a8, 0x6830, 0x4222, 0xd974, 0xee32, 0x1, 0x0);
        gbc.writeMem(0x1104, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x91a8, gbc.sp());
        EXPECT(0x1106, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0372
        gbc.setState(0x383, 0xe0a2, 0xdf00, 0xd386, 0xa5d9, 0x4685, 0x1, 0x0);
        gbc.writeMem(0x383, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xe0a2, gbc.sp());
        EXPECT(0x385, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0373
        gbc.setState(0x90e7, 0x73f1, 0x19c0, 0x1ca4, 0xda01, 0x38a8, 0x0, 0x0);
        gbc.writeMem(0x90e7, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x73f1, gbc.sp());
        EXPECT(0x90e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90e7));
        EXPECT(0x31, gbc.readMem(0x90e8));
        // CB 31 0374
        gbc.setState(0x910a, 0x954e, 0x11f0, 0x62af, 0x4efb, 0x486d, 0x1, 0x1);
        gbc.writeMem(0x910a, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x954e, gbc.sp());
        EXPECT(0x910c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x910a));
        EXPECT(0x31, gbc.readMem(0x910b));
        // CB 31 0375
        gbc.setState(0xeb76, 0x26b9, 0x7b30, 0x9e26, 0x4264, 0xb522, 0x0, 0x1);
        gbc.writeMem(0xeb76, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x26b9, gbc.sp());
        EXPECT(0xeb78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb76));
        EXPECT(0x31, gbc.readMem(0xeb77));
        // CB 31 0376
        gbc.setState(0x4cd7, 0xd1c0, 0x7060, 0xbcd, 0x8311, 0xab9c, 0x0, 0x1);
        gbc.writeMem(0x4cd7, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xd1c0, gbc.sp());
        EXPECT(0x4cd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0377
        gbc.setState(0x59a6, 0xbedc, 0x28a0, 0x1b1b, 0xb224, 0x5515, 0x1, 0x0);
        gbc.writeMem(0x59a6, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xbedc, gbc.sp());
        EXPECT(0x59a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0378
        gbc.setState(0xe719, 0x3484, 0xb2e0, 0xb5d5, 0x112c, 0xd335, 0x1, 0x1);
        gbc.writeMem(0xe719, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x3484, gbc.sp());
        EXPECT(0xe71b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe719));
        EXPECT(0x31, gbc.readMem(0xe71a));
        // CB 31 0379
        gbc.setState(0x69f9, 0x6aeb, 0x4830, 0x93b8, 0xa610, 0xcdbf, 0x1, 0x0);
        gbc.writeMem(0x69f9, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x6aeb, gbc.sp());
        EXPECT(0x69fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 037A
        gbc.setState(0xe633, 0xe517, 0xc4e0, 0x7917, 0xb339, 0xb2db, 0x0, 0x0);
        gbc.writeMem(0xe633, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xe517, gbc.sp());
        EXPECT(0xe635, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe633));
        EXPECT(0x31, gbc.readMem(0xe634));
        // CB 31 037B
        gbc.setState(0xa0ca, 0xad6a, 0x490, 0xb574, 0x5b21, 0x80ea, 0x0, 0x0);
        gbc.writeMem(0xa0ca, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xad6a, gbc.sp());
        EXPECT(0xa0cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0ca));
        EXPECT(0x31, gbc.readMem(0xa0cb));
        // CB 31 037C
        gbc.setState(0x3815, 0x3fb6, 0xf890, 0xba5, 0x5299, 0x2c7b, 0x1, 0x1);
        gbc.writeMem(0x3815, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x3fb6, gbc.sp());
        EXPECT(0x3817, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 037D
        gbc.setState(0x6594, 0xb915, 0x31b0, 0x436d, 0x6bb1, 0x4f8, 0x1, 0x0);
        gbc.writeMem(0x6594, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xb915, gbc.sp());
        EXPECT(0x6596, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 037E
        gbc.setState(0x63d6, 0x97f, 0x3640, 0x5287, 0x9a0b, 0xf539, 0x1, 0x1);
        gbc.writeMem(0x63d6, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x97f, gbc.sp());
        EXPECT(0x63d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 037F
        gbc.setState(0xea3a, 0x4a83, 0x1820, 0x37f9, 0x54c5, 0xbc8a, 0x1, 0x1);
        gbc.writeMem(0xea3a, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x4a83, gbc.sp());
        EXPECT(0xea3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea3a));
        EXPECT(0x31, gbc.readMem(0xea3b));
        // CB 31 0380
        gbc.setState(0x6066, 0x8927, 0xd680, 0x94b6, 0x4280, 0x2407, 0x1, 0x1);
        gbc.writeMem(0x6066, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x8927, gbc.sp());
        EXPECT(0x6068, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0381
        gbc.setState(0xed57, 0x400e, 0x1db0, 0x9d4e, 0xe656, 0x7ce1, 0x0, 0x0);
        gbc.writeMem(0xed57, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x400e, gbc.sp());
        EXPECT(0xed59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed57));
        EXPECT(0x31, gbc.readMem(0xed58));
        // CB 31 0382
        gbc.setState(0x8b3e, 0x11d8, 0x98c0, 0xfe28, 0x8089, 0x3452, 0x1, 0x1);
        gbc.writeMem(0x8b3e, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x11d8, gbc.sp());
        EXPECT(0x8b40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b3e));
        EXPECT(0x31, gbc.readMem(0x8b3f));
        // CB 31 0384
        gbc.setState(0x68ee, 0xa82, 0xce0, 0xba79, 0xc2d5, 0x386a, 0x0, 0x0);
        gbc.writeMem(0x68ee, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xa82, gbc.sp());
        EXPECT(0x68f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0385
        gbc.setState(0x4ba5, 0x8662, 0x6950, 0x26d3, 0x9eb1, 0xe2f9, 0x1, 0x0);
        gbc.writeMem(0x4ba5, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x8662, gbc.sp());
        EXPECT(0x4ba7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0386
        gbc.setState(0x3e90, 0x70fa, 0x5fa0, 0xba9b, 0x3adf, 0x233d, 0x0, 0x1);
        gbc.writeMem(0x3e90, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x70fa, gbc.sp());
        EXPECT(0x3e92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0387
        gbc.setState(0xdefa, 0xbef8, 0xbb30, 0x5ef1, 0x8f68, 0xecfc, 0x1, 0x0);
        gbc.writeMem(0xdefa, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xbef8, gbc.sp());
        EXPECT(0xdefc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdefa));
        EXPECT(0x31, gbc.readMem(0xdefb));
        // CB 31 0388
        gbc.setState(0xd1ce, 0xde73, 0x3820, 0x5a78, 0x1433, 0x9ccc, 0x1, 0x1);
        gbc.writeMem(0xd1ce, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xde73, gbc.sp());
        EXPECT(0xd1d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1ce));
        EXPECT(0x31, gbc.readMem(0xd1cf));
        // CB 31 0389
        gbc.setState(0xc9be, 0x88ce, 0xa5c0, 0xf224, 0xb3f2, 0x8b91, 0x0, 0x1);
        gbc.writeMem(0xc9be, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x88ce, gbc.sp());
        EXPECT(0xc9c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9be));
        EXPECT(0x31, gbc.readMem(0xc9bf));
        // CB 31 038A
        gbc.setState(0x4259, 0xc486, 0xfe30, 0xae6a, 0x5e05, 0xa112, 0x0, 0x1);
        gbc.writeMem(0x4259, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xc486, gbc.sp());
        EXPECT(0x425b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 038B
        gbc.setState(0x1f05, 0xd1e, 0xe510, 0x68e2, 0x34c8, 0xd918, 0x0, 0x1);
        gbc.writeMem(0x1f05, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xd1e, gbc.sp());
        EXPECT(0x1f07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 038C
        gbc.setState(0x9d38, 0x2d1c, 0x2c60, 0x100b, 0x7a4f, 0x23c6, 0x0, 0x0);
        gbc.writeMem(0x9d38, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x2d1c, gbc.sp());
        EXPECT(0x9d3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d38));
        EXPECT(0x31, gbc.readMem(0x9d39));
        // CB 31 038D
        gbc.setState(0x299d, 0x43a5, 0xbdd0, 0x65fd, 0x991a, 0xab4, 0x0, 0x1);
        gbc.writeMem(0x299d, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x43a5, gbc.sp());
        EXPECT(0x299f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 038E
        gbc.setState(0x4225, 0x538d, 0xe5f0, 0xbca9, 0x3a52, 0x195a, 0x1, 0x0);
        gbc.writeMem(0x4225, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x538d, gbc.sp());
        EXPECT(0x4227, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 038F
        gbc.setState(0x4fa5, 0xfc9e, 0xa9c0, 0xa3a8, 0x614, 0x95a7, 0x1, 0x0);
        gbc.writeMem(0x4fa5, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xfc9e, gbc.sp());
        EXPECT(0x4fa7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0390
        gbc.setState(0x30fa, 0x6eb0, 0xaf30, 0x1585, 0xe15d, 0x90d2, 0x0, 0x1);
        gbc.writeMem(0x30fa, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x6eb0, gbc.sp());
        EXPECT(0x30fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0391
        gbc.setState(0x9846, 0xb121, 0x8d10, 0x2c4f, 0x24c3, 0xbc85, 0x0, 0x0);
        gbc.writeMem(0x9846, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xb121, gbc.sp());
        EXPECT(0x9848, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9846));
        EXPECT(0x31, gbc.readMem(0x9847));
        // CB 31 0392
        gbc.setState(0xc264, 0xba5a, 0x1290, 0xb92b, 0xae90, 0xb540, 0x0, 0x0);
        gbc.writeMem(0xc264, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xba5a, gbc.sp());
        EXPECT(0xc266, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc264));
        EXPECT(0x31, gbc.readMem(0xc265));
        // CB 31 0393
        gbc.setState(0x3679, 0x41ce, 0x2f60, 0xb7be, 0x2fc2, 0x7c43, 0x1, 0x0);
        gbc.writeMem(0x3679, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x41ce, gbc.sp());
        EXPECT(0x367b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0394
        gbc.setState(0x4123, 0xa12f, 0xd420, 0x1181, 0x83e6, 0x69b5, 0x1, 0x0);
        gbc.writeMem(0x4123, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xa12f, gbc.sp());
        EXPECT(0x4125, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0395
        gbc.setState(0x2c24, 0xcef, 0xa240, 0x9c27, 0x9c5, 0x19c1, 0x1, 0x0);
        gbc.writeMem(0x2c24, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xcef, gbc.sp());
        EXPECT(0x2c26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0396
        gbc.setState(0x9b9f, 0x2a4, 0x14a0, 0x2fa9, 0x87cb, 0x695d, 0x1, 0x0);
        gbc.writeMem(0x9b9f, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x2a4, gbc.sp());
        EXPECT(0x9ba1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b9f));
        EXPECT(0x31, gbc.readMem(0x9ba0));
        // CB 31 0397
        gbc.setState(0x197b, 0xb3fe, 0x8850, 0x6f28, 0x154e, 0x7e4c, 0x1, 0x1);
        gbc.writeMem(0x197b, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xb3fe, gbc.sp());
        EXPECT(0x197d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0398
        gbc.setState(0x6b54, 0xf632, 0xf400, 0x12a1, 0xdb9f, 0xc4eb, 0x0, 0x0);
        gbc.writeMem(0x6b54, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xf632, gbc.sp());
        EXPECT(0x6b56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 0399
        gbc.setState(0x4a29, 0xc285, 0xb850, 0x7b87, 0x4a30, 0xbf4e, 0x1, 0x0);
        gbc.writeMem(0x4a29, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xc285, gbc.sp());
        EXPECT(0x4a2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 039A
        gbc.setState(0xebcb, 0x4e97, 0x7f00, 0x5f50, 0x3d60, 0x6f7b, 0x1, 0x0);
        gbc.writeMem(0xebcb, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x4e97, gbc.sp());
        EXPECT(0xebcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebcb));
        EXPECT(0x31, gbc.readMem(0xebcc));
        // CB 31 039B
        gbc.setState(0xd91b, 0x57fa, 0xd3f0, 0xaa0d, 0x4f3a, 0x4db, 0x1, 0x1);
        gbc.writeMem(0xd91b, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x57fa, gbc.sp());
        EXPECT(0xd91d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd91b));
        EXPECT(0x31, gbc.readMem(0xd91c));
        // CB 31 039C
        gbc.setState(0xba47, 0xac82, 0x6e60, 0xbc2, 0x3c4c, 0xae70, 0x0, 0x0);
        gbc.writeMem(0xba47, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xac82, gbc.sp());
        EXPECT(0xba49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba47));
        EXPECT(0x31, gbc.readMem(0xba48));
        // CB 31 039D
        gbc.setState(0xd8da, 0x21c2, 0x37a0, 0x28a6, 0xd8d, 0xe561, 0x1, 0x1);
        gbc.writeMem(0xd8da, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x21c2, gbc.sp());
        EXPECT(0xd8dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8da));
        EXPECT(0x31, gbc.readMem(0xd8db));
        // CB 31 039E
        gbc.setState(0xd469, 0xf3cd, 0xc10, 0x88dd, 0xe894, 0xbbfc, 0x0, 0x1);
        gbc.writeMem(0xd469, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xf3cd, gbc.sp());
        EXPECT(0xd46b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd469));
        EXPECT(0x31, gbc.readMem(0xd46a));
        // CB 31 039F
        gbc.setState(0x8ce8, 0xae9e, 0x6780, 0x76fa, 0x763a, 0xa9bf, 0x1, 0x1);
        gbc.writeMem(0x8ce8, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xae9e, gbc.sp());
        EXPECT(0x8cea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ce8));
        EXPECT(0x31, gbc.readMem(0x8ce9));
        // CB 31 03A0
        gbc.setState(0xd4a6, 0xe531, 0x9470, 0xed77, 0xbba9, 0xc347, 0x0, 0x1);
        gbc.writeMem(0xd4a6, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xe531, gbc.sp());
        EXPECT(0xd4a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4a6));
        EXPECT(0x31, gbc.readMem(0xd4a7));
        // CB 31 03A1
        gbc.setState(0xd01f, 0x443, 0x9410, 0x70c, 0x183a, 0x3eb4, 0x0, 0x0);
        gbc.writeMem(0xd01f, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x443, gbc.sp());
        EXPECT(0xd021, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd01f));
        EXPECT(0x31, gbc.readMem(0xd020));
        // CB 31 03A3
        gbc.setState(0xdcda, 0xf1f5, 0x53b0, 0x21f8, 0x1fcc, 0x1149, 0x0, 0x0);
        gbc.writeMem(0xdcda, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xf1f5, gbc.sp());
        EXPECT(0xdcdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcda));
        EXPECT(0x31, gbc.readMem(0xdcdb));
        // CB 31 03A4
        gbc.setState(0xe109, 0x4472, 0xd960, 0x7129, 0xe192, 0x776a, 0x0, 0x1);
        gbc.writeMem(0xe109, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x4472, gbc.sp());
        EXPECT(0xe10b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe109));
        EXPECT(0x31, gbc.readMem(0xe10a));
        // CB 31 03A5
        gbc.setState(0x9c67, 0x58ab, 0x1770, 0xcfc1, 0x6afc, 0x18e6, 0x0, 0x0);
        gbc.writeMem(0x9c67, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x58ab, gbc.sp());
        EXPECT(0x9c69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c67));
        EXPECT(0x31, gbc.readMem(0x9c68));
        // CB 31 03A6
        gbc.setState(0x7696, 0xcfe, 0x4140, 0xf801, 0xd99, 0xf327, 0x1, 0x0);
        gbc.writeMem(0x7696, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xcfe, gbc.sp());
        EXPECT(0x7698, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 03A7
        gbc.setState(0x82bd, 0xafbe, 0x23a0, 0x141e, 0x6d60, 0xc76a, 0x1, 0x1);
        gbc.writeMem(0x82bd, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xafbe, gbc.sp());
        EXPECT(0x82bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82bd));
        EXPECT(0x31, gbc.readMem(0x82be));
        // CB 31 03A8
        gbc.setState(0x2820, 0x953d, 0xcef0, 0x6c91, 0x79a2, 0x5329, 0x0, 0x0);
        gbc.writeMem(0x2820, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x953d, gbc.sp());
        EXPECT(0x2822, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 03A9
        gbc.setState(0xa235, 0xfabf, 0xe7a0, 0xe733, 0x9380, 0xcf9d, 0x0, 0x0);
        gbc.writeMem(0xa235, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xfabf, gbc.sp());
        EXPECT(0xa237, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa235));
        EXPECT(0x31, gbc.readMem(0xa236));
        // CB 31 03AA
        gbc.setState(0x75f9, 0xa649, 0x5310, 0xa131, 0x1a5a, 0x80e3, 0x0, 0x1);
        gbc.writeMem(0x75f9, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xa649, gbc.sp());
        EXPECT(0x75fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 03AC
        gbc.setState(0x6b2d, 0x378d, 0x6890, 0x4605, 0xb94c, 0x5a58, 0x1, 0x1);
        gbc.writeMem(0x6b2d, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x378d, gbc.sp());
        EXPECT(0x6b2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 03AD
        gbc.setState(0x3fd1, 0x237e, 0x7940, 0xc409, 0x53f5, 0xb2a9, 0x1, 0x1);
        gbc.writeMem(0x3fd1, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x237e, gbc.sp());
        EXPECT(0x3fd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 03AF
        gbc.setState(0x6d53, 0x204e, 0x8a30, 0xf531, 0x8a4d, 0xa1a2, 0x0, 0x0);
        gbc.writeMem(0x6d53, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x204e, gbc.sp());
        EXPECT(0x6d55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 03B0
        gbc.setState(0x9881, 0x4284, 0xdb20, 0xa3d8, 0x71a, 0xe895, 0x1, 0x1);
        gbc.writeMem(0x9881, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x4284, gbc.sp());
        EXPECT(0x9883, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9881));
        EXPECT(0x31, gbc.readMem(0x9882));
        // CB 31 03B1
        gbc.setState(0xa836, 0x51cc, 0xb370, 0x364b, 0xdd83, 0x3b85, 0x0, 0x0);
        gbc.writeMem(0xa836, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x51cc, gbc.sp());
        EXPECT(0xa838, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa836));
        EXPECT(0x31, gbc.readMem(0xa837));
        // CB 31 03B2
        gbc.setState(0x5378, 0x5568, 0x7ea0, 0xd3ba, 0xe27f, 0xd70e, 0x0, 0x0);
        gbc.writeMem(0x5378, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x5568, gbc.sp());
        EXPECT(0x537a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 03B3
        gbc.setState(0x5fe8, 0xe786, 0x8160, 0x5d11, 0xbb85, 0xcd3, 0x1, 0x1);
        gbc.writeMem(0x5fe8, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xe786, gbc.sp());
        EXPECT(0x5fea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 03B4
        gbc.setState(0xb7b7, 0xb2d1, 0x300, 0xa671, 0x4d1d, 0xb3e7, 0x0, 0x0);
        gbc.writeMem(0xb7b7, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xb2d1, gbc.sp());
        EXPECT(0xb7b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7b7));
        EXPECT(0x31, gbc.readMem(0xb7b8));
        // CB 31 03B5
        gbc.setState(0xc838, 0x2abb, 0x75b0, 0x7695, 0xfe4b, 0x90f8, 0x0, 0x0);
        gbc.writeMem(0xc838, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x2abb, gbc.sp());
        EXPECT(0xc83a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc838));
        EXPECT(0x31, gbc.readMem(0xc839));
        // CB 31 03B6
        gbc.setState(0xdebe, 0xc824, 0x8ff0, 0xa624, 0xc073, 0xbdbe, 0x0, 0x1);
        gbc.writeMem(0xdebe, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xc824, gbc.sp());
        EXPECT(0xdec0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdebe));
        EXPECT(0x31, gbc.readMem(0xdebf));
        // CB 31 03B7
        gbc.setState(0x4e47, 0x5032, 0x1110, 0x9409, 0xf51f, 0x8c8c, 0x0, 0x1);
        gbc.writeMem(0x4e47, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x5032, gbc.sp());
        EXPECT(0x4e49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 03B8
        gbc.setState(0x49c6, 0x187f, 0xdb70, 0xa1ff, 0x18e9, 0x5b3b, 0x0, 0x1);
        gbc.writeMem(0x49c6, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x187f, gbc.sp());
        EXPECT(0x49c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 03B9
        gbc.setState(0xd8a3, 0xdd77, 0x4280, 0xc5d9, 0x2d62, 0x4ab8, 0x1, 0x0);
        gbc.writeMem(0xd8a3, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xdd77, gbc.sp());
        EXPECT(0xd8a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8a3));
        EXPECT(0x31, gbc.readMem(0xd8a4));
        // CB 31 03BA
        gbc.setState(0x4cfa, 0x12f2, 0x46e0, 0xe109, 0xe873, 0xf07b, 0x0, 0x1);
        gbc.writeMem(0x4cfa, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x12f2, gbc.sp());
        EXPECT(0x4cfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 03BB
        gbc.setState(0x48cf, 0xda26, 0xe3f0, 0xe73b, 0x58fa, 0x8ed8, 0x0, 0x0);
        gbc.writeMem(0x48cf, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xda26, gbc.sp());
        EXPECT(0x48d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 03BC
        gbc.setState(0xecf8, 0xd002, 0xa00, 0x84c0, 0x4df3, 0xe76c, 0x0, 0x0);
        gbc.writeMem(0xecf8, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xd002, gbc.sp());
        EXPECT(0xecfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecf8));
        EXPECT(0x31, gbc.readMem(0xecf9));
        // CB 31 03BE
        gbc.setState(0x529b, 0x3f48, 0x8ea0, 0xbf69, 0xaf00, 0x250b, 0x0, 0x1);
        gbc.writeMem(0x529b, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x3f48, gbc.sp());
        EXPECT(0x529d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 03BF
        gbc.setState(0x3a8b, 0x68fc, 0xe340, 0xcc17, 0x5ec5, 0x13ee, 0x1, 0x1);
        gbc.writeMem(0x3a8b, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x68fc, gbc.sp());
        EXPECT(0x3a8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 03C0
        gbc.setState(0x7fef, 0x6cef, 0xae40, 0x9aff, 0x6a38, 0x45df, 0x1, 0x0);
        gbc.writeMem(0x7fef, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x6cef, gbc.sp());
        EXPECT(0x7ff1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 03C1
        gbc.setState(0x86e9, 0xf2b1, 0xcff0, 0x75c4, 0x3613, 0x510c, 0x0, 0x1);
        gbc.writeMem(0x86e9, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xf2b1, gbc.sp());
        EXPECT(0x86eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86e9));
        EXPECT(0x31, gbc.readMem(0x86ea));
        // CB 31 03C2
        gbc.setState(0x1016, 0x357a, 0x16a0, 0xf883, 0xad92, 0xf3bc, 0x1, 0x0);
        gbc.writeMem(0x1016, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x357a, gbc.sp());
        EXPECT(0x1018, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 03C3
        gbc.setState(0xdd50, 0x4e56, 0xfd60, 0x919c, 0xf952, 0x4d51, 0x1, 0x0);
        gbc.writeMem(0xdd50, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x4e56, gbc.sp());
        EXPECT(0xdd52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd50));
        EXPECT(0x31, gbc.readMem(0xdd51));
        // CB 31 03C4
        gbc.setState(0x4799, 0x6be0, 0x4830, 0xa422, 0x12f9, 0x75a3, 0x1, 0x1);
        gbc.writeMem(0x4799, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x6be0, gbc.sp());
        EXPECT(0x479b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 03C5
        gbc.setState(0xc04d, 0x817d, 0x7760, 0xf51d, 0xc872, 0x8d41, 0x1, 0x1);
        gbc.writeMem(0xc04d, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x817d, gbc.sp());
        EXPECT(0xc04f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc04d));
        EXPECT(0x31, gbc.readMem(0xc04e));
        // CB 31 03C6
        gbc.setState(0x14a8, 0x498a, 0x62c0, 0x1300, 0x444b, 0x6ab8, 0x0, 0x1);
        gbc.writeMem(0x14a8, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x498a, gbc.sp());
        EXPECT(0x14aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 03C7
        gbc.setState(0x9058, 0xd4a7, 0x9f20, 0x3423, 0x5c68, 0x7847, 0x0, 0x1);
        gbc.writeMem(0x9058, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xd4a7, gbc.sp());
        EXPECT(0x905a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9058));
        EXPECT(0x31, gbc.readMem(0x9059));
        // CB 31 03C8
        gbc.setState(0x81ce, 0x250, 0xc0, 0x59a7, 0x544e, 0x1703, 0x1, 0x0);
        gbc.writeMem(0x81ce, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x250, gbc.sp());
        EXPECT(0x81d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81ce));
        EXPECT(0x31, gbc.readMem(0x81cf));
        // CB 31 03C9
        gbc.setState(0xba74, 0x68f0, 0xad10, 0xa3ad, 0x9446, 0xdbca, 0x1, 0x1);
        gbc.writeMem(0xba74, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x68f0, gbc.sp());
        EXPECT(0xba76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba74));
        EXPECT(0x31, gbc.readMem(0xba75));
        // CB 31 03CA
        gbc.setState(0xc4d5, 0x6b3f, 0x9980, 0xdc6c, 0x659b, 0xf6ab, 0x1, 0x1);
        gbc.writeMem(0xc4d5, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x6b3f, gbc.sp());
        EXPECT(0xc4d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4d5));
        EXPECT(0x31, gbc.readMem(0xc4d6));
        // CB 31 03CB
        gbc.setState(0xa701, 0xa63c, 0x1750, 0x37b3, 0x9f78, 0xbdad, 0x0, 0x0);
        gbc.writeMem(0xa701, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xa63c, gbc.sp());
        EXPECT(0xa703, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa701));
        EXPECT(0x31, gbc.readMem(0xa702));
        // CB 31 03CC
        gbc.setState(0x6fa8, 0xfd99, 0x60e0, 0xe5ef, 0x4dd8, 0x8fff, 0x1, 0x1);
        gbc.writeMem(0x6fa8, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xfd99, gbc.sp());
        EXPECT(0x6faa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 03CD
        gbc.setState(0x22cf, 0x4198, 0x57a0, 0x96c7, 0xe1bf, 0x3e62, 0x1, 0x1);
        gbc.writeMem(0x22cf, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x4198, gbc.sp());
        EXPECT(0x22d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 03CE
        gbc.setState(0x2547, 0xa852, 0xa330, 0x5e33, 0x4e2f, 0x243, 0x1, 0x0);
        gbc.writeMem(0x2547, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xa852, gbc.sp());
        EXPECT(0x2549, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 03CF
        gbc.setState(0xca96, 0x6e6, 0x3a50, 0x196c, 0xc174, 0x8e2c, 0x0, 0x0);
        gbc.writeMem(0xca96, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x6e6, gbc.sp());
        EXPECT(0xca98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca96));
        EXPECT(0x31, gbc.readMem(0xca97));
        // CB 31 03D0
        gbc.setState(0xc5eb, 0xeaf2, 0x1d40, 0x5c92, 0x27e1, 0x4cb9, 0x0, 0x1);
        gbc.writeMem(0xc5eb, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xeaf2, gbc.sp());
        EXPECT(0xc5ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5eb));
        EXPECT(0x31, gbc.readMem(0xc5ec));
        // CB 31 03D1
        gbc.setState(0x8892, 0x17b3, 0xea40, 0x523c, 0xa9ba, 0x8cb1, 0x0, 0x1);
        gbc.writeMem(0x8892, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x17b3, gbc.sp());
        EXPECT(0x8894, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8892));
        EXPECT(0x31, gbc.readMem(0x8893));
        // CB 31 03D2
        gbc.setState(0x7400, 0x1bb5, 0xfe30, 0x156a, 0xbfae, 0x5379, 0x1, 0x1);
        gbc.writeMem(0x7400, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x1bb5, gbc.sp());
        EXPECT(0x7402, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 03D3
        gbc.setState(0x4019, 0x48c1, 0xdc70, 0xa634, 0xeeca, 0x297a, 0x1, 0x1);
        gbc.writeMem(0x4019, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x48c1, gbc.sp());
        EXPECT(0x401b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 03D4
        gbc.setState(0xa88e, 0xfe9d, 0x66f0, 0x7de3, 0x253d, 0x9eef, 0x0, 0x0);
        gbc.writeMem(0xa88e, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xfe9d, gbc.sp());
        EXPECT(0xa890, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa88e));
        EXPECT(0x31, gbc.readMem(0xa88f));
        // CB 31 03D5
        gbc.setState(0x22ac, 0x6296, 0xc8f0, 0xdb43, 0x71a, 0x7a55, 0x1, 0x1);
        gbc.writeMem(0x22ac, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x6296, gbc.sp());
        EXPECT(0x22ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 03D6
        gbc.setState(0x1bbd, 0x27f7, 0x9c00, 0x4bc3, 0xfcff, 0x8b15, 0x0, 0x1);
        gbc.writeMem(0x1bbd, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x27f7, gbc.sp());
        EXPECT(0x1bbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 03D7
        gbc.setState(0x874e, 0x566b, 0x6d60, 0x1129, 0x685d, 0x79eb, 0x1, 0x1);
        gbc.writeMem(0x874e, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x566b, gbc.sp());
        EXPECT(0x8750, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x874e));
        EXPECT(0x31, gbc.readMem(0x874f));
        // CB 31 03D8
        gbc.setState(0xc232, 0x8834, 0x97d0, 0x4651, 0xcdd2, 0x7240, 0x1, 0x1);
        gbc.writeMem(0xc232, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x8834, gbc.sp());
        EXPECT(0xc234, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc232));
        EXPECT(0x31, gbc.readMem(0xc233));
        // CB 31 03D9
        gbc.setState(0x9458, 0x3afe, 0xc900, 0x1ddd, 0x4005, 0xe6e7, 0x1, 0x1);
        gbc.writeMem(0x9458, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x3afe, gbc.sp());
        EXPECT(0x945a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9458));
        EXPECT(0x31, gbc.readMem(0x9459));
        // CB 31 03DA
        gbc.setState(0xbc86, 0x9819, 0xf6e0, 0x4dbe, 0x59b9, 0xf862, 0x0, 0x1);
        gbc.writeMem(0xbc86, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x9819, gbc.sp());
        EXPECT(0xbc88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc86));
        EXPECT(0x31, gbc.readMem(0xbc87));
        // CB 31 03DB
        gbc.setState(0x65b1, 0xdd55, 0x41f0, 0x41bc, 0xf10, 0x2734, 0x1, 0x1);
        gbc.writeMem(0x65b1, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xdd55, gbc.sp());
        EXPECT(0x65b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 03DC
        gbc.setState(0x6ea8, 0xe953, 0xd4e0, 0x6f35, 0xedbe, 0xffe6, 0x0, 0x1);
        gbc.writeMem(0x6ea8, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xe953, gbc.sp());
        EXPECT(0x6eaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 03DD
        gbc.setState(0x646e, 0xc4ed, 0xac80, 0x4127, 0xa5b3, 0x87cf, 0x0, 0x1);
        gbc.writeMem(0x646e, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xc4ed, gbc.sp());
        EXPECT(0x6470, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 03DE
        gbc.setState(0x922d, 0x9c6d, 0x28e0, 0xe669, 0xa663, 0x6b25, 0x0, 0x0);
        gbc.writeMem(0x922d, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x9c6d, gbc.sp());
        EXPECT(0x922f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x922d));
        EXPECT(0x31, gbc.readMem(0x922e));
        // CB 31 03DF
        gbc.setState(0x8b12, 0xce80, 0x4d70, 0x2efb, 0x2aa6, 0x81d7, 0x0, 0x0);
        gbc.writeMem(0x8b12, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xce80, gbc.sp());
        EXPECT(0x8b14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b12));
        EXPECT(0x31, gbc.readMem(0x8b13));
        // CB 31 03E0
        gbc.setState(0xe991, 0xdf03, 0xe640, 0x349, 0xb6df, 0xb7c5, 0x0, 0x0);
        gbc.writeMem(0xe991, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xdf03, gbc.sp());
        EXPECT(0xe993, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe991));
        EXPECT(0x31, gbc.readMem(0xe992));
        // CB 31 03E1
        gbc.setState(0xb665, 0xc7df, 0x4430, 0x9b4b, 0x7e50, 0xc0f2, 0x0, 0x1);
        gbc.writeMem(0xb665, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xc7df, gbc.sp());
        EXPECT(0xb667, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb665));
        EXPECT(0x31, gbc.readMem(0xb666));
        // CB 31 03E2
        gbc.setState(0xb795, 0x7ffd, 0xa3d0, 0x662c, 0xeafe, 0x4371, 0x0, 0x1);
        gbc.writeMem(0xb795, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x7ffd, gbc.sp());
        EXPECT(0xb797, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb795));
        EXPECT(0x31, gbc.readMem(0xb796));
        // CB 31 03E3
        gbc.setState(0xade5, 0x1507, 0x2cd0, 0x4732, 0x61e, 0xd655, 0x0, 0x0);
        gbc.writeMem(0xade5, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x1507, gbc.sp());
        EXPECT(0xade7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xade5));
        EXPECT(0x31, gbc.readMem(0xade6));
        // CB 31 03E4
        gbc.setState(0x9f45, 0x1ca1, 0xf0b0, 0x86e2, 0xe6b8, 0x3359, 0x0, 0x0);
        gbc.writeMem(0x9f45, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x1ca1, gbc.sp());
        EXPECT(0x9f47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f45));
        EXPECT(0x31, gbc.readMem(0x9f46));
        // CB 31 03E5
        gbc.setState(0xe06f, 0xc87c, 0x2540, 0x9b1f, 0x940f, 0xb6b9, 0x0, 0x0);
        gbc.writeMem(0xe06f, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xc87c, gbc.sp());
        EXPECT(0xe071, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe06f));
        EXPECT(0x31, gbc.readMem(0xe070));
        // CB 31 03E6
        gbc.setState(0x5818, 0x593b, 0xe8d0, 0xfbcd, 0xa572, 0xc14b, 0x1, 0x1);
        gbc.writeMem(0x5818, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x593b, gbc.sp());
        EXPECT(0x581a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 31 03E7
        gbc.setState(0x5891, 0x6a9d, 0xc290, 0x2f0a, 0xc271, 0x1a6d, 0x0, 0x1);
        gbc.writeMem(0x5891, { 0xcb, 0x31 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x6a9d, gbc.sp());
        EXPECT(0x5893, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
    }
