    TEST(gbcemu, opcode_cb_dc) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB DC 0000
        gbc.setState(0x1c1d, 0x73b1, 0x8d80, 0x9fbe, 0xd5f6, 0x2598, 0x0, 0x1);
        gbc.writeMem(0x1c1d, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x73b1, gbc.sp());
        EXPECT(0x1c1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0001
        gbc.setState(0xbffc, 0xabf, 0xa50, 0xc479, 0x4d74, 0x25d0, 0x0, 0x0);
        gbc.writeMem(0xbffc, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xabf, gbc.sp());
        EXPECT(0xbffe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbffc));
        EXPECT(0xdc, gbc.readMem(0xbffd));
        // CB DC 0002
        gbc.setState(0xe3ba, 0x5307, 0x9a20, 0x5b8, 0xae6, 0xa6fe, 0x1, 0x0);
        gbc.writeMem(0xe3ba, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x5307, gbc.sp());
        EXPECT(0xe3bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3ba));
        EXPECT(0xdc, gbc.readMem(0xe3bb));
        // CB DC 0003
        gbc.setState(0xed68, 0x4689, 0x1bb0, 0x6373, 0xe1d1, 0x87a1, 0x1, 0x0);
        gbc.writeMem(0xed68, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x4689, gbc.sp());
        EXPECT(0xed6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed68));
        EXPECT(0xdc, gbc.readMem(0xed69));
        // CB DC 0004
        gbc.setState(0x7b4f, 0x7f1e, 0x9d80, 0x8326, 0x419f, 0x933a, 0x0, 0x1);
        gbc.writeMem(0x7b4f, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x7f1e, gbc.sp());
        EXPECT(0x7b51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0005
        gbc.setState(0xb92b, 0xccad, 0xf060, 0x47d5, 0xdc70, 0xaff6, 0x0, 0x1);
        gbc.writeMem(0xb92b, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xccad, gbc.sp());
        EXPECT(0xb92d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb92b));
        EXPECT(0xdc, gbc.readMem(0xb92c));
        // CB DC 0006
        gbc.setState(0x8d51, 0x10e0, 0xdd10, 0xf7f6, 0x7095, 0xe534, 0x0, 0x1);
        gbc.writeMem(0x8d51, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x10e0, gbc.sp());
        EXPECT(0x8d53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d51));
        EXPECT(0xdc, gbc.readMem(0x8d52));
        // CB DC 0007
        gbc.setState(0xe171, 0xd012, 0xc3a0, 0x97cd, 0xfc9e, 0x3fb5, 0x0, 0x0);
        gbc.writeMem(0xe171, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xd012, gbc.sp());
        EXPECT(0xe173, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe171));
        EXPECT(0xdc, gbc.readMem(0xe172));
        // CB DC 0008
        gbc.setState(0xea53, 0x60ef, 0x9af0, 0x26ac, 0xd97c, 0xb30a, 0x1, 0x0);
        gbc.writeMem(0xea53, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x60ef, gbc.sp());
        EXPECT(0xea55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea53));
        EXPECT(0xdc, gbc.readMem(0xea54));
        // CB DC 0009
        gbc.setState(0xee5e, 0xdb9b, 0x7f80, 0xf0cf, 0x172a, 0xd8da, 0x1, 0x1);
        gbc.writeMem(0xee5e, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xdb9b, gbc.sp());
        EXPECT(0xee60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee5e));
        EXPECT(0xdc, gbc.readMem(0xee5f));
        // CB DC 000A
        gbc.setState(0xba90, 0xb939, 0xeb40, 0x37fc, 0x4178, 0x811b, 0x0, 0x0);
        gbc.writeMem(0xba90, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xb939, gbc.sp());
        EXPECT(0xba92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba90));
        EXPECT(0xdc, gbc.readMem(0xba91));
        // CB DC 000B
        gbc.setState(0x1b71, 0xb4ff, 0x5170, 0x5b2e, 0x5a9a, 0x395b, 0x1, 0x0);
        gbc.writeMem(0x1b71, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xb4ff, gbc.sp());
        EXPECT(0x1b73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 000D
        gbc.setState(0x650a, 0x4030, 0x7b40, 0xb475, 0xe475, 0xde6e, 0x1, 0x1);
        gbc.writeMem(0x650a, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x4030, gbc.sp());
        EXPECT(0x650c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 000E
        gbc.setState(0x42a4, 0xa73f, 0xf250, 0x20a2, 0x47f7, 0xf733, 0x1, 0x1);
        gbc.writeMem(0x42a4, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xa73f, gbc.sp());
        EXPECT(0x42a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 000F
        gbc.setState(0xda49, 0x2cff, 0xe840, 0xc193, 0xc8b, 0xdd1a, 0x1, 0x0);
        gbc.writeMem(0xda49, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x2cff, gbc.sp());
        EXPECT(0xda4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda49));
        EXPECT(0xdc, gbc.readMem(0xda4a));
        // CB DC 0010
        gbc.setState(0x9dcc, 0x7d85, 0x4760, 0x9b03, 0x21ea, 0xf6a3, 0x0, 0x0);
        gbc.writeMem(0x9dcc, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x7d85, gbc.sp());
        EXPECT(0x9dce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dcc));
        EXPECT(0xdc, gbc.readMem(0x9dcd));
        // CB DC 0011
        gbc.setState(0x17d2, 0x8e6a, 0x9e60, 0x58e9, 0xf67, 0x8229, 0x0, 0x1);
        gbc.writeMem(0x17d2, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x8e6a, gbc.sp());
        EXPECT(0x17d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0012
        gbc.setState(0xe9c3, 0xc52c, 0x13c0, 0xd40d, 0x375d, 0x8457, 0x0, 0x1);
        gbc.writeMem(0xe9c3, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xc52c, gbc.sp());
        EXPECT(0xe9c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9c3));
        EXPECT(0xdc, gbc.readMem(0xe9c4));
        // CB DC 0013
        gbc.setState(0xaf34, 0x8cc, 0xd6e0, 0x36aa, 0x4c6c, 0xa435, 0x1, 0x1);
        gbc.writeMem(0xaf34, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x8cc, gbc.sp());
        EXPECT(0xaf36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf34));
        EXPECT(0xdc, gbc.readMem(0xaf35));
        // CB DC 0014
        gbc.setState(0xc681, 0xbcac, 0x95f0, 0x9eeb, 0xb22e, 0x7a7e, 0x0, 0x1);
        gbc.writeMem(0xc681, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xbcac, gbc.sp());
        EXPECT(0xc683, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc681));
        EXPECT(0xdc, gbc.readMem(0xc682));
        // CB DC 0016
        gbc.setState(0xe2c, 0xc02b, 0x1960, 0xe1bb, 0xed8, 0x18b1, 0x0, 0x0);
        gbc.writeMem(0xe2c, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xc02b, gbc.sp());
        EXPECT(0xe2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0017
        gbc.setState(0x6fe8, 0x97fe, 0xc500, 0xc38c, 0xf722, 0x3236, 0x0, 0x1);
        gbc.writeMem(0x6fe8, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x97fe, gbc.sp());
        EXPECT(0x6fea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0018
        gbc.setState(0x438, 0x1b35, 0x8130, 0xc870, 0x77b3, 0xcae4, 0x1, 0x0);
        gbc.writeMem(0x438, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x1b35, gbc.sp());
        EXPECT(0x43a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0019
        gbc.setState(0x2d15, 0x3a07, 0x8950, 0xe80a, 0xcd64, 0xe02, 0x0, 0x0);
        gbc.writeMem(0x2d15, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x3a07, gbc.sp());
        EXPECT(0x2d17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 001A
        gbc.setState(0x52a1, 0x8350, 0x7c00, 0x2f59, 0x5a83, 0xbf64, 0x0, 0x0);
        gbc.writeMem(0x52a1, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x8350, gbc.sp());
        EXPECT(0x52a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 001B
        gbc.setState(0xa53c, 0xb383, 0x10a0, 0x151b, 0xd14a, 0x64f2, 0x0, 0x0);
        gbc.writeMem(0xa53c, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xb383, gbc.sp());
        EXPECT(0xa53e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa53c));
        EXPECT(0xdc, gbc.readMem(0xa53d));
        // CB DC 001C
        gbc.setState(0xb823, 0x22a1, 0xfa40, 0xba98, 0x1f80, 0xc332, 0x1, 0x0);
        gbc.writeMem(0xb823, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x22a1, gbc.sp());
        EXPECT(0xb825, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb823));
        EXPECT(0xdc, gbc.readMem(0xb824));
        // CB DC 001D
        gbc.setState(0x6d7e, 0x282c, 0xaae0, 0x30ff, 0x9d52, 0x8978, 0x0, 0x0);
        gbc.writeMem(0x6d7e, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x282c, gbc.sp());
        EXPECT(0x6d80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 001E
        gbc.setState(0xaa3b, 0xeec6, 0x8150, 0x54, 0x9130, 0xde8f, 0x1, 0x0);
        gbc.writeMem(0xaa3b, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xeec6, gbc.sp());
        EXPECT(0xaa3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa3b));
        EXPECT(0xdc, gbc.readMem(0xaa3c));
        // CB DC 001F
        gbc.setState(0x7489, 0xafe6, 0x1ee0, 0x9279, 0x9dfc, 0x16c5, 0x0, 0x0);
        gbc.writeMem(0x7489, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xafe6, gbc.sp());
        EXPECT(0x748b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0021
        gbc.setState(0x6a71, 0x304d, 0xbb80, 0x74de, 0x561f, 0x82d2, 0x0, 0x1);
        gbc.writeMem(0x6a71, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x304d, gbc.sp());
        EXPECT(0x6a73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0023
        gbc.setState(0x8aec, 0xf281, 0x5d60, 0x13c5, 0xa471, 0x4077, 0x0, 0x0);
        gbc.writeMem(0x8aec, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xf281, gbc.sp());
        EXPECT(0x8aee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8aec));
        EXPECT(0xdc, gbc.readMem(0x8aed));
        // CB DC 0024
        gbc.setState(0xb683, 0x54fe, 0xeb30, 0x84e4, 0x9ed3, 0xfe2f, 0x0, 0x1);
        gbc.writeMem(0xb683, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x54fe, gbc.sp());
        EXPECT(0xb685, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb683));
        EXPECT(0xdc, gbc.readMem(0xb684));
        // CB DC 0025
        gbc.setState(0x53bc, 0x5a3, 0xb0f0, 0x1cc1, 0x256e, 0x5d, 0x0, 0x0);
        gbc.writeMem(0x53bc, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x5a3, gbc.sp());
        EXPECT(0x53be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0026
        gbc.setState(0x210a, 0xfa06, 0xbd80, 0xda86, 0x6c27, 0xdf2c, 0x1, 0x1);
        gbc.writeMem(0x210a, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xfa06, gbc.sp());
        EXPECT(0x210c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0027
        gbc.setState(0xb215, 0xec53, 0xf0, 0xcaad, 0xf4b2, 0xa2ea, 0x0, 0x1);
        gbc.writeMem(0xb215, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xec53, gbc.sp());
        EXPECT(0xb217, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb215));
        EXPECT(0xdc, gbc.readMem(0xb216));
        // CB DC 0028
        gbc.setState(0xa5a5, 0x65e1, 0x20f0, 0x4708, 0x7a34, 0xf1bc, 0x1, 0x1);
        gbc.writeMem(0xa5a5, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x65e1, gbc.sp());
        EXPECT(0xa5a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5a5));
        EXPECT(0xdc, gbc.readMem(0xa5a6));
        // CB DC 0029
        gbc.setState(0x535a, 0x8e23, 0x1260, 0xaa1c, 0x220f, 0x1805, 0x0, 0x1);
        gbc.writeMem(0x535a, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x8e23, gbc.sp());
        EXPECT(0x535c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 002A
        gbc.setState(0xd8c4, 0x119f, 0x4b70, 0xefa8, 0xd998, 0xbf58, 0x1, 0x0);
        gbc.writeMem(0xd8c4, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x119f, gbc.sp());
        EXPECT(0xd8c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8c4));
        EXPECT(0xdc, gbc.readMem(0xd8c5));
        // CB DC 002B
        gbc.setState(0xcc50, 0x6b45, 0x5e80, 0x9352, 0x6fb5, 0x5c7a, 0x0, 0x0);
        gbc.writeMem(0xcc50, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x6b45, gbc.sp());
        EXPECT(0xcc52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc50));
        EXPECT(0xdc, gbc.readMem(0xcc51));
        // CB DC 002C
        gbc.setState(0xc76d, 0xf0d5, 0x63f0, 0xebee, 0x6121, 0xc14d, 0x0, 0x0);
        gbc.writeMem(0xc76d, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xf0d5, gbc.sp());
        EXPECT(0xc76f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc76d));
        EXPECT(0xdc, gbc.readMem(0xc76e));
        // CB DC 002D
        gbc.setState(0xe7b, 0xe00a, 0xee80, 0xbfe0, 0xabfd, 0x827b, 0x0, 0x1);
        gbc.writeMem(0xe7b, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xe00a, gbc.sp());
        EXPECT(0xe7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 002E
        gbc.setState(0xa82a, 0x2182, 0x9d10, 0x7b7c, 0xe4a2, 0xda0c, 0x1, 0x1);
        gbc.writeMem(0xa82a, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x2182, gbc.sp());
        EXPECT(0xa82c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa82a));
        EXPECT(0xdc, gbc.readMem(0xa82b));
        // CB DC 002F
        gbc.setState(0xd84f, 0xc4, 0xe950, 0xf11, 0x2e92, 0x5ada, 0x1, 0x0);
        gbc.writeMem(0xd84f, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xc4, gbc.sp());
        EXPECT(0xd851, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd84f));
        EXPECT(0xdc, gbc.readMem(0xd850));
        // CB DC 0030
        gbc.setState(0xe75b, 0xeaac, 0x2e10, 0x2275, 0x60, 0x1090, 0x0, 0x1);
        gbc.writeMem(0xe75b, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xeaac, gbc.sp());
        EXPECT(0xe75d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe75b));
        EXPECT(0xdc, gbc.readMem(0xe75c));
        // CB DC 0031
        gbc.setState(0xc8c9, 0x3b35, 0x91f0, 0xf3f2, 0x2e13, 0xd537, 0x1, 0x0);
        gbc.writeMem(0xc8c9, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x3b35, gbc.sp());
        EXPECT(0xc8cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8c9));
        EXPECT(0xdc, gbc.readMem(0xc8ca));
        // CB DC 0032
        gbc.setState(0xa7c5, 0x5392, 0x5400, 0x2e7, 0xd353, 0x4edb, 0x1, 0x1);
        gbc.writeMem(0xa7c5, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x5392, gbc.sp());
        EXPECT(0xa7c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7c5));
        EXPECT(0xdc, gbc.readMem(0xa7c6));
        // CB DC 0033
        gbc.setState(0xaf93, 0xa148, 0xda60, 0x4c0b, 0xecbe, 0x7687, 0x0, 0x1);
        gbc.writeMem(0xaf93, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xa148, gbc.sp());
        EXPECT(0xaf95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf93));
        EXPECT(0xdc, gbc.readMem(0xaf94));
        // CB DC 0034
        gbc.setState(0xc680, 0x7244, 0x2ef0, 0x54eb, 0x6db2, 0xcceb, 0x0, 0x1);
        gbc.writeMem(0xc680, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x7244, gbc.sp());
        EXPECT(0xc682, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc680));
        EXPECT(0xdc, gbc.readMem(0xc681));
        // CB DC 0035
        gbc.setState(0xc16d, 0x9cb1, 0x6fa0, 0xe90, 0x3d3, 0xff3f, 0x0, 0x0);
        gbc.writeMem(0xc16d, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x9cb1, gbc.sp());
        EXPECT(0xc16f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc16d));
        EXPECT(0xdc, gbc.readMem(0xc16e));
        // CB DC 0036
        gbc.setState(0xb63, 0x3005, 0x5190, 0x9912, 0x4b5a, 0x66b4, 0x0, 0x0);
        gbc.writeMem(0xb63, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x3005, gbc.sp());
        EXPECT(0xb65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0037
        gbc.setState(0x6e05, 0xfafc, 0x9830, 0xfd83, 0xed21, 0x2a9f, 0x0, 0x1);
        gbc.writeMem(0x6e05, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xfafc, gbc.sp());
        EXPECT(0x6e07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0038
        gbc.setState(0x612c, 0xd60d, 0x5950, 0x6116, 0xfbf2, 0x7101, 0x1, 0x1);
        gbc.writeMem(0x612c, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xd60d, gbc.sp());
        EXPECT(0x612e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0039
        gbc.setState(0xede4, 0xab96, 0x1ab0, 0xf73a, 0x6d2, 0xcd7a, 0x0, 0x0);
        gbc.writeMem(0xede4, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xab96, gbc.sp());
        EXPECT(0xede6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xede4));
        EXPECT(0xdc, gbc.readMem(0xede5));
        // CB DC 003A
        gbc.setState(0xfbd, 0x2453, 0xe970, 0x8020, 0x3103, 0x4b9d, 0x0, 0x0);
        gbc.writeMem(0xfbd, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x2453, gbc.sp());
        EXPECT(0xfbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 003B
        gbc.setState(0xb876, 0x3fa8, 0x89d0, 0xd7c3, 0xcfb5, 0xf5d5, 0x0, 0x1);
        gbc.writeMem(0xb876, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x3fa8, gbc.sp());
        EXPECT(0xb878, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb876));
        EXPECT(0xdc, gbc.readMem(0xb877));
        // CB DC 003C
        gbc.setState(0xe37a, 0x85d1, 0x74b0, 0x5d0, 0x350b, 0xd429, 0x1, 0x0);
        gbc.writeMem(0xe37a, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x85d1, gbc.sp());
        EXPECT(0xe37c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe37a));
        EXPECT(0xdc, gbc.readMem(0xe37b));
        // CB DC 003D
        gbc.setState(0x68be, 0xdbbd, 0xc430, 0xe89, 0x1071, 0x684c, 0x1, 0x0);
        gbc.writeMem(0x68be, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xdbbd, gbc.sp());
        EXPECT(0x68c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 003E
        gbc.setState(0x7b3a, 0xadef, 0x2a50, 0x817e, 0xd150, 0xdc9, 0x0, 0x0);
        gbc.writeMem(0x7b3a, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xadef, gbc.sp());
        EXPECT(0x7b3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 003F
        gbc.setState(0x3de6, 0x9fb7, 0xf470, 0x1e9, 0x46ec, 0x4a61, 0x1, 0x1);
        gbc.writeMem(0x3de6, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x9fb7, gbc.sp());
        EXPECT(0x3de8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0040
        gbc.setState(0x9913, 0xa54f, 0x7be0, 0xf31a, 0x80f3, 0x9344, 0x0, 0x1);
        gbc.writeMem(0x9913, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xa54f, gbc.sp());
        EXPECT(0x9915, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9913));
        EXPECT(0xdc, gbc.readMem(0x9914));
        // CB DC 0041
        gbc.setState(0x8bf5, 0xc104, 0xe270, 0x96f4, 0x44ad, 0x1e59, 0x1, 0x0);
        gbc.writeMem(0x8bf5, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xc104, gbc.sp());
        EXPECT(0x8bf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bf5));
        EXPECT(0xdc, gbc.readMem(0x8bf6));
        // CB DC 0042
        gbc.setState(0x816a, 0xa44, 0xb90, 0xc1b9, 0xd29e, 0x43f0, 0x0, 0x1);
        gbc.writeMem(0x816a, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xa44, gbc.sp());
        EXPECT(0x816c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x816a));
        EXPECT(0xdc, gbc.readMem(0x816b));
        // CB DC 0043
        gbc.setState(0x105f, 0x57e1, 0xb490, 0x3136, 0xba94, 0x2d07, 0x1, 0x0);
        gbc.writeMem(0x105f, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x57e1, gbc.sp());
        EXPECT(0x1061, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0044
        gbc.setState(0xdf18, 0xa092, 0xc670, 0x5aeb, 0xc697, 0x8c33, 0x1, 0x1);
        gbc.writeMem(0xdf18, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xa092, gbc.sp());
        EXPECT(0xdf1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf18));
        EXPECT(0xdc, gbc.readMem(0xdf19));
        // CB DC 0045
        gbc.setState(0xc4a5, 0x34a5, 0xfa90, 0xe94e, 0x2ec2, 0xc420, 0x0, 0x0);
        gbc.writeMem(0xc4a5, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x34a5, gbc.sp());
        EXPECT(0xc4a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4a5));
        EXPECT(0xdc, gbc.readMem(0xc4a6));
        // CB DC 0046
        gbc.setState(0xc687, 0xd001, 0xaba0, 0xb014, 0x6ee5, 0x1d93, 0x1, 0x1);
        gbc.writeMem(0xc687, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xd001, gbc.sp());
        EXPECT(0xc689, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc687));
        EXPECT(0xdc, gbc.readMem(0xc688));
        // CB DC 0047
        gbc.setState(0x4841, 0x6e45, 0x7780, 0x95da, 0x1ff1, 0x9b37, 0x0, 0x1);
        gbc.writeMem(0x4841, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x6e45, gbc.sp());
        EXPECT(0x4843, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0048
        gbc.setState(0xb680, 0x75e, 0xd3f0, 0x3c55, 0xc757, 0x6653, 0x1, 0x1);
        gbc.writeMem(0xb680, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x75e, gbc.sp());
        EXPECT(0xb682, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb680));
        EXPECT(0xdc, gbc.readMem(0xb681));
        // CB DC 0049
        gbc.setState(0x9ff4, 0xbd4, 0x5200, 0x21f2, 0x25c3, 0xe720, 0x1, 0x0);
        gbc.writeMem(0x9ff4, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xbd4, gbc.sp());
        EXPECT(0x9ff6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ff4));
        EXPECT(0xdc, gbc.readMem(0x9ff5));
        // CB DC 004A
        gbc.setState(0xda59, 0x21c4, 0x8b0, 0xd0ce, 0x868c, 0x3ace, 0x1, 0x1);
        gbc.writeMem(0xda59, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x21c4, gbc.sp());
        EXPECT(0xda5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda59));
        EXPECT(0xdc, gbc.readMem(0xda5a));
        // CB DC 004B
        gbc.setState(0xefd1, 0x9c8, 0xbed0, 0x7eca, 0x635a, 0x6c38, 0x1, 0x1);
        gbc.writeMem(0xefd1, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x9c8, gbc.sp());
        EXPECT(0xefd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefd1));
        EXPECT(0xdc, gbc.readMem(0xefd2));
        // CB DC 004C
        gbc.setState(0x6878, 0x1a00, 0xda60, 0x785b, 0xbce5, 0xa536, 0x0, 0x0);
        gbc.writeMem(0x6878, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x1a00, gbc.sp());
        EXPECT(0x687a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 004D
        gbc.setState(0x4628, 0x3fa5, 0xfbd0, 0x4790, 0x2d2, 0x5301, 0x1, 0x0);
        gbc.writeMem(0x4628, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x3fa5, gbc.sp());
        EXPECT(0x462a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0050
        gbc.setState(0x56ba, 0xe961, 0x5780, 0x2eb5, 0x38b2, 0x5e70, 0x0, 0x0);
        gbc.writeMem(0x56ba, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xe961, gbc.sp());
        EXPECT(0x56bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0051
        gbc.setState(0x6611, 0x7266, 0x9ab0, 0x64e, 0x16f, 0x138c, 0x1, 0x1);
        gbc.writeMem(0x6611, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x7266, gbc.sp());
        EXPECT(0x6613, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0052
        gbc.setState(0x433b, 0x5cbb, 0xdf70, 0x8efd, 0x271a, 0xe309, 0x1, 0x1);
        gbc.writeMem(0x433b, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x5cbb, gbc.sp());
        EXPECT(0x433d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0053
        gbc.setState(0x5756, 0x3f87, 0xff40, 0xc5a4, 0x2e6b, 0xe125, 0x0, 0x0);
        gbc.writeMem(0x5756, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x3f87, gbc.sp());
        EXPECT(0x5758, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0054
        gbc.setState(0x2abf, 0x4785, 0x4f40, 0x466f, 0xf165, 0x6d55, 0x1, 0x1);
        gbc.writeMem(0x2abf, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x4785, gbc.sp());
        EXPECT(0x2ac1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0055
        gbc.setState(0x26d2, 0xfc21, 0xc990, 0x1830, 0x36ee, 0xb26a, 0x0, 0x0);
        gbc.writeMem(0x26d2, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xfc21, gbc.sp());
        EXPECT(0x26d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0056
        gbc.setState(0x3364, 0x9bdb, 0xc4b0, 0x8ad2, 0xdb92, 0x42fb, 0x1, 0x0);
        gbc.writeMem(0x3364, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x9bdb, gbc.sp());
        EXPECT(0x3366, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0057
        gbc.setState(0xa15a, 0xac10, 0x2690, 0xacd7, 0x641, 0x10b1, 0x1, 0x1);
        gbc.writeMem(0xa15a, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xac10, gbc.sp());
        EXPECT(0xa15c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa15a));
        EXPECT(0xdc, gbc.readMem(0xa15b));
        // CB DC 0059
        gbc.setState(0xa2d, 0x3bd6, 0xbe70, 0xdda4, 0x7c63, 0xda17, 0x0, 0x1);
        gbc.writeMem(0xa2d, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x3bd6, gbc.sp());
        EXPECT(0xa2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 005A
        gbc.setState(0x1629, 0x253e, 0x9530, 0xc7f4, 0x69ef, 0xe95f, 0x1, 0x1);
        gbc.writeMem(0x1629, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x253e, gbc.sp());
        EXPECT(0x162b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 005C
        gbc.setState(0xc1c1, 0xbbd4, 0x45e0, 0xf237, 0x8e2d, 0xdb01, 0x1, 0x1);
        gbc.writeMem(0xc1c1, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xbbd4, gbc.sp());
        EXPECT(0xc1c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1c1));
        EXPECT(0xdc, gbc.readMem(0xc1c2));
        // CB DC 005D
        gbc.setState(0x8823, 0x1c35, 0xe840, 0x5d57, 0xf09a, 0x4ac9, 0x0, 0x0);
        gbc.writeMem(0x8823, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x1c35, gbc.sp());
        EXPECT(0x8825, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8823));
        EXPECT(0xdc, gbc.readMem(0x8824));
        // CB DC 005E
        gbc.setState(0x359d, 0xe0fa, 0xc3e0, 0x509, 0xa0a4, 0x6896, 0x0, 0x0);
        gbc.writeMem(0x359d, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xe0fa, gbc.sp());
        EXPECT(0x359f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 005F
        gbc.setState(0x2b14, 0xbcdb, 0x89a0, 0xeb1a, 0x10e6, 0x9791, 0x1, 0x1);
        gbc.writeMem(0x2b14, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xbcdb, gbc.sp());
        EXPECT(0x2b16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0060
        gbc.setState(0x64b6, 0xcb22, 0x1130, 0x551d, 0x63df, 0xc558, 0x1, 0x0);
        gbc.writeMem(0x64b6, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xcb22, gbc.sp());
        EXPECT(0x64b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0061
        gbc.setState(0x462b, 0x66a6, 0x5470, 0x3f92, 0x7c9b, 0xc053, 0x0, 0x0);
        gbc.writeMem(0x462b, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x66a6, gbc.sp());
        EXPECT(0x462d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0062
        gbc.setState(0x9cb4, 0xe8e9, 0x8f20, 0x6252, 0x5970, 0xb7de, 0x1, 0x0);
        gbc.writeMem(0x9cb4, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xe8e9, gbc.sp());
        EXPECT(0x9cb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cb4));
        EXPECT(0xdc, gbc.readMem(0x9cb5));
        // CB DC 0063
        gbc.setState(0x7952, 0x7e1d, 0xca10, 0x6d9, 0x718c, 0xc91a, 0x1, 0x1);
        gbc.writeMem(0x7952, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x7e1d, gbc.sp());
        EXPECT(0x7954, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0065
        gbc.setState(0x5479, 0x30a5, 0xdbd0, 0xb7a9, 0x1c31, 0xbdef, 0x0, 0x1);
        gbc.writeMem(0x5479, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x30a5, gbc.sp());
        EXPECT(0x547b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0066
        gbc.setState(0x8852, 0xbfac, 0xb0e0, 0x3689, 0xf571, 0xbd74, 0x1, 0x0);
        gbc.writeMem(0x8852, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xbfac, gbc.sp());
        EXPECT(0x8854, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8852));
        EXPECT(0xdc, gbc.readMem(0x8853));
        // CB DC 0067
        gbc.setState(0xca93, 0xcb33, 0xb3d0, 0x9282, 0x9cbe, 0x89a2, 0x1, 0x1);
        gbc.writeMem(0xca93, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xcb33, gbc.sp());
        EXPECT(0xca95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca93));
        EXPECT(0xdc, gbc.readMem(0xca94));
        // CB DC 0068
        gbc.setState(0xc54, 0x55ef, 0x9960, 0x1a4e, 0x5282, 0xed4e, 0x0, 0x0);
        gbc.writeMem(0xc54, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x55ef, gbc.sp());
        EXPECT(0xc56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0069
        gbc.setState(0xb3c, 0xc435, 0x9c30, 0x93b0, 0xcce1, 0xf08f, 0x1, 0x1);
        gbc.writeMem(0xb3c, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xc435, gbc.sp());
        EXPECT(0xb3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 006B
        gbc.setState(0x1bbc, 0x4940, 0xa270, 0xe309, 0xefc, 0x38cf, 0x1, 0x0);
        gbc.writeMem(0x1bbc, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x4940, gbc.sp());
        EXPECT(0x1bbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 006C
        gbc.setState(0x4d62, 0x68e2, 0x6f90, 0xa60b, 0x8d43, 0x2e15, 0x1, 0x0);
        gbc.writeMem(0x4d62, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x68e2, gbc.sp());
        EXPECT(0x4d64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 006D
        gbc.setState(0x2413, 0xad54, 0x5e00, 0x14b2, 0xb869, 0xd7ce, 0x1, 0x1);
        gbc.writeMem(0x2413, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xad54, gbc.sp());
        EXPECT(0x2415, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 006E
        gbc.setState(0x18ab, 0x766e, 0x7800, 0xe974, 0xfae1, 0x975, 0x1, 0x0);
        gbc.writeMem(0x18ab, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x766e, gbc.sp());
        EXPECT(0x18ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 006F
        gbc.setState(0xb056, 0xc6c, 0xdde0, 0xf3a5, 0x1d19, 0x7a90, 0x1, 0x1);
        gbc.writeMem(0xb056, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xc6c, gbc.sp());
        EXPECT(0xb058, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb056));
        EXPECT(0xdc, gbc.readMem(0xb057));
        // CB DC 0071
        gbc.setState(0xd88, 0x441e, 0x4470, 0x6ce2, 0x27e8, 0x9c1c, 0x1, 0x1);
        gbc.writeMem(0xd88, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x441e, gbc.sp());
        EXPECT(0xd8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0072
        gbc.setState(0x959a, 0xa0a9, 0x45f0, 0x95e0, 0x3cf4, 0xbf48, 0x0, 0x1);
        gbc.writeMem(0x959a, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xa0a9, gbc.sp());
        EXPECT(0x959c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x959a));
        EXPECT(0xdc, gbc.readMem(0x959b));
        // CB DC 0073
        gbc.setState(0xeea6, 0x94c2, 0xf550, 0x9a0b, 0xc698, 0xae96, 0x0, 0x0);
        gbc.writeMem(0xeea6, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x94c2, gbc.sp());
        EXPECT(0xeea8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeea6));
        EXPECT(0xdc, gbc.readMem(0xeea7));
        // CB DC 0074
        gbc.setState(0x7f97, 0x57ee, 0xf8d0, 0x650c, 0x10aa, 0x3e02, 0x1, 0x1);
        gbc.writeMem(0x7f97, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x57ee, gbc.sp());
        EXPECT(0x7f99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0075
        gbc.setState(0x11ba, 0xfa, 0xb620, 0x92e7, 0x8d91, 0xc9be, 0x1, 0x0);
        gbc.writeMem(0x11ba, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xfa, gbc.sp());
        EXPECT(0x11bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0076
        gbc.setState(0x281f, 0x4496, 0x9000, 0x32f2, 0xaa16, 0xb2c6, 0x0, 0x1);
        gbc.writeMem(0x281f, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x4496, gbc.sp());
        EXPECT(0x2821, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0077
        gbc.setState(0x800d, 0x6dba, 0xebc0, 0x74c2, 0x4fc0, 0x1ca5, 0x1, 0x0);
        gbc.writeMem(0x800d, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x6dba, gbc.sp());
        EXPECT(0x800f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x800d));
        EXPECT(0xdc, gbc.readMem(0x800e));
        // CB DC 0078
        gbc.setState(0xcd3f, 0x9083, 0x1e80, 0x93ea, 0x9136, 0x6af9, 0x1, 0x1);
        gbc.writeMem(0xcd3f, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x9083, gbc.sp());
        EXPECT(0xcd41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd3f));
        EXPECT(0xdc, gbc.readMem(0xcd40));
        // CB DC 0079
        gbc.setState(0x9f1, 0x735a, 0x8530, 0x3fe9, 0xff55, 0x14ab, 0x0, 0x0);
        gbc.writeMem(0x9f1, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x735a, gbc.sp());
        EXPECT(0x9f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 007A
        gbc.setState(0x79dd, 0x35d6, 0x30a0, 0xb3c, 0xec86, 0x2864, 0x0, 0x1);
        gbc.writeMem(0x79dd, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x35d6, gbc.sp());
        EXPECT(0x79df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 007B
        gbc.setState(0x8bbc, 0x76a2, 0x8a60, 0x6f1a, 0xdb99, 0x1277, 0x1, 0x1);
        gbc.writeMem(0x8bbc, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x76a2, gbc.sp());
        EXPECT(0x8bbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bbc));
        EXPECT(0xdc, gbc.readMem(0x8bbd));
        // CB DC 007C
        gbc.setState(0xece8, 0x1680, 0x15a0, 0x2b36, 0xfcf, 0x9ebd, 0x0, 0x0);
        gbc.writeMem(0xece8, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x1680, gbc.sp());
        EXPECT(0xecea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xece8));
        EXPECT(0xdc, gbc.readMem(0xece9));
        // CB DC 007D
        gbc.setState(0x3551, 0x9cbb, 0x1060, 0x3034, 0xe5d9, 0xe835, 0x1, 0x1);
        gbc.writeMem(0x3551, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x9cbb, gbc.sp());
        EXPECT(0x3553, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 007E
        gbc.setState(0x195, 0x39ad, 0x40f0, 0x5d53, 0x259a, 0x4480, 0x0, 0x0);
        gbc.writeMem(0x195, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x39ad, gbc.sp());
        EXPECT(0x197, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 007F
        gbc.setState(0x53a9, 0x1dd, 0x5990, 0xa303, 0x2416, 0xb80f, 0x0, 0x0);
        gbc.writeMem(0x53a9, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x1dd, gbc.sp());
        EXPECT(0x53ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0080
        gbc.setState(0xeefa, 0x535c, 0x88d0, 0x3304, 0xda3, 0xd313, 0x1, 0x0);
        gbc.writeMem(0xeefa, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x535c, gbc.sp());
        EXPECT(0xeefc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeefa));
        EXPECT(0xdc, gbc.readMem(0xeefb));
        // CB DC 0081
        gbc.setState(0x1bec, 0x28b, 0xbf0, 0x2c8, 0xa4b5, 0xfe9e, 0x0, 0x1);
        gbc.writeMem(0x1bec, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x28b, gbc.sp());
        EXPECT(0x1bee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0082
        gbc.setState(0x374e, 0xd9ed, 0xb650, 0x218a, 0xae85, 0xbdb8, 0x0, 0x1);
        gbc.writeMem(0x374e, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xd9ed, gbc.sp());
        EXPECT(0x3750, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0083
        gbc.setState(0x7669, 0x7af0, 0x96d0, 0x3930, 0x8ec3, 0xc9de, 0x0, 0x0);
        gbc.writeMem(0x7669, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x7af0, gbc.sp());
        EXPECT(0x766b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0084
        gbc.setState(0x17b5, 0xdb2a, 0xe5c0, 0x1da2, 0x2ad, 0xa69c, 0x0, 0x0);
        gbc.writeMem(0x17b5, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xdb2a, gbc.sp());
        EXPECT(0x17b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0085
        gbc.setState(0x98dd, 0xbbbc, 0x92d0, 0xd301, 0xc07a, 0xfdaf, 0x1, 0x1);
        gbc.writeMem(0x98dd, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xbbbc, gbc.sp());
        EXPECT(0x98df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98dd));
        EXPECT(0xdc, gbc.readMem(0x98de));
        // CB DC 0086
        gbc.setState(0xb73b, 0x2ea7, 0x8a80, 0x3fc4, 0x2117, 0x5356, 0x1, 0x1);
        gbc.writeMem(0xb73b, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x2ea7, gbc.sp());
        EXPECT(0xb73d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb73b));
        EXPECT(0xdc, gbc.readMem(0xb73c));
        // CB DC 0087
        gbc.setState(0xad79, 0x54fa, 0x9400, 0x9572, 0x1645, 0x2fd7, 0x0, 0x1);
        gbc.writeMem(0xad79, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x54fa, gbc.sp());
        EXPECT(0xad7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad79));
        EXPECT(0xdc, gbc.readMem(0xad7a));
        // CB DC 0088
        gbc.setState(0x77f, 0x3ed2, 0x7cf0, 0x4b49, 0x2ba6, 0xcf23, 0x1, 0x1);
        gbc.writeMem(0x77f, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x3ed2, gbc.sp());
        EXPECT(0x781, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0089
        gbc.setState(0x8690, 0x3950, 0x5ac0, 0x5dfd, 0xc1fb, 0x7062, 0x0, 0x1);
        gbc.writeMem(0x8690, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x3950, gbc.sp());
        EXPECT(0x8692, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8690));
        EXPECT(0xdc, gbc.readMem(0x8691));
        // CB DC 008A
        gbc.setState(0x6141, 0xa5b0, 0xf670, 0x8968, 0xcf47, 0x71c2, 0x1, 0x1);
        gbc.writeMem(0x6141, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xa5b0, gbc.sp());
        EXPECT(0x6143, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 008B
        gbc.setState(0x5d13, 0xa88, 0x8ca0, 0x69c, 0x910b, 0x2c83, 0x1, 0x0);
        gbc.writeMem(0x5d13, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xa88, gbc.sp());
        EXPECT(0x5d15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 008C
        gbc.setState(0x65ef, 0xb818, 0x28d0, 0xa0c4, 0x8952, 0x92e5, 0x0, 0x0);
        gbc.writeMem(0x65ef, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xb818, gbc.sp());
        EXPECT(0x65f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 008D
        gbc.setState(0xec40, 0xf6c1, 0xc9a0, 0x8402, 0x8827, 0xcbce, 0x1, 0x1);
        gbc.writeMem(0xec40, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xf6c1, gbc.sp());
        EXPECT(0xec42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec40));
        EXPECT(0xdc, gbc.readMem(0xec41));
        // CB DC 008E
        gbc.setState(0x7448, 0x290e, 0x8df0, 0x2db7, 0xc76d, 0xb1ef, 0x0, 0x0);
        gbc.writeMem(0x7448, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x290e, gbc.sp());
        EXPECT(0x744a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 008F
        gbc.setState(0xa31a, 0x3776, 0xe180, 0x9085, 0xf588, 0x38e7, 0x1, 0x1);
        gbc.writeMem(0xa31a, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x3776, gbc.sp());
        EXPECT(0xa31c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa31a));
        EXPECT(0xdc, gbc.readMem(0xa31b));
        // CB DC 0090
        gbc.setState(0x270d, 0x8d41, 0x1e0, 0xde21, 0x32d1, 0x8469, 0x1, 0x0);
        gbc.writeMem(0x270d, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x8d41, gbc.sp());
        EXPECT(0x270f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0091
        gbc.setState(0x76eb, 0xbf8b, 0x3330, 0x46a1, 0xe27f, 0xb12e, 0x0, 0x0);
        gbc.writeMem(0x76eb, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xbf8b, gbc.sp());
        EXPECT(0x76ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0092
        gbc.setState(0x95e2, 0x845b, 0xe150, 0x907d, 0x4f4d, 0x75ac, 0x0, 0x0);
        gbc.writeMem(0x95e2, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x845b, gbc.sp());
        EXPECT(0x95e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95e2));
        EXPECT(0xdc, gbc.readMem(0x95e3));
        // CB DC 0093
        gbc.setState(0xc3c3, 0x1c58, 0x85d0, 0xcd5, 0xe04b, 0x26db, 0x1, 0x0);
        gbc.writeMem(0xc3c3, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x1c58, gbc.sp());
        EXPECT(0xc3c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3c3));
        EXPECT(0xdc, gbc.readMem(0xc3c4));
        // CB DC 0094
        gbc.setState(0x1450, 0xe7d0, 0x35b0, 0x5615, 0x5634, 0xcbfd, 0x1, 0x1);
        gbc.writeMem(0x1450, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xe7d0, gbc.sp());
        EXPECT(0x1452, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0095
        gbc.setState(0x314c, 0xeb29, 0x4830, 0xbb5a, 0x5ad5, 0xbf3d, 0x0, 0x1);
        gbc.writeMem(0x314c, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xeb29, gbc.sp());
        EXPECT(0x314e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0096
        gbc.setState(0x3ba4, 0x627d, 0xf420, 0x7b0e, 0x34b9, 0xdc01, 0x0, 0x1);
        gbc.writeMem(0x3ba4, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x627d, gbc.sp());
        EXPECT(0x3ba6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0097
        gbc.setState(0xe20c, 0xd211, 0x6760, 0xfb8d, 0x581a, 0x2038, 0x1, 0x0);
        gbc.writeMem(0xe20c, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xd211, gbc.sp());
        EXPECT(0xe20e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe20c));
        EXPECT(0xdc, gbc.readMem(0xe20d));
        // CB DC 0098
        gbc.setState(0xde7d, 0x9886, 0xb630, 0x6333, 0xd4c3, 0xe9a6, 0x1, 0x1);
        gbc.writeMem(0xde7d, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x9886, gbc.sp());
        EXPECT(0xde7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde7d));
        EXPECT(0xdc, gbc.readMem(0xde7e));
        // CB DC 0099
        gbc.setState(0xe903, 0x2d2c, 0xa000, 0x1147, 0xb8e2, 0x804c, 0x1, 0x0);
        gbc.writeMem(0xe903, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x2d2c, gbc.sp());
        EXPECT(0xe905, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe903));
        EXPECT(0xdc, gbc.readMem(0xe904));
        // CB DC 009A
        gbc.setState(0x2e2e, 0xb7bc, 0x38d0, 0x343d, 0x5049, 0x9b, 0x0, 0x1);
        gbc.writeMem(0x2e2e, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xb7bc, gbc.sp());
        EXPECT(0x2e30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 009B
        gbc.setState(0x71c9, 0x585b, 0xb770, 0xdf7e, 0x99cb, 0x568a, 0x1, 0x0);
        gbc.writeMem(0x71c9, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x585b, gbc.sp());
        EXPECT(0x71cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 009C
        gbc.setState(0xebc0, 0xbc16, 0xfb50, 0xab75, 0x858b, 0x7589, 0x1, 0x1);
        gbc.writeMem(0xebc0, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xbc16, gbc.sp());
        EXPECT(0xebc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebc0));
        EXPECT(0xdc, gbc.readMem(0xebc1));
        // CB DC 009D
        gbc.setState(0xa821, 0xf4ca, 0x2860, 0xc9fd, 0xab02, 0x4cb2, 0x1, 0x0);
        gbc.writeMem(0xa821, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xf4ca, gbc.sp());
        EXPECT(0xa823, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa821));
        EXPECT(0xdc, gbc.readMem(0xa822));
        // CB DC 009E
        gbc.setState(0xbbc3, 0xde07, 0x7ad0, 0xec6e, 0x13f8, 0x4575, 0x1, 0x1);
        gbc.writeMem(0xbbc3, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xde07, gbc.sp());
        EXPECT(0xbbc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbc3));
        EXPECT(0xdc, gbc.readMem(0xbbc4));
        // CB DC 009F
        gbc.setState(0x4bbd, 0x27c1, 0xbae0, 0x7035, 0x249d, 0x77a2, 0x1, 0x0);
        gbc.writeMem(0x4bbd, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x27c1, gbc.sp());
        EXPECT(0x4bbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 00A0
        gbc.setState(0x49c, 0xd8a5, 0xf9a0, 0x1231, 0xcddc, 0xe3b4, 0x1, 0x0);
        gbc.writeMem(0x49c, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xd8a5, gbc.sp());
        EXPECT(0x49e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 00A1
        gbc.setState(0x411e, 0x2f7c, 0x14b0, 0xa10c, 0x84a3, 0x1672, 0x0, 0x1);
        gbc.writeMem(0x411e, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x2f7c, gbc.sp());
        EXPECT(0x4120, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 00A2
        gbc.setState(0x8178, 0xa621, 0x5ec0, 0xa6f8, 0x9136, 0x6f85, 0x1, 0x0);
        gbc.writeMem(0x8178, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xa621, gbc.sp());
        EXPECT(0x817a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8178));
        EXPECT(0xdc, gbc.readMem(0x8179));
        // CB DC 00A3
        gbc.setState(0x4b4e, 0x28c7, 0xf60, 0x9a57, 0x9646, 0x21e7, 0x1, 0x1);
        gbc.writeMem(0x4b4e, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x28c7, gbc.sp());
        EXPECT(0x4b50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 00A4
        gbc.setState(0xd211, 0x4dbb, 0x2010, 0x6e04, 0xc082, 0xc525, 0x0, 0x1);
        gbc.writeMem(0xd211, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x4dbb, gbc.sp());
        EXPECT(0xd213, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd211));
        EXPECT(0xdc, gbc.readMem(0xd212));
        // CB DC 00A5
        gbc.setState(0x328a, 0xb621, 0x6810, 0xeff9, 0x367f, 0x3601, 0x0, 0x1);
        gbc.writeMem(0x328a, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xb621, gbc.sp());
        EXPECT(0x328c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 00A6
        gbc.setState(0xb6fc, 0x3d3f, 0xbb40, 0x826f, 0x10d8, 0xb397, 0x0, 0x0);
        gbc.writeMem(0xb6fc, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x3d3f, gbc.sp());
        EXPECT(0xb6fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6fc));
        EXPECT(0xdc, gbc.readMem(0xb6fd));
        // CB DC 00A7
        gbc.setState(0x2e2f, 0x60ed, 0x1bb0, 0x34fe, 0x4cf4, 0x7046, 0x0, 0x1);
        gbc.writeMem(0x2e2f, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x60ed, gbc.sp());
        EXPECT(0x2e31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 00A8
        gbc.setState(0xc58d, 0x1076, 0xa880, 0xa7de, 0xd92b, 0x2e74, 0x1, 0x0);
        gbc.writeMem(0xc58d, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x1076, gbc.sp());
        EXPECT(0xc58f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc58d));
        EXPECT(0xdc, gbc.readMem(0xc58e));
        // CB DC 00A9
        gbc.setState(0x15d3, 0xd0c9, 0x2690, 0x8df9, 0x3113, 0xe698, 0x1, 0x0);
        gbc.writeMem(0x15d3, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xd0c9, gbc.sp());
        EXPECT(0x15d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 00AA
        gbc.setState(0x14e4, 0xc4d3, 0xa2a0, 0x7e3e, 0x3d35, 0xaed7, 0x0, 0x1);
        gbc.writeMem(0x14e4, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xc4d3, gbc.sp());
        EXPECT(0x14e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 00AB
        gbc.setState(0x20eb, 0xe030, 0xe830, 0xfbcd, 0x9ee1, 0x98ba, 0x1, 0x0);
        gbc.writeMem(0x20eb, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xe030, gbc.sp());
        EXPECT(0x20ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 00AC
        gbc.setState(0xb775, 0x809b, 0x8e90, 0x82e9, 0x353e, 0x528a, 0x0, 0x0);
        gbc.writeMem(0xb775, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x809b, gbc.sp());
        EXPECT(0xb777, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb775));
        EXPECT(0xdc, gbc.readMem(0xb776));
        // CB DC 00AD
        gbc.setState(0xb551, 0x582c, 0x7760, 0xa583, 0x8ea8, 0x2fb8, 0x1, 0x1);
        gbc.writeMem(0xb551, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x582c, gbc.sp());
        EXPECT(0xb553, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb551));
        EXPECT(0xdc, gbc.readMem(0xb552));
        // CB DC 00AE
        gbc.setState(0xc121, 0xf848, 0xaa40, 0x6cf5, 0xd938, 0x86ae, 0x0, 0x0);
        gbc.writeMem(0xc121, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xf848, gbc.sp());
        EXPECT(0xc123, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc121));
        EXPECT(0xdc, gbc.readMem(0xc122));
        // CB DC 00AF
        gbc.setState(0xe49, 0xa985, 0x87e0, 0xd01e, 0x44a, 0xb559, 0x0, 0x0);
        gbc.writeMem(0xe49, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xa985, gbc.sp());
        EXPECT(0xe4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 00B0
        gbc.setState(0x2116, 0x9190, 0x6dc0, 0xddc0, 0x3c48, 0xb454, 0x1, 0x0);
        gbc.writeMem(0x2116, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x9190, gbc.sp());
        EXPECT(0x2118, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 00B1
        gbc.setState(0xaa76, 0x8f97, 0x8ef0, 0xc269, 0x2bb8, 0xe073, 0x0, 0x0);
        gbc.writeMem(0xaa76, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x8f97, gbc.sp());
        EXPECT(0xaa78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa76));
        EXPECT(0xdc, gbc.readMem(0xaa77));
        // CB DC 00B2
        gbc.setState(0xa258, 0xb936, 0xea00, 0x86e9, 0x7921, 0xf6b3, 0x1, 0x0);
        gbc.writeMem(0xa258, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xb936, gbc.sp());
        EXPECT(0xa25a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa258));
        EXPECT(0xdc, gbc.readMem(0xa259));
        // CB DC 00B4
        gbc.setState(0x2f06, 0x3a23, 0x5fb0, 0x595c, 0x835f, 0x2921, 0x0, 0x0);
        gbc.writeMem(0x2f06, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x3a23, gbc.sp());
        EXPECT(0x2f08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 00B5
        gbc.setState(0x262b, 0x9ffe, 0xdcc0, 0x25fd, 0x4898, 0x1657, 0x0, 0x1);
        gbc.writeMem(0x262b, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x9ffe, gbc.sp());
        EXPECT(0x262d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 00B6
        gbc.setState(0xdacf, 0x6898, 0x7bc0, 0xb46a, 0x4116, 0xcf76, 0x1, 0x0);
        gbc.writeMem(0xdacf, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x6898, gbc.sp());
        EXPECT(0xdad1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdacf));
        EXPECT(0xdc, gbc.readMem(0xdad0));
        // CB DC 00B7
        gbc.setState(0xb304, 0x7ff7, 0x4940, 0xbb37, 0x7c46, 0x88e3, 0x1, 0x0);
        gbc.writeMem(0xb304, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x7ff7, gbc.sp());
        EXPECT(0xb306, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb304));
        EXPECT(0xdc, gbc.readMem(0xb305));
        // CB DC 00B8
        gbc.setState(0xb280, 0xc54e, 0xf830, 0x5964, 0x9993, 0x1022, 0x1, 0x1);
        gbc.writeMem(0xb280, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xc54e, gbc.sp());
        EXPECT(0xb282, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb280));
        EXPECT(0xdc, gbc.readMem(0xb281));
        // CB DC 00B9
        gbc.setState(0xa526, 0xbeef, 0xe7b0, 0xc131, 0xc4bd, 0xf17f, 0x1, 0x1);
        gbc.writeMem(0xa526, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xbeef, gbc.sp());
        EXPECT(0xa528, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa526));
        EXPECT(0xdc, gbc.readMem(0xa527));
        // CB DC 00BA
        gbc.setState(0x69e4, 0x450a, 0x3350, 0xd81b, 0x45bf, 0xe1d6, 0x1, 0x0);
        gbc.writeMem(0x69e4, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x450a, gbc.sp());
        EXPECT(0x69e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 00BB
        gbc.setState(0x3f7d, 0x4ff9, 0x8030, 0x106b, 0x1605, 0xd2cc, 0x1, 0x0);
        gbc.writeMem(0x3f7d, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x4ff9, gbc.sp());
        EXPECT(0x3f7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 00BC
        gbc.setState(0x67b, 0x7001, 0xad90, 0x3b7a, 0xee7c, 0xa901, 0x1, 0x1);
        gbc.writeMem(0x67b, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x7001, gbc.sp());
        EXPECT(0x67d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 00BD
        gbc.setState(0x5296, 0x3d65, 0xab60, 0x4454, 0xfa18, 0x6d09, 0x1, 0x1);
        gbc.writeMem(0x5296, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x3d65, gbc.sp());
        EXPECT(0x5298, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 00BE
        gbc.setState(0x7b08, 0x499d, 0xa090, 0xd5cc, 0x5c6f, 0x8fb4, 0x0, 0x1);
        gbc.writeMem(0x7b08, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x499d, gbc.sp());
        EXPECT(0x7b0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 00BF
        gbc.setState(0xbb75, 0xbbf9, 0x6ae0, 0x338d, 0x6088, 0x6c1b, 0x1, 0x1);
        gbc.writeMem(0xbb75, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xbbf9, gbc.sp());
        EXPECT(0xbb77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb75));
        EXPECT(0xdc, gbc.readMem(0xbb76));
        // CB DC 00C0
        gbc.setState(0x4ded, 0x60a3, 0x80a0, 0x44f0, 0x9703, 0x8b40, 0x0, 0x1);
        gbc.writeMem(0x4ded, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x60a3, gbc.sp());
        EXPECT(0x4def, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 00C1
        gbc.setState(0x6387, 0x9b20, 0x3420, 0xa704, 0x2533, 0x86a0, 0x1, 0x0);
        gbc.writeMem(0x6387, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x9b20, gbc.sp());
        EXPECT(0x6389, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 00C2
        gbc.setState(0x495e, 0xec83, 0x22d0, 0x4558, 0x62d7, 0x57b0, 0x0, 0x1);
        gbc.writeMem(0x495e, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xec83, gbc.sp());
        EXPECT(0x4960, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 00C3
        gbc.setState(0xb9de, 0x3c76, 0x2c20, 0xb2a6, 0x662, 0x8353, 0x1, 0x0);
        gbc.writeMem(0xb9de, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x3c76, gbc.sp());
        EXPECT(0xb9e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9de));
        EXPECT(0xdc, gbc.readMem(0xb9df));
        // CB DC 00C4
        gbc.setState(0x5f55, 0x71fb, 0x8510, 0x868e, 0x16bd, 0x4ab5, 0x0, 0x1);
        gbc.writeMem(0x5f55, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x71fb, gbc.sp());
        EXPECT(0x5f57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 00C5
        gbc.setState(0x6be2, 0xfa8a, 0x1320, 0x3d38, 0x24d4, 0x92d6, 0x0, 0x0);
        gbc.writeMem(0x6be2, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xfa8a, gbc.sp());
        EXPECT(0x6be4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 00C6
        gbc.setState(0x9926, 0x945e, 0x72d0, 0x9270, 0xc945, 0x1ce3, 0x1, 0x0);
        gbc.writeMem(0x9926, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x945e, gbc.sp());
        EXPECT(0x9928, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9926));
        EXPECT(0xdc, gbc.readMem(0x9927));
        // CB DC 00C7
        gbc.setState(0xb3ad, 0xe333, 0xeba0, 0xbd7c, 0xb580, 0x6be5, 0x1, 0x1);
        gbc.writeMem(0xb3ad, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xe333, gbc.sp());
        EXPECT(0xb3af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3ad));
        EXPECT(0xdc, gbc.readMem(0xb3ae));
        // CB DC 00C9
        gbc.setState(0x1358, 0x15cf, 0x7020, 0xb2cc, 0xb91, 0x9bc2, 0x0, 0x1);
        gbc.writeMem(0x1358, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x15cf, gbc.sp());
        EXPECT(0x135a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 00CA
        gbc.setState(0x652b, 0xe102, 0x61a0, 0x3294, 0x6dc5, 0x4d0a, 0x1, 0x1);
        gbc.writeMem(0x652b, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xe102, gbc.sp());
        EXPECT(0x652d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 00CB
        gbc.setState(0x170f, 0x1d2b, 0x47e0, 0x7173, 0x549d, 0x8f10, 0x0, 0x1);
        gbc.writeMem(0x170f, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x1d2b, gbc.sp());
        EXPECT(0x1711, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 00CC
        gbc.setState(0xd03c, 0xb4f2, 0x7dc0, 0xa4ea, 0x5f9f, 0x81f, 0x0, 0x1);
        gbc.writeMem(0xd03c, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xb4f2, gbc.sp());
        EXPECT(0xd03e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd03c));
        EXPECT(0xdc, gbc.readMem(0xd03d));
        // CB DC 00CD
        gbc.setState(0x1013, 0xa0a, 0x53b0, 0x4cfd, 0x680e, 0xc837, 0x0, 0x0);
        gbc.writeMem(0x1013, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xa0a, gbc.sp());
        EXPECT(0x1015, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 00CE
        gbc.setState(0xa42f, 0x934e, 0xd1a0, 0x5432, 0xb9a8, 0x557d, 0x0, 0x0);
        gbc.writeMem(0xa42f, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x934e, gbc.sp());
        EXPECT(0xa431, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa42f));
        EXPECT(0xdc, gbc.readMem(0xa430));
        // CB DC 00CF
        gbc.setState(0x61ec, 0x18b2, 0x6710, 0x58a7, 0x64aa, 0xf270, 0x1, 0x1);
        gbc.writeMem(0x61ec, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x18b2, gbc.sp());
        EXPECT(0x61ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 00D0
        gbc.setState(0x4d37, 0x2cd0, 0x3250, 0x867, 0x4f30, 0xcc21, 0x0, 0x0);
        gbc.writeMem(0x4d37, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x2cd0, gbc.sp());
        EXPECT(0x4d39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 00D1
        gbc.setState(0xb5a6, 0xadb6, 0x8620, 0x6aa3, 0xeed2, 0x6fe8, 0x0, 0x0);
        gbc.writeMem(0xb5a6, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xadb6, gbc.sp());
        EXPECT(0xb5a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5a6));
        EXPECT(0xdc, gbc.readMem(0xb5a7));
        // CB DC 00D2
        gbc.setState(0x7668, 0xb6e3, 0x5730, 0xba82, 0x8587, 0x21b9, 0x0, 0x0);
        gbc.writeMem(0x7668, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xb6e3, gbc.sp());
        EXPECT(0x766a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 00D3
        gbc.setState(0x4f2a, 0x8f96, 0xe270, 0x78cc, 0x421f, 0xe328, 0x0, 0x0);
        gbc.writeMem(0x4f2a, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x8f96, gbc.sp());
        EXPECT(0x4f2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 00D4
        gbc.setState(0xcd03, 0x9702, 0xb5c0, 0x1e64, 0x5d4d, 0x5afe, 0x1, 0x1);
        gbc.writeMem(0xcd03, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x9702, gbc.sp());
        EXPECT(0xcd05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd03));
        EXPECT(0xdc, gbc.readMem(0xcd04));
        // CB DC 00D5
        gbc.setState(0x4da2, 0xca9f, 0x5c50, 0x658c, 0xc8cd, 0xb630, 0x1, 0x1);
        gbc.writeMem(0x4da2, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xca9f, gbc.sp());
        EXPECT(0x4da4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 00D6
        gbc.setState(0x9245, 0x4da9, 0xcd80, 0xf8a0, 0x20cf, 0x1096, 0x1, 0x0);
        gbc.writeMem(0x9245, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x4da9, gbc.sp());
        EXPECT(0x9247, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9245));
        EXPECT(0xdc, gbc.readMem(0x9246));
        // CB DC 00D7
        gbc.setState(0xcc49, 0x10b0, 0x9d50, 0x866c, 0x3e09, 0x3cf, 0x1, 0x0);
        gbc.writeMem(0xcc49, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x10b0, gbc.sp());
        EXPECT(0xcc4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc49));
        EXPECT(0xdc, gbc.readMem(0xcc4a));
        // CB DC 00D8
        gbc.setState(0x2f37, 0x222, 0xa1c0, 0x93d5, 0xf4b, 0x6f67, 0x1, 0x1);
        gbc.writeMem(0x2f37, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x222, gbc.sp());
        EXPECT(0x2f39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 00D9
        gbc.setState(0x7f16, 0x8811, 0x87e0, 0x62e2, 0xa70c, 0xbaf5, 0x0, 0x0);
        gbc.writeMem(0x7f16, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x8811, gbc.sp());
        EXPECT(0x7f18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 00DA
        gbc.setState(0x439, 0xf571, 0xb810, 0x7c1a, 0xe1ab, 0xf510, 0x1, 0x1);
        gbc.writeMem(0x439, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xf571, gbc.sp());
        EXPECT(0x43b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 00DC
        gbc.setState(0x9af6, 0x57aa, 0x4b0, 0x6e30, 0x210e, 0x7fc6, 0x1, 0x0);
        gbc.writeMem(0x9af6, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x57aa, gbc.sp());
        EXPECT(0x9af8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9af6));
        EXPECT(0xdc, gbc.readMem(0x9af7));
        // CB DC 00DD
        gbc.setState(0x4d1, 0x23d4, 0x3740, 0xb39d, 0xc192, 0x4a5e, 0x0, 0x1);
        gbc.writeMem(0x4d1, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x23d4, gbc.sp());
        EXPECT(0x4d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 00DE
        gbc.setState(0xd273, 0xe42, 0x7810, 0x5240, 0xcdf6, 0x53f8, 0x0, 0x0);
        gbc.writeMem(0xd273, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xe42, gbc.sp());
        EXPECT(0xd275, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd273));
        EXPECT(0xdc, gbc.readMem(0xd274));
        // CB DC 00DF
        gbc.setState(0xdb52, 0xc274, 0xd700, 0x73f6, 0x56a8, 0x7357, 0x0, 0x1);
        gbc.writeMem(0xdb52, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xc274, gbc.sp());
        EXPECT(0xdb54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb52));
        EXPECT(0xdc, gbc.readMem(0xdb53));
        // CB DC 00E0
        gbc.setState(0x23fe, 0xef87, 0x720, 0x695d, 0xb4b9, 0xd8a4, 0x1, 0x0);
        gbc.writeMem(0x23fe, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xef87, gbc.sp());
        EXPECT(0x2400, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 00E1
        gbc.setState(0xe57, 0x23de, 0x490, 0x9fa1, 0x5035, 0xb649, 0x1, 0x1);
        gbc.writeMem(0xe57, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x23de, gbc.sp());
        EXPECT(0xe59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 00E2
        gbc.setState(0x8edd, 0xe7ef, 0x2690, 0x853, 0xf343, 0xdaff, 0x0, 0x1);
        gbc.writeMem(0x8edd, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xe7ef, gbc.sp());
        EXPECT(0x8edf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8edd));
        EXPECT(0xdc, gbc.readMem(0x8ede));
        // CB DC 00E3
        gbc.setState(0xd724, 0x422f, 0xc4f0, 0xca54, 0xd695, 0xa07d, 0x1, 0x1);
        gbc.writeMem(0xd724, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x422f, gbc.sp());
        EXPECT(0xd726, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd724));
        EXPECT(0xdc, gbc.readMem(0xd725));
        // CB DC 00E4
        gbc.setState(0x253d, 0x5a17, 0xca00, 0xe51c, 0x885d, 0xfd28, 0x1, 0x0);
        gbc.writeMem(0x253d, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x5a17, gbc.sp());
        EXPECT(0x253f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 00E5
        gbc.setState(0x807f, 0xf4eb, 0x4900, 0xcfc3, 0xee2d, 0xf6e0, 0x0, 0x0);
        gbc.writeMem(0x807f, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xf4eb, gbc.sp());
        EXPECT(0x8081, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x807f));
        EXPECT(0xdc, gbc.readMem(0x8080));
        // CB DC 00E6
        gbc.setState(0xb774, 0x57d, 0xfa00, 0x289f, 0xcb21, 0x6f87, 0x1, 0x1);
        gbc.writeMem(0xb774, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x57d, gbc.sp());
        EXPECT(0xb776, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb774));
        EXPECT(0xdc, gbc.readMem(0xb775));
        // CB DC 00E7
        gbc.setState(0xa226, 0xf6ee, 0x8240, 0x8982, 0xb1e1, 0xe1e3, 0x1, 0x0);
        gbc.writeMem(0xa226, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xf6ee, gbc.sp());
        EXPECT(0xa228, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa226));
        EXPECT(0xdc, gbc.readMem(0xa227));
        // CB DC 00E8
        gbc.setState(0xc570, 0x2417, 0xf7f0, 0x1bc9, 0x7973, 0x9404, 0x1, 0x1);
        gbc.writeMem(0xc570, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x2417, gbc.sp());
        EXPECT(0xc572, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc570));
        EXPECT(0xdc, gbc.readMem(0xc571));
        // CB DC 00EA
        gbc.setState(0x1f4a, 0x3b80, 0xddd0, 0xe5d9, 0x740e, 0xa45f, 0x1, 0x0);
        gbc.writeMem(0x1f4a, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x3b80, gbc.sp());
        EXPECT(0x1f4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 00EB
        gbc.setState(0x1012, 0x7f75, 0xc580, 0x9ada, 0xf081, 0x756a, 0x0, 0x1);
        gbc.writeMem(0x1012, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x7f75, gbc.sp());
        EXPECT(0x1014, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 00EC
        gbc.setState(0x9f8f, 0x5b01, 0xfc20, 0xd5db, 0x52a0, 0x1c33, 0x1, 0x0);
        gbc.writeMem(0x9f8f, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x5b01, gbc.sp());
        EXPECT(0x9f91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f8f));
        EXPECT(0xdc, gbc.readMem(0x9f90));
        // CB DC 00ED
        gbc.setState(0xcbc0, 0xfb79, 0x31c0, 0x54b, 0xce6f, 0x4a04, 0x1, 0x1);
        gbc.writeMem(0xcbc0, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xfb79, gbc.sp());
        EXPECT(0xcbc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbc0));
        EXPECT(0xdc, gbc.readMem(0xcbc1));
        // CB DC 00EE
        gbc.setState(0x583e, 0x7d49, 0xe840, 0xd0e1, 0xc886, 0xbfa2, 0x0, 0x1);
        gbc.writeMem(0x583e, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x7d49, gbc.sp());
        EXPECT(0x5840, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 00EF
        gbc.setState(0x2144, 0xf3a1, 0xa9a0, 0xca20, 0x85ea, 0x181a, 0x0, 0x1);
        gbc.writeMem(0x2144, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xf3a1, gbc.sp());
        EXPECT(0x2146, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 00F0
        gbc.setState(0x259d, 0xee20, 0xceb0, 0xc259, 0x348, 0xfe98, 0x1, 0x0);
        gbc.writeMem(0x259d, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xee20, gbc.sp());
        EXPECT(0x259f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 00F1
        gbc.setState(0x166d, 0x5d77, 0x5980, 0xcaab, 0xee9f, 0xbd6f, 0x1, 0x0);
        gbc.writeMem(0x166d, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x5d77, gbc.sp());
        EXPECT(0x166f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 00F2
        gbc.setState(0x9bd, 0x445e, 0x2800, 0x6fa1, 0xcd38, 0xd71b, 0x1, 0x1);
        gbc.writeMem(0x9bd, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x445e, gbc.sp());
        EXPECT(0x9bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 00F3
        gbc.setState(0x3a35, 0xc374, 0x93c0, 0x6695, 0xe098, 0x433, 0x0, 0x1);
        gbc.writeMem(0x3a35, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xc374, gbc.sp());
        EXPECT(0x3a37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 00F4
        gbc.setState(0x8a92, 0xf02a, 0x1170, 0xf9bf, 0xdee6, 0x7f02, 0x0, 0x1);
        gbc.writeMem(0x8a92, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xf02a, gbc.sp());
        EXPECT(0x8a94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a92));
        EXPECT(0xdc, gbc.readMem(0x8a93));
        // CB DC 00F6
        gbc.setState(0x73c, 0x5b31, 0xe670, 0x7da, 0x8322, 0x75b, 0x1, 0x0);
        gbc.writeMem(0x73c, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x5b31, gbc.sp());
        EXPECT(0x73e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 00F7
        gbc.setState(0xb6f4, 0x329f, 0xa730, 0x1af9, 0x3a69, 0xdd3d, 0x0, 0x1);
        gbc.writeMem(0xb6f4, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x329f, gbc.sp());
        EXPECT(0xb6f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6f4));
        EXPECT(0xdc, gbc.readMem(0xb6f5));
        // CB DC 00F8
        gbc.setState(0x8ee3, 0x2e4b, 0x8300, 0x794c, 0xaec0, 0x651c, 0x1, 0x1);
        gbc.writeMem(0x8ee3, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x2e4b, gbc.sp());
        EXPECT(0x8ee5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ee3));
        EXPECT(0xdc, gbc.readMem(0x8ee4));
        // CB DC 00F9
        gbc.setState(0xbcee, 0x384c, 0x6540, 0xa5c5, 0x658e, 0xa8e4, 0x1, 0x1);
        gbc.writeMem(0xbcee, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x384c, gbc.sp());
        EXPECT(0xbcf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcee));
        EXPECT(0xdc, gbc.readMem(0xbcef));
        // CB DC 00FA
        gbc.setState(0x70d9, 0x85de, 0x1d0, 0x56f1, 0xac1a, 0xf891, 0x1, 0x0);
        gbc.writeMem(0x70d9, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x85de, gbc.sp());
        EXPECT(0x70db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 00FB
        gbc.setState(0xbc31, 0x5fdf, 0xa6a0, 0x82e0, 0xf028, 0x2ddb, 0x0, 0x1);
        gbc.writeMem(0xbc31, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x5fdf, gbc.sp());
        EXPECT(0xbc33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc31));
        EXPECT(0xdc, gbc.readMem(0xbc32));
        // CB DC 00FC
        gbc.setState(0xa114, 0x1b8c, 0x8d30, 0xd02f, 0x93c4, 0xeea9, 0x0, 0x1);
        gbc.writeMem(0xa114, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x1b8c, gbc.sp());
        EXPECT(0xa116, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa114));
        EXPECT(0xdc, gbc.readMem(0xa115));
        // CB DC 00FD
        gbc.setState(0x6703, 0x512c, 0x2dd0, 0xbb5c, 0xaa1b, 0xb166, 0x1, 0x0);
        gbc.writeMem(0x6703, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x512c, gbc.sp());
        EXPECT(0x6705, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 00FF
        gbc.setState(0x240e, 0xf85e, 0x5c00, 0x5f93, 0xcbcb, 0x473d, 0x1, 0x1);
        gbc.writeMem(0x240e, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xf85e, gbc.sp());
        EXPECT(0x2410, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0100
        gbc.setState(0xa6f4, 0xd9f7, 0xf3d0, 0xaa30, 0xc500, 0x9752, 0x0, 0x1);
        gbc.writeMem(0xa6f4, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xd9f7, gbc.sp());
        EXPECT(0xa6f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6f4));
        EXPECT(0xdc, gbc.readMem(0xa6f5));
        // CB DC 0101
        gbc.setState(0xb929, 0x8286, 0x7190, 0x62f0, 0x2f3b, 0xcf14, 0x0, 0x1);
        gbc.writeMem(0xb929, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x8286, gbc.sp());
        EXPECT(0xb92b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb929));
        EXPECT(0xdc, gbc.readMem(0xb92a));
        // CB DC 0102
        gbc.setState(0x7125, 0x826d, 0x7480, 0xf129, 0x4f0c, 0x59e9, 0x0, 0x1);
        gbc.writeMem(0x7125, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x826d, gbc.sp());
        EXPECT(0x7127, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0103
        gbc.setState(0xcc3f, 0x3934, 0x5f10, 0x49bd, 0x2f33, 0xb75b, 0x1, 0x0);
        gbc.writeMem(0xcc3f, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x3934, gbc.sp());
        EXPECT(0xcc41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc3f));
        EXPECT(0xdc, gbc.readMem(0xcc40));
        // CB DC 0104
        gbc.setState(0x9679, 0xc34a, 0x6d30, 0xd009, 0x974e, 0xa800, 0x0, 0x1);
        gbc.writeMem(0x9679, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xc34a, gbc.sp());
        EXPECT(0x967b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9679));
        EXPECT(0xdc, gbc.readMem(0x967a));
        // CB DC 0105
        gbc.setState(0x8c8a, 0x9aa9, 0xeb50, 0x86e8, 0x69d7, 0x380, 0x1, 0x0);
        gbc.writeMem(0x8c8a, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x9aa9, gbc.sp());
        EXPECT(0x8c8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c8a));
        EXPECT(0xdc, gbc.readMem(0x8c8b));
        // CB DC 0106
        gbc.setState(0xc904, 0xfd28, 0xaa80, 0xadf0, 0xd85, 0x22c1, 0x1, 0x0);
        gbc.writeMem(0xc904, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xfd28, gbc.sp());
        EXPECT(0xc906, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc904));
        EXPECT(0xdc, gbc.readMem(0xc905));
        // CB DC 0107
        gbc.setState(0xb88c, 0x68ac, 0x7950, 0x86ae, 0x877c, 0xd827, 0x0, 0x0);
        gbc.writeMem(0xb88c, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x68ac, gbc.sp());
        EXPECT(0xb88e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb88c));
        EXPECT(0xdc, gbc.readMem(0xb88d));
        // CB DC 0108
        gbc.setState(0x4d88, 0x42b6, 0x4870, 0x55e9, 0xc3fd, 0xf3e0, 0x0, 0x1);
        gbc.writeMem(0x4d88, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x42b6, gbc.sp());
        EXPECT(0x4d8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0109
        gbc.setState(0xbba1, 0xddbc, 0x7520, 0x7ae7, 0x43b7, 0x78c5, 0x0, 0x1);
        gbc.writeMem(0xbba1, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xddbc, gbc.sp());
        EXPECT(0xbba3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbba1));
        EXPECT(0xdc, gbc.readMem(0xbba2));
        // CB DC 010A
        gbc.setState(0xdada, 0x36a0, 0x7110, 0x6272, 0xf80f, 0x6197, 0x0, 0x0);
        gbc.writeMem(0xdada, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x36a0, gbc.sp());
        EXPECT(0xdadc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdada));
        EXPECT(0xdc, gbc.readMem(0xdadb));
        // CB DC 010C
        gbc.setState(0x7909, 0x4f35, 0xaa80, 0xef5e, 0xfce1, 0xcd9f, 0x0, 0x1);
        gbc.writeMem(0x7909, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x4f35, gbc.sp());
        EXPECT(0x790b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 010D
        gbc.setState(0xa505, 0x8a23, 0x29c0, 0x873f, 0xfd35, 0x58fc, 0x1, 0x1);
        gbc.writeMem(0xa505, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x8a23, gbc.sp());
        EXPECT(0xa507, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa505));
        EXPECT(0xdc, gbc.readMem(0xa506));
        // CB DC 010F
        gbc.setState(0x17dd, 0x9373, 0x7630, 0x9512, 0xc2fb, 0x57ad, 0x0, 0x0);
        gbc.writeMem(0x17dd, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x9373, gbc.sp());
        EXPECT(0x17df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0110
        gbc.setState(0x6ca8, 0x1212, 0x5e30, 0x3715, 0x6e73, 0x419e, 0x1, 0x0);
        gbc.writeMem(0x6ca8, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x1212, gbc.sp());
        EXPECT(0x6caa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0111
        gbc.setState(0xa749, 0x7147, 0x9ba0, 0xd871, 0x9566, 0xa19e, 0x1, 0x1);
        gbc.writeMem(0xa749, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x7147, gbc.sp());
        EXPECT(0xa74b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa749));
        EXPECT(0xdc, gbc.readMem(0xa74a));
        // CB DC 0112
        gbc.setState(0xa49, 0x2328, 0xfcf0, 0xf9d, 0x10ff, 0xbf30, 0x1, 0x1);
        gbc.writeMem(0xa49, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x2328, gbc.sp());
        EXPECT(0xa4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0113
        gbc.setState(0xef32, 0x2e07, 0xa1c0, 0x7c35, 0x8b8c, 0xde95, 0x0, 0x0);
        gbc.writeMem(0xef32, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x2e07, gbc.sp());
        EXPECT(0xef34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef32));
        EXPECT(0xdc, gbc.readMem(0xef33));
        // CB DC 0114
        gbc.setState(0x6d7c, 0xba6c, 0xca0, 0x4a89, 0xe7ce, 0xb7f7, 0x0, 0x0);
        gbc.writeMem(0x6d7c, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xba6c, gbc.sp());
        EXPECT(0x6d7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0115
        gbc.setState(0x54c7, 0x27a0, 0x7410, 0xea40, 0x93d5, 0xbf30, 0x0, 0x0);
        gbc.writeMem(0x54c7, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x27a0, gbc.sp());
        EXPECT(0x54c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0116
        gbc.setState(0xa165, 0x8d3e, 0xcdf0, 0xfa71, 0x298d, 0x866e, 0x0, 0x1);
        gbc.writeMem(0xa165, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x8d3e, gbc.sp());
        EXPECT(0xa167, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa165));
        EXPECT(0xdc, gbc.readMem(0xa166));
        // CB DC 0117
        gbc.setState(0xb1e4, 0xbede, 0xd760, 0x3ec8, 0xd85f, 0xbff8, 0x0, 0x1);
        gbc.writeMem(0xb1e4, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xbede, gbc.sp());
        EXPECT(0xb1e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1e4));
        EXPECT(0xdc, gbc.readMem(0xb1e5));
        // CB DC 0118
        gbc.setState(0xdc60, 0xa14, 0x5140, 0xe2b0, 0xe442, 0xbef1, 0x0, 0x1);
        gbc.writeMem(0xdc60, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xa14, gbc.sp());
        EXPECT(0xdc62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc60));
        EXPECT(0xdc, gbc.readMem(0xdc61));
        // CB DC 0119
        gbc.setState(0xe81d, 0x8ae6, 0x63e0, 0x8264, 0xa173, 0xda19, 0x1, 0x0);
        gbc.writeMem(0xe81d, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x8ae6, gbc.sp());
        EXPECT(0xe81f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe81d));
        EXPECT(0xdc, gbc.readMem(0xe81e));
        // CB DC 011B
        gbc.setState(0xd5ba, 0x11d7, 0xd890, 0xf3dd, 0x7656, 0xb811, 0x0, 0x0);
        gbc.writeMem(0xd5ba, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x11d7, gbc.sp());
        EXPECT(0xd5bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5ba));
        EXPECT(0xdc, gbc.readMem(0xd5bb));
        // CB DC 011C
        gbc.setState(0xe917, 0xd4d, 0x10e0, 0xf978, 0x6252, 0xae, 0x0, 0x0);
        gbc.writeMem(0xe917, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xd4d, gbc.sp());
        EXPECT(0xe919, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe917));
        EXPECT(0xdc, gbc.readMem(0xe918));
        // CB DC 011D
        gbc.setState(0xb361, 0x23cb, 0xdd90, 0xdd4d, 0x7677, 0x6792, 0x1, 0x0);
        gbc.writeMem(0xb361, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x23cb, gbc.sp());
        EXPECT(0xb363, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb361));
        EXPECT(0xdc, gbc.readMem(0xb362));
        // CB DC 011F
        gbc.setState(0x601f, 0xf65, 0x1fc0, 0xc7d, 0xa74d, 0xa5df, 0x1, 0x1);
        gbc.writeMem(0x601f, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xf65, gbc.sp());
        EXPECT(0x6021, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0120
        gbc.setState(0xca32, 0xe267, 0xd740, 0x2416, 0x322f, 0x5943, 0x0, 0x1);
        gbc.writeMem(0xca32, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xe267, gbc.sp());
        EXPECT(0xca34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca32));
        EXPECT(0xdc, gbc.readMem(0xca33));
        // CB DC 0121
        gbc.setState(0x6a96, 0xee26, 0x71e0, 0x8d43, 0x2e3c, 0xc48d, 0x0, 0x1);
        gbc.writeMem(0x6a96, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xee26, gbc.sp());
        EXPECT(0x6a98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0122
        gbc.setState(0x4195, 0x854d, 0x5b60, 0xa116, 0x33e8, 0x8b54, 0x0, 0x0);
        gbc.writeMem(0x4195, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x854d, gbc.sp());
        EXPECT(0x4197, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0123
        gbc.setState(0x621d, 0x5dc, 0x5130, 0x30ff, 0x8337, 0xce18, 0x0, 0x0);
        gbc.writeMem(0x621d, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x5dc, gbc.sp());
        EXPECT(0x621f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0124
        gbc.setState(0x265d, 0xf650, 0x950, 0x4552, 0xfeaf, 0x4b63, 0x1, 0x1);
        gbc.writeMem(0x265d, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xf650, gbc.sp());
        EXPECT(0x265f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0125
        gbc.setState(0x3913, 0xc27b, 0x2320, 0xee91, 0x2935, 0x2527, 0x0, 0x0);
        gbc.writeMem(0x3913, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xc27b, gbc.sp());
        EXPECT(0x3915, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0126
        gbc.setState(0x8040, 0xfefb, 0xf6f0, 0xe269, 0xf36f, 0xe0ea, 0x0, 0x1);
        gbc.writeMem(0x8040, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xfefb, gbc.sp());
        EXPECT(0x8042, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8040));
        EXPECT(0xdc, gbc.readMem(0x8041));
        // CB DC 0127
        gbc.setState(0x704a, 0xbc3b, 0xff10, 0xfb0e, 0x5283, 0x8469, 0x1, 0x0);
        gbc.writeMem(0x704a, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xbc3b, gbc.sp());
        EXPECT(0x704c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0129
        gbc.setState(0xc6ac, 0xee17, 0x4f10, 0x36df, 0x7c13, 0xf08f, 0x0, 0x0);
        gbc.writeMem(0xc6ac, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xee17, gbc.sp());
        EXPECT(0xc6ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6ac));
        EXPECT(0xdc, gbc.readMem(0xc6ad));
        // CB DC 012A
        gbc.setState(0x9800, 0x6b43, 0x7290, 0xb4c9, 0xc5bb, 0x12ef, 0x1, 0x0);
        gbc.writeMem(0x9800, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x6b43, gbc.sp());
        EXPECT(0x9802, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9800));
        EXPECT(0xdc, gbc.readMem(0x9801));
        // CB DC 012B
        gbc.setState(0xc674, 0x2d5d, 0x6210, 0xabb5, 0x7693, 0xc265, 0x1, 0x1);
        gbc.writeMem(0xc674, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x2d5d, gbc.sp());
        EXPECT(0xc676, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc674));
        EXPECT(0xdc, gbc.readMem(0xc675));
        // CB DC 012C
        gbc.setState(0xa248, 0xde4b, 0xd1f0, 0x8ff7, 0xa09, 0x2121, 0x0, 0x0);
        gbc.writeMem(0xa248, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xde4b, gbc.sp());
        EXPECT(0xa24a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa248));
        EXPECT(0xdc, gbc.readMem(0xa249));
        // CB DC 012D
        gbc.setState(0x865e, 0x29ed, 0x4d70, 0x8bc1, 0x3e85, 0xa029, 0x1, 0x1);
        gbc.writeMem(0x865e, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x29ed, gbc.sp());
        EXPECT(0x8660, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x865e));
        EXPECT(0xdc, gbc.readMem(0x865f));
        // CB DC 012E
        gbc.setState(0xc2f3, 0x2453, 0xcb40, 0x4452, 0x5e7b, 0x15f8, 0x1, 0x0);
        gbc.writeMem(0xc2f3, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x2453, gbc.sp());
        EXPECT(0xc2f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2f3));
        EXPECT(0xdc, gbc.readMem(0xc2f4));
        // CB DC 012F
        gbc.setState(0x5bd8, 0xf63, 0xcbe0, 0xc3ad, 0x9abd, 0xa87b, 0x1, 0x0);
        gbc.writeMem(0x5bd8, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xf63, gbc.sp());
        EXPECT(0x5bda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0130
        gbc.setState(0x904d, 0x701a, 0x4f60, 0x3c2, 0x9717, 0xcb1a, 0x1, 0x1);
        gbc.writeMem(0x904d, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x701a, gbc.sp());
        EXPECT(0x904f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x904d));
        EXPECT(0xdc, gbc.readMem(0x904e));
        // CB DC 0131
        gbc.setState(0x3a09, 0x9761, 0x7db0, 0x9444, 0x9c6a, 0x3a7d, 0x0, 0x0);
        gbc.writeMem(0x3a09, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x9761, gbc.sp());
        EXPECT(0x3a0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0133
        gbc.setState(0x4656, 0xd5db, 0xb200, 0x8c22, 0xc1dd, 0x712d, 0x1, 0x1);
        gbc.writeMem(0x4656, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xd5db, gbc.sp());
        EXPECT(0x4658, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0134
        gbc.setState(0x5d80, 0xc8aa, 0x99c0, 0xf939, 0x786c, 0x6317, 0x0, 0x0);
        gbc.writeMem(0x5d80, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xc8aa, gbc.sp());
        EXPECT(0x5d82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0136
        gbc.setState(0x86a, 0x618d, 0x410, 0x551b, 0xece9, 0xe30d, 0x1, 0x0);
        gbc.writeMem(0x86a, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x618d, gbc.sp());
        EXPECT(0x86c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0137
        gbc.setState(0x2158, 0xd36f, 0xe7d0, 0x63a2, 0x1128, 0x359a, 0x1, 0x1);
        gbc.writeMem(0x2158, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xd36f, gbc.sp());
        EXPECT(0x215a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0138
        gbc.setState(0x30ab, 0xb946, 0x5650, 0xacaa, 0xb414, 0x7e6e, 0x1, 0x1);
        gbc.writeMem(0x30ab, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xb946, gbc.sp());
        EXPECT(0x30ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0139
        gbc.setState(0x8b6d, 0xfb94, 0xaaf0, 0x10e4, 0x198e, 0x1c2, 0x0, 0x0);
        gbc.writeMem(0x8b6d, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xfb94, gbc.sp());
        EXPECT(0x8b6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b6d));
        EXPECT(0xdc, gbc.readMem(0x8b6e));
        // CB DC 013B
        gbc.setState(0x1a4c, 0x2ff3, 0x36b0, 0xca1a, 0x9f45, 0x5223, 0x1, 0x1);
        gbc.writeMem(0x1a4c, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x2ff3, gbc.sp());
        EXPECT(0x1a4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 013C
        gbc.setState(0x8d8a, 0x318e, 0x4570, 0x938f, 0x4831, 0xd6cb, 0x1, 0x0);
        gbc.writeMem(0x8d8a, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x318e, gbc.sp());
        EXPECT(0x8d8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d8a));
        EXPECT(0xdc, gbc.readMem(0x8d8b));
        // CB DC 013D
        gbc.setState(0x2ea9, 0x8e76, 0xff20, 0xf5bf, 0x9d3c, 0x6eba, 0x0, 0x1);
        gbc.writeMem(0x2ea9, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x8e76, gbc.sp());
        EXPECT(0x2eab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 013E
        gbc.setState(0xbc2d, 0x94ae, 0xeda0, 0xd692, 0x95aa, 0xd5fb, 0x1, 0x1);
        gbc.writeMem(0xbc2d, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x94ae, gbc.sp());
        EXPECT(0xbc2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc2d));
        EXPECT(0xdc, gbc.readMem(0xbc2e));
        // CB DC 013F
        gbc.setState(0x7df3, 0x54a8, 0x7380, 0xdfd0, 0x935a, 0x9c04, 0x1, 0x0);
        gbc.writeMem(0x7df3, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x54a8, gbc.sp());
        EXPECT(0x7df5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0140
        gbc.setState(0x73a5, 0x5127, 0x6010, 0x6201, 0xc576, 0x4a15, 0x0, 0x1);
        gbc.writeMem(0x73a5, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x5127, gbc.sp());
        EXPECT(0x73a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0141
        gbc.setState(0x5653, 0x4fe0, 0x8850, 0xed70, 0x385, 0x489d, 0x1, 0x0);
        gbc.writeMem(0x5653, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x4fe0, gbc.sp());
        EXPECT(0x5655, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0142
        gbc.setState(0x8e12, 0xbee9, 0xe320, 0x763, 0x95d8, 0xb250, 0x0, 0x0);
        gbc.writeMem(0x8e12, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xbee9, gbc.sp());
        EXPECT(0x8e14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e12));
        EXPECT(0xdc, gbc.readMem(0x8e13));
        // CB DC 0143
        gbc.setState(0xbfcd, 0xfede, 0x5830, 0x2204, 0x3f2d, 0xa005, 0x0, 0x1);
        gbc.writeMem(0xbfcd, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xfede, gbc.sp());
        EXPECT(0xbfcf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfcd));
        EXPECT(0xdc, gbc.readMem(0xbfce));
        // CB DC 0145
        gbc.setState(0x3f90, 0xe1d, 0xaeb0, 0x86ad, 0x6fe4, 0x5300, 0x1, 0x0);
        gbc.writeMem(0x3f90, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xe1d, gbc.sp());
        EXPECT(0x3f92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0146
        gbc.setState(0xb1a2, 0xda9a, 0xdf00, 0xca26, 0x270f, 0xfcc4, 0x0, 0x0);
        gbc.writeMem(0xb1a2, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xda9a, gbc.sp());
        EXPECT(0xb1a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1a2));
        EXPECT(0xdc, gbc.readMem(0xb1a3));
        // CB DC 0147
        gbc.setState(0x9937, 0x8277, 0xd20, 0x1be8, 0x9007, 0x8b8e, 0x0, 0x1);
        gbc.writeMem(0x9937, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x8277, gbc.sp());
        EXPECT(0x9939, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9937));
        EXPECT(0xdc, gbc.readMem(0x9938));
        // CB DC 0148
        gbc.setState(0x2559, 0xe1a6, 0xe780, 0xbfe8, 0xa9ee, 0xc12a, 0x1, 0x1);
        gbc.writeMem(0x2559, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xe1a6, gbc.sp());
        EXPECT(0x255b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0149
        gbc.setState(0x2970, 0xafec, 0xa4a0, 0xb9fc, 0x2451, 0x4b43, 0x0, 0x1);
        gbc.writeMem(0x2970, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xafec, gbc.sp());
        EXPECT(0x2972, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 014A
        gbc.setState(0xa0af, 0x9cfe, 0x1540, 0x8d66, 0x5344, 0xf48e, 0x0, 0x1);
        gbc.writeMem(0xa0af, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x9cfe, gbc.sp());
        EXPECT(0xa0b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0af));
        EXPECT(0xdc, gbc.readMem(0xa0b0));
        // CB DC 014B
        gbc.setState(0xb6bf, 0x5f04, 0x6a60, 0xdec, 0xdccb, 0x5126, 0x0, 0x0);
        gbc.writeMem(0xb6bf, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x5f04, gbc.sp());
        EXPECT(0xb6c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6bf));
        EXPECT(0xdc, gbc.readMem(0xb6c0));
        // CB DC 014C
        gbc.setState(0x9c2e, 0x334c, 0x1520, 0xe51, 0xfc28, 0x9b2, 0x0, 0x1);
        gbc.writeMem(0x9c2e, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x334c, gbc.sp());
        EXPECT(0x9c30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c2e));
        EXPECT(0xdc, gbc.readMem(0x9c2f));
        // CB DC 014D
        gbc.setState(0x96a0, 0x2148, 0x7160, 0x8646, 0xd1fc, 0x93c, 0x0, 0x0);
        gbc.writeMem(0x96a0, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x2148, gbc.sp());
        EXPECT(0x96a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96a0));
        EXPECT(0xdc, gbc.readMem(0x96a1));
        // CB DC 014E
        gbc.setState(0x562, 0xcd64, 0xa780, 0x43d6, 0x70aa, 0x1b85, 0x1, 0x0);
        gbc.writeMem(0x562, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xcd64, gbc.sp());
        EXPECT(0x564, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 014F
        gbc.setState(0x3974, 0xf93c, 0xeda0, 0xe4be, 0xea2d, 0x68e0, 0x0, 0x0);
        gbc.writeMem(0x3974, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xf93c, gbc.sp());
        EXPECT(0x3976, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0150
        gbc.setState(0x56ec, 0x89e8, 0xa810, 0xe950, 0x38cf, 0xebeb, 0x0, 0x0);
        gbc.writeMem(0x56ec, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x89e8, gbc.sp());
        EXPECT(0x56ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0151
        gbc.setState(0xb036, 0x7121, 0x6550, 0xf60a, 0xf527, 0xa722, 0x1, 0x0);
        gbc.writeMem(0xb036, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x7121, gbc.sp());
        EXPECT(0xb038, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb036));
        EXPECT(0xdc, gbc.readMem(0xb037));
        // CB DC 0152
        gbc.setState(0x8b32, 0xa3d1, 0xcfb0, 0xeb9d, 0x569a, 0x74ba, 0x0, 0x0);
        gbc.writeMem(0x8b32, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xa3d1, gbc.sp());
        EXPECT(0x8b34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b32));
        EXPECT(0xdc, gbc.readMem(0x8b33));
        // CB DC 0153
        gbc.setState(0xe355, 0x59e6, 0x9630, 0x12ac, 0xe676, 0x847e, 0x1, 0x0);
        gbc.writeMem(0xe355, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x59e6, gbc.sp());
        EXPECT(0xe357, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe355));
        EXPECT(0xdc, gbc.readMem(0xe356));
        // CB DC 0154
        gbc.setState(0x30f7, 0x2fdd, 0xf0f0, 0x74d2, 0x9104, 0x8130, 0x0, 0x0);
        gbc.writeMem(0x30f7, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x2fdd, gbc.sp());
        EXPECT(0x30f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0155
        gbc.setState(0x7371, 0x3088, 0xb280, 0xab29, 0x7711, 0x5c66, 0x0, 0x1);
        gbc.writeMem(0x7371, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x3088, gbc.sp());
        EXPECT(0x7373, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0156
        gbc.setState(0x56e2, 0x6cec, 0x4980, 0x392c, 0x37ee, 0x485c, 0x1, 0x0);
        gbc.writeMem(0x56e2, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x6cec, gbc.sp());
        EXPECT(0x56e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0157
        gbc.setState(0xeab, 0x3bc3, 0x7ba0, 0xa06f, 0x750c, 0x9710, 0x1, 0x0);
        gbc.writeMem(0xeab, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x3bc3, gbc.sp());
        EXPECT(0xead, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0158
        gbc.setState(0xd321, 0x61ed, 0x7d0, 0xf75d, 0xedc2, 0xa180, 0x1, 0x1);
        gbc.writeMem(0xd321, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x61ed, gbc.sp());
        EXPECT(0xd323, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd321));
        EXPECT(0xdc, gbc.readMem(0xd322));
        // CB DC 0159
        gbc.setState(0x9499, 0x4048, 0x9f70, 0x88ec, 0x24ab, 0x484d, 0x0, 0x0);
        gbc.writeMem(0x9499, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x4048, gbc.sp());
        EXPECT(0x949b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9499));
        EXPECT(0xdc, gbc.readMem(0x949a));
        // CB DC 015A
        gbc.setState(0x7fef, 0xf8ed, 0xf100, 0xad22, 0xea83, 0x4dc9, 0x0, 0x1);
        gbc.writeMem(0x7fef, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xf8ed, gbc.sp());
        EXPECT(0x7ff1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 015B
        gbc.setState(0x8562, 0x3548, 0x69d0, 0x73bc, 0xe753, 0xd11b, 0x1, 0x0);
        gbc.writeMem(0x8562, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x3548, gbc.sp());
        EXPECT(0x8564, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8562));
        EXPECT(0xdc, gbc.readMem(0x8563));
        // CB DC 015C
        gbc.setState(0x9b46, 0x377e, 0xee10, 0xe385, 0x8c24, 0x5d04, 0x0, 0x0);
        gbc.writeMem(0x9b46, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x377e, gbc.sp());
        EXPECT(0x9b48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b46));
        EXPECT(0xdc, gbc.readMem(0x9b47));
        // CB DC 015D
        gbc.setState(0xb45e, 0xf9b3, 0x8150, 0x7ef3, 0x95ea, 0xe3a0, 0x1, 0x1);
        gbc.writeMem(0xb45e, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xf9b3, gbc.sp());
        EXPECT(0xb460, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb45e));
        EXPECT(0xdc, gbc.readMem(0xb45f));
        // CB DC 015E
        gbc.setState(0xba98, 0xfbfa, 0x4420, 0x6f84, 0x9bfe, 0x96bf, 0x0, 0x1);
        gbc.writeMem(0xba98, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xfbfa, gbc.sp());
        EXPECT(0xba9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba98));
        EXPECT(0xdc, gbc.readMem(0xba99));
        // CB DC 015F
        gbc.setState(0xe854, 0x5039, 0x1080, 0x206a, 0x2820, 0xace8, 0x0, 0x1);
        gbc.writeMem(0xe854, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x5039, gbc.sp());
        EXPECT(0xe856, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe854));
        EXPECT(0xdc, gbc.readMem(0xe855));
        // CB DC 0160
        gbc.setState(0x1398, 0x6883, 0x6060, 0x8c3d, 0x4ab0, 0x4751, 0x1, 0x1);
        gbc.writeMem(0x1398, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x6883, gbc.sp());
        EXPECT(0x139a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0161
        gbc.setState(0xd32b, 0x24f1, 0xbc20, 0x1093, 0x7199, 0x5ef3, 0x0, 0x1);
        gbc.writeMem(0xd32b, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x24f1, gbc.sp());
        EXPECT(0xd32d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd32b));
        EXPECT(0xdc, gbc.readMem(0xd32c));
        // CB DC 0162
        gbc.setState(0xec9f, 0x7044, 0xd20, 0xa8ae, 0x366e, 0xc20, 0x1, 0x0);
        gbc.writeMem(0xec9f, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x7044, gbc.sp());
        EXPECT(0xeca1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec9f));
        EXPECT(0xdc, gbc.readMem(0xeca0));
        // CB DC 0163
        gbc.setState(0xe71b, 0x19cb, 0x98e0, 0xddcc, 0x6dc8, 0xb840, 0x0, 0x0);
        gbc.writeMem(0xe71b, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x19cb, gbc.sp());
        EXPECT(0xe71d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe71b));
        EXPECT(0xdc, gbc.readMem(0xe71c));
        // CB DC 0164
        gbc.setState(0x90d4, 0x6529, 0xec50, 0x28a2, 0xd3da, 0x9dd2, 0x1, 0x1);
        gbc.writeMem(0x90d4, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x6529, gbc.sp());
        EXPECT(0x90d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90d4));
        EXPECT(0xdc, gbc.readMem(0x90d5));
        // CB DC 0165
        gbc.setState(0x6940, 0x5dc6, 0xb500, 0xcd4e, 0x4f62, 0x9582, 0x1, 0x0);
        gbc.writeMem(0x6940, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x5dc6, gbc.sp());
        EXPECT(0x6942, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0166
        gbc.setState(0x6b7e, 0x5dac, 0x1d0, 0x3c, 0x22ea, 0xa526, 0x1, 0x0);
        gbc.writeMem(0x6b7e, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x5dac, gbc.sp());
        EXPECT(0x6b80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0167
        gbc.setState(0xe006, 0xc9ca, 0x8fc0, 0x6899, 0xa55a, 0x343d, 0x1, 0x1);
        gbc.writeMem(0xe006, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xc9ca, gbc.sp());
        EXPECT(0xe008, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe006));
        EXPECT(0xdc, gbc.readMem(0xe007));
        // CB DC 0168
        gbc.setState(0x8c79, 0x4d88, 0x5550, 0x9e24, 0xda0a, 0xe421, 0x1, 0x1);
        gbc.writeMem(0x8c79, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x4d88, gbc.sp());
        EXPECT(0x8c7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c79));
        EXPECT(0xdc, gbc.readMem(0x8c7a));
        // CB DC 0169
        gbc.setState(0x70b3, 0xd377, 0xb020, 0xc6bd, 0x8ce1, 0x1e31, 0x0, 0x1);
        gbc.writeMem(0x70b3, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xd377, gbc.sp());
        EXPECT(0x70b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 016B
        gbc.setState(0xb21b, 0x53a6, 0x180, 0xaf85, 0xc3ba, 0x549e, 0x1, 0x0);
        gbc.writeMem(0xb21b, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x53a6, gbc.sp());
        EXPECT(0xb21d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb21b));
        EXPECT(0xdc, gbc.readMem(0xb21c));
        // CB DC 016C
        gbc.setState(0x13d9, 0xf566, 0xba50, 0x756b, 0xf25f, 0xf372, 0x0, 0x1);
        gbc.writeMem(0x13d9, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xf566, gbc.sp());
        EXPECT(0x13db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 016E
        gbc.setState(0x6d20, 0x176b, 0x9eb0, 0xd9c0, 0xc170, 0x1c86, 0x0, 0x1);
        gbc.writeMem(0x6d20, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x176b, gbc.sp());
        EXPECT(0x6d22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 016F
        gbc.setState(0x4d02, 0x1a92, 0x79a0, 0xf5b3, 0xee40, 0x6861, 0x1, 0x1);
        gbc.writeMem(0x4d02, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x1a92, gbc.sp());
        EXPECT(0x4d04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0170
        gbc.setState(0x146b, 0x6a3f, 0x8a80, 0x2aeb, 0x3747, 0xb2ae, 0x0, 0x0);
        gbc.writeMem(0x146b, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x6a3f, gbc.sp());
        EXPECT(0x146d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0171
        gbc.setState(0x1932, 0x97e9, 0x61b0, 0x630e, 0xdd79, 0xdc2f, 0x1, 0x0);
        gbc.writeMem(0x1932, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x97e9, gbc.sp());
        EXPECT(0x1934, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0172
        gbc.setState(0x4cf0, 0xf8bb, 0x9ff0, 0x35fc, 0x13b4, 0x2cd7, 0x1, 0x0);
        gbc.writeMem(0x4cf0, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xf8bb, gbc.sp());
        EXPECT(0x4cf2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0173
        gbc.setState(0x979c, 0x4a90, 0x7e0, 0x38d7, 0x99, 0xfdca, 0x0, 0x0);
        gbc.writeMem(0x979c, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x4a90, gbc.sp());
        EXPECT(0x979e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x979c));
        EXPECT(0xdc, gbc.readMem(0x979d));
        // CB DC 0174
        gbc.setState(0xc07a, 0xe01, 0x9770, 0x7e6a, 0xbfc0, 0x1b01, 0x1, 0x1);
        gbc.writeMem(0xc07a, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xe01, gbc.sp());
        EXPECT(0xc07c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc07a));
        EXPECT(0xdc, gbc.readMem(0xc07b));
        // CB DC 0176
        gbc.setState(0x4603, 0x30b5, 0x7910, 0xe07f, 0xe7c5, 0x3b3a, 0x1, 0x1);
        gbc.writeMem(0x4603, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x30b5, gbc.sp());
        EXPECT(0x4605, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0177
        gbc.setState(0x54c2, 0x9c6, 0xecd0, 0x97a6, 0x98ba, 0xd32e, 0x1, 0x1);
        gbc.writeMem(0x54c2, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x9c6, gbc.sp());
        EXPECT(0x54c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0178
        gbc.setState(0x9d85, 0x35d2, 0xe520, 0xe119, 0x809c, 0xa6f8, 0x0, 0x0);
        gbc.writeMem(0x9d85, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x35d2, gbc.sp());
        EXPECT(0x9d87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d85));
        EXPECT(0xdc, gbc.readMem(0x9d86));
        // CB DC 0179
        gbc.setState(0xa79b, 0xcf18, 0x1d20, 0x9bae, 0xd112, 0xcd0a, 0x0, 0x1);
        gbc.writeMem(0xa79b, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xcf18, gbc.sp());
        EXPECT(0xa79d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa79b));
        EXPECT(0xdc, gbc.readMem(0xa79c));
        // CB DC 017A
        gbc.setState(0x4777, 0x5877, 0xc750, 0x43a4, 0x2170, 0x7f33, 0x0, 0x0);
        gbc.writeMem(0x4777, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x5877, gbc.sp());
        EXPECT(0x4779, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 017B
        gbc.setState(0xe83e, 0x8efd, 0x5e70, 0xae06, 0xdedc, 0x5364, 0x0, 0x0);
        gbc.writeMem(0xe83e, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x8efd, gbc.sp());
        EXPECT(0xe840, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe83e));
        EXPECT(0xdc, gbc.readMem(0xe83f));
        // CB DC 017C
        gbc.setState(0x3b8e, 0x7995, 0xc920, 0xf869, 0xee68, 0x1810, 0x0, 0x1);
        gbc.writeMem(0x3b8e, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x7995, gbc.sp());
        EXPECT(0x3b90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 017D
        gbc.setState(0xebd8, 0x9b08, 0xfe60, 0x6cc6, 0xc13e, 0xa900, 0x0, 0x0);
        gbc.writeMem(0xebd8, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x9b08, gbc.sp());
        EXPECT(0xebda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebd8));
        EXPECT(0xdc, gbc.readMem(0xebd9));
        // CB DC 017E
        gbc.setState(0x7565, 0xeaef, 0x3f70, 0xe557, 0xb57d, 0x9b38, 0x1, 0x1);
        gbc.writeMem(0x7565, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xeaef, gbc.sp());
        EXPECT(0x7567, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 017F
        gbc.setState(0xdf23, 0x3f5c, 0xa4e0, 0x7438, 0x5b64, 0xb548, 0x0, 0x0);
        gbc.writeMem(0xdf23, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x3f5c, gbc.sp());
        EXPECT(0xdf25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf23));
        EXPECT(0xdc, gbc.readMem(0xdf24));
        // CB DC 0180
        gbc.setState(0x2f39, 0x2bf9, 0xcf0, 0xc934, 0xd74d, 0xb5a0, 0x0, 0x0);
        gbc.writeMem(0x2f39, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x2bf9, gbc.sp());
        EXPECT(0x2f3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0181
        gbc.setState(0x209e, 0x42f0, 0x2a20, 0x1ac8, 0x87cd, 0x5465, 0x0, 0x0);
        gbc.writeMem(0x209e, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x42f0, gbc.sp());
        EXPECT(0x20a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0182
        gbc.setState(0x7859, 0xd92e, 0x2610, 0x3aea, 0x8e13, 0x2203, 0x0, 0x1);
        gbc.writeMem(0x7859, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xd92e, gbc.sp());
        EXPECT(0x785b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0184
        gbc.setState(0x91e9, 0xcad5, 0xd50, 0x3e06, 0xa642, 0xb936, 0x0, 0x0);
        gbc.writeMem(0x91e9, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xcad5, gbc.sp());
        EXPECT(0x91eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91e9));
        EXPECT(0xdc, gbc.readMem(0x91ea));
        // CB DC 0185
        gbc.setState(0x598c, 0x2cc6, 0x4f0, 0x3c14, 0x4030, 0x7813, 0x0, 0x1);
        gbc.writeMem(0x598c, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x2cc6, gbc.sp());
        EXPECT(0x598e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0186
        gbc.setState(0x9c36, 0xafb6, 0x210, 0x5a67, 0x7cb9, 0x1c68, 0x1, 0x1);
        gbc.writeMem(0x9c36, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xafb6, gbc.sp());
        EXPECT(0x9c38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c36));
        EXPECT(0xdc, gbc.readMem(0x9c37));
        // CB DC 0187
        gbc.setState(0x29f5, 0xd51e, 0x7cb0, 0x173, 0x11d5, 0x1725, 0x1, 0x0);
        gbc.writeMem(0x29f5, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xd51e, gbc.sp());
        EXPECT(0x29f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0188
        gbc.setState(0x94c6, 0x7ad, 0x70d0, 0xa844, 0x667c, 0x712, 0x1, 0x1);
        gbc.writeMem(0x94c6, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x7ad, gbc.sp());
        EXPECT(0x94c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94c6));
        EXPECT(0xdc, gbc.readMem(0x94c7));
        // CB DC 0189
        gbc.setState(0xdf32, 0xcfe4, 0x7530, 0x41d9, 0xc153, 0x30d2, 0x1, 0x0);
        gbc.writeMem(0xdf32, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xcfe4, gbc.sp());
        EXPECT(0xdf34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf32));
        EXPECT(0xdc, gbc.readMem(0xdf33));
        // CB DC 018A
        gbc.setState(0x6c8c, 0x54c, 0xbc90, 0xd49c, 0x64a0, 0x9ed1, 0x1, 0x0);
        gbc.writeMem(0x6c8c, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x54c, gbc.sp());
        EXPECT(0x6c8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 018B
        gbc.setState(0x9c98, 0x19e0, 0xe910, 0xcb3a, 0x743c, 0xfaa6, 0x0, 0x1);
        gbc.writeMem(0x9c98, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x19e0, gbc.sp());
        EXPECT(0x9c9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c98));
        EXPECT(0xdc, gbc.readMem(0x9c99));
        // CB DC 018C
        gbc.setState(0x63c, 0xfce5, 0xf6f0, 0x9c85, 0xf9a3, 0x91f7, 0x1, 0x0);
        gbc.writeMem(0x63c, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xfce5, gbc.sp());
        EXPECT(0x63e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 018D
        gbc.setState(0x16ea, 0xe07, 0xa2b0, 0xb2e1, 0x1a28, 0x3328, 0x0, 0x0);
        gbc.writeMem(0x16ea, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xe07, gbc.sp());
        EXPECT(0x16ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 018E
        gbc.setState(0xdbda, 0x2422, 0x1260, 0x3872, 0x2e49, 0x4ff6, 0x1, 0x1);
        gbc.writeMem(0xdbda, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x2422, gbc.sp());
        EXPECT(0xdbdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbda));
        EXPECT(0xdc, gbc.readMem(0xdbdb));
        // CB DC 018F
        gbc.setState(0x5e5a, 0xfc28, 0x5f80, 0x97f3, 0x9202, 0x5806, 0x1, 0x1);
        gbc.writeMem(0x5e5a, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xfc28, gbc.sp());
        EXPECT(0x5e5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0190
        gbc.setState(0x4d3d, 0x709a, 0x59d0, 0x2025, 0xa353, 0xacc9, 0x0, 0x0);
        gbc.writeMem(0x4d3d, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x709a, gbc.sp());
        EXPECT(0x4d3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0191
        gbc.setState(0xa684, 0x2aff, 0x80e0, 0x44dc, 0xe373, 0xe6be, 0x0, 0x0);
        gbc.writeMem(0xa684, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x2aff, gbc.sp());
        EXPECT(0xa686, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa684));
        EXPECT(0xdc, gbc.readMem(0xa685));
        // CB DC 0192
        gbc.setState(0x242b, 0x8914, 0xb750, 0x53c, 0x2600, 0xe2f6, 0x0, 0x0);
        gbc.writeMem(0x242b, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x8914, gbc.sp());
        EXPECT(0x242d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0193
        gbc.setState(0x5008, 0x57e2, 0x1b50, 0xfa1a, 0x4b91, 0xa22e, 0x0, 0x1);
        gbc.writeMem(0x5008, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x57e2, gbc.sp());
        EXPECT(0x500a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0194
        gbc.setState(0x8cc8, 0xbfd1, 0x93d0, 0xf8bc, 0xbf00, 0x8a28, 0x0, 0x1);
        gbc.writeMem(0x8cc8, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xbfd1, gbc.sp());
        EXPECT(0x8cca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cc8));
        EXPECT(0xdc, gbc.readMem(0x8cc9));
        // CB DC 0195
        gbc.setState(0x7400, 0x8206, 0xf1e0, 0x5e0b, 0xb622, 0x2157, 0x0, 0x0);
        gbc.writeMem(0x7400, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x8206, gbc.sp());
        EXPECT(0x7402, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0196
        gbc.setState(0xd482, 0xef38, 0xb230, 0x1939, 0xaf3d, 0xe34, 0x0, 0x1);
        gbc.writeMem(0xd482, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xef38, gbc.sp());
        EXPECT(0xd484, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd482));
        EXPECT(0xdc, gbc.readMem(0xd483));
        // CB DC 0197
        gbc.setState(0xa87f, 0xd3ef, 0x8ea0, 0x14f2, 0x3488, 0x3670, 0x1, 0x1);
        gbc.writeMem(0xa87f, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xd3ef, gbc.sp());
        EXPECT(0xa881, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa87f));
        EXPECT(0xdc, gbc.readMem(0xa880));
        // CB DC 0199
        gbc.setState(0x1ba1, 0xc6c5, 0xe730, 0xc1ce, 0xe5b2, 0xde86, 0x0, 0x1);
        gbc.writeMem(0x1ba1, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xc6c5, gbc.sp());
        EXPECT(0x1ba3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 019A
        gbc.setState(0xaa15, 0x8a7, 0xfa10, 0xf51e, 0xa62, 0x9600, 0x1, 0x1);
        gbc.writeMem(0xaa15, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x8a7, gbc.sp());
        EXPECT(0xaa17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa15));
        EXPECT(0xdc, gbc.readMem(0xaa16));
        // CB DC 019B
        gbc.setState(0xe74d, 0x6843, 0x94b0, 0xdac4, 0x907e, 0x4350, 0x0, 0x1);
        gbc.writeMem(0xe74d, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x6843, gbc.sp());
        EXPECT(0xe74f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe74d));
        EXPECT(0xdc, gbc.readMem(0xe74e));
        // CB DC 019C
        gbc.setState(0xab2b, 0xf4e3, 0x1b60, 0x2027, 0x6570, 0x51f5, 0x0, 0x0);
        gbc.writeMem(0xab2b, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xf4e3, gbc.sp());
        EXPECT(0xab2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab2b));
        EXPECT(0xdc, gbc.readMem(0xab2c));
        // CB DC 019D
        gbc.setState(0x794b, 0xa522, 0x9a50, 0xf57b, 0xdc06, 0x577a, 0x1, 0x0);
        gbc.writeMem(0x794b, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xa522, gbc.sp());
        EXPECT(0x794d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 019E
        gbc.setState(0x8ae7, 0xcb72, 0x13b0, 0xcc5c, 0x4aba, 0x36a5, 0x0, 0x1);
        gbc.writeMem(0x8ae7, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xcb72, gbc.sp());
        EXPECT(0x8ae9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ae7));
        EXPECT(0xdc, gbc.readMem(0x8ae8));
        // CB DC 019F
        gbc.setState(0x5f18, 0x34d6, 0x3800, 0xf98f, 0x67ab, 0x3faa, 0x1, 0x0);
        gbc.writeMem(0x5f18, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x34d6, gbc.sp());
        EXPECT(0x5f1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 01A0
        gbc.setState(0xbcb8, 0x87fd, 0x1090, 0xbbed, 0xef52, 0xacea, 0x0, 0x0);
        gbc.writeMem(0xbcb8, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x87fd, gbc.sp());
        EXPECT(0xbcba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcb8));
        EXPECT(0xdc, gbc.readMem(0xbcb9));
        // CB DC 01A1
        gbc.setState(0x3173, 0x3512, 0xdff0, 0x1ea7, 0xab62, 0xb78e, 0x0, 0x0);
        gbc.writeMem(0x3173, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x3512, gbc.sp());
        EXPECT(0x3175, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 01A2
        gbc.setState(0x8d17, 0xba27, 0xb9e0, 0x25e9, 0x53e0, 0x470e, 0x1, 0x1);
        gbc.writeMem(0x8d17, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xba27, gbc.sp());
        EXPECT(0x8d19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d17));
        EXPECT(0xdc, gbc.readMem(0x8d18));
        // CB DC 01A3
        gbc.setState(0xb9ac, 0xbcb5, 0xa230, 0x2b68, 0x7d5a, 0x2c74, 0x1, 0x1);
        gbc.writeMem(0xb9ac, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xbcb5, gbc.sp());
        EXPECT(0xb9ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9ac));
        EXPECT(0xdc, gbc.readMem(0xb9ad));
        // CB DC 01A4
        gbc.setState(0x110, 0xbecd, 0xc60, 0x547b, 0x3e76, 0x18a7, 0x0, 0x1);
        gbc.writeMem(0x110, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xbecd, gbc.sp());
        EXPECT(0x112, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 01A5
        gbc.setState(0x7885, 0xbfdf, 0x47d0, 0x1e0b, 0x4d9c, 0xfe05, 0x1, 0x0);
        gbc.writeMem(0x7885, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xbfdf, gbc.sp());
        EXPECT(0x7887, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 01A6
        gbc.setState(0xddd8, 0x5eee, 0x50, 0xa453, 0x911b, 0x6987, 0x0, 0x0);
        gbc.writeMem(0xddd8, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x5eee, gbc.sp());
        EXPECT(0xddda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddd8));
        EXPECT(0xdc, gbc.readMem(0xddd9));
        // CB DC 01A7
        gbc.setState(0xace1, 0x51b3, 0xdb0, 0x72ef, 0xf785, 0x68bb, 0x1, 0x1);
        gbc.writeMem(0xace1, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x51b3, gbc.sp());
        EXPECT(0xace3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xace1));
        EXPECT(0xdc, gbc.readMem(0xace2));
        // CB DC 01A8
        gbc.setState(0x21f4, 0xae6, 0xff10, 0x65e, 0x631e, 0x5582, 0x1, 0x0);
        gbc.writeMem(0x21f4, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xae6, gbc.sp());
        EXPECT(0x21f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 01A9
        gbc.setState(0x5b2f, 0x7e7a, 0xe520, 0xda8b, 0x57d1, 0x49b0, 0x1, 0x0);
        gbc.writeMem(0x5b2f, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x7e7a, gbc.sp());
        EXPECT(0x5b31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 01AA
        gbc.setState(0x3bb9, 0x728e, 0x3e20, 0xde89, 0x1e18, 0x87b3, 0x1, 0x1);
        gbc.writeMem(0x3bb9, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x728e, gbc.sp());
        EXPECT(0x3bbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 01AC
        gbc.setState(0x77b4, 0xd091, 0x46e0, 0x4426, 0x22f8, 0xa3ec, 0x0, 0x0);
        gbc.writeMem(0x77b4, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xd091, gbc.sp());
        EXPECT(0x77b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 01AD
        gbc.setState(0xad49, 0xceae, 0x69c0, 0x9ff1, 0x5324, 0xb8ac, 0x0, 0x1);
        gbc.writeMem(0xad49, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xceae, gbc.sp());
        EXPECT(0xad4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad49));
        EXPECT(0xdc, gbc.readMem(0xad4a));
        // CB DC 01AE
        gbc.setState(0x8aa9, 0x233d, 0xde00, 0x514e, 0x18e0, 0xb2c2, 0x0, 0x1);
        gbc.writeMem(0x8aa9, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x233d, gbc.sp());
        EXPECT(0x8aab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8aa9));
        EXPECT(0xdc, gbc.readMem(0x8aaa));
        // CB DC 01AF
        gbc.setState(0xe06d, 0xf880, 0xe240, 0xcb79, 0x2d2e, 0xf1f5, 0x0, 0x1);
        gbc.writeMem(0xe06d, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xf880, gbc.sp());
        EXPECT(0xe06f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe06d));
        EXPECT(0xdc, gbc.readMem(0xe06e));
        // CB DC 01B0
        gbc.setState(0x648, 0x397b, 0xc1e0, 0x2d9e, 0x58d, 0x5d14, 0x1, 0x0);
        gbc.writeMem(0x648, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x397b, gbc.sp());
        EXPECT(0x64a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 01B1
        gbc.setState(0xe30d, 0x2d9c, 0x1000, 0x4eee, 0x7e87, 0xcb47, 0x1, 0x0);
        gbc.writeMem(0xe30d, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x2d9c, gbc.sp());
        EXPECT(0xe30f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe30d));
        EXPECT(0xdc, gbc.readMem(0xe30e));
        // CB DC 01B2
        gbc.setState(0x879f, 0x4f03, 0x8dc0, 0x2dd2, 0xbc80, 0x371, 0x1, 0x1);
        gbc.writeMem(0x879f, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x4f03, gbc.sp());
        EXPECT(0x87a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x879f));
        EXPECT(0xdc, gbc.readMem(0x87a0));
        // CB DC 01B3
        gbc.setState(0x87dd, 0xfa3b, 0x42d0, 0x9d4c, 0x3c9f, 0xbca2, 0x1, 0x0);
        gbc.writeMem(0x87dd, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xfa3b, gbc.sp());
        EXPECT(0x87df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87dd));
        EXPECT(0xdc, gbc.readMem(0x87de));
        // CB DC 01B4
        gbc.setState(0xaa3a, 0x8707, 0x3f80, 0x4ddb, 0xe073, 0x880f, 0x0, 0x1);
        gbc.writeMem(0xaa3a, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x8707, gbc.sp());
        EXPECT(0xaa3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa3a));
        EXPECT(0xdc, gbc.readMem(0xaa3b));
        // CB DC 01B5
        gbc.setState(0x26bb, 0xde97, 0x1580, 0x6705, 0x370c, 0x2c9b, 0x0, 0x1);
        gbc.writeMem(0x26bb, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xde97, gbc.sp());
        EXPECT(0x26bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 01B6
        gbc.setState(0xae48, 0x24cb, 0xc120, 0xa502, 0x8222, 0x8c94, 0x0, 0x1);
        gbc.writeMem(0xae48, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x24cb, gbc.sp());
        EXPECT(0xae4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae48));
        EXPECT(0xdc, gbc.readMem(0xae49));
        // CB DC 01B7
        gbc.setState(0x6097, 0x4bee, 0xdc70, 0xfd1d, 0xb472, 0xe94b, 0x0, 0x1);
        gbc.writeMem(0x6097, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x4bee, gbc.sp());
        EXPECT(0x6099, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 01B8
        gbc.setState(0x6319, 0x888e, 0xed40, 0xc2c8, 0x20cf, 0x974b, 0x0, 0x0);
        gbc.writeMem(0x6319, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x888e, gbc.sp());
        EXPECT(0x631b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 01B9
        gbc.setState(0xe850, 0x8e06, 0xa9d0, 0x6b54, 0x4dbd, 0x7a90, 0x1, 0x1);
        gbc.writeMem(0xe850, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x8e06, gbc.sp());
        EXPECT(0xe852, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe850));
        EXPECT(0xdc, gbc.readMem(0xe851));
        // CB DC 01BA
        gbc.setState(0x8fee, 0x82e0, 0x9be0, 0xd8ca, 0x88a4, 0x8068, 0x1, 0x0);
        gbc.writeMem(0x8fee, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x82e0, gbc.sp());
        EXPECT(0x8ff0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fee));
        EXPECT(0xdc, gbc.readMem(0x8fef));
        // CB DC 01BB
        gbc.setState(0x1359, 0x9a6b, 0xced0, 0x3bb0, 0xdcd8, 0xf52d, 0x1, 0x1);
        gbc.writeMem(0x1359, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x9a6b, gbc.sp());
        EXPECT(0x135b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 01BC
        gbc.setState(0x7224, 0xe51e, 0xf180, 0xac49, 0x59be, 0xe336, 0x0, 0x1);
        gbc.writeMem(0x7224, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xe51e, gbc.sp());
        EXPECT(0x7226, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 01BD
        gbc.setState(0x2a0e, 0x3f23, 0xfbd0, 0x2bd8, 0xe007, 0x6597, 0x1, 0x1);
        gbc.writeMem(0x2a0e, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x3f23, gbc.sp());
        EXPECT(0x2a10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 01BE
        gbc.setState(0x4ada, 0x876d, 0x5eb0, 0x20dc, 0xdd1c, 0x2ace, 0x1, 0x0);
        gbc.writeMem(0x4ada, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x876d, gbc.sp());
        EXPECT(0x4adc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 01C0
        gbc.setState(0x4eb4, 0xf0d2, 0xae10, 0xdd2d, 0x2, 0x1944, 0x0, 0x1);
        gbc.writeMem(0x4eb4, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xf0d2, gbc.sp());
        EXPECT(0x4eb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 01C1
        gbc.setState(0xd079, 0x7345, 0x63f0, 0x20b0, 0x6268, 0xdf41, 0x1, 0x0);
        gbc.writeMem(0xd079, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x7345, gbc.sp());
        EXPECT(0xd07b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd079));
        EXPECT(0xdc, gbc.readMem(0xd07a));
        // CB DC 01C2
        gbc.setState(0x80a1, 0x6833, 0x6ce0, 0x176f, 0xe79f, 0xde59, 0x0, 0x1);
        gbc.writeMem(0x80a1, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x6833, gbc.sp());
        EXPECT(0x80a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80a1));
        EXPECT(0xdc, gbc.readMem(0x80a2));
        // CB DC 01C3
        gbc.setState(0x39a4, 0xd6d1, 0xcd00, 0x92ce, 0x9b96, 0xdae, 0x0, 0x0);
        gbc.writeMem(0x39a4, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xd6d1, gbc.sp());
        EXPECT(0x39a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 01C4
        gbc.setState(0x86fa, 0x420d, 0x8b30, 0x823e, 0x4b52, 0xe1b3, 0x0, 0x1);
        gbc.writeMem(0x86fa, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x420d, gbc.sp());
        EXPECT(0x86fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86fa));
        EXPECT(0xdc, gbc.readMem(0x86fb));
        // CB DC 01C5
        gbc.setState(0x19e5, 0x6973, 0xe4e0, 0xcb47, 0x683, 0xd489, 0x1, 0x1);
        gbc.writeMem(0x19e5, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x6973, gbc.sp());
        EXPECT(0x19e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 01C6
        gbc.setState(0x344a, 0x7476, 0x3870, 0xf7c0, 0xc0d, 0xdd7d, 0x0, 0x1);
        gbc.writeMem(0x344a, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x7476, gbc.sp());
        EXPECT(0x344c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 01C7
        gbc.setState(0x9b0f, 0xdd52, 0xd7e0, 0x1d47, 0x40bd, 0x373d, 0x1, 0x1);
        gbc.writeMem(0x9b0f, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xdd52, gbc.sp());
        EXPECT(0x9b11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b0f));
        EXPECT(0xdc, gbc.readMem(0x9b10));
        // CB DC 01C8
        gbc.setState(0x42c1, 0xafff, 0x5720, 0x4437, 0x1583, 0xd657, 0x1, 0x0);
        gbc.writeMem(0x42c1, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xafff, gbc.sp());
        EXPECT(0x42c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 01C9
        gbc.setState(0x9d33, 0x8aec, 0xf380, 0x523d, 0x6615, 0xe7cd, 0x1, 0x0);
        gbc.writeMem(0x9d33, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x8aec, gbc.sp());
        EXPECT(0x9d35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d33));
        EXPECT(0xdc, gbc.readMem(0x9d34));
        // CB DC 01CA
        gbc.setState(0x7e5b, 0x136f, 0x4450, 0x5b9f, 0x4a21, 0x8b1e, 0x1, 0x1);
        gbc.writeMem(0x7e5b, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x136f, gbc.sp());
        EXPECT(0x7e5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 01CB
        gbc.setState(0x58b4, 0xe986, 0x48b0, 0x1a41, 0x8fbc, 0x62f4, 0x0, 0x0);
        gbc.writeMem(0x58b4, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xe986, gbc.sp());
        EXPECT(0x58b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 01CC
        gbc.setState(0x369f, 0x161a, 0x5440, 0xe7fe, 0x1afe, 0xe56b, 0x1, 0x1);
        gbc.writeMem(0x369f, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x161a, gbc.sp());
        EXPECT(0x36a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 01CD
        gbc.setState(0x47cb, 0x1efe, 0x720, 0xd376, 0xe58f, 0x6790, 0x1, 0x0);
        gbc.writeMem(0x47cb, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x1efe, gbc.sp());
        EXPECT(0x47cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 01CE
        gbc.setState(0xebcd, 0x13c3, 0x1870, 0x895c, 0x9e82, 0x1233, 0x1, 0x1);
        gbc.writeMem(0xebcd, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x13c3, gbc.sp());
        EXPECT(0xebcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebcd));
        EXPECT(0xdc, gbc.readMem(0xebce));
        // CB DC 01CF
        gbc.setState(0xd2da, 0xec87, 0x4a90, 0x8070, 0xcb5d, 0xdb28, 0x0, 0x1);
        gbc.writeMem(0xd2da, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xec87, gbc.sp());
        EXPECT(0xd2dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2da));
        EXPECT(0xdc, gbc.readMem(0xd2db));
        // CB DC 01D0
        gbc.setState(0x97ca, 0x1fc8, 0xa790, 0x5574, 0x913b, 0x389d, 0x1, 0x0);
        gbc.writeMem(0x97ca, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x1fc8, gbc.sp());
        EXPECT(0x97cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97ca));
        EXPECT(0xdc, gbc.readMem(0x97cb));
        // CB DC 01D1
        gbc.setState(0xaa9, 0x4322, 0x67c0, 0xb747, 0x78fb, 0x56cb, 0x0, 0x0);
        gbc.writeMem(0xaa9, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x4322, gbc.sp());
        EXPECT(0xaab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 01D2
        gbc.setState(0xcf51, 0x899b, 0xd4d0, 0x7a71, 0x8394, 0x4a10, 0x1, 0x1);
        gbc.writeMem(0xcf51, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x899b, gbc.sp());
        EXPECT(0xcf53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf51));
        EXPECT(0xdc, gbc.readMem(0xcf52));
        // CB DC 01D3
        gbc.setState(0x4165, 0x5b2f, 0x8620, 0xc473, 0x6472, 0xbedc, 0x0, 0x1);
        gbc.writeMem(0x4165, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x5b2f, gbc.sp());
        EXPECT(0x4167, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 01D4
        gbc.setState(0x44c, 0x6e5a, 0x9ff0, 0x8ad5, 0xc3d0, 0x38d6, 0x1, 0x0);
        gbc.writeMem(0x44c, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x6e5a, gbc.sp());
        EXPECT(0x44e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 01D5
        gbc.setState(0x824, 0xa15c, 0xd4c0, 0x9e0e, 0xaa74, 0xb735, 0x1, 0x1);
        gbc.writeMem(0x824, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xa15c, gbc.sp());
        EXPECT(0x826, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 01D7
        gbc.setState(0xe55e, 0x6e4c, 0xa4f0, 0x4f14, 0xfde4, 0xe89c, 0x0, 0x0);
        gbc.writeMem(0xe55e, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x6e4c, gbc.sp());
        EXPECT(0xe560, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe55e));
        EXPECT(0xdc, gbc.readMem(0xe55f));
        // CB DC 01D8
        gbc.setState(0x5177, 0xcbad, 0xac40, 0x423d, 0x7071, 0x6c47, 0x0, 0x0);
        gbc.writeMem(0x5177, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xcbad, gbc.sp());
        EXPECT(0x5179, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 01D9
        gbc.setState(0xbca9, 0x2fff, 0x4b60, 0xc822, 0xa3f5, 0x113, 0x0, 0x1);
        gbc.writeMem(0xbca9, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x2fff, gbc.sp());
        EXPECT(0xbcab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbca9));
        EXPECT(0xdc, gbc.readMem(0xbcaa));
        // CB DC 01DA
        gbc.setState(0x55e9, 0x5afc, 0x8ff0, 0x964a, 0x1374, 0x3f1f, 0x1, 0x1);
        gbc.writeMem(0x55e9, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x5afc, gbc.sp());
        EXPECT(0x55eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 01DB
        gbc.setState(0x1afa, 0x22e0, 0x7ab0, 0xf27d, 0xca0a, 0x65bd, 0x1, 0x0);
        gbc.writeMem(0x1afa, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x22e0, gbc.sp());
        EXPECT(0x1afc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 01DC
        gbc.setState(0xce20, 0x9b6e, 0x3dc0, 0x70c, 0x5498, 0x2559, 0x0, 0x0);
        gbc.writeMem(0xce20, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x9b6e, gbc.sp());
        EXPECT(0xce22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce20));
        EXPECT(0xdc, gbc.readMem(0xce21));
        // CB DC 01DD
        gbc.setState(0x4f3a, 0x49e7, 0x7e40, 0x17a6, 0x192f, 0xb7c8, 0x1, 0x0);
        gbc.writeMem(0x4f3a, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x49e7, gbc.sp());
        EXPECT(0x4f3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 01DE
        gbc.setState(0x828c, 0xcb86, 0xf310, 0xd1a0, 0xbb4e, 0xb2f, 0x0, 0x1);
        gbc.writeMem(0x828c, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xcb86, gbc.sp());
        EXPECT(0x828e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x828c));
        EXPECT(0xdc, gbc.readMem(0x828d));
        // CB DC 01DF
        gbc.setState(0x5092, 0x85b4, 0x6590, 0x3a59, 0xe53a, 0xaa10, 0x1, 0x0);
        gbc.writeMem(0x5092, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x85b4, gbc.sp());
        EXPECT(0x5094, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 01E0
        gbc.setState(0x2e89, 0x4a09, 0x8570, 0x9a92, 0xd876, 0x5e4b, 0x1, 0x1);
        gbc.writeMem(0x2e89, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x4a09, gbc.sp());
        EXPECT(0x2e8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 01E1
        gbc.setState(0x6e2e, 0x896e, 0x6090, 0x966d, 0x602f, 0xaacc, 0x1, 0x1);
        gbc.writeMem(0x6e2e, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x896e, gbc.sp());
        EXPECT(0x6e30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 01E2
        gbc.setState(0x3f4c, 0x6b69, 0x9e50, 0x55f4, 0x2c76, 0xb8bf, 0x0, 0x1);
        gbc.writeMem(0x3f4c, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x6b69, gbc.sp());
        EXPECT(0x3f4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 01E3
        gbc.setState(0x9a6e, 0x45ad, 0x2480, 0x22a6, 0xe8e, 0x5fbd, 0x0, 0x0);
        gbc.writeMem(0x9a6e, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x45ad, gbc.sp());
        EXPECT(0x9a70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a6e));
        EXPECT(0xdc, gbc.readMem(0x9a6f));
        // CB DC 01E4
        gbc.setState(0x2927, 0xffe0, 0x40, 0x4647, 0x86b8, 0x4efe, 0x0, 0x0);
        gbc.writeMem(0x2927, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xffe0, gbc.sp());
        EXPECT(0x2929, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 01E6
        gbc.setState(0xb951, 0x167d, 0xd790, 0xd3f2, 0x325e, 0x7cdf, 0x0, 0x1);
        gbc.writeMem(0xb951, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x167d, gbc.sp());
        EXPECT(0xb953, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb951));
        EXPECT(0xdc, gbc.readMem(0xb952));
        // CB DC 01E7
        gbc.setState(0x9eae, 0x2d79, 0xae50, 0x43e6, 0xa621, 0x819a, 0x1, 0x0);
        gbc.writeMem(0x9eae, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x2d79, gbc.sp());
        EXPECT(0x9eb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9eae));
        EXPECT(0xdc, gbc.readMem(0x9eaf));
        // CB DC 01E8
        gbc.setState(0x15fd, 0xb419, 0xff70, 0xa7be, 0x7b99, 0x6c5, 0x1, 0x0);
        gbc.writeMem(0x15fd, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xb419, gbc.sp());
        EXPECT(0x15ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 01E9
        gbc.setState(0xa0ae, 0x5117, 0xc1e0, 0xd99f, 0x11c3, 0x34d5, 0x1, 0x1);
        gbc.writeMem(0xa0ae, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x5117, gbc.sp());
        EXPECT(0xa0b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0ae));
        EXPECT(0xdc, gbc.readMem(0xa0af));
        // CB DC 01EA
        gbc.setState(0x29c, 0xde50, 0x8890, 0x83d, 0x5631, 0x8407, 0x1, 0x1);
        gbc.writeMem(0x29c, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xde50, gbc.sp());
        EXPECT(0x29e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 01EB
        gbc.setState(0x442a, 0x69ea, 0xe9c0, 0x17f5, 0xa047, 0x787f, 0x1, 0x0);
        gbc.writeMem(0x442a, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x69ea, gbc.sp());
        EXPECT(0x442c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 01EC
        gbc.setState(0x5a0a, 0x7894, 0xe7a0, 0xd6e6, 0x3549, 0x1b68, 0x1, 0x1);
        gbc.writeMem(0x5a0a, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x7894, gbc.sp());
        EXPECT(0x5a0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 01ED
        gbc.setState(0x4b71, 0x71fe, 0xf5b0, 0x1ec6, 0xd91e, 0x726a, 0x0, 0x1);
        gbc.writeMem(0x4b71, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x71fe, gbc.sp());
        EXPECT(0x4b73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 01EE
        gbc.setState(0x3313, 0x7128, 0xfd60, 0x72ed, 0x692d, 0x71ab, 0x0, 0x1);
        gbc.writeMem(0x3313, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x7128, gbc.sp());
        EXPECT(0x3315, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 01EF
        gbc.setState(0x7cfe, 0x29fe, 0x8390, 0xc669, 0xf829, 0x3e03, 0x0, 0x1);
        gbc.writeMem(0x7cfe, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x29fe, gbc.sp());
        EXPECT(0x7d00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 01F0
        gbc.setState(0x7fd1, 0xc76d, 0xb240, 0xcae1, 0xc4dd, 0x9a73, 0x0, 0x1);
        gbc.writeMem(0x7fd1, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xc76d, gbc.sp());
        EXPECT(0x7fd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 01F1
        gbc.setState(0xee0f, 0xdd7e, 0x1830, 0x6926, 0x36dd, 0xcd94, 0x0, 0x0);
        gbc.writeMem(0xee0f, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xdd7e, gbc.sp());
        EXPECT(0xee11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee0f));
        EXPECT(0xdc, gbc.readMem(0xee10));
        // CB DC 01F2
        gbc.setState(0x583d, 0x9ed, 0xe320, 0xc511, 0x2871, 0x9bc4, 0x1, 0x0);
        gbc.writeMem(0x583d, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x9ed, gbc.sp());
        EXPECT(0x583f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 01F3
        gbc.setState(0x2278, 0x1fd9, 0x4fb0, 0x7e0b, 0x90c8, 0xdb30, 0x0, 0x0);
        gbc.writeMem(0x2278, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x1fd9, gbc.sp());
        EXPECT(0x227a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 01F4
        gbc.setState(0xa9a7, 0x18b1, 0x4a10, 0xd372, 0xfa2c, 0xe7a0, 0x0, 0x1);
        gbc.writeMem(0xa9a7, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x18b1, gbc.sp());
        EXPECT(0xa9a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9a7));
        EXPECT(0xdc, gbc.readMem(0xa9a8));
        // CB DC 01F5
        gbc.setState(0x275f, 0x7ab5, 0xcc40, 0xc359, 0xd398, 0x3ef6, 0x1, 0x1);
        gbc.writeMem(0x275f, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x7ab5, gbc.sp());
        EXPECT(0x2761, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 01F6
        gbc.setState(0x50af, 0x3eb8, 0x61d0, 0xd237, 0x79eb, 0x488, 0x0, 0x1);
        gbc.writeMem(0x50af, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x3eb8, gbc.sp());
        EXPECT(0x50b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 01F7
        gbc.setState(0x1781, 0xb9b3, 0x38d0, 0xcda0, 0x80ef, 0xfb16, 0x0, 0x0);
        gbc.writeMem(0x1781, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xb9b3, gbc.sp());
        EXPECT(0x1783, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 01F9
        gbc.setState(0x2ba0, 0x9f5e, 0x2350, 0x954, 0x3622, 0x888e, 0x0, 0x1);
        gbc.writeMem(0x2ba0, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x9f5e, gbc.sp());
        EXPECT(0x2ba2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 01FA
        gbc.setState(0x76a5, 0x7f87, 0x1dd0, 0xac5a, 0x5bc9, 0x5bd5, 0x0, 0x0);
        gbc.writeMem(0x76a5, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x7f87, gbc.sp());
        EXPECT(0x76a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 01FB
        gbc.setState(0x93e7, 0x43eb, 0xbbe0, 0xeda6, 0x4c5b, 0x3c6e, 0x1, 0x0);
        gbc.writeMem(0x93e7, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x43eb, gbc.sp());
        EXPECT(0x93e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93e7));
        EXPECT(0xdc, gbc.readMem(0x93e8));
        // CB DC 01FC
        gbc.setState(0x7a87, 0x9162, 0xa3d0, 0xcea9, 0x3460, 0xef81, 0x0, 0x0);
        gbc.writeMem(0x7a87, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x9162, gbc.sp());
        EXPECT(0x7a89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 01FD
        gbc.setState(0x2568, 0x6a7b, 0x3d50, 0xbb4c, 0x37aa, 0x2cbf, 0x0, 0x1);
        gbc.writeMem(0x2568, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x6a7b, gbc.sp());
        EXPECT(0x256a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 01FE
        gbc.setState(0x1499, 0x697c, 0x33c0, 0xef1e, 0xde04, 0x5e8b, 0x0, 0x1);
        gbc.writeMem(0x1499, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x697c, gbc.sp());
        EXPECT(0x149b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0200
        gbc.setState(0xda34, 0xc789, 0x1a20, 0x93, 0x71c5, 0x349, 0x1, 0x1);
        gbc.writeMem(0xda34, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xc789, gbc.sp());
        EXPECT(0xda36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda34));
        EXPECT(0xdc, gbc.readMem(0xda35));
        // CB DC 0201
        gbc.setState(0x5cdd, 0xd041, 0xdbe0, 0x27bf, 0x8d17, 0xb00e, 0x1, 0x0);
        gbc.writeMem(0x5cdd, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xd041, gbc.sp());
        EXPECT(0x5cdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0202
        gbc.setState(0x9f05, 0x23c5, 0x9a10, 0x82ac, 0xa618, 0x3f40, 0x1, 0x1);
        gbc.writeMem(0x9f05, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x23c5, gbc.sp());
        EXPECT(0x9f07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f05));
        EXPECT(0xdc, gbc.readMem(0x9f06));
        // CB DC 0203
        gbc.setState(0x770b, 0x6fa2, 0x2e60, 0x6a1, 0xc402, 0x3d26, 0x0, 0x1);
        gbc.writeMem(0x770b, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x6fa2, gbc.sp());
        EXPECT(0x770d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0204
        gbc.setState(0x1228, 0xaa07, 0xe0c0, 0x8ef0, 0x833, 0x78eb, 0x0, 0x0);
        gbc.writeMem(0x1228, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xaa07, gbc.sp());
        EXPECT(0x122a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0205
        gbc.setState(0x6913, 0xf7ff, 0x40e0, 0x9f4c, 0x3699, 0x283e, 0x0, 0x1);
        gbc.writeMem(0x6913, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xf7ff, gbc.sp());
        EXPECT(0x6915, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0206
        gbc.setState(0x9505, 0x5e92, 0x6090, 0xf18a, 0x6202, 0xa58, 0x1, 0x1);
        gbc.writeMem(0x9505, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x5e92, gbc.sp());
        EXPECT(0x9507, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9505));
        EXPECT(0xdc, gbc.readMem(0x9506));
        // CB DC 0207
        gbc.setState(0x941a, 0x5e86, 0x5a90, 0x11ed, 0x1f92, 0xa7, 0x0, 0x0);
        gbc.writeMem(0x941a, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x5e86, gbc.sp());
        EXPECT(0x941c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x941a));
        EXPECT(0xdc, gbc.readMem(0x941b));
        // CB DC 0208
        gbc.setState(0xba55, 0xbc99, 0x76a0, 0x2ac0, 0xc172, 0x24f9, 0x0, 0x1);
        gbc.writeMem(0xba55, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xbc99, gbc.sp());
        EXPECT(0xba57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba55));
        EXPECT(0xdc, gbc.readMem(0xba56));
        // CB DC 0209
        gbc.setState(0x3f69, 0x8a9f, 0xc6b0, 0x7187, 0x7b54, 0x204a, 0x0, 0x1);
        gbc.writeMem(0x3f69, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x8a9f, gbc.sp());
        EXPECT(0x3f6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 020A
        gbc.setState(0xb02d, 0x24dc, 0x1f80, 0xdd1a, 0xe538, 0xf7d4, 0x1, 0x0);
        gbc.writeMem(0xb02d, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x24dc, gbc.sp());
        EXPECT(0xb02f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb02d));
        EXPECT(0xdc, gbc.readMem(0xb02e));
        // CB DC 020B
        gbc.setState(0x1429, 0x1bfb, 0x2050, 0x553d, 0xd091, 0xffba, 0x1, 0x0);
        gbc.writeMem(0x1429, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x1bfb, gbc.sp());
        EXPECT(0x142b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 020C
        gbc.setState(0x12c5, 0xe3fc, 0x7670, 0x20cd, 0x5e3f, 0xc638, 0x1, 0x0);
        gbc.writeMem(0x12c5, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xe3fc, gbc.sp());
        EXPECT(0x12c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 020D
        gbc.setState(0xe251, 0xfd71, 0x5520, 0xcbc7, 0x7eef, 0x499f, 0x0, 0x0);
        gbc.writeMem(0xe251, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xfd71, gbc.sp());
        EXPECT(0xe253, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe251));
        EXPECT(0xdc, gbc.readMem(0xe252));
        // CB DC 020E
        gbc.setState(0xb001, 0xfde5, 0x49f0, 0x8f1b, 0x1fce, 0x2b70, 0x1, 0x1);
        gbc.writeMem(0xb001, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xfde5, gbc.sp());
        EXPECT(0xb003, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb001));
        EXPECT(0xdc, gbc.readMem(0xb002));
        // CB DC 020F
        gbc.setState(0x2d51, 0xf691, 0x4610, 0x137e, 0x3c4b, 0x339, 0x1, 0x1);
        gbc.writeMem(0x2d51, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xf691, gbc.sp());
        EXPECT(0x2d53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0210
        gbc.setState(0x2124, 0xbdaa, 0xc160, 0x2a5a, 0xe0d2, 0x8f02, 0x0, 0x0);
        gbc.writeMem(0x2124, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xbdaa, gbc.sp());
        EXPECT(0x2126, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0211
        gbc.setState(0xd09b, 0xcbc4, 0xb540, 0xd6aa, 0xd10c, 0xcb80, 0x1, 0x1);
        gbc.writeMem(0xd09b, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xcbc4, gbc.sp());
        EXPECT(0xd09d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd09b));
        EXPECT(0xdc, gbc.readMem(0xd09c));
        // CB DC 0212
        gbc.setState(0x437c, 0x13bd, 0xa100, 0xa9b3, 0xed64, 0x1e55, 0x0, 0x1);
        gbc.writeMem(0x437c, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x13bd, gbc.sp());
        EXPECT(0x437e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0213
        gbc.setState(0x13c6, 0xa719, 0x7b10, 0x2537, 0x3662, 0x7463, 0x1, 0x0);
        gbc.writeMem(0x13c6, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xa719, gbc.sp());
        EXPECT(0x13c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0214
        gbc.setState(0x9c73, 0xc844, 0xf2a0, 0x5cd6, 0x1435, 0x2285, 0x0, 0x1);
        gbc.writeMem(0x9c73, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xc844, gbc.sp());
        EXPECT(0x9c75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c73));
        EXPECT(0xdc, gbc.readMem(0x9c74));
        // CB DC 0215
        gbc.setState(0x10d2, 0x92a0, 0xc650, 0x3564, 0x6f4b, 0x299d, 0x1, 0x1);
        gbc.writeMem(0x10d2, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x92a0, gbc.sp());
        EXPECT(0x10d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0216
        gbc.setState(0x8102, 0xbb50, 0x5d90, 0x3800, 0x9c09, 0xff80, 0x1, 0x1);
        gbc.writeMem(0x8102, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xbb50, gbc.sp());
        EXPECT(0x8104, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8102));
        EXPECT(0xdc, gbc.readMem(0x8103));
        // CB DC 0217
        gbc.setState(0x5448, 0xffb0, 0x5ba0, 0xfff0, 0x34b4, 0x80d7, 0x0, 0x0);
        gbc.writeMem(0x5448, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xffb0, gbc.sp());
        EXPECT(0x544a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0218
        gbc.setState(0xe059, 0x50f2, 0xea00, 0xb81b, 0x3ad9, 0xc477, 0x1, 0x1);
        gbc.writeMem(0xe059, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x50f2, gbc.sp());
        EXPECT(0xe05b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe059));
        EXPECT(0xdc, gbc.readMem(0xe05a));
        // CB DC 0219
        gbc.setState(0xc8dd, 0xf368, 0x49c0, 0xf82c, 0x201, 0x84ea, 0x0, 0x0);
        gbc.writeMem(0xc8dd, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xf368, gbc.sp());
        EXPECT(0xc8df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8dd));
        EXPECT(0xdc, gbc.readMem(0xc8de));
        // CB DC 021A
        gbc.setState(0xca7c, 0x682c, 0x5870, 0xb58a, 0x79c4, 0x2ee3, 0x0, 0x0);
        gbc.writeMem(0xca7c, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x682c, gbc.sp());
        EXPECT(0xca7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca7c));
        EXPECT(0xdc, gbc.readMem(0xca7d));
        // CB DC 021B
        gbc.setState(0x7821, 0xa6ac, 0xdbd0, 0x3abf, 0xe513, 0x9b75, 0x0, 0x0);
        gbc.writeMem(0x7821, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xa6ac, gbc.sp());
        EXPECT(0x7823, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 021C
        gbc.setState(0xb257, 0x6b91, 0xa880, 0xf343, 0xf8fe, 0xefb8, 0x0, 0x1);
        gbc.writeMem(0xb257, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x6b91, gbc.sp());
        EXPECT(0xb259, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb257));
        EXPECT(0xdc, gbc.readMem(0xb258));
        // CB DC 021D
        gbc.setState(0x7b52, 0x1316, 0xcd90, 0xc692, 0x87d4, 0x9780, 0x1, 0x0);
        gbc.writeMem(0x7b52, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x1316, gbc.sp());
        EXPECT(0x7b54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 021E
        gbc.setState(0x17c4, 0x3628, 0x750, 0x11aa, 0xa06a, 0xf2bd, 0x0, 0x0);
        gbc.writeMem(0x17c4, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x3628, gbc.sp());
        EXPECT(0x17c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 021F
        gbc.setState(0x7324, 0xa139, 0x3a70, 0x85d3, 0xb95c, 0x8211, 0x1, 0x1);
        gbc.writeMem(0x7324, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xa139, gbc.sp());
        EXPECT(0x7326, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0220
        gbc.setState(0x55b7, 0xf05e, 0x8080, 0xdaf2, 0xa29e, 0x4691, 0x1, 0x0);
        gbc.writeMem(0x55b7, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xf05e, gbc.sp());
        EXPECT(0x55b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0221
        gbc.setState(0xde83, 0x3702, 0xaec0, 0x3a71, 0x5bc9, 0xa019, 0x1, 0x1);
        gbc.writeMem(0xde83, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x3702, gbc.sp());
        EXPECT(0xde85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde83));
        EXPECT(0xdc, gbc.readMem(0xde84));
        // CB DC 0222
        gbc.setState(0x5d51, 0x8af, 0x3910, 0xba0b, 0x409, 0xa5b, 0x1, 0x1);
        gbc.writeMem(0x5d51, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x8af, gbc.sp());
        EXPECT(0x5d53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0224
        gbc.setState(0xdb15, 0xdf0, 0x7410, 0x3a8e, 0x573f, 0x16d9, 0x1, 0x1);
        gbc.writeMem(0xdb15, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xdf0, gbc.sp());
        EXPECT(0xdb17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb15));
        EXPECT(0xdc, gbc.readMem(0xdb16));
        // CB DC 0225
        gbc.setState(0xe2ac, 0x1b14, 0xa9b0, 0xcf27, 0xd194, 0x9435, 0x1, 0x0);
        gbc.writeMem(0xe2ac, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x1b14, gbc.sp());
        EXPECT(0xe2ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2ac));
        EXPECT(0xdc, gbc.readMem(0xe2ad));
        // CB DC 0226
        gbc.setState(0x3aea, 0xe1c2, 0x380, 0x9c41, 0x8f2d, 0x9885, 0x1, 0x1);
        gbc.writeMem(0x3aea, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xe1c2, gbc.sp());
        EXPECT(0x3aec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0227
        gbc.setState(0xae5b, 0xe542, 0x5e70, 0x2687, 0x1b35, 0xf927, 0x0, 0x1);
        gbc.writeMem(0xae5b, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xe542, gbc.sp());
        EXPECT(0xae5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae5b));
        EXPECT(0xdc, gbc.readMem(0xae5c));
        // CB DC 0228
        gbc.setState(0xb36e, 0x6b50, 0x9d10, 0x651, 0x38d5, 0x45c2, 0x1, 0x1);
        gbc.writeMem(0xb36e, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x6b50, gbc.sp());
        EXPECT(0xb370, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb36e));
        EXPECT(0xdc, gbc.readMem(0xb36f));
        // CB DC 0229
        gbc.setState(0x47b, 0x6e6d, 0x24b0, 0x24cf, 0x2d1d, 0x55fc, 0x1, 0x1);
        gbc.writeMem(0x47b, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x6e6d, gbc.sp());
        EXPECT(0x47d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 022A
        gbc.setState(0x5ef0, 0x5ef8, 0x870, 0x64d1, 0x2463, 0x318c, 0x1, 0x0);
        gbc.writeMem(0x5ef0, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x5ef8, gbc.sp());
        EXPECT(0x5ef2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 022B
        gbc.setState(0x4d, 0x949d, 0x1c00, 0xbc0e, 0x7399, 0x7caa, 0x0, 0x1);
        gbc.writeMem(0x4d, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x949d, gbc.sp());
        EXPECT(0x4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 022C
        gbc.setState(0xec73, 0xed63, 0x6f90, 0x30, 0xd40a, 0x950, 0x1, 0x0);
        gbc.writeMem(0xec73, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xed63, gbc.sp());
        EXPECT(0xec75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec73));
        EXPECT(0xdc, gbc.readMem(0xec74));
        // CB DC 022D
        gbc.setState(0xd991, 0xa664, 0x95d0, 0xffbb, 0x4aae, 0xa2ff, 0x0, 0x1);
        gbc.writeMem(0xd991, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xa664, gbc.sp());
        EXPECT(0xd993, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd991));
        EXPECT(0xdc, gbc.readMem(0xd992));
        // CB DC 022E
        gbc.setState(0x7e4f, 0xd55f, 0x7b60, 0x5022, 0xe3c2, 0xec01, 0x1, 0x1);
        gbc.writeMem(0x7e4f, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xd55f, gbc.sp());
        EXPECT(0x7e51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 022F
        gbc.setState(0x86ef, 0xefd3, 0xc330, 0xefbd, 0xbc7e, 0x400c, 0x1, 0x1);
        gbc.writeMem(0x86ef, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xefd3, gbc.sp());
        EXPECT(0x86f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86ef));
        EXPECT(0xdc, gbc.readMem(0x86f0));
        // CB DC 0230
        gbc.setState(0x6c6, 0xe7ac, 0x3fd0, 0x16a8, 0x8b7d, 0x7288, 0x1, 0x0);
        gbc.writeMem(0x6c6, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xe7ac, gbc.sp());
        EXPECT(0x6c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0231
        gbc.setState(0xa628, 0x70c6, 0x2a70, 0x12ee, 0xff7a, 0xc892, 0x0, 0x0);
        gbc.writeMem(0xa628, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x70c6, gbc.sp());
        EXPECT(0xa62a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa628));
        EXPECT(0xdc, gbc.readMem(0xa629));
        // CB DC 0232
        gbc.setState(0x67fd, 0xb817, 0xd280, 0xc139, 0x41ee, 0x9952, 0x0, 0x0);
        gbc.writeMem(0x67fd, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xb817, gbc.sp());
        EXPECT(0x67ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0233
        gbc.setState(0x2d50, 0xf1bd, 0xefa0, 0xcc6, 0x113, 0x5c77, 0x0, 0x0);
        gbc.writeMem(0x2d50, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xf1bd, gbc.sp());
        EXPECT(0x2d52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0234
        gbc.setState(0x9e5c, 0x8787, 0x82c0, 0x2a45, 0xbdde, 0x3ca7, 0x1, 0x0);
        gbc.writeMem(0x9e5c, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x8787, gbc.sp());
        EXPECT(0x9e5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e5c));
        EXPECT(0xdc, gbc.readMem(0x9e5d));
        // CB DC 0235
        gbc.setState(0x3cf3, 0x99fa, 0x5ca0, 0xc80e, 0x9cef, 0xa02a, 0x0, 0x0);
        gbc.writeMem(0x3cf3, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x99fa, gbc.sp());
        EXPECT(0x3cf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0236
        gbc.setState(0x5988, 0x8c96, 0x6770, 0x8575, 0x2df2, 0x48c2, 0x0, 0x0);
        gbc.writeMem(0x5988, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x8c96, gbc.sp());
        EXPECT(0x598a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0237
        gbc.setState(0xe5f7, 0xabb2, 0xf4d0, 0xe4e0, 0x9936, 0x89c7, 0x0, 0x1);
        gbc.writeMem(0xe5f7, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xabb2, gbc.sp());
        EXPECT(0xe5f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5f7));
        EXPECT(0xdc, gbc.readMem(0xe5f8));
        // CB DC 0238
        gbc.setState(0x93b1, 0x66f4, 0x1600, 0xdd31, 0xe2ea, 0x1ee8, 0x1, 0x0);
        gbc.writeMem(0x93b1, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x66f4, gbc.sp());
        EXPECT(0x93b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93b1));
        EXPECT(0xdc, gbc.readMem(0x93b2));
        // CB DC 0239
        gbc.setState(0xe476, 0x8b02, 0x2e0, 0x8cd7, 0x37ec, 0xdb51, 0x0, 0x0);
        gbc.writeMem(0xe476, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x8b02, gbc.sp());
        EXPECT(0xe478, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe476));
        EXPECT(0xdc, gbc.readMem(0xe477));
        // CB DC 023A
        gbc.setState(0xc7f4, 0xc672, 0x5aa0, 0x812c, 0x5a8a, 0x962f, 0x1, 0x0);
        gbc.writeMem(0xc7f4, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xc672, gbc.sp());
        EXPECT(0xc7f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7f4));
        EXPECT(0xdc, gbc.readMem(0xc7f5));
        // CB DC 023B
        gbc.setState(0x1d04, 0xe848, 0x9ab0, 0xbfaa, 0x1731, 0x3b6c, 0x0, 0x0);
        gbc.writeMem(0x1d04, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xe848, gbc.sp());
        EXPECT(0x1d06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 023C
        gbc.setState(0x959e, 0x62dd, 0xa360, 0xfcf3, 0x987c, 0x3ac5, 0x1, 0x0);
        gbc.writeMem(0x959e, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x62dd, gbc.sp());
        EXPECT(0x95a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x959e));
        EXPECT(0xdc, gbc.readMem(0x959f));
        // CB DC 023D
        gbc.setState(0x723, 0xf4c4, 0x1e90, 0xe4f0, 0xedd9, 0x8f0c, 0x1, 0x1);
        gbc.writeMem(0x723, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xf4c4, gbc.sp());
        EXPECT(0x725, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 023E
        gbc.setState(0x357b, 0xbdbe, 0xc240, 0x1e5, 0x22b3, 0x48f3, 0x0, 0x0);
        gbc.writeMem(0x357b, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xbdbe, gbc.sp());
        EXPECT(0x357d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 023F
        gbc.setState(0xa7aa, 0x656a, 0x3a50, 0xab22, 0x8778, 0xac12, 0x0, 0x1);
        gbc.writeMem(0xa7aa, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x656a, gbc.sp());
        EXPECT(0xa7ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7aa));
        EXPECT(0xdc, gbc.readMem(0xa7ab));
        // CB DC 0240
        gbc.setState(0x6399, 0xfe2a, 0x5ee0, 0x4f35, 0x6d4c, 0xd71, 0x1, 0x0);
        gbc.writeMem(0x6399, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xfe2a, gbc.sp());
        EXPECT(0x639b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0241
        gbc.setState(0x6c5e, 0x22d7, 0xcff0, 0x492a, 0x34a9, 0x95d1, 0x1, 0x0);
        gbc.writeMem(0x6c5e, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x22d7, gbc.sp());
        EXPECT(0x6c60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0242
        gbc.setState(0x31a9, 0xa298, 0x72e0, 0xd253, 0x2cd5, 0x506a, 0x0, 0x0);
        gbc.writeMem(0x31a9, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xa298, gbc.sp());
        EXPECT(0x31ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0243
        gbc.setState(0x9e85, 0x86d1, 0x1160, 0x7a53, 0x7683, 0x2707, 0x1, 0x0);
        gbc.writeMem(0x9e85, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x86d1, gbc.sp());
        EXPECT(0x9e87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e85));
        EXPECT(0xdc, gbc.readMem(0x9e86));
        // CB DC 0244
        gbc.setState(0x816f, 0x5a10, 0xa010, 0x5f2f, 0xa892, 0x1dae, 0x0, 0x1);
        gbc.writeMem(0x816f, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x5a10, gbc.sp());
        EXPECT(0x8171, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x816f));
        EXPECT(0xdc, gbc.readMem(0x8170));
        // CB DC 0245
        gbc.setState(0x1ae8, 0x780d, 0x82a0, 0x973c, 0xe4e5, 0xbe57, 0x1, 0x1);
        gbc.writeMem(0x1ae8, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x780d, gbc.sp());
        EXPECT(0x1aea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0246
        gbc.setState(0xa943, 0x4abc, 0xa380, 0x3e06, 0x7070, 0xe179, 0x1, 0x1);
        gbc.writeMem(0xa943, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x4abc, gbc.sp());
        EXPECT(0xa945, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa943));
        EXPECT(0xdc, gbc.readMem(0xa944));
        // CB DC 0247
        gbc.setState(0x96dc, 0x2a20, 0x1480, 0xbc50, 0x774, 0x3aa6, 0x0, 0x1);
        gbc.writeMem(0x96dc, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x2a20, gbc.sp());
        EXPECT(0x96de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96dc));
        EXPECT(0xdc, gbc.readMem(0x96dd));
        // CB DC 0248
        gbc.setState(0x4058, 0x950e, 0x4940, 0x6fbb, 0x2a00, 0xd787, 0x1, 0x0);
        gbc.writeMem(0x4058, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x950e, gbc.sp());
        EXPECT(0x405a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0249
        gbc.setState(0xe960, 0x7bf0, 0x16d0, 0x15e9, 0x9c6a, 0x9be3, 0x0, 0x0);
        gbc.writeMem(0xe960, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x7bf0, gbc.sp());
        EXPECT(0xe962, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe960));
        EXPECT(0xdc, gbc.readMem(0xe961));
        // CB DC 024A
        gbc.setState(0xdd19, 0x7b05, 0x75c0, 0xd8ba, 0x6aea, 0x2629, 0x0, 0x0);
        gbc.writeMem(0xdd19, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x7b05, gbc.sp());
        EXPECT(0xdd1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd19));
        EXPECT(0xdc, gbc.readMem(0xdd1a));
        // CB DC 024B
        gbc.setState(0xe0a9, 0x5bc3, 0x63b0, 0xeb00, 0x35d2, 0xff82, 0x0, 0x0);
        gbc.writeMem(0xe0a9, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x5bc3, gbc.sp());
        EXPECT(0xe0ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0a9));
        EXPECT(0xdc, gbc.readMem(0xe0aa));
        // CB DC 024C
        gbc.setState(0x1096, 0x3c3d, 0xfc10, 0x1b4c, 0x45e4, 0xa4c2, 0x0, 0x0);
        gbc.writeMem(0x1096, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x3c3d, gbc.sp());
        EXPECT(0x1098, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 024D
        gbc.setState(0xb971, 0x95ab, 0xdf40, 0x90c2, 0x6945, 0xb86f, 0x0, 0x1);
        gbc.writeMem(0xb971, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x95ab, gbc.sp());
        EXPECT(0xb973, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb971));
        EXPECT(0xdc, gbc.readMem(0xb972));
        // CB DC 024F
        gbc.setState(0x8310, 0xc87e, 0xd050, 0x1511, 0xa4ac, 0x12eb, 0x1, 0x0);
        gbc.writeMem(0x8310, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xc87e, gbc.sp());
        EXPECT(0x8312, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8310));
        EXPECT(0xdc, gbc.readMem(0x8311));
        // CB DC 0250
        gbc.setState(0x707c, 0xbcd1, 0xd870, 0xd8e6, 0xa4be, 0x1f47, 0x0, 0x0);
        gbc.writeMem(0x707c, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xbcd1, gbc.sp());
        EXPECT(0x707e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0251
        gbc.setState(0x5825, 0x6979, 0x5ed0, 0x82a5, 0x7e01, 0xa625, 0x0, 0x1);
        gbc.writeMem(0x5825, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x6979, gbc.sp());
        EXPECT(0x5827, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0252
        gbc.setState(0x118a, 0x8d36, 0x8540, 0x352c, 0xaa0a, 0x54a6, 0x1, 0x1);
        gbc.writeMem(0x118a, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x8d36, gbc.sp());
        EXPECT(0x118c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0253
        gbc.setState(0xa953, 0x4029, 0xeda0, 0x4b8a, 0xb59b, 0x898a, 0x1, 0x1);
        gbc.writeMem(0xa953, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x4029, gbc.sp());
        EXPECT(0xa955, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa953));
        EXPECT(0xdc, gbc.readMem(0xa954));
        // CB DC 0254
        gbc.setState(0xa5f7, 0xc6b5, 0x75f0, 0xac14, 0x7e0d, 0xe275, 0x1, 0x1);
        gbc.writeMem(0xa5f7, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xc6b5, gbc.sp());
        EXPECT(0xa5f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5f7));
        EXPECT(0xdc, gbc.readMem(0xa5f8));
        // CB DC 0255
        gbc.setState(0xe771, 0x9957, 0x9f0, 0x7bb5, 0x7b, 0xed42, 0x1, 0x1);
        gbc.writeMem(0xe771, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x9957, gbc.sp());
        EXPECT(0xe773, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe771));
        EXPECT(0xdc, gbc.readMem(0xe772));
        // CB DC 0256
        gbc.setState(0x34d0, 0x4360, 0x21d0, 0x3676, 0x7603, 0x464d, 0x1, 0x0);
        gbc.writeMem(0x34d0, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x4360, gbc.sp());
        EXPECT(0x34d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0257
        gbc.setState(0x58eb, 0xe8c3, 0xa9e0, 0x7ab0, 0xa1df, 0x1daa, 0x1, 0x0);
        gbc.writeMem(0x58eb, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xe8c3, gbc.sp());
        EXPECT(0x58ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0258
        gbc.setState(0x365, 0xa604, 0x6f20, 0x74f6, 0xc04e, 0xfef1, 0x1, 0x0);
        gbc.writeMem(0x365, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xa604, gbc.sp());
        EXPECT(0x367, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0259
        gbc.setState(0x7953, 0x412a, 0xcf30, 0x2de6, 0x354e, 0xec90, 0x0, 0x0);
        gbc.writeMem(0x7953, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x412a, gbc.sp());
        EXPECT(0x7955, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 025B
        gbc.setState(0xd2f9, 0x1ddd, 0x20a0, 0xf2f0, 0x1a8e, 0x12e4, 0x0, 0x0);
        gbc.writeMem(0xd2f9, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x1ddd, gbc.sp());
        EXPECT(0xd2fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2f9));
        EXPECT(0xdc, gbc.readMem(0xd2fa));
        // CB DC 025C
        gbc.setState(0xc79c, 0x2702, 0x6f40, 0xa87b, 0x3a6a, 0x4f79, 0x0, 0x0);
        gbc.writeMem(0xc79c, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x2702, gbc.sp());
        EXPECT(0xc79e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc79c));
        EXPECT(0xdc, gbc.readMem(0xc79d));
        // CB DC 025D
        gbc.setState(0xa016, 0x932a, 0xf050, 0x9c5f, 0x8162, 0x10a3, 0x1, 0x1);
        gbc.writeMem(0xa016, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x932a, gbc.sp());
        EXPECT(0xa018, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa016));
        EXPECT(0xdc, gbc.readMem(0xa017));
        // CB DC 025E
        gbc.setState(0x2e8b, 0xa673, 0xef20, 0xd1d, 0x315, 0xe570, 0x0, 0x0);
        gbc.writeMem(0x2e8b, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xa673, gbc.sp());
        EXPECT(0x2e8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 025F
        gbc.setState(0x61d5, 0x11cb, 0x1cf0, 0x9e8d, 0x45f8, 0xc9f7, 0x1, 0x1);
        gbc.writeMem(0x61d5, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x11cb, gbc.sp());
        EXPECT(0x61d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0260
        gbc.setState(0xead6, 0xba43, 0xc3c0, 0xaa9f, 0x8aac, 0x896b, 0x0, 0x1);
        gbc.writeMem(0xead6, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xba43, gbc.sp());
        EXPECT(0xead8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xead6));
        EXPECT(0xdc, gbc.readMem(0xead7));
        // CB DC 0261
        gbc.setState(0xaf2, 0x53d2, 0x6a00, 0x40a5, 0x25b5, 0x4621, 0x0, 0x0);
        gbc.writeMem(0xaf2, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x53d2, gbc.sp());
        EXPECT(0xaf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0262
        gbc.setState(0xa322, 0x4d0, 0x1360, 0x7551, 0x3ba8, 0x315e, 0x1, 0x1);
        gbc.writeMem(0xa322, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x4d0, gbc.sp());
        EXPECT(0xa324, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa322));
        EXPECT(0xdc, gbc.readMem(0xa323));
        // CB DC 0263
        gbc.setState(0x650d, 0x2a2, 0xd420, 0x1ecf, 0xf592, 0xe64c, 0x1, 0x0);
        gbc.writeMem(0x650d, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x2a2, gbc.sp());
        EXPECT(0x650f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0264
        gbc.setState(0xbcaf, 0xcd78, 0x36d0, 0x174c, 0xf76b, 0xb640, 0x0, 0x0);
        gbc.writeMem(0xbcaf, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xcd78, gbc.sp());
        EXPECT(0xbcb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcaf));
        EXPECT(0xdc, gbc.readMem(0xbcb0));
        // CB DC 0265
        gbc.setState(0xe436, 0x3cf4, 0x1bf0, 0x7d18, 0x2e46, 0x600d, 0x0, 0x1);
        gbc.writeMem(0xe436, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x3cf4, gbc.sp());
        EXPECT(0xe438, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe436));
        EXPECT(0xdc, gbc.readMem(0xe437));
        // CB DC 0266
        gbc.setState(0x26b8, 0xf175, 0x9dc0, 0x3e3f, 0x2c27, 0xd59a, 0x0, 0x0);
        gbc.writeMem(0x26b8, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xf175, gbc.sp());
        EXPECT(0x26ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0267
        gbc.setState(0xb3f, 0x558d, 0xbb90, 0xae4d, 0x1242, 0x3628, 0x1, 0x0);
        gbc.writeMem(0xb3f, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x558d, gbc.sp());
        EXPECT(0xb41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0268
        gbc.setState(0xb24f, 0x9815, 0xd870, 0x8005, 0xd688, 0xdb12, 0x1, 0x0);
        gbc.writeMem(0xb24f, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x9815, gbc.sp());
        EXPECT(0xb251, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb24f));
        EXPECT(0xdc, gbc.readMem(0xb250));
        // CB DC 0269
        gbc.setState(0x8076, 0x21d2, 0x3f0, 0xf4b2, 0xe53b, 0x2b8e, 0x1, 0x0);
        gbc.writeMem(0x8076, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x21d2, gbc.sp());
        EXPECT(0x8078, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8076));
        EXPECT(0xdc, gbc.readMem(0x8077));
        // CB DC 026A
        gbc.setState(0xc106, 0xedbe, 0x2130, 0xb999, 0xe89f, 0xb732, 0x0, 0x0);
        gbc.writeMem(0xc106, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xedbe, gbc.sp());
        EXPECT(0xc108, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc106));
        EXPECT(0xdc, gbc.readMem(0xc107));
        // CB DC 026C
        gbc.setState(0x8ae0, 0x9c04, 0x6d80, 0x3333, 0x43be, 0xc0d5, 0x0, 0x0);
        gbc.writeMem(0x8ae0, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x9c04, gbc.sp());
        EXPECT(0x8ae2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ae0));
        EXPECT(0xdc, gbc.readMem(0x8ae1));
        // CB DC 026D
        gbc.setState(0x61ad, 0xbc8a, 0x2ef0, 0xb4a8, 0xd68a, 0xb888, 0x0, 0x1);
        gbc.writeMem(0x61ad, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xbc8a, gbc.sp());
        EXPECT(0x61af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 026E
        gbc.setState(0x5bba, 0xe2e0, 0xfa10, 0x5c2e, 0x884a, 0xb212, 0x1, 0x0);
        gbc.writeMem(0x5bba, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xe2e0, gbc.sp());
        EXPECT(0x5bbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 026F
        gbc.setState(0x151e, 0x2071, 0x50c0, 0xc11, 0x43f, 0xb93e, 0x0, 0x1);
        gbc.writeMem(0x151e, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x2071, gbc.sp());
        EXPECT(0x1520, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0270
        gbc.setState(0xa658, 0xbffc, 0x3940, 0xcf30, 0x50e0, 0x4d6a, 0x1, 0x0);
        gbc.writeMem(0xa658, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xbffc, gbc.sp());
        EXPECT(0xa65a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa658));
        EXPECT(0xdc, gbc.readMem(0xa659));
        // CB DC 0271
        gbc.setState(0xbcde, 0x45a1, 0x2640, 0x694b, 0xd97f, 0x2b04, 0x1, 0x1);
        gbc.writeMem(0xbcde, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x45a1, gbc.sp());
        EXPECT(0xbce0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcde));
        EXPECT(0xdc, gbc.readMem(0xbcdf));
        // CB DC 0272
        gbc.setState(0x3950, 0xa796, 0x2810, 0xa295, 0x395a, 0x33, 0x0, 0x0);
        gbc.writeMem(0x3950, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xa796, gbc.sp());
        EXPECT(0x3952, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0273
        gbc.setState(0xcd13, 0xb0cb, 0x5c00, 0x20dc, 0x829, 0xdabe, 0x1, 0x1);
        gbc.writeMem(0xcd13, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xb0cb, gbc.sp());
        EXPECT(0xcd15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd13));
        EXPECT(0xdc, gbc.readMem(0xcd14));
        // CB DC 0274
        gbc.setState(0x7138, 0xa88e, 0xce70, 0xd81, 0xd123, 0x5abd, 0x1, 0x0);
        gbc.writeMem(0x7138, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xa88e, gbc.sp());
        EXPECT(0x713a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0275
        gbc.setState(0x9f56, 0x4fe6, 0x5a50, 0x4dc3, 0x885f, 0x73b3, 0x1, 0x0);
        gbc.writeMem(0x9f56, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x4fe6, gbc.sp());
        EXPECT(0x9f58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f56));
        EXPECT(0xdc, gbc.readMem(0x9f57));
        // CB DC 0276
        gbc.setState(0x189b, 0x5a0b, 0x74e0, 0x92f1, 0x3371, 0x78f9, 0x0, 0x1);
        gbc.writeMem(0x189b, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x5a0b, gbc.sp());
        EXPECT(0x189d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0277
        gbc.setState(0x8047, 0xabf8, 0x95d0, 0xf784, 0xb93c, 0xce0b, 0x0, 0x1);
        gbc.writeMem(0x8047, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xabf8, gbc.sp());
        EXPECT(0x8049, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8047));
        EXPECT(0xdc, gbc.readMem(0x8048));
        // CB DC 0278
        gbc.setState(0xbd4f, 0x749b, 0x6b60, 0xcc61, 0xc096, 0xc74b, 0x1, 0x0);
        gbc.writeMem(0xbd4f, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x749b, gbc.sp());
        EXPECT(0xbd51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd4f));
        EXPECT(0xdc, gbc.readMem(0xbd50));
        // CB DC 0279
        gbc.setState(0x88ab, 0x4fed, 0x9fc0, 0x1196, 0xc131, 0x871, 0x1, 0x1);
        gbc.writeMem(0x88ab, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x4fed, gbc.sp());
        EXPECT(0x88ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88ab));
        EXPECT(0xdc, gbc.readMem(0x88ac));
        // CB DC 027A
        gbc.setState(0xe6d1, 0xeff9, 0x9ef0, 0xf8a0, 0xbc34, 0xbff2, 0x0, 0x0);
        gbc.writeMem(0xe6d1, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xeff9, gbc.sp());
        EXPECT(0xe6d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6d1));
        EXPECT(0xdc, gbc.readMem(0xe6d2));
        // CB DC 027B
        gbc.setState(0x77b1, 0xe527, 0x2ad0, 0x58cd, 0x2272, 0xbba4, 0x1, 0x0);
        gbc.writeMem(0x77b1, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xe527, gbc.sp());
        EXPECT(0x77b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 027C
        gbc.setState(0xe102, 0x19fa, 0xde90, 0xa328, 0xdc96, 0xc182, 0x0, 0x0);
        gbc.writeMem(0xe102, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x19fa, gbc.sp());
        EXPECT(0xe104, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe102));
        EXPECT(0xdc, gbc.readMem(0xe103));
        // CB DC 027D
        gbc.setState(0x3f9c, 0x451d, 0xe760, 0xf52f, 0xf073, 0xf141, 0x1, 0x1);
        gbc.writeMem(0x3f9c, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x451d, gbc.sp());
        EXPECT(0x3f9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 027E
        gbc.setState(0xacd4, 0xefe0, 0xbc40, 0x961, 0x95e8, 0x6525, 0x1, 0x0);
        gbc.writeMem(0xacd4, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xefe0, gbc.sp());
        EXPECT(0xacd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacd4));
        EXPECT(0xdc, gbc.readMem(0xacd5));
        // CB DC 027F
        gbc.setState(0x6478, 0xe2ae, 0xffd0, 0x6662, 0x3ed, 0x691c, 0x0, 0x0);
        gbc.writeMem(0x6478, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xe2ae, gbc.sp());
        EXPECT(0x647a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0280
        gbc.setState(0x2313, 0xc624, 0xf440, 0x4123, 0x7073, 0x94d9, 0x1, 0x0);
        gbc.writeMem(0x2313, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xc624, gbc.sp());
        EXPECT(0x2315, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0281
        gbc.setState(0x7bc2, 0x2cda, 0x7ad0, 0x6c1f, 0x8853, 0x682a, 0x1, 0x0);
        gbc.writeMem(0x7bc2, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x2cda, gbc.sp());
        EXPECT(0x7bc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0282
        gbc.setState(0x3fb8, 0xdf2c, 0x6100, 0xd14c, 0x477c, 0x162, 0x0, 0x1);
        gbc.writeMem(0x3fb8, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xdf2c, gbc.sp());
        EXPECT(0x3fba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0283
        gbc.setState(0x1069, 0xfc65, 0x58a0, 0x5373, 0x323e, 0x6ec9, 0x0, 0x1);
        gbc.writeMem(0x1069, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xfc65, gbc.sp());
        EXPECT(0x106b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0284
        gbc.setState(0xc68e, 0x951c, 0xaa90, 0x9b41, 0x2230, 0x9167, 0x0, 0x0);
        gbc.writeMem(0xc68e, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x951c, gbc.sp());
        EXPECT(0xc690, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc68e));
        EXPECT(0xdc, gbc.readMem(0xc68f));
        // CB DC 0285
        gbc.setState(0xb36e, 0xddba, 0xced0, 0xfa1e, 0xb316, 0x86ab, 0x0, 0x1);
        gbc.writeMem(0xb36e, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xddba, gbc.sp());
        EXPECT(0xb370, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb36e));
        EXPECT(0xdc, gbc.readMem(0xb36f));
        // CB DC 0286
        gbc.setState(0xe76e, 0xfaf5, 0x6ec0, 0xacf0, 0x55d2, 0x282c, 0x0, 0x1);
        gbc.writeMem(0xe76e, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xfaf5, gbc.sp());
        EXPECT(0xe770, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe76e));
        EXPECT(0xdc, gbc.readMem(0xe76f));
        // CB DC 0287
        gbc.setState(0x4a00, 0x7e07, 0x9c10, 0xb21, 0x565a, 0xdbb5, 0x0, 0x0);
        gbc.writeMem(0x4a00, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x7e07, gbc.sp());
        EXPECT(0x4a02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0288
        gbc.setState(0x9c62, 0x5253, 0x6120, 0x8b4f, 0xc193, 0x2dfd, 0x1, 0x1);
        gbc.writeMem(0x9c62, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x5253, gbc.sp());
        EXPECT(0x9c64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c62));
        EXPECT(0xdc, gbc.readMem(0x9c63));
        // CB DC 0289
        gbc.setState(0x418b, 0x1eba, 0x7530, 0x4e, 0x4016, 0x8df3, 0x1, 0x1);
        gbc.writeMem(0x418b, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x1eba, gbc.sp());
        EXPECT(0x418d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 028B
        gbc.setState(0x51e4, 0x99cf, 0xe980, 0x4500, 0x48d8, 0xf811, 0x1, 0x1);
        gbc.writeMem(0x51e4, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x99cf, gbc.sp());
        EXPECT(0x51e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 028C
        gbc.setState(0x5e3d, 0xff85, 0xadf0, 0xf43, 0xb3fc, 0xcb5e, 0x0, 0x0);
        gbc.writeMem(0x5e3d, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xff85, gbc.sp());
        EXPECT(0x5e3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 028D
        gbc.setState(0x429b, 0x7d55, 0x1f30, 0xc9fa, 0xf12d, 0x4bd4, 0x0, 0x0);
        gbc.writeMem(0x429b, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x7d55, gbc.sp());
        EXPECT(0x429d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 028E
        gbc.setState(0xdc94, 0xc0d2, 0x96e0, 0xb545, 0xcc2c, 0x93b9, 0x1, 0x1);
        gbc.writeMem(0xdc94, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xc0d2, gbc.sp());
        EXPECT(0xdc96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc94));
        EXPECT(0xdc, gbc.readMem(0xdc95));
        // CB DC 028F
        gbc.setState(0x4479, 0xd910, 0xfbe0, 0xbc0c, 0xd061, 0xa605, 0x0, 0x0);
        gbc.writeMem(0x4479, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xd910, gbc.sp());
        EXPECT(0x447b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0291
        gbc.setState(0x99e, 0xc339, 0xc390, 0x3672, 0xd474, 0x7fe6, 0x0, 0x1);
        gbc.writeMem(0x99e, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xc339, gbc.sp());
        EXPECT(0x9a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0292
        gbc.setState(0x3c85, 0x4311, 0x1c00, 0xcc59, 0xb48b, 0x1e85, 0x1, 0x0);
        gbc.writeMem(0x3c85, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x4311, gbc.sp());
        EXPECT(0x3c87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0294
        gbc.setState(0xe2bb, 0x968f, 0xa9c0, 0xeb79, 0xdc22, 0x1349, 0x1, 0x1);
        gbc.writeMem(0xe2bb, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x968f, gbc.sp());
        EXPECT(0xe2bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2bb));
        EXPECT(0xdc, gbc.readMem(0xe2bc));
        // CB DC 0295
        gbc.setState(0xaf6a, 0x8f3, 0x7ce0, 0xa02, 0x3548, 0x3908, 0x0, 0x1);
        gbc.writeMem(0xaf6a, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x8f3, gbc.sp());
        EXPECT(0xaf6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf6a));
        EXPECT(0xdc, gbc.readMem(0xaf6b));
        // CB DC 0296
        gbc.setState(0x7d7e, 0x6e6e, 0x4320, 0xa10f, 0x98ca, 0xafc, 0x0, 0x1);
        gbc.writeMem(0x7d7e, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x6e6e, gbc.sp());
        EXPECT(0x7d80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0297
        gbc.setState(0x5695, 0x5557, 0x18b0, 0xe2e6, 0xa8ac, 0x29e7, 0x0, 0x0);
        gbc.writeMem(0x5695, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x5557, gbc.sp());
        EXPECT(0x5697, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0298
        gbc.setState(0x2b80, 0x2be7, 0x3b0, 0x3300, 0xc0d2, 0x24e4, 0x1, 0x0);
        gbc.writeMem(0x2b80, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x2be7, gbc.sp());
        EXPECT(0x2b82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0299
        gbc.setState(0x2956, 0x59e, 0x1300, 0x2a6, 0xb355, 0x6cf9, 0x1, 0x1);
        gbc.writeMem(0x2956, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x59e, gbc.sp());
        EXPECT(0x2958, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 029A
        gbc.setState(0x2a2, 0x81ec, 0xd920, 0x189b, 0x8f4c, 0xd6c1, 0x1, 0x1);
        gbc.writeMem(0x2a2, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x81ec, gbc.sp());
        EXPECT(0x2a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 029B
        gbc.setState(0x807e, 0x768e, 0x9360, 0x62cb, 0x477a, 0x4851, 0x1, 0x0);
        gbc.writeMem(0x807e, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x768e, gbc.sp());
        EXPECT(0x8080, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x807e));
        EXPECT(0xdc, gbc.readMem(0x807f));
        // CB DC 029C
        gbc.setState(0xa5d9, 0xa679, 0x2cf0, 0xabc, 0xf268, 0x9a3f, 0x0, 0x0);
        gbc.writeMem(0xa5d9, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xa679, gbc.sp());
        EXPECT(0xa5db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5d9));
        EXPECT(0xdc, gbc.readMem(0xa5da));
        // CB DC 029D
        gbc.setState(0x6cbe, 0xace6, 0xc740, 0x5eba, 0x354d, 0xdc2, 0x0, 0x1);
        gbc.writeMem(0x6cbe, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xace6, gbc.sp());
        EXPECT(0x6cc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 029E
        gbc.setState(0xef61, 0xca15, 0xd7c0, 0x59ff, 0x8c52, 0xf6b2, 0x0, 0x1);
        gbc.writeMem(0xef61, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xca15, gbc.sp());
        EXPECT(0xef63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef61));
        EXPECT(0xdc, gbc.readMem(0xef62));
        // CB DC 029F
        gbc.setState(0xacc4, 0x7622, 0x66d0, 0x8d20, 0x38fa, 0x5e3f, 0x1, 0x0);
        gbc.writeMem(0xacc4, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x7622, gbc.sp());
        EXPECT(0xacc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacc4));
        EXPECT(0xdc, gbc.readMem(0xacc5));
        // CB DC 02A0
        gbc.setState(0x1897, 0x4bc7, 0x91e0, 0xaeca, 0x3fed, 0x88cb, 0x1, 0x1);
        gbc.writeMem(0x1897, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x4bc7, gbc.sp());
        EXPECT(0x1899, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 02A1
        gbc.setState(0xcf14, 0x5b5, 0x61e0, 0x56ae, 0x8f4a, 0xe3e7, 0x1, 0x1);
        gbc.writeMem(0xcf14, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x5b5, gbc.sp());
        EXPECT(0xcf16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf14));
        EXPECT(0xdc, gbc.readMem(0xcf15));
        // CB DC 02A2
        gbc.setState(0x2d88, 0xe53e, 0x8e0, 0x102e, 0x3cae, 0x975a, 0x1, 0x0);
        gbc.writeMem(0x2d88, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xe53e, gbc.sp());
        EXPECT(0x2d8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 02A3
        gbc.setState(0x283e, 0xb6bd, 0x2dc0, 0xf354, 0x6851, 0x5638, 0x1, 0x1);
        gbc.writeMem(0x283e, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xb6bd, gbc.sp());
        EXPECT(0x2840, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 02A4
        gbc.setState(0x2e56, 0x9ece, 0x92e0, 0xfd0c, 0xfd9d, 0xcff9, 0x1, 0x0);
        gbc.writeMem(0x2e56, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x9ece, gbc.sp());
        EXPECT(0x2e58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 02A5
        gbc.setState(0x1115, 0xe099, 0x5d90, 0x7001, 0x6858, 0x22dc, 0x1, 0x1);
        gbc.writeMem(0x1115, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xe099, gbc.sp());
        EXPECT(0x1117, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 02A6
        gbc.setState(0x669b, 0x29eb, 0x1d10, 0xb081, 0xf97e, 0x74cd, 0x1, 0x0);
        gbc.writeMem(0x669b, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x29eb, gbc.sp());
        EXPECT(0x669d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 02A7
        gbc.setState(0xa0d4, 0x7b0f, 0xd7c0, 0xb6f9, 0x7daf, 0xc454, 0x0, 0x0);
        gbc.writeMem(0xa0d4, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x7b0f, gbc.sp());
        EXPECT(0xa0d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0d4));
        EXPECT(0xdc, gbc.readMem(0xa0d5));
        // CB DC 02A8
        gbc.setState(0x74de, 0x752b, 0xecf0, 0x33a7, 0x2e91, 0x68e4, 0x0, 0x0);
        gbc.writeMem(0x74de, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x752b, gbc.sp());
        EXPECT(0x74e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 02A9
        gbc.setState(0x6b1e, 0x5e99, 0xe1b0, 0xd67e, 0x705a, 0x1a31, 0x0, 0x1);
        gbc.writeMem(0x6b1e, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x5e99, gbc.sp());
        EXPECT(0x6b20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 02AA
        gbc.setState(0xf64, 0x4887, 0x7ad0, 0x1ee8, 0x42cf, 0xbf30, 0x0, 0x0);
        gbc.writeMem(0xf64, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x4887, gbc.sp());
        EXPECT(0xf66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 02AB
        gbc.setState(0x86c6, 0xcedd, 0x9230, 0x5cea, 0xa953, 0xd0e1, 0x1, 0x1);
        gbc.writeMem(0x86c6, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xcedd, gbc.sp());
        EXPECT(0x86c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86c6));
        EXPECT(0xdc, gbc.readMem(0x86c7));
        // CB DC 02AC
        gbc.setState(0x51fb, 0xbead, 0x200, 0x9a01, 0x1bfb, 0x9fcc, 0x0, 0x1);
        gbc.writeMem(0x51fb, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xbead, gbc.sp());
        EXPECT(0x51fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 02AE
        gbc.setState(0x51ce, 0xeea1, 0xa860, 0x7a64, 0xc918, 0x94a1, 0x1, 0x1);
        gbc.writeMem(0x51ce, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xeea1, gbc.sp());
        EXPECT(0x51d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 02AF
        gbc.setState(0xd158, 0xdc52, 0xc6e0, 0x5259, 0xc34c, 0x1d08, 0x1, 0x0);
        gbc.writeMem(0xd158, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xdc52, gbc.sp());
        EXPECT(0xd15a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd158));
        EXPECT(0xdc, gbc.readMem(0xd159));
        // CB DC 02B0
        gbc.setState(0x303f, 0xe939, 0xdfd0, 0xe6b2, 0x805a, 0xe2c0, 0x1, 0x1);
        gbc.writeMem(0x303f, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xe939, gbc.sp());
        EXPECT(0x3041, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 02B1
        gbc.setState(0xe095, 0x7744, 0xca10, 0xdcf7, 0x46d1, 0x272b, 0x0, 0x1);
        gbc.writeMem(0xe095, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x7744, gbc.sp());
        EXPECT(0xe097, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe095));
        EXPECT(0xdc, gbc.readMem(0xe096));
        // CB DC 02B2
        gbc.setState(0xbd08, 0x5e78, 0xe3b0, 0xed29, 0xdb96, 0x7e5c, 0x1, 0x1);
        gbc.writeMem(0xbd08, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x5e78, gbc.sp());
        EXPECT(0xbd0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd08));
        EXPECT(0xdc, gbc.readMem(0xbd09));
        // CB DC 02B3
        gbc.setState(0xb5e9, 0x3714, 0xd980, 0xba1a, 0xb991, 0xe2d9, 0x1, 0x1);
        gbc.writeMem(0xb5e9, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x3714, gbc.sp());
        EXPECT(0xb5eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5e9));
        EXPECT(0xdc, gbc.readMem(0xb5ea));
        // CB DC 02B4
        gbc.setState(0x5217, 0x93ba, 0x50, 0x3b3d, 0x13f4, 0x6159, 0x1, 0x1);
        gbc.writeMem(0x5217, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x93ba, gbc.sp());
        EXPECT(0x5219, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 02B5
        gbc.setState(0x23b5, 0x1127, 0x7e0, 0x789b, 0xa09d, 0x402a, 0x1, 0x0);
        gbc.writeMem(0x23b5, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x1127, gbc.sp());
        EXPECT(0x23b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 02B6
        gbc.setState(0xc826, 0xf5e4, 0x5960, 0xaa98, 0x130e, 0x67fb, 0x1, 0x0);
        gbc.writeMem(0xc826, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xf5e4, gbc.sp());
        EXPECT(0xc828, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc826));
        EXPECT(0xdc, gbc.readMem(0xc827));
        // CB DC 02B7
        gbc.setState(0xac07, 0x4d28, 0x7e90, 0x21b9, 0xb10d, 0xbd51, 0x1, 0x1);
        gbc.writeMem(0xac07, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x4d28, gbc.sp());
        EXPECT(0xac09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac07));
        EXPECT(0xdc, gbc.readMem(0xac08));
        // CB DC 02B8
        gbc.setState(0xd25d, 0x4655, 0x9360, 0x6f33, 0xf51a, 0xad21, 0x1, 0x0);
        gbc.writeMem(0xd25d, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x4655, gbc.sp());
        EXPECT(0xd25f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd25d));
        EXPECT(0xdc, gbc.readMem(0xd25e));
        // CB DC 02B9
        gbc.setState(0x4be1, 0xc6aa, 0x5ea0, 0x4ab2, 0xcc01, 0x6ee9, 0x0, 0x0);
        gbc.writeMem(0x4be1, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xc6aa, gbc.sp());
        EXPECT(0x4be3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 02BA
        gbc.setState(0xa15f, 0xe8ca, 0x6b20, 0xede4, 0xbcc0, 0x28bf, 0x0, 0x0);
        gbc.writeMem(0xa15f, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xe8ca, gbc.sp());
        EXPECT(0xa161, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa15f));
        EXPECT(0xdc, gbc.readMem(0xa160));
        // CB DC 02BB
        gbc.setState(0xb2d2, 0xf188, 0xb110, 0xdae3, 0x94f, 0x4edd, 0x1, 0x0);
        gbc.writeMem(0xb2d2, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xf188, gbc.sp());
        EXPECT(0xb2d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2d2));
        EXPECT(0xdc, gbc.readMem(0xb2d3));
        // CB DC 02BC
        gbc.setState(0x2ae3, 0x626e, 0x7ff0, 0xdcb5, 0xb483, 0x39b3, 0x1, 0x1);
        gbc.writeMem(0x2ae3, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x626e, gbc.sp());
        EXPECT(0x2ae5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 02BD
        gbc.setState(0x453b, 0xe07e, 0xfbd0, 0xa40b, 0x885, 0x57e8, 0x1, 0x1);
        gbc.writeMem(0x453b, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xe07e, gbc.sp());
        EXPECT(0x453d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 02BE
        gbc.setState(0x4b3e, 0x782a, 0x78b0, 0xc0da, 0x19a3, 0xbfb9, 0x0, 0x0);
        gbc.writeMem(0x4b3e, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x782a, gbc.sp());
        EXPECT(0x4b40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 02BF
        gbc.setState(0x1acb, 0xc943, 0x1680, 0x752a, 0x5c16, 0x482f, 0x0, 0x1);
        gbc.writeMem(0x1acb, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xc943, gbc.sp());
        EXPECT(0x1acd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 02C0
        gbc.setState(0x790, 0x42d5, 0xe8d0, 0x4f2f, 0x2a6d, 0x5546, 0x0, 0x0);
        gbc.writeMem(0x790, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x42d5, gbc.sp());
        EXPECT(0x792, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 02C2
        gbc.setState(0xa15d, 0xd179, 0xb120, 0x32c7, 0x26b6, 0x9c5b, 0x0, 0x1);
        gbc.writeMem(0xa15d, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xd179, gbc.sp());
        EXPECT(0xa15f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa15d));
        EXPECT(0xdc, gbc.readMem(0xa15e));
        // CB DC 02C3
        gbc.setState(0x6ea0, 0xced8, 0x77e0, 0x6c52, 0x4ba8, 0xa40f, 0x1, 0x0);
        gbc.writeMem(0x6ea0, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xced8, gbc.sp());
        EXPECT(0x6ea2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 02C4
        gbc.setState(0xd247, 0x5361, 0xa4c0, 0x1539, 0x3479, 0x4572, 0x0, 0x0);
        gbc.writeMem(0xd247, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x5361, gbc.sp());
        EXPECT(0xd249, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd247));
        EXPECT(0xdc, gbc.readMem(0xd248));
        // CB DC 02C5
        gbc.setState(0xeb98, 0x836d, 0xcfc0, 0xa807, 0xa381, 0x5385, 0x1, 0x1);
        gbc.writeMem(0xeb98, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x836d, gbc.sp());
        EXPECT(0xeb9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb98));
        EXPECT(0xdc, gbc.readMem(0xeb99));
        // CB DC 02C6
        gbc.setState(0xd4f9, 0x111, 0xa100, 0x5fb2, 0xc199, 0x9dae, 0x1, 0x1);
        gbc.writeMem(0xd4f9, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x111, gbc.sp());
        EXPECT(0xd4fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4f9));
        EXPECT(0xdc, gbc.readMem(0xd4fa));
        // CB DC 02C7
        gbc.setState(0xd963, 0x7391, 0x9a20, 0xe385, 0xe24f, 0xd4f5, 0x0, 0x1);
        gbc.writeMem(0xd963, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x7391, gbc.sp());
        EXPECT(0xd965, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd963));
        EXPECT(0xdc, gbc.readMem(0xd964));
        // CB DC 02C8
        gbc.setState(0xb1dc, 0x4c83, 0x56e0, 0x1fcd, 0xd55b, 0x33b1, 0x0, 0x1);
        gbc.writeMem(0xb1dc, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x4c83, gbc.sp());
        EXPECT(0xb1de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1dc));
        EXPECT(0xdc, gbc.readMem(0xb1dd));
        // CB DC 02C9
        gbc.setState(0x3a02, 0x49fa, 0x77a0, 0x1648, 0x4c64, 0x2564, 0x0, 0x0);
        gbc.writeMem(0x3a02, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x49fa, gbc.sp());
        EXPECT(0x3a04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 02CA
        gbc.setState(0xa1ba, 0xb43f, 0xae20, 0x61c4, 0x8753, 0x788f, 0x0, 0x0);
        gbc.writeMem(0xa1ba, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xb43f, gbc.sp());
        EXPECT(0xa1bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1ba));
        EXPECT(0xdc, gbc.readMem(0xa1bb));
        // CB DC 02CB
        gbc.setState(0x3a1, 0xe60e, 0xbf10, 0x6378, 0x6fd1, 0x153, 0x1, 0x1);
        gbc.writeMem(0x3a1, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xe60e, gbc.sp());
        EXPECT(0x3a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 02CC
        gbc.setState(0x7d0b, 0x7123, 0x7e20, 0x9cd9, 0x103c, 0x6b72, 0x1, 0x0);
        gbc.writeMem(0x7d0b, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x7123, gbc.sp());
        EXPECT(0x7d0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 02CD
        gbc.setState(0x71db, 0x24a6, 0x9e30, 0x4095, 0x5013, 0x904d, 0x0, 0x0);
        gbc.writeMem(0x71db, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x24a6, gbc.sp());
        EXPECT(0x71dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 02CE
        gbc.setState(0x45b2, 0xeaa0, 0x91f0, 0x5f8b, 0x47a9, 0x1508, 0x1, 0x0);
        gbc.writeMem(0x45b2, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xeaa0, gbc.sp());
        EXPECT(0x45b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 02CF
        gbc.setState(0x8fb2, 0xb0fd, 0x720, 0xb590, 0x9f33, 0xba86, 0x0, 0x0);
        gbc.writeMem(0x8fb2, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xb0fd, gbc.sp());
        EXPECT(0x8fb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fb2));
        EXPECT(0xdc, gbc.readMem(0x8fb3));
        // CB DC 02D0
        gbc.setState(0xad3d, 0x2248, 0xcdb0, 0x5450, 0xd2d7, 0x54d3, 0x1, 0x0);
        gbc.writeMem(0xad3d, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x2248, gbc.sp());
        EXPECT(0xad3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad3d));
        EXPECT(0xdc, gbc.readMem(0xad3e));
        // CB DC 02D1
        gbc.setState(0x7c39, 0x12f7, 0xe980, 0xfe02, 0x217c, 0xd287, 0x1, 0x1);
        gbc.writeMem(0x7c39, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x12f7, gbc.sp());
        EXPECT(0x7c3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 02D2
        gbc.setState(0xb062, 0x9114, 0xb7a0, 0x8f12, 0xaa55, 0x17a0, 0x1, 0x0);
        gbc.writeMem(0xb062, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x9114, gbc.sp());
        EXPECT(0xb064, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb062));
        EXPECT(0xdc, gbc.readMem(0xb063));
        // CB DC 02D3
        gbc.setState(0x5f20, 0x2ce0, 0x30d0, 0x25cb, 0xe1bb, 0x27f3, 0x0, 0x1);
        gbc.writeMem(0x5f20, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x2ce0, gbc.sp());
        EXPECT(0x5f22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 02D4
        gbc.setState(0x2469, 0x695c, 0x6360, 0xcf09, 0x9a9b, 0x36ce, 0x1, 0x1);
        gbc.writeMem(0x2469, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x695c, gbc.sp());
        EXPECT(0x246b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 02D5
        gbc.setState(0xd75, 0x5e1d, 0xdaa0, 0xd9b8, 0x8604, 0xdb5, 0x1, 0x0);
        gbc.writeMem(0xd75, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x5e1d, gbc.sp());
        EXPECT(0xd77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 02D6
        gbc.setState(0xe9e5, 0xd770, 0xf0b0, 0x74b6, 0x877f, 0xadbd, 0x0, 0x1);
        gbc.writeMem(0xe9e5, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xd770, gbc.sp());
        EXPECT(0xe9e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9e5));
        EXPECT(0xdc, gbc.readMem(0xe9e6));
        // CB DC 02D7
        gbc.setState(0x817e, 0xfcfd, 0x9b0, 0xcda5, 0x5e2d, 0x5763, 0x0, 0x1);
        gbc.writeMem(0x817e, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xfcfd, gbc.sp());
        EXPECT(0x8180, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x817e));
        EXPECT(0xdc, gbc.readMem(0x817f));
        // CB DC 02D8
        gbc.setState(0x1b4f, 0x8136, 0xada0, 0xdda9, 0x711b, 0x620d, 0x1, 0x0);
        gbc.writeMem(0x1b4f, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x8136, gbc.sp());
        EXPECT(0x1b51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 02DA
        gbc.setState(0xb453, 0x5c0c, 0xa9b0, 0x5b9e, 0x2301, 0x670, 0x1, 0x1);
        gbc.writeMem(0xb453, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x5c0c, gbc.sp());
        EXPECT(0xb455, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb453));
        EXPECT(0xdc, gbc.readMem(0xb454));
        // CB DC 02DB
        gbc.setState(0x8911, 0x4e53, 0x1da0, 0xed81, 0xefb5, 0xcbd9, 0x1, 0x0);
        gbc.writeMem(0x8911, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x4e53, gbc.sp());
        EXPECT(0x8913, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8911));
        EXPECT(0xdc, gbc.readMem(0x8912));
        // CB DC 02DC
        gbc.setState(0xcb9d, 0xaac9, 0x6ce0, 0xacdd, 0x508a, 0xca77, 0x1, 0x1);
        gbc.writeMem(0xcb9d, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xaac9, gbc.sp());
        EXPECT(0xcb9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb9d));
        EXPECT(0xdc, gbc.readMem(0xcb9e));
        // CB DC 02DD
        gbc.setState(0x500c, 0x6a3, 0xfea0, 0x6bb3, 0x58a2, 0x9432, 0x0, 0x0);
        gbc.writeMem(0x500c, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x6a3, gbc.sp());
        EXPECT(0x500e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 02DE
        gbc.setState(0xd750, 0x6ef8, 0xdb90, 0xcbc2, 0xedfa, 0xe50e, 0x1, 0x1);
        gbc.writeMem(0xd750, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x6ef8, gbc.sp());
        EXPECT(0xd752, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd750));
        EXPECT(0xdc, gbc.readMem(0xd751));
        // CB DC 02DF
        gbc.setState(0xec45, 0xa6e9, 0x1e90, 0x11e5, 0x87d7, 0x74f5, 0x0, 0x0);
        gbc.writeMem(0xec45, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xa6e9, gbc.sp());
        EXPECT(0xec47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec45));
        EXPECT(0xdc, gbc.readMem(0xec46));
        // CB DC 02E0
        gbc.setState(0x1687, 0x1c8d, 0x46f0, 0xfb8, 0xe832, 0x7c7e, 0x0, 0x0);
        gbc.writeMem(0x1687, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x1c8d, gbc.sp());
        EXPECT(0x1689, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 02E1
        gbc.setState(0xd9af, 0x7888, 0x56f0, 0x47bf, 0x1a36, 0x71fc, 0x1, 0x1);
        gbc.writeMem(0xd9af, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x7888, gbc.sp());
        EXPECT(0xd9b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9af));
        EXPECT(0xdc, gbc.readMem(0xd9b0));
        // CB DC 02E2
        gbc.setState(0x51a8, 0xcfe0, 0x9200, 0xecf7, 0x4b6f, 0xad3a, 0x0, 0x1);
        gbc.writeMem(0x51a8, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xcfe0, gbc.sp());
        EXPECT(0x51aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 02E3
        gbc.setState(0xabc3, 0x564d, 0xca50, 0x2b42, 0xed60, 0x1ea1, 0x1, 0x0);
        gbc.writeMem(0xabc3, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x564d, gbc.sp());
        EXPECT(0xabc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabc3));
        EXPECT(0xdc, gbc.readMem(0xabc4));
        // CB DC 02E4
        gbc.setState(0x6e7d, 0xb416, 0xf690, 0x360a, 0xbcb3, 0xd, 0x1, 0x0);
        gbc.writeMem(0x6e7d, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xb416, gbc.sp());
        EXPECT(0x6e7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 02E5
        gbc.setState(0xed27, 0x1eb4, 0xbfc0, 0xa975, 0xec94, 0x8495, 0x1, 0x1);
        gbc.writeMem(0xed27, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x1eb4, gbc.sp());
        EXPECT(0xed29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed27));
        EXPECT(0xdc, gbc.readMem(0xed28));
        // CB DC 02E6
        gbc.setState(0x5e1d, 0x72b2, 0xc520, 0x273c, 0x6768, 0xf825, 0x1, 0x0);
        gbc.writeMem(0x5e1d, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x72b2, gbc.sp());
        EXPECT(0x5e1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 02E8
        gbc.setState(0x4ac2, 0x467, 0xa30, 0xf292, 0x71d1, 0x9215, 0x0, 0x0);
        gbc.writeMem(0x4ac2, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x467, gbc.sp());
        EXPECT(0x4ac4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 02E9
        gbc.setState(0x5492, 0x799e, 0xb130, 0xa58f, 0xbe93, 0x35ae, 0x0, 0x0);
        gbc.writeMem(0x5492, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x799e, gbc.sp());
        EXPECT(0x5494, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 02EA
        gbc.setState(0x2ec1, 0xe93e, 0x2040, 0x238f, 0xa63e, 0xd94c, 0x1, 0x0);
        gbc.writeMem(0x2ec1, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xe93e, gbc.sp());
        EXPECT(0x2ec3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 02EB
        gbc.setState(0x81a0, 0xc17, 0xd600, 0xd53d, 0x4bcb, 0xe7ae, 0x1, 0x1);
        gbc.writeMem(0x81a0, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xc17, gbc.sp());
        EXPECT(0x81a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81a0));
        EXPECT(0xdc, gbc.readMem(0x81a1));
        // CB DC 02EC
        gbc.setState(0xb63c, 0xe950, 0x3400, 0xaaa5, 0x3b47, 0x26b7, 0x0, 0x0);
        gbc.writeMem(0xb63c, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xe950, gbc.sp());
        EXPECT(0xb63e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb63c));
        EXPECT(0xdc, gbc.readMem(0xb63d));
        // CB DC 02ED
        gbc.setState(0x5758, 0x3508, 0x290, 0xdf70, 0xc886, 0x533a, 0x0, 0x1);
        gbc.writeMem(0x5758, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x3508, gbc.sp());
        EXPECT(0x575a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 02EE
        gbc.setState(0x6c83, 0xd116, 0xaa0, 0xde8, 0x38c6, 0x5606, 0x0, 0x1);
        gbc.writeMem(0x6c83, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xd116, gbc.sp());
        EXPECT(0x6c85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 02EF
        gbc.setState(0x8937, 0x6780, 0xfcc0, 0x49eb, 0x1e41, 0x1047, 0x0, 0x1);
        gbc.writeMem(0x8937, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x6780, gbc.sp());
        EXPECT(0x8939, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8937));
        EXPECT(0xdc, gbc.readMem(0x8938));
        // CB DC 02F0
        gbc.setState(0xab00, 0xba82, 0xc430, 0xd1f7, 0x70dd, 0x2545, 0x0, 0x0);
        gbc.writeMem(0xab00, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xba82, gbc.sp());
        EXPECT(0xab02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab00));
        EXPECT(0xdc, gbc.readMem(0xab01));
        // CB DC 02F1
        gbc.setState(0x7dea, 0x7d71, 0x1780, 0x1d60, 0xe113, 0xab62, 0x1, 0x1);
        gbc.writeMem(0x7dea, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x7d71, gbc.sp());
        EXPECT(0x7dec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 02F2
        gbc.setState(0xd9ee, 0x2693, 0xf350, 0x2607, 0x4702, 0xd6d0, 0x1, 0x0);
        gbc.writeMem(0xd9ee, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x2693, gbc.sp());
        EXPECT(0xd9f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9ee));
        EXPECT(0xdc, gbc.readMem(0xd9ef));
        // CB DC 02F3
        gbc.setState(0xdb14, 0x4f1, 0x7cc0, 0xc6c4, 0xab9, 0x3cb7, 0x1, 0x0);
        gbc.writeMem(0xdb14, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x4f1, gbc.sp());
        EXPECT(0xdb16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb14));
        EXPECT(0xdc, gbc.readMem(0xdb15));
        // CB DC 02F4
        gbc.setState(0x6558, 0xbf6a, 0xa200, 0xd6b5, 0xcc3c, 0xccb0, 0x1, 0x0);
        gbc.writeMem(0x6558, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xbf6a, gbc.sp());
        EXPECT(0x655a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 02F5
        gbc.setState(0x8e0c, 0x4e28, 0xf3a0, 0x205, 0x2dcb, 0x8105, 0x0, 0x0);
        gbc.writeMem(0x8e0c, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x4e28, gbc.sp());
        EXPECT(0x8e0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e0c));
        EXPECT(0xdc, gbc.readMem(0x8e0d));
        // CB DC 02F6
        gbc.setState(0xcb3d, 0xa78b, 0xad90, 0x543b, 0x4f29, 0xe434, 0x1, 0x0);
        gbc.writeMem(0xcb3d, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xa78b, gbc.sp());
        EXPECT(0xcb3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb3d));
        EXPECT(0xdc, gbc.readMem(0xcb3e));
        // CB DC 02F7
        gbc.setState(0x5fb, 0xb244, 0xdd40, 0xcdfc, 0x540b, 0x82e1, 0x1, 0x0);
        gbc.writeMem(0x5fb, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xb244, gbc.sp());
        EXPECT(0x5fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 02F8
        gbc.setState(0xdef4, 0xa44b, 0xbfc0, 0x232, 0x3ad, 0x111f, 0x1, 0x0);
        gbc.writeMem(0xdef4, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xa44b, gbc.sp());
        EXPECT(0xdef6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdef4));
        EXPECT(0xdc, gbc.readMem(0xdef5));
        // CB DC 02F9
        gbc.setState(0x6249, 0x10b4, 0x6ad0, 0x3297, 0xf717, 0xf9c9, 0x1, 0x0);
        gbc.writeMem(0x6249, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x10b4, gbc.sp());
        EXPECT(0x624b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 02FA
        gbc.setState(0xa5d0, 0xd8f5, 0x8360, 0x1e9a, 0x8761, 0x1f56, 0x0, 0x1);
        gbc.writeMem(0xa5d0, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xd8f5, gbc.sp());
        EXPECT(0xa5d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5d0));
        EXPECT(0xdc, gbc.readMem(0xa5d1));
        // CB DC 02FB
        gbc.setState(0x8bfb, 0x75f2, 0x10d0, 0x8f06, 0x727c, 0x1822, 0x0, 0x0);
        gbc.writeMem(0x8bfb, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x75f2, gbc.sp());
        EXPECT(0x8bfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bfb));
        EXPECT(0xdc, gbc.readMem(0x8bfc));
        // CB DC 02FC
        gbc.setState(0xeabb, 0xe3ae, 0x47b0, 0x6006, 0x16bd, 0x890b, 0x0, 0x0);
        gbc.writeMem(0xeabb, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xe3ae, gbc.sp());
        EXPECT(0xeabd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeabb));
        EXPECT(0xdc, gbc.readMem(0xeabc));
        // CB DC 02FD
        gbc.setState(0xcb4, 0xcd66, 0xfae0, 0x9c25, 0xe6e5, 0x6632, 0x0, 0x1);
        gbc.writeMem(0xcb4, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xcd66, gbc.sp());
        EXPECT(0xcb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 02FE
        gbc.setState(0x7aff, 0x7b20, 0x7fb0, 0xeb3, 0xa102, 0x31cc, 0x1, 0x1);
        gbc.writeMem(0x7aff, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x7b20, gbc.sp());
        EXPECT(0x7b01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0300
        gbc.setState(0x65b9, 0x61c0, 0xedb0, 0x4b59, 0xcabe, 0xebe2, 0x0, 0x1);
        gbc.writeMem(0x65b9, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x61c0, gbc.sp());
        EXPECT(0x65bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0301
        gbc.setState(0x983e, 0x8760, 0xb7b0, 0xbe3f, 0x88ce, 0x3280, 0x1, 0x1);
        gbc.writeMem(0x983e, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x8760, gbc.sp());
        EXPECT(0x9840, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x983e));
        EXPECT(0xdc, gbc.readMem(0x983f));
        // CB DC 0302
        gbc.setState(0x5dbd, 0x6c0f, 0x76e0, 0x521b, 0xc303, 0x5a87, 0x1, 0x1);
        gbc.writeMem(0x5dbd, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x6c0f, gbc.sp());
        EXPECT(0x5dbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0303
        gbc.setState(0xa44b, 0xa974, 0x4010, 0x7f6a, 0xad9c, 0x41f4, 0x0, 0x1);
        gbc.writeMem(0xa44b, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xa974, gbc.sp());
        EXPECT(0xa44d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa44b));
        EXPECT(0xdc, gbc.readMem(0xa44c));
        // CB DC 0304
        gbc.setState(0x4a76, 0xc3c8, 0x6c40, 0xc19e, 0xc41d, 0x68bf, 0x0, 0x1);
        gbc.writeMem(0x4a76, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xc3c8, gbc.sp());
        EXPECT(0x4a78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0305
        gbc.setState(0x3e6a, 0x7a31, 0x98a0, 0x3e3b, 0xc858, 0xb18b, 0x1, 0x0);
        gbc.writeMem(0x3e6a, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x7a31, gbc.sp());
        EXPECT(0x3e6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0306
        gbc.setState(0xad02, 0x1497, 0xad90, 0xff71, 0x6fb9, 0x7692, 0x0, 0x0);
        gbc.writeMem(0xad02, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x1497, gbc.sp());
        EXPECT(0xad04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad02));
        EXPECT(0xdc, gbc.readMem(0xad03));
        // CB DC 0307
        gbc.setState(0xa50e, 0xd440, 0x8960, 0xa9f8, 0x8455, 0x2b2, 0x1, 0x1);
        gbc.writeMem(0xa50e, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xd440, gbc.sp());
        EXPECT(0xa510, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa50e));
        EXPECT(0xdc, gbc.readMem(0xa50f));
        // CB DC 0308
        gbc.setState(0x1330, 0x8516, 0x2cf0, 0x42c, 0xa185, 0x6f66, 0x0, 0x0);
        gbc.writeMem(0x1330, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x8516, gbc.sp());
        EXPECT(0x1332, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0309
        gbc.setState(0x91a2, 0xa564, 0xbca0, 0x28b8, 0x905f, 0x896, 0x1, 0x0);
        gbc.writeMem(0x91a2, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xa564, gbc.sp());
        EXPECT(0x91a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91a2));
        EXPECT(0xdc, gbc.readMem(0x91a3));
        // CB DC 030A
        gbc.setState(0x4253, 0xeda6, 0x25c0, 0xe4fa, 0xee38, 0xdc54, 0x0, 0x0);
        gbc.writeMem(0x4253, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xeda6, gbc.sp());
        EXPECT(0x4255, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 030B
        gbc.setState(0x9c05, 0x970a, 0x5c90, 0xe82f, 0x480c, 0xfee7, 0x1, 0x0);
        gbc.writeMem(0x9c05, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x970a, gbc.sp());
        EXPECT(0x9c07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c05));
        EXPECT(0xdc, gbc.readMem(0x9c06));
        // CB DC 030C
        gbc.setState(0xa83f, 0xff3e, 0xa440, 0x9341, 0x1613, 0x700a, 0x1, 0x0);
        gbc.writeMem(0xa83f, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xff3e, gbc.sp());
        EXPECT(0xa841, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa83f));
        EXPECT(0xdc, gbc.readMem(0xa840));
        // CB DC 030D
        gbc.setState(0xe8e8, 0xa5cc, 0xfd90, 0x6009, 0x9ac1, 0x8ea1, 0x1, 0x0);
        gbc.writeMem(0xe8e8, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xa5cc, gbc.sp());
        EXPECT(0xe8ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8e8));
        EXPECT(0xdc, gbc.readMem(0xe8e9));
        // CB DC 030E
        gbc.setState(0x46e7, 0xba17, 0x95e0, 0x9280, 0xbb66, 0x9a16, 0x1, 0x0);
        gbc.writeMem(0x46e7, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xba17, gbc.sp());
        EXPECT(0x46e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 030F
        gbc.setState(0xa10c, 0xd8a7, 0x7010, 0xbd14, 0x992d, 0xd52d, 0x0, 0x1);
        gbc.writeMem(0xa10c, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xd8a7, gbc.sp());
        EXPECT(0xa10e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa10c));
        EXPECT(0xdc, gbc.readMem(0xa10d));
        // CB DC 0310
        gbc.setState(0x9e05, 0x3779, 0x4ee0, 0x7698, 0x6c40, 0xa297, 0x0, 0x0);
        gbc.writeMem(0x9e05, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x3779, gbc.sp());
        EXPECT(0x9e07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e05));
        EXPECT(0xdc, gbc.readMem(0x9e06));
        // CB DC 0311
        gbc.setState(0x1f24, 0x8900, 0xf860, 0xa761, 0x4646, 0x2381, 0x0, 0x1);
        gbc.writeMem(0x1f24, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x8900, gbc.sp());
        EXPECT(0x1f26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0312
        gbc.setState(0x5d42, 0x84ab, 0xa400, 0xc356, 0xb0fd, 0x6cbb, 0x1, 0x1);
        gbc.writeMem(0x5d42, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x84ab, gbc.sp());
        EXPECT(0x5d44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0313
        gbc.setState(0xd09a, 0x1f7a, 0xdde0, 0xe53b, 0xd5a7, 0x9e32, 0x0, 0x0);
        gbc.writeMem(0xd09a, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x1f7a, gbc.sp());
        EXPECT(0xd09c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd09a));
        EXPECT(0xdc, gbc.readMem(0xd09b));
        // CB DC 0314
        gbc.setState(0xdff8, 0x1473, 0xe150, 0xf62d, 0xc22f, 0x4fec, 0x1, 0x1);
        gbc.writeMem(0xdff8, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x1473, gbc.sp());
        EXPECT(0xdffa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdff8));
        EXPECT(0xdc, gbc.readMem(0xdff9));
        // CB DC 0315
        gbc.setState(0xc0b8, 0xace, 0xf8a0, 0x72dd, 0x269f, 0xa757, 0x0, 0x0);
        gbc.writeMem(0xc0b8, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xace, gbc.sp());
        EXPECT(0xc0ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0b8));
        EXPECT(0xdc, gbc.readMem(0xc0b9));
        // CB DC 0316
        gbc.setState(0x2811, 0x596c, 0x5cc0, 0x73f9, 0xf14b, 0xa049, 0x1, 0x0);
        gbc.writeMem(0x2811, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x596c, gbc.sp());
        EXPECT(0x2813, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0317
        gbc.setState(0xea8f, 0x8c15, 0xefa0, 0xc3ca, 0x7d16, 0x385f, 0x0, 0x1);
        gbc.writeMem(0xea8f, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x8c15, gbc.sp());
        EXPECT(0xea91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea8f));
        EXPECT(0xdc, gbc.readMem(0xea90));
        // CB DC 0318
        gbc.setState(0x1b41, 0x5b6, 0x1d10, 0x3f49, 0x4ac2, 0x4216, 0x0, 0x1);
        gbc.writeMem(0x1b41, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x5b6, gbc.sp());
        EXPECT(0x1b43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 031A
        gbc.setState(0x36ce, 0xed86, 0x1ae0, 0x5565, 0x794, 0xbe0e, 0x1, 0x1);
        gbc.writeMem(0x36ce, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xed86, gbc.sp());
        EXPECT(0x36d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 031B
        gbc.setState(0x4615, 0x43af, 0x1730, 0xd979, 0xd54c, 0xd172, 0x0, 0x0);
        gbc.writeMem(0x4615, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x43af, gbc.sp());
        EXPECT(0x4617, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 031C
        gbc.setState(0xedfa, 0x620b, 0x2cd0, 0x7e61, 0x2e, 0xb38b, 0x1, 0x0);
        gbc.writeMem(0xedfa, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x620b, gbc.sp());
        EXPECT(0xedfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedfa));
        EXPECT(0xdc, gbc.readMem(0xedfb));
        // CB DC 031D
        gbc.setState(0x4bb0, 0x5a65, 0x8a70, 0xbd1, 0x1c7b, 0x5d65, 0x0, 0x0);
        gbc.writeMem(0x4bb0, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x5a65, gbc.sp());
        EXPECT(0x4bb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 031E
        gbc.setState(0x700c, 0xfc28, 0x4d20, 0xabdb, 0xbb97, 0xc572, 0x1, 0x0);
        gbc.writeMem(0x700c, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xfc28, gbc.sp());
        EXPECT(0x700e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 031F
        gbc.setState(0xb2da, 0x58dc, 0x90, 0xd988, 0x38e1, 0x2913, 0x1, 0x1);
        gbc.writeMem(0xb2da, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x58dc, gbc.sp());
        EXPECT(0xb2dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2da));
        EXPECT(0xdc, gbc.readMem(0xb2db));
        // CB DC 0322
        gbc.setState(0x3013, 0x940e, 0x1b0, 0x156, 0xeda3, 0xf001, 0x0, 0x1);
        gbc.writeMem(0x3013, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x940e, gbc.sp());
        EXPECT(0x3015, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0323
        gbc.setState(0xdb72, 0x38bc, 0x4510, 0x9ce9, 0xa739, 0xd9a8, 0x1, 0x1);
        gbc.writeMem(0xdb72, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x38bc, gbc.sp());
        EXPECT(0xdb74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb72));
        EXPECT(0xdc, gbc.readMem(0xdb73));
        // CB DC 0324
        gbc.setState(0x6548, 0x6b7c, 0x3ff0, 0x8359, 0x768d, 0xc150, 0x0, 0x1);
        gbc.writeMem(0x6548, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x6b7c, gbc.sp());
        EXPECT(0x654a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0327
        gbc.setState(0xba3b, 0x3d75, 0xb850, 0xe15e, 0x9c1f, 0x7451, 0x0, 0x0);
        gbc.writeMem(0xba3b, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x3d75, gbc.sp());
        EXPECT(0xba3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba3b));
        EXPECT(0xdc, gbc.readMem(0xba3c));
        // CB DC 0328
        gbc.setState(0x9ae0, 0xe16d, 0xf4b0, 0x5a38, 0x1cea, 0x6270, 0x0, 0x0);
        gbc.writeMem(0x9ae0, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xe16d, gbc.sp());
        EXPECT(0x9ae2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ae0));
        EXPECT(0xdc, gbc.readMem(0x9ae1));
        // CB DC 0329
        gbc.setState(0xe8a0, 0x6846, 0x8480, 0x1d07, 0x9e08, 0x4049, 0x0, 0x0);
        gbc.writeMem(0xe8a0, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x6846, gbc.sp());
        EXPECT(0xe8a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8a0));
        EXPECT(0xdc, gbc.readMem(0xe8a1));
        // CB DC 032B
        gbc.setState(0xd235, 0x41b2, 0x2740, 0xbc77, 0x9bfd, 0xb40e, 0x0, 0x1);
        gbc.writeMem(0xd235, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x41b2, gbc.sp());
        EXPECT(0xd237, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd235));
        EXPECT(0xdc, gbc.readMem(0xd236));
        // CB DC 032C
        gbc.setState(0x2d51, 0x57d3, 0x7de0, 0xcc5a, 0x3a30, 0x54a5, 0x1, 0x0);
        gbc.writeMem(0x2d51, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x57d3, gbc.sp());
        EXPECT(0x2d53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 032D
        gbc.setState(0x5c50, 0x8c27, 0x4ad0, 0x1fca, 0x8c1a, 0xb06a, 0x0, 0x1);
        gbc.writeMem(0x5c50, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x8c27, gbc.sp());
        EXPECT(0x5c52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 032E
        gbc.setState(0x38d, 0x10a3, 0x2710, 0x6250, 0x2019, 0x9cce, 0x0, 0x1);
        gbc.writeMem(0x38d, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x10a3, gbc.sp());
        EXPECT(0x38f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 032F
        gbc.setState(0xceeb, 0xa492, 0x1f30, 0x1852, 0xbdaf, 0xab3e, 0x1, 0x1);
        gbc.writeMem(0xceeb, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xa492, gbc.sp());
        EXPECT(0xceed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xceeb));
        EXPECT(0xdc, gbc.readMem(0xceec));
        // CB DC 0330
        gbc.setState(0x972b, 0x4c06, 0xdb0, 0x7841, 0xe386, 0x784b, 0x0, 0x1);
        gbc.writeMem(0x972b, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x4c06, gbc.sp());
        EXPECT(0x972d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x972b));
        EXPECT(0xdc, gbc.readMem(0x972c));
        // CB DC 0331
        gbc.setState(0xd24f, 0xe34c, 0x44f0, 0x42ff, 0x6def, 0x2a7e, 0x0, 0x1);
        gbc.writeMem(0xd24f, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xe34c, gbc.sp());
        EXPECT(0xd251, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd24f));
        EXPECT(0xdc, gbc.readMem(0xd250));
        // CB DC 0332
        gbc.setState(0xcce4, 0xe634, 0xa6a0, 0x6f04, 0xc11e, 0x6c40, 0x0, 0x0);
        gbc.writeMem(0xcce4, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xe634, gbc.sp());
        EXPECT(0xcce6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcce4));
        EXPECT(0xdc, gbc.readMem(0xcce5));
        // CB DC 0333
        gbc.setState(0x5c19, 0xb646, 0xbc90, 0xfee5, 0x271f, 0xf9c7, 0x1, 0x0);
        gbc.writeMem(0x5c19, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xb646, gbc.sp());
        EXPECT(0x5c1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0334
        gbc.setState(0x58cd, 0x6c02, 0xaa90, 0x7b7b, 0xa3b0, 0xbefe, 0x1, 0x1);
        gbc.writeMem(0x58cd, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x6c02, gbc.sp());
        EXPECT(0x58cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0335
        gbc.setState(0x5dad, 0x1ab3, 0xe3e0, 0x543e, 0x36d3, 0x9805, 0x1, 0x0);
        gbc.writeMem(0x5dad, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x1ab3, gbc.sp());
        EXPECT(0x5daf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0336
        gbc.setState(0xa224, 0xd787, 0x800, 0xc32e, 0x4e15, 0x8cb1, 0x0, 0x0);
        gbc.writeMem(0xa224, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xd787, gbc.sp());
        EXPECT(0xa226, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa224));
        EXPECT(0xdc, gbc.readMem(0xa225));
        // CB DC 0338
        gbc.setState(0x57d9, 0xce31, 0x26b0, 0xe4e7, 0x68c4, 0x2670, 0x1, 0x0);
        gbc.writeMem(0x57d9, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xce31, gbc.sp());
        EXPECT(0x57db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0339
        gbc.setState(0x9ebe, 0xe231, 0x1c60, 0x89ea, 0x2428, 0xc21c, 0x0, 0x0);
        gbc.writeMem(0x9ebe, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xe231, gbc.sp());
        EXPECT(0x9ec0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ebe));
        EXPECT(0xdc, gbc.readMem(0x9ebf));
        // CB DC 033B
        gbc.setState(0x6455, 0x6a48, 0x1030, 0xb678, 0x6eb, 0x865a, 0x0, 0x0);
        gbc.writeMem(0x6455, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x6a48, gbc.sp());
        EXPECT(0x6457, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 033C
        gbc.setState(0x3596, 0x9ac3, 0xd940, 0xe5d3, 0x7c02, 0x65d5, 0x1, 0x1);
        gbc.writeMem(0x3596, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x9ac3, gbc.sp());
        EXPECT(0x3598, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 033D
        gbc.setState(0x40a6, 0x883a, 0x3120, 0x3bc3, 0x8f12, 0x8885, 0x1, 0x1);
        gbc.writeMem(0x40a6, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x883a, gbc.sp());
        EXPECT(0x40a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 033E
        gbc.setState(0x52b2, 0x395e, 0x6650, 0xb804, 0xd7ab, 0xffa0, 0x0, 0x0);
        gbc.writeMem(0x52b2, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x395e, gbc.sp());
        EXPECT(0x52b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 033F
        gbc.setState(0x3992, 0xf158, 0xab00, 0x90bc, 0x9354, 0x2517, 0x1, 0x1);
        gbc.writeMem(0x3992, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xf158, gbc.sp());
        EXPECT(0x3994, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0340
        gbc.setState(0xef6, 0x5fa6, 0x7790, 0xcfd2, 0x5fbf, 0x90e1, 0x1, 0x0);
        gbc.writeMem(0xef6, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x5fa6, gbc.sp());
        EXPECT(0xef8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0341
        gbc.setState(0x198d, 0xbec0, 0xbbc0, 0xa186, 0x6d2, 0xb4b0, 0x0, 0x0);
        gbc.writeMem(0x198d, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xbec0, gbc.sp());
        EXPECT(0x198f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0342
        gbc.setState(0x9d6e, 0x8e64, 0xca80, 0xe94, 0x63bf, 0xb446, 0x0, 0x0);
        gbc.writeMem(0x9d6e, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x8e64, gbc.sp());
        EXPECT(0x9d70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d6e));
        EXPECT(0xdc, gbc.readMem(0x9d6f));
        // CB DC 0343
        gbc.setState(0x9113, 0x94a2, 0x8f30, 0x7cff, 0x6697, 0x2537, 0x1, 0x1);
        gbc.writeMem(0x9113, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x94a2, gbc.sp());
        EXPECT(0x9115, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9113));
        EXPECT(0xdc, gbc.readMem(0x9114));
        // CB DC 0344
        gbc.setState(0xdc37, 0xc9d0, 0x87f0, 0x5098, 0x152f, 0x3912, 0x1, 0x0);
        gbc.writeMem(0xdc37, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xc9d0, gbc.sp());
        EXPECT(0xdc39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc37));
        EXPECT(0xdc, gbc.readMem(0xdc38));
        // CB DC 0345
        gbc.setState(0x4504, 0x4ed5, 0x50b0, 0x15bb, 0x4f3f, 0x2637, 0x1, 0x1);
        gbc.writeMem(0x4504, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x4ed5, gbc.sp());
        EXPECT(0x4506, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0346
        gbc.setState(0x70e4, 0xacab, 0xf520, 0xb43a, 0x716, 0x9675, 0x0, 0x1);
        gbc.writeMem(0x70e4, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xacab, gbc.sp());
        EXPECT(0x70e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0347
        gbc.setState(0x504e, 0x9fc8, 0xcac0, 0x3c28, 0x3ad7, 0xa017, 0x0, 0x0);
        gbc.writeMem(0x504e, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x9fc8, gbc.sp());
        EXPECT(0x5050, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0348
        gbc.setState(0xe53d, 0x5cc4, 0xecf0, 0xcca6, 0xcea5, 0x7fa6, 0x0, 0x1);
        gbc.writeMem(0xe53d, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x5cc4, gbc.sp());
        EXPECT(0xe53f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe53d));
        EXPECT(0xdc, gbc.readMem(0xe53e));
        // CB DC 0349
        gbc.setState(0x3eb4, 0xf0af, 0x7090, 0xa58a, 0x90eb, 0xf738, 0x1, 0x0);
        gbc.writeMem(0x3eb4, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xf0af, gbc.sp());
        EXPECT(0x3eb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 034A
        gbc.setState(0x55c7, 0xbc1a, 0xe1c0, 0x78fd, 0x9199, 0xfebb, 0x1, 0x1);
        gbc.writeMem(0x55c7, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xbc1a, gbc.sp());
        EXPECT(0x55c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 034B
        gbc.setState(0xb7ab, 0x7f63, 0xd720, 0xe575, 0xd029, 0x2cf7, 0x0, 0x0);
        gbc.writeMem(0xb7ab, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x7f63, gbc.sp());
        EXPECT(0xb7ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7ab));
        EXPECT(0xdc, gbc.readMem(0xb7ac));
        // CB DC 034C
        gbc.setState(0xbba, 0xa940, 0x5830, 0x680, 0xc4c1, 0xed48, 0x1, 0x0);
        gbc.writeMem(0xbba, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xa940, gbc.sp());
        EXPECT(0xbbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 034D
        gbc.setState(0xab9f, 0x7e5f, 0x4360, 0xdd0f, 0x7f38, 0xb0dd, 0x0, 0x0);
        gbc.writeMem(0xab9f, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x7e5f, gbc.sp());
        EXPECT(0xaba1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab9f));
        EXPECT(0xdc, gbc.readMem(0xaba0));
        // CB DC 034E
        gbc.setState(0x75d7, 0xe738, 0x4960, 0x4a2, 0x93da, 0xc564, 0x1, 0x1);
        gbc.writeMem(0x75d7, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xe738, gbc.sp());
        EXPECT(0x75d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0350
        gbc.setState(0x480b, 0x292a, 0xae0, 0xd4b, 0x8322, 0xf86c, 0x1, 0x0);
        gbc.writeMem(0x480b, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x292a, gbc.sp());
        EXPECT(0x480d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0351
        gbc.setState(0x64af, 0xc6e0, 0x6c0, 0x2970, 0xca74, 0xfef2, 0x0, 0x1);
        gbc.writeMem(0x64af, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xc6e0, gbc.sp());
        EXPECT(0x64b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0352
        gbc.setState(0x954, 0x1a82, 0x96f0, 0xd3e6, 0x2696, 0x35ac, 0x0, 0x1);
        gbc.writeMem(0x954, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x1a82, gbc.sp());
        EXPECT(0x956, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0353
        gbc.setState(0x4fb3, 0x2777, 0xe0, 0x8f5e, 0xb26e, 0x8169, 0x0, 0x0);
        gbc.writeMem(0x4fb3, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x2777, gbc.sp());
        EXPECT(0x4fb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0355
        gbc.setState(0xdd31, 0x7af6, 0x9120, 0xeed2, 0x38d, 0x7a80, 0x1, 0x0);
        gbc.writeMem(0xdd31, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x7af6, gbc.sp());
        EXPECT(0xdd33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd31));
        EXPECT(0xdc, gbc.readMem(0xdd32));
        // CB DC 0357
        gbc.setState(0x28ce, 0x4d4d, 0x7810, 0x2d4c, 0x2894, 0x5d61, 0x0, 0x1);
        gbc.writeMem(0x28ce, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x4d4d, gbc.sp());
        EXPECT(0x28d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0358
        gbc.setState(0x26b3, 0x68b2, 0xf560, 0x61c8, 0xaa73, 0xbced, 0x0, 0x1);
        gbc.writeMem(0x26b3, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x68b2, gbc.sp());
        EXPECT(0x26b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0359
        gbc.setState(0x223e, 0xdde2, 0xb150, 0x76a0, 0x63cb, 0x1939, 0x1, 0x1);
        gbc.writeMem(0x223e, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xdde2, gbc.sp());
        EXPECT(0x2240, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 035A
        gbc.setState(0x2d77, 0x36ee, 0x4ab0, 0x55bc, 0x15f8, 0x6e16, 0x0, 0x0);
        gbc.writeMem(0x2d77, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x36ee, gbc.sp());
        EXPECT(0x2d79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 035B
        gbc.setState(0xe7f2, 0x3476, 0xb000, 0xb625, 0x1ec6, 0x11e3, 0x1, 0x0);
        gbc.writeMem(0xe7f2, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x3476, gbc.sp());
        EXPECT(0xe7f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7f2));
        EXPECT(0xdc, gbc.readMem(0xe7f3));
        // CB DC 035C
        gbc.setState(0x175c, 0x594d, 0x2120, 0x1095, 0x78e9, 0x8343, 0x0, 0x1);
        gbc.writeMem(0x175c, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x594d, gbc.sp());
        EXPECT(0x175e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 035D
        gbc.setState(0x4bec, 0x228f, 0xcad0, 0x1939, 0x16a8, 0xeac4, 0x1, 0x0);
        gbc.writeMem(0x4bec, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x228f, gbc.sp());
        EXPECT(0x4bee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 035E
        gbc.setState(0xa387, 0x5d8, 0x4f60, 0x45b0, 0x7132, 0x57b9, 0x1, 0x1);
        gbc.writeMem(0xa387, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x5d8, gbc.sp());
        EXPECT(0xa389, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa387));
        EXPECT(0xdc, gbc.readMem(0xa388));
        // CB DC 035F
        gbc.setState(0x1705, 0xfb40, 0x4180, 0x6d61, 0x76b8, 0x1c7f, 0x1, 0x0);
        gbc.writeMem(0x1705, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xfb40, gbc.sp());
        EXPECT(0x1707, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0360
        gbc.setState(0x95ce, 0xec33, 0x73b0, 0x1a23, 0xd8b8, 0x6de4, 0x0, 0x1);
        gbc.writeMem(0x95ce, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xec33, gbc.sp());
        EXPECT(0x95d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95ce));
        EXPECT(0xdc, gbc.readMem(0x95cf));
        // CB DC 0361
        gbc.setState(0xa702, 0x3951, 0xf2f0, 0x5b34, 0x67d2, 0xe415, 0x0, 0x1);
        gbc.writeMem(0xa702, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x3951, gbc.sp());
        EXPECT(0xa704, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa702));
        EXPECT(0xdc, gbc.readMem(0xa703));
        // CB DC 0362
        gbc.setState(0x1ce4, 0x3ce3, 0x6810, 0x8fc0, 0x23a1, 0x5fd7, 0x1, 0x0);
        gbc.writeMem(0x1ce4, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x3ce3, gbc.sp());
        EXPECT(0x1ce6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0363
        gbc.setState(0x30a0, 0x7ffc, 0x3b60, 0x86c2, 0x3fc6, 0x2b75, 0x1, 0x0);
        gbc.writeMem(0x30a0, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x7ffc, gbc.sp());
        EXPECT(0x30a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0364
        gbc.setState(0x9545, 0x19a1, 0xc3d0, 0x4ec4, 0xde70, 0x72b4, 0x1, 0x0);
        gbc.writeMem(0x9545, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x19a1, gbc.sp());
        EXPECT(0x9547, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9545));
        EXPECT(0xdc, gbc.readMem(0x9546));
        // CB DC 0365
        gbc.setState(0x2f21, 0x852d, 0x78f0, 0x5ad, 0xe0d0, 0x2ffd, 0x0, 0x1);
        gbc.writeMem(0x2f21, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x852d, gbc.sp());
        EXPECT(0x2f23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0366
        gbc.setState(0xee67, 0x1dcd, 0xfb10, 0xe96d, 0x56f9, 0xcaee, 0x0, 0x0);
        gbc.writeMem(0xee67, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x1dcd, gbc.sp());
        EXPECT(0xee69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee67));
        EXPECT(0xdc, gbc.readMem(0xee68));
        // CB DC 0367
        gbc.setState(0x8b96, 0x84f0, 0x12b0, 0x6df6, 0xad15, 0xef5a, 0x1, 0x1);
        gbc.writeMem(0x8b96, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x84f0, gbc.sp());
        EXPECT(0x8b98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b96));
        EXPECT(0xdc, gbc.readMem(0x8b97));
        // CB DC 0368
        gbc.setState(0xa811, 0xb91e, 0x6e50, 0xf0, 0xf91e, 0xa770, 0x0, 0x0);
        gbc.writeMem(0xa811, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xb91e, gbc.sp());
        EXPECT(0xa813, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa811));
        EXPECT(0xdc, gbc.readMem(0xa812));
        // CB DC 0369
        gbc.setState(0x9fd7, 0x2e04, 0xc980, 0xee13, 0x30f8, 0x2047, 0x0, 0x1);
        gbc.writeMem(0x9fd7, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x2e04, gbc.sp());
        EXPECT(0x9fd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fd7));
        EXPECT(0xdc, gbc.readMem(0x9fd8));
        // CB DC 036A
        gbc.setState(0xaa0, 0x8aee, 0x7410, 0x1626, 0x7907, 0x2443, 0x1, 0x1);
        gbc.writeMem(0xaa0, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x8aee, gbc.sp());
        EXPECT(0xaa2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 036B
        gbc.setState(0x4161, 0x2d52, 0x5bb0, 0x7af0, 0xbfcf, 0xca74, 0x1, 0x1);
        gbc.writeMem(0x4161, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x2d52, gbc.sp());
        EXPECT(0x4163, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 036C
        gbc.setState(0x4472, 0x1e6b, 0x4700, 0xa1f1, 0x65c0, 0x629, 0x0, 0x1);
        gbc.writeMem(0x4472, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x1e6b, gbc.sp());
        EXPECT(0x4474, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 036E
        gbc.setState(0xcef4, 0x3b6b, 0x2a90, 0x6462, 0x95fd, 0xf35a, 0x1, 0x0);
        gbc.writeMem(0xcef4, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x3b6b, gbc.sp());
        EXPECT(0xcef6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcef4));
        EXPECT(0xdc, gbc.readMem(0xcef5));
        // CB DC 036F
        gbc.setState(0xab6d, 0x6a56, 0x1780, 0x5ba4, 0xb0ce, 0xe015, 0x0, 0x1);
        gbc.writeMem(0xab6d, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x6a56, gbc.sp());
        EXPECT(0xab6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab6d));
        EXPECT(0xdc, gbc.readMem(0xab6e));
        // CB DC 0370
        gbc.setState(0x8bc2, 0x2670, 0x6120, 0xe221, 0x64b1, 0xf878, 0x1, 0x1);
        gbc.writeMem(0x8bc2, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x2670, gbc.sp());
        EXPECT(0x8bc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bc2));
        EXPECT(0xdc, gbc.readMem(0x8bc3));
        // CB DC 0371
        gbc.setState(0x263c, 0x30e6, 0x93f0, 0x3736, 0xd77, 0x9e8f, 0x0, 0x1);
        gbc.writeMem(0x263c, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x30e6, gbc.sp());
        EXPECT(0x263e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0372
        gbc.setState(0x62d8, 0xec84, 0xab00, 0x2443, 0x816c, 0xaa5d, 0x1, 0x0);
        gbc.writeMem(0x62d8, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xec84, gbc.sp());
        EXPECT(0x62da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0373
        gbc.setState(0x49b5, 0x3c99, 0x99c0, 0x3a62, 0x9d9e, 0x158b, 0x0, 0x1);
        gbc.writeMem(0x49b5, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x3c99, gbc.sp());
        EXPECT(0x49b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0374
        gbc.setState(0x45c8, 0xdba1, 0x5ca0, 0xce95, 0x13d, 0x347b, 0x0, 0x1);
        gbc.writeMem(0x45c8, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xdba1, gbc.sp());
        EXPECT(0x45ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0375
        gbc.setState(0xbe15, 0xb6c8, 0x1a90, 0x6f13, 0xcf27, 0x58df, 0x0, 0x0);
        gbc.writeMem(0xbe15, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xb6c8, gbc.sp());
        EXPECT(0xbe17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe15));
        EXPECT(0xdc, gbc.readMem(0xbe16));
        // CB DC 0376
        gbc.setState(0x8364, 0xffc0, 0x82c0, 0x5c34, 0x5d05, 0x52fe, 0x1, 0x1);
        gbc.writeMem(0x8364, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xffc0, gbc.sp());
        EXPECT(0x8366, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8364));
        EXPECT(0xdc, gbc.readMem(0x8365));
        // CB DC 0377
        gbc.setState(0xbdf8, 0xee1f, 0xef0, 0xce10, 0x4058, 0x8a34, 0x1, 0x0);
        gbc.writeMem(0xbdf8, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xee1f, gbc.sp());
        EXPECT(0xbdfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdf8));
        EXPECT(0xdc, gbc.readMem(0xbdf9));
        // CB DC 0378
        gbc.setState(0x8941, 0xadd4, 0x98a0, 0xdef3, 0x26cb, 0xbe4f, 0x0, 0x0);
        gbc.writeMem(0x8941, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xadd4, gbc.sp());
        EXPECT(0x8943, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8941));
        EXPECT(0xdc, gbc.readMem(0x8942));
        // CB DC 0379
        gbc.setState(0x77a1, 0xfdfe, 0x31e0, 0x5d9d, 0x2b40, 0x89a9, 0x0, 0x1);
        gbc.writeMem(0x77a1, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xfdfe, gbc.sp());
        EXPECT(0x77a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 037B
        gbc.setState(0x7d8c, 0xb6c3, 0xb590, 0x9257, 0x95c0, 0xcf42, 0x1, 0x1);
        gbc.writeMem(0x7d8c, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xb6c3, gbc.sp());
        EXPECT(0x7d8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 037C
        gbc.setState(0x4542, 0x762a, 0xd8d0, 0x36f6, 0xa24f, 0x66e1, 0x1, 0x0);
        gbc.writeMem(0x4542, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x762a, gbc.sp());
        EXPECT(0x4544, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 037D
        gbc.setState(0x6bc7, 0xb3fc, 0x1b60, 0xa160, 0x3b87, 0x8b48, 0x1, 0x1);
        gbc.writeMem(0x6bc7, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xb3fc, gbc.sp());
        EXPECT(0x6bc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 037E
        gbc.setState(0x6384, 0x17ba, 0xab40, 0x5138, 0xc45d, 0xf35e, 0x1, 0x1);
        gbc.writeMem(0x6384, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x17ba, gbc.sp());
        EXPECT(0x6386, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 037F
        gbc.setState(0x9365, 0x700c, 0xdc00, 0x996c, 0xb282, 0xcf46, 0x1, 0x0);
        gbc.writeMem(0x9365, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x700c, gbc.sp());
        EXPECT(0x9367, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9365));
        EXPECT(0xdc, gbc.readMem(0x9366));
        // CB DC 0380
        gbc.setState(0x832f, 0x90cf, 0x6b90, 0x3b3, 0xf0f1, 0x676b, 0x1, 0x1);
        gbc.writeMem(0x832f, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x90cf, gbc.sp());
        EXPECT(0x8331, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x832f));
        EXPECT(0xdc, gbc.readMem(0x8330));
        // CB DC 0381
        gbc.setState(0x2e58, 0xa92e, 0x2f10, 0xdae6, 0x8a01, 0x1c53, 0x1, 0x0);
        gbc.writeMem(0x2e58, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xa92e, gbc.sp());
        EXPECT(0x2e5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0382
        gbc.setState(0xc90a, 0x40df, 0x8bb0, 0xc8d8, 0x3a07, 0x753d, 0x0, 0x1);
        gbc.writeMem(0xc90a, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x40df, gbc.sp());
        EXPECT(0xc90c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc90a));
        EXPECT(0xdc, gbc.readMem(0xc90b));
        // CB DC 0383
        gbc.setState(0x50af, 0x6451, 0x4030, 0x58df, 0x4a04, 0x932f, 0x1, 0x1);
        gbc.writeMem(0x50af, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x6451, gbc.sp());
        EXPECT(0x50b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0385
        gbc.setState(0x47cb, 0xf238, 0x8890, 0x2510, 0xa5c6, 0xc5fb, 0x0, 0x0);
        gbc.writeMem(0x47cb, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xf238, gbc.sp());
        EXPECT(0x47cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0386
        gbc.setState(0x7240, 0x3333, 0xbbd0, 0x74de, 0x88cd, 0xd26f, 0x1, 0x1);
        gbc.writeMem(0x7240, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x3333, gbc.sp());
        EXPECT(0x7242, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0387
        gbc.setState(0x4d7d, 0xc48b, 0x16d0, 0xf49, 0xd453, 0xaa7d, 0x1, 0x1);
        gbc.writeMem(0x4d7d, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xc48b, gbc.sp());
        EXPECT(0x4d7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0389
        gbc.setState(0x4b63, 0x2d9c, 0x380, 0x3ba1, 0xd1e, 0xa4d0, 0x1, 0x0);
        gbc.writeMem(0x4b63, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x2d9c, gbc.sp());
        EXPECT(0x4b65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 038A
        gbc.setState(0x1275, 0x7cd1, 0x9a10, 0xef15, 0xa78b, 0x6e2b, 0x0, 0x0);
        gbc.writeMem(0x1275, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x7cd1, gbc.sp());
        EXPECT(0x1277, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 038B
        gbc.setState(0x840e, 0xe3f, 0x7b90, 0x11b4, 0xe541, 0x7cbf, 0x1, 0x1);
        gbc.writeMem(0x840e, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xe3f, gbc.sp());
        EXPECT(0x8410, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x840e));
        EXPECT(0xdc, gbc.readMem(0x840f));
        // CB DC 038C
        gbc.setState(0x21dd, 0xe27d, 0x2020, 0xfef6, 0xb4d0, 0xb17a, 0x0, 0x0);
        gbc.writeMem(0x21dd, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xe27d, gbc.sp());
        EXPECT(0x21df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 038D
        gbc.setState(0x43a7, 0x18db, 0xf390, 0xce86, 0x4867, 0x690d, 0x1, 0x1);
        gbc.writeMem(0x43a7, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x18db, gbc.sp());
        EXPECT(0x43a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 038E
        gbc.setState(0x20d1, 0xf332, 0xf930, 0x436b, 0xedeb, 0x9684, 0x1, 0x0);
        gbc.writeMem(0x20d1, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xf332, gbc.sp());
        EXPECT(0x20d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 038F
        gbc.setState(0x7ba3, 0x8721, 0x1580, 0x1314, 0xb364, 0x5583, 0x1, 0x0);
        gbc.writeMem(0x7ba3, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x8721, gbc.sp());
        EXPECT(0x7ba5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0390
        gbc.setState(0xea2f, 0xec07, 0x2cd0, 0x9610, 0x53f1, 0xf2fe, 0x0, 0x1);
        gbc.writeMem(0xea2f, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xec07, gbc.sp());
        EXPECT(0xea31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea2f));
        EXPECT(0xdc, gbc.readMem(0xea30));
        // CB DC 0391
        gbc.setState(0xbd13, 0xea70, 0x9240, 0xb493, 0x5c0d, 0x558e, 0x0, 0x0);
        gbc.writeMem(0xbd13, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xea70, gbc.sp());
        EXPECT(0xbd15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd13));
        EXPECT(0xdc, gbc.readMem(0xbd14));
        // CB DC 0392
        gbc.setState(0x9113, 0x954b, 0xb980, 0x42b1, 0xfaaf, 0x10da, 0x0, 0x1);
        gbc.writeMem(0x9113, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x954b, gbc.sp());
        EXPECT(0x9115, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9113));
        EXPECT(0xdc, gbc.readMem(0x9114));
        // CB DC 0393
        gbc.setState(0xaee7, 0xeb0, 0x750, 0xa6d8, 0x6551, 0xda32, 0x1, 0x0);
        gbc.writeMem(0xaee7, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xeb0, gbc.sp());
        EXPECT(0xaee9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaee7));
        EXPECT(0xdc, gbc.readMem(0xaee8));
        // CB DC 0394
        gbc.setState(0xb7ff, 0xa3f7, 0x8ce0, 0x172d, 0x177d, 0xec76, 0x0, 0x0);
        gbc.writeMem(0xb7ff, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xa3f7, gbc.sp());
        EXPECT(0xb801, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7ff));
        EXPECT(0xdc, gbc.readMem(0xb800));
        // CB DC 0395
        gbc.setState(0x4bec, 0x1468, 0xc900, 0xfc5a, 0x1336, 0x2548, 0x0, 0x1);
        gbc.writeMem(0x4bec, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x1468, gbc.sp());
        EXPECT(0x4bee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 0396
        gbc.setState(0x2868, 0x1a3f, 0xea50, 0x1b12, 0xb346, 0x354f, 0x0, 0x0);
        gbc.writeMem(0x2868, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x1a3f, gbc.sp());
        EXPECT(0x286a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 0397
        gbc.setState(0x9766, 0xcb19, 0xa670, 0xae68, 0xfd40, 0xf3bb, 0x0, 0x1);
        gbc.writeMem(0x9766, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xcb19, gbc.sp());
        EXPECT(0x9768, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9766));
        EXPECT(0xdc, gbc.readMem(0x9767));
        // CB DC 0398
        gbc.setState(0xe16b, 0xfe52, 0x3ba0, 0x70ef, 0x386c, 0x4f44, 0x0, 0x1);
        gbc.writeMem(0xe16b, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xfe52, gbc.sp());
        EXPECT(0xe16d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe16b));
        EXPECT(0xdc, gbc.readMem(0xe16c));
        // CB DC 0399
        gbc.setState(0xd3ae, 0xdee9, 0xdfd0, 0xd8e0, 0x9814, 0x63d7, 0x0, 0x0);
        gbc.writeMem(0xd3ae, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xdee9, gbc.sp());
        EXPECT(0xd3b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3ae));
        EXPECT(0xdc, gbc.readMem(0xd3af));
        // CB DC 039A
        gbc.setState(0x3910, 0xb528, 0xeae0, 0xa52c, 0x4498, 0x14df, 0x0, 0x1);
        gbc.writeMem(0x3910, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xb528, gbc.sp());
        EXPECT(0x3912, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 039B
        gbc.setState(0xba0f, 0x2c7c, 0x82d0, 0x3db7, 0x432d, 0xdfa7, 0x1, 0x0);
        gbc.writeMem(0xba0f, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x2c7c, gbc.sp());
        EXPECT(0xba11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba0f));
        EXPECT(0xdc, gbc.readMem(0xba10));
        // CB DC 039C
        gbc.setState(0x2a7f, 0xd04c, 0x5310, 0x3c96, 0xef66, 0x3a72, 0x1, 0x1);
        gbc.writeMem(0x2a7f, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xd04c, gbc.sp());
        EXPECT(0x2a81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 039D
        gbc.setState(0x3c8a, 0x7131, 0x7c0, 0x8a2a, 0x836a, 0xdb34, 0x1, 0x1);
        gbc.writeMem(0x3c8a, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x7131, gbc.sp());
        EXPECT(0x3c8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 039F
        gbc.setState(0x271b, 0xb0e6, 0xfe50, 0x3eb4, 0x2ceb, 0x41eb, 0x0, 0x1);
        gbc.writeMem(0x271b, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xb0e6, gbc.sp());
        EXPECT(0x271d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 03A0
        gbc.setState(0xa866, 0x8be5, 0x5ce0, 0xfa11, 0x2d3b, 0xba72, 0x1, 0x1);
        gbc.writeMem(0xa866, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x8be5, gbc.sp());
        EXPECT(0xa868, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa866));
        EXPECT(0xdc, gbc.readMem(0xa867));
        // CB DC 03A1
        gbc.setState(0x8f35, 0x66c, 0xe3d0, 0x1fa8, 0x2913, 0x5610, 0x0, 0x1);
        gbc.writeMem(0x8f35, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x66c, gbc.sp());
        EXPECT(0x8f37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f35));
        EXPECT(0xdc, gbc.readMem(0x8f36));
        // CB DC 03A2
        gbc.setState(0xa71, 0xd2bd, 0x84f0, 0x4822, 0x5c68, 0xd91e, 0x1, 0x1);
        gbc.writeMem(0xa71, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xd2bd, gbc.sp());
        EXPECT(0xa73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 03A3
        gbc.setState(0x3d0c, 0x23ba, 0xef50, 0x6387, 0x136c, 0x2e0a, 0x1, 0x0);
        gbc.writeMem(0x3d0c, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x23ba, gbc.sp());
        EXPECT(0x3d0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 03A4
        gbc.setState(0x1f7a, 0xd184, 0x1500, 0x1cda, 0xa8f2, 0xeb1d, 0x0, 0x0);
        gbc.writeMem(0x1f7a, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xd184, gbc.sp());
        EXPECT(0x1f7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 03A5
        gbc.setState(0xb5db, 0x48b6, 0x1ec0, 0x982c, 0xcba8, 0x374f, 0x0, 0x1);
        gbc.writeMem(0xb5db, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x48b6, gbc.sp());
        EXPECT(0xb5dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5db));
        EXPECT(0xdc, gbc.readMem(0xb5dc));
        // CB DC 03A6
        gbc.setState(0xe9cd, 0xa991, 0x2a90, 0xbd68, 0xd38e, 0x6ca8, 0x1, 0x0);
        gbc.writeMem(0xe9cd, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xa991, gbc.sp());
        EXPECT(0xe9cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9cd));
        EXPECT(0xdc, gbc.readMem(0xe9ce));
        // CB DC 03A7
        gbc.setState(0x9c4, 0x932d, 0xb370, 0x8bac, 0x6b1f, 0x7a24, 0x1, 0x1);
        gbc.writeMem(0x9c4, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x932d, gbc.sp());
        EXPECT(0x9c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 03A8
        gbc.setState(0xe88e, 0x36d0, 0xc790, 0xa14c, 0xa39a, 0xd5c, 0x0, 0x1);
        gbc.writeMem(0xe88e, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x36d0, gbc.sp());
        EXPECT(0xe890, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe88e));
        EXPECT(0xdc, gbc.readMem(0xe88f));
        // CB DC 03A9
        gbc.setState(0x7948, 0x52b2, 0x6e40, 0xc201, 0xf685, 0xa4b1, 0x0, 0x0);
        gbc.writeMem(0x7948, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x52b2, gbc.sp());
        EXPECT(0x794a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 03AA
        gbc.setState(0xdb9b, 0x1ded, 0x1830, 0xe0eb, 0x11fe, 0x8a4a, 0x0, 0x0);
        gbc.writeMem(0xdb9b, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x1ded, gbc.sp());
        EXPECT(0xdb9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb9b));
        EXPECT(0xdc, gbc.readMem(0xdb9c));
        // CB DC 03AB
        gbc.setState(0xc715, 0x28c2, 0x6f50, 0xad1c, 0x34b2, 0x570b, 0x1, 0x0);
        gbc.writeMem(0xc715, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x28c2, gbc.sp());
        EXPECT(0xc717, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc715));
        EXPECT(0xdc, gbc.readMem(0xc716));
        // CB DC 03AE
        gbc.setState(0x83ed, 0xa825, 0xd1c0, 0xa7d8, 0x5cc4, 0x32d0, 0x1, 0x1);
        gbc.writeMem(0x83ed, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xa825, gbc.sp());
        EXPECT(0x83ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83ed));
        EXPECT(0xdc, gbc.readMem(0x83ee));
        // CB DC 03AF
        gbc.setState(0x6935, 0xd482, 0xfba0, 0xa4fa, 0xc090, 0x5955, 0x0, 0x0);
        gbc.writeMem(0x6935, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xd482, gbc.sp());
        EXPECT(0x6937, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 03B0
        gbc.setState(0x5976, 0xebd5, 0xb1f0, 0x9fbf, 0x540e, 0xf05f, 0x0, 0x0);
        gbc.writeMem(0x5976, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xebd5, gbc.sp());
        EXPECT(0x5978, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 03B1
        gbc.setState(0xd5c2, 0x8f57, 0xaf10, 0x7c70, 0x511c, 0xc32e, 0x1, 0x1);
        gbc.writeMem(0xd5c2, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x8f57, gbc.sp());
        EXPECT(0xd5c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5c2));
        EXPECT(0xdc, gbc.readMem(0xd5c3));
        // CB DC 03B2
        gbc.setState(0x8274, 0x342e, 0x96d0, 0xdad6, 0x31a7, 0xf2e3, 0x1, 0x1);
        gbc.writeMem(0x8274, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x342e, gbc.sp());
        EXPECT(0x8276, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8274));
        EXPECT(0xdc, gbc.readMem(0x8275));
        // CB DC 03B3
        gbc.setState(0x8c5, 0x4332, 0xaa40, 0x493d, 0x28ca, 0x74fe, 0x1, 0x1);
        gbc.writeMem(0x8c5, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x4332, gbc.sp());
        EXPECT(0x8c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 03B5
        gbc.setState(0x83b0, 0xeeb5, 0xbc30, 0x6892, 0xb2cf, 0xa80c, 0x0, 0x0);
        gbc.writeMem(0x83b0, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xeeb5, gbc.sp());
        EXPECT(0x83b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83b0));
        EXPECT(0xdc, gbc.readMem(0x83b1));
        // CB DC 03B6
        gbc.setState(0x98d6, 0xafe4, 0xe2e0, 0x601c, 0x70dc, 0xbfde, 0x1, 0x1);
        gbc.writeMem(0x98d6, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xafe4, gbc.sp());
        EXPECT(0x98d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98d6));
        EXPECT(0xdc, gbc.readMem(0x98d7));
        // CB DC 03B7
        gbc.setState(0xbfb7, 0xa9f1, 0x6ea0, 0xac23, 0xfac3, 0x9ea6, 0x0, 0x1);
        gbc.writeMem(0xbfb7, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xa9f1, gbc.sp());
        EXPECT(0xbfb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfb7));
        EXPECT(0xdc, gbc.readMem(0xbfb8));
        // CB DC 03B8
        gbc.setState(0x2980, 0x7166, 0x5ed0, 0xa666, 0x133a, 0xbca9, 0x0, 0x1);
        gbc.writeMem(0x2980, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x7166, gbc.sp());
        EXPECT(0x2982, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 03B9
        gbc.setState(0xe4a3, 0xb3cf, 0xc9f0, 0xf047, 0xa779, 0x5525, 0x1, 0x0);
        gbc.writeMem(0xe4a3, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xb3cf, gbc.sp());
        EXPECT(0xe4a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4a3));
        EXPECT(0xdc, gbc.readMem(0xe4a4));
        // CB DC 03BA
        gbc.setState(0x8328, 0x4639, 0xe560, 0x5fc9, 0xf895, 0xb0d6, 0x0, 0x0);
        gbc.writeMem(0x8328, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x4639, gbc.sp());
        EXPECT(0x832a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8328));
        EXPECT(0xdc, gbc.readMem(0x8329));
        // CB DC 03BB
        gbc.setState(0xb714, 0xd98c, 0x8f20, 0x6616, 0x80e2, 0x4617, 0x1, 0x1);
        gbc.writeMem(0xb714, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xd98c, gbc.sp());
        EXPECT(0xb716, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb714));
        EXPECT(0xdc, gbc.readMem(0xb715));
        // CB DC 03BC
        gbc.setState(0x6dc0, 0xfd1e, 0xd040, 0xaace, 0xc579, 0x52e5, 0x0, 0x1);
        gbc.writeMem(0x6dc0, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xfd1e, gbc.sp());
        EXPECT(0x6dc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 03BD
        gbc.setState(0x811a, 0xce7a, 0xa8e0, 0x2ce1, 0x8035, 0x2610, 0x0, 0x0);
        gbc.writeMem(0x811a, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xce7a, gbc.sp());
        EXPECT(0x811c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x811a));
        EXPECT(0xdc, gbc.readMem(0x811b));
        // CB DC 03BE
        gbc.setState(0x2773, 0x5f62, 0x5d90, 0x7fda, 0x4f80, 0xc775, 0x0, 0x1);
        gbc.writeMem(0x2773, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x5f62, gbc.sp());
        EXPECT(0x2775, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 03BF
        gbc.setState(0x8b21, 0x67df, 0x1c70, 0x6898, 0xa33, 0xfea6, 0x0, 0x0);
        gbc.writeMem(0x8b21, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x67df, gbc.sp());
        EXPECT(0x8b23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b21));
        EXPECT(0xdc, gbc.readMem(0x8b22));
        // CB DC 03C0
        gbc.setState(0xaf36, 0xcec, 0xf520, 0x66fd, 0x4750, 0x163, 0x0, 0x0);
        gbc.writeMem(0xaf36, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xcec, gbc.sp());
        EXPECT(0xaf38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf36));
        EXPECT(0xdc, gbc.readMem(0xaf37));
        // CB DC 03C1
        gbc.setState(0xc30f, 0xcbf6, 0xab20, 0xbe03, 0x37e0, 0xa86c, 0x0, 0x1);
        gbc.writeMem(0xc30f, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xcbf6, gbc.sp());
        EXPECT(0xc311, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc30f));
        EXPECT(0xdc, gbc.readMem(0xc310));
        // CB DC 03C2
        gbc.setState(0xa8c1, 0x16dd, 0x6860, 0x5bc5, 0x70a4, 0xa8c1, 0x1, 0x0);
        gbc.writeMem(0xa8c1, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x16dd, gbc.sp());
        EXPECT(0xa8c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8c1));
        EXPECT(0xdc, gbc.readMem(0xa8c2));
        // CB DC 03C3
        gbc.setState(0x85f4, 0x42ac, 0x7b90, 0xbd48, 0x7d73, 0xf576, 0x0, 0x1);
        gbc.writeMem(0x85f4, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x42ac, gbc.sp());
        EXPECT(0x85f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85f4));
        EXPECT(0xdc, gbc.readMem(0x85f5));
        // CB DC 03C4
        gbc.setState(0x7127, 0x980c, 0x61f0, 0x5dae, 0xaae1, 0xbf0a, 0x1, 0x1);
        gbc.writeMem(0x7127, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x980c, gbc.sp());
        EXPECT(0x7129, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 03C5
        gbc.setState(0x71fe, 0x43df, 0xd530, 0x2496, 0x797d, 0x948c, 0x1, 0x1);
        gbc.writeMem(0x71fe, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x43df, gbc.sp());
        EXPECT(0x7200, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 03C6
        gbc.setState(0xeb81, 0xc8dd, 0xd1b0, 0x741d, 0xa312, 0x27e4, 0x1, 0x1);
        gbc.writeMem(0xeb81, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xc8dd, gbc.sp());
        EXPECT(0xeb83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb81));
        EXPECT(0xdc, gbc.readMem(0xeb82));
        // CB DC 03C7
        gbc.setState(0xd97a, 0x1f05, 0xe140, 0x6967, 0x7b9a, 0x8888, 0x0, 0x1);
        gbc.writeMem(0xd97a, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x1f05, gbc.sp());
        EXPECT(0xd97c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd97a));
        EXPECT(0xdc, gbc.readMem(0xd97b));
        // CB DC 03C8
        gbc.setState(0x695a, 0x86f, 0x7010, 0xba87, 0xd12, 0xb492, 0x0, 0x1);
        gbc.writeMem(0x695a, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x86f, gbc.sp());
        EXPECT(0x695c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 03C9
        gbc.setState(0x3600, 0xb1d3, 0xa9d0, 0x1f42, 0x785a, 0x63a0, 0x1, 0x0);
        gbc.writeMem(0x3600, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xb1d3, gbc.sp());
        EXPECT(0x3602, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 03CA
        gbc.setState(0x763e, 0x7b7, 0x1900, 0x625, 0x285a, 0xe488, 0x1, 0x0);
        gbc.writeMem(0x763e, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x7b7, gbc.sp());
        EXPECT(0x7640, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 03CB
        gbc.setState(0xeef1, 0xb89f, 0xc3e0, 0x57c9, 0x68bb, 0xb590, 0x1, 0x0);
        gbc.writeMem(0xeef1, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xb89f, gbc.sp());
        EXPECT(0xeef3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeef1));
        EXPECT(0xdc, gbc.readMem(0xeef2));
        // CB DC 03CC
        gbc.setState(0xcfc1, 0x5cc3, 0xd820, 0xdfb8, 0x6a2e, 0xec74, 0x0, 0x1);
        gbc.writeMem(0xcfc1, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x5cc3, gbc.sp());
        EXPECT(0xcfc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfc1));
        EXPECT(0xdc, gbc.readMem(0xcfc2));
        // CB DC 03CD
        gbc.setState(0x1488, 0xddc3, 0x1a00, 0x77e0, 0xc270, 0xd90d, 0x1, 0x1);
        gbc.writeMem(0x1488, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xddc3, gbc.sp());
        EXPECT(0x148a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 03CE
        gbc.setState(0x22f1, 0x9b7f, 0x7ea0, 0x51ad, 0x2273, 0x7dea, 0x1, 0x1);
        gbc.writeMem(0x22f1, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x9b7f, gbc.sp());
        EXPECT(0x22f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 03CF
        gbc.setState(0x4413, 0x5842, 0x7620, 0x7ce4, 0xd30d, 0x7a99, 0x1, 0x0);
        gbc.writeMem(0x4413, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x5842, gbc.sp());
        EXPECT(0x4415, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 03D0
        gbc.setState(0x2c6a, 0x79eb, 0xe210, 0xe7a4, 0x15c5, 0x9440, 0x1, 0x1);
        gbc.writeMem(0x2c6a, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x79eb, gbc.sp());
        EXPECT(0x2c6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 03D1
        gbc.setState(0xdad, 0x8415, 0x6840, 0x7bc5, 0xe5e0, 0xadeb, 0x1, 0x1);
        gbc.writeMem(0xdad, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x8415, gbc.sp());
        EXPECT(0xdaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 03D2
        gbc.setState(0x8b88, 0x5e81, 0x8510, 0xdf80, 0x4d7, 0x530c, 0x1, 0x1);
        gbc.writeMem(0x8b88, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x5e81, gbc.sp());
        EXPECT(0x8b8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b88));
        EXPECT(0xdc, gbc.readMem(0x8b89));
        // CB DC 03D3
        gbc.setState(0xd136, 0x308f, 0x1ef0, 0xb2d9, 0x1c6, 0xef7c, 0x0, 0x0);
        gbc.writeMem(0xd136, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x308f, gbc.sp());
        EXPECT(0xd138, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd136));
        EXPECT(0xdc, gbc.readMem(0xd137));
        // CB DC 03D4
        gbc.setState(0x22f0, 0x17f3, 0x8ad0, 0x604, 0x9818, 0x85d0, 0x0, 0x0);
        gbc.writeMem(0x22f0, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x17f3, gbc.sp());
        EXPECT(0x22f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 03D5
        gbc.setState(0xaa45, 0x381, 0xd6c0, 0x6c0c, 0xaed8, 0x2e45, 0x1, 0x1);
        gbc.writeMem(0xaa45, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x381, gbc.sp());
        EXPECT(0xaa47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa45));
        EXPECT(0xdc, gbc.readMem(0xaa46));
        // CB DC 03D6
        gbc.setState(0xa645, 0x8291, 0x83f0, 0xaaa7, 0x7766, 0xf0a4, 0x1, 0x0);
        gbc.writeMem(0xa645, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x8291, gbc.sp());
        EXPECT(0xa647, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa645));
        EXPECT(0xdc, gbc.readMem(0xa646));
        // CB DC 03D7
        gbc.setState(0x1fb6, 0x2043, 0xe420, 0x26cb, 0xfa5a, 0x4, 0x1, 0x0);
        gbc.writeMem(0x1fb6, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x2043, gbc.sp());
        EXPECT(0x1fb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 03D8
        gbc.setState(0xd27e, 0xfac3, 0x1940, 0x4b0e, 0x2bb9, 0x34a4, 0x1, 0x0);
        gbc.writeMem(0xd27e, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xfac3, gbc.sp());
        EXPECT(0xd280, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd27e));
        EXPECT(0xdc, gbc.readMem(0xd27f));
        // CB DC 03DA
        gbc.setState(0x6fac, 0xe58d, 0x1650, 0xf235, 0x2f5e, 0x161f, 0x0, 0x0);
        gbc.writeMem(0x6fac, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xe58d, gbc.sp());
        EXPECT(0x6fae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 03DB
        gbc.setState(0x78ca, 0x4990, 0x6ff0, 0x75f8, 0x59ea, 0xdae4, 0x0, 0x0);
        gbc.writeMem(0x78ca, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x4990, gbc.sp());
        EXPECT(0x78cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 03DC
        gbc.setState(0xc07f, 0xad0c, 0x71c0, 0x76a5, 0x9bea, 0xe29f, 0x0, 0x0);
        gbc.writeMem(0xc07f, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xad0c, gbc.sp());
        EXPECT(0xc081, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc07f));
        EXPECT(0xdc, gbc.readMem(0xc080));
        // CB DC 03DD
        gbc.setState(0xc998, 0xec34, 0xd680, 0x495f, 0x6701, 0x9833, 0x1, 0x0);
        gbc.writeMem(0xc998, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xec34, gbc.sp());
        EXPECT(0xc99a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc998));
        EXPECT(0xdc, gbc.readMem(0xc999));
        // CB DC 03DE
        gbc.setState(0x5c23, 0xbe2, 0xb750, 0xbfc3, 0x5c1a, 0xbc60, 0x0, 0x1);
        gbc.writeMem(0x5c23, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xbe2, gbc.sp());
        EXPECT(0x5c25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 03DF
        gbc.setState(0x5d47, 0x8195, 0x5bc0, 0xb484, 0x1dd5, 0x97af, 0x0, 0x0);
        gbc.writeMem(0x5d47, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x8195, gbc.sp());
        EXPECT(0x5d49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 03E0
        gbc.setState(0xe700, 0xc841, 0x54e0, 0x2977, 0xbb2e, 0xeecb, 0x0, 0x0);
        gbc.writeMem(0xe700, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xc841, gbc.sp());
        EXPECT(0xe702, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe700));
        EXPECT(0xdc, gbc.readMem(0xe701));
        // CB DC 03E1
        gbc.setState(0x6ee2, 0x3d1d, 0x4910, 0x43a2, 0x555, 0xd70a, 0x1, 0x0);
        gbc.writeMem(0x6ee2, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x3d1d, gbc.sp());
        EXPECT(0x6ee4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DC 03E2
        gbc.setState(0x258a, 0x8d18, 0xd4c0, 0x86eb, 0x49c0, 0xe1f0, 0x0, 0x0);
        gbc.writeMem(0x258a, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x8d18, gbc.sp());
        EXPECT(0x258c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 03E3
        gbc.setState(0xa3dd, 0xf0d9, 0x8e80, 0xfc79, 0x21dd, 0x4565, 0x0, 0x1);
        gbc.writeMem(0xa3dd, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xf0d9, gbc.sp());
        EXPECT(0xa3df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3dd));
        EXPECT(0xdc, gbc.readMem(0xa3de));
        // CB DC 03E4
        gbc.setState(0x1098, 0x5548, 0x9f40, 0xe655, 0xf185, 0x130, 0x0, 0x1);
        gbc.writeMem(0x1098, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x5548, gbc.sp());
        EXPECT(0x109a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DC 03E5
        gbc.setState(0x9ceb, 0xb1b8, 0x9140, 0xb76d, 0x567d, 0x6d89, 0x1, 0x0);
        gbc.writeMem(0x9ceb, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xb1b8, gbc.sp());
        EXPECT(0x9ced, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ceb));
        EXPECT(0xdc, gbc.readMem(0x9cec));
        // CB DC 03E7
        gbc.setState(0x4afb, 0x6edc, 0x9730, 0x2973, 0x77c8, 0xe3f0, 0x0, 0x1);
        gbc.writeMem(0x4afb, { 0xcb, 0xdc });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x6edc, gbc.sp());
        EXPECT(0x4afd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
    }
