    TEST(gbcemu, opcode_cb_f8) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB F8 0000
        gbc.setState(0xa40, 0x2af1, 0xc660, 0xe2a9, 0x843e, 0xec2b, 0x1, 0x1);
        gbc.writeMem(0xa40, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x2af1, gbc.sp());
        EXPECT(0xa42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0001
        gbc.setState(0x23b9, 0xc441, 0x2d80, 0x2d32, 0x6da0, 0xc7e2, 0x1, 0x0);
        gbc.writeMem(0x23b9, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xc441, gbc.sp());
        EXPECT(0x23bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0002
        gbc.setState(0xccfe, 0x4b01, 0x5ae0, 0x321f, 0x41c, 0x6061, 0x0, 0x0);
        gbc.writeMem(0xccfe, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x4b01, gbc.sp());
        EXPECT(0xcd00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccfe));
        EXPECT(0xf8, gbc.readMem(0xccff));
        // CB F8 0003
        gbc.setState(0xe88c, 0xaed7, 0x74a0, 0x4ee9, 0x2dd8, 0x1b3c, 0x1, 0x0);
        gbc.writeMem(0xe88c, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xaed7, gbc.sp());
        EXPECT(0xe88e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe88c));
        EXPECT(0xf8, gbc.readMem(0xe88d));
        // CB F8 0004
        gbc.setState(0xa4db, 0x6830, 0xfc0, 0x2a7, 0x6cca, 0xe07, 0x1, 0x0);
        gbc.writeMem(0xa4db, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x6830, gbc.sp());
        EXPECT(0xa4dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4db));
        EXPECT(0xf8, gbc.readMem(0xa4dc));
        // CB F8 0005
        gbc.setState(0xcb27, 0x5baf, 0xd170, 0x9347, 0x917c, 0x7972, 0x1, 0x1);
        gbc.writeMem(0xcb27, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x5baf, gbc.sp());
        EXPECT(0xcb29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb27));
        EXPECT(0xf8, gbc.readMem(0xcb28));
        // CB F8 0006
        gbc.setState(0x692e, 0x1b4, 0xfd0, 0x84f, 0x89dd, 0x3da0, 0x0, 0x1);
        gbc.writeMem(0x692e, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x1b4, gbc.sp());
        EXPECT(0x6930, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0007
        gbc.setState(0xd16c, 0xf34b, 0xe530, 0x609f, 0x42fa, 0xc94, 0x0, 0x1);
        gbc.writeMem(0xd16c, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xf34b, gbc.sp());
        EXPECT(0xd16e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd16c));
        EXPECT(0xf8, gbc.readMem(0xd16d));
        // CB F8 0009
        gbc.setState(0x4182, 0x9b67, 0x8570, 0xec72, 0x6cb9, 0x2936, 0x1, 0x0);
        gbc.writeMem(0x4182, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x9b67, gbc.sp());
        EXPECT(0x4184, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 000A
        gbc.setState(0x5e75, 0x4b11, 0x7630, 0x962b, 0xff2f, 0x23e3, 0x1, 0x0);
        gbc.writeMem(0x5e75, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x4b11, gbc.sp());
        EXPECT(0x5e77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 000B
        gbc.setState(0x6fd1, 0xe3c6, 0xfdb0, 0xe939, 0xd95d, 0x5c5f, 0x1, 0x1);
        gbc.writeMem(0x6fd1, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xe3c6, gbc.sp());
        EXPECT(0x6fd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 000C
        gbc.setState(0x46eb, 0x6609, 0xeb70, 0x4a24, 0x8954, 0xa78d, 0x0, 0x1);
        gbc.writeMem(0x46eb, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x6609, gbc.sp());
        EXPECT(0x46ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 000D
        gbc.setState(0x20dc, 0x8e14, 0x2590, 0xc29c, 0x46c6, 0x52e1, 0x0, 0x1);
        gbc.writeMem(0x20dc, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x8e14, gbc.sp());
        EXPECT(0x20de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 000E
        gbc.setState(0x7634, 0x42ec, 0x20a0, 0x2421, 0x9d5b, 0x6e26, 0x1, 0x0);
        gbc.writeMem(0x7634, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x42ec, gbc.sp());
        EXPECT(0x7636, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 000F
        gbc.setState(0xb1d6, 0xaa5d, 0x5f10, 0x1acf, 0x81fe, 0xecb, 0x1, 0x0);
        gbc.writeMem(0xb1d6, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xaa5d, gbc.sp());
        EXPECT(0xb1d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1d6));
        EXPECT(0xf8, gbc.readMem(0xb1d7));
        // CB F8 0010
        gbc.setState(0x7b5f, 0x2e4d, 0xf4b0, 0xa816, 0x90e8, 0xa105, 0x0, 0x1);
        gbc.writeMem(0x7b5f, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x2e4d, gbc.sp());
        EXPECT(0x7b61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0011
        gbc.setState(0x7bb6, 0x2a5d, 0x1490, 0x3194, 0xa4c2, 0x774a, 0x1, 0x1);
        gbc.writeMem(0x7bb6, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x2a5d, gbc.sp());
        EXPECT(0x7bb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0012
        gbc.setState(0x72f1, 0xdf66, 0x8080, 0xa5e8, 0x633d, 0x56ef, 0x0, 0x1);
        gbc.writeMem(0x72f1, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xdf66, gbc.sp());
        EXPECT(0x72f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0013
        gbc.setState(0xc5fd, 0x8536, 0xaf30, 0x8a90, 0x7cb5, 0xbba, 0x0, 0x1);
        gbc.writeMem(0xc5fd, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x8536, gbc.sp());
        EXPECT(0xc5ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5fd));
        EXPECT(0xf8, gbc.readMem(0xc5fe));
        // CB F8 0014
        gbc.setState(0x28, 0x2727, 0x12b0, 0xced7, 0xc388, 0x6533, 0x0, 0x0);
        gbc.writeMem(0x28, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x2727, gbc.sp());
        EXPECT(0x2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0015
        gbc.setState(0x3bec, 0xc772, 0xb140, 0xac01, 0x3780, 0x5050, 0x1, 0x1);
        gbc.writeMem(0x3bec, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xc772, gbc.sp());
        EXPECT(0x3bee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0016
        gbc.setState(0xb99b, 0xac67, 0x1f30, 0x8775, 0xd174, 0x94f6, 0x0, 0x0);
        gbc.writeMem(0xb99b, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xac67, gbc.sp());
        EXPECT(0xb99d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb99b));
        EXPECT(0xf8, gbc.readMem(0xb99c));
        // CB F8 0017
        gbc.setState(0xb39b, 0x2561, 0x9600, 0x4656, 0xa08, 0x9ba9, 0x1, 0x1);
        gbc.writeMem(0xb39b, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x2561, gbc.sp());
        EXPECT(0xb39d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb39b));
        EXPECT(0xf8, gbc.readMem(0xb39c));
        // CB F8 0018
        gbc.setState(0xd19b, 0xff7c, 0xfc40, 0x7317, 0xb1f9, 0x747e, 0x1, 0x1);
        gbc.writeMem(0xd19b, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xff7c, gbc.sp());
        EXPECT(0xd19d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd19b));
        EXPECT(0xf8, gbc.readMem(0xd19c));
        // CB F8 0019
        gbc.setState(0x858b, 0x2cb4, 0xa400, 0xf03e, 0xfe8a, 0x90c2, 0x1, 0x1);
        gbc.writeMem(0x858b, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x2cb4, gbc.sp());
        EXPECT(0x858d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x858b));
        EXPECT(0xf8, gbc.readMem(0x858c));
        // CB F8 001A
        gbc.setState(0x29ab, 0xcb14, 0xf8d0, 0x14ad, 0x22b5, 0xabd8, 0x0, 0x1);
        gbc.writeMem(0x29ab, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xcb14, gbc.sp());
        EXPECT(0x29ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 001B
        gbc.setState(0x13a4, 0xddc0, 0x45c0, 0x5f73, 0xb273, 0xb2ab, 0x1, 0x0);
        gbc.writeMem(0x13a4, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xddc0, gbc.sp());
        EXPECT(0x13a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 001C
        gbc.setState(0x4ea9, 0x9b20, 0x4340, 0x6235, 0x6e65, 0x1ee6, 0x1, 0x1);
        gbc.writeMem(0x4ea9, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x9b20, gbc.sp());
        EXPECT(0x4eab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 001D
        gbc.setState(0x30b2, 0xe23d, 0x3f70, 0x6524, 0x480c, 0xaab9, 0x0, 0x0);
        gbc.writeMem(0x30b2, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xe23d, gbc.sp());
        EXPECT(0x30b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 001E
        gbc.setState(0x2aa5, 0x42a2, 0x1540, 0x38c0, 0x380, 0xa077, 0x0, 0x0);
        gbc.writeMem(0x2aa5, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x42a2, gbc.sp());
        EXPECT(0x2aa7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 001F
        gbc.setState(0x57d1, 0x4be4, 0x8810, 0x5e5d, 0xe972, 0x430a, 0x0, 0x1);
        gbc.writeMem(0x57d1, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x4be4, gbc.sp());
        EXPECT(0x57d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0020
        gbc.setState(0xb4a6, 0x71fe, 0x29c0, 0x357a, 0xaad7, 0xbc78, 0x1, 0x0);
        gbc.writeMem(0xb4a6, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x71fe, gbc.sp());
        EXPECT(0xb4a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4a6));
        EXPECT(0xf8, gbc.readMem(0xb4a7));
        // CB F8 0021
        gbc.setState(0x9328, 0xe3b3, 0x5ec0, 0x113c, 0xde4d, 0xadc3, 0x1, 0x1);
        gbc.writeMem(0x9328, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xe3b3, gbc.sp());
        EXPECT(0x932a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9328));
        EXPECT(0xf8, gbc.readMem(0x9329));
        // CB F8 0022
        gbc.setState(0x12ce, 0xffe3, 0xa520, 0x9052, 0xd2c8, 0x79fd, 0x0, 0x0);
        gbc.writeMem(0x12ce, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xffe3, gbc.sp());
        EXPECT(0x12d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0023
        gbc.setState(0xe06d, 0x7836, 0x72a0, 0x7739, 0x2c9c, 0x1ca0, 0x1, 0x0);
        gbc.writeMem(0xe06d, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x7836, gbc.sp());
        EXPECT(0xe06f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe06d));
        EXPECT(0xf8, gbc.readMem(0xe06e));
        // CB F8 0024
        gbc.setState(0x9711, 0x42ea, 0x44d0, 0x741a, 0x5591, 0xa0db, 0x0, 0x1);
        gbc.writeMem(0x9711, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x42ea, gbc.sp());
        EXPECT(0x9713, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9711));
        EXPECT(0xf8, gbc.readMem(0x9712));
        // CB F8 0025
        gbc.setState(0x469b, 0xe5a1, 0xd6b0, 0x724b, 0x617e, 0xb58d, 0x0, 0x1);
        gbc.writeMem(0x469b, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xe5a1, gbc.sp());
        EXPECT(0x469d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0026
        gbc.setState(0x5466, 0x3895, 0xc550, 0x6043, 0x37c4, 0x52b4, 0x1, 0x0);
        gbc.writeMem(0x5466, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x3895, gbc.sp());
        EXPECT(0x5468, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0027
        gbc.setState(0x5753, 0x6e68, 0x9990, 0xbbb7, 0x5a0e, 0x7ecd, 0x0, 0x1);
        gbc.writeMem(0x5753, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x6e68, gbc.sp());
        EXPECT(0x5755, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0028
        gbc.setState(0x37e0, 0x7441, 0x9820, 0x9048, 0x2844, 0x7182, 0x0, 0x1);
        gbc.writeMem(0x37e0, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x7441, gbc.sp());
        EXPECT(0x37e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0029
        gbc.setState(0xb4c2, 0xc4fb, 0xd500, 0x4b42, 0x4e6b, 0x894f, 0x0, 0x1);
        gbc.writeMem(0xb4c2, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xc4fb, gbc.sp());
        EXPECT(0xb4c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4c2));
        EXPECT(0xf8, gbc.readMem(0xb4c3));
        // CB F8 002A
        gbc.setState(0x8ed0, 0x3c27, 0x8bb0, 0x4213, 0x8dad, 0x5dca, 0x0, 0x0);
        gbc.writeMem(0x8ed0, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x3c27, gbc.sp());
        EXPECT(0x8ed2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ed0));
        EXPECT(0xf8, gbc.readMem(0x8ed1));
        // CB F8 002B
        gbc.setState(0x638b, 0x388b, 0xb6f0, 0x3a3f, 0x4a36, 0xb327, 0x1, 0x0);
        gbc.writeMem(0x638b, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x388b, gbc.sp());
        EXPECT(0x638d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 002C
        gbc.setState(0x2932, 0x3b98, 0xb300, 0xedda, 0x88e9, 0x5ac, 0x0, 0x1);
        gbc.writeMem(0x2932, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x3b98, gbc.sp());
        EXPECT(0x2934, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 002D
        gbc.setState(0x1a8d, 0x1a34, 0xc350, 0x5179, 0x4bd0, 0x1413, 0x1, 0x0);
        gbc.writeMem(0x1a8d, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x1a34, gbc.sp());
        EXPECT(0x1a8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 002E
        gbc.setState(0x4c27, 0x2648, 0xa6e0, 0x38d9, 0xfaba, 0x4002, 0x0, 0x0);
        gbc.writeMem(0x4c27, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x2648, gbc.sp());
        EXPECT(0x4c29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 002F
        gbc.setState(0x2b58, 0x74bf, 0xc710, 0xd8cb, 0xf59b, 0x163d, 0x0, 0x1);
        gbc.writeMem(0x2b58, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x74bf, gbc.sp());
        EXPECT(0x2b5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0030
        gbc.setState(0x5955, 0x4426, 0x8fd0, 0xf94a, 0xdd65, 0x98c1, 0x0, 0x0);
        gbc.writeMem(0x5955, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x4426, gbc.sp());
        EXPECT(0x5957, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0031
        gbc.setState(0xbfe3, 0x794e, 0x1f70, 0x7cfb, 0x856a, 0x671c, 0x1, 0x1);
        gbc.writeMem(0xbfe3, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x794e, gbc.sp());
        EXPECT(0xbfe5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfe3));
        EXPECT(0xf8, gbc.readMem(0xbfe4));
        // CB F8 0032
        gbc.setState(0x1b0a, 0xc649, 0xcef0, 0xa643, 0x163, 0x1fae, 0x0, 0x1);
        gbc.writeMem(0x1b0a, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xc649, gbc.sp());
        EXPECT(0x1b0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0033
        gbc.setState(0x4df7, 0x128c, 0x7a20, 0xcc6e, 0x13d0, 0x32b2, 0x1, 0x1);
        gbc.writeMem(0x4df7, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x128c, gbc.sp());
        EXPECT(0x4df9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0034
        gbc.setState(0x12c1, 0xb9f7, 0x23f0, 0x619c, 0x2c42, 0x50d5, 0x0, 0x1);
        gbc.writeMem(0x12c1, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xb9f7, gbc.sp());
        EXPECT(0x12c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0035
        gbc.setState(0x3ec5, 0x7034, 0xf220, 0xcf08, 0x492f, 0x332c, 0x1, 0x0);
        gbc.writeMem(0x3ec5, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x7034, gbc.sp());
        EXPECT(0x3ec7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0036
        gbc.setState(0xa4fc, 0xb710, 0x3e70, 0xb102, 0xb82a, 0x4649, 0x1, 0x0);
        gbc.writeMem(0xa4fc, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xb710, gbc.sp());
        EXPECT(0xa4fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4fc));
        EXPECT(0xf8, gbc.readMem(0xa4fd));
        // CB F8 0037
        gbc.setState(0xcbd3, 0x230d, 0x3650, 0x8334, 0x822d, 0x7afa, 0x1, 0x1);
        gbc.writeMem(0xcbd3, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x230d, gbc.sp());
        EXPECT(0xcbd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbd3));
        EXPECT(0xf8, gbc.readMem(0xcbd4));
        // CB F8 0038
        gbc.setState(0xc15e, 0xcb66, 0x4c00, 0xeb91, 0x4b73, 0xb127, 0x1, 0x0);
        gbc.writeMem(0xc15e, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xcb66, gbc.sp());
        EXPECT(0xc160, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc15e));
        EXPECT(0xf8, gbc.readMem(0xc15f));
        // CB F8 0039
        gbc.setState(0xd1f, 0x3ff7, 0xeaf0, 0xccff, 0x259e, 0xaee7, 0x1, 0x1);
        gbc.writeMem(0xd1f, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x3ff7, gbc.sp());
        EXPECT(0xd21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 003A
        gbc.setState(0x860b, 0x448a, 0x7a80, 0x9b47, 0x28bd, 0xab13, 0x1, 0x1);
        gbc.writeMem(0x860b, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x448a, gbc.sp());
        EXPECT(0x860d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x860b));
        EXPECT(0xf8, gbc.readMem(0x860c));
        // CB F8 003C
        gbc.setState(0x41c9, 0x995, 0xb580, 0x349, 0xf9a1, 0xfd95, 0x1, 0x0);
        gbc.writeMem(0x41c9, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x995, gbc.sp());
        EXPECT(0x41cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 003D
        gbc.setState(0xe4c3, 0xee6c, 0xdd50, 0xa18f, 0x9c55, 0x38df, 0x1, 0x0);
        gbc.writeMem(0xe4c3, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xee6c, gbc.sp());
        EXPECT(0xe4c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4c3));
        EXPECT(0xf8, gbc.readMem(0xe4c4));
        // CB F8 003E
        gbc.setState(0x78f1, 0x3bc4, 0x6bd0, 0x5129, 0x44f3, 0x429d, 0x1, 0x1);
        gbc.writeMem(0x78f1, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x3bc4, gbc.sp());
        EXPECT(0x78f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 003F
        gbc.setState(0x33e8, 0x1bdf, 0xcdb0, 0x57ef, 0x1ffd, 0x7179, 0x1, 0x0);
        gbc.writeMem(0x33e8, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x1bdf, gbc.sp());
        EXPECT(0x33ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0041
        gbc.setState(0xc648, 0x12ff, 0x2a40, 0xf2e, 0x7737, 0x9f8e, 0x0, 0x0);
        gbc.writeMem(0xc648, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x12ff, gbc.sp());
        EXPECT(0xc64a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc648));
        EXPECT(0xf8, gbc.readMem(0xc649));
        // CB F8 0042
        gbc.setState(0xc03c, 0x84db, 0x72e0, 0xdc61, 0x3d51, 0x6b72, 0x0, 0x0);
        gbc.writeMem(0xc03c, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x84db, gbc.sp());
        EXPECT(0xc03e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc03c));
        EXPECT(0xf8, gbc.readMem(0xc03d));
        // CB F8 0043
        gbc.setState(0x5b71, 0x7f99, 0x7af0, 0xb4a8, 0x7b66, 0x7ccc, 0x0, 0x1);
        gbc.writeMem(0x5b71, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x7f99, gbc.sp());
        EXPECT(0x5b73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0044
        gbc.setState(0xa8eb, 0xb434, 0x8580, 0xbb73, 0xe5bc, 0x1093, 0x0, 0x0);
        gbc.writeMem(0xa8eb, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xb434, gbc.sp());
        EXPECT(0xa8ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8eb));
        EXPECT(0xf8, gbc.readMem(0xa8ec));
        // CB F8 0045
        gbc.setState(0x7360, 0xf8e3, 0x21a0, 0x45be, 0x2e46, 0xcce1, 0x1, 0x0);
        gbc.writeMem(0x7360, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xf8e3, gbc.sp());
        EXPECT(0x7362, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0046
        gbc.setState(0xb8a4, 0x818e, 0x1f40, 0x13da, 0xef3f, 0x5d82, 0x1, 0x1);
        gbc.writeMem(0xb8a4, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x818e, gbc.sp());
        EXPECT(0xb8a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8a4));
        EXPECT(0xf8, gbc.readMem(0xb8a5));
        // CB F8 0047
        gbc.setState(0xe96b, 0x65d4, 0xe3e0, 0x958e, 0xec19, 0xc22d, 0x0, 0x1);
        gbc.writeMem(0xe96b, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x65d4, gbc.sp());
        EXPECT(0xe96d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe96b));
        EXPECT(0xf8, gbc.readMem(0xe96c));
        // CB F8 0048
        gbc.setState(0x8268, 0xb873, 0xe6e0, 0x9994, 0x36e5, 0x8c00, 0x0, 0x0);
        gbc.writeMem(0x8268, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xb873, gbc.sp());
        EXPECT(0x826a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8268));
        EXPECT(0xf8, gbc.readMem(0x8269));
        // CB F8 0049
        gbc.setState(0x95ca, 0xd03d, 0xecb0, 0xe798, 0xe5cb, 0x6f81, 0x1, 0x1);
        gbc.writeMem(0x95ca, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xd03d, gbc.sp());
        EXPECT(0x95cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95ca));
        EXPECT(0xf8, gbc.readMem(0x95cb));
        // CB F8 004A
        gbc.setState(0x76bd, 0x7d6e, 0x2b40, 0xae3a, 0x8bbb, 0x99d7, 0x0, 0x1);
        gbc.writeMem(0x76bd, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x7d6e, gbc.sp());
        EXPECT(0x76bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 004B
        gbc.setState(0xbe4d, 0xe09d, 0xa700, 0xc376, 0xd7f, 0x6347, 0x0, 0x0);
        gbc.writeMem(0xbe4d, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xe09d, gbc.sp());
        EXPECT(0xbe4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe4d));
        EXPECT(0xf8, gbc.readMem(0xbe4e));
        // CB F8 004D
        gbc.setState(0x63fb, 0xbeb1, 0xad20, 0xb725, 0x14cb, 0x326e, 0x1, 0x1);
        gbc.writeMem(0x63fb, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xbeb1, gbc.sp());
        EXPECT(0x63fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 004E
        gbc.setState(0x283f, 0x15a, 0x6970, 0x8203, 0xe4da, 0x1f46, 0x1, 0x1);
        gbc.writeMem(0x283f, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x15a, gbc.sp());
        EXPECT(0x2841, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 004F
        gbc.setState(0xd143, 0x1054, 0x1ce0, 0x22f3, 0x9d, 0x719, 0x0, 0x1);
        gbc.writeMem(0xd143, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x1054, gbc.sp());
        EXPECT(0xd145, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd143));
        EXPECT(0xf8, gbc.readMem(0xd144));
        // CB F8 0050
        gbc.setState(0x509d, 0x5474, 0xe030, 0x7db3, 0x7f84, 0x475a, 0x1, 0x1);
        gbc.writeMem(0x509d, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x5474, gbc.sp());
        EXPECT(0x509f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0051
        gbc.setState(0x4f81, 0xd2d2, 0x32e0, 0xf82e, 0x970b, 0xada7, 0x1, 0x0);
        gbc.writeMem(0x4f81, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xd2d2, gbc.sp());
        EXPECT(0x4f83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0052
        gbc.setState(0x853a, 0xedee, 0x9210, 0x1b24, 0xe378, 0xaa24, 0x1, 0x0);
        gbc.writeMem(0x853a, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xedee, gbc.sp());
        EXPECT(0x853c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x853a));
        EXPECT(0xf8, gbc.readMem(0x853b));
        // CB F8 0053
        gbc.setState(0x9ae7, 0xdc39, 0x9450, 0xad31, 0x44e3, 0x7615, 0x0, 0x0);
        gbc.writeMem(0x9ae7, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xdc39, gbc.sp());
        EXPECT(0x9ae9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ae7));
        EXPECT(0xf8, gbc.readMem(0x9ae8));
        // CB F8 0054
        gbc.setState(0x823b, 0xe8bf, 0x96e0, 0x7b58, 0xc4a0, 0x4c64, 0x0, 0x0);
        gbc.writeMem(0x823b, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xe8bf, gbc.sp());
        EXPECT(0x823d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x823b));
        EXPECT(0xf8, gbc.readMem(0x823c));
        // CB F8 0055
        gbc.setState(0x8122, 0xf826, 0x7e00, 0x5ca9, 0x555a, 0x8b6a, 0x1, 0x0);
        gbc.writeMem(0x8122, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xf826, gbc.sp());
        EXPECT(0x8124, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8122));
        EXPECT(0xf8, gbc.readMem(0x8123));
        // CB F8 0056
        gbc.setState(0xda3f, 0x9a23, 0x6c20, 0xa7fc, 0x6cd8, 0xfcba, 0x0, 0x0);
        gbc.writeMem(0xda3f, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x9a23, gbc.sp());
        EXPECT(0xda41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda3f));
        EXPECT(0xf8, gbc.readMem(0xda40));
        // CB F8 0057
        gbc.setState(0x1c7e, 0x92af, 0xb780, 0xd48, 0x60a2, 0x52d5, 0x1, 0x0);
        gbc.writeMem(0x1c7e, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x92af, gbc.sp());
        EXPECT(0x1c80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0058
        gbc.setState(0x9390, 0xcffa, 0x4e40, 0x9160, 0xcf36, 0xf09, 0x1, 0x0);
        gbc.writeMem(0x9390, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xcffa, gbc.sp());
        EXPECT(0x9392, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9390));
        EXPECT(0xf8, gbc.readMem(0x9391));
        // CB F8 0059
        gbc.setState(0x8524, 0xbffe, 0x6920, 0xf160, 0xb237, 0x2fd5, 0x0, 0x0);
        gbc.writeMem(0x8524, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xbffe, gbc.sp());
        EXPECT(0x8526, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8524));
        EXPECT(0xf8, gbc.readMem(0x8525));
        // CB F8 005A
        gbc.setState(0xb536, 0xb550, 0x64b0, 0xb9dc, 0xe113, 0x5972, 0x0, 0x0);
        gbc.writeMem(0xb536, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xb550, gbc.sp());
        EXPECT(0xb538, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb536));
        EXPECT(0xf8, gbc.readMem(0xb537));
        // CB F8 005B
        gbc.setState(0x974d, 0x120a, 0xe460, 0x5a41, 0x91, 0x8ad5, 0x0, 0x0);
        gbc.writeMem(0x974d, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x120a, gbc.sp());
        EXPECT(0x974f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x974d));
        EXPECT(0xf8, gbc.readMem(0x974e));
        // CB F8 005C
        gbc.setState(0x63f5, 0xb773, 0x8400, 0x8008, 0xf436, 0xff4f, 0x1, 0x0);
        gbc.writeMem(0x63f5, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xb773, gbc.sp());
        EXPECT(0x63f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 005D
        gbc.setState(0x8451, 0x2d11, 0x5240, 0x3e1b, 0x194b, 0x9606, 0x1, 0x0);
        gbc.writeMem(0x8451, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x2d11, gbc.sp());
        EXPECT(0x8453, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8451));
        EXPECT(0xf8, gbc.readMem(0x8452));
        // CB F8 005E
        gbc.setState(0x9e33, 0x9cf3, 0xb590, 0x9beb, 0xa2b0, 0x17b7, 0x1, 0x0);
        gbc.writeMem(0x9e33, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x9cf3, gbc.sp());
        EXPECT(0x9e35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e33));
        EXPECT(0xf8, gbc.readMem(0x9e34));
        // CB F8 005F
        gbc.setState(0x562d, 0x42ae, 0x4590, 0x7bf1, 0x9970, 0x48df, 0x0, 0x0);
        gbc.writeMem(0x562d, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x42ae, gbc.sp());
        EXPECT(0x562f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0060
        gbc.setState(0xe0f, 0x71c2, 0x9570, 0xa55b, 0x5cd6, 0x954a, 0x1, 0x0);
        gbc.writeMem(0xe0f, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x71c2, gbc.sp());
        EXPECT(0xe11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0061
        gbc.setState(0x3f6e, 0xbdad, 0xb4d0, 0x9b0d, 0x858f, 0x65ec, 0x1, 0x0);
        gbc.writeMem(0x3f6e, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xbdad, gbc.sp());
        EXPECT(0x3f70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0062
        gbc.setState(0x8281, 0x3bc1, 0x3470, 0x4bdc, 0xddf0, 0x3d92, 0x1, 0x0);
        gbc.writeMem(0x8281, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x3bc1, gbc.sp());
        EXPECT(0x8283, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8281));
        EXPECT(0xf8, gbc.readMem(0x8282));
        // CB F8 0063
        gbc.setState(0x2cd3, 0x5c24, 0xc8b0, 0xab57, 0x5548, 0xc154, 0x0, 0x0);
        gbc.writeMem(0x2cd3, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x5c24, gbc.sp());
        EXPECT(0x2cd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0064
        gbc.setState(0x4900, 0x3b54, 0x52e0, 0xbc00, 0x8296, 0xc4ac, 0x1, 0x1);
        gbc.writeMem(0x4900, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x3b54, gbc.sp());
        EXPECT(0x4902, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0065
        gbc.setState(0x72d0, 0xdc81, 0xb370, 0xfdfa, 0x6753, 0x8b9a, 0x0, 0x1);
        gbc.writeMem(0x72d0, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xdc81, gbc.sp());
        EXPECT(0x72d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0066
        gbc.setState(0xbbe2, 0xe725, 0x59e0, 0x9ff, 0x5796, 0x77e8, 0x0, 0x0);
        gbc.writeMem(0xbbe2, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xe725, gbc.sp());
        EXPECT(0xbbe4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbe2));
        EXPECT(0xf8, gbc.readMem(0xbbe3));
        // CB F8 0067
        gbc.setState(0x7bf8, 0xdd98, 0x4af0, 0xc4eb, 0x448b, 0x6c4c, 0x0, 0x1);
        gbc.writeMem(0x7bf8, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xdd98, gbc.sp());
        EXPECT(0x7bfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0068
        gbc.setState(0x8f45, 0xb732, 0x8dc0, 0x10a, 0xedf3, 0x6b2b, 0x0, 0x1);
        gbc.writeMem(0x8f45, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xb732, gbc.sp());
        EXPECT(0x8f47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f45));
        EXPECT(0xf8, gbc.readMem(0x8f46));
        // CB F8 0069
        gbc.setState(0xdebf, 0x9b82, 0x2ec0, 0xdb7a, 0x7cf1, 0x8fde, 0x0, 0x1);
        gbc.writeMem(0xdebf, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x9b82, gbc.sp());
        EXPECT(0xdec1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdebf));
        EXPECT(0xf8, gbc.readMem(0xdec0));
        // CB F8 006A
        gbc.setState(0x7d09, 0xd8fe, 0xd380, 0xf6c5, 0xb14a, 0xfde1, 0x1, 0x1);
        gbc.writeMem(0x7d09, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xd8fe, gbc.sp());
        EXPECT(0x7d0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 006B
        gbc.setState(0x64cd, 0x4cc9, 0xcbe0, 0x3137, 0x585c, 0xb906, 0x1, 0x0);
        gbc.writeMem(0x64cd, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x4cc9, gbc.sp());
        EXPECT(0x64cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 006C
        gbc.setState(0x6a2e, 0x1cde, 0x1f50, 0x8abb, 0xa603, 0xe3d, 0x1, 0x0);
        gbc.writeMem(0x6a2e, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x1cde, gbc.sp());
        EXPECT(0x6a30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 006D
        gbc.setState(0xedf4, 0xfad0, 0x72e0, 0x324b, 0x9c32, 0x2b3, 0x0, 0x1);
        gbc.writeMem(0xedf4, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xfad0, gbc.sp());
        EXPECT(0xedf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedf4));
        EXPECT(0xf8, gbc.readMem(0xedf5));
        // CB F8 006E
        gbc.setState(0x5bf2, 0x505c, 0xc030, 0x6e7a, 0x6cf, 0xbfcb, 0x0, 0x0);
        gbc.writeMem(0x5bf2, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x505c, gbc.sp());
        EXPECT(0x5bf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 006F
        gbc.setState(0x9100, 0xd7ea, 0x4a40, 0x14b4, 0x1d43, 0x8a26, 0x0, 0x0);
        gbc.writeMem(0x9100, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xd7ea, gbc.sp());
        EXPECT(0x9102, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9100));
        EXPECT(0xf8, gbc.readMem(0x9101));
        // CB F8 0070
        gbc.setState(0x25ed, 0x196c, 0x4830, 0x3a5b, 0x1335, 0xde68, 0x0, 0x0);
        gbc.writeMem(0x25ed, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x196c, gbc.sp());
        EXPECT(0x25ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0071
        gbc.setState(0xa8a4, 0x3aa4, 0x19f0, 0x424a, 0xe391, 0x60fd, 0x0, 0x0);
        gbc.writeMem(0xa8a4, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x3aa4, gbc.sp());
        EXPECT(0xa8a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8a4));
        EXPECT(0xf8, gbc.readMem(0xa8a5));
        // CB F8 0072
        gbc.setState(0x3262, 0x79a1, 0x45f0, 0x9c4b, 0xd5c9, 0x9c66, 0x1, 0x1);
        gbc.writeMem(0x3262, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x79a1, gbc.sp());
        EXPECT(0x3264, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0073
        gbc.setState(0x15a, 0x247d, 0x1680, 0xb44b, 0xf1fc, 0x7e7d, 0x0, 0x1);
        gbc.writeMem(0x15a, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x247d, gbc.sp());
        EXPECT(0x15c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0074
        gbc.setState(0x33c5, 0x8618, 0xebb0, 0x2b0b, 0xbf1e, 0x3903, 0x0, 0x0);
        gbc.writeMem(0x33c5, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x8618, gbc.sp());
        EXPECT(0x33c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0075
        gbc.setState(0x5c3d, 0xa0b5, 0xe5c0, 0x853c, 0xa47f, 0xf58a, 0x1, 0x0);
        gbc.writeMem(0x5c3d, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xa0b5, gbc.sp());
        EXPECT(0x5c3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0076
        gbc.setState(0x9b77, 0xa267, 0x3600, 0x5fc9, 0x9694, 0x9204, 0x1, 0x1);
        gbc.writeMem(0x9b77, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xa267, gbc.sp());
        EXPECT(0x9b79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b77));
        EXPECT(0xf8, gbc.readMem(0x9b78));
        // CB F8 0077
        gbc.setState(0x7696, 0xd51f, 0x4880, 0x9c21, 0x251d, 0x611c, 0x1, 0x0);
        gbc.writeMem(0x7696, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xd51f, gbc.sp());
        EXPECT(0x7698, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0078
        gbc.setState(0x89cc, 0xab52, 0x5fe0, 0xb520, 0x40de, 0x4122, 0x1, 0x1);
        gbc.writeMem(0x89cc, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xab52, gbc.sp());
        EXPECT(0x89ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89cc));
        EXPECT(0xf8, gbc.readMem(0x89cd));
        // CB F8 0079
        gbc.setState(0x930c, 0x5214, 0x6520, 0xdc74, 0xd6d1, 0xf989, 0x1, 0x1);
        gbc.writeMem(0x930c, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x5214, gbc.sp());
        EXPECT(0x930e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x930c));
        EXPECT(0xf8, gbc.readMem(0x930d));
        // CB F8 007A
        gbc.setState(0xcdcc, 0xfe4b, 0x610, 0xf89f, 0x83b4, 0x1d65, 0x1, 0x0);
        gbc.writeMem(0xcdcc, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xfe4b, gbc.sp());
        EXPECT(0xcdce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdcc));
        EXPECT(0xf8, gbc.readMem(0xcdcd));
        // CB F8 007B
        gbc.setState(0x7806, 0xa048, 0xa4f0, 0x14b, 0x999e, 0xe2c8, 0x1, 0x0);
        gbc.writeMem(0x7806, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xa048, gbc.sp());
        EXPECT(0x7808, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 007C
        gbc.setState(0x178e, 0xcba, 0xec80, 0xc3a1, 0x7322, 0x15da, 0x0, 0x1);
        gbc.writeMem(0x178e, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xcba, gbc.sp());
        EXPECT(0x1790, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 007E
        gbc.setState(0x218d, 0xb14a, 0x72f0, 0xc73e, 0x8cfb, 0xddf6, 0x1, 0x1);
        gbc.writeMem(0x218d, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xb14a, gbc.sp());
        EXPECT(0x218f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 007F
        gbc.setState(0xb04e, 0x599d, 0x5640, 0xc524, 0x38a3, 0x774c, 0x0, 0x1);
        gbc.writeMem(0xb04e, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x599d, gbc.sp());
        EXPECT(0xb050, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb04e));
        EXPECT(0xf8, gbc.readMem(0xb04f));
        // CB F8 0080
        gbc.setState(0xa59c, 0x43ad, 0x7fd0, 0xe259, 0xef14, 0x576d, 0x1, 0x1);
        gbc.writeMem(0xa59c, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x43ad, gbc.sp());
        EXPECT(0xa59e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa59c));
        EXPECT(0xf8, gbc.readMem(0xa59d));
        // CB F8 0081
        gbc.setState(0x3205, 0xc628, 0x2c10, 0xfdd, 0xdd2a, 0x2d59, 0x0, 0x1);
        gbc.writeMem(0x3205, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xc628, gbc.sp());
        EXPECT(0x3207, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0082
        gbc.setState(0x2585, 0x4151, 0xe480, 0xf91d, 0xcb67, 0xa47f, 0x1, 0x0);
        gbc.writeMem(0x2585, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x4151, gbc.sp());
        EXPECT(0x2587, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0083
        gbc.setState(0x57cd, 0xba15, 0xe5a0, 0xa92c, 0x8638, 0x9f9a, 0x0, 0x1);
        gbc.writeMem(0x57cd, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xba15, gbc.sp());
        EXPECT(0x57cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0084
        gbc.setState(0x580, 0x312a, 0x1780, 0xd5f8, 0xaf30, 0x283d, 0x0, 0x0);
        gbc.writeMem(0x580, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x312a, gbc.sp());
        EXPECT(0x582, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0085
        gbc.setState(0xaf6, 0xd8ab, 0x5260, 0xbf5a, 0x7716, 0xb8ac, 0x1, 0x1);
        gbc.writeMem(0xaf6, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xd8ab, gbc.sp());
        EXPECT(0xaf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0086
        gbc.setState(0x162f, 0x7dba, 0xc840, 0x6569, 0x9584, 0xcde9, 0x0, 0x1);
        gbc.writeMem(0x162f, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x7dba, gbc.sp());
        EXPECT(0x1631, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0087
        gbc.setState(0xd8cb, 0x28f5, 0x1ce0, 0xaf07, 0xa723, 0xa72a, 0x1, 0x0);
        gbc.writeMem(0xd8cb, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x28f5, gbc.sp());
        EXPECT(0xd8cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8cb));
        EXPECT(0xf8, gbc.readMem(0xd8cc));
        // CB F8 0088
        gbc.setState(0x398d, 0x555e, 0x3a30, 0x891b, 0x8c19, 0x6c50, 0x1, 0x1);
        gbc.writeMem(0x398d, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x555e, gbc.sp());
        EXPECT(0x398f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0089
        gbc.setState(0xa1a1, 0xfd1d, 0x3170, 0x662d, 0x200b, 0xfb16, 0x1, 0x0);
        gbc.writeMem(0xa1a1, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xfd1d, gbc.sp());
        EXPECT(0xa1a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1a1));
        EXPECT(0xf8, gbc.readMem(0xa1a2));
        // CB F8 008A
        gbc.setState(0x5a81, 0x6f7c, 0xe4e0, 0x8fc0, 0xf535, 0x56c6, 0x1, 0x0);
        gbc.writeMem(0x5a81, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x6f7c, gbc.sp());
        EXPECT(0x5a83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 008B
        gbc.setState(0x2289, 0x572b, 0xacc0, 0xdc54, 0x32d7, 0x4f56, 0x0, 0x0);
        gbc.writeMem(0x2289, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x572b, gbc.sp());
        EXPECT(0x228b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 008C
        gbc.setState(0xa5ca, 0xdb7d, 0xf4b0, 0xc819, 0x8ab7, 0xa8c0, 0x0, 0x0);
        gbc.writeMem(0xa5ca, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xdb7d, gbc.sp());
        EXPECT(0xa5cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5ca));
        EXPECT(0xf8, gbc.readMem(0xa5cb));
        // CB F8 008D
        gbc.setState(0xa32b, 0xf798, 0x1cd0, 0x25df, 0xc2c9, 0xf9cb, 0x1, 0x1);
        gbc.writeMem(0xa32b, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xf798, gbc.sp());
        EXPECT(0xa32d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa32b));
        EXPECT(0xf8, gbc.readMem(0xa32c));
        // CB F8 008E
        gbc.setState(0xdc92, 0x2fe, 0x930, 0x9b81, 0x8220, 0xa9f0, 0x1, 0x0);
        gbc.writeMem(0xdc92, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x2fe, gbc.sp());
        EXPECT(0xdc94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc92));
        EXPECT(0xf8, gbc.readMem(0xdc93));
        // CB F8 008F
        gbc.setState(0x887b, 0xc4dc, 0xcc50, 0xb31b, 0x9850, 0xdca2, 0x0, 0x1);
        gbc.writeMem(0x887b, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xc4dc, gbc.sp());
        EXPECT(0x887d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x887b));
        EXPECT(0xf8, gbc.readMem(0x887c));
        // CB F8 0090
        gbc.setState(0x506f, 0x1af9, 0xec00, 0xa524, 0xb777, 0x46ad, 0x0, 0x0);
        gbc.writeMem(0x506f, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x1af9, gbc.sp());
        EXPECT(0x5071, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0091
        gbc.setState(0x7305, 0x5a32, 0x52a0, 0x3237, 0xf207, 0x48c8, 0x0, 0x1);
        gbc.writeMem(0x7305, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x5a32, gbc.sp());
        EXPECT(0x7307, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0092
        gbc.setState(0xeb76, 0x44a0, 0x4600, 0xc08f, 0x22a4, 0xd893, 0x1, 0x0);
        gbc.writeMem(0xeb76, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x44a0, gbc.sp());
        EXPECT(0xeb78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb76));
        EXPECT(0xf8, gbc.readMem(0xeb77));
        // CB F8 0093
        gbc.setState(0x64a5, 0x5e7e, 0x1250, 0x3ff0, 0xcac1, 0xe12a, 0x0, 0x0);
        gbc.writeMem(0x64a5, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x5e7e, gbc.sp());
        EXPECT(0x64a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0094
        gbc.setState(0x10a6, 0x5d7d, 0x2300, 0x906d, 0xfd7, 0x5549, 0x1, 0x1);
        gbc.writeMem(0x10a6, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x5d7d, gbc.sp());
        EXPECT(0x10a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0095
        gbc.setState(0x52fe, 0x6561, 0xa2e0, 0x8a50, 0xc59d, 0xc8bd, 0x1, 0x0);
        gbc.writeMem(0x52fe, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x6561, gbc.sp());
        EXPECT(0x5300, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0096
        gbc.setState(0x665b, 0xf573, 0x7390, 0xb3dd, 0x1cfd, 0x7493, 0x1, 0x0);
        gbc.writeMem(0x665b, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xf573, gbc.sp());
        EXPECT(0x665d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0097
        gbc.setState(0x3ca2, 0xb00a, 0xdba0, 0xc598, 0x4560, 0xf9f1, 0x0, 0x1);
        gbc.writeMem(0x3ca2, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xb00a, gbc.sp());
        EXPECT(0x3ca4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0099
        gbc.setState(0x130, 0x50e9, 0x6e10, 0x66ce, 0xd13f, 0xf573, 0x1, 0x1);
        gbc.writeMem(0x130, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x50e9, gbc.sp());
        EXPECT(0x132, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 009A
        gbc.setState(0x3caf, 0xcd98, 0xe9f0, 0x19d6, 0x37d9, 0x1b4c, 0x1, 0x0);
        gbc.writeMem(0x3caf, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xcd98, gbc.sp());
        EXPECT(0x3cb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 009B
        gbc.setState(0x585, 0xd2ff, 0xe5c0, 0x2ee, 0xca47, 0x5c79, 0x1, 0x1);
        gbc.writeMem(0x585, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xd2ff, gbc.sp());
        EXPECT(0x587, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 009C
        gbc.setState(0xe068, 0x1447, 0x1370, 0x8848, 0x4781, 0xae8b, 0x1, 0x0);
        gbc.writeMem(0xe068, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x1447, gbc.sp());
        EXPECT(0xe06a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe068));
        EXPECT(0xf8, gbc.readMem(0xe069));
        // CB F8 009D
        gbc.setState(0xc2bc, 0x65dc, 0xf6e0, 0xca0e, 0xdd40, 0xc24b, 0x0, 0x0);
        gbc.writeMem(0xc2bc, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x65dc, gbc.sp());
        EXPECT(0xc2be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2bc));
        EXPECT(0xf8, gbc.readMem(0xc2bd));
        // CB F8 009E
        gbc.setState(0x8a07, 0x1708, 0x4690, 0x8cb2, 0x7805, 0xfb47, 0x0, 0x0);
        gbc.writeMem(0x8a07, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x1708, gbc.sp());
        EXPECT(0x8a09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a07));
        EXPECT(0xf8, gbc.readMem(0x8a08));
        // CB F8 009F
        gbc.setState(0x5477, 0x6474, 0x3800, 0x8018, 0x1622, 0x7f39, 0x0, 0x1);
        gbc.writeMem(0x5477, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x6474, gbc.sp());
        EXPECT(0x5479, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 00A0
        gbc.setState(0xa04c, 0xc8c5, 0x5050, 0x6521, 0x9930, 0x6ec6, 0x0, 0x1);
        gbc.writeMem(0xa04c, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xc8c5, gbc.sp());
        EXPECT(0xa04e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa04c));
        EXPECT(0xf8, gbc.readMem(0xa04d));
        // CB F8 00A1
        gbc.setState(0xce62, 0x3f94, 0xc730, 0xa313, 0xc480, 0x925f, 0x1, 0x1);
        gbc.writeMem(0xce62, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x3f94, gbc.sp());
        EXPECT(0xce64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce62));
        EXPECT(0xf8, gbc.readMem(0xce63));
        // CB F8 00A3
        gbc.setState(0x9bfb, 0xaedd, 0x96b0, 0x8d29, 0xd2a2, 0x4f64, 0x0, 0x1);
        gbc.writeMem(0x9bfb, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xaedd, gbc.sp());
        EXPECT(0x9bfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bfb));
        EXPECT(0xf8, gbc.readMem(0x9bfc));
        // CB F8 00A4
        gbc.setState(0x49f7, 0x8881, 0x5340, 0x1d62, 0xf57b, 0x2a1b, 0x0, 0x1);
        gbc.writeMem(0x49f7, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x8881, gbc.sp());
        EXPECT(0x49f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 00A5
        gbc.setState(0x3d7a, 0x9269, 0x6cd0, 0x16fc, 0x27f5, 0x80f4, 0x0, 0x0);
        gbc.writeMem(0x3d7a, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x9269, gbc.sp());
        EXPECT(0x3d7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 00A6
        gbc.setState(0x7c7c, 0x44fa, 0x6ad0, 0x199a, 0xbba, 0xdefb, 0x1, 0x0);
        gbc.writeMem(0x7c7c, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x44fa, gbc.sp());
        EXPECT(0x7c7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 00A7
        gbc.setState(0xbb2b, 0x72e1, 0xabc0, 0x1f9d, 0x1452, 0x6c5a, 0x1, 0x0);
        gbc.writeMem(0xbb2b, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x72e1, gbc.sp());
        EXPECT(0xbb2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb2b));
        EXPECT(0xf8, gbc.readMem(0xbb2c));
        // CB F8 00A8
        gbc.setState(0x6279, 0x6203, 0xb140, 0x680e, 0x7cf6, 0x5a88, 0x0, 0x1);
        gbc.writeMem(0x6279, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x6203, gbc.sp());
        EXPECT(0x627b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 00A9
        gbc.setState(0x84b0, 0xd73d, 0x4730, 0xce74, 0x36e, 0x3df2, 0x1, 0x0);
        gbc.writeMem(0x84b0, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xd73d, gbc.sp());
        EXPECT(0x84b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84b0));
        EXPECT(0xf8, gbc.readMem(0x84b1));
        // CB F8 00AA
        gbc.setState(0x684e, 0xf246, 0xa60, 0x472f, 0x2c48, 0xac2c, 0x1, 0x1);
        gbc.writeMem(0x684e, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xf246, gbc.sp());
        EXPECT(0x6850, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 00AB
        gbc.setState(0x92f, 0x5987, 0x99c0, 0x254c, 0x940c, 0xf220, 0x0, 0x0);
        gbc.writeMem(0x92f, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x5987, gbc.sp());
        EXPECT(0x931, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 00AC
        gbc.setState(0xdf34, 0x37e2, 0x2300, 0x274a, 0xd36f, 0xb5a4, 0x1, 0x0);
        gbc.writeMem(0xdf34, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x37e2, gbc.sp());
        EXPECT(0xdf36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf34));
        EXPECT(0xf8, gbc.readMem(0xdf35));
        // CB F8 00AD
        gbc.setState(0x95b7, 0xd258, 0xd580, 0x6eee, 0x3942, 0xa747, 0x0, 0x0);
        gbc.writeMem(0x95b7, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xd258, gbc.sp());
        EXPECT(0x95b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95b7));
        EXPECT(0xf8, gbc.readMem(0x95b8));
        // CB F8 00AE
        gbc.setState(0xabc4, 0x957f, 0xc840, 0x5f11, 0xfc39, 0xe9fd, 0x1, 0x0);
        gbc.writeMem(0xabc4, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x957f, gbc.sp());
        EXPECT(0xabc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabc4));
        EXPECT(0xf8, gbc.readMem(0xabc5));
        // CB F8 00AF
        gbc.setState(0xb887, 0x508d, 0x4640, 0x9243, 0x87ec, 0x75e, 0x0, 0x1);
        gbc.writeMem(0xb887, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x508d, gbc.sp());
        EXPECT(0xb889, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb887));
        EXPECT(0xf8, gbc.readMem(0xb888));
        // CB F8 00B0
        gbc.setState(0x7a1d, 0xde8a, 0x2460, 0x9f9a, 0xbd85, 0x87fe, 0x1, 0x0);
        gbc.writeMem(0x7a1d, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xde8a, gbc.sp());
        EXPECT(0x7a1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 00B1
        gbc.setState(0x4f0a, 0xf8f1, 0x8aa0, 0x5ebb, 0x3740, 0xd659, 0x1, 0x0);
        gbc.writeMem(0x4f0a, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xf8f1, gbc.sp());
        EXPECT(0x4f0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 00B2
        gbc.setState(0x939b, 0xefb2, 0x1f00, 0xf4cd, 0xc17e, 0x65a2, 0x0, 0x0);
        gbc.writeMem(0x939b, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xefb2, gbc.sp());
        EXPECT(0x939d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x939b));
        EXPECT(0xf8, gbc.readMem(0x939c));
        // CB F8 00B3
        gbc.setState(0xc75d, 0xc7b1, 0x3620, 0x55b8, 0x20ea, 0x22c6, 0x0, 0x0);
        gbc.writeMem(0xc75d, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xc7b1, gbc.sp());
        EXPECT(0xc75f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc75d));
        EXPECT(0xf8, gbc.readMem(0xc75e));
        // CB F8 00B4
        gbc.setState(0xae46, 0xec1b, 0x5c60, 0xcc52, 0x6177, 0x9edb, 0x0, 0x0);
        gbc.writeMem(0xae46, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xec1b, gbc.sp());
        EXPECT(0xae48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae46));
        EXPECT(0xf8, gbc.readMem(0xae47));
        // CB F8 00B5
        gbc.setState(0x88ff, 0xe888, 0x65a0, 0x94b2, 0x8184, 0x9b19, 0x1, 0x0);
        gbc.writeMem(0x88ff, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xe888, gbc.sp());
        EXPECT(0x8901, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88ff));
        EXPECT(0xf8, gbc.readMem(0x8900));
        // CB F8 00B6
        gbc.setState(0xa8d1, 0x60ec, 0x6c50, 0xe501, 0x465a, 0xb1b2, 0x0, 0x0);
        gbc.writeMem(0xa8d1, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x60ec, gbc.sp());
        EXPECT(0xa8d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8d1));
        EXPECT(0xf8, gbc.readMem(0xa8d2));
        // CB F8 00B7
        gbc.setState(0x2cc5, 0x811, 0x8cb0, 0x6979, 0xcb44, 0x8e9b, 0x1, 0x0);
        gbc.writeMem(0x2cc5, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x811, gbc.sp());
        EXPECT(0x2cc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 00B8
        gbc.setState(0xd2aa, 0x5271, 0xe820, 0x163f, 0x1802, 0xba66, 0x0, 0x1);
        gbc.writeMem(0xd2aa, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x5271, gbc.sp());
        EXPECT(0xd2ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2aa));
        EXPECT(0xf8, gbc.readMem(0xd2ab));
        // CB F8 00B9
        gbc.setState(0x5a05, 0x19b4, 0x8250, 0x6e1b, 0x8045, 0x5c05, 0x0, 0x0);
        gbc.writeMem(0x5a05, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x19b4, gbc.sp());
        EXPECT(0x5a07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 00BA
        gbc.setState(0x94cd, 0x92bb, 0x38e0, 0x507c, 0xc947, 0x1305, 0x1, 0x1);
        gbc.writeMem(0x94cd, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x92bb, gbc.sp());
        EXPECT(0x94cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94cd));
        EXPECT(0xf8, gbc.readMem(0x94ce));
        // CB F8 00BB
        gbc.setState(0x8c89, 0x7b04, 0x4230, 0x7e16, 0x3cd3, 0x856e, 0x1, 0x1);
        gbc.writeMem(0x8c89, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x7b04, gbc.sp());
        EXPECT(0x8c8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c89));
        EXPECT(0xf8, gbc.readMem(0x8c8a));
        // CB F8 00BC
        gbc.setState(0x165a, 0x622c, 0xa2d0, 0x246d, 0xcd01, 0x2243, 0x1, 0x0);
        gbc.writeMem(0x165a, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x622c, gbc.sp());
        EXPECT(0x165c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 00BD
        gbc.setState(0x1e24, 0xdd1b, 0x5670, 0xc5d3, 0xad61, 0x87c4, 0x0, 0x0);
        gbc.writeMem(0x1e24, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xdd1b, gbc.sp());
        EXPECT(0x1e26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 00BE
        gbc.setState(0xd156, 0x4296, 0x4f30, 0x8ab5, 0x336b, 0xeeea, 0x1, 0x0);
        gbc.writeMem(0xd156, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x4296, gbc.sp());
        EXPECT(0xd158, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd156));
        EXPECT(0xf8, gbc.readMem(0xd157));
        // CB F8 00BF
        gbc.setState(0x61b0, 0x49fb, 0x1880, 0xc2c4, 0x49c3, 0x21e5, 0x1, 0x0);
        gbc.writeMem(0x61b0, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x49fb, gbc.sp());
        EXPECT(0x61b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 00C0
        gbc.setState(0xe6b4, 0xb224, 0xd440, 0x7077, 0xbc4d, 0xc680, 0x1, 0x1);
        gbc.writeMem(0xe6b4, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xb224, gbc.sp());
        EXPECT(0xe6b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6b4));
        EXPECT(0xf8, gbc.readMem(0xe6b5));
        // CB F8 00C1
        gbc.setState(0xe71b, 0xc0d7, 0x5160, 0x877a, 0xe580, 0xf3a9, 0x1, 0x0);
        gbc.writeMem(0xe71b, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xc0d7, gbc.sp());
        EXPECT(0xe71d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe71b));
        EXPECT(0xf8, gbc.readMem(0xe71c));
        // CB F8 00C2
        gbc.setState(0xebf6, 0x7d78, 0xe480, 0xa9c5, 0x13b5, 0x44b9, 0x0, 0x0);
        gbc.writeMem(0xebf6, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x7d78, gbc.sp());
        EXPECT(0xebf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebf6));
        EXPECT(0xf8, gbc.readMem(0xebf7));
        // CB F8 00C3
        gbc.setState(0xa9cd, 0x3796, 0x53d0, 0xed3a, 0x9057, 0x34f4, 0x1, 0x0);
        gbc.writeMem(0xa9cd, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x3796, gbc.sp());
        EXPECT(0xa9cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9cd));
        EXPECT(0xf8, gbc.readMem(0xa9ce));
        // CB F8 00C4
        gbc.setState(0x80ec, 0xf53e, 0xe260, 0xcbdd, 0xf7bb, 0xb7c5, 0x1, 0x1);
        gbc.writeMem(0x80ec, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xf53e, gbc.sp());
        EXPECT(0x80ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80ec));
        EXPECT(0xf8, gbc.readMem(0x80ed));
        // CB F8 00C5
        gbc.setState(0x8adb, 0xf325, 0x10f0, 0xd91a, 0xdd2e, 0x30c8, 0x1, 0x1);
        gbc.writeMem(0x8adb, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xf325, gbc.sp());
        EXPECT(0x8add, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8adb));
        EXPECT(0xf8, gbc.readMem(0x8adc));
        // CB F8 00C6
        gbc.setState(0x3a9c, 0xbc3c, 0xb5b0, 0x7d12, 0xbbc5, 0x4487, 0x0, 0x0);
        gbc.writeMem(0x3a9c, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xbc3c, gbc.sp());
        EXPECT(0x3a9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 00C7
        gbc.setState(0xb82c, 0x1018, 0x97a0, 0xeab1, 0x2c88, 0x5050, 0x0, 0x0);
        gbc.writeMem(0xb82c, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x1018, gbc.sp());
        EXPECT(0xb82e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb82c));
        EXPECT(0xf8, gbc.readMem(0xb82d));
        // CB F8 00C8
        gbc.setState(0xb70c, 0x41d6, 0xa3a0, 0x75b2, 0x5df0, 0x2481, 0x1, 0x1);
        gbc.writeMem(0xb70c, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x41d6, gbc.sp());
        EXPECT(0xb70e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb70c));
        EXPECT(0xf8, gbc.readMem(0xb70d));
        // CB F8 00C9
        gbc.setState(0xbb0, 0x8ff3, 0xb1b0, 0x7462, 0x26d5, 0xce0f, 0x0, 0x1);
        gbc.writeMem(0xbb0, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x8ff3, gbc.sp());
        EXPECT(0xbb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 00CA
        gbc.setState(0xcb36, 0xd56b, 0xbef0, 0xa8e9, 0xcb26, 0xfa2c, 0x1, 0x0);
        gbc.writeMem(0xcb36, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xd56b, gbc.sp());
        EXPECT(0xcb38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb36));
        EXPECT(0xf8, gbc.readMem(0xcb37));
        // CB F8 00CC
        gbc.setState(0x4176, 0xf764, 0x8510, 0xbc, 0x1b7e, 0x7d9c, 0x1, 0x1);
        gbc.writeMem(0x4176, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xf764, gbc.sp());
        EXPECT(0x4178, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 00CD
        gbc.setState(0x6234, 0x1d61, 0xe340, 0x77b, 0x32cd, 0xcf42, 0x1, 0x0);
        gbc.writeMem(0x6234, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x1d61, gbc.sp());
        EXPECT(0x6236, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 00CE
        gbc.setState(0x9ec6, 0x3cb3, 0xfba0, 0xae1d, 0x2565, 0x6ae0, 0x1, 0x1);
        gbc.writeMem(0x9ec6, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x3cb3, gbc.sp());
        EXPECT(0x9ec8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ec6));
        EXPECT(0xf8, gbc.readMem(0x9ec7));
        // CB F8 00CF
        gbc.setState(0x6ab0, 0xe470, 0x2390, 0x374, 0x41d0, 0xcd2a, 0x1, 0x1);
        gbc.writeMem(0x6ab0, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xe470, gbc.sp());
        EXPECT(0x6ab2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 00D0
        gbc.setState(0xd54c, 0x3d1a, 0x4060, 0x9214, 0x8617, 0x8072, 0x0, 0x1);
        gbc.writeMem(0xd54c, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x3d1a, gbc.sp());
        EXPECT(0xd54e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd54c));
        EXPECT(0xf8, gbc.readMem(0xd54d));
        // CB F8 00D1
        gbc.setState(0xa4af, 0x6032, 0xa9b0, 0x1cd2, 0xffea, 0xce73, 0x0, 0x1);
        gbc.writeMem(0xa4af, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x6032, gbc.sp());
        EXPECT(0xa4b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4af));
        EXPECT(0xf8, gbc.readMem(0xa4b0));
        // CB F8 00D2
        gbc.setState(0xdc85, 0xcc4f, 0x7de0, 0xbe93, 0x582c, 0xe039, 0x1, 0x0);
        gbc.writeMem(0xdc85, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xcc4f, gbc.sp());
        EXPECT(0xdc87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc85));
        EXPECT(0xf8, gbc.readMem(0xdc86));
        // CB F8 00D3
        gbc.setState(0x712e, 0xa810, 0x4900, 0x7688, 0x266d, 0x4c38, 0x0, 0x1);
        gbc.writeMem(0x712e, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xa810, gbc.sp());
        EXPECT(0x7130, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 00D4
        gbc.setState(0x68cc, 0x8455, 0xb0, 0x5dd1, 0x665a, 0xcc5b, 0x1, 0x0);
        gbc.writeMem(0x68cc, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x8455, gbc.sp());
        EXPECT(0x68ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 00D5
        gbc.setState(0xcd5d, 0xf0c0, 0x72b0, 0x6f3b, 0x8cd, 0xd08c, 0x0, 0x1);
        gbc.writeMem(0xcd5d, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xf0c0, gbc.sp());
        EXPECT(0xcd5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd5d));
        EXPECT(0xf8, gbc.readMem(0xcd5e));
        // CB F8 00D6
        gbc.setState(0x5c2b, 0x9c4d, 0x5c20, 0x9c67, 0x757f, 0x65c5, 0x0, 0x1);
        gbc.writeMem(0x5c2b, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x9c4d, gbc.sp());
        EXPECT(0x5c2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 00D7
        gbc.setState(0x3cb0, 0x35e1, 0xbcd0, 0xa86a, 0x7eed, 0x7984, 0x0, 0x1);
        gbc.writeMem(0x3cb0, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x35e1, gbc.sp());
        EXPECT(0x3cb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 00D8
        gbc.setState(0x2926, 0x82b4, 0xaa30, 0xea79, 0xdf48, 0x6cb5, 0x1, 0x0);
        gbc.writeMem(0x2926, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x82b4, gbc.sp());
        EXPECT(0x2928, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 00D9
        gbc.setState(0x572b, 0xab5b, 0xdd20, 0x9874, 0x6295, 0x1353, 0x1, 0x0);
        gbc.writeMem(0x572b, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xab5b, gbc.sp());
        EXPECT(0x572d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 00DA
        gbc.setState(0x58c0, 0x5207, 0x91b0, 0xa94, 0x4c9c, 0xb86a, 0x1, 0x1);
        gbc.writeMem(0x58c0, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x5207, gbc.sp());
        EXPECT(0x58c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 00DB
        gbc.setState(0x6920, 0x6ee8, 0xe7b0, 0xd01e, 0x7756, 0xc7e1, 0x1, 0x0);
        gbc.writeMem(0x6920, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x6ee8, gbc.sp());
        EXPECT(0x6922, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 00DD
        gbc.setState(0x55de, 0x2dda, 0xb650, 0xb806, 0x120f, 0x16e7, 0x0, 0x0);
        gbc.writeMem(0x55de, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x2dda, gbc.sp());
        EXPECT(0x55e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 00E0
        gbc.setState(0x7f9a, 0xaef5, 0xefe0, 0x7251, 0x491a, 0x99b2, 0x0, 0x1);
        gbc.writeMem(0x7f9a, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xaef5, gbc.sp());
        EXPECT(0x7f9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 00E1
        gbc.setState(0xc603, 0x6d10, 0xa400, 0x2216, 0x796b, 0x86d5, 0x1, 0x1);
        gbc.writeMem(0xc603, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x6d10, gbc.sp());
        EXPECT(0xc605, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc603));
        EXPECT(0xf8, gbc.readMem(0xc604));
        // CB F8 00E3
        gbc.setState(0x8d18, 0xf735, 0x9e00, 0x4348, 0x61cb, 0x274b, 0x1, 0x0);
        gbc.writeMem(0x8d18, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xf735, gbc.sp());
        EXPECT(0x8d1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d18));
        EXPECT(0xf8, gbc.readMem(0x8d19));
        // CB F8 00E4
        gbc.setState(0x755c, 0xa494, 0x7000, 0xae17, 0x2640, 0x9b71, 0x1, 0x0);
        gbc.writeMem(0x755c, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xa494, gbc.sp());
        EXPECT(0x755e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 00E5
        gbc.setState(0xad2a, 0xef5e, 0xc030, 0xab2a, 0x7e07, 0xc7d7, 0x1, 0x1);
        gbc.writeMem(0xad2a, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xef5e, gbc.sp());
        EXPECT(0xad2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad2a));
        EXPECT(0xf8, gbc.readMem(0xad2b));
        // CB F8 00E6
        gbc.setState(0x7fc, 0x83ca, 0x3250, 0xc3a3, 0xd0d1, 0xb282, 0x1, 0x0);
        gbc.writeMem(0x7fc, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x83ca, gbc.sp());
        EXPECT(0x7fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 00E7
        gbc.setState(0x7b7b, 0x7bc1, 0x5000, 0x8812, 0x539e, 0x3768, 0x0, 0x0);
        gbc.writeMem(0x7b7b, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x7bc1, gbc.sp());
        EXPECT(0x7b7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 00E8
        gbc.setState(0xb028, 0xb327, 0xb330, 0xd731, 0x4ba6, 0xf5df, 0x0, 0x1);
        gbc.writeMem(0xb028, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xb327, gbc.sp());
        EXPECT(0xb02a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb028));
        EXPECT(0xf8, gbc.readMem(0xb029));
        // CB F8 00E9
        gbc.setState(0xbc24, 0xf678, 0xc5a0, 0xd01b, 0xc18b, 0x3e77, 0x1, 0x1);
        gbc.writeMem(0xbc24, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xf678, gbc.sp());
        EXPECT(0xbc26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc24));
        EXPECT(0xf8, gbc.readMem(0xbc25));
        // CB F8 00EC
        gbc.setState(0x831f, 0x12ea, 0x5f50, 0x9b1d, 0xf7a, 0x29c3, 0x1, 0x1);
        gbc.writeMem(0x831f, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x12ea, gbc.sp());
        EXPECT(0x8321, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x831f));
        EXPECT(0xf8, gbc.readMem(0x8320));
        // CB F8 00ED
        gbc.setState(0x7420, 0xa7a2, 0xabf0, 0x6b8e, 0xb397, 0xcd85, 0x1, 0x0);
        gbc.writeMem(0x7420, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xa7a2, gbc.sp());
        EXPECT(0x7422, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 00EE
        gbc.setState(0x12c8, 0xf7fd, 0x52f0, 0xadd7, 0x1c4a, 0x9b54, 0x0, 0x0);
        gbc.writeMem(0x12c8, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xf7fd, gbc.sp());
        EXPECT(0x12ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 00EF
        gbc.setState(0x129a, 0xd81, 0xe240, 0xdacc, 0xaf67, 0xb9e0, 0x1, 0x0);
        gbc.writeMem(0x129a, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xd81, gbc.sp());
        EXPECT(0x129c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 00F0
        gbc.setState(0x841e, 0x91ef, 0x8930, 0xcf0f, 0xd721, 0x42d2, 0x1, 0x1);
        gbc.writeMem(0x841e, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x91ef, gbc.sp());
        EXPECT(0x8420, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x841e));
        EXPECT(0xf8, gbc.readMem(0x841f));
        // CB F8 00F1
        gbc.setState(0x90c7, 0x9e89, 0xc950, 0x5ead, 0x3d6c, 0xde0, 0x1, 0x1);
        gbc.writeMem(0x90c7, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x9e89, gbc.sp());
        EXPECT(0x90c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90c7));
        EXPECT(0xf8, gbc.readMem(0x90c8));
        // CB F8 00F2
        gbc.setState(0x806d, 0xf422, 0x7780, 0xa8f1, 0x76ed, 0xa2ec, 0x1, 0x0);
        gbc.writeMem(0x806d, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xf422, gbc.sp());
        EXPECT(0x806f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x806d));
        EXPECT(0xf8, gbc.readMem(0x806e));
        // CB F8 00F3
        gbc.setState(0x7f0f, 0x8fb0, 0x54f0, 0x2002, 0xa110, 0x4b2b, 0x0, 0x1);
        gbc.writeMem(0x7f0f, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x8fb0, gbc.sp());
        EXPECT(0x7f11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 00F4
        gbc.setState(0xc8bf, 0x70d2, 0xd1e0, 0xa45c, 0xcb06, 0x750f, 0x0, 0x1);
        gbc.writeMem(0xc8bf, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x70d2, gbc.sp());
        EXPECT(0xc8c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8bf));
        EXPECT(0xf8, gbc.readMem(0xc8c0));
        // CB F8 00F5
        gbc.setState(0xaee0, 0xdfa2, 0x40f0, 0xbd67, 0x41a8, 0x5ab6, 0x1, 0x0);
        gbc.writeMem(0xaee0, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xdfa2, gbc.sp());
        EXPECT(0xaee2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaee0));
        EXPECT(0xf8, gbc.readMem(0xaee1));
        // CB F8 00F6
        gbc.setState(0x3c7a, 0x6d65, 0xbc20, 0x45cf, 0xd8a1, 0x24a, 0x1, 0x1);
        gbc.writeMem(0x3c7a, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x6d65, gbc.sp());
        EXPECT(0x3c7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 00F7
        gbc.setState(0xbef, 0xa3ba, 0xfb70, 0xc8a, 0xc04e, 0xfb2a, 0x0, 0x1);
        gbc.writeMem(0xbef, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xa3ba, gbc.sp());
        EXPECT(0xbf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 00F8
        gbc.setState(0xe993, 0x72e9, 0x9660, 0xcb9f, 0xbf3a, 0xdce, 0x1, 0x0);
        gbc.writeMem(0xe993, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x72e9, gbc.sp());
        EXPECT(0xe995, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe993));
        EXPECT(0xf8, gbc.readMem(0xe994));
        // CB F8 00F9
        gbc.setState(0x5e4e, 0xdf22, 0x7bb0, 0xdc92, 0x91b8, 0xbb31, 0x1, 0x0);
        gbc.writeMem(0x5e4e, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xdf22, gbc.sp());
        EXPECT(0x5e50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 00FB
        gbc.setState(0x8994, 0x815, 0x35a0, 0xf32f, 0x40da, 0xf73b, 0x0, 0x1);
        gbc.writeMem(0x8994, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x815, gbc.sp());
        EXPECT(0x8996, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8994));
        EXPECT(0xf8, gbc.readMem(0x8995));
        // CB F8 00FC
        gbc.setState(0xdc30, 0x5232, 0xec00, 0xeea2, 0x42d6, 0xb8b4, 0x1, 0x0);
        gbc.writeMem(0xdc30, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x5232, gbc.sp());
        EXPECT(0xdc32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc30));
        EXPECT(0xf8, gbc.readMem(0xdc31));
        // CB F8 00FD
        gbc.setState(0x8132, 0x8eef, 0x2040, 0xaa66, 0x3067, 0x1cd5, 0x1, 0x1);
        gbc.writeMem(0x8132, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x8eef, gbc.sp());
        EXPECT(0x8134, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8132));
        EXPECT(0xf8, gbc.readMem(0x8133));
        // CB F8 00FE
        gbc.setState(0xb975, 0x1dc4, 0x7e10, 0x935f, 0xeff3, 0x712c, 0x0, 0x0);
        gbc.writeMem(0xb975, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x1dc4, gbc.sp());
        EXPECT(0xb977, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb975));
        EXPECT(0xf8, gbc.readMem(0xb976));
        // CB F8 00FF
        gbc.setState(0x40a9, 0xa726, 0xee80, 0xc1cf, 0x1a86, 0x4f10, 0x0, 0x1);
        gbc.writeMem(0x40a9, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xa726, gbc.sp());
        EXPECT(0x40ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0100
        gbc.setState(0x343, 0x831, 0xdc0, 0xee08, 0x53ce, 0x5e18, 0x0, 0x0);
        gbc.writeMem(0x343, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x831, gbc.sp());
        EXPECT(0x345, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0101
        gbc.setState(0xb9fe, 0x5e9d, 0xcc90, 0xcdac, 0x6a28, 0xcd9a, 0x1, 0x0);
        gbc.writeMem(0xb9fe, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x5e9d, gbc.sp());
        EXPECT(0xba00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9fe));
        EXPECT(0xf8, gbc.readMem(0xb9ff));
        // CB F8 0102
        gbc.setState(0x5225, 0x612, 0xbf80, 0x88c0, 0x94ac, 0x23b8, 0x0, 0x0);
        gbc.writeMem(0x5225, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x612, gbc.sp());
        EXPECT(0x5227, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0103
        gbc.setState(0x7763, 0xd688, 0x17c0, 0x89d8, 0x5256, 0x406a, 0x0, 0x0);
        gbc.writeMem(0x7763, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xd688, gbc.sp());
        EXPECT(0x7765, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0104
        gbc.setState(0xdbdc, 0x7203, 0x6e80, 0xb2d3, 0xbdb4, 0x9dcd, 0x1, 0x0);
        gbc.writeMem(0xdbdc, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x7203, gbc.sp());
        EXPECT(0xdbde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbdc));
        EXPECT(0xf8, gbc.readMem(0xdbdd));
        // CB F8 0106
        gbc.setState(0x4631, 0x7a4d, 0x1c90, 0x84b8, 0x2991, 0x7f53, 0x0, 0x1);
        gbc.writeMem(0x4631, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x7a4d, gbc.sp());
        EXPECT(0x4633, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0107
        gbc.setState(0x6802, 0xdc8a, 0x5020, 0x9903, 0xe66e, 0x34dc, 0x1, 0x1);
        gbc.writeMem(0x6802, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xdc8a, gbc.sp());
        EXPECT(0x6804, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0108
        gbc.setState(0x714, 0x982d, 0x3c90, 0x3c3a, 0xb206, 0x812, 0x0, 0x1);
        gbc.writeMem(0x714, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x982d, gbc.sp());
        EXPECT(0x716, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0109
        gbc.setState(0x4ee0, 0xfc92, 0xa0, 0x43c3, 0x587f, 0xd39f, 0x1, 0x1);
        gbc.writeMem(0x4ee0, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xfc92, gbc.sp());
        EXPECT(0x4ee2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 010A
        gbc.setState(0xa5d3, 0xdded, 0x9a60, 0xef04, 0xb647, 0x8046, 0x0, 0x0);
        gbc.writeMem(0xa5d3, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xdded, gbc.sp());
        EXPECT(0xa5d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5d3));
        EXPECT(0xf8, gbc.readMem(0xa5d4));
        // CB F8 010B
        gbc.setState(0x37e7, 0x7e27, 0x6a20, 0x66ee, 0xd6e5, 0x263e, 0x1, 0x1);
        gbc.writeMem(0x37e7, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x7e27, gbc.sp());
        EXPECT(0x37e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 010C
        gbc.setState(0x65c, 0xb9cf, 0x3fe0, 0xbf01, 0x3705, 0x3b2d, 0x0, 0x0);
        gbc.writeMem(0x65c, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xb9cf, gbc.sp());
        EXPECT(0x65e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 010D
        gbc.setState(0x6ab3, 0x30a, 0x96a0, 0xc67b, 0x60b0, 0x723c, 0x0, 0x1);
        gbc.writeMem(0x6ab3, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x30a, gbc.sp());
        EXPECT(0x6ab5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 010E
        gbc.setState(0x9b5a, 0x7e8, 0x1a20, 0xe2c5, 0xd4b6, 0x37e7, 0x0, 0x1);
        gbc.writeMem(0x9b5a, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x7e8, gbc.sp());
        EXPECT(0x9b5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b5a));
        EXPECT(0xf8, gbc.readMem(0x9b5b));
        // CB F8 010F
        gbc.setState(0x445a, 0xadbb, 0xe9a0, 0xafca, 0x77c, 0x501a, 0x0, 0x1);
        gbc.writeMem(0x445a, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xadbb, gbc.sp());
        EXPECT(0x445c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0110
        gbc.setState(0x3456, 0x4160, 0x3ee0, 0x6b8a, 0x9b4a, 0xb9fc, 0x1, 0x1);
        gbc.writeMem(0x3456, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x4160, gbc.sp());
        EXPECT(0x3458, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0111
        gbc.setState(0x4d5, 0xcfa4, 0x1a0, 0x157f, 0x2f08, 0x3f5e, 0x1, 0x0);
        gbc.writeMem(0x4d5, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xcfa4, gbc.sp());
        EXPECT(0x4d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0112
        gbc.setState(0x95ce, 0x85d0, 0xd6e0, 0xc21c, 0x8918, 0xd860, 0x0, 0x0);
        gbc.writeMem(0x95ce, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x85d0, gbc.sp());
        EXPECT(0x95d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95ce));
        EXPECT(0xf8, gbc.readMem(0x95cf));
        // CB F8 0113
        gbc.setState(0x4793, 0xec7a, 0x3510, 0x7c15, 0x39a2, 0xff8f, 0x0, 0x0);
        gbc.writeMem(0x4793, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xec7a, gbc.sp());
        EXPECT(0x4795, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0114
        gbc.setState(0x62e7, 0x6b08, 0x610, 0x4ea8, 0x6b57, 0xe19, 0x0, 0x1);
        gbc.writeMem(0x62e7, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x6b08, gbc.sp());
        EXPECT(0x62e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0115
        gbc.setState(0xb221, 0xc095, 0x7e80, 0x51d9, 0xc3be, 0x8f72, 0x0, 0x1);
        gbc.writeMem(0xb221, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xc095, gbc.sp());
        EXPECT(0xb223, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb221));
        EXPECT(0xf8, gbc.readMem(0xb222));
        // CB F8 0116
        gbc.setState(0xdd9e, 0xd787, 0x4bd0, 0xcfe1, 0x3fa7, 0xa2d3, 0x1, 0x1);
        gbc.writeMem(0xdd9e, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xd787, gbc.sp());
        EXPECT(0xdda0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd9e));
        EXPECT(0xf8, gbc.readMem(0xdd9f));
        // CB F8 0117
        gbc.setState(0xc2b2, 0x58f2, 0xbef0, 0x7c7e, 0x3aca, 0x78ed, 0x1, 0x1);
        gbc.writeMem(0xc2b2, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x58f2, gbc.sp());
        EXPECT(0xc2b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2b2));
        EXPECT(0xf8, gbc.readMem(0xc2b3));
        // CB F8 0118
        gbc.setState(0x2a48, 0x7395, 0x7080, 0xa654, 0xc317, 0xe19e, 0x1, 0x0);
        gbc.writeMem(0x2a48, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x7395, gbc.sp());
        EXPECT(0x2a4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0119
        gbc.setState(0xe9a7, 0x4234, 0x9d10, 0xb3a9, 0x318d, 0xbd56, 0x1, 0x0);
        gbc.writeMem(0xe9a7, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x4234, gbc.sp());
        EXPECT(0xe9a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9a7));
        EXPECT(0xf8, gbc.readMem(0xe9a8));
        // CB F8 011A
        gbc.setState(0xbf06, 0x9ce6, 0x8950, 0xcb4e, 0xd08c, 0xb43b, 0x0, 0x1);
        gbc.writeMem(0xbf06, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x9ce6, gbc.sp());
        EXPECT(0xbf08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf06));
        EXPECT(0xf8, gbc.readMem(0xbf07));
        // CB F8 011B
        gbc.setState(0xe0f0, 0xe1b4, 0x5ff0, 0xb70d, 0x53ac, 0xe707, 0x0, 0x1);
        gbc.writeMem(0xe0f0, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xe1b4, gbc.sp());
        EXPECT(0xe0f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0f0));
        EXPECT(0xf8, gbc.readMem(0xe0f1));
        // CB F8 011C
        gbc.setState(0x88d4, 0x8e51, 0x9210, 0xacc8, 0xc5fd, 0x8920, 0x0, 0x1);
        gbc.writeMem(0x88d4, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x8e51, gbc.sp());
        EXPECT(0x88d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88d4));
        EXPECT(0xf8, gbc.readMem(0x88d5));
        // CB F8 011E
        gbc.setState(0x9c18, 0xae32, 0x3e70, 0x15bf, 0x5951, 0xa9f9, 0x0, 0x1);
        gbc.writeMem(0x9c18, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xae32, gbc.sp());
        EXPECT(0x9c1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c18));
        EXPECT(0xf8, gbc.readMem(0x9c19));
        // CB F8 011F
        gbc.setState(0xd3be, 0xba76, 0x16b0, 0xd1b0, 0x2606, 0xe42c, 0x1, 0x0);
        gbc.writeMem(0xd3be, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xba76, gbc.sp());
        EXPECT(0xd3c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3be));
        EXPECT(0xf8, gbc.readMem(0xd3bf));
        // CB F8 0120
        gbc.setState(0x929f, 0xc8f9, 0xdfc0, 0x6aa2, 0xc249, 0xb25e, 0x1, 0x1);
        gbc.writeMem(0x929f, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xc8f9, gbc.sp());
        EXPECT(0x92a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x929f));
        EXPECT(0xf8, gbc.readMem(0x92a0));
        // CB F8 0121
        gbc.setState(0xe632, 0xa648, 0xa2e0, 0xdace, 0xb21c, 0x5938, 0x1, 0x1);
        gbc.writeMem(0xe632, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xa648, gbc.sp());
        EXPECT(0xe634, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe632));
        EXPECT(0xf8, gbc.readMem(0xe633));
        // CB F8 0122
        gbc.setState(0xe5b4, 0x5347, 0x88b0, 0x105b, 0xf448, 0x5c28, 0x1, 0x0);
        gbc.writeMem(0xe5b4, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x5347, gbc.sp());
        EXPECT(0xe5b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5b4));
        EXPECT(0xf8, gbc.readMem(0xe5b5));
        // CB F8 0123
        gbc.setState(0xd9f6, 0x62ad, 0xdca0, 0xeee4, 0x261a, 0x2cd7, 0x0, 0x0);
        gbc.writeMem(0xd9f6, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x62ad, gbc.sp());
        EXPECT(0xd9f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9f6));
        EXPECT(0xf8, gbc.readMem(0xd9f7));
        // CB F8 0124
        gbc.setState(0x7be8, 0x4d3f, 0xb890, 0xcecf, 0xeeba, 0x6618, 0x0, 0x1);
        gbc.writeMem(0x7be8, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x4d3f, gbc.sp());
        EXPECT(0x7bea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0125
        gbc.setState(0x8369, 0x63c5, 0x8280, 0x167, 0x4e03, 0xd791, 0x1, 0x0);
        gbc.writeMem(0x8369, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x63c5, gbc.sp());
        EXPECT(0x836b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8369));
        EXPECT(0xf8, gbc.readMem(0x836a));
        // CB F8 0126
        gbc.setState(0x89f3, 0x35a6, 0xe060, 0xe5a5, 0x4bca, 0x5a34, 0x0, 0x1);
        gbc.writeMem(0x89f3, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x35a6, gbc.sp());
        EXPECT(0x89f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89f3));
        EXPECT(0xf8, gbc.readMem(0x89f4));
        // CB F8 0127
        gbc.setState(0x5b1b, 0xf252, 0x91c0, 0x4ab9, 0xb8d1, 0x368c, 0x0, 0x0);
        gbc.writeMem(0x5b1b, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xf252, gbc.sp());
        EXPECT(0x5b1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0128
        gbc.setState(0x9082, 0x1796, 0xa700, 0x1761, 0xbc01, 0x2744, 0x0, 0x0);
        gbc.writeMem(0x9082, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x1796, gbc.sp());
        EXPECT(0x9084, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9082));
        EXPECT(0xf8, gbc.readMem(0x9083));
        // CB F8 0129
        gbc.setState(0xedc7, 0x67ce, 0xa9b0, 0x507, 0xff8d, 0x1cba, 0x1, 0x1);
        gbc.writeMem(0xedc7, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x67ce, gbc.sp());
        EXPECT(0xedc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedc7));
        EXPECT(0xf8, gbc.readMem(0xedc8));
        // CB F8 012A
        gbc.setState(0x222a, 0x2c04, 0xbb50, 0x89de, 0xfda3, 0xa16d, 0x0, 0x1);
        gbc.writeMem(0x222a, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x2c04, gbc.sp());
        EXPECT(0x222c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 012D
        gbc.setState(0x885b, 0x940d, 0xcdd0, 0x7979, 0x59b8, 0x3579, 0x0, 0x1);
        gbc.writeMem(0x885b, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x940d, gbc.sp());
        EXPECT(0x885d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x885b));
        EXPECT(0xf8, gbc.readMem(0x885c));
        // CB F8 012E
        gbc.setState(0xfa7, 0x2320, 0xae70, 0x1d40, 0x9c9d, 0xffee, 0x1, 0x1);
        gbc.writeMem(0xfa7, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x2320, gbc.sp());
        EXPECT(0xfa9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 012F
        gbc.setState(0x56fd, 0x6786, 0x4f0, 0xbce, 0xe01e, 0x571c, 0x1, 0x0);
        gbc.writeMem(0x56fd, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x6786, gbc.sp());
        EXPECT(0x56ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0130
        gbc.setState(0x7885, 0x5396, 0x1360, 0xb4c7, 0xc54c, 0xf42b, 0x0, 0x1);
        gbc.writeMem(0x7885, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x5396, gbc.sp());
        EXPECT(0x7887, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0131
        gbc.setState(0x554, 0x4c74, 0x6e00, 0x2be4, 0xfc6c, 0xc234, 0x0, 0x0);
        gbc.writeMem(0x554, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x4c74, gbc.sp());
        EXPECT(0x556, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0132
        gbc.setState(0x93d9, 0xa54c, 0xe0c0, 0x3c8f, 0x92a5, 0xfde3, 0x1, 0x0);
        gbc.writeMem(0x93d9, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xa54c, gbc.sp());
        EXPECT(0x93db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93d9));
        EXPECT(0xf8, gbc.readMem(0x93da));
        // CB F8 0133
        gbc.setState(0xbd6a, 0x2e9c, 0x4830, 0xa4c8, 0x62ba, 0x6495, 0x1, 0x1);
        gbc.writeMem(0xbd6a, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x2e9c, gbc.sp());
        EXPECT(0xbd6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd6a));
        EXPECT(0xf8, gbc.readMem(0xbd6b));
        // CB F8 0134
        gbc.setState(0x1d71, 0x7016, 0x3dc0, 0x88ec, 0x526d, 0x8abf, 0x1, 0x0);
        gbc.writeMem(0x1d71, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x7016, gbc.sp());
        EXPECT(0x1d73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0135
        gbc.setState(0x355d, 0xbef9, 0x8d0, 0xefe5, 0x12a0, 0x3dde, 0x1, 0x0);
        gbc.writeMem(0x355d, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xbef9, gbc.sp());
        EXPECT(0x355f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0136
        gbc.setState(0x798d, 0xef87, 0xcb60, 0x459d, 0xa48b, 0x4961, 0x1, 0x1);
        gbc.writeMem(0x798d, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xef87, gbc.sp());
        EXPECT(0x798f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0137
        gbc.setState(0x609f, 0xbf00, 0xe050, 0x4e7f, 0x294d, 0x130c, 0x0, 0x0);
        gbc.writeMem(0x609f, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xbf00, gbc.sp());
        EXPECT(0x60a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0138
        gbc.setState(0xcd3b, 0xa130, 0x2c60, 0x7569, 0xf155, 0x574b, 0x0, 0x0);
        gbc.writeMem(0xcd3b, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xa130, gbc.sp());
        EXPECT(0xcd3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd3b));
        EXPECT(0xf8, gbc.readMem(0xcd3c));
        // CB F8 013A
        gbc.setState(0x13f7, 0x66ca, 0x3350, 0x526d, 0x3429, 0x23b2, 0x1, 0x1);
        gbc.writeMem(0x13f7, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x66ca, gbc.sp());
        EXPECT(0x13f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 013B
        gbc.setState(0x8a9a, 0x2a31, 0x4080, 0x740d, 0x58a9, 0x80f4, 0x0, 0x0);
        gbc.writeMem(0x8a9a, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x2a31, gbc.sp());
        EXPECT(0x8a9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a9a));
        EXPECT(0xf8, gbc.readMem(0x8a9b));
        // CB F8 013C
        gbc.setState(0x6dfc, 0xab74, 0xb940, 0x4c56, 0x5f38, 0x3c1b, 0x1, 0x1);
        gbc.writeMem(0x6dfc, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xab74, gbc.sp());
        EXPECT(0x6dfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 013D
        gbc.setState(0x828, 0xe402, 0x1a60, 0x4bf0, 0x5b25, 0xaeda, 0x1, 0x0);
        gbc.writeMem(0x828, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xe402, gbc.sp());
        EXPECT(0x82a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 013E
        gbc.setState(0x815, 0x8d73, 0x35f0, 0x7e5d, 0x1e4a, 0x6c3f, 0x1, 0x1);
        gbc.writeMem(0x815, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x8d73, gbc.sp());
        EXPECT(0x817, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 013F
        gbc.setState(0xa82a, 0xdbc3, 0xe0a0, 0xdcfc, 0xc0d2, 0x8705, 0x1, 0x1);
        gbc.writeMem(0xa82a, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xdbc3, gbc.sp());
        EXPECT(0xa82c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa82a));
        EXPECT(0xf8, gbc.readMem(0xa82b));
        // CB F8 0140
        gbc.setState(0x7bb9, 0xc484, 0xa360, 0xdb65, 0x496f, 0xf0d6, 0x0, 0x1);
        gbc.writeMem(0x7bb9, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xc484, gbc.sp());
        EXPECT(0x7bbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0141
        gbc.setState(0xac57, 0x15fa, 0x7e50, 0x87c7, 0x724e, 0x73b, 0x1, 0x0);
        gbc.writeMem(0xac57, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x15fa, gbc.sp());
        EXPECT(0xac59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac57));
        EXPECT(0xf8, gbc.readMem(0xac58));
        // CB F8 0142
        gbc.setState(0x2a8f, 0x3fbd, 0x8ea0, 0x2191, 0x574c, 0x240d, 0x0, 0x1);
        gbc.writeMem(0x2a8f, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x3fbd, gbc.sp());
        EXPECT(0x2a91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0143
        gbc.setState(0xa568, 0x858b, 0xfde0, 0xbaba, 0xebec, 0xbd91, 0x1, 0x0);
        gbc.writeMem(0xa568, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x858b, gbc.sp());
        EXPECT(0xa56a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa568));
        EXPECT(0xf8, gbc.readMem(0xa569));
        // CB F8 0144
        gbc.setState(0xf33, 0xa4e7, 0xfab0, 0x98ac, 0x48da, 0xa2d6, 0x0, 0x1);
        gbc.writeMem(0xf33, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xa4e7, gbc.sp());
        EXPECT(0xf35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0145
        gbc.setState(0x74f6, 0x8b01, 0xcf00, 0x3b16, 0xf6bb, 0x1cf7, 0x1, 0x1);
        gbc.writeMem(0x74f6, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x8b01, gbc.sp());
        EXPECT(0x74f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0146
        gbc.setState(0xdd7c, 0x3ea6, 0x6320, 0x2685, 0x43a7, 0x5dda, 0x0, 0x0);
        gbc.writeMem(0xdd7c, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x3ea6, gbc.sp());
        EXPECT(0xdd7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd7c));
        EXPECT(0xf8, gbc.readMem(0xdd7d));
        // CB F8 0147
        gbc.setState(0x3eb9, 0x27ee, 0x2720, 0x7d65, 0x54e9, 0xcded, 0x1, 0x0);
        gbc.writeMem(0x3eb9, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x27ee, gbc.sp());
        EXPECT(0x3ebb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0148
        gbc.setState(0x4f9e, 0x267d, 0xfad0, 0xa00a, 0x5726, 0x18b0, 0x0, 0x0);
        gbc.writeMem(0x4f9e, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x267d, gbc.sp());
        EXPECT(0x4fa0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0149
        gbc.setState(0x4556, 0x791c, 0x90e0, 0xb700, 0x12f, 0x9aac, 0x0, 0x1);
        gbc.writeMem(0x4556, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x791c, gbc.sp());
        EXPECT(0x4558, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 014A
        gbc.setState(0x2d0a, 0x48fd, 0xb000, 0xc2a6, 0xc710, 0xd34a, 0x1, 0x1);
        gbc.writeMem(0x2d0a, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x48fd, gbc.sp());
        EXPECT(0x2d0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 014B
        gbc.setState(0xd52d, 0xedba, 0x6240, 0x3c7d, 0x6ff4, 0xb208, 0x1, 0x1);
        gbc.writeMem(0xd52d, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xedba, gbc.sp());
        EXPECT(0xd52f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd52d));
        EXPECT(0xf8, gbc.readMem(0xd52e));
        // CB F8 014C
        gbc.setState(0xd006, 0x992f, 0xab20, 0x4dcd, 0xb49d, 0x9c4b, 0x0, 0x1);
        gbc.writeMem(0xd006, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x992f, gbc.sp());
        EXPECT(0xd008, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd006));
        EXPECT(0xf8, gbc.readMem(0xd007));
        // CB F8 014D
        gbc.setState(0x1501, 0xc23c, 0x3240, 0xe00e, 0xa3c, 0x3b42, 0x1, 0x1);
        gbc.writeMem(0x1501, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xc23c, gbc.sp());
        EXPECT(0x1503, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 014E
        gbc.setState(0x4eb8, 0xdb87, 0xfe80, 0x4cd8, 0x606e, 0xa84a, 0x0, 0x1);
        gbc.writeMem(0x4eb8, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xdb87, gbc.sp());
        EXPECT(0x4eba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 014F
        gbc.setState(0x48e1, 0x95c, 0x2620, 0x9523, 0x292, 0x6c44, 0x0, 0x1);
        gbc.writeMem(0x48e1, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x95c, gbc.sp());
        EXPECT(0x48e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0150
        gbc.setState(0x5909, 0xa7ab, 0x6320, 0x77df, 0x7147, 0x5328, 0x0, 0x1);
        gbc.writeMem(0x5909, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xa7ab, gbc.sp());
        EXPECT(0x590b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0151
        gbc.setState(0xdb07, 0x57e4, 0xcc80, 0xb790, 0x8cbd, 0xa045, 0x0, 0x0);
        gbc.writeMem(0xdb07, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x57e4, gbc.sp());
        EXPECT(0xdb09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb07));
        EXPECT(0xf8, gbc.readMem(0xdb08));
        // CB F8 0152
        gbc.setState(0x688e, 0x103, 0xe370, 0x49bf, 0x7d83, 0x13a6, 0x1, 0x1);
        gbc.writeMem(0x688e, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x103, gbc.sp());
        EXPECT(0x6890, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0153
        gbc.setState(0x98d3, 0xfadf, 0xa070, 0xfa74, 0xebe4, 0xd71d, 0x0, 0x0);
        gbc.writeMem(0x98d3, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xfadf, gbc.sp());
        EXPECT(0x98d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98d3));
        EXPECT(0xf8, gbc.readMem(0x98d4));
        // CB F8 0154
        gbc.setState(0x68f1, 0x9663, 0xd750, 0xdaf9, 0xa757, 0xf03f, 0x0, 0x1);
        gbc.writeMem(0x68f1, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x9663, gbc.sp());
        EXPECT(0x68f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0155
        gbc.setState(0x71e3, 0xeef2, 0xbb20, 0xfa1d, 0x2df5, 0x7294, 0x1, 0x1);
        gbc.writeMem(0x71e3, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xeef2, gbc.sp());
        EXPECT(0x71e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0156
        gbc.setState(0x2b0c, 0x852, 0x23d0, 0xb910, 0x8b3d, 0xed2a, 0x1, 0x1);
        gbc.writeMem(0x2b0c, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x852, gbc.sp());
        EXPECT(0x2b0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0157
        gbc.setState(0x5788, 0x4e17, 0xd030, 0xee8c, 0x8ff2, 0x2fee, 0x0, 0x0);
        gbc.writeMem(0x5788, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x4e17, gbc.sp());
        EXPECT(0x578a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0158
        gbc.setState(0xdac1, 0xac96, 0x10b0, 0x60a2, 0x896f, 0xb99f, 0x0, 0x0);
        gbc.writeMem(0xdac1, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xac96, gbc.sp());
        EXPECT(0xdac3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdac1));
        EXPECT(0xf8, gbc.readMem(0xdac2));
        // CB F8 015A
        gbc.setState(0x7e90, 0x700d, 0x54f0, 0x3e32, 0xa677, 0x1ea8, 0x1, 0x0);
        gbc.writeMem(0x7e90, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x700d, gbc.sp());
        EXPECT(0x7e92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 015B
        gbc.setState(0x895, 0x1d43, 0xb770, 0x9837, 0xac76, 0x8bdb, 0x0, 0x0);
        gbc.writeMem(0x895, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x1d43, gbc.sp());
        EXPECT(0x897, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 015C
        gbc.setState(0x5776, 0x5a63, 0x2470, 0xe7a2, 0x932b, 0x546a, 0x0, 0x0);
        gbc.writeMem(0x5776, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x5a63, gbc.sp());
        EXPECT(0x5778, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 015D
        gbc.setState(0x5d3c, 0x3ea3, 0x4c40, 0x8267, 0xcc06, 0x1c78, 0x1, 0x1);
        gbc.writeMem(0x5d3c, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x3ea3, gbc.sp());
        EXPECT(0x5d3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 015E
        gbc.setState(0xb350, 0xdb18, 0xfa90, 0x97fd, 0x924e, 0x6e25, 0x0, 0x1);
        gbc.writeMem(0xb350, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xdb18, gbc.sp());
        EXPECT(0xb352, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb350));
        EXPECT(0xf8, gbc.readMem(0xb351));
        // CB F8 0160
        gbc.setState(0x2a79, 0x8dd8, 0xe480, 0x19b5, 0x78b4, 0x1fee, 0x1, 0x1);
        gbc.writeMem(0x2a79, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x8dd8, gbc.sp());
        EXPECT(0x2a7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0161
        gbc.setState(0xc704, 0x5b78, 0x4b40, 0xb877, 0x7423, 0x339b, 0x0, 0x1);
        gbc.writeMem(0xc704, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x5b78, gbc.sp());
        EXPECT(0xc706, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc704));
        EXPECT(0xf8, gbc.readMem(0xc705));
        // CB F8 0162
        gbc.setState(0xa6c5, 0xb958, 0x8670, 0xef15, 0x46ff, 0x9125, 0x1, 0x0);
        gbc.writeMem(0xa6c5, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xb958, gbc.sp());
        EXPECT(0xa6c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6c5));
        EXPECT(0xf8, gbc.readMem(0xa6c6));
        // CB F8 0163
        gbc.setState(0xdf56, 0x891d, 0xbc0, 0xd575, 0x77a8, 0xc726, 0x1, 0x0);
        gbc.writeMem(0xdf56, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x891d, gbc.sp());
        EXPECT(0xdf58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf56));
        EXPECT(0xf8, gbc.readMem(0xdf57));
        // CB F8 0164
        gbc.setState(0x9af7, 0xbcc2, 0x7b30, 0x7cc7, 0xf0f9, 0xc650, 0x0, 0x1);
        gbc.writeMem(0x9af7, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xbcc2, gbc.sp());
        EXPECT(0x9af9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9af7));
        EXPECT(0xf8, gbc.readMem(0x9af8));
        // CB F8 0165
        gbc.setState(0xa68, 0x4327, 0xb1d0, 0x9c4e, 0x603e, 0x72c8, 0x0, 0x1);
        gbc.writeMem(0xa68, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x4327, gbc.sp());
        EXPECT(0xa6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0166
        gbc.setState(0xd454, 0xb4ce, 0x41b0, 0x33a3, 0xf752, 0xf6a4, 0x0, 0x1);
        gbc.writeMem(0xd454, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xb4ce, gbc.sp());
        EXPECT(0xd456, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd454));
        EXPECT(0xf8, gbc.readMem(0xd455));
        // CB F8 0167
        gbc.setState(0x1d78, 0x1044, 0x87e0, 0x4d95, 0xb0b9, 0xb31f, 0x1, 0x1);
        gbc.writeMem(0x1d78, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x1044, gbc.sp());
        EXPECT(0x1d7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0168
        gbc.setState(0x3a5d, 0x53e2, 0xf290, 0xc1c2, 0xe73d, 0xc914, 0x0, 0x1);
        gbc.writeMem(0x3a5d, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x53e2, gbc.sp());
        EXPECT(0x3a5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0169
        gbc.setState(0xd0c4, 0x72e8, 0x89c0, 0xae67, 0x8b7f, 0x39ca, 0x1, 0x1);
        gbc.writeMem(0xd0c4, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x72e8, gbc.sp());
        EXPECT(0xd0c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0c4));
        EXPECT(0xf8, gbc.readMem(0xd0c5));
        // CB F8 016A
        gbc.setState(0x80c4, 0x59c2, 0x9970, 0x6310, 0xbd75, 0x1549, 0x1, 0x1);
        gbc.writeMem(0x80c4, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x59c2, gbc.sp());
        EXPECT(0x80c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80c4));
        EXPECT(0xf8, gbc.readMem(0x80c5));
        // CB F8 016B
        gbc.setState(0x59ea, 0x5b4f, 0x1b20, 0x3cd4, 0x528, 0xb7d2, 0x1, 0x1);
        gbc.writeMem(0x59ea, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x5b4f, gbc.sp());
        EXPECT(0x59ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 016C
        gbc.setState(0xd3d7, 0xeee2, 0x9db0, 0x7034, 0xd7f2, 0xb016, 0x1, 0x0);
        gbc.writeMem(0xd3d7, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xeee2, gbc.sp());
        EXPECT(0xd3d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3d7));
        EXPECT(0xf8, gbc.readMem(0xd3d8));
        // CB F8 016D
        gbc.setState(0x4933, 0x26df, 0xde80, 0x7fae, 0x93aa, 0x3b05, 0x1, 0x1);
        gbc.writeMem(0x4933, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x26df, gbc.sp());
        EXPECT(0x4935, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 016E
        gbc.setState(0x89a7, 0x3f1e, 0x84f0, 0xaa70, 0x30a9, 0x3e11, 0x0, 0x1);
        gbc.writeMem(0x89a7, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x3f1e, gbc.sp());
        EXPECT(0x89a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89a7));
        EXPECT(0xf8, gbc.readMem(0x89a8));
        // CB F8 016F
        gbc.setState(0xc79c, 0x35a, 0x2df0, 0xc167, 0x3a40, 0x74b7, 0x0, 0x1);
        gbc.writeMem(0xc79c, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x35a, gbc.sp());
        EXPECT(0xc79e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc79c));
        EXPECT(0xf8, gbc.readMem(0xc79d));
        // CB F8 0170
        gbc.setState(0xbff6, 0xd2f6, 0x7c00, 0x5e9f, 0xc97f, 0xc999, 0x0, 0x0);
        gbc.writeMem(0xbff6, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xd2f6, gbc.sp());
        EXPECT(0xbff8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbff6));
        EXPECT(0xf8, gbc.readMem(0xbff7));
        // CB F8 0171
        gbc.setState(0x3a1e, 0x8e25, 0x3030, 0x17e8, 0xbb13, 0xc746, 0x1, 0x1);
        gbc.writeMem(0x3a1e, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x8e25, gbc.sp());
        EXPECT(0x3a20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0172
        gbc.setState(0x3149, 0x3a6a, 0xe330, 0x7b25, 0x2545, 0x3858, 0x0, 0x0);
        gbc.writeMem(0x3149, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x3a6a, gbc.sp());
        EXPECT(0x314b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0173
        gbc.setState(0x885d, 0xa0a4, 0xdad0, 0x2049, 0xc340, 0x23a8, 0x1, 0x1);
        gbc.writeMem(0x885d, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xa0a4, gbc.sp());
        EXPECT(0x885f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x885d));
        EXPECT(0xf8, gbc.readMem(0x885e));
        // CB F8 0174
        gbc.setState(0xeb2b, 0xcd0c, 0x9c20, 0xf513, 0x1c06, 0xa958, 0x1, 0x0);
        gbc.writeMem(0xeb2b, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xcd0c, gbc.sp());
        EXPECT(0xeb2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb2b));
        EXPECT(0xf8, gbc.readMem(0xeb2c));
        // CB F8 0175
        gbc.setState(0x142c, 0x54d8, 0x3480, 0xce3e, 0xf157, 0xd921, 0x1, 0x1);
        gbc.writeMem(0x142c, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x54d8, gbc.sp());
        EXPECT(0x142e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0176
        gbc.setState(0xb27c, 0x76f2, 0x3080, 0x720c, 0xbf19, 0x4775, 0x1, 0x0);
        gbc.writeMem(0xb27c, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x76f2, gbc.sp());
        EXPECT(0xb27e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb27c));
        EXPECT(0xf8, gbc.readMem(0xb27d));
        // CB F8 0177
        gbc.setState(0x7aa, 0x880c, 0xecd0, 0xfb03, 0x45db, 0x6f3b, 0x0, 0x1);
        gbc.writeMem(0x7aa, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x880c, gbc.sp());
        EXPECT(0x7ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0178
        gbc.setState(0x34d5, 0x159d, 0x1fe0, 0xc50a, 0xb44a, 0x3651, 0x0, 0x0);
        gbc.writeMem(0x34d5, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x159d, gbc.sp());
        EXPECT(0x34d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0179
        gbc.setState(0x7fd0, 0xc1d8, 0x8290, 0x162d, 0x219d, 0x685d, 0x1, 0x1);
        gbc.writeMem(0x7fd0, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xc1d8, gbc.sp());
        EXPECT(0x7fd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 017A
        gbc.setState(0x3026, 0xb094, 0xc0c0, 0x18b9, 0x4222, 0x665f, 0x0, 0x1);
        gbc.writeMem(0x3026, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xb094, gbc.sp());
        EXPECT(0x3028, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 017C
        gbc.setState(0x8f7a, 0x9418, 0x9300, 0x6811, 0xe068, 0x66e5, 0x1, 0x0);
        gbc.writeMem(0x8f7a, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x9418, gbc.sp());
        EXPECT(0x8f7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f7a));
        EXPECT(0xf8, gbc.readMem(0x8f7b));
        // CB F8 017D
        gbc.setState(0x1871, 0x64af, 0x2630, 0x1c30, 0xd7a9, 0x1aa5, 0x0, 0x0);
        gbc.writeMem(0x1871, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x64af, gbc.sp());
        EXPECT(0x1873, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 017E
        gbc.setState(0xc664, 0x1f53, 0x8110, 0x3ac0, 0xecae, 0xad36, 0x0, 0x0);
        gbc.writeMem(0xc664, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x1f53, gbc.sp());
        EXPECT(0xc666, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc664));
        EXPECT(0xf8, gbc.readMem(0xc665));
        // CB F8 017F
        gbc.setState(0x928, 0xd3a1, 0xdd20, 0xa840, 0x7638, 0x4207, 0x1, 0x0);
        gbc.writeMem(0x928, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xd3a1, gbc.sp());
        EXPECT(0x92a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0180
        gbc.setState(0x39f2, 0x1fa, 0x27e0, 0x856a, 0x61a2, 0xa03f, 0x1, 0x0);
        gbc.writeMem(0x39f2, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x1fa, gbc.sp());
        EXPECT(0x39f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0181
        gbc.setState(0x167c, 0x7c9d, 0x4ce0, 0x8fcf, 0xf762, 0xf072, 0x1, 0x1);
        gbc.writeMem(0x167c, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x7c9d, gbc.sp());
        EXPECT(0x167e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0182
        gbc.setState(0x53d7, 0x631, 0x1710, 0x8c79, 0x846b, 0x2809, 0x0, 0x1);
        gbc.writeMem(0x53d7, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x631, gbc.sp());
        EXPECT(0x53d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0183
        gbc.setState(0xda27, 0xd966, 0x4b80, 0x802, 0xa7a, 0x4659, 0x0, 0x0);
        gbc.writeMem(0xda27, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xd966, gbc.sp());
        EXPECT(0xda29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda27));
        EXPECT(0xf8, gbc.readMem(0xda28));
        // CB F8 0184
        gbc.setState(0x4b7d, 0x388d, 0x9070, 0xf37e, 0xf1b, 0x3776, 0x0, 0x1);
        gbc.writeMem(0x4b7d, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x388d, gbc.sp());
        EXPECT(0x4b7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0185
        gbc.setState(0x8662, 0xb302, 0x2cc0, 0x766a, 0xe863, 0xe369, 0x1, 0x0);
        gbc.writeMem(0x8662, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xb302, gbc.sp());
        EXPECT(0x8664, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8662));
        EXPECT(0xf8, gbc.readMem(0x8663));
        // CB F8 0186
        gbc.setState(0xda34, 0x75b0, 0xbd10, 0x81ea, 0xe555, 0xf429, 0x1, 0x1);
        gbc.writeMem(0xda34, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x75b0, gbc.sp());
        EXPECT(0xda36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda34));
        EXPECT(0xf8, gbc.readMem(0xda35));
        // CB F8 0187
        gbc.setState(0xdc79, 0x652c, 0x6750, 0xb5f9, 0x7b94, 0x29f, 0x0, 0x1);
        gbc.writeMem(0xdc79, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x652c, gbc.sp());
        EXPECT(0xdc7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc79));
        EXPECT(0xf8, gbc.readMem(0xdc7a));
        // CB F8 0188
        gbc.setState(0x1363, 0x41eb, 0x4fe0, 0xcb3f, 0x11e1, 0x7a88, 0x0, 0x0);
        gbc.writeMem(0x1363, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x41eb, gbc.sp());
        EXPECT(0x1365, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0189
        gbc.setState(0x23ab, 0x4a3e, 0xf750, 0x89e7, 0x3020, 0x587b, 0x0, 0x1);
        gbc.writeMem(0x23ab, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x4a3e, gbc.sp());
        EXPECT(0x23ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 018A
        gbc.setState(0xa188, 0x49ed, 0x5430, 0x6406, 0x39c0, 0x3273, 0x1, 0x0);
        gbc.writeMem(0xa188, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x49ed, gbc.sp());
        EXPECT(0xa18a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa188));
        EXPECT(0xf8, gbc.readMem(0xa189));
        // CB F8 018B
        gbc.setState(0xc5e0, 0x5330, 0x28e0, 0xdf55, 0xcfa5, 0x7937, 0x1, 0x1);
        gbc.writeMem(0xc5e0, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x5330, gbc.sp());
        EXPECT(0xc5e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5e0));
        EXPECT(0xf8, gbc.readMem(0xc5e1));
        // CB F8 018C
        gbc.setState(0xc878, 0x68b1, 0xb980, 0x7829, 0xd59a, 0x568, 0x1, 0x0);
        gbc.writeMem(0xc878, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x68b1, gbc.sp());
        EXPECT(0xc87a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc878));
        EXPECT(0xf8, gbc.readMem(0xc879));
        // CB F8 018D
        gbc.setState(0x5eb4, 0xb8fb, 0x5220, 0xef89, 0xedce, 0x1219, 0x1, 0x1);
        gbc.writeMem(0x5eb4, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xb8fb, gbc.sp());
        EXPECT(0x5eb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 018E
        gbc.setState(0xc2bc, 0x2c7f, 0x4610, 0x8dbe, 0x4a52, 0x7d55, 0x0, 0x0);
        gbc.writeMem(0xc2bc, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x2c7f, gbc.sp());
        EXPECT(0xc2be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2bc));
        EXPECT(0xf8, gbc.readMem(0xc2bd));
        // CB F8 018F
        gbc.setState(0x29af, 0x1d56, 0xc8d0, 0xceeb, 0xce0f, 0x3d5e, 0x0, 0x1);
        gbc.writeMem(0x29af, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x1d56, gbc.sp());
        EXPECT(0x29b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0190
        gbc.setState(0xc4e4, 0x50db, 0xa890, 0xcccc, 0x443b, 0xb1bc, 0x1, 0x1);
        gbc.writeMem(0xc4e4, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x50db, gbc.sp());
        EXPECT(0xc4e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4e4));
        EXPECT(0xf8, gbc.readMem(0xc4e5));
        // CB F8 0191
        gbc.setState(0x6516, 0xa3c6, 0xbf30, 0x22b1, 0x2d60, 0x54b4, 0x0, 0x0);
        gbc.writeMem(0x6516, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xa3c6, gbc.sp());
        EXPECT(0x6518, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0192
        gbc.setState(0xc78a, 0x39df, 0x3c20, 0x385d, 0x8ad8, 0xb2e3, 0x0, 0x1);
        gbc.writeMem(0xc78a, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x39df, gbc.sp());
        EXPECT(0xc78c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc78a));
        EXPECT(0xf8, gbc.readMem(0xc78b));
        // CB F8 0193
        gbc.setState(0xec22, 0x33a, 0x8da0, 0xba, 0xae66, 0x6a8, 0x0, 0x0);
        gbc.writeMem(0xec22, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x33a, gbc.sp());
        EXPECT(0xec24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec22));
        EXPECT(0xf8, gbc.readMem(0xec23));
        // CB F8 0194
        gbc.setState(0xd293, 0xcb30, 0x3110, 0xdd5a, 0xb4d3, 0x791f, 0x1, 0x0);
        gbc.writeMem(0xd293, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xcb30, gbc.sp());
        EXPECT(0xd295, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd293));
        EXPECT(0xf8, gbc.readMem(0xd294));
        // CB F8 0195
        gbc.setState(0x630d, 0x5d61, 0xcd20, 0x1c86, 0x6fb7, 0xfa4e, 0x0, 0x1);
        gbc.writeMem(0x630d, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x5d61, gbc.sp());
        EXPECT(0x630f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0196
        gbc.setState(0x6ca2, 0x257a, 0xcc50, 0xb237, 0x1751, 0x3945, 0x1, 0x1);
        gbc.writeMem(0x6ca2, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x257a, gbc.sp());
        EXPECT(0x6ca4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0197
        gbc.setState(0x9008, 0xbac8, 0x8d80, 0x3aa1, 0x767f, 0x42a3, 0x1, 0x0);
        gbc.writeMem(0x9008, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xbac8, gbc.sp());
        EXPECT(0x900a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9008));
        EXPECT(0xf8, gbc.readMem(0x9009));
        // CB F8 0198
        gbc.setState(0xca66, 0xdfe9, 0xb070, 0xe87c, 0xa1e0, 0x5caf, 0x1, 0x1);
        gbc.writeMem(0xca66, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xdfe9, gbc.sp());
        EXPECT(0xca68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca66));
        EXPECT(0xf8, gbc.readMem(0xca67));
        // CB F8 0199
        gbc.setState(0x8179, 0xf6ee, 0xb440, 0xf196, 0xf60c, 0x23cc, 0x0, 0x1);
        gbc.writeMem(0x8179, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xf6ee, gbc.sp());
        EXPECT(0x817b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8179));
        EXPECT(0xf8, gbc.readMem(0x817a));
        // CB F8 019A
        gbc.setState(0xc7eb, 0xc365, 0xe50, 0x1ba3, 0x7987, 0x2b1b, 0x0, 0x0);
        gbc.writeMem(0xc7eb, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xc365, gbc.sp());
        EXPECT(0xc7ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7eb));
        EXPECT(0xf8, gbc.readMem(0xc7ec));
        // CB F8 019B
        gbc.setState(0x5c25, 0x2a7b, 0xedc0, 0xfc23, 0x8b99, 0x7edd, 0x1, 0x0);
        gbc.writeMem(0x5c25, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x2a7b, gbc.sp());
        EXPECT(0x5c27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 019C
        gbc.setState(0xd1db, 0xdabe, 0x85a0, 0x729e, 0xd52b, 0xfc6d, 0x0, 0x0);
        gbc.writeMem(0xd1db, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xdabe, gbc.sp());
        EXPECT(0xd1dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1db));
        EXPECT(0xf8, gbc.readMem(0xd1dc));
        // CB F8 019E
        gbc.setState(0xc1d8, 0x65cc, 0x52f0, 0x8a9e, 0xfbb2, 0xcb3, 0x1, 0x1);
        gbc.writeMem(0xc1d8, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x65cc, gbc.sp());
        EXPECT(0xc1da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1d8));
        EXPECT(0xf8, gbc.readMem(0xc1d9));
        // CB F8 019F
        gbc.setState(0x4943, 0xfd30, 0x7ed0, 0xb73c, 0x9b56, 0x9eeb, 0x0, 0x1);
        gbc.writeMem(0x4943, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xfd30, gbc.sp());
        EXPECT(0x4945, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 01A0
        gbc.setState(0x857f, 0x713c, 0x55c0, 0x66a2, 0xe88c, 0xf4b6, 0x1, 0x0);
        gbc.writeMem(0x857f, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x713c, gbc.sp());
        EXPECT(0x8581, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x857f));
        EXPECT(0xf8, gbc.readMem(0x8580));
        // CB F8 01A1
        gbc.setState(0xa995, 0x9032, 0xfac0, 0x348b, 0xcdd9, 0x7645, 0x0, 0x1);
        gbc.writeMem(0xa995, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x9032, gbc.sp());
        EXPECT(0xa997, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa995));
        EXPECT(0xf8, gbc.readMem(0xa996));
        // CB F8 01A2
        gbc.setState(0x8566, 0x48e, 0x9520, 0x5585, 0xfc5c, 0x604f, 0x1, 0x1);
        gbc.writeMem(0x8566, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x48e, gbc.sp());
        EXPECT(0x8568, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8566));
        EXPECT(0xf8, gbc.readMem(0x8567));
        // CB F8 01A3
        gbc.setState(0x6a13, 0xb8f4, 0x8b90, 0x7a2e, 0x9618, 0x505d, 0x0, 0x1);
        gbc.writeMem(0x6a13, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xb8f4, gbc.sp());
        EXPECT(0x6a15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 01A4
        gbc.setState(0xab93, 0x6a52, 0x5520, 0x94d1, 0xfd7b, 0xaa8e, 0x1, 0x0);
        gbc.writeMem(0xab93, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x6a52, gbc.sp());
        EXPECT(0xab95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab93));
        EXPECT(0xf8, gbc.readMem(0xab94));
        // CB F8 01A5
        gbc.setState(0x4f26, 0xd71d, 0xdcb0, 0x1622, 0x86b, 0xf78a, 0x1, 0x1);
        gbc.writeMem(0x4f26, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xd71d, gbc.sp());
        EXPECT(0x4f28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 01A6
        gbc.setState(0x9139, 0x69ef, 0x3c70, 0x29e, 0xade7, 0xb4a8, 0x0, 0x1);
        gbc.writeMem(0x9139, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x69ef, gbc.sp());
        EXPECT(0x913b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9139));
        EXPECT(0xf8, gbc.readMem(0x913a));
        // CB F8 01A7
        gbc.setState(0x8694, 0x9503, 0x110, 0x88d4, 0x432, 0x2153, 0x0, 0x0);
        gbc.writeMem(0x8694, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x9503, gbc.sp());
        EXPECT(0x8696, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8694));
        EXPECT(0xf8, gbc.readMem(0x8695));
        // CB F8 01A8
        gbc.setState(0x46eb, 0x9cdb, 0x2b10, 0x7929, 0x52fd, 0xbaa6, 0x0, 0x1);
        gbc.writeMem(0x46eb, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x9cdb, gbc.sp());
        EXPECT(0x46ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 01A9
        gbc.setState(0x2f47, 0xf577, 0xaf10, 0x3bed, 0xe9db, 0x4bec, 0x0, 0x1);
        gbc.writeMem(0x2f47, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xf577, gbc.sp());
        EXPECT(0x2f49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 01AA
        gbc.setState(0x9397, 0x4f0d, 0xd620, 0xf1ed, 0x97d0, 0xb9d9, 0x1, 0x1);
        gbc.writeMem(0x9397, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x4f0d, gbc.sp());
        EXPECT(0x9399, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9397));
        EXPECT(0xf8, gbc.readMem(0x9398));
        // CB F8 01AB
        gbc.setState(0x8975, 0x92d9, 0xb9f0, 0x68fa, 0x11b9, 0x597e, 0x1, 0x1);
        gbc.writeMem(0x8975, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x92d9, gbc.sp());
        EXPECT(0x8977, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8975));
        EXPECT(0xf8, gbc.readMem(0x8976));
        // CB F8 01AC
        gbc.setState(0xba82, 0x1143, 0x49f0, 0xe46f, 0x8d00, 0x5d77, 0x0, 0x0);
        gbc.writeMem(0xba82, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x1143, gbc.sp());
        EXPECT(0xba84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba82));
        EXPECT(0xf8, gbc.readMem(0xba83));
        // CB F8 01AD
        gbc.setState(0x94f0, 0x7143, 0x5160, 0x97ce, 0x9a28, 0xd8d7, 0x0, 0x1);
        gbc.writeMem(0x94f0, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x7143, gbc.sp());
        EXPECT(0x94f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94f0));
        EXPECT(0xf8, gbc.readMem(0x94f1));
        // CB F8 01AE
        gbc.setState(0x7c84, 0x5c5b, 0x5ab0, 0x6f36, 0xda0, 0x1068, 0x1, 0x1);
        gbc.writeMem(0x7c84, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x5c5b, gbc.sp());
        EXPECT(0x7c86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 01AF
        gbc.setState(0xadf5, 0x5e09, 0xed60, 0x1e56, 0xdf04, 0x6489, 0x1, 0x1);
        gbc.writeMem(0xadf5, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x5e09, gbc.sp());
        EXPECT(0xadf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadf5));
        EXPECT(0xf8, gbc.readMem(0xadf6));
        // CB F8 01B0
        gbc.setState(0x4521, 0xe7de, 0x8570, 0xf8dd, 0x4959, 0xf5c, 0x0, 0x1);
        gbc.writeMem(0x4521, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xe7de, gbc.sp());
        EXPECT(0x4523, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 01B1
        gbc.setState(0xb7c5, 0x9925, 0x4700, 0xf3d7, 0x1e12, 0x93b0, 0x1, 0x1);
        gbc.writeMem(0xb7c5, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x9925, gbc.sp());
        EXPECT(0xb7c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7c5));
        EXPECT(0xf8, gbc.readMem(0xb7c6));
        // CB F8 01B2
        gbc.setState(0xc0ba, 0xfd34, 0x6e80, 0x257b, 0x1e5f, 0xfe00, 0x0, 0x0);
        gbc.writeMem(0xc0ba, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xfd34, gbc.sp());
        EXPECT(0xc0bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0ba));
        EXPECT(0xf8, gbc.readMem(0xc0bb));
        // CB F8 01B3
        gbc.setState(0x2cca, 0x777b, 0x99c0, 0x6d21, 0x319e, 0xcb56, 0x0, 0x1);
        gbc.writeMem(0x2cca, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x777b, gbc.sp());
        EXPECT(0x2ccc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 01B4
        gbc.setState(0x409, 0x6240, 0x7ae0, 0xf537, 0x87f2, 0x6881, 0x0, 0x0);
        gbc.writeMem(0x409, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x6240, gbc.sp());
        EXPECT(0x40b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 01B5
        gbc.setState(0xb27, 0x34b7, 0x2df0, 0x47d4, 0x4cb7, 0x7587, 0x0, 0x1);
        gbc.writeMem(0xb27, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x34b7, gbc.sp());
        EXPECT(0xb29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 01B6
        gbc.setState(0x1fca, 0x32bd, 0x3cf0, 0x46f3, 0x403a, 0xe1f9, 0x1, 0x1);
        gbc.writeMem(0x1fca, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x32bd, gbc.sp());
        EXPECT(0x1fcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 01B7
        gbc.setState(0xab06, 0x197e, 0x2ef0, 0xb988, 0x8322, 0xd4ba, 0x0, 0x0);
        gbc.writeMem(0xab06, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x197e, gbc.sp());
        EXPECT(0xab08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab06));
        EXPECT(0xf8, gbc.readMem(0xab07));
        // CB F8 01B8
        gbc.setState(0xdc54, 0xd254, 0xf2e0, 0x8079, 0x9ba6, 0xe566, 0x1, 0x0);
        gbc.writeMem(0xdc54, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xd254, gbc.sp());
        EXPECT(0xdc56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc54));
        EXPECT(0xf8, gbc.readMem(0xdc55));
        // CB F8 01B9
        gbc.setState(0x581e, 0xb340, 0x98e0, 0x6092, 0xef76, 0x9919, 0x1, 0x0);
        gbc.writeMem(0x581e, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xb340, gbc.sp());
        EXPECT(0x5820, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 01BA
        gbc.setState(0x643b, 0x311d, 0xa6b0, 0xe7b, 0xaf75, 0xdf43, 0x0, 0x1);
        gbc.writeMem(0x643b, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x311d, gbc.sp());
        EXPECT(0x643d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 01BB
        gbc.setState(0x77f1, 0xe7f8, 0x7060, 0x472a, 0x5756, 0x75c, 0x0, 0x0);
        gbc.writeMem(0x77f1, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xe7f8, gbc.sp());
        EXPECT(0x77f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 01BD
        gbc.setState(0x92f3, 0x7530, 0x29e0, 0x3b67, 0xbc00, 0x1922, 0x1, 0x0);
        gbc.writeMem(0x92f3, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x7530, gbc.sp());
        EXPECT(0x92f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92f3));
        EXPECT(0xf8, gbc.readMem(0x92f4));
        // CB F8 01BE
        gbc.setState(0x73a9, 0x50e5, 0xd790, 0xabb0, 0xcf9c, 0x5dd9, 0x0, 0x1);
        gbc.writeMem(0x73a9, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x50e5, gbc.sp());
        EXPECT(0x73ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 01BF
        gbc.setState(0x6961, 0xd0ab, 0x8230, 0xcd3d, 0x66bd, 0xdc25, 0x0, 0x1);
        gbc.writeMem(0x6961, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xd0ab, gbc.sp());
        EXPECT(0x6963, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 01C0
        gbc.setState(0x5c01, 0xb6f6, 0xce60, 0x656, 0x61b, 0xe628, 0x1, 0x1);
        gbc.writeMem(0x5c01, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xb6f6, gbc.sp());
        EXPECT(0x5c03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 01C1
        gbc.setState(0x517d, 0xab5b, 0x82c0, 0x4724, 0xef7f, 0x3aa8, 0x0, 0x1);
        gbc.writeMem(0x517d, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xab5b, gbc.sp());
        EXPECT(0x517f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 01C2
        gbc.setState(0x14ed, 0x27c7, 0x90f0, 0x6c75, 0x9bed, 0xaca2, 0x1, 0x1);
        gbc.writeMem(0x14ed, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x27c7, gbc.sp());
        EXPECT(0x14ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 01C3
        gbc.setState(0x903c, 0xd7bd, 0xd2d0, 0xf45c, 0x6767, 0xf679, 0x1, 0x1);
        gbc.writeMem(0x903c, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xd7bd, gbc.sp());
        EXPECT(0x903e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x903c));
        EXPECT(0xf8, gbc.readMem(0x903d));
        // CB F8 01C4
        gbc.setState(0x91b5, 0xe558, 0xc3f0, 0x8c3b, 0xa224, 0xb7f8, 0x0, 0x0);
        gbc.writeMem(0x91b5, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xe558, gbc.sp());
        EXPECT(0x91b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91b5));
        EXPECT(0xf8, gbc.readMem(0x91b6));
        // CB F8 01C5
        gbc.setState(0x538f, 0xc94a, 0x7c10, 0xcfcb, 0x99f1, 0x4d38, 0x0, 0x0);
        gbc.writeMem(0x538f, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xc94a, gbc.sp());
        EXPECT(0x5391, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 01C6
        gbc.setState(0xa7d8, 0xfe1a, 0x4310, 0x2810, 0x1f01, 0xab38, 0x1, 0x1);
        gbc.writeMem(0xa7d8, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xfe1a, gbc.sp());
        EXPECT(0xa7da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7d8));
        EXPECT(0xf8, gbc.readMem(0xa7d9));
        // CB F8 01C7
        gbc.setState(0xd0ac, 0xeaff, 0x3b70, 0x9137, 0x2e6, 0x977e, 0x1, 0x1);
        gbc.writeMem(0xd0ac, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xeaff, gbc.sp());
        EXPECT(0xd0ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0ac));
        EXPECT(0xf8, gbc.readMem(0xd0ad));
        // CB F8 01C8
        gbc.setState(0x31cd, 0xffcb, 0x8ff0, 0x9aaa, 0x3d22, 0xb8b0, 0x1, 0x0);
        gbc.writeMem(0x31cd, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xffcb, gbc.sp());
        EXPECT(0x31cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 01CB
        gbc.setState(0xbe3b, 0xb1c8, 0x4090, 0x97e1, 0xd9c2, 0x9b3b, 0x1, 0x1);
        gbc.writeMem(0xbe3b, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xb1c8, gbc.sp());
        EXPECT(0xbe3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe3b));
        EXPECT(0xf8, gbc.readMem(0xbe3c));
        // CB F8 01CC
        gbc.setState(0x4f5e, 0x3646, 0xfa10, 0x7745, 0xac06, 0xf806, 0x0, 0x1);
        gbc.writeMem(0x4f5e, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x3646, gbc.sp());
        EXPECT(0x4f60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 01CD
        gbc.setState(0xb934, 0x4bf8, 0x10c0, 0x30ba, 0xb9fc, 0x35a6, 0x1, 0x0);
        gbc.writeMem(0xb934, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x4bf8, gbc.sp());
        EXPECT(0xb936, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb934));
        EXPECT(0xf8, gbc.readMem(0xb935));
        // CB F8 01CE
        gbc.setState(0x7a85, 0xf270, 0x400, 0xbd0e, 0x1af6, 0x4f62, 0x0, 0x1);
        gbc.writeMem(0x7a85, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xf270, gbc.sp());
        EXPECT(0x7a87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 01CF
        gbc.setState(0x5cb2, 0x10e7, 0xd500, 0x4b16, 0x8517, 0x4605, 0x0, 0x1);
        gbc.writeMem(0x5cb2, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x10e7, gbc.sp());
        EXPECT(0x5cb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 01D0
        gbc.setState(0xdd97, 0x6783, 0xd290, 0x3bdb, 0x3c97, 0x8174, 0x1, 0x1);
        gbc.writeMem(0xdd97, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x6783, gbc.sp());
        EXPECT(0xdd99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd97));
        EXPECT(0xf8, gbc.readMem(0xdd98));
        // CB F8 01D1
        gbc.setState(0xb226, 0x381d, 0x2820, 0x5942, 0x48b7, 0x3380, 0x0, 0x0);
        gbc.writeMem(0xb226, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x381d, gbc.sp());
        EXPECT(0xb228, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb226));
        EXPECT(0xf8, gbc.readMem(0xb227));
        // CB F8 01D2
        gbc.setState(0xa064, 0xecdd, 0x9740, 0x7790, 0xd1c2, 0xd0d0, 0x1, 0x0);
        gbc.writeMem(0xa064, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xecdd, gbc.sp());
        EXPECT(0xa066, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa064));
        EXPECT(0xf8, gbc.readMem(0xa065));
        // CB F8 01D3
        gbc.setState(0xdcb0, 0x94ee, 0x29e0, 0xaa0d, 0x2e6, 0xf0df, 0x1, 0x1);
        gbc.writeMem(0xdcb0, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x94ee, gbc.sp());
        EXPECT(0xdcb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcb0));
        EXPECT(0xf8, gbc.readMem(0xdcb1));
        // CB F8 01D4
        gbc.setState(0xa6d0, 0xd9d, 0x66f0, 0x6e37, 0x4e75, 0x2930, 0x0, 0x1);
        gbc.writeMem(0xa6d0, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xd9d, gbc.sp());
        EXPECT(0xa6d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6d0));
        EXPECT(0xf8, gbc.readMem(0xa6d1));
        // CB F8 01D5
        gbc.setState(0x8569, 0x56e5, 0x9990, 0x3638, 0xcf13, 0x8b, 0x0, 0x0);
        gbc.writeMem(0x8569, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x56e5, gbc.sp());
        EXPECT(0x856b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8569));
        EXPECT(0xf8, gbc.readMem(0x856a));
        // CB F8 01D6
        gbc.setState(0xb3a2, 0xee28, 0x30e0, 0x3879, 0xf998, 0x1251, 0x1, 0x0);
        gbc.writeMem(0xb3a2, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xee28, gbc.sp());
        EXPECT(0xb3a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3a2));
        EXPECT(0xf8, gbc.readMem(0xb3a3));
        // CB F8 01D7
        gbc.setState(0x991f, 0xa454, 0x9f30, 0xb7f1, 0x3467, 0xefcc, 0x0, 0x0);
        gbc.writeMem(0x991f, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xa454, gbc.sp());
        EXPECT(0x9921, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x991f));
        EXPECT(0xf8, gbc.readMem(0x9920));
        // CB F8 01D9
        gbc.setState(0xcb05, 0xec26, 0x2b30, 0x4b4c, 0xb174, 0x9b59, 0x0, 0x0);
        gbc.writeMem(0xcb05, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xec26, gbc.sp());
        EXPECT(0xcb07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb05));
        EXPECT(0xf8, gbc.readMem(0xcb06));
        // CB F8 01DA
        gbc.setState(0x39ff, 0xa698, 0xadb0, 0xf18c, 0xd083, 0x8e7c, 0x0, 0x1);
        gbc.writeMem(0x39ff, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xa698, gbc.sp());
        EXPECT(0x3a01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 01DB
        gbc.setState(0x2a44, 0xfd3f, 0x3f50, 0x640e, 0xec20, 0x4cda, 0x1, 0x0);
        gbc.writeMem(0x2a44, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xfd3f, gbc.sp());
        EXPECT(0x2a46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 01DC
        gbc.setState(0x8ca8, 0xd911, 0x21d0, 0x6264, 0xc70e, 0xe5f8, 0x1, 0x0);
        gbc.writeMem(0x8ca8, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xd911, gbc.sp());
        EXPECT(0x8caa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ca8));
        EXPECT(0xf8, gbc.readMem(0x8ca9));
        // CB F8 01DD
        gbc.setState(0x2f7b, 0x165d, 0xba30, 0xe4ee, 0x252f, 0x9b15, 0x0, 0x0);
        gbc.writeMem(0x2f7b, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x165d, gbc.sp());
        EXPECT(0x2f7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 01DE
        gbc.setState(0xd15c, 0xf6c6, 0xad60, 0x35bd, 0xe324, 0x8ca2, 0x0, 0x0);
        gbc.writeMem(0xd15c, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xf6c6, gbc.sp());
        EXPECT(0xd15e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd15c));
        EXPECT(0xf8, gbc.readMem(0xd15d));
        // CB F8 01DF
        gbc.setState(0x6041, 0xd7b0, 0xef40, 0xf040, 0xe5d0, 0x1fc4, 0x1, 0x0);
        gbc.writeMem(0x6041, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xd7b0, gbc.sp());
        EXPECT(0x6043, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 01E0
        gbc.setState(0xc497, 0x203a, 0xd760, 0x951b, 0xa6bb, 0x41ae, 0x1, 0x1);
        gbc.writeMem(0xc497, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x203a, gbc.sp());
        EXPECT(0xc499, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc497));
        EXPECT(0xf8, gbc.readMem(0xc498));
        // CB F8 01E1
        gbc.setState(0x2c65, 0x1859, 0x7820, 0xa6d1, 0x59fc, 0xc8fd, 0x1, 0x1);
        gbc.writeMem(0x2c65, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x1859, gbc.sp());
        EXPECT(0x2c67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 01E2
        gbc.setState(0x9ae2, 0xb48, 0x46d0, 0x5c2, 0xfa0c, 0xbb06, 0x1, 0x1);
        gbc.writeMem(0x9ae2, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xb48, gbc.sp());
        EXPECT(0x9ae4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ae2));
        EXPECT(0xf8, gbc.readMem(0x9ae3));
        // CB F8 01E3
        gbc.setState(0xb9db, 0x7d72, 0x5b60, 0xf309, 0xeb37, 0x7c0, 0x1, 0x1);
        gbc.writeMem(0xb9db, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x7d72, gbc.sp());
        EXPECT(0xb9dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9db));
        EXPECT(0xf8, gbc.readMem(0xb9dc));
        // CB F8 01E4
        gbc.setState(0xe2b2, 0xdca3, 0xb440, 0xe546, 0x545e, 0xbd1d, 0x0, 0x0);
        gbc.writeMem(0xe2b2, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xdca3, gbc.sp());
        EXPECT(0xe2b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2b2));
        EXPECT(0xf8, gbc.readMem(0xe2b3));
        // CB F8 01E5
        gbc.setState(0xa9dd, 0xe8f6, 0xe3f0, 0x9387, 0xf4b1, 0x257, 0x1, 0x1);
        gbc.writeMem(0xa9dd, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xe8f6, gbc.sp());
        EXPECT(0xa9df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9dd));
        EXPECT(0xf8, gbc.readMem(0xa9de));
        // CB F8 01E6
        gbc.setState(0x19e0, 0xb28b, 0xfea0, 0x1e0, 0x74ab, 0x9061, 0x0, 0x1);
        gbc.writeMem(0x19e0, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xb28b, gbc.sp());
        EXPECT(0x19e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 01E7
        gbc.setState(0x8f0, 0xaf3f, 0xd190, 0x77d9, 0x6e05, 0x9fac, 0x0, 0x1);
        gbc.writeMem(0x8f0, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xaf3f, gbc.sp());
        EXPECT(0x8f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 01E8
        gbc.setState(0x2922, 0x4025, 0x5ce0, 0x85c5, 0xa6f9, 0x2deb, 0x1, 0x0);
        gbc.writeMem(0x2922, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x4025, gbc.sp());
        EXPECT(0x2924, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 01E9
        gbc.setState(0xbbd0, 0xfc86, 0xd9d0, 0xda28, 0x98d1, 0xd823, 0x0, 0x0);
        gbc.writeMem(0xbbd0, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xfc86, gbc.sp());
        EXPECT(0xbbd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbd0));
        EXPECT(0xf8, gbc.readMem(0xbbd1));
        // CB F8 01EA
        gbc.setState(0xbcad, 0x9342, 0xa30, 0x2e25, 0x7218, 0xbf48, 0x0, 0x1);
        gbc.writeMem(0xbcad, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x9342, gbc.sp());
        EXPECT(0xbcaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcad));
        EXPECT(0xf8, gbc.readMem(0xbcae));
        // CB F8 01EB
        gbc.setState(0xae61, 0xb409, 0xcff0, 0xe31d, 0x7544, 0x7d07, 0x0, 0x0);
        gbc.writeMem(0xae61, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xb409, gbc.sp());
        EXPECT(0xae63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae61));
        EXPECT(0xf8, gbc.readMem(0xae62));
        // CB F8 01EC
        gbc.setState(0xd189, 0x6d3f, 0x3270, 0xc424, 0xbd00, 0x8615, 0x1, 0x1);
        gbc.writeMem(0xd189, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x6d3f, gbc.sp());
        EXPECT(0xd18b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd189));
        EXPECT(0xf8, gbc.readMem(0xd18a));
        // CB F8 01ED
        gbc.setState(0x853a, 0xd37, 0xe410, 0xf348, 0x680, 0x85e0, 0x1, 0x0);
        gbc.writeMem(0x853a, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xd37, gbc.sp());
        EXPECT(0x853c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x853a));
        EXPECT(0xf8, gbc.readMem(0x853b));
        // CB F8 01EE
        gbc.setState(0xd8f1, 0x997e, 0x5810, 0xdfc6, 0xb58f, 0xd852, 0x1, 0x0);
        gbc.writeMem(0xd8f1, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x997e, gbc.sp());
        EXPECT(0xd8f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8f1));
        EXPECT(0xf8, gbc.readMem(0xd8f2));
        // CB F8 01EF
        gbc.setState(0x32d4, 0x588e, 0xb1e0, 0x1fa, 0xdaac, 0x28ad, 0x1, 0x1);
        gbc.writeMem(0x32d4, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x588e, gbc.sp());
        EXPECT(0x32d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 01F0
        gbc.setState(0x7137, 0x18df, 0xf820, 0x7f5e, 0x1120, 0xa070, 0x0, 0x1);
        gbc.writeMem(0x7137, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x18df, gbc.sp());
        EXPECT(0x7139, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 01F1
        gbc.setState(0xe481, 0xd5cb, 0x5190, 0x2107, 0xa3a1, 0x30, 0x0, 0x1);
        gbc.writeMem(0xe481, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xd5cb, gbc.sp());
        EXPECT(0xe483, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe481));
        EXPECT(0xf8, gbc.readMem(0xe482));
        // CB F8 01F2
        gbc.setState(0x8678, 0xdf89, 0xc400, 0x64fa, 0x9b9b, 0x23be, 0x0, 0x1);
        gbc.writeMem(0x8678, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xdf89, gbc.sp());
        EXPECT(0x867a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8678));
        EXPECT(0xf8, gbc.readMem(0x8679));
        // CB F8 01F3
        gbc.setState(0x56c3, 0xd677, 0xdcb0, 0x7d4a, 0xceae, 0xa803, 0x1, 0x1);
        gbc.writeMem(0x56c3, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xd677, gbc.sp());
        EXPECT(0x56c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 01F5
        gbc.setState(0xef23, 0xfd8f, 0x3170, 0xa7df, 0xdf99, 0x7386, 0x0, 0x1);
        gbc.writeMem(0xef23, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xfd8f, gbc.sp());
        EXPECT(0xef25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef23));
        EXPECT(0xf8, gbc.readMem(0xef24));
        // CB F8 01F6
        gbc.setState(0xe03c, 0x59f1, 0x1b60, 0xb81, 0x5cdb, 0x6f9f, 0x1, 0x1);
        gbc.writeMem(0xe03c, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x59f1, gbc.sp());
        EXPECT(0xe03e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe03c));
        EXPECT(0xf8, gbc.readMem(0xe03d));
        // CB F8 01F7
        gbc.setState(0x43c3, 0xb0c8, 0xc6c0, 0x9b33, 0xa808, 0x204b, 0x0, 0x0);
        gbc.writeMem(0x43c3, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xb0c8, gbc.sp());
        EXPECT(0x43c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 01F8
        gbc.setState(0xa802, 0x4642, 0xa480, 0xbca2, 0xeb4d, 0x4ace, 0x0, 0x1);
        gbc.writeMem(0xa802, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x4642, gbc.sp());
        EXPECT(0xa804, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa802));
        EXPECT(0xf8, gbc.readMem(0xa803));
        // CB F8 01F9
        gbc.setState(0xd21a, 0x1b03, 0x99f0, 0xbfa5, 0x6dbb, 0xea7, 0x0, 0x1);
        gbc.writeMem(0xd21a, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x1b03, gbc.sp());
        EXPECT(0xd21c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd21a));
        EXPECT(0xf8, gbc.readMem(0xd21b));
        // CB F8 01FB
        gbc.setState(0x57c6, 0xff18, 0xc7b0, 0xbaf, 0xa02d, 0xa91c, 0x1, 0x1);
        gbc.writeMem(0x57c6, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xff18, gbc.sp());
        EXPECT(0x57c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 01FC
        gbc.setState(0x5c66, 0x79c2, 0xf6e0, 0xd516, 0xe6e8, 0x7ada, 0x1, 0x0);
        gbc.writeMem(0x5c66, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x79c2, gbc.sp());
        EXPECT(0x5c68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 01FD
        gbc.setState(0x3f11, 0x4706, 0x77f0, 0x830f, 0x5ec, 0x5d42, 0x0, 0x0);
        gbc.writeMem(0x3f11, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x4706, gbc.sp());
        EXPECT(0x3f13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 01FE
        gbc.setState(0x9b44, 0x8345, 0x3470, 0xbac1, 0x3fb0, 0xba37, 0x0, 0x0);
        gbc.writeMem(0x9b44, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x8345, gbc.sp());
        EXPECT(0x9b46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b44));
        EXPECT(0xf8, gbc.readMem(0x9b45));
        // CB F8 01FF
        gbc.setState(0x2f0, 0x153b, 0xe910, 0x8a4c, 0xee45, 0xd05a, 0x0, 0x1);
        gbc.writeMem(0x2f0, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x153b, gbc.sp());
        EXPECT(0x2f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0200
        gbc.setState(0x5a86, 0xa8bc, 0x4ff0, 0x7428, 0x8f0b, 0x9d19, 0x0, 0x1);
        gbc.writeMem(0x5a86, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xa8bc, gbc.sp());
        EXPECT(0x5a88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0201
        gbc.setState(0xe0c0, 0x47f9, 0x6290, 0x9da4, 0x6279, 0x4da0, 0x1, 0x0);
        gbc.writeMem(0xe0c0, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x47f9, gbc.sp());
        EXPECT(0xe0c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0c0));
        EXPECT(0xf8, gbc.readMem(0xe0c1));
        // CB F8 0202
        gbc.setState(0xd9f1, 0x570, 0x9a20, 0x4a51, 0x6460, 0x330, 0x0, 0x0);
        gbc.writeMem(0xd9f1, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x570, gbc.sp());
        EXPECT(0xd9f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9f1));
        EXPECT(0xf8, gbc.readMem(0xd9f2));
        // CB F8 0203
        gbc.setState(0xdd1e, 0xdf8c, 0x21b0, 0xbc9c, 0x2c27, 0x43f8, 0x0, 0x1);
        gbc.writeMem(0xdd1e, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xdf8c, gbc.sp());
        EXPECT(0xdd20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd1e));
        EXPECT(0xf8, gbc.readMem(0xdd1f));
        // CB F8 0204
        gbc.setState(0xc79d, 0xfda4, 0x6a70, 0x682a, 0x4604, 0xa573, 0x0, 0x0);
        gbc.writeMem(0xc79d, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xfda4, gbc.sp());
        EXPECT(0xc79f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc79d));
        EXPECT(0xf8, gbc.readMem(0xc79e));
        // CB F8 0205
        gbc.setState(0x2304, 0x9e7f, 0xdf10, 0xa3bb, 0x9c4d, 0x2d23, 0x1, 0x1);
        gbc.writeMem(0x2304, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x9e7f, gbc.sp());
        EXPECT(0x2306, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0206
        gbc.setState(0xdb50, 0x2f90, 0xcd70, 0x1ba9, 0xe6e1, 0x629b, 0x1, 0x1);
        gbc.writeMem(0xdb50, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x2f90, gbc.sp());
        EXPECT(0xdb52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb50));
        EXPECT(0xf8, gbc.readMem(0xdb51));
        // CB F8 0207
        gbc.setState(0x94a6, 0x7271, 0x9d30, 0xc80f, 0x6762, 0xe227, 0x1, 0x0);
        gbc.writeMem(0x94a6, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x7271, gbc.sp());
        EXPECT(0x94a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94a6));
        EXPECT(0xf8, gbc.readMem(0x94a7));
        // CB F8 0208
        gbc.setState(0x166a, 0x9be5, 0xba50, 0xc654, 0xf4f6, 0x89ad, 0x0, 0x1);
        gbc.writeMem(0x166a, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x9be5, gbc.sp());
        EXPECT(0x166c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0209
        gbc.setState(0x589a, 0x8e08, 0x99d0, 0x385b, 0x71d2, 0x7896, 0x0, 0x1);
        gbc.writeMem(0x589a, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x8e08, gbc.sp());
        EXPECT(0x589c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 020A
        gbc.setState(0xd054, 0xdb2f, 0x1210, 0x6c9, 0x71db, 0x65ab, 0x0, 0x1);
        gbc.writeMem(0xd054, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xdb2f, gbc.sp());
        EXPECT(0xd056, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd054));
        EXPECT(0xf8, gbc.readMem(0xd055));
        // CB F8 020B
        gbc.setState(0x5203, 0x41e6, 0x9140, 0xf66b, 0x773e, 0xf180, 0x0, 0x0);
        gbc.writeMem(0x5203, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x41e6, gbc.sp());
        EXPECT(0x5205, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 020C
        gbc.setState(0xe053, 0x152f, 0xca30, 0x2408, 0x5226, 0x94a, 0x1, 0x0);
        gbc.writeMem(0xe053, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x152f, gbc.sp());
        EXPECT(0xe055, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe053));
        EXPECT(0xf8, gbc.readMem(0xe054));
        // CB F8 020D
        gbc.setState(0xc126, 0x201b, 0xe80, 0x7246, 0xd637, 0x4299, 0x1, 0x0);
        gbc.writeMem(0xc126, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x201b, gbc.sp());
        EXPECT(0xc128, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc126));
        EXPECT(0xf8, gbc.readMem(0xc127));
        // CB F8 020E
        gbc.setState(0x92dd, 0x3fa4, 0x4660, 0x5dd8, 0x47ff, 0xfd8e, 0x0, 0x0);
        gbc.writeMem(0x92dd, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x3fa4, gbc.sp());
        EXPECT(0x92df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92dd));
        EXPECT(0xf8, gbc.readMem(0x92de));
        // CB F8 020F
        gbc.setState(0xb008, 0xef23, 0xd0, 0x3700, 0x8e82, 0xf67c, 0x1, 0x0);
        gbc.writeMem(0xb008, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xef23, gbc.sp());
        EXPECT(0xb00a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb008));
        EXPECT(0xf8, gbc.readMem(0xb009));
        // CB F8 0210
        gbc.setState(0x534d, 0xf7ae, 0x68f0, 0xe1c6, 0x4ca6, 0xc506, 0x1, 0x0);
        gbc.writeMem(0x534d, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xf7ae, gbc.sp());
        EXPECT(0x534f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0211
        gbc.setState(0x9201, 0xa9d4, 0xef60, 0xeb9b, 0xfbe0, 0xfc06, 0x1, 0x0);
        gbc.writeMem(0x9201, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xa9d4, gbc.sp());
        EXPECT(0x9203, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9201));
        EXPECT(0xf8, gbc.readMem(0x9202));
        // CB F8 0212
        gbc.setState(0x641b, 0xc00c, 0x7480, 0x1915, 0x5338, 0x9f2f, 0x0, 0x0);
        gbc.writeMem(0x641b, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xc00c, gbc.sp());
        EXPECT(0x641d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0213
        gbc.setState(0x4fc4, 0xca21, 0x3390, 0x140, 0xc7b2, 0x3a55, 0x1, 0x0);
        gbc.writeMem(0x4fc4, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xca21, gbc.sp());
        EXPECT(0x4fc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0214
        gbc.setState(0x21b1, 0x22b2, 0x5680, 0x5ab, 0x4659, 0x86b9, 0x1, 0x0);
        gbc.writeMem(0x21b1, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x22b2, gbc.sp());
        EXPECT(0x21b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0215
        gbc.setState(0xa0ec, 0x91a4, 0x5e80, 0x2066, 0x4ed4, 0xe795, 0x0, 0x0);
        gbc.writeMem(0xa0ec, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x91a4, gbc.sp());
        EXPECT(0xa0ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0ec));
        EXPECT(0xf8, gbc.readMem(0xa0ed));
        // CB F8 0216
        gbc.setState(0xc34c, 0x7d3b, 0xda90, 0x4f0f, 0xb5e0, 0x364, 0x1, 0x0);
        gbc.writeMem(0xc34c, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x7d3b, gbc.sp());
        EXPECT(0xc34e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc34c));
        EXPECT(0xf8, gbc.readMem(0xc34d));
        // CB F8 0217
        gbc.setState(0xe6a9, 0x7a10, 0x9f0, 0xe9d1, 0x1c78, 0x1fd6, 0x1, 0x1);
        gbc.writeMem(0xe6a9, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x7a10, gbc.sp());
        EXPECT(0xe6ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6a9));
        EXPECT(0xf8, gbc.readMem(0xe6aa));
        // CB F8 0218
        gbc.setState(0xad72, 0xffc4, 0x40f0, 0x89b9, 0xe0cd, 0xbe64, 0x0, 0x1);
        gbc.writeMem(0xad72, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xffc4, gbc.sp());
        EXPECT(0xad74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad72));
        EXPECT(0xf8, gbc.readMem(0xad73));
        // CB F8 0219
        gbc.setState(0x9730, 0x7af5, 0x1e90, 0x35cc, 0x6c7f, 0x36c0, 0x0, 0x0);
        gbc.writeMem(0x9730, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x7af5, gbc.sp());
        EXPECT(0x9732, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9730));
        EXPECT(0xf8, gbc.readMem(0x9731));
        // CB F8 021A
        gbc.setState(0x173d, 0x2434, 0x69d0, 0xcd9e, 0x5fb4, 0x271d, 0x0, 0x1);
        gbc.writeMem(0x173d, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x2434, gbc.sp());
        EXPECT(0x173f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 021B
        gbc.setState(0xabae, 0x260f, 0xb700, 0x4f1d, 0x790, 0x9728, 0x0, 0x1);
        gbc.writeMem(0xabae, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x260f, gbc.sp());
        EXPECT(0xabb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabae));
        EXPECT(0xf8, gbc.readMem(0xabaf));
        // CB F8 021C
        gbc.setState(0x7686, 0xbd2, 0xed40, 0x7c99, 0x3fc0, 0xb651, 0x0, 0x0);
        gbc.writeMem(0x7686, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xbd2, gbc.sp());
        EXPECT(0x7688, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 021D
        gbc.setState(0x5000, 0x370b, 0xec30, 0x817f, 0x7aa7, 0xf099, 0x0, 0x1);
        gbc.writeMem(0x5000, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x370b, gbc.sp());
        EXPECT(0x5002, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 021E
        gbc.setState(0xee5, 0x722c, 0xe6a0, 0x2180, 0x567f, 0xc02d, 0x0, 0x1);
        gbc.writeMem(0xee5, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x722c, gbc.sp());
        EXPECT(0xee7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 021F
        gbc.setState(0xc5c0, 0x9ffe, 0x72d0, 0x9beb, 0xc73e, 0x652c, 0x1, 0x1);
        gbc.writeMem(0xc5c0, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x9ffe, gbc.sp());
        EXPECT(0xc5c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5c0));
        EXPECT(0xf8, gbc.readMem(0xc5c1));
        // CB F8 0220
        gbc.setState(0x463c, 0xec42, 0x2310, 0x63c8, 0xc707, 0x809f, 0x1, 0x1);
        gbc.writeMem(0x463c, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xec42, gbc.sp());
        EXPECT(0x463e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0221
        gbc.setState(0xc941, 0xcfea, 0xf530, 0x53b8, 0x13e5, 0x1fbc, 0x1, 0x0);
        gbc.writeMem(0xc941, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xcfea, gbc.sp());
        EXPECT(0xc943, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc941));
        EXPECT(0xf8, gbc.readMem(0xc942));
        // CB F8 0222
        gbc.setState(0x630e, 0xe23c, 0x49c0, 0xc1be, 0xaf0c, 0x4d05, 0x0, 0x1);
        gbc.writeMem(0x630e, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xe23c, gbc.sp());
        EXPECT(0x6310, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0223
        gbc.setState(0xb684, 0xde71, 0x6ac0, 0xe18, 0x20f9, 0x8037, 0x0, 0x1);
        gbc.writeMem(0xb684, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xde71, gbc.sp());
        EXPECT(0xb686, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb684));
        EXPECT(0xf8, gbc.readMem(0xb685));
        // CB F8 0224
        gbc.setState(0x2126, 0xb61a, 0x4610, 0xcfa4, 0xa74a, 0xdba5, 0x0, 0x1);
        gbc.writeMem(0x2126, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xb61a, gbc.sp());
        EXPECT(0x2128, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0225
        gbc.setState(0x2815, 0xf2e6, 0x2860, 0x28c1, 0x7c0f, 0x1382, 0x1, 0x0);
        gbc.writeMem(0x2815, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xf2e6, gbc.sp());
        EXPECT(0x2817, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0226
        gbc.setState(0x2703, 0xcf92, 0x2f90, 0xb5de, 0x45b9, 0x4367, 0x1, 0x1);
        gbc.writeMem(0x2703, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xcf92, gbc.sp());
        EXPECT(0x2705, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0227
        gbc.setState(0x6631, 0x98d9, 0xa760, 0xe878, 0xa38b, 0x7961, 0x1, 0x0);
        gbc.writeMem(0x6631, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x98d9, gbc.sp());
        EXPECT(0x6633, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0228
        gbc.setState(0x569, 0xe4ac, 0x350, 0xa9bb, 0xb747, 0xe18e, 0x1, 0x1);
        gbc.writeMem(0x569, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xe4ac, gbc.sp());
        EXPECT(0x56b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0229
        gbc.setState(0x582c, 0x6945, 0xdaf0, 0x5190, 0x59b1, 0x7056, 0x1, 0x0);
        gbc.writeMem(0x582c, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x6945, gbc.sp());
        EXPECT(0x582e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 022A
        gbc.setState(0xd2b0, 0x253b, 0x6b10, 0x52d5, 0x821b, 0x917f, 0x1, 0x0);
        gbc.writeMem(0xd2b0, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x253b, gbc.sp());
        EXPECT(0xd2b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2b0));
        EXPECT(0xf8, gbc.readMem(0xd2b1));
        // CB F8 022B
        gbc.setState(0xd63, 0xdf2, 0xed20, 0xaf92, 0xd43a, 0xff19, 0x1, 0x0);
        gbc.writeMem(0xd63, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xdf2, gbc.sp());
        EXPECT(0xd65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 022C
        gbc.setState(0x802d, 0x7cb3, 0x7580, 0xae31, 0x72e2, 0xbe6d, 0x1, 0x0);
        gbc.writeMem(0x802d, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x7cb3, gbc.sp());
        EXPECT(0x802f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x802d));
        EXPECT(0xf8, gbc.readMem(0x802e));
        // CB F8 022D
        gbc.setState(0x2648, 0x61a2, 0x36d0, 0x5f65, 0x9c2d, 0xb171, 0x1, 0x0);
        gbc.writeMem(0x2648, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x61a2, gbc.sp());
        EXPECT(0x264a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 022E
        gbc.setState(0xbb73, 0xdf4e, 0xa790, 0x8bb3, 0x43d, 0x3f98, 0x0, 0x0);
        gbc.writeMem(0xbb73, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xdf4e, gbc.sp());
        EXPECT(0xbb75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb73));
        EXPECT(0xf8, gbc.readMem(0xbb74));
        // CB F8 0230
        gbc.setState(0x1fac, 0xa3e1, 0x80e0, 0x1f1e, 0xf74b, 0x8e92, 0x1, 0x1);
        gbc.writeMem(0x1fac, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xa3e1, gbc.sp());
        EXPECT(0x1fae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0231
        gbc.setState(0xc4f7, 0xbbb3, 0x1620, 0x840d, 0x1029, 0xd3eb, 0x1, 0x1);
        gbc.writeMem(0xc4f7, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xbbb3, gbc.sp());
        EXPECT(0xc4f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4f7));
        EXPECT(0xf8, gbc.readMem(0xc4f8));
        // CB F8 0232
        gbc.setState(0x989d, 0x6d56, 0x9c50, 0xf878, 0x7d3d, 0x5bf5, 0x1, 0x0);
        gbc.writeMem(0x989d, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x6d56, gbc.sp());
        EXPECT(0x989f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x989d));
        EXPECT(0xf8, gbc.readMem(0x989e));
        // CB F8 0233
        gbc.setState(0x1cfa, 0x9722, 0x3080, 0x5e6a, 0x63dc, 0x619f, 0x1, 0x1);
        gbc.writeMem(0x1cfa, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x9722, gbc.sp());
        EXPECT(0x1cfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0234
        gbc.setState(0xc99f, 0x8066, 0x6100, 0xa4de, 0xa441, 0x9f2a, 0x0, 0x0);
        gbc.writeMem(0xc99f, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x8066, gbc.sp());
        EXPECT(0xc9a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc99f));
        EXPECT(0xf8, gbc.readMem(0xc9a0));
        // CB F8 0235
        gbc.setState(0x23ca, 0x2e0c, 0x5020, 0x22f9, 0xacb0, 0x8642, 0x1, 0x1);
        gbc.writeMem(0x23ca, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x2e0c, gbc.sp());
        EXPECT(0x23cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0236
        gbc.setState(0xee59, 0xbd6a, 0x8ca0, 0xd091, 0x1ee7, 0x63b9, 0x0, 0x0);
        gbc.writeMem(0xee59, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xbd6a, gbc.sp());
        EXPECT(0xee5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee59));
        EXPECT(0xf8, gbc.readMem(0xee5a));
        // CB F8 0237
        gbc.setState(0x9d5f, 0x5af6, 0x8990, 0xf6af, 0x732e, 0xd422, 0x0, 0x1);
        gbc.writeMem(0x9d5f, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x5af6, gbc.sp());
        EXPECT(0x9d61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d5f));
        EXPECT(0xf8, gbc.readMem(0x9d60));
        // CB F8 0238
        gbc.setState(0xd409, 0x2e48, 0x7940, 0x852, 0x116c, 0x4d5b, 0x0, 0x1);
        gbc.writeMem(0xd409, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x2e48, gbc.sp());
        EXPECT(0xd40b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd409));
        EXPECT(0xf8, gbc.readMem(0xd40a));
        // CB F8 0239
        gbc.setState(0x4289, 0x9977, 0x79d0, 0x8b43, 0xd897, 0x2227, 0x0, 0x1);
        gbc.writeMem(0x4289, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x9977, gbc.sp());
        EXPECT(0x428b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 023A
        gbc.setState(0xd530, 0xa8e6, 0xa4f0, 0x1e53, 0xda9b, 0xc659, 0x0, 0x1);
        gbc.writeMem(0xd530, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xa8e6, gbc.sp());
        EXPECT(0xd532, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd530));
        EXPECT(0xf8, gbc.readMem(0xd531));
        // CB F8 023B
        gbc.setState(0x1ef1, 0x15df, 0xf250, 0x99d8, 0xdac3, 0xa1ef, 0x1, 0x1);
        gbc.writeMem(0x1ef1, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x15df, gbc.sp());
        EXPECT(0x1ef3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 023C
        gbc.setState(0x8226, 0xa532, 0xc20, 0xbc9c, 0xf53d, 0xdb2e, 0x0, 0x0);
        gbc.writeMem(0x8226, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xa532, gbc.sp());
        EXPECT(0x8228, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8226));
        EXPECT(0xf8, gbc.readMem(0x8227));
        // CB F8 023D
        gbc.setState(0x3979, 0xec14, 0xeaf0, 0xc778, 0x7702, 0xc18c, 0x1, 0x1);
        gbc.writeMem(0x3979, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xec14, gbc.sp());
        EXPECT(0x397b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 023E
        gbc.setState(0x7551, 0xd3a6, 0x8420, 0xd84a, 0xe35c, 0x5627, 0x0, 0x1);
        gbc.writeMem(0x7551, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xd3a6, gbc.sp());
        EXPECT(0x7553, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 023F
        gbc.setState(0xbe1f, 0x5109, 0xf700, 0x5575, 0xbfa7, 0x3da4, 0x1, 0x0);
        gbc.writeMem(0xbe1f, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x5109, gbc.sp());
        EXPECT(0xbe21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe1f));
        EXPECT(0xf8, gbc.readMem(0xbe20));
        // CB F8 0240
        gbc.setState(0x3647, 0x232e, 0x9d80, 0xc059, 0xfbdb, 0x6088, 0x0, 0x1);
        gbc.writeMem(0x3647, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x232e, gbc.sp());
        EXPECT(0x3649, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0242
        gbc.setState(0xe227, 0xe76b, 0xbe00, 0xe7da, 0xef57, 0x88fd, 0x1, 0x0);
        gbc.writeMem(0xe227, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xe76b, gbc.sp());
        EXPECT(0xe229, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe227));
        EXPECT(0xf8, gbc.readMem(0xe228));
        // CB F8 0243
        gbc.setState(0xc6e7, 0x83d6, 0x6be0, 0x29a8, 0x3816, 0x91d0, 0x0, 0x1);
        gbc.writeMem(0xc6e7, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x83d6, gbc.sp());
        EXPECT(0xc6e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6e7));
        EXPECT(0xf8, gbc.readMem(0xc6e8));
        // CB F8 0244
        gbc.setState(0xe00f, 0xfced, 0xadb0, 0x4a5f, 0xe05d, 0x6516, 0x1, 0x0);
        gbc.writeMem(0xe00f, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xfced, gbc.sp());
        EXPECT(0xe011, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe00f));
        EXPECT(0xf8, gbc.readMem(0xe010));
        // CB F8 0245
        gbc.setState(0x707, 0x7b26, 0xe680, 0x982e, 0xe460, 0xd0a4, 0x1, 0x1);
        gbc.writeMem(0x707, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x7b26, gbc.sp());
        EXPECT(0x709, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0246
        gbc.setState(0x3a4b, 0x75ba, 0xffc0, 0x1ac4, 0x91a, 0x3216, 0x1, 0x1);
        gbc.writeMem(0x3a4b, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x75ba, gbc.sp());
        EXPECT(0x3a4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0247
        gbc.setState(0x6d5, 0x8c9a, 0xc480, 0xcc26, 0x7e5e, 0x6893, 0x1, 0x0);
        gbc.writeMem(0x6d5, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x8c9a, gbc.sp());
        EXPECT(0x6d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0248
        gbc.setState(0x87bd, 0xb65f, 0x1c60, 0x783e, 0xddaa, 0xf2f7, 0x1, 0x1);
        gbc.writeMem(0x87bd, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xb65f, gbc.sp());
        EXPECT(0x87bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87bd));
        EXPECT(0xf8, gbc.readMem(0x87be));
        // CB F8 0249
        gbc.setState(0x40fe, 0x3214, 0xad80, 0x9d94, 0x838e, 0x2d0e, 0x0, 0x1);
        gbc.writeMem(0x40fe, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x3214, gbc.sp());
        EXPECT(0x4100, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 024A
        gbc.setState(0x23c9, 0xccd8, 0x5a40, 0xc2de, 0xda5e, 0xd3c3, 0x0, 0x1);
        gbc.writeMem(0x23c9, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xccd8, gbc.sp());
        EXPECT(0x23cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 024B
        gbc.setState(0x6a57, 0xcee0, 0xcff0, 0x5720, 0xd4af, 0x51d5, 0x0, 0x0);
        gbc.writeMem(0x6a57, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xcee0, gbc.sp());
        EXPECT(0x6a59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 024C
        gbc.setState(0xc6cd, 0x237c, 0x5210, 0x3d01, 0xf73f, 0x687a, 0x0, 0x0);
        gbc.writeMem(0xc6cd, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x237c, gbc.sp());
        EXPECT(0xc6cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6cd));
        EXPECT(0xf8, gbc.readMem(0xc6ce));
        // CB F8 024D
        gbc.setState(0xde10, 0x8fed, 0x6a70, 0x5407, 0x8c95, 0x9fdf, 0x0, 0x0);
        gbc.writeMem(0xde10, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x8fed, gbc.sp());
        EXPECT(0xde12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde10));
        EXPECT(0xf8, gbc.readMem(0xde11));
        // CB F8 024F
        gbc.setState(0x1a0f, 0xe63b, 0xde20, 0x8438, 0x8efc, 0x8793, 0x1, 0x1);
        gbc.writeMem(0x1a0f, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xe63b, gbc.sp());
        EXPECT(0x1a11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0250
        gbc.setState(0xb4f3, 0x8b8a, 0x7a60, 0x7091, 0x1858, 0xb2e6, 0x0, 0x1);
        gbc.writeMem(0xb4f3, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x8b8a, gbc.sp());
        EXPECT(0xb4f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4f3));
        EXPECT(0xf8, gbc.readMem(0xb4f4));
        // CB F8 0251
        gbc.setState(0xc59f, 0x3433, 0x6930, 0xa5be, 0xd937, 0x76ba, 0x0, 0x0);
        gbc.writeMem(0xc59f, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x3433, gbc.sp());
        EXPECT(0xc5a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc59f));
        EXPECT(0xf8, gbc.readMem(0xc5a0));
        // CB F8 0252
        gbc.setState(0x37c1, 0xa4e1, 0x38b0, 0x780e, 0xcdda, 0x442a, 0x0, 0x1);
        gbc.writeMem(0x37c1, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xa4e1, gbc.sp());
        EXPECT(0x37c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0253
        gbc.setState(0x9b7d, 0x7c95, 0xfa50, 0x98f0, 0xa085, 0xc98, 0x1, 0x1);
        gbc.writeMem(0x9b7d, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x7c95, gbc.sp());
        EXPECT(0x9b7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b7d));
        EXPECT(0xf8, gbc.readMem(0x9b7e));
        // CB F8 0254
        gbc.setState(0x2d49, 0x3ffb, 0xa7b0, 0xe755, 0x1aed, 0xc398, 0x0, 0x1);
        gbc.writeMem(0x2d49, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x3ffb, gbc.sp());
        EXPECT(0x2d4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0255
        gbc.setState(0xe1e9, 0xbb78, 0x35b0, 0x9480, 0xff2, 0xc706, 0x1, 0x1);
        gbc.writeMem(0xe1e9, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xbb78, gbc.sp());
        EXPECT(0xe1eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1e9));
        EXPECT(0xf8, gbc.readMem(0xe1ea));
        // CB F8 0256
        gbc.setState(0x2a64, 0x8fa1, 0xeba0, 0x3108, 0x574e, 0x72d9, 0x0, 0x1);
        gbc.writeMem(0x2a64, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x8fa1, gbc.sp());
        EXPECT(0x2a66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0257
        gbc.setState(0x50d9, 0x9f05, 0x9a50, 0x8670, 0xf00c, 0xbcc1, 0x0, 0x1);
        gbc.writeMem(0x50d9, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x9f05, gbc.sp());
        EXPECT(0x50db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0258
        gbc.setState(0xdf34, 0xce7d, 0x190, 0x9468, 0x3505, 0x32d, 0x0, 0x0);
        gbc.writeMem(0xdf34, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xce7d, gbc.sp());
        EXPECT(0xdf36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf34));
        EXPECT(0xf8, gbc.readMem(0xdf35));
        // CB F8 0259
        gbc.setState(0x6fc4, 0x8b46, 0xcd0, 0xbf76, 0xd8fb, 0xb862, 0x0, 0x0);
        gbc.writeMem(0x6fc4, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x8b46, gbc.sp());
        EXPECT(0x6fc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 025A
        gbc.setState(0xa57f, 0xd572, 0x7cf0, 0xb22c, 0xedc3, 0xc14d, 0x1, 0x0);
        gbc.writeMem(0xa57f, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xd572, gbc.sp());
        EXPECT(0xa581, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa57f));
        EXPECT(0xf8, gbc.readMem(0xa580));
        // CB F8 025B
        gbc.setState(0x9a1a, 0xbd25, 0x90c0, 0x3439, 0xc7c4, 0x2039, 0x0, 0x0);
        gbc.writeMem(0x9a1a, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xbd25, gbc.sp());
        EXPECT(0x9a1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a1a));
        EXPECT(0xf8, gbc.readMem(0x9a1b));
        // CB F8 025C
        gbc.setState(0x44c7, 0x3c95, 0x1420, 0x5eb7, 0x125c, 0x777d, 0x0, 0x0);
        gbc.writeMem(0x44c7, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x3c95, gbc.sp());
        EXPECT(0x44c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 025D
        gbc.setState(0x313e, 0xbcec, 0x8e50, 0x2b2d, 0x653f, 0x8df5, 0x0, 0x1);
        gbc.writeMem(0x313e, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xbcec, gbc.sp());
        EXPECT(0x3140, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 025E
        gbc.setState(0x8a6d, 0xa367, 0xdd00, 0x4d26, 0x1d4d, 0x8fe0, 0x1, 0x0);
        gbc.writeMem(0x8a6d, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xa367, gbc.sp());
        EXPECT(0x8a6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a6d));
        EXPECT(0xf8, gbc.readMem(0x8a6e));
        // CB F8 025F
        gbc.setState(0x3fed, 0x953b, 0x93e0, 0xf6b4, 0xa6da, 0x5387, 0x1, 0x0);
        gbc.writeMem(0x3fed, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x953b, gbc.sp());
        EXPECT(0x3fef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0260
        gbc.setState(0xd8ce, 0x8067, 0xaec0, 0x1263, 0xdf2f, 0xe466, 0x0, 0x1);
        gbc.writeMem(0xd8ce, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x8067, gbc.sp());
        EXPECT(0xd8d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8ce));
        EXPECT(0xf8, gbc.readMem(0xd8cf));
        // CB F8 0261
        gbc.setState(0x80dc, 0x6038, 0x6620, 0xcf7, 0x1179, 0x77c, 0x1, 0x1);
        gbc.writeMem(0x80dc, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x6038, gbc.sp());
        EXPECT(0x80de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80dc));
        EXPECT(0xf8, gbc.readMem(0x80dd));
        // CB F8 0263
        gbc.setState(0x127c, 0xc83a, 0x2f00, 0xe06d, 0xe5d2, 0xace, 0x1, 0x1);
        gbc.writeMem(0x127c, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xc83a, gbc.sp());
        EXPECT(0x127e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0264
        gbc.setState(0x9ec2, 0x215a, 0xe5e0, 0x4c56, 0xe60b, 0xd58d, 0x0, 0x0);
        gbc.writeMem(0x9ec2, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x215a, gbc.sp());
        EXPECT(0x9ec4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ec2));
        EXPECT(0xf8, gbc.readMem(0x9ec3));
        // CB F8 0265
        gbc.setState(0x40bf, 0xef53, 0x38e0, 0xa0ec, 0xc5b2, 0xa9dd, 0x1, 0x0);
        gbc.writeMem(0x40bf, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xef53, gbc.sp());
        EXPECT(0x40c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0266
        gbc.setState(0xdd48, 0x3823, 0xd5b0, 0xa125, 0x2831, 0x6fb9, 0x1, 0x1);
        gbc.writeMem(0xdd48, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x3823, gbc.sp());
        EXPECT(0xdd4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd48));
        EXPECT(0xf8, gbc.readMem(0xdd49));
        // CB F8 0267
        gbc.setState(0x7c05, 0x1329, 0x10b0, 0xe619, 0x4cf5, 0x6d6a, 0x1, 0x1);
        gbc.writeMem(0x7c05, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x1329, gbc.sp());
        EXPECT(0x7c07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0268
        gbc.setState(0xecd1, 0xe2c2, 0x9f70, 0xc0ed, 0x30ed, 0x7af0, 0x1, 0x0);
        gbc.writeMem(0xecd1, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xe2c2, gbc.sp());
        EXPECT(0xecd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecd1));
        EXPECT(0xf8, gbc.readMem(0xecd2));
        // CB F8 0269
        gbc.setState(0x8ae5, 0xf62d, 0x1760, 0xcb6e, 0x4bc6, 0xfb73, 0x0, 0x0);
        gbc.writeMem(0x8ae5, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xf62d, gbc.sp());
        EXPECT(0x8ae7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ae5));
        EXPECT(0xf8, gbc.readMem(0x8ae6));
        // CB F8 026A
        gbc.setState(0x6597, 0x4656, 0x9cc0, 0x5f0, 0xd85d, 0xb5d, 0x0, 0x0);
        gbc.writeMem(0x6597, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x4656, gbc.sp());
        EXPECT(0x6599, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 026B
        gbc.setState(0x3f40, 0xd2eb, 0xb30, 0x93c1, 0x49fd, 0x9879, 0x0, 0x1);
        gbc.writeMem(0x3f40, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xd2eb, gbc.sp());
        EXPECT(0x3f42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 026C
        gbc.setState(0x2973, 0x153e, 0x3cd0, 0xcb8b, 0xcb2a, 0xe671, 0x1, 0x0);
        gbc.writeMem(0x2973, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x153e, gbc.sp());
        EXPECT(0x2975, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 026D
        gbc.setState(0x183e, 0x4025, 0xfbe0, 0xf532, 0x7204, 0xfafc, 0x1, 0x0);
        gbc.writeMem(0x183e, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x4025, gbc.sp());
        EXPECT(0x1840, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 026E
        gbc.setState(0x66ba, 0xd8a5, 0x6470, 0x230b, 0x9322, 0xab5, 0x0, 0x1);
        gbc.writeMem(0x66ba, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xd8a5, gbc.sp());
        EXPECT(0x66bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 026F
        gbc.setState(0x9c3e, 0xc8ac, 0x9f10, 0xd74d, 0x6c7e, 0xa730, 0x1, 0x1);
        gbc.writeMem(0x9c3e, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xc8ac, gbc.sp());
        EXPECT(0x9c40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c3e));
        EXPECT(0xf8, gbc.readMem(0x9c3f));
        // CB F8 0270
        gbc.setState(0xb23e, 0xbc54, 0x6cd0, 0x5acf, 0x1494, 0x288a, 0x0, 0x1);
        gbc.writeMem(0xb23e, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xbc54, gbc.sp());
        EXPECT(0xb240, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb23e));
        EXPECT(0xf8, gbc.readMem(0xb23f));
        // CB F8 0271
        gbc.setState(0x8bce, 0xbeca, 0xdbf0, 0x7f74, 0xccd6, 0xfef, 0x1, 0x1);
        gbc.writeMem(0x8bce, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xbeca, gbc.sp());
        EXPECT(0x8bd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bce));
        EXPECT(0xf8, gbc.readMem(0x8bcf));
        // CB F8 0272
        gbc.setState(0x32df, 0xcd32, 0x5fb0, 0xf66d, 0x3f05, 0xaa54, 0x1, 0x0);
        gbc.writeMem(0x32df, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xcd32, gbc.sp());
        EXPECT(0x32e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0273
        gbc.setState(0x61e5, 0x8d93, 0x5d90, 0xc9ca, 0x6a0e, 0x7056, 0x1, 0x0);
        gbc.writeMem(0x61e5, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x8d93, gbc.sp());
        EXPECT(0x61e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0274
        gbc.setState(0x791f, 0x4d92, 0x3480, 0xc15b, 0xf483, 0x13c3, 0x0, 0x0);
        gbc.writeMem(0x791f, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x4d92, gbc.sp());
        EXPECT(0x7921, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0275
        gbc.setState(0x24dd, 0xabf6, 0xce40, 0x3a7d, 0x936e, 0xfe9a, 0x0, 0x0);
        gbc.writeMem(0x24dd, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xabf6, gbc.sp());
        EXPECT(0x24df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0276
        gbc.setState(0x6bfb, 0xe77d, 0xbaf0, 0x7783, 0x7a14, 0x41cb, 0x0, 0x1);
        gbc.writeMem(0x6bfb, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xe77d, gbc.sp());
        EXPECT(0x6bfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0277
        gbc.setState(0x60cf, 0x23, 0x2ab0, 0xe8b8, 0x73c5, 0xf65, 0x0, 0x0);
        gbc.writeMem(0x60cf, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x23, gbc.sp());
        EXPECT(0x60d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0278
        gbc.setState(0x667d, 0x4ace, 0xeb60, 0x158b, 0x57a2, 0xab16, 0x0, 0x1);
        gbc.writeMem(0x667d, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x4ace, gbc.sp());
        EXPECT(0x667f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0279
        gbc.setState(0x234a, 0x37b, 0xc0f0, 0x5236, 0x6ab6, 0x103a, 0x1, 0x1);
        gbc.writeMem(0x234a, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x37b, gbc.sp());
        EXPECT(0x234c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 027A
        gbc.setState(0xd1aa, 0x58a5, 0x88e0, 0xc262, 0x6d50, 0x596f, 0x0, 0x0);
        gbc.writeMem(0xd1aa, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x58a5, gbc.sp());
        EXPECT(0xd1ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1aa));
        EXPECT(0xf8, gbc.readMem(0xd1ab));
        // CB F8 027B
        gbc.setState(0x3298, 0xe25b, 0xd8d0, 0xfabd, 0x7d1b, 0xf619, 0x0, 0x1);
        gbc.writeMem(0x3298, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xe25b, gbc.sp());
        EXPECT(0x329a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 027C
        gbc.setState(0xdbc6, 0x2c9e, 0x87a0, 0xeca3, 0x3bc3, 0x18ba, 0x0, 0x1);
        gbc.writeMem(0xdbc6, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x2c9e, gbc.sp());
        EXPECT(0xdbc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbc6));
        EXPECT(0xf8, gbc.readMem(0xdbc7));
        // CB F8 027D
        gbc.setState(0x6f0b, 0x6bfe, 0xedc0, 0x28de, 0x19ea, 0x3a4c, 0x1, 0x1);
        gbc.writeMem(0x6f0b, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x6bfe, gbc.sp());
        EXPECT(0x6f0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 027E
        gbc.setState(0x7abe, 0x5874, 0x53c0, 0x222, 0xfa90, 0x8ef8, 0x0, 0x1);
        gbc.writeMem(0x7abe, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x5874, gbc.sp());
        EXPECT(0x7ac0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 027F
        gbc.setState(0x6d34, 0x2f29, 0xe9d0, 0x4332, 0x2c8a, 0xa12b, 0x0, 0x1);
        gbc.writeMem(0x6d34, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x2f29, gbc.sp());
        EXPECT(0x6d36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0280
        gbc.setState(0xc0cc, 0x4f02, 0xfcd0, 0x59ac, 0x76ab, 0x6f5c, 0x1, 0x0);
        gbc.writeMem(0xc0cc, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x4f02, gbc.sp());
        EXPECT(0xc0ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0cc));
        EXPECT(0xf8, gbc.readMem(0xc0cd));
        // CB F8 0281
        gbc.setState(0x2857, 0xba45, 0x87c0, 0xdb0a, 0x4006, 0xe6a6, 0x1, 0x0);
        gbc.writeMem(0x2857, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xba45, gbc.sp());
        EXPECT(0x2859, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0282
        gbc.setState(0x7781, 0x12e7, 0x4460, 0x3cd0, 0x17fa, 0x528d, 0x0, 0x0);
        gbc.writeMem(0x7781, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x12e7, gbc.sp());
        EXPECT(0x7783, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0283
        gbc.setState(0x7d87, 0xa0e0, 0xf60, 0xa473, 0xdf4d, 0xbfc8, 0x0, 0x1);
        gbc.writeMem(0x7d87, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xa0e0, gbc.sp());
        EXPECT(0x7d89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0284
        gbc.setState(0x93ff, 0xaa0d, 0xea80, 0x579b, 0x6aa9, 0xfe07, 0x0, 0x1);
        gbc.writeMem(0x93ff, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xaa0d, gbc.sp());
        EXPECT(0x9401, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93ff));
        EXPECT(0xf8, gbc.readMem(0x9400));
        // CB F8 0285
        gbc.setState(0x731c, 0xbf13, 0x73f0, 0x97a6, 0xbaef, 0xe3b1, 0x0, 0x0);
        gbc.writeMem(0x731c, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xbf13, gbc.sp());
        EXPECT(0x731e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0286
        gbc.setState(0xed86, 0xc284, 0x96b0, 0xc672, 0x413f, 0x499a, 0x0, 0x1);
        gbc.writeMem(0xed86, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xc284, gbc.sp());
        EXPECT(0xed88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed86));
        EXPECT(0xf8, gbc.readMem(0xed87));
        // CB F8 0287
        gbc.setState(0xe2f6, 0x40c6, 0x9ef0, 0x6de8, 0xc0e0, 0xe6c1, 0x1, 0x0);
        gbc.writeMem(0xe2f6, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x40c6, gbc.sp());
        EXPECT(0xe2f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2f6));
        EXPECT(0xf8, gbc.readMem(0xe2f7));
        // CB F8 0288
        gbc.setState(0xa81c, 0x9d4, 0x15b0, 0xafae, 0x16b0, 0xc1d0, 0x0, 0x0);
        gbc.writeMem(0xa81c, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x9d4, gbc.sp());
        EXPECT(0xa81e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa81c));
        EXPECT(0xf8, gbc.readMem(0xa81d));
        // CB F8 0289
        gbc.setState(0x5aaf, 0xb83, 0x1160, 0xbd15, 0xde60, 0x2e8b, 0x0, 0x1);
        gbc.writeMem(0x5aaf, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xb83, gbc.sp());
        EXPECT(0x5ab1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 028A
        gbc.setState(0x40b4, 0x3737, 0x7fa0, 0x8ac, 0xa21b, 0xe626, 0x0, 0x1);
        gbc.writeMem(0x40b4, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x3737, gbc.sp());
        EXPECT(0x40b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 028B
        gbc.setState(0x562d, 0x81bd, 0x640, 0x30fb, 0x5168, 0xe8ff, 0x1, 0x1);
        gbc.writeMem(0x562d, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x81bd, gbc.sp());
        EXPECT(0x562f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 028C
        gbc.setState(0x2a10, 0x2af4, 0x64a0, 0xf24d, 0x7d6d, 0xda4d, 0x1, 0x1);
        gbc.writeMem(0x2a10, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x2af4, gbc.sp());
        EXPECT(0x2a12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 028D
        gbc.setState(0x202c, 0x1499, 0x5210, 0xe037, 0x5eb1, 0x954e, 0x1, 0x0);
        gbc.writeMem(0x202c, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x1499, gbc.sp());
        EXPECT(0x202e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 028E
        gbc.setState(0x6ade, 0x3659, 0x6540, 0xcebe, 0x9c55, 0x3cf2, 0x0, 0x0);
        gbc.writeMem(0x6ade, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x3659, gbc.sp());
        EXPECT(0x6ae0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 028F
        gbc.setState(0x5849, 0x497f, 0x4d50, 0x9fea, 0x64cf, 0x3a9f, 0x1, 0x0);
        gbc.writeMem(0x5849, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x497f, gbc.sp());
        EXPECT(0x584b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0290
        gbc.setState(0xaabe, 0x24d6, 0xc560, 0x8901, 0xbc02, 0x158a, 0x0, 0x0);
        gbc.writeMem(0xaabe, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x24d6, gbc.sp());
        EXPECT(0xaac0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaabe));
        EXPECT(0xf8, gbc.readMem(0xaabf));
        // CB F8 0291
        gbc.setState(0x6f71, 0x5973, 0x25c0, 0xfd56, 0x4994, 0x138c, 0x1, 0x0);
        gbc.writeMem(0x6f71, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x5973, gbc.sp());
        EXPECT(0x6f73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0292
        gbc.setState(0xc139, 0x5f15, 0xbc90, 0x1300, 0xac5, 0x5035, 0x0, 0x0);
        gbc.writeMem(0xc139, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x5f15, gbc.sp());
        EXPECT(0xc13b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc139));
        EXPECT(0xf8, gbc.readMem(0xc13a));
        // CB F8 0293
        gbc.setState(0xd67a, 0xbeb0, 0x6720, 0x880e, 0x96ff, 0xda41, 0x0, 0x1);
        gbc.writeMem(0xd67a, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xbeb0, gbc.sp());
        EXPECT(0xd67c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd67a));
        EXPECT(0xf8, gbc.readMem(0xd67b));
        // CB F8 0294
        gbc.setState(0xc93, 0xdf99, 0x16d0, 0x6a31, 0xb33a, 0xb5d3, 0x1, 0x0);
        gbc.writeMem(0xc93, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xdf99, gbc.sp());
        EXPECT(0xc95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0295
        gbc.setState(0x2bc7, 0x50a5, 0xd2a0, 0x7200, 0x3188, 0xf9d5, 0x0, 0x0);
        gbc.writeMem(0x2bc7, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x50a5, gbc.sp());
        EXPECT(0x2bc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0296
        gbc.setState(0x1acf, 0xdb32, 0x45a0, 0xace1, 0xd6c1, 0x75f, 0x0, 0x0);
        gbc.writeMem(0x1acf, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xdb32, gbc.sp());
        EXPECT(0x1ad1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0297
        gbc.setState(0x5ada, 0x7b34, 0x1ec0, 0xd05d, 0x7886, 0x4164, 0x0, 0x1);
        gbc.writeMem(0x5ada, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x7b34, gbc.sp());
        EXPECT(0x5adc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0298
        gbc.setState(0xd785, 0xfc60, 0xd0a0, 0xc7fd, 0xb90d, 0x8749, 0x1, 0x0);
        gbc.writeMem(0xd785, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xfc60, gbc.sp());
        EXPECT(0xd787, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd785));
        EXPECT(0xf8, gbc.readMem(0xd786));
        // CB F8 0299
        gbc.setState(0x6ff, 0x3391, 0xb050, 0xb479, 0x9cb3, 0xb121, 0x0, 0x1);
        gbc.writeMem(0x6ff, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x3391, gbc.sp());
        EXPECT(0x701, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 029A
        gbc.setState(0x4a2, 0x5330, 0x4130, 0x8d8e, 0x94e6, 0xd8bc, 0x0, 0x0);
        gbc.writeMem(0x4a2, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x5330, gbc.sp());
        EXPECT(0x4a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 029B
        gbc.setState(0xecc7, 0x92d6, 0x830, 0xc971, 0x2b1, 0x1c7d, 0x1, 0x0);
        gbc.writeMem(0xecc7, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x92d6, gbc.sp());
        EXPECT(0xecc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecc7));
        EXPECT(0xf8, gbc.readMem(0xecc8));
        // CB F8 029C
        gbc.setState(0x30dc, 0xa28b, 0xd960, 0x9ebc, 0x8370, 0xb73c, 0x1, 0x0);
        gbc.writeMem(0x30dc, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xa28b, gbc.sp());
        EXPECT(0x30de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 029D
        gbc.setState(0x9e21, 0x606f, 0x8e80, 0x4637, 0xf2e5, 0xcff9, 0x0, 0x1);
        gbc.writeMem(0x9e21, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x606f, gbc.sp());
        EXPECT(0x9e23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e21));
        EXPECT(0xf8, gbc.readMem(0x9e22));
        // CB F8 029E
        gbc.setState(0xdd24, 0x7f7f, 0x640, 0x3557, 0xad87, 0xbb7d, 0x1, 0x0);
        gbc.writeMem(0xdd24, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x7f7f, gbc.sp());
        EXPECT(0xdd26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd24));
        EXPECT(0xf8, gbc.readMem(0xdd25));
        // CB F8 029F
        gbc.setState(0xe79d, 0xd370, 0xe360, 0xa96f, 0xbe35, 0x6d6f, 0x0, 0x0);
        gbc.writeMem(0xe79d, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xd370, gbc.sp());
        EXPECT(0xe79f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe79d));
        EXPECT(0xf8, gbc.readMem(0xe79e));
        // CB F8 02A0
        gbc.setState(0xdd3c, 0x4ba7, 0xde70, 0xeb53, 0x8640, 0x90c6, 0x0, 0x0);
        gbc.writeMem(0xdd3c, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x4ba7, gbc.sp());
        EXPECT(0xdd3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd3c));
        EXPECT(0xf8, gbc.readMem(0xdd3d));
        // CB F8 02A1
        gbc.setState(0x30d3, 0xe3c2, 0xda50, 0x1daf, 0x6533, 0x346c, 0x0, 0x1);
        gbc.writeMem(0x30d3, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xe3c2, gbc.sp());
        EXPECT(0x30d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 02A2
        gbc.setState(0xc7a1, 0xa8bb, 0x1c20, 0x8ef9, 0x5b87, 0x971a, 0x0, 0x0);
        gbc.writeMem(0xc7a1, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xa8bb, gbc.sp());
        EXPECT(0xc7a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7a1));
        EXPECT(0xf8, gbc.readMem(0xc7a2));
        // CB F8 02A3
        gbc.setState(0xb70b, 0x726b, 0x37c0, 0x6950, 0x7ae, 0x754e, 0x0, 0x0);
        gbc.writeMem(0xb70b, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x726b, gbc.sp());
        EXPECT(0xb70d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb70b));
        EXPECT(0xf8, gbc.readMem(0xb70c));
        // CB F8 02A4
        gbc.setState(0xbaa5, 0x625b, 0x400, 0x1db4, 0x6ec9, 0xb5f, 0x0, 0x0);
        gbc.writeMem(0xbaa5, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x625b, gbc.sp());
        EXPECT(0xbaa7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbaa5));
        EXPECT(0xf8, gbc.readMem(0xbaa6));
        // CB F8 02A6
        gbc.setState(0xed34, 0x34fd, 0xb4a0, 0xcfa7, 0xa871, 0xec7c, 0x0, 0x0);
        gbc.writeMem(0xed34, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x34fd, gbc.sp());
        EXPECT(0xed36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed34));
        EXPECT(0xf8, gbc.readMem(0xed35));
        // CB F8 02A7
        gbc.setState(0xb88d, 0x3782, 0xda0, 0xc787, 0x2bb, 0x24be, 0x0, 0x1);
        gbc.writeMem(0xb88d, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x3782, gbc.sp());
        EXPECT(0xb88f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb88d));
        EXPECT(0xf8, gbc.readMem(0xb88e));
        // CB F8 02A8
        gbc.setState(0x5893, 0xc248, 0xdff0, 0xe163, 0x2118, 0x19ae, 0x0, 0x0);
        gbc.writeMem(0x5893, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xc248, gbc.sp());
        EXPECT(0x5895, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 02A9
        gbc.setState(0x7eaa, 0xed7b, 0xfa70, 0xb8be, 0x99ef, 0x5c09, 0x1, 0x0);
        gbc.writeMem(0x7eaa, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xed7b, gbc.sp());
        EXPECT(0x7eac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 02AA
        gbc.setState(0xe602, 0x12f5, 0xf880, 0xfeb4, 0xe945, 0xe7f0, 0x1, 0x1);
        gbc.writeMem(0xe602, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x12f5, gbc.sp());
        EXPECT(0xe604, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe602));
        EXPECT(0xf8, gbc.readMem(0xe603));
        // CB F8 02AB
        gbc.setState(0xa4b9, 0xf21f, 0xe5d0, 0xa158, 0xa7f6, 0xf36d, 0x1, 0x1);
        gbc.writeMem(0xa4b9, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xf21f, gbc.sp());
        EXPECT(0xa4bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4b9));
        EXPECT(0xf8, gbc.readMem(0xa4ba));
        // CB F8 02AC
        gbc.setState(0x1e80, 0xe3f8, 0x82d0, 0x65a2, 0xa3f1, 0xc14a, 0x0, 0x0);
        gbc.writeMem(0x1e80, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xe3f8, gbc.sp());
        EXPECT(0x1e82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 02AD
        gbc.setState(0x3ff4, 0xa1c4, 0x9b10, 0xf4e1, 0x80dc, 0x9f01, 0x1, 0x1);
        gbc.writeMem(0x3ff4, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xa1c4, gbc.sp());
        EXPECT(0x3ff6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 02AE
        gbc.setState(0x47aa, 0xc041, 0x6ea0, 0xb0cd, 0x92ce, 0x82b, 0x0, 0x1);
        gbc.writeMem(0x47aa, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xc041, gbc.sp());
        EXPECT(0x47ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 02AF
        gbc.setState(0x109c, 0x1567, 0x8500, 0x4ae0, 0xba89, 0xd1ba, 0x1, 0x1);
        gbc.writeMem(0x109c, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x1567, gbc.sp());
        EXPECT(0x109e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 02B0
        gbc.setState(0xebc, 0x830e, 0x6960, 0xefaf, 0x75c, 0xe55b, 0x1, 0x0);
        gbc.writeMem(0xebc, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x830e, gbc.sp());
        EXPECT(0xebe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 02B1
        gbc.setState(0x8045, 0xa2be, 0xc830, 0xc6ce, 0xc1e5, 0x8366, 0x1, 0x0);
        gbc.writeMem(0x8045, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xa2be, gbc.sp());
        EXPECT(0x8047, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8045));
        EXPECT(0xf8, gbc.readMem(0x8046));
        // CB F8 02B2
        gbc.setState(0x7c62, 0xa99, 0xb9d0, 0x4c7c, 0xcdeb, 0x27cb, 0x1, 0x1);
        gbc.writeMem(0x7c62, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xa99, gbc.sp());
        EXPECT(0x7c64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 02B3
        gbc.setState(0x9d28, 0x6fba, 0xcdd0, 0x1667, 0x3779, 0x49e, 0x1, 0x0);
        gbc.writeMem(0x9d28, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x6fba, gbc.sp());
        EXPECT(0x9d2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d28));
        EXPECT(0xf8, gbc.readMem(0x9d29));
        // CB F8 02B4
        gbc.setState(0xe5ff, 0x52dd, 0xcc70, 0x49c7, 0x2b78, 0xfbd5, 0x0, 0x0);
        gbc.writeMem(0xe5ff, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x52dd, gbc.sp());
        EXPECT(0xe601, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5ff));
        EXPECT(0xf8, gbc.readMem(0xe600));
        // CB F8 02B5
        gbc.setState(0x4639, 0x6535, 0xb780, 0xc8a9, 0xc7a9, 0x56e0, 0x0, 0x1);
        gbc.writeMem(0x4639, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x6535, gbc.sp());
        EXPECT(0x463b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 02B6
        gbc.setState(0x7caf, 0xe4c3, 0x9e80, 0x4a69, 0x47c9, 0x71bf, 0x0, 0x0);
        gbc.writeMem(0x7caf, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xe4c3, gbc.sp());
        EXPECT(0x7cb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 02B7
        gbc.setState(0x6e02, 0xd2d3, 0x4d40, 0xdaad, 0xeff8, 0x11e8, 0x0, 0x0);
        gbc.writeMem(0x6e02, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xd2d3, gbc.sp());
        EXPECT(0x6e04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 02B8
        gbc.setState(0x91ae, 0x3055, 0x4bd0, 0xdca2, 0x77fb, 0xa03a, 0x0, 0x0);
        gbc.writeMem(0x91ae, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x3055, gbc.sp());
        EXPECT(0x91b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91ae));
        EXPECT(0xf8, gbc.readMem(0x91af));
        // CB F8 02B9
        gbc.setState(0x6ad4, 0xc339, 0x3200, 0xd1bc, 0x74df, 0x592f, 0x1, 0x1);
        gbc.writeMem(0x6ad4, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xc339, gbc.sp());
        EXPECT(0x6ad6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 02BA
        gbc.setState(0xd546, 0x6482, 0x2d90, 0xc164, 0x95c2, 0x8a1b, 0x1, 0x1);
        gbc.writeMem(0xd546, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x6482, gbc.sp());
        EXPECT(0xd548, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd546));
        EXPECT(0xf8, gbc.readMem(0xd547));
        // CB F8 02BB
        gbc.setState(0x8242, 0x1a2a, 0x4a70, 0xa7b0, 0x3676, 0x8484, 0x1, 0x1);
        gbc.writeMem(0x8242, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x1a2a, gbc.sp());
        EXPECT(0x8244, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8242));
        EXPECT(0xf8, gbc.readMem(0x8243));
        // CB F8 02BC
        gbc.setState(0x8076, 0x5636, 0xe0a0, 0x9bb0, 0xbd68, 0xccdd, 0x0, 0x0);
        gbc.writeMem(0x8076, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x5636, gbc.sp());
        EXPECT(0x8078, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8076));
        EXPECT(0xf8, gbc.readMem(0x8077));
        // CB F8 02BD
        gbc.setState(0xa858, 0x6996, 0x4d0, 0x5b0e, 0xf160, 0x36c0, 0x0, 0x1);
        gbc.writeMem(0xa858, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x6996, gbc.sp());
        EXPECT(0xa85a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa858));
        EXPECT(0xf8, gbc.readMem(0xa859));
        // CB F8 02BE
        gbc.setState(0xdf19, 0xe757, 0x4cd0, 0xdc9f, 0x3139, 0xeb32, 0x0, 0x0);
        gbc.writeMem(0xdf19, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xe757, gbc.sp());
        EXPECT(0xdf1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf19));
        EXPECT(0xf8, gbc.readMem(0xdf1a));
        // CB F8 02BF
        gbc.setState(0x4615, 0x33c9, 0x3330, 0xc696, 0xdee9, 0x1a36, 0x1, 0x1);
        gbc.writeMem(0x4615, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x33c9, gbc.sp());
        EXPECT(0x4617, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 02C0
        gbc.setState(0xd844, 0xcbe0, 0x3380, 0xcb73, 0x6202, 0x4ea2, 0x1, 0x0);
        gbc.writeMem(0xd844, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xcbe0, gbc.sp());
        EXPECT(0xd846, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd844));
        EXPECT(0xf8, gbc.readMem(0xd845));
        // CB F8 02C1
        gbc.setState(0xe21c, 0xfd81, 0xabd0, 0xa4f, 0x95d8, 0x451f, 0x0, 0x0);
        gbc.writeMem(0xe21c, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xfd81, gbc.sp());
        EXPECT(0xe21e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe21c));
        EXPECT(0xf8, gbc.readMem(0xe21d));
        // CB F8 02C2
        gbc.setState(0xc759, 0xd933, 0x7680, 0xc3f2, 0x37f9, 0x21eb, 0x1, 0x0);
        gbc.writeMem(0xc759, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xd933, gbc.sp());
        EXPECT(0xc75b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc759));
        EXPECT(0xf8, gbc.readMem(0xc75a));
        // CB F8 02C3
        gbc.setState(0x3d62, 0x310b, 0x6f80, 0xe3a6, 0xfeec, 0x7d6, 0x0, 0x1);
        gbc.writeMem(0x3d62, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x310b, gbc.sp());
        EXPECT(0x3d64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 02C4
        gbc.setState(0xdec0, 0x64f2, 0x34a0, 0x83b0, 0x878f, 0xd0ae, 0x1, 0x0);
        gbc.writeMem(0xdec0, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x64f2, gbc.sp());
        EXPECT(0xdec2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdec0));
        EXPECT(0xf8, gbc.readMem(0xdec1));
        // CB F8 02C5
        gbc.setState(0xa8ca, 0x6633, 0x3a0, 0xdd34, 0xe57d, 0x9042, 0x1, 0x0);
        gbc.writeMem(0xa8ca, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x6633, gbc.sp());
        EXPECT(0xa8cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8ca));
        EXPECT(0xf8, gbc.readMem(0xa8cb));
        // CB F8 02C6
        gbc.setState(0xb4ab, 0x330f, 0xd9d0, 0xf83c, 0xf948, 0xa2d1, 0x0, 0x0);
        gbc.writeMem(0xb4ab, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x330f, gbc.sp());
        EXPECT(0xb4ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4ab));
        EXPECT(0xf8, gbc.readMem(0xb4ac));
        // CB F8 02C7
        gbc.setState(0xb1aa, 0xcced, 0xc4b0, 0x9a1a, 0xef85, 0xa8e7, 0x1, 0x1);
        gbc.writeMem(0xb1aa, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xcced, gbc.sp());
        EXPECT(0xb1ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1aa));
        EXPECT(0xf8, gbc.readMem(0xb1ab));
        // CB F8 02C8
        gbc.setState(0xea37, 0x1b3, 0xa7a0, 0xf9a2, 0xef79, 0xc0bf, 0x0, 0x1);
        gbc.writeMem(0xea37, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x1b3, gbc.sp());
        EXPECT(0xea39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea37));
        EXPECT(0xf8, gbc.readMem(0xea38));
        // CB F8 02C9
        gbc.setState(0x43d9, 0x258a, 0x8f0, 0x8083, 0x6ee7, 0xea2e, 0x0, 0x0);
        gbc.writeMem(0x43d9, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x258a, gbc.sp());
        EXPECT(0x43db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 02CA
        gbc.setState(0x8fc0, 0xeca0, 0x70a0, 0x1f9e, 0x9a1b, 0xb858, 0x1, 0x1);
        gbc.writeMem(0x8fc0, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xeca0, gbc.sp());
        EXPECT(0x8fc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fc0));
        EXPECT(0xf8, gbc.readMem(0x8fc1));
        // CB F8 02CC
        gbc.setState(0x78cb, 0x369f, 0x6840, 0xb6e, 0xd8e8, 0x4f52, 0x1, 0x1);
        gbc.writeMem(0x78cb, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x369f, gbc.sp());
        EXPECT(0x78cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 02CD
        gbc.setState(0xe167, 0xc694, 0xa3c0, 0xa5ff, 0x8328, 0x3817, 0x0, 0x1);
        gbc.writeMem(0xe167, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xc694, gbc.sp());
        EXPECT(0xe169, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe167));
        EXPECT(0xf8, gbc.readMem(0xe168));
        // CB F8 02CE
        gbc.setState(0x2162, 0xe586, 0xee80, 0x4c3c, 0xe1e6, 0x9d7f, 0x1, 0x1);
        gbc.writeMem(0x2162, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xe586, gbc.sp());
        EXPECT(0x2164, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 02CF
        gbc.setState(0x4b92, 0x1937, 0x5250, 0x66b3, 0x6da0, 0xb947, 0x0, 0x0);
        gbc.writeMem(0x4b92, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x1937, gbc.sp());
        EXPECT(0x4b94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 02D0
        gbc.setState(0x3638, 0xe29a, 0x77c0, 0xe726, 0x183d, 0x9024, 0x1, 0x0);
        gbc.writeMem(0x3638, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xe29a, gbc.sp());
        EXPECT(0x363a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 02D1
        gbc.setState(0xcfa, 0x6e23, 0x6460, 0x5c64, 0x4cbb, 0xd434, 0x0, 0x1);
        gbc.writeMem(0xcfa, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x6e23, gbc.sp());
        EXPECT(0xcfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 02D2
        gbc.setState(0xe05a, 0x1212, 0xc990, 0xd7ac, 0xb001, 0x6f8e, 0x0, 0x0);
        gbc.writeMem(0xe05a, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x1212, gbc.sp());
        EXPECT(0xe05c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe05a));
        EXPECT(0xf8, gbc.readMem(0xe05b));
        // CB F8 02D3
        gbc.setState(0xd295, 0xcc43, 0x6480, 0x36aa, 0x5c00, 0x5d1a, 0x1, 0x1);
        gbc.writeMem(0xd295, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xcc43, gbc.sp());
        EXPECT(0xd297, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd295));
        EXPECT(0xf8, gbc.readMem(0xd296));
        // CB F8 02D4
        gbc.setState(0x6954, 0x1672, 0x4690, 0xa1f7, 0xcab, 0x1b59, 0x0, 0x0);
        gbc.writeMem(0x6954, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x1672, gbc.sp());
        EXPECT(0x6956, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 02D5
        gbc.setState(0x1b3b, 0xe8d, 0x28c0, 0xbeeb, 0xa799, 0xcab5, 0x1, 0x0);
        gbc.writeMem(0x1b3b, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xe8d, gbc.sp());
        EXPECT(0x1b3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 02D6
        gbc.setState(0xab87, 0xe3ec, 0xeff0, 0xabce, 0x123, 0xeb7e, 0x1, 0x1);
        gbc.writeMem(0xab87, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xe3ec, gbc.sp());
        EXPECT(0xab89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab87));
        EXPECT(0xf8, gbc.readMem(0xab88));
        // CB F8 02D7
        gbc.setState(0x46d2, 0xb74a, 0x33a0, 0xe49b, 0xe112, 0x5600, 0x1, 0x1);
        gbc.writeMem(0x46d2, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xb74a, gbc.sp());
        EXPECT(0x46d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 02D8
        gbc.setState(0xc88d, 0x8f1a, 0x930, 0xe12f, 0xb891, 0x46bb, 0x1, 0x1);
        gbc.writeMem(0xc88d, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x8f1a, gbc.sp());
        EXPECT(0xc88f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc88d));
        EXPECT(0xf8, gbc.readMem(0xc88e));
        // CB F8 02D9
        gbc.setState(0x1740, 0x4591, 0x9770, 0x12f3, 0x35cb, 0x5e4a, 0x0, 0x0);
        gbc.writeMem(0x1740, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x4591, gbc.sp());
        EXPECT(0x1742, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 02DA
        gbc.setState(0xbf06, 0x9a3b, 0x2c20, 0xba2a, 0xc419, 0xec51, 0x1, 0x0);
        gbc.writeMem(0xbf06, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x9a3b, gbc.sp());
        EXPECT(0xbf08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf06));
        EXPECT(0xf8, gbc.readMem(0xbf07));
        // CB F8 02DB
        gbc.setState(0x9c38, 0xd600, 0xd550, 0x20ce, 0xf852, 0xdc4b, 0x0, 0x0);
        gbc.writeMem(0x9c38, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xd600, gbc.sp());
        EXPECT(0x9c3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c38));
        EXPECT(0xf8, gbc.readMem(0x9c39));
        // CB F8 02DC
        gbc.setState(0x4df3, 0x9670, 0xb200, 0xad2c, 0x7a27, 0x2598, 0x0, 0x0);
        gbc.writeMem(0x4df3, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x9670, gbc.sp());
        EXPECT(0x4df5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 02DD
        gbc.setState(0xd89b, 0x5dbc, 0xb4f0, 0xb010, 0xe95b, 0x414, 0x0, 0x1);
        gbc.writeMem(0xd89b, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x5dbc, gbc.sp());
        EXPECT(0xd89d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd89b));
        EXPECT(0xf8, gbc.readMem(0xd89c));
        // CB F8 02DF
        gbc.setState(0x7dde, 0x1832, 0xd580, 0x2f53, 0x4773, 0x5b8b, 0x1, 0x1);
        gbc.writeMem(0x7dde, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x1832, gbc.sp());
        EXPECT(0x7de0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 02E0
        gbc.setState(0xa0f6, 0xec1, 0xec00, 0xba83, 0x9eed, 0x888d, 0x0, 0x1);
        gbc.writeMem(0xa0f6, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xec1, gbc.sp());
        EXPECT(0xa0f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0f6));
        EXPECT(0xf8, gbc.readMem(0xa0f7));
        // CB F8 02E1
        gbc.setState(0x2b67, 0xdd89, 0x57a0, 0x32d6, 0x35a5, 0xa1a, 0x1, 0x1);
        gbc.writeMem(0x2b67, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xdd89, gbc.sp());
        EXPECT(0x2b69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 02E3
        gbc.setState(0x5f60, 0xbc64, 0x81f0, 0x2178, 0xd9c6, 0xa4cc, 0x1, 0x0);
        gbc.writeMem(0x5f60, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xbc64, gbc.sp());
        EXPECT(0x5f62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 02E4
        gbc.setState(0x5b64, 0x2f1, 0x1fc0, 0x9f91, 0xf8c2, 0x925d, 0x1, 0x0);
        gbc.writeMem(0x5b64, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x2f1, gbc.sp());
        EXPECT(0x5b66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 02E5
        gbc.setState(0x4afe, 0x5eab, 0x97e0, 0x2756, 0x4714, 0x333d, 0x0, 0x0);
        gbc.writeMem(0x4afe, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x5eab, gbc.sp());
        EXPECT(0x4b00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 02E6
        gbc.setState(0x6b7a, 0x3dd9, 0x6fe0, 0x1cf9, 0x94a, 0xd955, 0x1, 0x1);
        gbc.writeMem(0x6b7a, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x3dd9, gbc.sp());
        EXPECT(0x6b7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 02E7
        gbc.setState(0x76c0, 0xf96, 0xef60, 0xbfe5, 0x2dd9, 0xe9ac, 0x0, 0x1);
        gbc.writeMem(0x76c0, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xf96, gbc.sp());
        EXPECT(0x76c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 02E8
        gbc.setState(0x7ae9, 0x2b21, 0xa500, 0x5854, 0xddea, 0xc8f0, 0x1, 0x0);
        gbc.writeMem(0x7ae9, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x2b21, gbc.sp());
        EXPECT(0x7aeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 02E9
        gbc.setState(0xc2e8, 0xa8e5, 0x1540, 0x416b, 0xfe6b, 0xce37, 0x1, 0x1);
        gbc.writeMem(0xc2e8, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xa8e5, gbc.sp());
        EXPECT(0xc2ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2e8));
        EXPECT(0xf8, gbc.readMem(0xc2e9));
        // CB F8 02EA
        gbc.setState(0x56c4, 0x7dca, 0xd690, 0xe9c7, 0xcecd, 0x9715, 0x1, 0x1);
        gbc.writeMem(0x56c4, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x7dca, gbc.sp());
        EXPECT(0x56c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 02EB
        gbc.setState(0xc607, 0x7648, 0xac0, 0xc269, 0xa347, 0x93c, 0x1, 0x1);
        gbc.writeMem(0xc607, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x7648, gbc.sp());
        EXPECT(0xc609, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc607));
        EXPECT(0xf8, gbc.readMem(0xc608));
        // CB F8 02EC
        gbc.setState(0xe211, 0x6446, 0x4610, 0xac9b, 0x84d, 0xe18f, 0x1, 0x0);
        gbc.writeMem(0xe211, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x6446, gbc.sp());
        EXPECT(0xe213, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe211));
        EXPECT(0xf8, gbc.readMem(0xe212));
        // CB F8 02ED
        gbc.setState(0xe1d9, 0xb64b, 0x9010, 0x143a, 0x5615, 0xa0ee, 0x1, 0x1);
        gbc.writeMem(0xe1d9, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xb64b, gbc.sp());
        EXPECT(0xe1db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1d9));
        EXPECT(0xf8, gbc.readMem(0xe1da));
        // CB F8 02EE
        gbc.setState(0xdede, 0x2d44, 0x6d30, 0x3c6, 0x3e1, 0xdfd1, 0x0, 0x0);
        gbc.writeMem(0xdede, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x2d44, gbc.sp());
        EXPECT(0xdee0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdede));
        EXPECT(0xf8, gbc.readMem(0xdedf));
        // CB F8 02EF
        gbc.setState(0xba43, 0x434, 0xd4a0, 0xd24a, 0x2aa2, 0xbdbb, 0x1, 0x1);
        gbc.writeMem(0xba43, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x434, gbc.sp());
        EXPECT(0xba45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba43));
        EXPECT(0xf8, gbc.readMem(0xba44));
        // CB F8 02F0
        gbc.setState(0xcd3f, 0x1011, 0x5360, 0x9691, 0x615c, 0xb3fb, 0x1, 0x1);
        gbc.writeMem(0xcd3f, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x1011, gbc.sp());
        EXPECT(0xcd41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd3f));
        EXPECT(0xf8, gbc.readMem(0xcd40));
        // CB F8 02F1
        gbc.setState(0x1e21, 0x4eeb, 0x5710, 0x9534, 0xde1e, 0x8976, 0x0, 0x0);
        gbc.writeMem(0x1e21, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x4eeb, gbc.sp());
        EXPECT(0x1e23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 02F2
        gbc.setState(0xb18f, 0x8945, 0xb3e0, 0xdf3a, 0x308e, 0xa3af, 0x1, 0x1);
        gbc.writeMem(0xb18f, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x8945, gbc.sp());
        EXPECT(0xb191, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb18f));
        EXPECT(0xf8, gbc.readMem(0xb190));
        // CB F8 02F3
        gbc.setState(0x4f6d, 0x18e5, 0xce70, 0x43d9, 0x4849, 0xc31f, 0x1, 0x0);
        gbc.writeMem(0x4f6d, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x18e5, gbc.sp());
        EXPECT(0x4f6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 02F4
        gbc.setState(0xeb11, 0x441d, 0x670, 0x4ef5, 0x53b, 0xa8f0, 0x1, 0x1);
        gbc.writeMem(0xeb11, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x441d, gbc.sp());
        EXPECT(0xeb13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb11));
        EXPECT(0xf8, gbc.readMem(0xeb12));
        // CB F8 02F5
        gbc.setState(0xa16e, 0xadb, 0xa9b0, 0x4c08, 0x5472, 0x97b6, 0x1, 0x1);
        gbc.writeMem(0xa16e, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xadb, gbc.sp());
        EXPECT(0xa170, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa16e));
        EXPECT(0xf8, gbc.readMem(0xa16f));
        // CB F8 02F6
        gbc.setState(0x62b4, 0x5419, 0x79a0, 0xa08d, 0xf468, 0x1e1, 0x1, 0x1);
        gbc.writeMem(0x62b4, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x5419, gbc.sp());
        EXPECT(0x62b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 02F7
        gbc.setState(0x616d, 0x2460, 0x9990, 0x4bd1, 0x34b6, 0xa994, 0x1, 0x1);
        gbc.writeMem(0x616d, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x2460, gbc.sp());
        EXPECT(0x616f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 02F8
        gbc.setState(0x3e0c, 0x634e, 0x3780, 0x55a6, 0x22b2, 0x5eb4, 0x0, 0x1);
        gbc.writeMem(0x3e0c, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x634e, gbc.sp());
        EXPECT(0x3e0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 02F9
        gbc.setState(0xd4bd, 0x602b, 0xf8d0, 0xad24, 0xc66b, 0x50f9, 0x0, 0x1);
        gbc.writeMem(0xd4bd, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x602b, gbc.sp());
        EXPECT(0xd4bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4bd));
        EXPECT(0xf8, gbc.readMem(0xd4be));
        // CB F8 02FB
        gbc.setState(0x2af3, 0x417b, 0xba50, 0x551c, 0xcccc, 0x2724, 0x1, 0x0);
        gbc.writeMem(0x2af3, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x417b, gbc.sp());
        EXPECT(0x2af5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 02FC
        gbc.setState(0xb86f, 0x6b78, 0x5e30, 0x9364, 0x35c3, 0x1d85, 0x0, 0x0);
        gbc.writeMem(0xb86f, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x6b78, gbc.sp());
        EXPECT(0xb871, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb86f));
        EXPECT(0xf8, gbc.readMem(0xb870));
        // CB F8 02FD
        gbc.setState(0x811a, 0x59a3, 0x4010, 0xc298, 0x1b7e, 0x375, 0x1, 0x1);
        gbc.writeMem(0x811a, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x59a3, gbc.sp());
        EXPECT(0x811c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x811a));
        EXPECT(0xf8, gbc.readMem(0x811b));
        // CB F8 02FE
        gbc.setState(0x5f73, 0xc0ec, 0x92d0, 0xc252, 0xb131, 0x4958, 0x1, 0x1);
        gbc.writeMem(0x5f73, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xc0ec, gbc.sp());
        EXPECT(0x5f75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 02FF
        gbc.setState(0xe542, 0x6024, 0x1340, 0x636a, 0x4e7e, 0xa2d, 0x0, 0x0);
        gbc.writeMem(0xe542, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x6024, gbc.sp());
        EXPECT(0xe544, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe542));
        EXPECT(0xf8, gbc.readMem(0xe543));
        // CB F8 0300
        gbc.setState(0xedde, 0xf209, 0xf040, 0x5ab3, 0x952c, 0xcf83, 0x1, 0x1);
        gbc.writeMem(0xedde, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xf209, gbc.sp());
        EXPECT(0xede0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedde));
        EXPECT(0xf8, gbc.readMem(0xeddf));
        // CB F8 0301
        gbc.setState(0x7114, 0x3ca2, 0xc2f0, 0x73c1, 0xd858, 0x5b1d, 0x0, 0x1);
        gbc.writeMem(0x7114, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x3ca2, gbc.sp());
        EXPECT(0x7116, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0302
        gbc.setState(0x4007, 0xaeac, 0x86e0, 0xe8bb, 0x7bd5, 0xc460, 0x1, 0x0);
        gbc.writeMem(0x4007, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xaeac, gbc.sp());
        EXPECT(0x4009, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0303
        gbc.setState(0x57df, 0x1037, 0x5210, 0x794e, 0xd890, 0xe9c5, 0x0, 0x0);
        gbc.writeMem(0x57df, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x1037, gbc.sp());
        EXPECT(0x57e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0304
        gbc.setState(0xe39d, 0x896, 0x5d90, 0xa342, 0x3ea7, 0x3457, 0x0, 0x0);
        gbc.writeMem(0xe39d, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x896, gbc.sp());
        EXPECT(0xe39f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe39d));
        EXPECT(0xf8, gbc.readMem(0xe39e));
        // CB F8 0305
        gbc.setState(0x58cf, 0x11e8, 0xa8f0, 0xead9, 0x656e, 0x750b, 0x1, 0x0);
        gbc.writeMem(0x58cf, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x11e8, gbc.sp());
        EXPECT(0x58d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0306
        gbc.setState(0x9b10, 0xfcae, 0x53e0, 0x1ae3, 0xf8f6, 0x7094, 0x0, 0x1);
        gbc.writeMem(0x9b10, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xfcae, gbc.sp());
        EXPECT(0x9b12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b10));
        EXPECT(0xf8, gbc.readMem(0x9b11));
        // CB F8 0307
        gbc.setState(0xd530, 0xe89, 0x6200, 0xefb3, 0x7566, 0xf879, 0x1, 0x1);
        gbc.writeMem(0xd530, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xe89, gbc.sp());
        EXPECT(0xd532, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd530));
        EXPECT(0xf8, gbc.readMem(0xd531));
        // CB F8 0308
        gbc.setState(0x754a, 0x641c, 0x72a0, 0xb0ad, 0xb025, 0xda74, 0x0, 0x0);
        gbc.writeMem(0x754a, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x641c, gbc.sp());
        EXPECT(0x754c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0309
        gbc.setState(0xd5d, 0xc220, 0x9800, 0xd1fb, 0x58f1, 0x6f88, 0x1, 0x0);
        gbc.writeMem(0xd5d, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xc220, gbc.sp());
        EXPECT(0xd5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 030A
        gbc.setState(0x2447, 0xccc5, 0xefb0, 0xc95f, 0xd251, 0xc80b, 0x0, 0x1);
        gbc.writeMem(0x2447, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xccc5, gbc.sp());
        EXPECT(0x2449, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 030B
        gbc.setState(0x42c7, 0x2cbc, 0x5600, 0xa1e2, 0xc6a1, 0xe2d3, 0x0, 0x1);
        gbc.writeMem(0x42c7, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x2cbc, gbc.sp());
        EXPECT(0x42c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 030C
        gbc.setState(0x43e4, 0xa4f2, 0xfe90, 0xeabd, 0x11f7, 0xe1cc, 0x0, 0x0);
        gbc.writeMem(0x43e4, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xa4f2, gbc.sp());
        EXPECT(0x43e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 030D
        gbc.setState(0xa31d, 0x3d18, 0xfa10, 0xaffd, 0x36fa, 0x6484, 0x1, 0x0);
        gbc.writeMem(0xa31d, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x3d18, gbc.sp());
        EXPECT(0xa31f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa31d));
        EXPECT(0xf8, gbc.readMem(0xa31e));
        // CB F8 030E
        gbc.setState(0xb34, 0x64b8, 0x17f0, 0x7db3, 0x7721, 0x1f08, 0x0, 0x1);
        gbc.writeMem(0xb34, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x64b8, gbc.sp());
        EXPECT(0xb36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 030F
        gbc.setState(0xecc0, 0x51a6, 0x1750, 0x6bd4, 0x73b6, 0xcf8a, 0x0, 0x1);
        gbc.writeMem(0xecc0, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x51a6, gbc.sp());
        EXPECT(0xecc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecc0));
        EXPECT(0xf8, gbc.readMem(0xecc1));
        // CB F8 0310
        gbc.setState(0x28e4, 0xfc78, 0x7f90, 0x5375, 0xadb3, 0xbaf9, 0x1, 0x1);
        gbc.writeMem(0x28e4, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xfc78, gbc.sp());
        EXPECT(0x28e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0311
        gbc.setState(0x566c, 0x157d, 0x7740, 0xfc29, 0x98f2, 0x3e8e, 0x1, 0x0);
        gbc.writeMem(0x566c, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x157d, gbc.sp());
        EXPECT(0x566e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0312
        gbc.setState(0xe8dd, 0x3a97, 0x71c0, 0x3268, 0x2b1e, 0x590c, 0x1, 0x0);
        gbc.writeMem(0xe8dd, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x3a97, gbc.sp());
        EXPECT(0xe8df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8dd));
        EXPECT(0xf8, gbc.readMem(0xe8de));
        // CB F8 0313
        gbc.setState(0x28f2, 0xdf20, 0x4100, 0xf1d8, 0x2c2d, 0x2e88, 0x1, 0x0);
        gbc.writeMem(0x28f2, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xdf20, gbc.sp());
        EXPECT(0x28f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0314
        gbc.setState(0x966c, 0x3ba3, 0x47a0, 0x1fd6, 0xe4f4, 0x86fe, 0x0, 0x0);
        gbc.writeMem(0x966c, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x3ba3, gbc.sp());
        EXPECT(0x966e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x966c));
        EXPECT(0xf8, gbc.readMem(0x966d));
        // CB F8 0315
        gbc.setState(0x9774, 0x80e, 0x1c90, 0xfd77, 0x763f, 0x289b, 0x1, 0x1);
        gbc.writeMem(0x9774, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x80e, gbc.sp());
        EXPECT(0x9776, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9774));
        EXPECT(0xf8, gbc.readMem(0x9775));
        // CB F8 0316
        gbc.setState(0xe423, 0x9087, 0x72c0, 0xf3d5, 0x9763, 0x66ac, 0x0, 0x1);
        gbc.writeMem(0xe423, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x9087, gbc.sp());
        EXPECT(0xe425, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe423));
        EXPECT(0xf8, gbc.readMem(0xe424));
        // CB F8 0317
        gbc.setState(0xe64e, 0x258, 0xd200, 0x501, 0xeff9, 0xba95, 0x0, 0x1);
        gbc.writeMem(0xe64e, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x258, gbc.sp());
        EXPECT(0xe650, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe64e));
        EXPECT(0xf8, gbc.readMem(0xe64f));
        // CB F8 0318
        gbc.setState(0x158, 0x8259, 0xa140, 0x8c52, 0x74fe, 0x7, 0x0, 0x0);
        gbc.writeMem(0x158, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x8259, gbc.sp());
        EXPECT(0x15a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 031A
        gbc.setState(0x91d, 0xf9d8, 0x1630, 0xf640, 0xb732, 0x5093, 0x0, 0x0);
        gbc.writeMem(0x91d, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xf9d8, gbc.sp());
        EXPECT(0x91f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 031B
        gbc.setState(0xa97b, 0xec3f, 0xed50, 0x4df9, 0x65eb, 0x81be, 0x1, 0x1);
        gbc.writeMem(0xa97b, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xec3f, gbc.sp());
        EXPECT(0xa97d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa97b));
        EXPECT(0xf8, gbc.readMem(0xa97c));
        // CB F8 031C
        gbc.setState(0x7d52, 0xc3e8, 0x9f30, 0x89f, 0xb579, 0xe90b, 0x0, 0x1);
        gbc.writeMem(0x7d52, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xc3e8, gbc.sp());
        EXPECT(0x7d54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 031E
        gbc.setState(0x736c, 0x6dae, 0x4e10, 0x4c58, 0xf771, 0xd47c, 0x1, 0x1);
        gbc.writeMem(0x736c, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x6dae, gbc.sp());
        EXPECT(0x736e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 031F
        gbc.setState(0xe404, 0xdffb, 0xa380, 0x3b03, 0x6c50, 0x550c, 0x0, 0x0);
        gbc.writeMem(0xe404, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xdffb, gbc.sp());
        EXPECT(0xe406, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe404));
        EXPECT(0xf8, gbc.readMem(0xe405));
        // CB F8 0320
        gbc.setState(0x84ea, 0x92b, 0x22c0, 0xf6f3, 0xf782, 0xb814, 0x0, 0x0);
        gbc.writeMem(0x84ea, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x92b, gbc.sp());
        EXPECT(0x84ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84ea));
        EXPECT(0xf8, gbc.readMem(0x84eb));
        // CB F8 0321
        gbc.setState(0xbf14, 0x372e, 0xdce0, 0xd6c6, 0x7953, 0x52d0, 0x0, 0x0);
        gbc.writeMem(0xbf14, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x372e, gbc.sp());
        EXPECT(0xbf16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf14));
        EXPECT(0xf8, gbc.readMem(0xbf15));
        // CB F8 0322
        gbc.setState(0xa6, 0x3886, 0xac30, 0x8fcb, 0x65c2, 0xc7e8, 0x0, 0x0);
        gbc.writeMem(0xa6, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x3886, gbc.sp());
        EXPECT(0xa8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0323
        gbc.setState(0xbca2, 0x114, 0x34e0, 0x2949, 0xdfbf, 0xddc, 0x0, 0x1);
        gbc.writeMem(0xbca2, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x114, gbc.sp());
        EXPECT(0xbca4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbca2));
        EXPECT(0xf8, gbc.readMem(0xbca3));
        // CB F8 0324
        gbc.setState(0x6d23, 0x1ec1, 0xd600, 0x17e7, 0x7f6a, 0xa29b, 0x0, 0x0);
        gbc.writeMem(0x6d23, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x1ec1, gbc.sp());
        EXPECT(0x6d25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0325
        gbc.setState(0xe317, 0x8ecd, 0x6e60, 0x27ab, 0x401f, 0xf6f3, 0x1, 0x0);
        gbc.writeMem(0xe317, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x8ecd, gbc.sp());
        EXPECT(0xe319, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe317));
        EXPECT(0xf8, gbc.readMem(0xe318));
        // CB F8 0326
        gbc.setState(0x6cbe, 0x84b0, 0x4150, 0x8074, 0x2c22, 0xd054, 0x0, 0x1);
        gbc.writeMem(0x6cbe, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x84b0, gbc.sp());
        EXPECT(0x6cc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0327
        gbc.setState(0x33de, 0x8d6b, 0x2a00, 0x16e9, 0x4861, 0xf535, 0x0, 0x1);
        gbc.writeMem(0x33de, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x8d6b, gbc.sp());
        EXPECT(0x33e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0329
        gbc.setState(0xe465, 0xc191, 0xadf0, 0x4759, 0x9a2b, 0xecfb, 0x0, 0x0);
        gbc.writeMem(0xe465, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xc191, gbc.sp());
        EXPECT(0xe467, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe465));
        EXPECT(0xf8, gbc.readMem(0xe466));
        // CB F8 032A
        gbc.setState(0x1ff0, 0x4538, 0xbb30, 0xd2ec, 0xb0f3, 0xa0a1, 0x1, 0x0);
        gbc.writeMem(0x1ff0, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x4538, gbc.sp());
        EXPECT(0x1ff2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 032C
        gbc.setState(0x630, 0x2ba3, 0x6640, 0xc2df, 0xbf01, 0x4174, 0x0, 0x1);
        gbc.writeMem(0x630, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x2ba3, gbc.sp());
        EXPECT(0x632, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 032D
        gbc.setState(0xa2d, 0x8cee, 0xb3a0, 0xa5f, 0xc4a, 0x4aa3, 0x1, 0x0);
        gbc.writeMem(0xa2d, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x8cee, gbc.sp());
        EXPECT(0xa2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 032E
        gbc.setState(0xd399, 0xc01c, 0x2920, 0x72c2, 0x3d4f, 0xa3eb, 0x0, 0x1);
        gbc.writeMem(0xd399, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xc01c, gbc.sp());
        EXPECT(0xd39b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd399));
        EXPECT(0xf8, gbc.readMem(0xd39a));
        // CB F8 032F
        gbc.setState(0xe296, 0x1e4b, 0x2350, 0x9e9e, 0xfb1a, 0x4fe6, 0x0, 0x0);
        gbc.writeMem(0xe296, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x1e4b, gbc.sp());
        EXPECT(0xe298, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe296));
        EXPECT(0xf8, gbc.readMem(0xe297));
        // CB F8 0330
        gbc.setState(0x5dc2, 0x67b7, 0x1e40, 0xcedc, 0x1434, 0xe736, 0x0, 0x0);
        gbc.writeMem(0x5dc2, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x67b7, gbc.sp());
        EXPECT(0x5dc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0331
        gbc.setState(0xe54a, 0x37e7, 0xee10, 0xf89e, 0xa371, 0x37cc, 0x1, 0x0);
        gbc.writeMem(0xe54a, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x37e7, gbc.sp());
        EXPECT(0xe54c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe54a));
        EXPECT(0xf8, gbc.readMem(0xe54b));
        // CB F8 0332
        gbc.setState(0x7143, 0x89b4, 0xe9b0, 0x89d9, 0xfc37, 0x3838, 0x0, 0x0);
        gbc.writeMem(0x7143, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x89b4, gbc.sp());
        EXPECT(0x7145, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0333
        gbc.setState(0x8b7d, 0x8b4, 0x9250, 0x65f3, 0xe37d, 0x5d9d, 0x1, 0x1);
        gbc.writeMem(0x8b7d, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x8b4, gbc.sp());
        EXPECT(0x8b7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b7d));
        EXPECT(0xf8, gbc.readMem(0x8b7e));
        // CB F8 0334
        gbc.setState(0x3fb6, 0xe9ec, 0x8750, 0x4592, 0xb5a7, 0x714c, 0x0, 0x1);
        gbc.writeMem(0x3fb6, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xe9ec, gbc.sp());
        EXPECT(0x3fb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0335
        gbc.setState(0x94f3, 0xb21a, 0x2fe0, 0xb3ed, 0x931a, 0x83e8, 0x1, 0x1);
        gbc.writeMem(0x94f3, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xb21a, gbc.sp());
        EXPECT(0x94f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94f3));
        EXPECT(0xf8, gbc.readMem(0x94f4));
        // CB F8 0336
        gbc.setState(0x92ab, 0xd73, 0xc430, 0x5536, 0xf82f, 0x94db, 0x1, 0x1);
        gbc.writeMem(0x92ab, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xd73, gbc.sp());
        EXPECT(0x92ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92ab));
        EXPECT(0xf8, gbc.readMem(0x92ac));
        // CB F8 0337
        gbc.setState(0x5a14, 0x394f, 0xe770, 0xbd3c, 0x570d, 0x99b, 0x1, 0x1);
        gbc.writeMem(0x5a14, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x394f, gbc.sp());
        EXPECT(0x5a16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0338
        gbc.setState(0x9f2, 0x9eaf, 0x2290, 0x8217, 0xe456, 0xb2f, 0x0, 0x0);
        gbc.writeMem(0x9f2, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x9eaf, gbc.sp());
        EXPECT(0x9f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0339
        gbc.setState(0xe8cf, 0x9daa, 0x9d30, 0x5a3a, 0x20b3, 0xaad4, 0x0, 0x0);
        gbc.writeMem(0xe8cf, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x9daa, gbc.sp());
        EXPECT(0xe8d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8cf));
        EXPECT(0xf8, gbc.readMem(0xe8d0));
        // CB F8 033A
        gbc.setState(0x1554, 0xa39, 0x8c50, 0x7cb9, 0xa2c8, 0x55e9, 0x0, 0x0);
        gbc.writeMem(0x1554, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xa39, gbc.sp());
        EXPECT(0x1556, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 033B
        gbc.setState(0x74ba, 0x82da, 0xd2a0, 0xac33, 0x6a03, 0x46db, 0x1, 0x0);
        gbc.writeMem(0x74ba, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x82da, gbc.sp());
        EXPECT(0x74bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 033C
        gbc.setState(0x1977, 0xd0ef, 0xbf30, 0x721d, 0xa35, 0x2550, 0x1, 0x0);
        gbc.writeMem(0x1977, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xd0ef, gbc.sp());
        EXPECT(0x1979, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 033D
        gbc.setState(0xb6f3, 0xc38b, 0x4ab0, 0xfed0, 0xf28e, 0x7130, 0x1, 0x0);
        gbc.writeMem(0xb6f3, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xc38b, gbc.sp());
        EXPECT(0xb6f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6f3));
        EXPECT(0xf8, gbc.readMem(0xb6f4));
        // CB F8 033E
        gbc.setState(0x6dc7, 0xc6a6, 0xdd40, 0x20b0, 0x9520, 0x763b, 0x0, 0x1);
        gbc.writeMem(0x6dc7, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xc6a6, gbc.sp());
        EXPECT(0x6dc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 033F
        gbc.setState(0x1874, 0x2c43, 0x68b0, 0x6302, 0x1539, 0x73a9, 0x1, 0x1);
        gbc.writeMem(0x1874, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x2c43, gbc.sp());
        EXPECT(0x1876, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0340
        gbc.setState(0x1322, 0xf6fb, 0xa90, 0x54d5, 0x6a06, 0xb88c, 0x1, 0x0);
        gbc.writeMem(0x1322, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xf6fb, gbc.sp());
        EXPECT(0x1324, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0341
        gbc.setState(0x41bd, 0xfa29, 0xbc60, 0xe724, 0xc54d, 0x42b6, 0x1, 0x0);
        gbc.writeMem(0x41bd, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xfa29, gbc.sp());
        EXPECT(0x41bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0342
        gbc.setState(0x87a2, 0xc65e, 0x9920, 0xdd5d, 0x7efb, 0x4fcc, 0x0, 0x0);
        gbc.writeMem(0x87a2, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xc65e, gbc.sp());
        EXPECT(0x87a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87a2));
        EXPECT(0xf8, gbc.readMem(0x87a3));
        // CB F8 0343
        gbc.setState(0x78b2, 0x9211, 0x800, 0x233b, 0xbcc3, 0x586e, 0x0, 0x0);
        gbc.writeMem(0x78b2, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x9211, gbc.sp());
        EXPECT(0x78b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0344
        gbc.setState(0x20, 0x8002, 0xdfb0, 0x4a24, 0x46e9, 0xf159, 0x0, 0x1);
        gbc.writeMem(0x20, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x8002, gbc.sp());
        EXPECT(0x22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0345
        gbc.setState(0x60cf, 0xa237, 0x2150, 0x90a4, 0x2a5f, 0x1b7d, 0x0, 0x0);
        gbc.writeMem(0x60cf, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xa237, gbc.sp());
        EXPECT(0x60d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0346
        gbc.setState(0x52c7, 0x70aa, 0xf680, 0x63a4, 0x792c, 0xb5b6, 0x0, 0x1);
        gbc.writeMem(0x52c7, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x70aa, gbc.sp());
        EXPECT(0x52c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0347
        gbc.setState(0x4bb, 0xbeb8, 0x8e0, 0x5967, 0x42ef, 0x7720, 0x0, 0x1);
        gbc.writeMem(0x4bb, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xbeb8, gbc.sp());
        EXPECT(0x4bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0348
        gbc.setState(0x785a, 0x100, 0xd90, 0x379c, 0x5ff9, 0xfc24, 0x1, 0x0);
        gbc.writeMem(0x785a, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x100, gbc.sp());
        EXPECT(0x785c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0349
        gbc.setState(0x2d0c, 0x5d7f, 0x2b60, 0xbf6f, 0xa503, 0x2934, 0x0, 0x1);
        gbc.writeMem(0x2d0c, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x5d7f, gbc.sp());
        EXPECT(0x2d0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 034A
        gbc.setState(0x4582, 0x8661, 0x3d20, 0x8972, 0xefb5, 0xcfb0, 0x0, 0x0);
        gbc.writeMem(0x4582, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x8661, gbc.sp());
        EXPECT(0x4584, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 034B
        gbc.setState(0xaf13, 0x67fc, 0xf630, 0x6bf3, 0xc928, 0xa912, 0x0, 0x1);
        gbc.writeMem(0xaf13, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x67fc, gbc.sp());
        EXPECT(0xaf15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf13));
        EXPECT(0xf8, gbc.readMem(0xaf14));
        // CB F8 034C
        gbc.setState(0x6fd7, 0x3d7b, 0x4470, 0x7b16, 0x2cb9, 0x525e, 0x0, 0x1);
        gbc.writeMem(0x6fd7, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x3d7b, gbc.sp());
        EXPECT(0x6fd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 034D
        gbc.setState(0x25d7, 0x73a2, 0xe6d0, 0x919a, 0x16f5, 0x3f5c, 0x1, 0x0);
        gbc.writeMem(0x25d7, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x73a2, gbc.sp());
        EXPECT(0x25d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 034E
        gbc.setState(0x6a8, 0xef05, 0xf8d0, 0x395a, 0x1680, 0xbf7e, 0x0, 0x1);
        gbc.writeMem(0x6a8, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xef05, gbc.sp());
        EXPECT(0x6aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 034F
        gbc.setState(0xde6f, 0x4310, 0xdfc0, 0x8ea6, 0xd38, 0x3b4c, 0x0, 0x0);
        gbc.writeMem(0xde6f, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x4310, gbc.sp());
        EXPECT(0xde71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde6f));
        EXPECT(0xf8, gbc.readMem(0xde70));
        // CB F8 0350
        gbc.setState(0x1694, 0xe613, 0x44a0, 0x3b4d, 0x4cfe, 0xb77a, 0x0, 0x0);
        gbc.writeMem(0x1694, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xe613, gbc.sp());
        EXPECT(0x1696, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0351
        gbc.setState(0xd46d, 0xef09, 0xa210, 0xc129, 0xf8ff, 0xb67f, 0x1, 0x0);
        gbc.writeMem(0xd46d, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xef09, gbc.sp());
        EXPECT(0xd46f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd46d));
        EXPECT(0xf8, gbc.readMem(0xd46e));
        // CB F8 0352
        gbc.setState(0x6d51, 0xcc99, 0x2240, 0x336f, 0xfade, 0x2f9f, 0x0, 0x1);
        gbc.writeMem(0x6d51, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xcc99, gbc.sp());
        EXPECT(0x6d53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0353
        gbc.setState(0xd3c, 0x4ea0, 0x79b0, 0xc1fa, 0xe40, 0xd81b, 0x1, 0x1);
        gbc.writeMem(0xd3c, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x4ea0, gbc.sp());
        EXPECT(0xd3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0354
        gbc.setState(0xb4e5, 0x7a91, 0x7bd0, 0x3f9, 0x1f13, 0x3312, 0x1, 0x1);
        gbc.writeMem(0xb4e5, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x7a91, gbc.sp());
        EXPECT(0xb4e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4e5));
        EXPECT(0xf8, gbc.readMem(0xb4e6));
        // CB F8 0355
        gbc.setState(0x68e0, 0x92b6, 0xbdf0, 0x8afc, 0x3d76, 0xcf5b, 0x1, 0x0);
        gbc.writeMem(0x68e0, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x92b6, gbc.sp());
        EXPECT(0x68e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0356
        gbc.setState(0xcea5, 0x1ce7, 0x2eb0, 0x791a, 0xda4b, 0xa14a, 0x1, 0x1);
        gbc.writeMem(0xcea5, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x1ce7, gbc.sp());
        EXPECT(0xcea7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcea5));
        EXPECT(0xf8, gbc.readMem(0xcea6));
        // CB F8 0357
        gbc.setState(0xbe9c, 0xdda3, 0x6050, 0xb66e, 0x1876, 0x6b8b, 0x1, 0x0);
        gbc.writeMem(0xbe9c, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xdda3, gbc.sp());
        EXPECT(0xbe9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe9c));
        EXPECT(0xf8, gbc.readMem(0xbe9d));
        // CB F8 0358
        gbc.setState(0x6c76, 0x725e, 0x39c0, 0x56eb, 0xbf71, 0x45c0, 0x0, 0x1);
        gbc.writeMem(0x6c76, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x725e, gbc.sp());
        EXPECT(0x6c78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0359
        gbc.setState(0x2888, 0x2c13, 0x7440, 0x53f2, 0x2beb, 0x741a, 0x1, 0x0);
        gbc.writeMem(0x2888, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x2c13, gbc.sp());
        EXPECT(0x288a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 035A
        gbc.setState(0xcfa8, 0x9891, 0xac60, 0x96c6, 0x50b, 0xc9c7, 0x0, 0x0);
        gbc.writeMem(0xcfa8, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x9891, gbc.sp());
        EXPECT(0xcfaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfa8));
        EXPECT(0xf8, gbc.readMem(0xcfa9));
        // CB F8 035B
        gbc.setState(0xad7a, 0xcb72, 0x9fe0, 0x56ad, 0x2df5, 0xf233, 0x0, 0x0);
        gbc.writeMem(0xad7a, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xcb72, gbc.sp());
        EXPECT(0xad7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad7a));
        EXPECT(0xf8, gbc.readMem(0xad7b));
        // CB F8 035D
        gbc.setState(0xa6d, 0x62b1, 0xef40, 0x8063, 0xfe19, 0x288d, 0x1, 0x1);
        gbc.writeMem(0xa6d, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x62b1, gbc.sp());
        EXPECT(0xa6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 035F
        gbc.setState(0xe58b, 0xd7e, 0x5280, 0x15de, 0x1c19, 0x72e, 0x0, 0x1);
        gbc.writeMem(0xe58b, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xd7e, gbc.sp());
        EXPECT(0xe58d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe58b));
        EXPECT(0xf8, gbc.readMem(0xe58c));
        // CB F8 0360
        gbc.setState(0x4c8f, 0xc7ee, 0x25b0, 0x9ada, 0xd197, 0x215a, 0x1, 0x1);
        gbc.writeMem(0x4c8f, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xc7ee, gbc.sp());
        EXPECT(0x4c91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0362
        gbc.setState(0xe6ba, 0x970c, 0x3750, 0x4e0f, 0x1828, 0x86b3, 0x0, 0x0);
        gbc.writeMem(0xe6ba, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x970c, gbc.sp());
        EXPECT(0xe6bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6ba));
        EXPECT(0xf8, gbc.readMem(0xe6bb));
        // CB F8 0363
        gbc.setState(0xd8ba, 0x848, 0xb0, 0xfdc8, 0x6c5c, 0x6f51, 0x1, 0x0);
        gbc.writeMem(0xd8ba, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x848, gbc.sp());
        EXPECT(0xd8bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8ba));
        EXPECT(0xf8, gbc.readMem(0xd8bb));
        // CB F8 0364
        gbc.setState(0x477e, 0x856b, 0xd9f0, 0xd41e, 0x16e0, 0xf23, 0x1, 0x1);
        gbc.writeMem(0x477e, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x856b, gbc.sp());
        EXPECT(0x4780, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0365
        gbc.setState(0x453e, 0xb22d, 0x4080, 0x4420, 0x120e, 0x5ea4, 0x0, 0x1);
        gbc.writeMem(0x453e, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xb22d, gbc.sp());
        EXPECT(0x4540, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0366
        gbc.setState(0x7368, 0xcc89, 0xb340, 0x32f4, 0x7a44, 0x607c, 0x0, 0x1);
        gbc.writeMem(0x7368, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xcc89, gbc.sp());
        EXPECT(0x736a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0367
        gbc.setState(0x2b40, 0x81cc, 0x4dd0, 0xb831, 0x77c, 0x6deb, 0x1, 0x0);
        gbc.writeMem(0x2b40, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x81cc, gbc.sp());
        EXPECT(0x2b42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0368
        gbc.setState(0xb197, 0xfa65, 0xb160, 0x9d37, 0x1898, 0x6fa6, 0x0, 0x1);
        gbc.writeMem(0xb197, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xfa65, gbc.sp());
        EXPECT(0xb199, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb197));
        EXPECT(0xf8, gbc.readMem(0xb198));
        // CB F8 0369
        gbc.setState(0x510d, 0x6a0a, 0x1b90, 0xe83f, 0x5966, 0xe46e, 0x1, 0x0);
        gbc.writeMem(0x510d, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x6a0a, gbc.sp());
        EXPECT(0x510f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 036A
        gbc.setState(0xaee7, 0xa562, 0x2400, 0xdfd1, 0xb8a3, 0x99b5, 0x0, 0x0);
        gbc.writeMem(0xaee7, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xa562, gbc.sp());
        EXPECT(0xaee9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaee7));
        EXPECT(0xf8, gbc.readMem(0xaee8));
        // CB F8 036B
        gbc.setState(0xe4fc, 0x19dd, 0x9f30, 0xefe2, 0x959f, 0xcfd, 0x0, 0x0);
        gbc.writeMem(0xe4fc, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x19dd, gbc.sp());
        EXPECT(0xe4fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4fc));
        EXPECT(0xf8, gbc.readMem(0xe4fd));
        // CB F8 036C
        gbc.setState(0x7d01, 0x55e4, 0x5bf0, 0xde4a, 0x41c2, 0x857d, 0x1, 0x1);
        gbc.writeMem(0x7d01, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x55e4, gbc.sp());
        EXPECT(0x7d03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 036D
        gbc.setState(0x9230, 0xa248, 0x75e0, 0x1ccc, 0x140d, 0xfe94, 0x0, 0x1);
        gbc.writeMem(0x9230, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xa248, gbc.sp());
        EXPECT(0x9232, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9230));
        EXPECT(0xf8, gbc.readMem(0x9231));
        // CB F8 036E
        gbc.setState(0x2b25, 0x36c6, 0x3ed0, 0x654, 0xcc12, 0x8bb8, 0x1, 0x1);
        gbc.writeMem(0x2b25, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x36c6, gbc.sp());
        EXPECT(0x2b27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 036F
        gbc.setState(0xd782, 0x524f, 0x3640, 0x12c9, 0x4887, 0x5b1a, 0x1, 0x1);
        gbc.writeMem(0xd782, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x524f, gbc.sp());
        EXPECT(0xd784, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd782));
        EXPECT(0xf8, gbc.readMem(0xd783));
        // CB F8 0370
        gbc.setState(0x80ce, 0x4a93, 0x1630, 0x7591, 0x33a2, 0xbe0c, 0x0, 0x1);
        gbc.writeMem(0x80ce, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x4a93, gbc.sp());
        EXPECT(0x80d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80ce));
        EXPECT(0xf8, gbc.readMem(0x80cf));
        // CB F8 0372
        gbc.setState(0xca6e, 0x7a50, 0x9530, 0x62ce, 0xdefa, 0x1ee5, 0x1, 0x0);
        gbc.writeMem(0xca6e, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x7a50, gbc.sp());
        EXPECT(0xca70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca6e));
        EXPECT(0xf8, gbc.readMem(0xca6f));
        // CB F8 0373
        gbc.setState(0x3825, 0x3482, 0xa180, 0x6943, 0xbec9, 0x7b9d, 0x1, 0x0);
        gbc.writeMem(0x3825, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x3482, gbc.sp());
        EXPECT(0x3827, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0375
        gbc.setState(0xe2e1, 0x3178, 0x6b20, 0xada, 0x9d09, 0x2976, 0x0, 0x1);
        gbc.writeMem(0xe2e1, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x3178, gbc.sp());
        EXPECT(0xe2e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2e1));
        EXPECT(0xf8, gbc.readMem(0xe2e2));
        // CB F8 0376
        gbc.setState(0xc354, 0x907f, 0xdd20, 0x36e, 0x59e1, 0xd57, 0x0, 0x1);
        gbc.writeMem(0xc354, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x907f, gbc.sp());
        EXPECT(0xc356, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc354));
        EXPECT(0xf8, gbc.readMem(0xc355));
        // CB F8 0377
        gbc.setState(0xd901, 0x6313, 0x9890, 0x79e1, 0xad16, 0xfefe, 0x1, 0x1);
        gbc.writeMem(0xd901, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x6313, gbc.sp());
        EXPECT(0xd903, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd901));
        EXPECT(0xf8, gbc.readMem(0xd902));
        // CB F8 0378
        gbc.setState(0x36c5, 0xa588, 0x5390, 0x1a2e, 0x4850, 0x7840, 0x1, 0x1);
        gbc.writeMem(0x36c5, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xa588, gbc.sp());
        EXPECT(0x36c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0379
        gbc.setState(0x5ebd, 0x7aac, 0x83e0, 0x91c4, 0x651, 0xf9b1, 0x0, 0x0);
        gbc.writeMem(0x5ebd, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x7aac, gbc.sp());
        EXPECT(0x5ebf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 037A
        gbc.setState(0x9510, 0xddcd, 0x1ab0, 0x13e9, 0x4e9c, 0x414b, 0x0, 0x1);
        gbc.writeMem(0x9510, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xddcd, gbc.sp());
        EXPECT(0x9512, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9510));
        EXPECT(0xf8, gbc.readMem(0x9511));
        // CB F8 037B
        gbc.setState(0xc2d9, 0xd48, 0xb310, 0x2cda, 0x5b62, 0x49c9, 0x1, 0x0);
        gbc.writeMem(0xc2d9, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xd48, gbc.sp());
        EXPECT(0xc2db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2d9));
        EXPECT(0xf8, gbc.readMem(0xc2da));
        // CB F8 037C
        gbc.setState(0xdb62, 0xa39b, 0x3dd0, 0x9ecf, 0x96b7, 0xf1dd, 0x0, 0x0);
        gbc.writeMem(0xdb62, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xa39b, gbc.sp());
        EXPECT(0xdb64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb62));
        EXPECT(0xf8, gbc.readMem(0xdb63));
        // CB F8 037D
        gbc.setState(0xb928, 0x814a, 0x6410, 0x2a13, 0xb41c, 0xf0a4, 0x1, 0x0);
        gbc.writeMem(0xb928, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x814a, gbc.sp());
        EXPECT(0xb92a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb928));
        EXPECT(0xf8, gbc.readMem(0xb929));
        // CB F8 037E
        gbc.setState(0x5346, 0x88b, 0xc490, 0x4459, 0xfdec, 0x4e9f, 0x0, 0x1);
        gbc.writeMem(0x5346, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x88b, gbc.sp());
        EXPECT(0x5348, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 037F
        gbc.setState(0x1e1f, 0x9b52, 0xe60, 0xb1aa, 0xdb6a, 0x62f2, 0x1, 0x1);
        gbc.writeMem(0x1e1f, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x9b52, gbc.sp());
        EXPECT(0x1e21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0380
        gbc.setState(0x3a11, 0x15c1, 0xb50, 0x1f1d, 0xc4b7, 0xe035, 0x1, 0x0);
        gbc.writeMem(0x3a11, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x15c1, gbc.sp());
        EXPECT(0x3a13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0381
        gbc.setState(0x5156, 0xde18, 0x6520, 0x423c, 0x1e26, 0xc89a, 0x1, 0x1);
        gbc.writeMem(0x5156, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xde18, gbc.sp());
        EXPECT(0x5158, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0383
        gbc.setState(0x3b50, 0xe7c3, 0x2900, 0xfa07, 0x7b7b, 0xcac2, 0x1, 0x0);
        gbc.writeMem(0x3b50, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xe7c3, gbc.sp());
        EXPECT(0x3b52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0384
        gbc.setState(0x80f6, 0xde7b, 0x3980, 0x7780, 0x5263, 0xa7c0, 0x0, 0x0);
        gbc.writeMem(0x80f6, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xde7b, gbc.sp());
        EXPECT(0x80f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80f6));
        EXPECT(0xf8, gbc.readMem(0x80f7));
        // CB F8 0385
        gbc.setState(0x6d61, 0x98a8, 0x6c50, 0x17f, 0x2945, 0xd97d, 0x0, 0x1);
        gbc.writeMem(0x6d61, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x98a8, gbc.sp());
        EXPECT(0x6d63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0386
        gbc.setState(0x7ddf, 0xa5b1, 0xb310, 0xc1c4, 0x8e0e, 0x2a92, 0x1, 0x1);
        gbc.writeMem(0x7ddf, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xa5b1, gbc.sp());
        EXPECT(0x7de1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0387
        gbc.setState(0x8ad7, 0xc821, 0x60f0, 0x1466, 0x9fb3, 0xf5d3, 0x1, 0x0);
        gbc.writeMem(0x8ad7, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xc821, gbc.sp());
        EXPECT(0x8ad9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ad7));
        EXPECT(0xf8, gbc.readMem(0x8ad8));
        // CB F8 0388
        gbc.setState(0xcfc3, 0x7f24, 0xd660, 0xaa74, 0x83ef, 0x828b, 0x1, 0x1);
        gbc.writeMem(0xcfc3, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x7f24, gbc.sp());
        EXPECT(0xcfc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfc3));
        EXPECT(0xf8, gbc.readMem(0xcfc4));
        // CB F8 0389
        gbc.setState(0xf16, 0xd725, 0x2920, 0xf8ec, 0x85f7, 0x8d33, 0x1, 0x1);
        gbc.writeMem(0xf16, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xd725, gbc.sp());
        EXPECT(0xf18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 038A
        gbc.setState(0x4766, 0x9ea1, 0xbec0, 0x787e, 0xf893, 0x449e, 0x0, 0x0);
        gbc.writeMem(0x4766, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x9ea1, gbc.sp());
        EXPECT(0x4768, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 038B
        gbc.setState(0x6de0, 0xb93b, 0x8920, 0x48d, 0x4df7, 0xb5d, 0x0, 0x0);
        gbc.writeMem(0x6de0, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xb93b, gbc.sp());
        EXPECT(0x6de2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 038C
        gbc.setState(0x7e40, 0xc516, 0xda60, 0xd109, 0xf473, 0x6be, 0x0, 0x0);
        gbc.writeMem(0x7e40, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xc516, gbc.sp());
        EXPECT(0x7e42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 038D
        gbc.setState(0xa9ec, 0x329a, 0x1c60, 0x5e40, 0xa48b, 0xb8fc, 0x0, 0x1);
        gbc.writeMem(0xa9ec, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x329a, gbc.sp());
        EXPECT(0xa9ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9ec));
        EXPECT(0xf8, gbc.readMem(0xa9ed));
        // CB F8 038E
        gbc.setState(0xa80a, 0x6748, 0xb800, 0xc29b, 0x4c96, 0x244, 0x1, 0x0);
        gbc.writeMem(0xa80a, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x6748, gbc.sp());
        EXPECT(0xa80c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa80a));
        EXPECT(0xf8, gbc.readMem(0xa80b));
        // CB F8 038F
        gbc.setState(0x136c, 0xf9a1, 0x5880, 0xfc2c, 0xe01b, 0xad13, 0x1, 0x1);
        gbc.writeMem(0x136c, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xf9a1, gbc.sp());
        EXPECT(0x136e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0390
        gbc.setState(0xf17, 0x9932, 0xd030, 0x25c8, 0x1689, 0x9dd1, 0x0, 0x0);
        gbc.writeMem(0xf17, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x9932, gbc.sp());
        EXPECT(0xf19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0391
        gbc.setState(0x47ed, 0x6459, 0x2d80, 0x2d91, 0xcdb6, 0x567c, 0x0, 0x0);
        gbc.writeMem(0x47ed, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x6459, gbc.sp());
        EXPECT(0x47ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0392
        gbc.setState(0xa2f7, 0xd368, 0x2030, 0x6e65, 0xeddf, 0x7a56, 0x0, 0x0);
        gbc.writeMem(0xa2f7, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xd368, gbc.sp());
        EXPECT(0xa2f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2f7));
        EXPECT(0xf8, gbc.readMem(0xa2f8));
        // CB F8 0393
        gbc.setState(0x1d22, 0x8262, 0xcb30, 0xa400, 0x2fa8, 0xbcba, 0x1, 0x1);
        gbc.writeMem(0x1d22, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x8262, gbc.sp());
        EXPECT(0x1d24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0395
        gbc.setState(0xd16, 0x5116, 0x80e0, 0xe4d8, 0x5b07, 0xfb49, 0x1, 0x0);
        gbc.writeMem(0xd16, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x5116, gbc.sp());
        EXPECT(0xd18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 0396
        gbc.setState(0x7b99, 0x776a, 0xff70, 0x9b1e, 0x703f, 0xce24, 0x1, 0x0);
        gbc.writeMem(0x7b99, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x776a, gbc.sp());
        EXPECT(0x7b9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0397
        gbc.setState(0x732d, 0xaa8c, 0xd830, 0x3041, 0x2382, 0x4461, 0x0, 0x0);
        gbc.writeMem(0x732d, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xaa8c, gbc.sp());
        EXPECT(0x732f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 0398
        gbc.setState(0xb3a8, 0xa27c, 0x750, 0xa6c8, 0x56d, 0xfbeb, 0x0, 0x0);
        gbc.writeMem(0xb3a8, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xa27c, gbc.sp());
        EXPECT(0xb3aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3a8));
        EXPECT(0xf8, gbc.readMem(0xb3a9));
        // CB F8 0399
        gbc.setState(0xa21b, 0x2efa, 0x8510, 0x6263, 0x74d4, 0x3e10, 0x0, 0x1);
        gbc.writeMem(0xa21b, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x2efa, gbc.sp());
        EXPECT(0xa21d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa21b));
        EXPECT(0xf8, gbc.readMem(0xa21c));
        // CB F8 039A
        gbc.setState(0x1034, 0xd77c, 0x7290, 0x8296, 0x479, 0xa543, 0x1, 0x0);
        gbc.writeMem(0x1034, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xd77c, gbc.sp());
        EXPECT(0x1036, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 039B
        gbc.setState(0xe411, 0xfe10, 0x47c0, 0xfee5, 0x58b2, 0xf675, 0x0, 0x1);
        gbc.writeMem(0xe411, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xfe10, gbc.sp());
        EXPECT(0xe413, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe411));
        EXPECT(0xf8, gbc.readMem(0xe412));
        // CB F8 039C
        gbc.setState(0x1fb3, 0x2148, 0x5940, 0xba54, 0x216, 0x9070, 0x1, 0x1);
        gbc.writeMem(0x1fb3, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x2148, gbc.sp());
        EXPECT(0x1fb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 039E
        gbc.setState(0x69ce, 0xa26f, 0xc6e0, 0x7b57, 0xac82, 0xf6b8, 0x1, 0x0);
        gbc.writeMem(0x69ce, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xa26f, gbc.sp());
        EXPECT(0x69d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 039F
        gbc.setState(0xda18, 0xd5f2, 0xd7c0, 0x31e8, 0x44f0, 0x5e49, 0x1, 0x0);
        gbc.writeMem(0xda18, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xd5f2, gbc.sp());
        EXPECT(0xda1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda18));
        EXPECT(0xf8, gbc.readMem(0xda19));
        // CB F8 03A0
        gbc.setState(0x43f8, 0xa65c, 0x36c0, 0x9192, 0xdc6c, 0xc352, 0x0, 0x1);
        gbc.writeMem(0x43f8, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xa65c, gbc.sp());
        EXPECT(0x43fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 03A1
        gbc.setState(0x3cc, 0x12d2, 0x580, 0x1868, 0x4040, 0x4827, 0x0, 0x0);
        gbc.writeMem(0x3cc, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x12d2, gbc.sp());
        EXPECT(0x3ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 03A2
        gbc.setState(0xd77, 0x4fa9, 0xd7d0, 0x91e8, 0x96cc, 0xbd7, 0x0, 0x1);
        gbc.writeMem(0xd77, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x4fa9, gbc.sp());
        EXPECT(0xd79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 03A3
        gbc.setState(0x14ef, 0xcee3, 0x6480, 0x8f3c, 0x693c, 0x6a2c, 0x1, 0x0);
        gbc.writeMem(0x14ef, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xcee3, gbc.sp());
        EXPECT(0x14f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 03A4
        gbc.setState(0x3caf, 0xe2b6, 0x3d80, 0x59c8, 0x3650, 0x4524, 0x0, 0x0);
        gbc.writeMem(0x3caf, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xe2b6, gbc.sp());
        EXPECT(0x3cb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 03A5
        gbc.setState(0xd4, 0xb65c, 0x1500, 0xbba8, 0x58ea, 0x329d, 0x0, 0x1);
        gbc.writeMem(0xd4, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xb65c, gbc.sp());
        EXPECT(0xd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 03A6
        gbc.setState(0x626e, 0xaf96, 0xf260, 0xe1e, 0x13fa, 0x3f3f, 0x1, 0x1);
        gbc.writeMem(0x626e, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xaf96, gbc.sp());
        EXPECT(0x6270, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 03A7
        gbc.setState(0xe04b, 0x9ed4, 0xb610, 0x6358, 0x52da, 0x25f4, 0x0, 0x1);
        gbc.writeMem(0xe04b, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x9ed4, gbc.sp());
        EXPECT(0xe04d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe04b));
        EXPECT(0xf8, gbc.readMem(0xe04c));
        // CB F8 03A8
        gbc.setState(0xc84a, 0xc8ce, 0x9d10, 0xe14c, 0x2147, 0xa6f6, 0x0, 0x1);
        gbc.writeMem(0xc84a, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xc8ce, gbc.sp());
        EXPECT(0xc84c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc84a));
        EXPECT(0xf8, gbc.readMem(0xc84b));
        // CB F8 03A9
        gbc.setState(0x2751, 0x431f, 0x32d0, 0x2d3e, 0x7e74, 0x3d74, 0x1, 0x1);
        gbc.writeMem(0x2751, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x431f, gbc.sp());
        EXPECT(0x2753, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 03AB
        gbc.setState(0xb7c2, 0xb779, 0xbac0, 0x5789, 0x6f1e, 0x4dc9, 0x0, 0x1);
        gbc.writeMem(0xb7c2, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xb779, gbc.sp());
        EXPECT(0xb7c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7c2));
        EXPECT(0xf8, gbc.readMem(0xb7c3));
        // CB F8 03AC
        gbc.setState(0x8e2e, 0xe603, 0xbb20, 0xa9b1, 0x136, 0x5a61, 0x0, 0x1);
        gbc.writeMem(0x8e2e, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xe603, gbc.sp());
        EXPECT(0x8e30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e2e));
        EXPECT(0xf8, gbc.readMem(0x8e2f));
        // CB F8 03AD
        gbc.setState(0x5b60, 0x7377, 0x1350, 0xf7c9, 0x196c, 0xa938, 0x0, 0x0);
        gbc.writeMem(0x5b60, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x7377, gbc.sp());
        EXPECT(0x5b62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 03AE
        gbc.setState(0x1320, 0x68b8, 0xf9c0, 0xc18d, 0x8159, 0x6510, 0x0, 0x1);
        gbc.writeMem(0x1320, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x68b8, gbc.sp());
        EXPECT(0x1322, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 03AF
        gbc.setState(0xa73d, 0xa4d, 0xaaf0, 0xed2b, 0x6e85, 0xb874, 0x0, 0x0);
        gbc.writeMem(0xa73d, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xa4d, gbc.sp());
        EXPECT(0xa73f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa73d));
        EXPECT(0xf8, gbc.readMem(0xa73e));
        // CB F8 03B0
        gbc.setState(0x37ea, 0x5c86, 0x49c0, 0xead5, 0xeedd, 0x4b04, 0x1, 0x0);
        gbc.writeMem(0x37ea, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x5c86, gbc.sp());
        EXPECT(0x37ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 03B1
        gbc.setState(0x5d53, 0xeddf, 0x9110, 0xeaa8, 0xe44a, 0xdc9d, 0x0, 0x0);
        gbc.writeMem(0x5d53, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xeddf, gbc.sp());
        EXPECT(0x5d55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 03B2
        gbc.setState(0x9990, 0xb22f, 0x1b40, 0xdb7e, 0xe618, 0xc582, 0x0, 0x0);
        gbc.writeMem(0x9990, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xb22f, gbc.sp());
        EXPECT(0x9992, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9990));
        EXPECT(0xf8, gbc.readMem(0x9991));
        // CB F8 03B3
        gbc.setState(0x57a, 0x14c2, 0x21e0, 0x1453, 0x6389, 0x42b8, 0x1, 0x0);
        gbc.writeMem(0x57a, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x14c2, gbc.sp());
        EXPECT(0x57c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 03B4
        gbc.setState(0xcb2b, 0xe716, 0x6c50, 0x8562, 0xea2f, 0xd198, 0x0, 0x0);
        gbc.writeMem(0xcb2b, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xe716, gbc.sp());
        EXPECT(0xcb2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb2b));
        EXPECT(0xf8, gbc.readMem(0xcb2c));
        // CB F8 03B5
        gbc.setState(0x8b42, 0x3c9b, 0x6c60, 0x1f8, 0xe110, 0xaa08, 0x0, 0x1);
        gbc.writeMem(0x8b42, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x3c9b, gbc.sp());
        EXPECT(0x8b44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b42));
        EXPECT(0xf8, gbc.readMem(0x8b43));
        // CB F8 03B6
        gbc.setState(0xd90d, 0x740b, 0xe7e0, 0x1183, 0xa7b8, 0x8777, 0x0, 0x0);
        gbc.writeMem(0xd90d, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x740b, gbc.sp());
        EXPECT(0xd90f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd90d));
        EXPECT(0xf8, gbc.readMem(0xd90e));
        // CB F8 03B7
        gbc.setState(0x3fd5, 0xe0f2, 0x7e70, 0xd96b, 0x193a, 0xafb4, 0x0, 0x0);
        gbc.writeMem(0x3fd5, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xe0f2, gbc.sp());
        EXPECT(0x3fd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 03B9
        gbc.setState(0x407c, 0x447b, 0xed70, 0xb8cf, 0x29ec, 0xb2a3, 0x1, 0x1);
        gbc.writeMem(0x407c, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x447b, gbc.sp());
        EXPECT(0x407e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 03BA
        gbc.setState(0x7b16, 0xeb8c, 0x890, 0x347e, 0x4378, 0xae53, 0x1, 0x1);
        gbc.writeMem(0x7b16, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xeb8c, gbc.sp());
        EXPECT(0x7b18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 03BB
        gbc.setState(0xd052, 0xe4e6, 0xf50, 0x578f, 0x1287, 0xae30, 0x0, 0x0);
        gbc.writeMem(0xd052, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xe4e6, gbc.sp());
        EXPECT(0xd054, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd052));
        EXPECT(0xf8, gbc.readMem(0xd053));
        // CB F8 03BC
        gbc.setState(0x7d29, 0x9bac, 0x1770, 0xe497, 0xb69c, 0x6ecb, 0x0, 0x0);
        gbc.writeMem(0x7d29, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x9bac, gbc.sp());
        EXPECT(0x7d2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 03BD
        gbc.setState(0xe12f, 0xa765, 0x94c0, 0x7fb2, 0xff32, 0x9134, 0x1, 0x1);
        gbc.writeMem(0xe12f, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xa765, gbc.sp());
        EXPECT(0xe131, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe12f));
        EXPECT(0xf8, gbc.readMem(0xe130));
        // CB F8 03BE
        gbc.setState(0xe05a, 0xc558, 0xc1b0, 0xcf5b, 0x29cc, 0xbec0, 0x0, 0x0);
        gbc.writeMem(0xe05a, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xc558, gbc.sp());
        EXPECT(0xe05c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe05a));
        EXPECT(0xf8, gbc.readMem(0xe05b));
        // CB F8 03BF
        gbc.setState(0xe869, 0x9313, 0xacc0, 0x689d, 0x8fc, 0x8b73, 0x1, 0x1);
        gbc.writeMem(0xe869, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x9313, gbc.sp());
        EXPECT(0xe86b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe869));
        EXPECT(0xf8, gbc.readMem(0xe86a));
        // CB F8 03C0
        gbc.setState(0xe76e, 0x889, 0x3550, 0x661e, 0xd647, 0x7aaf, 0x1, 0x0);
        gbc.writeMem(0xe76e, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x889, gbc.sp());
        EXPECT(0xe770, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe76e));
        EXPECT(0xf8, gbc.readMem(0xe76f));
        // CB F8 03C1
        gbc.setState(0x61e, 0x9398, 0x4b80, 0x7850, 0x1573, 0x8fec, 0x0, 0x0);
        gbc.writeMem(0x61e, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x9398, gbc.sp());
        EXPECT(0x620, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 03C2
        gbc.setState(0x4722, 0x1769, 0x7f50, 0x974c, 0xaf9b, 0x6577, 0x1, 0x1);
        gbc.writeMem(0x4722, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x1769, gbc.sp());
        EXPECT(0x4724, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 03C3
        gbc.setState(0x5d3d, 0x43bb, 0x9310, 0x544b, 0x3b7e, 0xda5e, 0x1, 0x0);
        gbc.writeMem(0x5d3d, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x43bb, gbc.sp());
        EXPECT(0x5d3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 03C5
        gbc.setState(0x972a, 0x3171, 0x1210, 0xb4cd, 0xd696, 0xa123, 0x1, 0x1);
        gbc.writeMem(0x972a, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x3171, gbc.sp());
        EXPECT(0x972c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x972a));
        EXPECT(0xf8, gbc.readMem(0x972b));
        // CB F8 03C6
        gbc.setState(0xdf50, 0x9c0d, 0x8070, 0xfc38, 0xec88, 0xd19d, 0x1, 0x1);
        gbc.writeMem(0xdf50, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x9c0d, gbc.sp());
        EXPECT(0xdf52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf50));
        EXPECT(0xf8, gbc.readMem(0xdf51));
        // CB F8 03C7
        gbc.setState(0x85c4, 0xf32e, 0xef90, 0xa393, 0x17a3, 0x3316, 0x1, 0x0);
        gbc.writeMem(0x85c4, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xf32e, gbc.sp());
        EXPECT(0x85c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85c4));
        EXPECT(0xf8, gbc.readMem(0x85c5));
        // CB F8 03C8
        gbc.setState(0x3a05, 0x25eb, 0x4400, 0x6261, 0x4fa, 0xc9e8, 0x1, 0x1);
        gbc.writeMem(0x3a05, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x25eb, gbc.sp());
        EXPECT(0x3a07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 03CA
        gbc.setState(0xc70e, 0x6bfd, 0x8080, 0x6751, 0xe8ef, 0x4db8, 0x0, 0x1);
        gbc.writeMem(0xc70e, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x6bfd, gbc.sp());
        EXPECT(0xc710, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc70e));
        EXPECT(0xf8, gbc.readMem(0xc70f));
        // CB F8 03CB
        gbc.setState(0x897, 0xdee9, 0x87b0, 0xf160, 0xc0ba, 0xd37d, 0x1, 0x1);
        gbc.writeMem(0x897, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xdee9, gbc.sp());
        EXPECT(0x899, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 03CC
        gbc.setState(0x51f4, 0x8ef9, 0xd450, 0xe859, 0xf156, 0xabb7, 0x0, 0x0);
        gbc.writeMem(0x51f4, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x8ef9, gbc.sp());
        EXPECT(0x51f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 03CD
        gbc.setState(0x5b31, 0x7d27, 0x9990, 0x8455, 0xe96b, 0x19af, 0x1, 0x1);
        gbc.writeMem(0x5b31, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x7d27, gbc.sp());
        EXPECT(0x5b33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 03CE
        gbc.setState(0x1e4a, 0xab4d, 0x9610, 0xab60, 0xff1b, 0x583b, 0x1, 0x1);
        gbc.writeMem(0x1e4a, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xab4d, gbc.sp());
        EXPECT(0x1e4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 03CF
        gbc.setState(0x8411, 0x7fb8, 0x79b0, 0x5542, 0x2696, 0x7b8f, 0x0, 0x0);
        gbc.writeMem(0x8411, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x7fb8, gbc.sp());
        EXPECT(0x8413, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8411));
        EXPECT(0xf8, gbc.readMem(0x8412));
        // CB F8 03D0
        gbc.setState(0x6505, 0x60be, 0x6f30, 0xf4a6, 0x6d3d, 0xdac7, 0x1, 0x0);
        gbc.writeMem(0x6505, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x60be, gbc.sp());
        EXPECT(0x6507, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 03D1
        gbc.setState(0x607b, 0x1ac7, 0x8160, 0xa9d0, 0xb0c6, 0x54bc, 0x0, 0x1);
        gbc.writeMem(0x607b, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x1ac7, gbc.sp());
        EXPECT(0x607d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 03D2
        gbc.setState(0x831, 0xecec, 0xb010, 0xaedf, 0x270c, 0x38ba, 0x1, 0x0);
        gbc.writeMem(0x831, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xecec, gbc.sp());
        EXPECT(0x833, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 03D3
        gbc.setState(0xcb5, 0xca54, 0x5c60, 0xc042, 0x6060, 0x6e00, 0x1, 0x1);
        gbc.writeMem(0xcb5, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xca54, gbc.sp());
        EXPECT(0xcb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 03D4
        gbc.setState(0xce39, 0xbdec, 0xf720, 0xcf2f, 0xc3f1, 0x8092, 0x1, 0x1);
        gbc.writeMem(0xce39, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xbdec, gbc.sp());
        EXPECT(0xce3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce39));
        EXPECT(0xf8, gbc.readMem(0xce3a));
        // CB F8 03D5
        gbc.setState(0xb311, 0xb110, 0x1ce0, 0xf2ce, 0xb372, 0x2fbb, 0x0, 0x1);
        gbc.writeMem(0xb311, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xb110, gbc.sp());
        EXPECT(0xb313, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb311));
        EXPECT(0xf8, gbc.readMem(0xb312));
        // CB F8 03D6
        gbc.setState(0xb90a, 0x4566, 0x8370, 0x237b, 0xeaf4, 0x77f3, 0x0, 0x0);
        gbc.writeMem(0xb90a, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x4566, gbc.sp());
        EXPECT(0xb90c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb90a));
        EXPECT(0xf8, gbc.readMem(0xb90b));
        // CB F8 03D7
        gbc.setState(0x30d6, 0xaea0, 0x410, 0x3b9b, 0x949, 0x237a, 0x1, 0x0);
        gbc.writeMem(0x30d6, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xaea0, gbc.sp());
        EXPECT(0x30d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 03D9
        gbc.setState(0x5a35, 0x73af, 0x3980, 0x4edd, 0x70d0, 0xa41e, 0x1, 0x0);
        gbc.writeMem(0x5a35, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x73af, gbc.sp());
        EXPECT(0x5a37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 03DA
        gbc.setState(0xe3da, 0x938d, 0x140, 0x3eea, 0xbf18, 0x6952, 0x0, 0x0);
        gbc.writeMem(0xe3da, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x938d, gbc.sp());
        EXPECT(0xe3dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3da));
        EXPECT(0xf8, gbc.readMem(0xe3db));
        // CB F8 03DB
        gbc.setState(0xe296, 0x1d7b, 0x3630, 0xed8d, 0xf667, 0x69fb, 0x0, 0x0);
        gbc.writeMem(0xe296, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x1d7b, gbc.sp());
        EXPECT(0xe298, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe296));
        EXPECT(0xf8, gbc.readMem(0xe297));
        // CB F8 03DC
        gbc.setState(0x328d, 0x75be, 0x5140, 0xb95b, 0xe59e, 0xce75, 0x0, 0x0);
        gbc.writeMem(0x328d, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x75be, gbc.sp());
        EXPECT(0x328f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 03DD
        gbc.setState(0x34a9, 0x6ff8, 0xaca0, 0x75, 0xe54b, 0xce80, 0x1, 0x1);
        gbc.writeMem(0x34a9, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x6ff8, gbc.sp());
        EXPECT(0x34ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 03DE
        gbc.setState(0xd08, 0x9a42, 0x13b0, 0xae2f, 0xa9b6, 0x9537, 0x0, 0x1);
        gbc.writeMem(0xd08, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x9a42, gbc.sp());
        EXPECT(0xd0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 03DF
        gbc.setState(0x98b0, 0x8b01, 0x48a0, 0xc908, 0xe6aa, 0x1a93, 0x0, 0x1);
        gbc.writeMem(0x98b0, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x8b01, gbc.sp());
        EXPECT(0x98b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98b0));
        EXPECT(0xf8, gbc.readMem(0x98b1));
        // CB F8 03E0
        gbc.setState(0x119b, 0x12ea, 0x6ea0, 0x8b9e, 0xc04a, 0x44c, 0x0, 0x0);
        gbc.writeMem(0x119b, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x12ea, gbc.sp());
        EXPECT(0x119d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 03E1
        gbc.setState(0x80af, 0x7dbf, 0x8f30, 0xeaea, 0xa3d4, 0x422c, 0x0, 0x0);
        gbc.writeMem(0x80af, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x7dbf, gbc.sp());
        EXPECT(0x80b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80af));
        EXPECT(0xf8, gbc.readMem(0x80b0));
        // CB F8 03E2
        gbc.setState(0xca5, 0x3f18, 0x7a00, 0x3ba, 0x16e1, 0x76fb, 0x1, 0x0);
        gbc.writeMem(0xca5, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x3f18, gbc.sp());
        EXPECT(0xca7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 03E3
        gbc.setState(0x7cf7, 0x86e3, 0x4cd0, 0xaffb, 0x98db, 0x6366, 0x1, 0x1);
        gbc.writeMem(0x7cf7, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x86e3, gbc.sp());
        EXPECT(0x7cf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F8 03E4
        gbc.setState(0xa9af, 0x9976, 0x71b0, 0x5ad1, 0x41a3, 0x6295, 0x0, 0x1);
        gbc.writeMem(0xa9af, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x9976, gbc.sp());
        EXPECT(0xa9b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9af));
        EXPECT(0xf8, gbc.readMem(0xa9b0));
        // CB F8 03E5
        gbc.setState(0xdb43, 0x2442, 0xbcc0, 0x81b8, 0xb431, 0xfd7d, 0x1, 0x0);
        gbc.writeMem(0xdb43, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x2442, gbc.sp());
        EXPECT(0xdb45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb43));
        EXPECT(0xf8, gbc.readMem(0xdb44));
        // CB F8 03E6
        gbc.setState(0x4ded, 0xeae3, 0xed80, 0x2d20, 0x8943, 0xc480, 0x0, 0x1);
        gbc.writeMem(0x4ded, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xeae3, gbc.sp());
        EXPECT(0x4def, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F8 03E7
        gbc.setState(0x3f83, 0xb6b8, 0xdb0, 0xdfe4, 0xb259, 0x9757, 0x0, 0x0);
        gbc.writeMem(0x3f83, { 0xcb, 0xf8 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xb6b8, gbc.sp());
        EXPECT(0x3f85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
    }
