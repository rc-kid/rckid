    TEST(gbcemu, opcode_c2) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // C2 0000
        gbc.setState(0xfec, 0x8b9d, 0xfab0, 0xa557, 0x3b14, 0x3165, 0x1, 0x1);
        gbc.writeMem(0xfec, { 0xc2, 0xe1, 0x10 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x8b9d, gbc.sp());
        EXPECT(0xfef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0001
        gbc.setState(0x49cf, 0x3fa3, 0x8590, 0x5460, 0x961b, 0x3bbf, 0x1, 0x0);
        gbc.writeMem(0x49cf, { 0xc2, 0x3c, 0xdc });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x3fa3, gbc.sp());
        EXPECT(0x49d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0002
        gbc.setState(0x3e2c, 0x2cc3, 0xaf20, 0xe7bd, 0xf6e0, 0x8904, 0x0, 0x1);
        gbc.writeMem(0x3e2c, { 0xc2, 0x50, 0x73 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x2cc3, gbc.sp());
        EXPECT(0x7350, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0003
        gbc.setState(0xe9f6, 0x5eae, 0xbc0, 0xe8d2, 0xd7f1, 0xcc82, 0x1, 0x0);
        gbc.writeMem(0xe9f6, { 0xc2, 0x4e, 0x56 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x5eae, gbc.sp());
        EXPECT(0xe9f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xe9f6));
        EXPECT(0x4e, gbc.readMem(0xe9f7));
        EXPECT(0x56, gbc.readMem(0xe9f8));
        // C2 0004
        gbc.setState(0x47f3, 0xcb8e, 0xe9d0, 0x3293, 0xd63, 0x375d, 0x0, 0x0);
        gbc.writeMem(0x47f3, { 0xc2, 0x62, 0xab });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xcb8e, gbc.sp());
        EXPECT(0x47f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0005
        gbc.setState(0xb1c1, 0x3bb6, 0x2ee0, 0xf9a6, 0xc970, 0xe211, 0x1, 0x0);
        gbc.writeMem(0xb1c1, { 0xc2, 0xc7, 0x92 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x3bb6, gbc.sp());
        EXPECT(0xb1c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xb1c1));
        EXPECT(0xc7, gbc.readMem(0xb1c2));
        EXPECT(0x92, gbc.readMem(0xb1c3));
        // C2 0007
        gbc.setState(0x8905, 0xefb7, 0xada0, 0xa2b8, 0xbe6e, 0xacb5, 0x1, 0x0);
        gbc.writeMem(0x8905, { 0xc2, 0x53, 0x54 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xefb7, gbc.sp());
        EXPECT(0x8908, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x8905));
        EXPECT(0x53, gbc.readMem(0x8906));
        EXPECT(0x54, gbc.readMem(0x8907));
        // C2 0008
        gbc.setState(0x3853, 0xb0b0, 0x1070, 0x8578, 0x30b2, 0x6bae, 0x0, 0x1);
        gbc.writeMem(0x3853, { 0xc2, 0x62, 0x50 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xb0b0, gbc.sp());
        EXPECT(0x5062, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0009
        gbc.setState(0x7d57, 0x4812, 0x7500, 0x52d0, 0x9535, 0x2544, 0x1, 0x1);
        gbc.writeMem(0x7d57, { 0xc2, 0x24, 0x97 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x4812, gbc.sp());
        EXPECT(0x9724, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 000A
        gbc.setState(0x2033, 0xefeb, 0x9960, 0x1127, 0xf24e, 0xa8e4, 0x0, 0x1);
        gbc.writeMem(0x2033, { 0xc2, 0x27, 0x65 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xefeb, gbc.sp());
        EXPECT(0x6527, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 000B
        gbc.setState(0x5f8e, 0x940c, 0xbde0, 0xa3c, 0x310a, 0x4f48, 0x1, 0x0);
        gbc.writeMem(0x5f8e, { 0xc2, 0xf9, 0x17 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x940c, gbc.sp());
        EXPECT(0x5f91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 000C
        gbc.setState(0x6701, 0xe8c8, 0x5510, 0x954, 0xaded, 0xc1f1, 0x1, 0x1);
        gbc.writeMem(0x6701, { 0xc2, 0x57, 0x9e });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xe8c8, gbc.sp());
        EXPECT(0x9e57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 000D
        gbc.setState(0x70ac, 0xf1fb, 0xec90, 0x3033, 0x4fc1, 0xb580, 0x0, 0x0);
        gbc.writeMem(0x70ac, { 0xc2, 0xa0, 0x16 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xf1fb, gbc.sp());
        EXPECT(0x70af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 000E
        gbc.setState(0xe802, 0x51bc, 0x65c0, 0x140a, 0x2cd8, 0xe744, 0x0, 0x0);
        gbc.writeMem(0xe802, { 0xc2, 0xde, 0xc3 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x51bc, gbc.sp());
        EXPECT(0xe805, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xe802));
        EXPECT(0xde, gbc.readMem(0xe803));
        EXPECT(0xc3, gbc.readMem(0xe804));
        // C2 000F
        gbc.setState(0x40a, 0x696b, 0x9770, 0xeeb5, 0x3dfe, 0x4cf0, 0x0, 0x0);
        gbc.writeMem(0x40a, { 0xc2, 0x28, 0xf });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x696b, gbc.sp());
        EXPECT(0xf28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0010
        gbc.setState(0x51b0, 0x20f, 0xf380, 0xa96e, 0x4735, 0x570d, 0x0, 0x0);
        gbc.writeMem(0x51b0, { 0xc2, 0xb7, 0xf8 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x20f, gbc.sp());
        EXPECT(0x51b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0011
        gbc.setState(0x1a22, 0x2cc0, 0xea30, 0xf066, 0xb045, 0x672f, 0x1, 0x0);
        gbc.writeMem(0x1a22, { 0xc2, 0x8e, 0xe1 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x2cc0, gbc.sp());
        EXPECT(0xe18e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0012
        gbc.setState(0x8483, 0x3cb0, 0x40, 0xbc8a, 0x54e5, 0xe019, 0x1, 0x1);
        gbc.writeMem(0x8483, { 0xc2, 0x17, 0x4b });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x3cb0, gbc.sp());
        EXPECT(0x4b17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x8483));
        EXPECT(0x17, gbc.readMem(0x8484));
        EXPECT(0x4b, gbc.readMem(0x8485));
        // C2 0013
        gbc.setState(0x2fb6, 0xa28f, 0x41d0, 0x1627, 0xc574, 0x1fce, 0x0, 0x1);
        gbc.writeMem(0x2fb6, { 0xc2, 0xd2, 0x9d });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xa28f, gbc.sp());
        EXPECT(0x2fb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0014
        gbc.setState(0xab2e, 0x6fb4, 0xc030, 0xad73, 0x3e72, 0x9696, 0x1, 0x0);
        gbc.writeMem(0xab2e, { 0xc2, 0xa9, 0xcb });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x6fb4, gbc.sp());
        EXPECT(0xcba9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xab2e));
        EXPECT(0xa9, gbc.readMem(0xab2f));
        EXPECT(0xcb, gbc.readMem(0xab30));
        // C2 0015
        gbc.setState(0x16e7, 0xc5c9, 0x300, 0xd8dd, 0x77d7, 0xccff, 0x0, 0x1);
        gbc.writeMem(0x16e7, { 0xc2, 0x96, 0x2b });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xc5c9, gbc.sp());
        EXPECT(0x2b96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0016
        gbc.setState(0xb235, 0x20c7, 0x1370, 0xf851, 0xb3d7, 0x61c8, 0x0, 0x0);
        gbc.writeMem(0xb235, { 0xc2, 0xa3, 0x93 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x20c7, gbc.sp());
        EXPECT(0x93a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xb235));
        EXPECT(0xa3, gbc.readMem(0xb236));
        EXPECT(0x93, gbc.readMem(0xb237));
        // C2 0017
        gbc.setState(0x9617, 0x4ce8, 0x9e10, 0x61bd, 0x5225, 0xa978, 0x0, 0x1);
        gbc.writeMem(0x9617, { 0xc2, 0x73, 0x23 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x4ce8, gbc.sp());
        EXPECT(0x2373, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x9617));
        EXPECT(0x73, gbc.readMem(0x9618));
        EXPECT(0x23, gbc.readMem(0x9619));
        // C2 0018
        gbc.setState(0xa781, 0xbac5, 0x2c50, 0xb795, 0x6533, 0x25e6, 0x0, 0x1);
        gbc.writeMem(0xa781, { 0xc2, 0x37, 0xd6 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xbac5, gbc.sp());
        EXPECT(0xd637, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xa781));
        EXPECT(0x37, gbc.readMem(0xa782));
        EXPECT(0xd6, gbc.readMem(0xa783));
        // C2 0019
        gbc.setState(0x2f0a, 0x9a34, 0xdba0, 0xda43, 0x319, 0x853b, 0x1, 0x0);
        gbc.writeMem(0x2f0a, { 0xc2, 0x74, 0xc7 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x9a34, gbc.sp());
        EXPECT(0x2f0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 001A
        gbc.setState(0x863c, 0xa4ff, 0xe050, 0xa39, 0x8c89, 0x161a, 0x1, 0x0);
        gbc.writeMem(0x863c, { 0xc2, 0x40, 0x69 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xa4ff, gbc.sp());
        EXPECT(0x6940, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x863c));
        EXPECT(0x40, gbc.readMem(0x863d));
        EXPECT(0x69, gbc.readMem(0x863e));
        // C2 001B
        gbc.setState(0x89bf, 0x2f3f, 0x7950, 0x4041, 0x98f, 0xa341, 0x1, 0x0);
        gbc.writeMem(0x89bf, { 0xc2, 0x0, 0x80 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x2f3f, gbc.sp());
        EXPECT(0x8000, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x89bf));
        EXPECT(0x0, gbc.readMem(0x89c0));
        EXPECT(0x80, gbc.readMem(0x89c1));
        // C2 001C
        gbc.setState(0x139a, 0x8dab, 0xa3a0, 0x1d0e, 0x33de, 0x837f, 0x1, 0x1);
        gbc.writeMem(0x139a, { 0xc2, 0x22, 0x7d });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x8dab, gbc.sp());
        EXPECT(0x139d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 001D
        gbc.setState(0x78c0, 0x9aef, 0x63f0, 0xac2b, 0xdbae, 0x38ff, 0x1, 0x0);
        gbc.writeMem(0x78c0, { 0xc2, 0x92, 0x7 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x9aef, gbc.sp());
        EXPECT(0x78c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 001E
        gbc.setState(0x1a5c, 0x77c4, 0xf2f0, 0xf15b, 0x5e98, 0x59b3, 0x1, 0x1);
        gbc.writeMem(0x1a5c, { 0xc2, 0xd9, 0xc2 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x77c4, gbc.sp());
        EXPECT(0x1a5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 001F
        gbc.setState(0x38d4, 0xce16, 0xd160, 0xc94a, 0xe60, 0xae99, 0x1, 0x0);
        gbc.writeMem(0x38d4, { 0xc2, 0x1d, 0x38 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xce16, gbc.sp());
        EXPECT(0x381d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0020
        gbc.setState(0xa5a0, 0x8e11, 0x9cb0, 0x8159, 0x9e0a, 0x2262, 0x0, 0x1);
        gbc.writeMem(0xa5a0, { 0xc2, 0x6e, 0x42 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x8e11, gbc.sp());
        EXPECT(0xa5a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xa5a0));
        EXPECT(0x6e, gbc.readMem(0xa5a1));
        EXPECT(0x42, gbc.readMem(0xa5a2));
        // C2 0021
        gbc.setState(0xe933, 0xdd4, 0xdef0, 0x2b1, 0x89fb, 0xceff, 0x0, 0x1);
        gbc.writeMem(0xe933, { 0xc2, 0x1d, 0xc8 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xdd4, gbc.sp());
        EXPECT(0xe936, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xe933));
        EXPECT(0x1d, gbc.readMem(0xe934));
        EXPECT(0xc8, gbc.readMem(0xe935));
        // C2 0022
        gbc.setState(0x1547, 0xa33f, 0x8790, 0x3ed3, 0xef7f, 0x4b0f, 0x1, 0x1);
        gbc.writeMem(0x1547, { 0xc2, 0x39, 0xb4 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xa33f, gbc.sp());
        EXPECT(0x154a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0023
        gbc.setState(0x1ec3, 0xab05, 0x61d0, 0x64ad, 0x24e4, 0xe76c, 0x1, 0x0);
        gbc.writeMem(0x1ec3, { 0xc2, 0x1d, 0x94 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xab05, gbc.sp());
        EXPECT(0x1ec6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0024
        gbc.setState(0x7113, 0x1ab4, 0x9f20, 0xc9d1, 0xb1c6, 0x7bca, 0x0, 0x1);
        gbc.writeMem(0x7113, { 0xc2, 0xc8, 0x3c });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x1ab4, gbc.sp());
        EXPECT(0x3cc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0025
        gbc.setState(0x18b7, 0xbd3e, 0x7060, 0xcbb5, 0xcf9b, 0x8a5b, 0x1, 0x1);
        gbc.writeMem(0x18b7, { 0xc2, 0x51, 0x4a });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xbd3e, gbc.sp());
        EXPECT(0x4a51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0026
        gbc.setState(0x2616, 0x7aba, 0x88a0, 0x3696, 0xc9c5, 0xb946, 0x0, 0x1);
        gbc.writeMem(0x2616, { 0xc2, 0x47, 0x42 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x7aba, gbc.sp());
        EXPECT(0x2619, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0027
        gbc.setState(0x8d7, 0x46eb, 0xbd40, 0x651b, 0x3867, 0x7a58, 0x1, 0x1);
        gbc.writeMem(0x8d7, { 0xc2, 0x42, 0xed });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x46eb, gbc.sp());
        EXPECT(0xed42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0028
        gbc.setState(0xd350, 0xe981, 0xf900, 0xab82, 0xbb3a, 0x30ea, 0x0, 0x0);
        gbc.writeMem(0xd350, { 0xc2, 0x8, 0xd5 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xe981, gbc.sp());
        EXPECT(0xd508, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xd350));
        EXPECT(0x8, gbc.readMem(0xd351));
        EXPECT(0xd5, gbc.readMem(0xd352));
        // C2 0029
        gbc.setState(0x43df, 0xa4b9, 0xf310, 0x3a16, 0xd26b, 0x4761, 0x0, 0x1);
        gbc.writeMem(0x43df, { 0xc2, 0xbd, 0x1e });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xa4b9, gbc.sp());
        EXPECT(0x1ebd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 002A
        gbc.setState(0x66de, 0xaad8, 0x3370, 0x6561, 0xb9d7, 0x7057, 0x0, 0x0);
        gbc.writeMem(0x66de, { 0xc2, 0x7a, 0x39 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xaad8, gbc.sp());
        EXPECT(0x397a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 002C
        gbc.setState(0x827a, 0xd276, 0x30b0, 0x1068, 0x58fc, 0xa4e7, 0x1, 0x0);
        gbc.writeMem(0x827a, { 0xc2, 0x8e, 0x1d });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xd276, gbc.sp());
        EXPECT(0x827d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x827a));
        EXPECT(0x8e, gbc.readMem(0x827b));
        EXPECT(0x1d, gbc.readMem(0x827c));
        // C2 002D
        gbc.setState(0x7925, 0x3d21, 0x68a0, 0x5ead, 0x298d, 0xbf85, 0x0, 0x1);
        gbc.writeMem(0x7925, { 0xc2, 0xaa, 0xe8 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x3d21, gbc.sp());
        EXPECT(0x7928, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 002E
        gbc.setState(0x5182, 0x4247, 0x91a0, 0x6b96, 0x909e, 0xbd40, 0x0, 0x1);
        gbc.writeMem(0x5182, { 0xc2, 0x8d, 0x3 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x4247, gbc.sp());
        EXPECT(0x5185, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 002F
        gbc.setState(0xeac5, 0x7cb3, 0xccd0, 0x9c43, 0x4d9, 0xbb0, 0x0, 0x1);
        gbc.writeMem(0xeac5, { 0xc2, 0xc6, 0x9b });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x7cb3, gbc.sp());
        EXPECT(0xeac8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xeac5));
        EXPECT(0xc6, gbc.readMem(0xeac6));
        EXPECT(0x9b, gbc.readMem(0xeac7));
        // C2 0031
        gbc.setState(0x2591, 0xdbcd, 0xb020, 0xd596, 0xff33, 0x5e8e, 0x1, 0x0);
        gbc.writeMem(0x2591, { 0xc2, 0x6d, 0x8f });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xdbcd, gbc.sp());
        EXPECT(0x8f6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0032
        gbc.setState(0x426, 0xa15c, 0x6050, 0x4ff0, 0xd1d5, 0x99d9, 0x1, 0x0);
        gbc.writeMem(0x426, { 0xc2, 0xa2, 0x6d });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xa15c, gbc.sp());
        EXPECT(0x6da2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0033
        gbc.setState(0x22e0, 0xe9bb, 0x4410, 0x7e2e, 0x40f9, 0x33ca, 0x1, 0x0);
        gbc.writeMem(0x22e0, { 0xc2, 0x4f, 0x75 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xe9bb, gbc.sp());
        EXPECT(0x754f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0034
        gbc.setState(0x5eea, 0xeb71, 0x91c0, 0xce8b, 0xc12b, 0xcf85, 0x0, 0x0);
        gbc.writeMem(0x5eea, { 0xc2, 0xc0, 0xcd });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xeb71, gbc.sp());
        EXPECT(0x5eed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0035
        gbc.setState(0x7fc4, 0xfde1, 0x9730, 0xf3d3, 0xe9d1, 0xe638, 0x0, 0x1);
        gbc.writeMem(0x7fc4, { 0xc2, 0x97, 0xfa });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xfde1, gbc.sp());
        EXPECT(0xfa97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0036
        gbc.setState(0x22f, 0x399d, 0xcdc0, 0x356e, 0x9bd5, 0xad75, 0x0, 0x0);
        gbc.writeMem(0x22f, { 0xc2, 0xae, 0x7f });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x399d, gbc.sp());
        EXPECT(0x232, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0037
        gbc.setState(0x738b, 0xaf82, 0x7d10, 0xd3ef, 0x89f7, 0x9017, 0x1, 0x0);
        gbc.writeMem(0x738b, { 0xc2, 0xcf, 0x43 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xaf82, gbc.sp());
        EXPECT(0x43cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0038
        gbc.setState(0x6cd, 0xd07b, 0x6bb0, 0x306a, 0x1e63, 0x794a, 0x1, 0x0);
        gbc.writeMem(0x6cd, { 0xc2, 0xb1, 0xdb });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xd07b, gbc.sp());
        EXPECT(0x6d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0039
        gbc.setState(0x84fb, 0x1696, 0xfd20, 0x957d, 0x4d9e, 0x1897, 0x1, 0x0);
        gbc.writeMem(0x84fb, { 0xc2, 0x71, 0x68 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x1696, gbc.sp());
        EXPECT(0x6871, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x84fb));
        EXPECT(0x71, gbc.readMem(0x84fc));
        EXPECT(0x68, gbc.readMem(0x84fd));
        // C2 003A
        gbc.setState(0xb51e, 0xfd8a, 0xa070, 0x3820, 0x5e3f, 0x2b6d, 0x0, 0x1);
        gbc.writeMem(0xb51e, { 0xc2, 0x4c, 0xd0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xfd8a, gbc.sp());
        EXPECT(0xd04c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xb51e));
        EXPECT(0x4c, gbc.readMem(0xb51f));
        EXPECT(0xd0, gbc.readMem(0xb520));
        // C2 003B
        gbc.setState(0x3238, 0xc578, 0x4220, 0x70a1, 0xa869, 0x426c, 0x1, 0x0);
        gbc.writeMem(0x3238, { 0xc2, 0xe1, 0xd1 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xc578, gbc.sp());
        EXPECT(0xd1e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 003D
        gbc.setState(0xa89c, 0xd91d, 0xb0f0, 0xa69b, 0x6852, 0x7023, 0x0, 0x0);
        gbc.writeMem(0xa89c, { 0xc2, 0x2c, 0x82 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xd91d, gbc.sp());
        EXPECT(0xa89f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xa89c));
        EXPECT(0x2c, gbc.readMem(0xa89d));
        EXPECT(0x82, gbc.readMem(0xa89e));
        // C2 003E
        gbc.setState(0xb83, 0xbd7d, 0xf1f0, 0x98fa, 0x4054, 0x817b, 0x0, 0x0);
        gbc.writeMem(0xb83, { 0xc2, 0x60, 0x58 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xbd7d, gbc.sp());
        EXPECT(0xb86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 003F
        gbc.setState(0x703f, 0xdacf, 0x41a0, 0x75cf, 0x3225, 0x4429, 0x0, 0x0);
        gbc.writeMem(0x703f, { 0xc2, 0xe, 0x92 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xdacf, gbc.sp());
        EXPECT(0x7042, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0041
        gbc.setState(0xcfbc, 0x7b2, 0xa8f0, 0x2e6e, 0xa166, 0x1b7d, 0x0, 0x0);
        gbc.writeMem(0xcfbc, { 0xc2, 0xf9, 0x4f });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x7b2, gbc.sp());
        EXPECT(0xcfbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xcfbc));
        EXPECT(0xf9, gbc.readMem(0xcfbd));
        EXPECT(0x4f, gbc.readMem(0xcfbe));
        // C2 0042
        gbc.setState(0x9743, 0x986a, 0x9720, 0xbd64, 0x37d, 0x64f6, 0x0, 0x1);
        gbc.writeMem(0x9743, { 0xc2, 0xba, 0x9a });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x986a, gbc.sp());
        EXPECT(0x9aba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x9743));
        EXPECT(0xba, gbc.readMem(0x9744));
        EXPECT(0x9a, gbc.readMem(0x9745));
        // C2 0043
        gbc.setState(0xcc7e, 0x6f55, 0x2630, 0x9564, 0xe79d, 0x7082, 0x1, 0x0);
        gbc.writeMem(0xcc7e, { 0xc2, 0x18, 0xbf });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x6f55, gbc.sp());
        EXPECT(0xbf18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xcc7e));
        EXPECT(0x18, gbc.readMem(0xcc7f));
        EXPECT(0xbf, gbc.readMem(0xcc80));
        // C2 0044
        gbc.setState(0xd814, 0x7377, 0xa120, 0x383, 0x869c, 0x35a4, 0x1, 0x1);
        gbc.writeMem(0xd814, { 0xc2, 0x82, 0xf7 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x7377, gbc.sp());
        EXPECT(0xf782, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xd814));
        EXPECT(0x82, gbc.readMem(0xd815));
        EXPECT(0xf7, gbc.readMem(0xd816));
        // C2 0045
        gbc.setState(0x6718, 0x752d, 0x4cd0, 0xf834, 0x92e4, 0x4f72, 0x1, 0x0);
        gbc.writeMem(0x6718, { 0xc2, 0xb3, 0x11 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x752d, gbc.sp());
        EXPECT(0x671b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0046
        gbc.setState(0x1eb7, 0x86b1, 0x7fe0, 0x2bd8, 0xcbd, 0x9c0b, 0x1, 0x1);
        gbc.writeMem(0x1eb7, { 0xc2, 0xe4, 0xe });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x86b1, gbc.sp());
        EXPECT(0x1eba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0047
        gbc.setState(0x9a91, 0x98a3, 0xc4e0, 0x9bcb, 0x6fdf, 0xa7a1, 0x0, 0x0);
        gbc.writeMem(0x9a91, { 0xc2, 0x7, 0x21 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x98a3, gbc.sp());
        EXPECT(0x9a94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x9a91));
        EXPECT(0x7, gbc.readMem(0x9a92));
        EXPECT(0x21, gbc.readMem(0x9a93));
        // C2 0049
        gbc.setState(0x2375, 0xbbfa, 0xf420, 0xe37d, 0x75f9, 0x1b3e, 0x1, 0x1);
        gbc.writeMem(0x2375, { 0xc2, 0xee, 0xf8 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xbbfa, gbc.sp());
        EXPECT(0xf8ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 004A
        gbc.setState(0x3fbf, 0xe239, 0x5750, 0xf85b, 0xc6c, 0x3df6, 0x0, 0x1);
        gbc.writeMem(0x3fbf, { 0xc2, 0x4c, 0x42 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xe239, gbc.sp());
        EXPECT(0x424c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 004B
        gbc.setState(0x3508, 0x8ae3, 0x2300, 0x1964, 0x3982, 0xf964, 0x0, 0x1);
        gbc.writeMem(0x3508, { 0xc2, 0xb2, 0x16 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x8ae3, gbc.sp());
        EXPECT(0x16b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 004C
        gbc.setState(0x6d6, 0x1570, 0x36b0, 0xbb01, 0x2f77, 0xeecd, 0x0, 0x1);
        gbc.writeMem(0x6d6, { 0xc2, 0x8c, 0xf0 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x1570, gbc.sp());
        EXPECT(0x6d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 004D
        gbc.setState(0xdeb5, 0xdde8, 0xeba0, 0xd9e5, 0xd3e6, 0xdccc, 0x1, 0x1);
        gbc.writeMem(0xdeb5, { 0xc2, 0xab, 0xb2 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xdde8, gbc.sp());
        EXPECT(0xdeb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xdeb5));
        EXPECT(0xab, gbc.readMem(0xdeb6));
        EXPECT(0xb2, gbc.readMem(0xdeb7));
        // C2 004E
        gbc.setState(0x40f5, 0x61ca, 0x7ce0, 0xcd44, 0xf35, 0x9499, 0x0, 0x0);
        gbc.writeMem(0x40f5, { 0xc2, 0x57, 0x2b });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x61ca, gbc.sp());
        EXPECT(0x40f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 004F
        gbc.setState(0x2917, 0x4fb2, 0x1790, 0x7dc2, 0xe1da, 0x5249, 0x0, 0x1);
        gbc.writeMem(0x2917, { 0xc2, 0x9a, 0xd3 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x4fb2, gbc.sp());
        EXPECT(0x291a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0050
        gbc.setState(0x7250, 0x365, 0x72f0, 0xe795, 0x5abd, 0x8f3a, 0x1, 0x0);
        gbc.writeMem(0x7250, { 0xc2, 0xaa, 0xba });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x365, gbc.sp());
        EXPECT(0x7253, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0051
        gbc.setState(0x2246, 0x95a6, 0xe7c0, 0x590b, 0x5f5e, 0x35a4, 0x1, 0x0);
        gbc.writeMem(0x2246, { 0xc2, 0xd8, 0xc0 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x95a6, gbc.sp());
        EXPECT(0x2249, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0052
        gbc.setState(0x1758, 0x5b10, 0x2620, 0x11a6, 0x9723, 0x6bbf, 0x1, 0x1);
        gbc.writeMem(0x1758, { 0xc2, 0xd1, 0x35 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x5b10, gbc.sp());
        EXPECT(0x35d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0053
        gbc.setState(0xb168, 0x464b, 0xe400, 0x87f8, 0x7363, 0xe496, 0x1, 0x0);
        gbc.writeMem(0xb168, { 0xc2, 0xcd, 0x7c });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x464b, gbc.sp());
        EXPECT(0x7ccd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xb168));
        EXPECT(0xcd, gbc.readMem(0xb169));
        EXPECT(0x7c, gbc.readMem(0xb16a));
        // C2 0054
        gbc.setState(0xb8a8, 0x9f15, 0xfdb0, 0xb6c2, 0x4b2c, 0xcbca, 0x0, 0x0);
        gbc.writeMem(0xb8a8, { 0xc2, 0x12, 0xe });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x9f15, gbc.sp());
        EXPECT(0xb8ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xb8a8));
        EXPECT(0x12, gbc.readMem(0xb8a9));
        EXPECT(0xe, gbc.readMem(0xb8aa));
        // C2 0055
        gbc.setState(0xaa21, 0xca7a, 0x73c0, 0x74b1, 0x5fd9, 0x63a3, 0x0, 0x1);
        gbc.writeMem(0xaa21, { 0xc2, 0xa8, 0x2f });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xca7a, gbc.sp());
        EXPECT(0xaa24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xaa21));
        EXPECT(0xa8, gbc.readMem(0xaa22));
        EXPECT(0x2f, gbc.readMem(0xaa23));
        // C2 0056
        gbc.setState(0xa0b8, 0x20c7, 0xd9c0, 0xde7c, 0x7e6f, 0x6f53, 0x1, 0x1);
        gbc.writeMem(0xa0b8, { 0xc2, 0x9, 0xc5 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x20c7, gbc.sp());
        EXPECT(0xa0bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xa0b8));
        EXPECT(0x9, gbc.readMem(0xa0b9));
        EXPECT(0xc5, gbc.readMem(0xa0ba));
        // C2 0057
        gbc.setState(0x5016, 0x3bd6, 0xce70, 0xc9ab, 0xe0ad, 0x18a3, 0x0, 0x0);
        gbc.writeMem(0x5016, { 0xc2, 0xf5, 0x79 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x3bd6, gbc.sp());
        EXPECT(0x79f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0058
        gbc.setState(0x8d38, 0xb975, 0x9dc0, 0xab65, 0x581d, 0xe2e2, 0x0, 0x0);
        gbc.writeMem(0x8d38, { 0xc2, 0x39, 0xe3 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xb975, gbc.sp());
        EXPECT(0x8d3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x8d38));
        EXPECT(0x39, gbc.readMem(0x8d39));
        EXPECT(0xe3, gbc.readMem(0x8d3a));
        // C2 0059
        gbc.setState(0xc188, 0x46d3, 0x6690, 0x36eb, 0x53c5, 0x509f, 0x1, 0x1);
        gbc.writeMem(0xc188, { 0xc2, 0xf, 0xf2 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x46d3, gbc.sp());
        EXPECT(0xc18b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xc188));
        EXPECT(0xf, gbc.readMem(0xc189));
        EXPECT(0xf2, gbc.readMem(0xc18a));
        // C2 005A
        gbc.setState(0x10a5, 0xb04c, 0xbcb0, 0xa28f, 0x8cfa, 0x89a5, 0x1, 0x0);
        gbc.writeMem(0x10a5, { 0xc2, 0x50, 0x16 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xb04c, gbc.sp());
        EXPECT(0x10a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 005B
        gbc.setState(0x854f, 0xb618, 0x59e0, 0x3f0e, 0x1556, 0x5c1c, 0x1, 0x1);
        gbc.writeMem(0x854f, { 0xc2, 0x8d, 0xa6 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xb618, gbc.sp());
        EXPECT(0x8552, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x854f));
        EXPECT(0x8d, gbc.readMem(0x8550));
        EXPECT(0xa6, gbc.readMem(0x8551));
        // C2 005C
        gbc.setState(0xd93c, 0x21be, 0x7e20, 0x2084, 0x940d, 0xb4e2, 0x1, 0x0);
        gbc.writeMem(0xd93c, { 0xc2, 0x66, 0x13 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x21be, gbc.sp());
        EXPECT(0x1366, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xd93c));
        EXPECT(0x66, gbc.readMem(0xd93d));
        EXPECT(0x13, gbc.readMem(0xd93e));
        // C2 005E
        gbc.setState(0xd526, 0xba82, 0x3b80, 0x7638, 0x6df5, 0x6b76, 0x1, 0x0);
        gbc.writeMem(0xd526, { 0xc2, 0xcf, 0xb4 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xba82, gbc.sp());
        EXPECT(0xd529, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xd526));
        EXPECT(0xcf, gbc.readMem(0xd527));
        EXPECT(0xb4, gbc.readMem(0xd528));
        // C2 0060
        gbc.setState(0xaea1, 0x8d4a, 0xa400, 0xa99, 0xbf75, 0xf356, 0x1, 0x1);
        gbc.writeMem(0xaea1, { 0xc2, 0xfc, 0xdd });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x8d4a, gbc.sp());
        EXPECT(0xddfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xaea1));
        EXPECT(0xfc, gbc.readMem(0xaea2));
        EXPECT(0xdd, gbc.readMem(0xaea3));
        // C2 0061
        gbc.setState(0xd8d9, 0xaa99, 0xf6c0, 0x28bf, 0xe027, 0xce2a, 0x1, 0x1);
        gbc.writeMem(0xd8d9, { 0xc2, 0xbe, 0x71 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xaa99, gbc.sp());
        EXPECT(0xd8dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xd8d9));
        EXPECT(0xbe, gbc.readMem(0xd8da));
        EXPECT(0x71, gbc.readMem(0xd8db));
        // C2 0062
        gbc.setState(0xdb6a, 0x3cfb, 0xf830, 0xe52, 0x8fd6, 0xff78, 0x1, 0x1);
        gbc.writeMem(0xdb6a, { 0xc2, 0xcc, 0xc5 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x3cfb, gbc.sp());
        EXPECT(0xc5cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xdb6a));
        EXPECT(0xcc, gbc.readMem(0xdb6b));
        EXPECT(0xc5, gbc.readMem(0xdb6c));
        // C2 0063
        gbc.setState(0x5625, 0x9162, 0x78e0, 0xc125, 0xdac6, 0xeea0, 0x1, 0x0);
        gbc.writeMem(0x5625, { 0xc2, 0x10, 0x1a });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x9162, gbc.sp());
        EXPECT(0x5628, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0064
        gbc.setState(0x594e, 0xd58d, 0xad00, 0xe128, 0x4210, 0x8f6b, 0x0, 0x1);
        gbc.writeMem(0x594e, { 0xc2, 0x68, 0xc3 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xd58d, gbc.sp());
        EXPECT(0xc368, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0067
        gbc.setState(0xbc2c, 0x8669, 0x3c50, 0x5bd0, 0x3411, 0xe73, 0x1, 0x0);
        gbc.writeMem(0xbc2c, { 0xc2, 0xa2, 0xe0 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x8669, gbc.sp());
        EXPECT(0xe0a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xbc2c));
        EXPECT(0xa2, gbc.readMem(0xbc2d));
        EXPECT(0xe0, gbc.readMem(0xbc2e));
        // C2 0068
        gbc.setState(0x20ef, 0x2dbe, 0x8e0, 0x2e08, 0x2f, 0x9823, 0x1, 0x1);
        gbc.writeMem(0x20ef, { 0xc2, 0xb8, 0xe3 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x2dbe, gbc.sp());
        EXPECT(0x20f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0069
        gbc.setState(0x1eaf, 0xeae3, 0x97f0, 0x4091, 0x99b0, 0x1bfc, 0x0, 0x1);
        gbc.writeMem(0x1eaf, { 0xc2, 0x4e, 0xed });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xeae3, gbc.sp());
        EXPECT(0x1eb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 006A
        gbc.setState(0xab90, 0x37e7, 0xdc10, 0xb089, 0x59a6, 0x3bc6, 0x1, 0x1);
        gbc.writeMem(0xab90, { 0xc2, 0x14, 0x82 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x37e7, gbc.sp());
        EXPECT(0x8214, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xab90));
        EXPECT(0x14, gbc.readMem(0xab91));
        EXPECT(0x82, gbc.readMem(0xab92));
        // C2 006B
        gbc.setState(0x3b02, 0xa92e, 0xcbf0, 0x7983, 0x954, 0x81e0, 0x1, 0x0);
        gbc.writeMem(0x3b02, { 0xc2, 0x76, 0x1 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xa92e, gbc.sp());
        EXPECT(0x3b05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 006C
        gbc.setState(0x59ff, 0x8fb7, 0x3010, 0x49f9, 0x31d7, 0x5b0, 0x1, 0x1);
        gbc.writeMem(0x59ff, { 0xc2, 0xac, 0xa5 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x8fb7, gbc.sp());
        EXPECT(0xa5ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 006D
        gbc.setState(0x79e9, 0xae4f, 0xea30, 0xbaf4, 0xf4, 0x9f97, 0x1, 0x1);
        gbc.writeMem(0x79e9, { 0xc2, 0xd7, 0x6e });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xae4f, gbc.sp());
        EXPECT(0x6ed7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 006E
        gbc.setState(0x6cbb, 0xa285, 0xb1b0, 0x629b, 0x886d, 0x2ab6, 0x1, 0x0);
        gbc.writeMem(0x6cbb, { 0xc2, 0xe2, 0x17 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xa285, gbc.sp());
        EXPECT(0x6cbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 006F
        gbc.setState(0x7560, 0x9d29, 0x6c70, 0x8620, 0x20a8, 0x9d03, 0x0, 0x0);
        gbc.writeMem(0x7560, { 0xc2, 0x24, 0xd5 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x9d29, gbc.sp());
        EXPECT(0xd524, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0071
        gbc.setState(0x5935, 0x91aa, 0x6c90, 0x8dc5, 0xd96d, 0xed93, 0x1, 0x0);
        gbc.writeMem(0x5935, { 0xc2, 0xd2, 0xbf });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x91aa, gbc.sp());
        EXPECT(0x5938, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0072
        gbc.setState(0x7d2, 0x708d, 0xea40, 0x4da4, 0xbb15, 0x60cb, 0x0, 0x0);
        gbc.writeMem(0x7d2, { 0xc2, 0x2f, 0x9e });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x708d, gbc.sp());
        EXPECT(0x9e2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0073
        gbc.setState(0x2dff, 0xeca6, 0xf6c0, 0x236, 0xbc99, 0x8e2d, 0x0, 0x1);
        gbc.writeMem(0x2dff, { 0xc2, 0xda, 0x25 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xeca6, gbc.sp());
        EXPECT(0x2e02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0074
        gbc.setState(0xefee, 0x27de, 0x6b50, 0x2b52, 0x44cb, 0xc17a, 0x0, 0x0);
        gbc.writeMem(0xefee, { 0xc2, 0x32, 0xc4 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x27de, gbc.sp());
        EXPECT(0xc432, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xefee));
        EXPECT(0x32, gbc.readMem(0xefef));
        EXPECT(0xc4, gbc.readMem(0xeff0));
        // C2 0075
        gbc.setState(0x65b5, 0x7aa5, 0xb670, 0x7b33, 0x6d74, 0x2a92, 0x0, 0x0);
        gbc.writeMem(0x65b5, { 0xc2, 0x18, 0xae });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x7aa5, gbc.sp());
        EXPECT(0xae18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0076
        gbc.setState(0xa635, 0x109e, 0x5480, 0x7b8b, 0xfad3, 0xbc23, 0x0, 0x0);
        gbc.writeMem(0xa635, { 0xc2, 0x60, 0x2 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x109e, gbc.sp());
        EXPECT(0xa638, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xa635));
        EXPECT(0x60, gbc.readMem(0xa636));
        EXPECT(0x2, gbc.readMem(0xa637));
        // C2 0077
        gbc.setState(0xde7, 0x17a4, 0x12c0, 0x7d8f, 0x871, 0xe632, 0x1, 0x1);
        gbc.writeMem(0xde7, { 0xc2, 0x94, 0x2c });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x17a4, gbc.sp());
        EXPECT(0xdea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0078
        gbc.setState(0x2426, 0xb200, 0x4eb0, 0x4506, 0xfefe, 0x4315, 0x1, 0x1);
        gbc.writeMem(0x2426, { 0xc2, 0xf1, 0x14 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xb200, gbc.sp());
        EXPECT(0x2429, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0079
        gbc.setState(0x8c0b, 0x9358, 0xfec0, 0xdf48, 0xe447, 0xaa38, 0x1, 0x0);
        gbc.writeMem(0x8c0b, { 0xc2, 0x5, 0x5e });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x9358, gbc.sp());
        EXPECT(0x8c0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x8c0b));
        EXPECT(0x5, gbc.readMem(0x8c0c));
        EXPECT(0x5e, gbc.readMem(0x8c0d));
        // C2 007A
        gbc.setState(0x5c5e, 0xa0e2, 0xb0a0, 0x2905, 0x69b2, 0x7624, 0x0, 0x1);
        gbc.writeMem(0x5c5e, { 0xc2, 0x18, 0x14 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xa0e2, gbc.sp());
        EXPECT(0x5c61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 007B
        gbc.setState(0x9c7e, 0x72ef, 0x11e0, 0x2e99, 0xe1b7, 0x8c94, 0x0, 0x0);
        gbc.writeMem(0x9c7e, { 0xc2, 0x1b, 0x7f });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x72ef, gbc.sp());
        EXPECT(0x9c81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x9c7e));
        EXPECT(0x1b, gbc.readMem(0x9c7f));
        EXPECT(0x7f, gbc.readMem(0x9c80));
        // C2 007C
        gbc.setState(0x30d7, 0x47ff, 0x8e20, 0x9849, 0xbd61, 0xa107, 0x1, 0x1);
        gbc.writeMem(0x30d7, { 0xc2, 0x24, 0x8a });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x47ff, gbc.sp());
        EXPECT(0x8a24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 007D
        gbc.setState(0x58ad, 0x1e37, 0xebb0, 0x7ca3, 0x5874, 0x3ec8, 0x1, 0x1);
        gbc.writeMem(0x58ad, { 0xc2, 0x33, 0xd1 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x1e37, gbc.sp());
        EXPECT(0x58b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 007E
        gbc.setState(0xb285, 0x8b8d, 0xa200, 0x5cf6, 0x94d5, 0x9aaf, 0x0, 0x1);
        gbc.writeMem(0xb285, { 0xc2, 0x8a, 0x57 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x8b8d, gbc.sp());
        EXPECT(0x578a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xb285));
        EXPECT(0x8a, gbc.readMem(0xb286));
        EXPECT(0x57, gbc.readMem(0xb287));
        // C2 007F
        gbc.setState(0x7db9, 0xc566, 0x8920, 0xd357, 0x86cd, 0x5ce1, 0x0, 0x1);
        gbc.writeMem(0x7db9, { 0xc2, 0xcf, 0x38 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xc566, gbc.sp());
        EXPECT(0x38cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0080
        gbc.setState(0xc662, 0x9fa, 0x6170, 0x9642, 0x9c42, 0xfaf6, 0x0, 0x1);
        gbc.writeMem(0xc662, { 0xc2, 0x49, 0xe0 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x9fa, gbc.sp());
        EXPECT(0xe049, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xc662));
        EXPECT(0x49, gbc.readMem(0xc663));
        EXPECT(0xe0, gbc.readMem(0xc664));
        // C2 0081
        gbc.setState(0x7551, 0xc59f, 0xf20, 0x3258, 0x7260, 0x4f2a, 0x0, 0x1);
        gbc.writeMem(0x7551, { 0xc2, 0x2f, 0x28 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xc59f, gbc.sp());
        EXPECT(0x282f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0082
        gbc.setState(0xee7d, 0x4d7e, 0x6570, 0xfa9b, 0x84b8, 0x7164, 0x0, 0x0);
        gbc.writeMem(0xee7d, { 0xc2, 0x1b, 0x15 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x4d7e, gbc.sp());
        EXPECT(0x151b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xee7d));
        EXPECT(0x1b, gbc.readMem(0xee7e));
        EXPECT(0x15, gbc.readMem(0xee7f));
        // C2 0083
        gbc.setState(0x96da, 0x41ef, 0xfb60, 0x6e, 0x9fd3, 0x9c16, 0x1, 0x0);
        gbc.writeMem(0x96da, { 0xc2, 0x6f, 0xc0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x41ef, gbc.sp());
        EXPECT(0xc06f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x96da));
        EXPECT(0x6f, gbc.readMem(0x96db));
        EXPECT(0xc0, gbc.readMem(0x96dc));
        // C2 0084
        gbc.setState(0x9296, 0xf457, 0x81f0, 0x5a32, 0x401b, 0xc0d0, 0x1, 0x0);
        gbc.writeMem(0x9296, { 0xc2, 0xf9, 0xa });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xf457, gbc.sp());
        EXPECT(0x9299, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x9296));
        EXPECT(0xf9, gbc.readMem(0x9297));
        EXPECT(0xa, gbc.readMem(0x9298));
        // C2 0085
        gbc.setState(0x1a32, 0x5e73, 0x63e0, 0x8739, 0x511f, 0x60d1, 0x0, 0x0);
        gbc.writeMem(0x1a32, { 0xc2, 0xdd, 0xd9 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x5e73, gbc.sp());
        EXPECT(0x1a35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0086
        gbc.setState(0x5592, 0xdb9c, 0x1fa0, 0xb945, 0xbf42, 0x1d8d, 0x0, 0x0);
        gbc.writeMem(0x5592, { 0xc2, 0x3d, 0xc0 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xdb9c, gbc.sp());
        EXPECT(0x5595, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0087
        gbc.setState(0x65d9, 0x8197, 0x4640, 0xc42c, 0xd08d, 0xe443, 0x1, 0x1);
        gbc.writeMem(0x65d9, { 0xc2, 0x9, 0x2a });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x8197, gbc.sp());
        EXPECT(0x2a09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0088
        gbc.setState(0xcab3, 0xc143, 0xdbf0, 0xc8b7, 0x727d, 0x4287, 0x1, 0x0);
        gbc.writeMem(0xcab3, { 0xc2, 0xbb, 0x27 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xc143, gbc.sp());
        EXPECT(0xcab6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xcab3));
        EXPECT(0xbb, gbc.readMem(0xcab4));
        EXPECT(0x27, gbc.readMem(0xcab5));
        // C2 0089
        gbc.setState(0xc2ef, 0xfe84, 0xb20, 0xe6c1, 0xd630, 0xf2c, 0x0, 0x1);
        gbc.writeMem(0xc2ef, { 0xc2, 0x4c, 0xa9 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xfe84, gbc.sp());
        EXPECT(0xa94c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xc2ef));
        EXPECT(0x4c, gbc.readMem(0xc2f0));
        EXPECT(0xa9, gbc.readMem(0xc2f1));
        // C2 008A
        gbc.setState(0x523b, 0xcff5, 0xd1b0, 0x1fd1, 0x103b, 0x2856, 0x1, 0x1);
        gbc.writeMem(0x523b, { 0xc2, 0xb9, 0x38 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xcff5, gbc.sp());
        EXPECT(0x523e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 008B
        gbc.setState(0xa7e8, 0x2203, 0xddc0, 0x5c08, 0x1973, 0xaa01, 0x1, 0x0);
        gbc.writeMem(0xa7e8, { 0xc2, 0x3, 0x3c });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x2203, gbc.sp());
        EXPECT(0xa7eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xa7e8));
        EXPECT(0x3, gbc.readMem(0xa7e9));
        EXPECT(0x3c, gbc.readMem(0xa7ea));
        // C2 008C
        gbc.setState(0xc531, 0x7471, 0xb7c0, 0xdb36, 0xa2f5, 0xf431, 0x0, 0x1);
        gbc.writeMem(0xc531, { 0xc2, 0xb3, 0xf5 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x7471, gbc.sp());
        EXPECT(0xc534, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xc531));
        EXPECT(0xb3, gbc.readMem(0xc532));
        EXPECT(0xf5, gbc.readMem(0xc533));
        // C2 008D
        gbc.setState(0x4594, 0x708a, 0x42c0, 0x8c49, 0xcf1b, 0x34d8, 0x1, 0x1);
        gbc.writeMem(0x4594, { 0xc2, 0x9a, 0x83 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x708a, gbc.sp());
        EXPECT(0x4597, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 008E
        gbc.setState(0x616a, 0x1d47, 0x7cc0, 0xcfb8, 0xe096, 0x9a4d, 0x0, 0x1);
        gbc.writeMem(0x616a, { 0xc2, 0x3c, 0x3a });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x1d47, gbc.sp());
        EXPECT(0x616d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 008F
        gbc.setState(0xb7c5, 0xbbf5, 0xcc10, 0xf58a, 0x3908, 0x720f, 0x0, 0x1);
        gbc.writeMem(0xb7c5, { 0xc2, 0xef, 0x2d });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xbbf5, gbc.sp());
        EXPECT(0x2def, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xb7c5));
        EXPECT(0xef, gbc.readMem(0xb7c6));
        EXPECT(0x2d, gbc.readMem(0xb7c7));
        // C2 0090
        gbc.setState(0xbe3b, 0x6626, 0xedb0, 0xbc8a, 0xc6c0, 0xb43d, 0x1, 0x0);
        gbc.writeMem(0xbe3b, { 0xc2, 0xfe, 0xd4 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x6626, gbc.sp());
        EXPECT(0xbe3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xbe3b));
        EXPECT(0xfe, gbc.readMem(0xbe3c));
        EXPECT(0xd4, gbc.readMem(0xbe3d));
        // C2 0091
        gbc.setState(0xd652, 0x60fe, 0xb500, 0xf437, 0xc46e, 0x6937, 0x0, 0x1);
        gbc.writeMem(0xd652, { 0xc2, 0x23, 0x66 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x60fe, gbc.sp());
        EXPECT(0x6623, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xd652));
        EXPECT(0x23, gbc.readMem(0xd653));
        EXPECT(0x66, gbc.readMem(0xd654));
        // C2 0092
        gbc.setState(0x7a9f, 0xac89, 0xd780, 0x17df, 0x72db, 0x9ab6, 0x1, 0x0);
        gbc.writeMem(0x7a9f, { 0xc2, 0x94, 0xa3 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xac89, gbc.sp());
        EXPECT(0x7aa2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0093
        gbc.setState(0xda21, 0x994e, 0xde0, 0xd426, 0x2aaf, 0x837e, 0x1, 0x0);
        gbc.writeMem(0xda21, { 0xc2, 0xd, 0xa1 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x994e, gbc.sp());
        EXPECT(0xda24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xda21));
        EXPECT(0xd, gbc.readMem(0xda22));
        EXPECT(0xa1, gbc.readMem(0xda23));
        // C2 0094
        gbc.setState(0x2ed2, 0x3057, 0xbca0, 0x767e, 0x7edf, 0xe68c, 0x0, 0x0);
        gbc.writeMem(0x2ed2, { 0xc2, 0x99, 0xf1 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x3057, gbc.sp());
        EXPECT(0x2ed5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0096
        gbc.setState(0xdc0d, 0x8add, 0xf090, 0xcf41, 0xd9be, 0x63b0, 0x0, 0x0);
        gbc.writeMem(0xdc0d, { 0xc2, 0xf1, 0x53 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x8add, gbc.sp());
        EXPECT(0xdc10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xdc0d));
        EXPECT(0xf1, gbc.readMem(0xdc0e));
        EXPECT(0x53, gbc.readMem(0xdc0f));
        // C2 0097
        gbc.setState(0xc575, 0xaf83, 0x8030, 0x8f96, 0x6770, 0x561f, 0x0, 0x1);
        gbc.writeMem(0xc575, { 0xc2, 0xb0, 0x9a });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xaf83, gbc.sp());
        EXPECT(0x9ab0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xc575));
        EXPECT(0xb0, gbc.readMem(0xc576));
        EXPECT(0x9a, gbc.readMem(0xc577));
        // C2 0098
        gbc.setState(0xa209, 0xf48e, 0x6d40, 0xa210, 0x555d, 0xe970, 0x0, 0x0);
        gbc.writeMem(0xa209, { 0xc2, 0x3a, 0x67 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xf48e, gbc.sp());
        EXPECT(0x673a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xa209));
        EXPECT(0x3a, gbc.readMem(0xa20a));
        EXPECT(0x67, gbc.readMem(0xa20b));
        // C2 009A
        gbc.setState(0x20f9, 0x4cc0, 0x16a0, 0x9ccf, 0x7542, 0xdc0b, 0x0, 0x1);
        gbc.writeMem(0x20f9, { 0xc2, 0x18, 0x7 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x4cc0, gbc.sp());
        EXPECT(0x20fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 009B
        gbc.setState(0xd6bc, 0x3a2b, 0xb330, 0xf4c2, 0x688a, 0x63ed, 0x0, 0x0);
        gbc.writeMem(0xd6bc, { 0xc2, 0x2a, 0x40 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x3a2b, gbc.sp());
        EXPECT(0x402a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xd6bc));
        EXPECT(0x2a, gbc.readMem(0xd6bd));
        EXPECT(0x40, gbc.readMem(0xd6be));
        // C2 009C
        gbc.setState(0xeb0d, 0x5488, 0xfa60, 0x9bb4, 0x8183, 0x7060, 0x0, 0x0);
        gbc.writeMem(0xeb0d, { 0xc2, 0xea, 0xa1 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x5488, gbc.sp());
        EXPECT(0xa1ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xeb0d));
        EXPECT(0xea, gbc.readMem(0xeb0e));
        EXPECT(0xa1, gbc.readMem(0xeb0f));
        // C2 009D
        gbc.setState(0xec3f, 0x1a37, 0x6340, 0xa0b2, 0x697, 0x11d8, 0x0, 0x1);
        gbc.writeMem(0xec3f, { 0xc2, 0x23, 0x37 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x1a37, gbc.sp());
        EXPECT(0x3723, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xec3f));
        EXPECT(0x23, gbc.readMem(0xec40));
        EXPECT(0x37, gbc.readMem(0xec41));
        // C2 009F
        gbc.setState(0xd722, 0xd59d, 0xeda0, 0xf552, 0xab17, 0x23bb, 0x1, 0x1);
        gbc.writeMem(0xd722, { 0xc2, 0xa4, 0xd4 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xd59d, gbc.sp());
        EXPECT(0xd725, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xd722));
        EXPECT(0xa4, gbc.readMem(0xd723));
        EXPECT(0xd4, gbc.readMem(0xd724));
        // C2 00A0
        gbc.setState(0xb8e, 0xcbad, 0x97f0, 0x9200, 0x9034, 0x9f2e, 0x0, 0x1);
        gbc.writeMem(0xb8e, { 0xc2, 0xdd, 0x43 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xcbad, gbc.sp());
        EXPECT(0xb91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 00A1
        gbc.setState(0xdfd3, 0x53b3, 0xec10, 0x161a, 0x2f42, 0x910, 0x0, 0x0);
        gbc.writeMem(0xdfd3, { 0xc2, 0x6b, 0xf });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x53b3, gbc.sp());
        EXPECT(0xf6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xdfd3));
        EXPECT(0x6b, gbc.readMem(0xdfd4));
        EXPECT(0xf, gbc.readMem(0xdfd5));
        // C2 00A2
        gbc.setState(0xcc62, 0x9ade, 0xa920, 0xbe7b, 0x9e4, 0x7014, 0x1, 0x1);
        gbc.writeMem(0xcc62, { 0xc2, 0x49, 0xb1 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x9ade, gbc.sp());
        EXPECT(0xb149, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xcc62));
        EXPECT(0x49, gbc.readMem(0xcc63));
        EXPECT(0xb1, gbc.readMem(0xcc64));
        // C2 00A3
        gbc.setState(0x94ed, 0x8091, 0xfba0, 0x84aa, 0x51a4, 0x2a63, 0x0, 0x0);
        gbc.writeMem(0x94ed, { 0xc2, 0x7a, 0xde });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x8091, gbc.sp());
        EXPECT(0x94f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x94ed));
        EXPECT(0x7a, gbc.readMem(0x94ee));
        EXPECT(0xde, gbc.readMem(0x94ef));
        // C2 00A4
        gbc.setState(0xb20, 0x60b3, 0x7580, 0x40f5, 0xcca5, 0x2242, 0x1, 0x1);
        gbc.writeMem(0xb20, { 0xc2, 0xc, 0x78 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x60b3, gbc.sp());
        EXPECT(0xb23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 00A5
        gbc.setState(0x3d1b, 0x4330, 0x6e90, 0x27bb, 0x83c0, 0xa09d, 0x0, 0x1);
        gbc.writeMem(0x3d1b, { 0xc2, 0xc1, 0x52 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x4330, gbc.sp());
        EXPECT(0x3d1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 00A6
        gbc.setState(0x9bde, 0xb5be, 0x2580, 0x7f56, 0xaf10, 0xbbe6, 0x0, 0x0);
        gbc.writeMem(0x9bde, { 0xc2, 0xb4, 0xb });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xb5be, gbc.sp());
        EXPECT(0x9be1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x9bde));
        EXPECT(0xb4, gbc.readMem(0x9bdf));
        EXPECT(0xb, gbc.readMem(0x9be0));
        // C2 00A7
        gbc.setState(0xb66e, 0xe853, 0xfa20, 0x5c75, 0xf989, 0x77a4, 0x1, 0x1);
        gbc.writeMem(0xb66e, { 0xc2, 0x97, 0x7 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xe853, gbc.sp());
        EXPECT(0x797, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xb66e));
        EXPECT(0x97, gbc.readMem(0xb66f));
        EXPECT(0x7, gbc.readMem(0xb670));
        // C2 00A8
        gbc.setState(0xeef1, 0xa83f, 0xab30, 0x28ff, 0x8623, 0x8afd, 0x0, 0x1);
        gbc.writeMem(0xeef1, { 0xc2, 0x93, 0xfd });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xa83f, gbc.sp());
        EXPECT(0xfd93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xeef1));
        EXPECT(0x93, gbc.readMem(0xeef2));
        EXPECT(0xfd, gbc.readMem(0xeef3));
        // C2 00A9
        gbc.setState(0x9cfd, 0x93e2, 0x2eb0, 0xf84e, 0xd4b5, 0x6105, 0x0, 0x1);
        gbc.writeMem(0x9cfd, { 0xc2, 0x5e, 0xee });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x93e2, gbc.sp());
        EXPECT(0x9d00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x9cfd));
        EXPECT(0x5e, gbc.readMem(0x9cfe));
        EXPECT(0xee, gbc.readMem(0x9cff));
        // C2 00AA
        gbc.setState(0xce7c, 0xefbb, 0x3740, 0x5bd3, 0xbe35, 0xd3a3, 0x0, 0x0);
        gbc.writeMem(0xce7c, { 0xc2, 0x35, 0x7 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xefbb, gbc.sp());
        EXPECT(0x735, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xce7c));
        EXPECT(0x35, gbc.readMem(0xce7d));
        EXPECT(0x7, gbc.readMem(0xce7e));
        // C2 00AB
        gbc.setState(0xbb0a, 0x8463, 0xe640, 0x1871, 0xe821, 0x82b2, 0x1, 0x0);
        gbc.writeMem(0xbb0a, { 0xc2, 0xb8, 0xf });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x8463, gbc.sp());
        EXPECT(0xfb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xbb0a));
        EXPECT(0xb8, gbc.readMem(0xbb0b));
        EXPECT(0xf, gbc.readMem(0xbb0c));
        // C2 00AC
        gbc.setState(0x1942, 0xc921, 0x21f0, 0x39f6, 0x1de3, 0x2d8, 0x1, 0x0);
        gbc.writeMem(0x1942, { 0xc2, 0xc4, 0x9a });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xc921, gbc.sp());
        EXPECT(0x1945, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 00AD
        gbc.setState(0xbc52, 0xcf84, 0xcdb0, 0xb457, 0xc200, 0xe35c, 0x1, 0x1);
        gbc.writeMem(0xbc52, { 0xc2, 0x33, 0x37 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xcf84, gbc.sp());
        EXPECT(0xbc55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xbc52));
        EXPECT(0x33, gbc.readMem(0xbc53));
        EXPECT(0x37, gbc.readMem(0xbc54));
        // C2 00AE
        gbc.setState(0x2132, 0x4dff, 0xa5b0, 0x3035, 0x514a, 0xa2a5, 0x1, 0x0);
        gbc.writeMem(0x2132, { 0xc2, 0xce, 0xad });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x4dff, gbc.sp());
        EXPECT(0x2135, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 00AF
        gbc.setState(0xbbc9, 0xba91, 0x4570, 0xdbab, 0xea50, 0x9755, 0x1, 0x0);
        gbc.writeMem(0xbbc9, { 0xc2, 0x8a, 0x80 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xba91, gbc.sp());
        EXPECT(0x808a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xbbc9));
        EXPECT(0x8a, gbc.readMem(0xbbca));
        EXPECT(0x80, gbc.readMem(0xbbcb));
        // C2 00B0
        gbc.setState(0x3e6f, 0xee7f, 0xb160, 0x230c, 0xb3b0, 0x9290, 0x1, 0x0);
        gbc.writeMem(0x3e6f, { 0xc2, 0x69, 0x44 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xee7f, gbc.sp());
        EXPECT(0x4469, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 00B1
        gbc.setState(0x7ea6, 0xd4ae, 0xded0, 0xe2c2, 0x519d, 0x566a, 0x0, 0x0);
        gbc.writeMem(0x7ea6, { 0xc2, 0x65, 0x96 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xd4ae, gbc.sp());
        EXPECT(0x7ea9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 00B2
        gbc.setState(0xc479, 0xd75f, 0x3160, 0x383b, 0xb0c4, 0xbdef, 0x0, 0x1);
        gbc.writeMem(0xc479, { 0xc2, 0xba, 0xe6 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xd75f, gbc.sp());
        EXPECT(0xe6ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xc479));
        EXPECT(0xba, gbc.readMem(0xc47a));
        EXPECT(0xe6, gbc.readMem(0xc47b));
        // C2 00B3
        gbc.setState(0x233e, 0xaee0, 0x7f50, 0x7c92, 0xf1bb, 0xc3, 0x1, 0x0);
        gbc.writeMem(0x233e, { 0xc2, 0x96, 0x7e });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xaee0, gbc.sp());
        EXPECT(0x7e96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 00B6
        gbc.setState(0xb97b, 0xf3cf, 0x87b0, 0x477, 0x3708, 0x4cb7, 0x0, 0x1);
        gbc.writeMem(0xb97b, { 0xc2, 0xf, 0x59 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xf3cf, gbc.sp());
        EXPECT(0xb97e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xb97b));
        EXPECT(0xf, gbc.readMem(0xb97c));
        EXPECT(0x59, gbc.readMem(0xb97d));
        // C2 00B7
        gbc.setState(0x803, 0x82dd, 0x8260, 0x2c77, 0x7309, 0x66e9, 0x0, 0x1);
        gbc.writeMem(0x803, { 0xc2, 0xb9, 0xf5 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x82dd, gbc.sp());
        EXPECT(0xf5b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 00B8
        gbc.setState(0x27a, 0x52b8, 0x73b0, 0x1593, 0xee0, 0x7d7f, 0x1, 0x0);
        gbc.writeMem(0x27a, { 0xc2, 0x11, 0xc7 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x52b8, gbc.sp());
        EXPECT(0x27d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 00B9
        gbc.setState(0x63dd, 0x32f2, 0x8c0, 0x69f, 0x9591, 0x7575, 0x1, 0x0);
        gbc.writeMem(0x63dd, { 0xc2, 0xa7, 0x93 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x32f2, gbc.sp());
        EXPECT(0x63e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 00BA
        gbc.setState(0x46f8, 0xe433, 0x2bf0, 0x954f, 0xc665, 0x5bad, 0x0, 0x0);
        gbc.writeMem(0x46f8, { 0xc2, 0x55, 0x83 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xe433, gbc.sp());
        EXPECT(0x46fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 00BB
        gbc.setState(0xcf13, 0xcce, 0x8c60, 0x65eb, 0x97d7, 0x7734, 0x0, 0x0);
        gbc.writeMem(0xcf13, { 0xc2, 0x4b, 0xb9 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xcce, gbc.sp());
        EXPECT(0xb94b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xcf13));
        EXPECT(0x4b, gbc.readMem(0xcf14));
        EXPECT(0xb9, gbc.readMem(0xcf15));
        // C2 00BC
        gbc.setState(0x6b20, 0xe195, 0xc310, 0x40e, 0x610f, 0x4670, 0x1, 0x0);
        gbc.writeMem(0x6b20, { 0xc2, 0x36, 0xb1 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xe195, gbc.sp());
        EXPECT(0xb136, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 00BD
        gbc.setState(0x40f7, 0x47cf, 0xa4a0, 0xb18d, 0xc9db, 0x701e, 0x0, 0x1);
        gbc.writeMem(0x40f7, { 0xc2, 0x6a, 0xb });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x47cf, gbc.sp());
        EXPECT(0x40fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 00BE
        gbc.setState(0xd7c2, 0x6511, 0xa540, 0xcba3, 0x7069, 0xbac2, 0x1, 0x0);
        gbc.writeMem(0xd7c2, { 0xc2, 0x5, 0x8a });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x6511, gbc.sp());
        EXPECT(0x8a05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xd7c2));
        EXPECT(0x5, gbc.readMem(0xd7c3));
        EXPECT(0x8a, gbc.readMem(0xd7c4));
        // C2 00BF
        gbc.setState(0x1f76, 0x551, 0xaeb0, 0xc6cd, 0x4f29, 0x42b1, 0x0, 0x0);
        gbc.writeMem(0x1f76, { 0xc2, 0x70, 0x1e });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x551, gbc.sp());
        EXPECT(0x1f79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 00C0
        gbc.setState(0xb9dc, 0x6386, 0xd0c0, 0xd646, 0x146b, 0x5bfe, 0x0, 0x1);
        gbc.writeMem(0xb9dc, { 0xc2, 0x5e, 0xf1 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x6386, gbc.sp());
        EXPECT(0xb9df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xb9dc));
        EXPECT(0x5e, gbc.readMem(0xb9dd));
        EXPECT(0xf1, gbc.readMem(0xb9de));
        // C2 00C1
        gbc.setState(0x517e, 0x5f66, 0x8a80, 0x17bc, 0x948f, 0x4d28, 0x1, 0x0);
        gbc.writeMem(0x517e, { 0xc2, 0x5b, 0x57 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x5f66, gbc.sp());
        EXPECT(0x5181, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 00C2
        gbc.setState(0xcb87, 0x6799, 0x43f0, 0x4ad1, 0xb523, 0x1d94, 0x0, 0x0);
        gbc.writeMem(0xcb87, { 0xc2, 0xf8, 0x3c });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x6799, gbc.sp());
        EXPECT(0xcb8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xcb87));
        EXPECT(0xf8, gbc.readMem(0xcb88));
        EXPECT(0x3c, gbc.readMem(0xcb89));
        // C2 00C3
        gbc.setState(0xe7be, 0xcf6a, 0xa0c0, 0x19aa, 0x69e6, 0xce85, 0x0, 0x0);
        gbc.writeMem(0xe7be, { 0xc2, 0x2f, 0xbf });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xcf6a, gbc.sp());
        EXPECT(0xe7c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xe7be));
        EXPECT(0x2f, gbc.readMem(0xe7bf));
        EXPECT(0xbf, gbc.readMem(0xe7c0));
        // C2 00C4
        gbc.setState(0x7621, 0x9618, 0xf200, 0x1fcf, 0x1f98, 0xb1cf, 0x1, 0x1);
        gbc.writeMem(0x7621, { 0xc2, 0xb4, 0x7c });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x9618, gbc.sp());
        EXPECT(0x7cb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 00C5
        gbc.setState(0x7779, 0x1399, 0xc790, 0x9000, 0xdd9c, 0xce96, 0x0, 0x0);
        gbc.writeMem(0x7779, { 0xc2, 0xb1, 0x3 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x1399, gbc.sp());
        EXPECT(0x777c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 00C6
        gbc.setState(0x39b5, 0x4ef5, 0x5a00, 0x404c, 0x31ed, 0x56f8, 0x1, 0x1);
        gbc.writeMem(0x39b5, { 0xc2, 0x8d, 0x7f });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x4ef5, gbc.sp());
        EXPECT(0x7f8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 00C7
        gbc.setState(0x9ec, 0x1a8d, 0xd300, 0xfab0, 0xa1f4, 0xf57a, 0x1, 0x0);
        gbc.writeMem(0x9ec, { 0xc2, 0x5d, 0x0 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x1a8d, gbc.sp());
        EXPECT(0x5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 00C8
        gbc.setState(0xaf7b, 0x9764, 0xfb0, 0x6bfd, 0x811a, 0x26bb, 0x0, 0x0);
        gbc.writeMem(0xaf7b, { 0xc2, 0x5f, 0xd1 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x9764, gbc.sp());
        EXPECT(0xaf7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xaf7b));
        EXPECT(0x5f, gbc.readMem(0xaf7c));
        EXPECT(0xd1, gbc.readMem(0xaf7d));
        // C2 00C9
        gbc.setState(0xbb83, 0xe045, 0xd960, 0x20c1, 0xcf94, 0x43d0, 0x1, 0x1);
        gbc.writeMem(0xbb83, { 0xc2, 0x38, 0x16 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xe045, gbc.sp());
        EXPECT(0x1638, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xbb83));
        EXPECT(0x38, gbc.readMem(0xbb84));
        EXPECT(0x16, gbc.readMem(0xbb85));
        // C2 00CA
        gbc.setState(0xcfd, 0x804f, 0xf050, 0x44d9, 0xc54a, 0x7c8c, 0x1, 0x0);
        gbc.writeMem(0xcfd, { 0xc2, 0xa6, 0x5e });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x804f, gbc.sp());
        EXPECT(0x5ea6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 00CB
        gbc.setState(0xaa00, 0x36b5, 0xd000, 0xf8f7, 0xdb71, 0x6660, 0x1, 0x0);
        gbc.writeMem(0xaa00, { 0xc2, 0x15, 0x59 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x36b5, gbc.sp());
        EXPECT(0x5915, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xaa00));
        EXPECT(0x15, gbc.readMem(0xaa01));
        EXPECT(0x59, gbc.readMem(0xaa02));
        // C2 00CC
        gbc.setState(0xdc3a, 0xc9c1, 0x71c0, 0x8fa1, 0xfbf5, 0x1f82, 0x0, 0x1);
        gbc.writeMem(0xdc3a, { 0xc2, 0xd8, 0x56 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xc9c1, gbc.sp());
        EXPECT(0xdc3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xdc3a));
        EXPECT(0xd8, gbc.readMem(0xdc3b));
        EXPECT(0x56, gbc.readMem(0xdc3c));
        // C2 00CD
        gbc.setState(0xba4a, 0xfa34, 0xa2e0, 0x8a86, 0x7d41, 0xb4b4, 0x1, 0x1);
        gbc.writeMem(0xba4a, { 0xc2, 0x70, 0x61 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xfa34, gbc.sp());
        EXPECT(0xba4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xba4a));
        EXPECT(0x70, gbc.readMem(0xba4b));
        EXPECT(0x61, gbc.readMem(0xba4c));
        // C2 00CE
        gbc.setState(0xb2df, 0x85f8, 0xdf60, 0x4392, 0xf3cd, 0x6579, 0x0, 0x0);
        gbc.writeMem(0xb2df, { 0xc2, 0xed, 0xea });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x85f8, gbc.sp());
        EXPECT(0xeaed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xb2df));
        EXPECT(0xed, gbc.readMem(0xb2e0));
        EXPECT(0xea, gbc.readMem(0xb2e1));
        // C2 00CF
        gbc.setState(0xefa2, 0x7067, 0xc960, 0xbace, 0x44d9, 0xd23f, 0x1, 0x0);
        gbc.writeMem(0xefa2, { 0xc2, 0x38, 0x1b });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x7067, gbc.sp());
        EXPECT(0x1b38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xefa2));
        EXPECT(0x38, gbc.readMem(0xefa3));
        EXPECT(0x1b, gbc.readMem(0xefa4));
        // C2 00D0
        gbc.setState(0x6c98, 0xefa, 0xd30, 0xc613, 0x8ae, 0x3518, 0x0, 0x1);
        gbc.writeMem(0x6c98, { 0xc2, 0xae, 0x53 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xefa, gbc.sp());
        EXPECT(0x53ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 00D2
        gbc.setState(0xdfdc, 0xcf33, 0x4b00, 0xd34a, 0x357, 0xf1d1, 0x1, 0x1);
        gbc.writeMem(0xdfdc, { 0xc2, 0x14, 0xb8 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xcf33, gbc.sp());
        EXPECT(0xb814, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xdfdc));
        EXPECT(0x14, gbc.readMem(0xdfdd));
        EXPECT(0xb8, gbc.readMem(0xdfde));
        // C2 00D3
        gbc.setState(0xac39, 0x3909, 0x2da0, 0x2149, 0x1de8, 0xa5ef, 0x1, 0x1);
        gbc.writeMem(0xac39, { 0xc2, 0x47, 0x91 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x3909, gbc.sp());
        EXPECT(0xac3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xac39));
        EXPECT(0x47, gbc.readMem(0xac3a));
        EXPECT(0x91, gbc.readMem(0xac3b));
        // C2 00D5
        gbc.setState(0xc10b, 0xb0ad, 0xd960, 0x54f2, 0x542a, 0xf1b7, 0x0, 0x1);
        gbc.writeMem(0xc10b, { 0xc2, 0x8b, 0x39 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xb0ad, gbc.sp());
        EXPECT(0x398b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xc10b));
        EXPECT(0x8b, gbc.readMem(0xc10c));
        EXPECT(0x39, gbc.readMem(0xc10d));
        // C2 00D6
        gbc.setState(0x3a4b, 0x350e, 0x3af0, 0xc4d9, 0x3701, 0x3370, 0x0, 0x0);
        gbc.writeMem(0x3a4b, { 0xc2, 0x1a, 0xc3 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x350e, gbc.sp());
        EXPECT(0x3a4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 00D8
        gbc.setState(0xbe6, 0x7179, 0xa9b0, 0xea7f, 0x1e7d, 0x6f19, 0x1, 0x1);
        gbc.writeMem(0xbe6, { 0xc2, 0x46, 0x10 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x7179, gbc.sp());
        EXPECT(0xbe9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 00D9
        gbc.setState(0x695d, 0x100a, 0x39a0, 0x2bd7, 0x276f, 0x7e26, 0x1, 0x1);
        gbc.writeMem(0x695d, { 0xc2, 0x54, 0xc6 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x100a, gbc.sp());
        EXPECT(0x6960, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 00DA
        gbc.setState(0x28ff, 0x5313, 0x4f50, 0xd66e, 0x87c6, 0x28b8, 0x0, 0x1);
        gbc.writeMem(0x28ff, { 0xc2, 0x1e, 0xe0 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x5313, gbc.sp());
        EXPECT(0xe01e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 00DB
        gbc.setState(0x6222, 0xaf78, 0xdb30, 0x3452, 0x57, 0x8d53, 0x0, 0x1);
        gbc.writeMem(0x6222, { 0xc2, 0xa9, 0x1d });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xaf78, gbc.sp());
        EXPECT(0x1da9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 00DC
        gbc.setState(0x9943, 0x36d8, 0x5770, 0x1a06, 0x9df9, 0xc64a, 0x0, 0x1);
        gbc.writeMem(0x9943, { 0xc2, 0x6b, 0x9d });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x36d8, gbc.sp());
        EXPECT(0x9d6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x9943));
        EXPECT(0x6b, gbc.readMem(0x9944));
        EXPECT(0x9d, gbc.readMem(0x9945));
        // C2 00DD
        gbc.setState(0x711d, 0xb377, 0x9310, 0x81bd, 0x9e5b, 0x3cd2, 0x0, 0x0);
        gbc.writeMem(0x711d, { 0xc2, 0xe2, 0xd2 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xb377, gbc.sp());
        EXPECT(0xd2e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 00DE
        gbc.setState(0x9c7d, 0x39de, 0x5510, 0xcc92, 0xe89c, 0xadc7, 0x0, 0x0);
        gbc.writeMem(0x9c7d, { 0xc2, 0x3e, 0x1b });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x39de, gbc.sp());
        EXPECT(0x1b3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x9c7d));
        EXPECT(0x3e, gbc.readMem(0x9c7e));
        EXPECT(0x1b, gbc.readMem(0x9c7f));
        // C2 00E0
        gbc.setState(0x46f8, 0x3e23, 0x3050, 0xbb16, 0x65a8, 0x45bb, 0x0, 0x0);
        gbc.writeMem(0x46f8, { 0xc2, 0x55, 0x83 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x3e23, gbc.sp());
        EXPECT(0x8355, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 00E1
        gbc.setState(0x5e1a, 0x8d09, 0x50c0, 0xd2c1, 0x4471, 0xd227, 0x0, 0x0);
        gbc.writeMem(0x5e1a, { 0xc2, 0xb7, 0x77 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x8d09, gbc.sp());
        EXPECT(0x5e1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 00E2
        gbc.setState(0xb591, 0x442f, 0xfe0, 0xe33, 0xa393, 0x43ae, 0x1, 0x1);
        gbc.writeMem(0xb591, { 0xc2, 0xf6, 0xd3 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x442f, gbc.sp());
        EXPECT(0xb594, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xb591));
        EXPECT(0xf6, gbc.readMem(0xb592));
        EXPECT(0xd3, gbc.readMem(0xb593));
        // C2 00E3
        gbc.setState(0x7e38, 0x5bfe, 0xe870, 0xbfe3, 0xda61, 0xe57a, 0x1, 0x1);
        gbc.writeMem(0x7e38, { 0xc2, 0xe4, 0x54 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x5bfe, gbc.sp());
        EXPECT(0x54e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 00E4
        gbc.setState(0xb3ad, 0x2de, 0x9050, 0xf667, 0x9f0d, 0x7339, 0x1, 0x1);
        gbc.writeMem(0xb3ad, { 0xc2, 0xa1, 0xe2 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x2de, gbc.sp());
        EXPECT(0xe2a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xb3ad));
        EXPECT(0xa1, gbc.readMem(0xb3ae));
        EXPECT(0xe2, gbc.readMem(0xb3af));
        // C2 00E5
        gbc.setState(0x48f9, 0x1f95, 0xc780, 0xaded, 0x6451, 0x4081, 0x0, 0x1);
        gbc.writeMem(0x48f9, { 0xc2, 0x10, 0x2a });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x1f95, gbc.sp());
        EXPECT(0x48fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 00E6
        gbc.setState(0xd4fd, 0xc6c7, 0x590, 0xa085, 0x28ac, 0xcc77, 0x0, 0x1);
        gbc.writeMem(0xd4fd, { 0xc2, 0x46, 0x53 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xc6c7, gbc.sp());
        EXPECT(0xd500, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xd4fd));
        EXPECT(0x46, gbc.readMem(0xd4fe));
        EXPECT(0x53, gbc.readMem(0xd4ff));
        // C2 00E7
        gbc.setState(0x5751, 0x3137, 0x92f0, 0xf46d, 0x2001, 0xc6ad, 0x0, 0x0);
        gbc.writeMem(0x5751, { 0xc2, 0x63, 0xeb });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x3137, gbc.sp());
        EXPECT(0x5754, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 00E8
        gbc.setState(0x3523, 0x60f3, 0x44a0, 0x73dc, 0x9154, 0xc579, 0x1, 0x1);
        gbc.writeMem(0x3523, { 0xc2, 0xca, 0x3a });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x60f3, gbc.sp());
        EXPECT(0x3526, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 00EA
        gbc.setState(0x10d4, 0xcf7, 0xbdf0, 0x4a36, 0x458e, 0xca8b, 0x1, 0x0);
        gbc.writeMem(0x10d4, { 0xc2, 0x75, 0x48 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xcf7, gbc.sp());
        EXPECT(0x10d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 00EB
        gbc.setState(0xd37a, 0x5d9d, 0x7350, 0x41a7, 0xaeb, 0xa802, 0x0, 0x0);
        gbc.writeMem(0xd37a, { 0xc2, 0xb2, 0x22 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x5d9d, gbc.sp());
        EXPECT(0x22b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xd37a));
        EXPECT(0xb2, gbc.readMem(0xd37b));
        EXPECT(0x22, gbc.readMem(0xd37c));
        // C2 00EC
        gbc.setState(0x6239, 0xdd87, 0xf610, 0xd4f4, 0xf2f9, 0x9ef1, 0x1, 0x0);
        gbc.writeMem(0x6239, { 0xc2, 0x35, 0x78 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xdd87, gbc.sp());
        EXPECT(0x7835, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 00EF
        gbc.setState(0xed69, 0x87e7, 0xefc0, 0xc284, 0x4c38, 0x804d, 0x1, 0x1);
        gbc.writeMem(0xed69, { 0xc2, 0x79, 0xcd });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x87e7, gbc.sp());
        EXPECT(0xed6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xed69));
        EXPECT(0x79, gbc.readMem(0xed6a));
        EXPECT(0xcd, gbc.readMem(0xed6b));
        // C2 00F0
        gbc.setState(0x1af5, 0xa1, 0x7160, 0x1842, 0x3f8a, 0xd29e, 0x0, 0x0);
        gbc.writeMem(0x1af5, { 0xc2, 0x6b, 0xfc });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xa1, gbc.sp());
        EXPECT(0xfc6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 00F1
        gbc.setState(0xec51, 0x89ee, 0x2a40, 0x4366, 0xbee6, 0x9d9f, 0x1, 0x1);
        gbc.writeMem(0xec51, { 0xc2, 0x7a, 0x5f });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x89ee, gbc.sp());
        EXPECT(0x5f7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xec51));
        EXPECT(0x7a, gbc.readMem(0xec52));
        EXPECT(0x5f, gbc.readMem(0xec53));
        // C2 00F2
        gbc.setState(0x4814, 0x5102, 0x6af0, 0xa597, 0xe1c7, 0xe65b, 0x1, 0x0);
        gbc.writeMem(0x4814, { 0xc2, 0x9, 0xf5 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x5102, gbc.sp());
        EXPECT(0x4817, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 00F3
        gbc.setState(0xaa8a, 0xe89d, 0xa90, 0xc963, 0x332f, 0x2255, 0x1, 0x0);
        gbc.writeMem(0xaa8a, { 0xc2, 0xb8, 0x24 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xe89d, gbc.sp());
        EXPECT(0xaa8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xaa8a));
        EXPECT(0xb8, gbc.readMem(0xaa8b));
        EXPECT(0x24, gbc.readMem(0xaa8c));
        // C2 00F4
        gbc.setState(0xba08, 0xd97, 0xe470, 0xd421, 0xc6e2, 0x4354, 0x1, 0x1);
        gbc.writeMem(0xba08, { 0xc2, 0x15, 0xce });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xd97, gbc.sp());
        EXPECT(0xce15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xba08));
        EXPECT(0x15, gbc.readMem(0xba09));
        EXPECT(0xce, gbc.readMem(0xba0a));
        // C2 00F5
        gbc.setState(0xe03f, 0x90bd, 0xa620, 0x52c9, 0x7204, 0x46cf, 0x0, 0x1);
        gbc.writeMem(0xe03f, { 0xc2, 0x46, 0xd1 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x90bd, gbc.sp());
        EXPECT(0xd146, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xe03f));
        EXPECT(0x46, gbc.readMem(0xe040));
        EXPECT(0xd1, gbc.readMem(0xe041));
        // C2 00F6
        gbc.setState(0xa6a8, 0xf78f, 0xa900, 0xf386, 0x2e77, 0xc612, 0x1, 0x1);
        gbc.writeMem(0xa6a8, { 0xc2, 0xcc, 0xcd });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xf78f, gbc.sp());
        EXPECT(0xcdcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xa6a8));
        EXPECT(0xcc, gbc.readMem(0xa6a9));
        EXPECT(0xcd, gbc.readMem(0xa6aa));
        // C2 00F7
        gbc.setState(0x1474, 0x487b, 0x67c0, 0xeba1, 0xb356, 0xb80, 0x1, 0x1);
        gbc.writeMem(0x1474, { 0xc2, 0x66, 0x7a });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x487b, gbc.sp());
        EXPECT(0x1477, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 00F8
        gbc.setState(0xc993, 0x1644, 0x7ce0, 0xe08, 0xf3ad, 0x2d91, 0x0, 0x1);
        gbc.writeMem(0xc993, { 0xc2, 0xf5, 0xe2 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x1644, gbc.sp());
        EXPECT(0xc996, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xc993));
        EXPECT(0xf5, gbc.readMem(0xc994));
        EXPECT(0xe2, gbc.readMem(0xc995));
        // C2 00F9
        gbc.setState(0x2d3c, 0xecf8, 0xd6a0, 0xa765, 0x541, 0xa7ac, 0x0, 0x0);
        gbc.writeMem(0x2d3c, { 0xc2, 0xe, 0x21 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xecf8, gbc.sp());
        EXPECT(0x2d3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 00FA
        gbc.setState(0x12cd, 0x63b5, 0x6f00, 0xe577, 0x7a83, 0x9a85, 0x1, 0x1);
        gbc.writeMem(0x12cd, { 0xc2, 0xe1, 0xb0 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x63b5, gbc.sp());
        EXPECT(0xb0e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 00FB
        gbc.setState(0x1cd0, 0x27ce, 0x6770, 0x9774, 0xa707, 0xc637, 0x0, 0x1);
        gbc.writeMem(0x1cd0, { 0xc2, 0x9d, 0x8 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x27ce, gbc.sp());
        EXPECT(0x89d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 00FC
        gbc.setState(0xa749, 0x9cc9, 0xc210, 0xd013, 0xaf93, 0xdc8e, 0x1, 0x1);
        gbc.writeMem(0xa749, { 0xc2, 0x98, 0x12 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x9cc9, gbc.sp());
        EXPECT(0x1298, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xa749));
        EXPECT(0x98, gbc.readMem(0xa74a));
        EXPECT(0x12, gbc.readMem(0xa74b));
        // C2 00FD
        gbc.setState(0x99b6, 0x6e75, 0x46b0, 0x9016, 0xdfc2, 0xc3fd, 0x1, 0x0);
        gbc.writeMem(0x99b6, { 0xc2, 0xe3, 0xd7 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x6e75, gbc.sp());
        EXPECT(0x99b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x99b6));
        EXPECT(0xe3, gbc.readMem(0x99b7));
        EXPECT(0xd7, gbc.readMem(0x99b8));
        // C2 00FE
        gbc.setState(0xb430, 0x1f6e, 0xf460, 0x96af, 0x1ab6, 0x70cf, 0x0, 0x0);
        gbc.writeMem(0xb430, { 0xc2, 0x34, 0xb4 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x1f6e, gbc.sp());
        EXPECT(0xb434, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xb430));
        EXPECT(0x34, gbc.readMem(0xb431));
        EXPECT(0xb4, gbc.readMem(0xb432));
        // C2 00FF
        gbc.setState(0x4a29, 0x2b55, 0x1060, 0x733b, 0xd2bb, 0xba64, 0x1, 0x1);
        gbc.writeMem(0x4a29, { 0xc2, 0xbc, 0xa7 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x2b55, gbc.sp());
        EXPECT(0xa7bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0100
        gbc.setState(0x4620, 0x8c6a, 0xc490, 0x7613, 0x6926, 0x7fc9, 0x0, 0x1);
        gbc.writeMem(0x4620, { 0xc2, 0x83, 0x8e });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x8c6a, gbc.sp());
        EXPECT(0x4623, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0101
        gbc.setState(0x59c5, 0xfd20, 0xe8a0, 0xcf08, 0xf62a, 0xdcda, 0x1, 0x1);
        gbc.writeMem(0x59c5, { 0xc2, 0x80, 0x90 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xfd20, gbc.sp());
        EXPECT(0x59c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0102
        gbc.setState(0x5896, 0x2752, 0x3b00, 0x5cf3, 0x8147, 0x49f9, 0x0, 0x0);
        gbc.writeMem(0x5896, { 0xc2, 0x92, 0xe5 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x2752, gbc.sp());
        EXPECT(0xe592, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0103
        gbc.setState(0xd446, 0x6307, 0xe760, 0xd17a, 0x7c92, 0xffb5, 0x0, 0x0);
        gbc.writeMem(0xd446, { 0xc2, 0xff, 0xf4 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x6307, gbc.sp());
        EXPECT(0xf4ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xd446));
        EXPECT(0xff, gbc.readMem(0xd447));
        EXPECT(0xf4, gbc.readMem(0xd448));
        // C2 0104
        gbc.setState(0x17a7, 0xa737, 0xc490, 0xc648, 0x2244, 0xf13b, 0x0, 0x1);
        gbc.writeMem(0x17a7, { 0xc2, 0xc8, 0xd });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xa737, gbc.sp());
        EXPECT(0x17aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0105
        gbc.setState(0x9b1b, 0x4a87, 0x3530, 0x4ebb, 0xb4cb, 0xfe3e, 0x0, 0x0);
        gbc.writeMem(0x9b1b, { 0xc2, 0x55, 0x39 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x4a87, gbc.sp());
        EXPECT(0x3955, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x9b1b));
        EXPECT(0x55, gbc.readMem(0x9b1c));
        EXPECT(0x39, gbc.readMem(0x9b1d));
        // C2 0106
        gbc.setState(0x497b, 0xff76, 0xbda0, 0x9c87, 0x4c8f, 0x3d1, 0x0, 0x1);
        gbc.writeMem(0x497b, { 0xc2, 0xa6, 0x13 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xff76, gbc.sp());
        EXPECT(0x497e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0107
        gbc.setState(0x9f2f, 0x9c4a, 0x580, 0x16a3, 0x9a1f, 0xddc1, 0x0, 0x0);
        gbc.writeMem(0x9f2f, { 0xc2, 0x71, 0x16 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x9c4a, gbc.sp());
        EXPECT(0x9f32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x9f2f));
        EXPECT(0x71, gbc.readMem(0x9f30));
        EXPECT(0x16, gbc.readMem(0x9f31));
        // C2 0108
        gbc.setState(0xc00b, 0x6570, 0x6b50, 0x9072, 0x17a8, 0x57da, 0x0, 0x1);
        gbc.writeMem(0xc00b, { 0xc2, 0x38, 0xcf });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x6570, gbc.sp());
        EXPECT(0xcf38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xc00b));
        EXPECT(0x38, gbc.readMem(0xc00c));
        EXPECT(0xcf, gbc.readMem(0xc00d));
        // C2 0109
        gbc.setState(0x5b1d, 0x83a9, 0xc540, 0x254e, 0xba17, 0x624e, 0x0, 0x0);
        gbc.writeMem(0x5b1d, { 0xc2, 0xc2, 0x70 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x83a9, gbc.sp());
        EXPECT(0x70c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 010A
        gbc.setState(0xdd5c, 0xe922, 0xc290, 0x4179, 0xd76, 0x3cd0, 0x0, 0x1);
        gbc.writeMem(0xdd5c, { 0xc2, 0x29, 0xd });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xe922, gbc.sp());
        EXPECT(0xdd5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xdd5c));
        EXPECT(0x29, gbc.readMem(0xdd5d));
        EXPECT(0xd, gbc.readMem(0xdd5e));
        // C2 010B
        gbc.setState(0x6384, 0x8494, 0xa340, 0x8bf8, 0x4150, 0x5047, 0x0, 0x1);
        gbc.writeMem(0x6384, { 0xc2, 0xef, 0x3b });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x8494, gbc.sp());
        EXPECT(0x3bef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 010C
        gbc.setState(0x3ebb, 0x9fef, 0x24f0, 0x81aa, 0x3515, 0x3e13, 0x0, 0x1);
        gbc.writeMem(0x3ebb, { 0xc2, 0x6e, 0xeb });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x9fef, gbc.sp());
        EXPECT(0x3ebe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 010D
        gbc.setState(0x8aa1, 0x10a5, 0x43a0, 0xe86f, 0x2d87, 0x1841, 0x0, 0x1);
        gbc.writeMem(0x8aa1, { 0xc2, 0x16, 0x17 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x10a5, gbc.sp());
        EXPECT(0x8aa4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x8aa1));
        EXPECT(0x16, gbc.readMem(0x8aa2));
        EXPECT(0x17, gbc.readMem(0x8aa3));
        // C2 010E
        gbc.setState(0xe03a, 0xce03, 0xc2a0, 0x6783, 0xa1fc, 0x419f, 0x0, 0x0);
        gbc.writeMem(0xe03a, { 0xc2, 0x3b, 0x15 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xce03, gbc.sp());
        EXPECT(0xe03d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xe03a));
        EXPECT(0x3b, gbc.readMem(0xe03b));
        EXPECT(0x15, gbc.readMem(0xe03c));
        // C2 010F
        gbc.setState(0xc79a, 0xaefc, 0xa0f0, 0x597, 0xa8e4, 0xffee, 0x1, 0x1);
        gbc.writeMem(0xc79a, { 0xc2, 0x8c, 0x62 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xaefc, gbc.sp());
        EXPECT(0xc79d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xc79a));
        EXPECT(0x8c, gbc.readMem(0xc79b));
        EXPECT(0x62, gbc.readMem(0xc79c));
        // C2 0110
        gbc.setState(0x437b, 0x51c8, 0x7800, 0x3b8e, 0x742c, 0x3778, 0x0, 0x1);
        gbc.writeMem(0x437b, { 0xc2, 0x18, 0x0 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x51c8, gbc.sp());
        EXPECT(0x18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0111
        gbc.setState(0x35f2, 0xd85c, 0xf970, 0x5ea4, 0x191, 0x45a, 0x0, 0x1);
        gbc.writeMem(0x35f2, { 0xc2, 0xca, 0xaa });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xd85c, gbc.sp());
        EXPECT(0xaaca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0112
        gbc.setState(0xd35b, 0x2332, 0x1660, 0x8265, 0xed0f, 0x487, 0x1, 0x1);
        gbc.writeMem(0xd35b, { 0xc2, 0x7d, 0xa3 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x2332, gbc.sp());
        EXPECT(0xa37d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xd35b));
        EXPECT(0x7d, gbc.readMem(0xd35c));
        EXPECT(0xa3, gbc.readMem(0xd35d));
        // C2 0113
        gbc.setState(0x59f, 0xc122, 0xb560, 0x5ac9, 0x581a, 0xe96, 0x1, 0x1);
        gbc.writeMem(0x59f, { 0xc2, 0x45, 0x37 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xc122, gbc.sp());
        EXPECT(0x3745, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0114
        gbc.setState(0xe567, 0x9d9e, 0x2cd0, 0x9ca, 0x28ff, 0xc456, 0x1, 0x1);
        gbc.writeMem(0xe567, { 0xc2, 0xcb, 0xbb });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x9d9e, gbc.sp());
        EXPECT(0xe56a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xe567));
        EXPECT(0xcb, gbc.readMem(0xe568));
        EXPECT(0xbb, gbc.readMem(0xe569));
        // C2 0115
        gbc.setState(0xcf4, 0x5b32, 0x4940, 0x7c01, 0x4e7f, 0xc255, 0x0, 0x0);
        gbc.writeMem(0xcf4, { 0xc2, 0x97, 0xc });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x5b32, gbc.sp());
        EXPECT(0xc97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0116
        gbc.setState(0x70b3, 0xf979, 0xe5f0, 0x632c, 0x3025, 0x64e, 0x1, 0x0);
        gbc.writeMem(0x70b3, { 0xc2, 0xd6, 0x95 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xf979, gbc.sp());
        EXPECT(0x70b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0117
        gbc.setState(0xd20e, 0x50c0, 0x7190, 0x4910, 0xfbcd, 0xd0cb, 0x0, 0x1);
        gbc.writeMem(0xd20e, { 0xc2, 0x11, 0x18 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x50c0, gbc.sp());
        EXPECT(0xd211, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xd20e));
        EXPECT(0x11, gbc.readMem(0xd20f));
        EXPECT(0x18, gbc.readMem(0xd210));
        // C2 0118
        gbc.setState(0x800c, 0x68dc, 0x3e0, 0x98c3, 0x92bc, 0x2bb3, 0x1, 0x1);
        gbc.writeMem(0x800c, { 0xc2, 0xce, 0xab });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x68dc, gbc.sp());
        EXPECT(0x800f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x800c));
        EXPECT(0xce, gbc.readMem(0x800d));
        EXPECT(0xab, gbc.readMem(0x800e));
        // C2 0119
        gbc.setState(0x5cf2, 0x76c, 0x1c0, 0x1866, 0x4ceb, 0xb057, 0x0, 0x1);
        gbc.writeMem(0x5cf2, { 0xc2, 0x36, 0x76 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x76c, gbc.sp());
        EXPECT(0x5cf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 011A
        gbc.setState(0x4292, 0xec58, 0xc060, 0xb408, 0xec69, 0x9a60, 0x1, 0x0);
        gbc.writeMem(0x4292, { 0xc2, 0xac, 0x4e });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xec58, gbc.sp());
        EXPECT(0x4eac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 011B
        gbc.setState(0x698e, 0xa521, 0x8a70, 0x543d, 0x67, 0xaf14, 0x0, 0x0);
        gbc.writeMem(0x698e, { 0xc2, 0xb8, 0xf });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xa521, gbc.sp());
        EXPECT(0xfb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 011C
        gbc.setState(0xe768, 0xd6c1, 0x44a0, 0xac6e, 0x17c, 0xf529, 0x0, 0x0);
        gbc.writeMem(0xe768, { 0xc2, 0x66, 0x94 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xd6c1, gbc.sp());
        EXPECT(0xe76b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xe768));
        EXPECT(0x66, gbc.readMem(0xe769));
        EXPECT(0x94, gbc.readMem(0xe76a));
        // C2 011E
        gbc.setState(0xf3d, 0xf31d, 0xf120, 0x2ca8, 0xf04b, 0xa7d3, 0x1, 0x1);
        gbc.writeMem(0xf3d, { 0xc2, 0x38, 0x1f });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xf31d, gbc.sp());
        EXPECT(0x1f38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 011F
        gbc.setState(0x5426, 0x53ce, 0xb0f0, 0xb4d7, 0xac8d, 0x1447, 0x1, 0x1);
        gbc.writeMem(0x5426, { 0xc2, 0x1f, 0xea });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x53ce, gbc.sp());
        EXPECT(0x5429, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0120
        gbc.setState(0x101d, 0xe392, 0x6790, 0x835e, 0x3f15, 0xc57a, 0x0, 0x0);
        gbc.writeMem(0x101d, { 0xc2, 0x19, 0xe4 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xe392, gbc.sp());
        EXPECT(0x1020, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0121
        gbc.setState(0x8916, 0xb36b, 0x1da0, 0xadb8, 0x761e, 0xcf99, 0x0, 0x0);
        gbc.writeMem(0x8916, { 0xc2, 0x8d, 0x13 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xb36b, gbc.sp());
        EXPECT(0x8919, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x8916));
        EXPECT(0x8d, gbc.readMem(0x8917));
        EXPECT(0x13, gbc.readMem(0x8918));
        // C2 0122
        gbc.setState(0x61da, 0x3309, 0x1d40, 0x4a96, 0x885d, 0xba56, 0x0, 0x0);
        gbc.writeMem(0x61da, { 0xc2, 0xa3, 0xc8 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x3309, gbc.sp());
        EXPECT(0xc8a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0123
        gbc.setState(0x5a2f, 0xcdfc, 0x5eb0, 0x56d, 0x9088, 0x4be1, 0x1, 0x0);
        gbc.writeMem(0x5a2f, { 0xc2, 0x3c, 0x8d });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xcdfc, gbc.sp());
        EXPECT(0x5a32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0124
        gbc.setState(0x4f82, 0x9688, 0x8090, 0xf4f4, 0x4f7e, 0x408, 0x1, 0x0);
        gbc.writeMem(0x4f82, { 0xc2, 0xc3, 0xb2 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x9688, gbc.sp());
        EXPECT(0x4f85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0125
        gbc.setState(0xa25, 0x7674, 0x4dc0, 0x4581, 0xee23, 0x9e07, 0x1, 0x0);
        gbc.writeMem(0xa25, { 0xc2, 0x53, 0x1e });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x7674, gbc.sp());
        EXPECT(0xa28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0126
        gbc.setState(0x46b2, 0x52ed, 0xe690, 0x2c24, 0xce1b, 0x7599, 0x1, 0x1);
        gbc.writeMem(0x46b2, { 0xc2, 0xeb, 0x8f });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x52ed, gbc.sp());
        EXPECT(0x46b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0127
        gbc.setState(0x2588, 0x63fa, 0xcee0, 0x3bc8, 0x2ad6, 0x8eb8, 0x0, 0x0);
        gbc.writeMem(0x2588, { 0xc2, 0x2a, 0xa6 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x63fa, gbc.sp());
        EXPECT(0x258b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0128
        gbc.setState(0x788f, 0x5a6c, 0x6ec0, 0xa304, 0x1b4c, 0xcb0b, 0x0, 0x0);
        gbc.writeMem(0x788f, { 0xc2, 0x41, 0x18 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x5a6c, gbc.sp());
        EXPECT(0x7892, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0129
        gbc.setState(0x88f8, 0x495d, 0x6990, 0x6ee4, 0x49af, 0x80be, 0x0, 0x0);
        gbc.writeMem(0x88f8, { 0xc2, 0xd5, 0x52 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x495d, gbc.sp());
        EXPECT(0x88fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x88f8));
        EXPECT(0xd5, gbc.readMem(0x88f9));
        EXPECT(0x52, gbc.readMem(0x88fa));
        // C2 012A
        gbc.setState(0xc568, 0x51ea, 0x68a0, 0xf4e4, 0x6f96, 0x79c7, 0x0, 0x0);
        gbc.writeMem(0xc568, { 0xc2, 0xcd, 0x30 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x51ea, gbc.sp());
        EXPECT(0xc56b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xc568));
        EXPECT(0xcd, gbc.readMem(0xc569));
        EXPECT(0x30, gbc.readMem(0xc56a));
        // C2 012B
        gbc.setState(0xa795, 0x279d, 0xa760, 0x4734, 0x5f47, 0x9b7d, 0x0, 0x1);
        gbc.writeMem(0xa795, { 0xc2, 0x8d, 0x5e });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x279d, gbc.sp());
        EXPECT(0x5e8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xa795));
        EXPECT(0x8d, gbc.readMem(0xa796));
        EXPECT(0x5e, gbc.readMem(0xa797));
        // C2 012C
        gbc.setState(0xe33b, 0x2ae1, 0x16d0, 0x59ce, 0x2feb, 0xca72, 0x0, 0x0);
        gbc.writeMem(0xe33b, { 0xc2, 0x21, 0x2a });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x2ae1, gbc.sp());
        EXPECT(0xe33e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xe33b));
        EXPECT(0x21, gbc.readMem(0xe33c));
        EXPECT(0x2a, gbc.readMem(0xe33d));
        // C2 012D
        gbc.setState(0x340, 0xf67d, 0xd230, 0x290a, 0xf2a6, 0x9191, 0x0, 0x0);
        gbc.writeMem(0x340, { 0xc2, 0xf6, 0x10 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xf67d, gbc.sp());
        EXPECT(0x10f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 012E
        gbc.setState(0xcc1a, 0x70a3, 0xcb00, 0x623f, 0xd6f8, 0x9bb2, 0x1, 0x1);
        gbc.writeMem(0xcc1a, { 0xc2, 0xc3, 0xcd });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x70a3, gbc.sp());
        EXPECT(0xcdc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xcc1a));
        EXPECT(0xc3, gbc.readMem(0xcc1b));
        EXPECT(0xcd, gbc.readMem(0xcc1c));
        // C2 0130
        gbc.setState(0x752a, 0x4e3a, 0x1860, 0xc5e7, 0xb88c, 0x7636, 0x0, 0x1);
        gbc.writeMem(0x752a, { 0xc2, 0xf6, 0xd8 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x4e3a, gbc.sp());
        EXPECT(0xd8f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0131
        gbc.setState(0xc139, 0x2348, 0x8d50, 0xebd2, 0x427f, 0xb4c2, 0x1, 0x1);
        gbc.writeMem(0xc139, { 0xc2, 0xbf, 0xe8 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x2348, gbc.sp());
        EXPECT(0xe8bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xc139));
        EXPECT(0xbf, gbc.readMem(0xc13a));
        EXPECT(0xe8, gbc.readMem(0xc13b));
        // C2 0132
        gbc.setState(0x339b, 0xf520, 0x91f0, 0x96df, 0x740c, 0x43ed, 0x0, 0x0);
        gbc.writeMem(0x339b, { 0xc2, 0xc0, 0xa4 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xf520, gbc.sp());
        EXPECT(0x339e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0133
        gbc.setState(0x3a0e, 0x32bc, 0x8b0, 0xcb20, 0x7c6, 0xb2b0, 0x0, 0x1);
        gbc.writeMem(0x3a0e, { 0xc2, 0xc1, 0xd9 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x32bc, gbc.sp());
        EXPECT(0x3a11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0134
        gbc.setState(0x89bb, 0x1dd9, 0xf780, 0xda27, 0x4161, 0x3ced, 0x1, 0x1);
        gbc.writeMem(0x89bb, { 0xc2, 0x38, 0xa0 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x1dd9, gbc.sp());
        EXPECT(0x89be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x89bb));
        EXPECT(0x38, gbc.readMem(0x89bc));
        EXPECT(0xa0, gbc.readMem(0x89bd));
        // C2 0136
        gbc.setState(0x694f, 0x2953, 0x2e30, 0x802b, 0x30cf, 0xbda3, 0x1, 0x0);
        gbc.writeMem(0x694f, { 0xc2, 0x81, 0xd5 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x2953, gbc.sp());
        EXPECT(0xd581, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0137
        gbc.setState(0x90f5, 0xb5eb, 0x6480, 0x6eb2, 0x8692, 0xa7a9, 0x0, 0x1);
        gbc.writeMem(0x90f5, { 0xc2, 0x48, 0xb9 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xb5eb, gbc.sp());
        EXPECT(0x90f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x90f5));
        EXPECT(0x48, gbc.readMem(0x90f6));
        EXPECT(0xb9, gbc.readMem(0x90f7));
        // C2 0138
        gbc.setState(0x9de3, 0xd15b, 0x1880, 0x7f64, 0x7be3, 0x710f, 0x0, 0x0);
        gbc.writeMem(0x9de3, { 0xc2, 0xc, 0x32 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xd15b, gbc.sp());
        EXPECT(0x9de6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x9de3));
        EXPECT(0xc, gbc.readMem(0x9de4));
        EXPECT(0x32, gbc.readMem(0x9de5));
        // C2 0139
        gbc.setState(0x4645, 0x7564, 0x2cf0, 0xec3a, 0x7767, 0x3906, 0x0, 0x0);
        gbc.writeMem(0x4645, { 0xc2, 0xce, 0x93 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x7564, gbc.sp());
        EXPECT(0x4648, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 013A
        gbc.setState(0x35b0, 0x8da8, 0x110, 0xba1c, 0xf856, 0xb763, 0x0, 0x0);
        gbc.writeMem(0x35b0, { 0xc2, 0x5d, 0x8 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x8da8, gbc.sp());
        EXPECT(0x85d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 013B
        gbc.setState(0x6653, 0xaae8, 0x2bd0, 0x92de, 0x717, 0xe873, 0x1, 0x1);
        gbc.writeMem(0x6653, { 0xc2, 0x73, 0xef });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xaae8, gbc.sp());
        EXPECT(0x6656, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 013C
        gbc.setState(0x1f4b, 0x39f, 0x2110, 0x709a, 0x31af, 0x87fe, 0x0, 0x1);
        gbc.writeMem(0x1f4b, { 0xc2, 0x19, 0x93 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x39f, gbc.sp());
        EXPECT(0x9319, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 013D
        gbc.setState(0x5891, 0x3980, 0x3070, 0xb7e6, 0xf138, 0x8021, 0x1, 0x1);
        gbc.writeMem(0x5891, { 0xc2, 0xd6, 0x34 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x3980, gbc.sp());
        EXPECT(0x34d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 013F
        gbc.setState(0x2547, 0xb326, 0xa370, 0xf790, 0x61b2, 0xae07, 0x0, 0x0);
        gbc.writeMem(0x2547, { 0xc2, 0x30, 0xfd });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xb326, gbc.sp());
        EXPECT(0xfd30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0141
        gbc.setState(0xa560, 0xe6ae, 0x5af0, 0x5ed9, 0xe0f6, 0xd3c8, 0x0, 0x1);
        gbc.writeMem(0xa560, { 0xc2, 0x56, 0x7a });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xe6ae, gbc.sp());
        EXPECT(0xa563, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xa560));
        EXPECT(0x56, gbc.readMem(0xa561));
        EXPECT(0x7a, gbc.readMem(0xa562));
        // C2 0142
        gbc.setState(0xdfe9, 0x7e62, 0x750, 0x8a32, 0xd336, 0xda92, 0x0, 0x0);
        gbc.writeMem(0xdfe9, { 0xc2, 0x37, 0x55 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x7e62, gbc.sp());
        EXPECT(0x5537, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xdfe9));
        EXPECT(0x37, gbc.readMem(0xdfea));
        EXPECT(0x55, gbc.readMem(0xdfeb));
        // C2 0143
        gbc.setState(0x55c2, 0xcea6, 0xc290, 0xdc85, 0x5ed3, 0xb986, 0x0, 0x1);
        gbc.writeMem(0x55c2, { 0xc2, 0xf7, 0x3a });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xcea6, gbc.sp());
        EXPECT(0x55c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0144
        gbc.setState(0xae80, 0x6d23, 0x760, 0x57e, 0xaba8, 0x6530, 0x0, 0x0);
        gbc.writeMem(0xae80, { 0xc2, 0xd3, 0x35 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x6d23, gbc.sp());
        EXPECT(0x35d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xae80));
        EXPECT(0xd3, gbc.readMem(0xae81));
        EXPECT(0x35, gbc.readMem(0xae82));
        // C2 0145
        gbc.setState(0x8d51, 0x8136, 0x1f0, 0xa556, 0xaf58, 0x5161, 0x0, 0x1);
        gbc.writeMem(0x8d51, { 0xc2, 0x8e, 0xc7 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x8136, gbc.sp());
        EXPECT(0x8d54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x8d51));
        EXPECT(0x8e, gbc.readMem(0x8d52));
        EXPECT(0xc7, gbc.readMem(0x8d53));
        // C2 0146
        gbc.setState(0x5acc, 0x7b77, 0x3800, 0xdb39, 0x4ab, 0x8ec5, 0x0, 0x0);
        gbc.writeMem(0x5acc, { 0xc2, 0x1, 0x53 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x7b77, gbc.sp());
        EXPECT(0x5301, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0147
        gbc.setState(0x2257, 0xbc96, 0x94d0, 0x894, 0x6755, 0xf0cd, 0x1, 0x0);
        gbc.writeMem(0x2257, { 0xc2, 0x6f, 0x55 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xbc96, gbc.sp());
        EXPECT(0x225a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0148
        gbc.setState(0x73e2, 0x2cee, 0xbe70, 0x8f4, 0x93e6, 0xa1e8, 0x1, 0x1);
        gbc.writeMem(0x73e2, { 0xc2, 0xfc, 0x9d });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x2cee, gbc.sp());
        EXPECT(0x9dfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0149
        gbc.setState(0x6f33, 0xb40c, 0xcaf0, 0x20e, 0xb33d, 0x977, 0x0, 0x1);
        gbc.writeMem(0x6f33, { 0xc2, 0x15, 0x98 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xb40c, gbc.sp());
        EXPECT(0x6f36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 014A
        gbc.setState(0xe007, 0xf992, 0xe380, 0x5cc5, 0x37ee, 0x246a, 0x0, 0x1);
        gbc.writeMem(0xe007, { 0xc2, 0xeb, 0x61 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xf992, gbc.sp());
        EXPECT(0xe00a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xe007));
        EXPECT(0xeb, gbc.readMem(0xe008));
        EXPECT(0x61, gbc.readMem(0xe009));
        // C2 014B
        gbc.setState(0x6cb4, 0x5451, 0xc9e0, 0x5854, 0xdb72, 0x655c, 0x0, 0x0);
        gbc.writeMem(0x6cb4, { 0xc2, 0x32, 0x5 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x5451, gbc.sp());
        EXPECT(0x6cb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 014C
        gbc.setState(0x24ca, 0xd20e, 0x19d0, 0x71b3, 0x84e0, 0x5020, 0x0, 0x1);
        gbc.writeMem(0x24ca, { 0xc2, 0xfe, 0x6 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xd20e, gbc.sp());
        EXPECT(0x24cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 014D
        gbc.setState(0x5675, 0x1091, 0xb210, 0x8ee9, 0x2557, 0xd9bc, 0x1, 0x0);
        gbc.writeMem(0x5675, { 0xc2, 0x72, 0xfa });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x1091, gbc.sp());
        EXPECT(0xfa72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 014E
        gbc.setState(0xe75c, 0x8646, 0x2560, 0x3f2d, 0x656d, 0xaa02, 0x0, 0x0);
        gbc.writeMem(0xe75c, { 0xc2, 0x9, 0xaf });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x8646, gbc.sp());
        EXPECT(0xaf09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xe75c));
        EXPECT(0x9, gbc.readMem(0xe75d));
        EXPECT(0xaf, gbc.readMem(0xe75e));
        // C2 014F
        gbc.setState(0xd3a3, 0x7c40, 0xf360, 0x954a, 0x4007, 0x39af, 0x0, 0x1);
        gbc.writeMem(0xd3a3, { 0xc2, 0x30, 0x15 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x7c40, gbc.sp());
        EXPECT(0x1530, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xd3a3));
        EXPECT(0x30, gbc.readMem(0xd3a4));
        EXPECT(0x15, gbc.readMem(0xd3a5));
        // C2 0150
        gbc.setState(0x1b5f, 0xc1c2, 0x77c0, 0x1c17, 0x1694, 0xdbfb, 0x0, 0x1);
        gbc.writeMem(0x1b5f, { 0xc2, 0x84, 0x13 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xc1c2, gbc.sp());
        EXPECT(0x1b62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0151
        gbc.setState(0x1ebf, 0xc867, 0x1080, 0xf6ec, 0x4cf1, 0x49f4, 0x1, 0x0);
        gbc.writeMem(0x1ebf, { 0xc2, 0xa1, 0x73 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xc867, gbc.sp());
        EXPECT(0x1ec2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0152
        gbc.setState(0x3c5c, 0xa882, 0x8330, 0xbd7f, 0x4085, 0x6ead, 0x1, 0x0);
        gbc.writeMem(0x3c5c, { 0xc2, 0xde, 0x76 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xa882, gbc.sp());
        EXPECT(0x76de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0153
        gbc.setState(0x945f, 0x2b32, 0xcaf0, 0x787, 0x281, 0xa645, 0x1, 0x1);
        gbc.writeMem(0x945f, { 0xc2, 0xeb, 0xe });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x2b32, gbc.sp());
        EXPECT(0x9462, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x945f));
        EXPECT(0xeb, gbc.readMem(0x9460));
        EXPECT(0xe, gbc.readMem(0x9461));
        // C2 0154
        gbc.setState(0x1365, 0xfb17, 0x9c30, 0x8ff7, 0xaf68, 0x30e9, 0x0, 0x0);
        gbc.writeMem(0x1365, { 0xc2, 0x53, 0x9f });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xfb17, gbc.sp());
        EXPECT(0x9f53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0156
        gbc.setState(0x8507, 0x83fd, 0x4700, 0x666b, 0x8505, 0x85f3, 0x0, 0x0);
        gbc.writeMem(0x8507, { 0xc2, 0xa6, 0xa4 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x83fd, gbc.sp());
        EXPECT(0xa4a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x8507));
        EXPECT(0xa6, gbc.readMem(0x8508));
        EXPECT(0xa4, gbc.readMem(0x8509));
        // C2 0157
        gbc.setState(0xe235, 0x600f, 0xee0, 0x5320, 0xf715, 0xb718, 0x0, 0x0);
        gbc.writeMem(0xe235, { 0xc2, 0x2b, 0x79 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x600f, gbc.sp());
        EXPECT(0xe238, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xe235));
        EXPECT(0x2b, gbc.readMem(0xe236));
        EXPECT(0x79, gbc.readMem(0xe237));
        // C2 0158
        gbc.setState(0x7edb, 0x1b6e, 0xd540, 0x2879, 0x5e7c, 0xf6bf, 0x0, 0x0);
        gbc.writeMem(0x7edb, { 0xc2, 0x27, 0xd6 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x1b6e, gbc.sp());
        EXPECT(0xd627, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0159
        gbc.setState(0x15ab, 0x1c, 0xdc90, 0x6e37, 0x4084, 0x6fbd, 0x1, 0x0);
        gbc.writeMem(0x15ab, { 0xc2, 0x4d, 0xcb });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x1c, gbc.sp());
        EXPECT(0x15ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 015A
        gbc.setState(0x2372, 0x437a, 0xd370, 0xa3e2, 0xd2ee, 0xf8d6, 0x0, 0x1);
        gbc.writeMem(0x2372, { 0xc2, 0x9f, 0x12 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x437a, gbc.sp());
        EXPECT(0x129f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 015B
        gbc.setState(0x7621, 0x87ef, 0xd020, 0xb607, 0x6889, 0xcd8a, 0x1, 0x1);
        gbc.writeMem(0x7621, { 0xc2, 0xb4, 0x7c });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x87ef, gbc.sp());
        EXPECT(0x7cb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 015C
        gbc.setState(0xe78, 0xb338, 0x3570, 0x8c9a, 0x8a3a, 0xe046, 0x1, 0x0);
        gbc.writeMem(0xe78, { 0xc2, 0x9, 0x3d });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xb338, gbc.sp());
        EXPECT(0x3d09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 015D
        gbc.setState(0x3d6a, 0x10fa, 0xdcc0, 0x50f6, 0x9976, 0x3140, 0x1, 0x0);
        gbc.writeMem(0x3d6a, { 0xc2, 0xd4, 0x3e });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x10fa, gbc.sp());
        EXPECT(0x3d6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 015E
        gbc.setState(0x6f9d, 0x3802, 0xdb10, 0xddfb, 0x1b93, 0x8e32, 0x0, 0x1);
        gbc.writeMem(0x6f9d, { 0xc2, 0x40, 0xac });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x3802, gbc.sp());
        EXPECT(0xac40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 015F
        gbc.setState(0xc3c9, 0xb19a, 0xc450, 0xca3f, 0x9be2, 0x523d, 0x0, 0x0);
        gbc.writeMem(0xc3c9, { 0xc2, 0x34, 0x29 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xb19a, gbc.sp());
        EXPECT(0x2934, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xc3c9));
        EXPECT(0x34, gbc.readMem(0xc3ca));
        EXPECT(0x29, gbc.readMem(0xc3cb));
        // C2 0160
        gbc.setState(0x4de4, 0x78f1, 0x34f0, 0x7481, 0x8baa, 0xc426, 0x0, 0x0);
        gbc.writeMem(0x4de4, { 0xc2, 0x2b, 0x72 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x78f1, gbc.sp());
        EXPECT(0x4de7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0161
        gbc.setState(0x261b, 0x7317, 0x4450, 0xcaeb, 0xdbc6, 0xe0ee, 0x1, 0x0);
        gbc.writeMem(0x261b, { 0xc2, 0x75, 0x36 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x7317, gbc.sp());
        EXPECT(0x3675, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0162
        gbc.setState(0x3796, 0x2913, 0x4300, 0xfc21, 0x7b98, 0xcf51, 0x1, 0x0);
        gbc.writeMem(0x3796, { 0xc2, 0x1c, 0xea });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x2913, gbc.sp());
        EXPECT(0xea1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0163
        gbc.setState(0x3853, 0xbb0d, 0x8ee0, 0x518a, 0x814c, 0x75d0, 0x0, 0x0);
        gbc.writeMem(0x3853, { 0xc2, 0x62, 0x50 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xbb0d, gbc.sp());
        EXPECT(0x3856, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0164
        gbc.setState(0x890c, 0x94d1, 0xf240, 0x2640, 0xcd89, 0x47fe, 0x0, 0x1);
        gbc.writeMem(0x890c, { 0xc2, 0xa2, 0x42 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x94d1, gbc.sp());
        EXPECT(0x42a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x890c));
        EXPECT(0xa2, gbc.readMem(0x890d));
        EXPECT(0x42, gbc.readMem(0x890e));
        // C2 0165
        gbc.setState(0xacd6, 0x1c7f, 0xb810, 0x37cc, 0x480e, 0xcce3, 0x0, 0x1);
        gbc.writeMem(0xacd6, { 0xc2, 0x66, 0x46 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x1c7f, gbc.sp());
        EXPECT(0x4666, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xacd6));
        EXPECT(0x66, gbc.readMem(0xacd7));
        EXPECT(0x46, gbc.readMem(0xacd8));
        // C2 0166
        gbc.setState(0x6530, 0x565f, 0xd350, 0x1f11, 0x97bf, 0x706c, 0x1, 0x0);
        gbc.writeMem(0x6530, { 0xc2, 0xc, 0x38 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x565f, gbc.sp());
        EXPECT(0x380c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0167
        gbc.setState(0xab2f, 0x80c9, 0x55e0, 0x3524, 0xaabd, 0x6052, 0x1, 0x0);
        gbc.writeMem(0xab2f, { 0xc2, 0xcb, 0x56 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x80c9, gbc.sp());
        EXPECT(0xab32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xab2f));
        EXPECT(0xcb, gbc.readMem(0xab30));
        EXPECT(0x56, gbc.readMem(0xab31));
        // C2 0168
        gbc.setState(0xd7a4, 0x750a, 0x9050, 0x57c4, 0xe663, 0x4bc6, 0x1, 0x1);
        gbc.writeMem(0xd7a4, { 0xc2, 0xee, 0x77 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x750a, gbc.sp());
        EXPECT(0x77ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xd7a4));
        EXPECT(0xee, gbc.readMem(0xd7a5));
        EXPECT(0x77, gbc.readMem(0xd7a6));
        // C2 0169
        gbc.setState(0xd267, 0x81c7, 0xe720, 0xe219, 0xda22, 0xf960, 0x1, 0x1);
        gbc.writeMem(0xd267, { 0xc2, 0xc3, 0xe0 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x81c7, gbc.sp());
        EXPECT(0xe0c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xd267));
        EXPECT(0xc3, gbc.readMem(0xd268));
        EXPECT(0xe0, gbc.readMem(0xd269));
        // C2 016A
        gbc.setState(0x8636, 0xe31a, 0x9730, 0x5a89, 0xa9ec, 0x39e4, 0x0, 0x1);
        gbc.writeMem(0x8636, { 0xc2, 0xcc, 0x5c });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xe31a, gbc.sp());
        EXPECT(0x5ccc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x8636));
        EXPECT(0xcc, gbc.readMem(0x8637));
        EXPECT(0x5c, gbc.readMem(0x8638));
        // C2 016B
        gbc.setState(0x3185, 0xd913, 0x2210, 0x8dbe, 0x7ab2, 0x9d44, 0x0, 0x1);
        gbc.writeMem(0x3185, { 0xc2, 0x71, 0x8b });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xd913, gbc.sp());
        EXPECT(0x8b71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 016C
        gbc.setState(0xa7f5, 0xf17d, 0x2e40, 0x46f0, 0x232f, 0xd3f1, 0x0, 0x1);
        gbc.writeMem(0xa7f5, { 0xc2, 0xa0, 0x4d });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xf17d, gbc.sp());
        EXPECT(0x4da0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xa7f5));
        EXPECT(0xa0, gbc.readMem(0xa7f6));
        EXPECT(0x4d, gbc.readMem(0xa7f7));
        // C2 016D
        gbc.setState(0xc335, 0x2281, 0x5d20, 0x30a5, 0x30d3, 0x94c1, 0x0, 0x0);
        gbc.writeMem(0xc335, { 0xc2, 0x2f, 0xa });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x2281, gbc.sp());
        EXPECT(0xa2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xc335));
        EXPECT(0x2f, gbc.readMem(0xc336));
        EXPECT(0xa, gbc.readMem(0xc337));
        // C2 016E
        gbc.setState(0xc300, 0xd3a5, 0xb9a0, 0x85ff, 0x109e, 0xe669, 0x1, 0x1);
        gbc.writeMem(0xc300, { 0xc2, 0x25, 0x3f });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xd3a5, gbc.sp());
        EXPECT(0xc303, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xc300));
        EXPECT(0x25, gbc.readMem(0xc301));
        EXPECT(0x3f, gbc.readMem(0xc302));
        // C2 016F
        gbc.setState(0x2055, 0xcfb4, 0x9b20, 0x64d1, 0x6128, 0x8362, 0x0, 0x0);
        gbc.writeMem(0x2055, { 0xc2, 0xe3, 0x9 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xcfb4, gbc.sp());
        EXPECT(0x9e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0170
        gbc.setState(0xb93c, 0x77b, 0x7b10, 0x9e60, 0xea62, 0xa88a, 0x0, 0x1);
        gbc.writeMem(0xb93c, { 0xc2, 0xb, 0xd1 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x77b, gbc.sp());
        EXPECT(0xd10b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xb93c));
        EXPECT(0xb, gbc.readMem(0xb93d));
        EXPECT(0xd1, gbc.readMem(0xb93e));
        // C2 0172
        gbc.setState(0x106f, 0xafb1, 0xe2b0, 0x841c, 0xff00, 0x5754, 0x0, 0x0);
        gbc.writeMem(0x106f, { 0xc2, 0x24, 0xea });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xafb1, gbc.sp());
        EXPECT(0x1072, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0173
        gbc.setState(0xc121, 0x37f4, 0x39b0, 0x3efb, 0x26f4, 0x78aa, 0x0, 0x0);
        gbc.writeMem(0xc121, { 0xc2, 0xcc, 0x38 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x37f4, gbc.sp());
        EXPECT(0xc124, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xc121));
        EXPECT(0xcc, gbc.readMem(0xc122));
        EXPECT(0x38, gbc.readMem(0xc123));
        // C2 0174
        gbc.setState(0xbb3b, 0xf76e, 0xbc60, 0x76d3, 0x69f7, 0x7b70, 0x0, 0x1);
        gbc.writeMem(0xbb3b, { 0xc2, 0x1, 0x45 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xf76e, gbc.sp());
        EXPECT(0x4501, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xbb3b));
        EXPECT(0x1, gbc.readMem(0xbb3c));
        EXPECT(0x45, gbc.readMem(0xbb3d));
        // C2 0175
        gbc.setState(0x34fe, 0x5f00, 0x320, 0xd8eb, 0xa168, 0x878f, 0x0, 0x0);
        gbc.writeMem(0x34fe, { 0xc2, 0xda, 0x33 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x5f00, gbc.sp());
        EXPECT(0x33da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0176
        gbc.setState(0xc677, 0x1d58, 0x69f0, 0xa6b7, 0x317b, 0xd44d, 0x1, 0x1);
        gbc.writeMem(0xc677, { 0xc2, 0x85, 0xd9 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x1d58, gbc.sp());
        EXPECT(0xc67a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xc677));
        EXPECT(0x85, gbc.readMem(0xc678));
        EXPECT(0xd9, gbc.readMem(0xc679));
        // C2 0177
        gbc.setState(0xd03d, 0x7cef, 0x98a0, 0xcd62, 0xba9b, 0x6043, 0x1, 0x0);
        gbc.writeMem(0xd03d, { 0xc2, 0x4b, 0xb6 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x7cef, gbc.sp());
        EXPECT(0xd040, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xd03d));
        EXPECT(0x4b, gbc.readMem(0xd03e));
        EXPECT(0xb6, gbc.readMem(0xd03f));
        // C2 0178
        gbc.setState(0x68a, 0x570b, 0x8e40, 0x1dee, 0xea0e, 0xba6d, 0x1, 0x1);
        gbc.writeMem(0x68a, { 0xc2, 0xf0, 0x41 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x570b, gbc.sp());
        EXPECT(0x41f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0179
        gbc.setState(0x4c2b, 0xb5bf, 0x5e50, 0xd5c2, 0x4014, 0x7e41, 0x1, 0x1);
        gbc.writeMem(0x4c2b, { 0xc2, 0x2d, 0x14 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xb5bf, gbc.sp());
        EXPECT(0x142d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 017A
        gbc.setState(0x6a7b, 0x2acd, 0xeb30, 0xc0b7, 0x15b6, 0x7fc1, 0x0, 0x1);
        gbc.writeMem(0x6a7b, { 0xc2, 0x34, 0xaa });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x2acd, gbc.sp());
        EXPECT(0xaa34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 017B
        gbc.setState(0x6880, 0x9631, 0x1170, 0xfb68, 0xaff3, 0x81ac, 0x1, 0x1);
        gbc.writeMem(0x6880, { 0xc2, 0x5e, 0x7e });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x9631, gbc.sp());
        EXPECT(0x7e5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 017C
        gbc.setState(0x72c6, 0x3567, 0xc4e0, 0xadd6, 0x86b8, 0xcd86, 0x1, 0x0);
        gbc.writeMem(0x72c6, { 0xc2, 0x34, 0x8f });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x3567, gbc.sp());
        EXPECT(0x72c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 017D
        gbc.setState(0xc39d, 0x2473, 0x9de0, 0x9f0d, 0xfa2c, 0xa50b, 0x0, 0x0);
        gbc.writeMem(0xc39d, { 0xc2, 0x83, 0xd8 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x2473, gbc.sp());
        EXPECT(0xc3a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xc39d));
        EXPECT(0x83, gbc.readMem(0xc39e));
        EXPECT(0xd8, gbc.readMem(0xc39f));
        // C2 017E
        gbc.setState(0x7833, 0x97a2, 0x1310, 0x20f7, 0x72c1, 0x5c51, 0x0, 0x1);
        gbc.writeMem(0x7833, { 0xc2, 0x55, 0x3d });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x97a2, gbc.sp());
        EXPECT(0x3d55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 017F
        gbc.setState(0x9741, 0x1c5b, 0xce80, 0x31c5, 0x5af7, 0xebf0, 0x1, 0x0);
        gbc.writeMem(0x9741, { 0xc2, 0x47, 0xca });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x1c5b, gbc.sp());
        EXPECT(0x9744, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x9741));
        EXPECT(0x47, gbc.readMem(0x9742));
        EXPECT(0xca, gbc.readMem(0x9743));
        // C2 0180
        gbc.setState(0xc563, 0xd412, 0xe5a0, 0xbfb7, 0x406b, 0x39f8, 0x1, 0x0);
        gbc.writeMem(0xc563, { 0xc2, 0xeb, 0x29 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xd412, gbc.sp());
        EXPECT(0xc566, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xc563));
        EXPECT(0xeb, gbc.readMem(0xc564));
        EXPECT(0x29, gbc.readMem(0xc565));
        // C2 0181
        gbc.setState(0x4902, 0xbde3, 0xb1f0, 0xdb91, 0xfa3a, 0x4612, 0x1, 0x0);
        gbc.writeMem(0x4902, { 0xc2, 0xba, 0x6e });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xbde3, gbc.sp());
        EXPECT(0x4905, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0182
        gbc.setState(0x99a6, 0xa52b, 0x1960, 0xb8e, 0xde89, 0x3512, 0x0, 0x0);
        gbc.writeMem(0x99a6, { 0xc2, 0xfd, 0xfa });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xa52b, gbc.sp());
        EXPECT(0xfafd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x99a6));
        EXPECT(0xfd, gbc.readMem(0x99a7));
        EXPECT(0xfa, gbc.readMem(0x99a8));
        // C2 0183
        gbc.setState(0x6eb, 0x466b, 0x5270, 0x3253, 0xd654, 0x279e, 0x1, 0x0);
        gbc.writeMem(0x6eb, { 0xc2, 0x18, 0xbc });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x466b, gbc.sp());
        EXPECT(0xbc18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0184
        gbc.setState(0xe785, 0x78e9, 0x2300, 0xd410, 0xe5f0, 0x5be8, 0x0, 0x0);
        gbc.writeMem(0xe785, { 0xc2, 0x30, 0x8e });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x78e9, gbc.sp());
        EXPECT(0x8e30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xe785));
        EXPECT(0x30, gbc.readMem(0xe786));
        EXPECT(0x8e, gbc.readMem(0xe787));
        // C2 0185
        gbc.setState(0x956c, 0xa492, 0x5320, 0x9212, 0x6419, 0x163e, 0x0, 0x0);
        gbc.writeMem(0x956c, { 0xc2, 0x75, 0x8e });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xa492, gbc.sp());
        EXPECT(0x8e75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x956c));
        EXPECT(0x75, gbc.readMem(0x956d));
        EXPECT(0x8e, gbc.readMem(0x956e));
        // C2 0186
        gbc.setState(0xbfd7, 0x7e8f, 0xaf10, 0x275d, 0x97dc, 0xef4b, 0x1, 0x0);
        gbc.writeMem(0xbfd7, { 0xc2, 0x13, 0xc1 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x7e8f, gbc.sp());
        EXPECT(0xc113, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xbfd7));
        EXPECT(0x13, gbc.readMem(0xbfd8));
        EXPECT(0xc1, gbc.readMem(0xbfd9));
        // C2 0187
        gbc.setState(0xc8be, 0x5ddb, 0x7850, 0xc4a2, 0x6789, 0xea07, 0x1, 0x1);
        gbc.writeMem(0xc8be, { 0xc2, 0x36, 0xea });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x5ddb, gbc.sp());
        EXPECT(0xea36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xc8be));
        EXPECT(0x36, gbc.readMem(0xc8bf));
        EXPECT(0xea, gbc.readMem(0xc8c0));
        // C2 0188
        gbc.setState(0x683, 0xc157, 0x7bd0, 0xde95, 0xf3f5, 0x5213, 0x1, 0x1);
        gbc.writeMem(0x683, { 0xc2, 0x8c, 0x24 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xc157, gbc.sp());
        EXPECT(0x686, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0189
        gbc.setState(0x246c, 0x6c21, 0x8e50, 0x4f45, 0x7dc2, 0x5e83, 0x1, 0x1);
        gbc.writeMem(0x246c, { 0xc2, 0xab, 0xbf });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x6c21, gbc.sp());
        EXPECT(0xbfab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 018A
        gbc.setState(0x3c2a, 0xfa1c, 0xfa20, 0x2671, 0xed55, 0xca1, 0x1, 0x1);
        gbc.writeMem(0x3c2a, { 0xc2, 0xef, 0xc0 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xfa1c, gbc.sp());
        EXPECT(0xc0ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 018C
        gbc.setState(0xee1e, 0xbf41, 0x6c70, 0x2705, 0x684b, 0xa13a, 0x0, 0x1);
        gbc.writeMem(0xee1e, { 0xc2, 0xc6, 0x9c });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xbf41, gbc.sp());
        EXPECT(0x9cc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xee1e));
        EXPECT(0xc6, gbc.readMem(0xee1f));
        EXPECT(0x9c, gbc.readMem(0xee20));
        // C2 018D
        gbc.setState(0x1e7a, 0x8a1e, 0x5310, 0x5bdf, 0xb406, 0xd7ee, 0x1, 0x0);
        gbc.writeMem(0x1e7a, { 0xc2, 0xe8, 0x22 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x8a1e, gbc.sp());
        EXPECT(0x22e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 018E
        gbc.setState(0x3bc9, 0xc1c8, 0x90d0, 0xb63b, 0xc238, 0x5292, 0x0, 0x1);
        gbc.writeMem(0x3bc9, { 0xc2, 0x1c, 0x84 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xc1c8, gbc.sp());
        EXPECT(0x3bcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 018F
        gbc.setState(0x20f2, 0x4c36, 0x3ab0, 0x32d7, 0xa53f, 0x56e6, 0x1, 0x1);
        gbc.writeMem(0x20f2, { 0xc2, 0x9b, 0x62 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x4c36, gbc.sp());
        EXPECT(0x20f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0190
        gbc.setState(0x2c5d, 0x6281, 0xeef0, 0x3dda, 0xfbec, 0xbe5, 0x0, 0x0);
        gbc.writeMem(0x2c5d, { 0xc2, 0x1d, 0x15 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x6281, gbc.sp());
        EXPECT(0x2c60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0191
        gbc.setState(0xa15b, 0x8637, 0xfca0, 0x522a, 0xc988, 0x75b, 0x1, 0x0);
        gbc.writeMem(0xa15b, { 0xc2, 0xe2, 0xc9 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x8637, gbc.sp());
        EXPECT(0xa15e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xa15b));
        EXPECT(0xe2, gbc.readMem(0xa15c));
        EXPECT(0xc9, gbc.readMem(0xa15d));
        // C2 0192
        gbc.setState(0x2db3, 0x1e38, 0xac70, 0x1804, 0xb72b, 0xfe54, 0x0, 0x1);
        gbc.writeMem(0x2db3, { 0xc2, 0x4e, 0xaf });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x1e38, gbc.sp());
        EXPECT(0xaf4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0193
        gbc.setState(0xaebc, 0x166, 0x2b40, 0xd410, 0x513b, 0x871a, 0x1, 0x1);
        gbc.writeMem(0xaebc, { 0xc2, 0x63, 0x63 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x166, gbc.sp());
        EXPECT(0x6363, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xaebc));
        EXPECT(0x63, gbc.readMem(0xaebd));
        EXPECT(0x63, gbc.readMem(0xaebe));
        // C2 0194
        gbc.setState(0x4a70, 0xf185, 0x5140, 0xeb95, 0xabe2, 0x4de9, 0x1, 0x1);
        gbc.writeMem(0x4a70, { 0xc2, 0x7a, 0xee });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xf185, gbc.sp());
        EXPECT(0xee7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0195
        gbc.setState(0x730a, 0xcd3f, 0x6700, 0x7200, 0x4bea, 0xcbf, 0x1, 0x0);
        gbc.writeMem(0x730a, { 0xc2, 0xf1, 0x62 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xcd3f, gbc.sp());
        EXPECT(0x62f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0196
        gbc.setState(0x3cbe, 0x7177, 0x2820, 0x35e7, 0xa406, 0x6a1a, 0x1, 0x0);
        gbc.writeMem(0x3cbe, { 0xc2, 0x1e, 0x3e });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x7177, gbc.sp());
        EXPECT(0x3e1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0197
        gbc.setState(0xa288, 0x7bce, 0x25f0, 0xd8f1, 0x8a82, 0xb23, 0x1, 0x1);
        gbc.writeMem(0xa288, { 0xc2, 0xf5, 0x1b });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x7bce, gbc.sp());
        EXPECT(0xa28b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xa288));
        EXPECT(0xf5, gbc.readMem(0xa289));
        EXPECT(0x1b, gbc.readMem(0xa28a));
        // C2 0198
        gbc.setState(0x17e2, 0x2b8d, 0x6780, 0x3e0d, 0x1b6d, 0x554a, 0x1, 0x1);
        gbc.writeMem(0x17e2, { 0xc2, 0x70, 0xd });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x2b8d, gbc.sp());
        EXPECT(0x17e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0199
        gbc.setState(0x79f, 0xffa6, 0x3ef0, 0xbea6, 0x16ac, 0x34ba, 0x1, 0x0);
        gbc.writeMem(0x79f, { 0xc2, 0x95, 0x5d });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xffa6, gbc.sp());
        EXPECT(0x7a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 019A
        gbc.setState(0x8a62, 0xc27c, 0x34b0, 0xa6ce, 0xd4f8, 0xc1ba, 0x0, 0x0);
        gbc.writeMem(0x8a62, { 0xc2, 0x72, 0xc6 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xc27c, gbc.sp());
        EXPECT(0x8a65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x8a62));
        EXPECT(0x72, gbc.readMem(0x8a63));
        EXPECT(0xc6, gbc.readMem(0x8a64));
        // C2 019B
        gbc.setState(0x3bf4, 0xe6c7, 0xe6e0, 0x14f1, 0xec3, 0xee23, 0x1, 0x1);
        gbc.writeMem(0x3bf4, { 0xc2, 0x27, 0x19 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xe6c7, gbc.sp());
        EXPECT(0x3bf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 019C
        gbc.setState(0x32ad, 0xa238, 0x91a0, 0xaa1e, 0xb8e5, 0x373c, 0x1, 0x1);
        gbc.writeMem(0x32ad, { 0xc2, 0x73, 0x15 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xa238, gbc.sp());
        EXPECT(0x32b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 019D
        gbc.setState(0x1537, 0x1231, 0x4360, 0x6f2, 0xcc6f, 0x9f47, 0x1, 0x1);
        gbc.writeMem(0x1537, { 0xc2, 0x72, 0x37 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x1231, gbc.sp());
        EXPECT(0x3772, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 019E
        gbc.setState(0x1916, 0xa843, 0x3f10, 0xbc6d, 0x3290, 0xf50c, 0x0, 0x1);
        gbc.writeMem(0x1916, { 0xc2, 0xac, 0xaf });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xa843, gbc.sp());
        EXPECT(0xafac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 019F
        gbc.setState(0xd848, 0x4fed, 0xf250, 0x4aec, 0x3fbd, 0x1acc, 0x1, 0x1);
        gbc.writeMem(0xd848, { 0xc2, 0x79, 0xeb });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x4fed, gbc.sp());
        EXPECT(0xeb79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xd848));
        EXPECT(0x79, gbc.readMem(0xd849));
        EXPECT(0xeb, gbc.readMem(0xd84a));
        // C2 01A0
        gbc.setState(0xba14, 0x70c7, 0x4300, 0xe544, 0x94f1, 0xbcae, 0x1, 0x1);
        gbc.writeMem(0xba14, { 0xc2, 0x58, 0x79 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x70c7, gbc.sp());
        EXPECT(0x7958, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xba14));
        EXPECT(0x58, gbc.readMem(0xba15));
        EXPECT(0x79, gbc.readMem(0xba16));
        // C2 01A1
        gbc.setState(0xc2c2, 0xdbb1, 0x77f0, 0x77fc, 0xd5b8, 0xacfa, 0x1, 0x1);
        gbc.writeMem(0xc2c2, { 0xc2, 0xd, 0x57 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xdbb1, gbc.sp());
        EXPECT(0xc2c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xc2c2));
        EXPECT(0xd, gbc.readMem(0xc2c3));
        EXPECT(0x57, gbc.readMem(0xc2c4));
        // C2 01A2
        gbc.setState(0xbbce, 0x228b, 0x54a0, 0x89c6, 0xb0b3, 0x6170, 0x1, 0x0);
        gbc.writeMem(0xbbce, { 0xc2, 0xa9, 0xcd });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x228b, gbc.sp());
        EXPECT(0xbbd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xbbce));
        EXPECT(0xa9, gbc.readMem(0xbbcf));
        EXPECT(0xcd, gbc.readMem(0xbbd0));
        // C2 01A4
        gbc.setState(0x5b81, 0x85b7, 0x47e0, 0x4c07, 0x2fbf, 0xd881, 0x0, 0x1);
        gbc.writeMem(0x5b81, { 0xc2, 0x3c, 0x68 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x85b7, gbc.sp());
        EXPECT(0x5b84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 01A5
        gbc.setState(0x14c4, 0x5ab9, 0x7490, 0x7de3, 0x9b89, 0xb87b, 0x0, 0x1);
        gbc.writeMem(0x14c4, { 0xc2, 0x59, 0x1d });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x5ab9, gbc.sp());
        EXPECT(0x14c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 01A6
        gbc.setState(0x82b8, 0xf9f7, 0x7520, 0x3ca5, 0xaa38, 0xdfb3, 0x1, 0x0);
        gbc.writeMem(0x82b8, { 0xc2, 0xc9, 0x88 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xf9f7, gbc.sp());
        EXPECT(0x88c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x82b8));
        EXPECT(0xc9, gbc.readMem(0x82b9));
        EXPECT(0x88, gbc.readMem(0x82ba));
        // C2 01A7
        gbc.setState(0x63ce, 0x193d, 0x6c70, 0x418b, 0xb5c5, 0x8313, 0x0, 0x0);
        gbc.writeMem(0x63ce, { 0xc2, 0x5b, 0x30 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x193d, gbc.sp());
        EXPECT(0x305b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 01A8
        gbc.setState(0x1e94, 0x9ea5, 0xd560, 0x25f7, 0xbc13, 0x3cac, 0x0, 0x0);
        gbc.writeMem(0x1e94, { 0xc2, 0x92, 0xac });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x9ea5, gbc.sp());
        EXPECT(0xac92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 01A9
        gbc.setState(0xc3d0, 0xe5ac, 0x8fc0, 0xb17c, 0x72ed, 0xd78e, 0x0, 0x0);
        gbc.writeMem(0xc3d0, { 0xc2, 0xeb, 0x81 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xe5ac, gbc.sp());
        EXPECT(0xc3d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xc3d0));
        EXPECT(0xeb, gbc.readMem(0xc3d1));
        EXPECT(0x81, gbc.readMem(0xc3d2));
        // C2 01AA
        gbc.setState(0xd01b, 0x1730, 0x2530, 0xa562, 0xf004, 0xf5ad, 0x0, 0x1);
        gbc.writeMem(0xd01b, { 0xc2, 0xad, 0xd1 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x1730, gbc.sp());
        EXPECT(0xd1ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xd01b));
        EXPECT(0xad, gbc.readMem(0xd01c));
        EXPECT(0xd1, gbc.readMem(0xd01d));
        // C2 01AB
        gbc.setState(0xbd3f, 0x1b69, 0x37f0, 0x47d2, 0xf2e9, 0x5a3d, 0x1, 0x0);
        gbc.writeMem(0xbd3f, { 0xc2, 0x80, 0x9e });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x1b69, gbc.sp());
        EXPECT(0xbd42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xbd3f));
        EXPECT(0x80, gbc.readMem(0xbd40));
        EXPECT(0x9e, gbc.readMem(0xbd41));
        // C2 01AC
        gbc.setState(0x557b, 0x6393, 0x45e0, 0x5957, 0x2ffc, 0x6273, 0x0, 0x1);
        gbc.writeMem(0x557b, { 0xc2, 0xad, 0x33 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x6393, gbc.sp());
        EXPECT(0x557e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 01AD
        gbc.setState(0x5713, 0x8dd3, 0x1520, 0x6205, 0x53df, 0x141e, 0x0, 0x0);
        gbc.writeMem(0x5713, { 0xc2, 0x96, 0x8d });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x8dd3, gbc.sp());
        EXPECT(0x8d96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 01AE
        gbc.setState(0xa729, 0x63e2, 0xea00, 0xfd68, 0x9a7f, 0xbb25, 0x0, 0x0);
        gbc.writeMem(0xa729, { 0xc2, 0x93, 0x70 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x63e2, gbc.sp());
        EXPECT(0x7093, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xa729));
        EXPECT(0x93, gbc.readMem(0xa72a));
        EXPECT(0x70, gbc.readMem(0xa72b));
        // C2 01AF
        gbc.setState(0xab83, 0xaaab, 0x2630, 0xa484, 0x8f0d, 0xa7c2, 0x0, 0x1);
        gbc.writeMem(0xab83, { 0xc2, 0xae, 0xb });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xaaab, gbc.sp());
        EXPECT(0xbae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xab83));
        EXPECT(0xae, gbc.readMem(0xab84));
        EXPECT(0xb, gbc.readMem(0xab85));
        // C2 01B0
        gbc.setState(0x5eb3, 0xe83b, 0x37b0, 0x4381, 0x7ea, 0x25c9, 0x1, 0x0);
        gbc.writeMem(0x5eb3, { 0xc2, 0x1b, 0x34 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xe83b, gbc.sp());
        EXPECT(0x5eb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 01B2
        gbc.setState(0x211, 0x3e60, 0xd0c0, 0x5b61, 0xb29d, 0x8209, 0x1, 0x1);
        gbc.writeMem(0x211, { 0xc2, 0xf2, 0xcf });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x3e60, gbc.sp());
        EXPECT(0x214, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 01B3
        gbc.setState(0x4e9d, 0xc900, 0xdeb0, 0xcaba, 0x61, 0x56f1, 0x0, 0x0);
        gbc.writeMem(0x4e9d, { 0xc2, 0x4e, 0xbd });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xc900, gbc.sp());
        EXPECT(0x4ea0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 01B4
        gbc.setState(0xe00, 0x87d, 0x5a80, 0x95b1, 0x4e6a, 0xb809, 0x1, 0x0);
        gbc.writeMem(0xe00, { 0xc2, 0x53, 0x32 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x87d, gbc.sp());
        EXPECT(0xe03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 01B5
        gbc.setState(0xd920, 0xee53, 0xf220, 0xc651, 0xa681, 0x686e, 0x1, 0x0);
        gbc.writeMem(0xd920, { 0xc2, 0xe4, 0x7a });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xee53, gbc.sp());
        EXPECT(0x7ae4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xd920));
        EXPECT(0xe4, gbc.readMem(0xd921));
        EXPECT(0x7a, gbc.readMem(0xd922));
        // C2 01B6
        gbc.setState(0x5595, 0x362a, 0x1bb0, 0x13dc, 0x4863, 0x43c2, 0x0, 0x0);
        gbc.writeMem(0x5595, { 0xc2, 0x6, 0x6 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x362a, gbc.sp());
        EXPECT(0x5598, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 01B7
        gbc.setState(0x3667, 0x8c4c, 0x4b50, 0xfcf4, 0xc69e, 0x3717, 0x1, 0x1);
        gbc.writeMem(0x3667, { 0xc2, 0xd3, 0x6c });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x8c4c, gbc.sp());
        EXPECT(0x6cd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 01B9
        gbc.setState(0xbdb8, 0x2fa0, 0x6a0, 0xbcb4, 0xda25, 0x15d3, 0x0, 0x0);
        gbc.writeMem(0xbdb8, { 0xc2, 0x35, 0xc6 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x2fa0, gbc.sp());
        EXPECT(0xbdbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xbdb8));
        EXPECT(0x35, gbc.readMem(0xbdb9));
        EXPECT(0xc6, gbc.readMem(0xbdba));
        // C2 01BA
        gbc.setState(0x43eb, 0x7fed, 0xd180, 0x18aa, 0xaa3b, 0x1847, 0x1, 0x0);
        gbc.writeMem(0x43eb, { 0xc2, 0xab, 0x9c });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x7fed, gbc.sp());
        EXPECT(0x43ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 01BB
        gbc.setState(0xc114, 0x92b5, 0xd360, 0xbbca, 0xb6b6, 0x29dd, 0x1, 0x1);
        gbc.writeMem(0xc114, { 0xc2, 0x3c, 0x8e });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x92b5, gbc.sp());
        EXPECT(0x8e3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xc114));
        EXPECT(0x3c, gbc.readMem(0xc115));
        EXPECT(0x8e, gbc.readMem(0xc116));
        // C2 01BC
        gbc.setState(0xd00, 0xcd89, 0x8540, 0x91fd, 0x3830, 0xc678, 0x0, 0x0);
        gbc.writeMem(0xd00, { 0xc2, 0x65, 0x43 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xcd89, gbc.sp());
        EXPECT(0x4365, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 01BD
        gbc.setState(0xefc4, 0x7c26, 0xf330, 0xa60, 0xe216, 0x2c5e, 0x1, 0x1);
        gbc.writeMem(0xefc4, { 0xc2, 0x3a, 0xe6 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x7c26, gbc.sp());
        EXPECT(0xe63a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xefc4));
        EXPECT(0x3a, gbc.readMem(0xefc5));
        EXPECT(0xe6, gbc.readMem(0xefc6));
        // C2 01BE
        gbc.setState(0xae91, 0xcbb2, 0x5950, 0x6ca1, 0xed66, 0xbf8c, 0x1, 0x0);
        gbc.writeMem(0xae91, { 0xc2, 0x7, 0x94 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xcbb2, gbc.sp());
        EXPECT(0x9407, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xae91));
        EXPECT(0x7, gbc.readMem(0xae92));
        EXPECT(0x94, gbc.readMem(0xae93));
        // C2 01BF
        gbc.setState(0x4e2d, 0x3c6d, 0xb280, 0x2af3, 0xa4fc, 0xfcfb, 0x1, 0x0);
        gbc.writeMem(0x4e2d, { 0xc2, 0xc2, 0x65 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x3c6d, gbc.sp());
        EXPECT(0x4e30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 01C0
        gbc.setState(0xbb82, 0x693c, 0xff80, 0x9966, 0xafc1, 0x1557, 0x0, 0x0);
        gbc.writeMem(0xbb82, { 0xc2, 0xbd, 0x38 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x693c, gbc.sp());
        EXPECT(0xbb85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xbb82));
        EXPECT(0xbd, gbc.readMem(0xbb83));
        EXPECT(0x38, gbc.readMem(0xbb84));
        // C2 01C1
        gbc.setState(0x4262, 0x7fa9, 0xcd0, 0xa951, 0x8290, 0x62bf, 0x0, 0x0);
        gbc.writeMem(0x4262, { 0xc2, 0xfc, 0x4b });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x7fa9, gbc.sp());
        EXPECT(0x4265, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 01C3
        gbc.setState(0x8af2, 0xe5e7, 0xc900, 0x87aa, 0x558e, 0x929e, 0x0, 0x0);
        gbc.writeMem(0x8af2, { 0xc2, 0x75, 0xe9 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xe5e7, gbc.sp());
        EXPECT(0xe975, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x8af2));
        EXPECT(0x75, gbc.readMem(0x8af3));
        EXPECT(0xe9, gbc.readMem(0x8af4));
        // C2 01C4
        gbc.setState(0x5f55, 0x643e, 0x6a50, 0xeceb, 0x627, 0xdbb, 0x1, 0x0);
        gbc.writeMem(0x5f55, { 0xc2, 0x7d, 0xb3 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x643e, gbc.sp());
        EXPECT(0xb37d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 01C5
        gbc.setState(0x65f3, 0x267a, 0x4010, 0xe34d, 0xceea, 0xbda5, 0x1, 0x0);
        gbc.writeMem(0x65f3, { 0xc2, 0x63, 0x38 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x267a, gbc.sp());
        EXPECT(0x3863, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 01C6
        gbc.setState(0x12, 0x77c0, 0x64f0, 0x1954, 0x3db4, 0xed0a, 0x1, 0x0);
        gbc.writeMem(0x12, { 0xc2, 0x5d, 0xb4 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x77c0, gbc.sp());
        EXPECT(0x15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 01C7
        gbc.setState(0xd67c, 0x1e19, 0xf530, 0x9505, 0x707c, 0xc33a, 0x1, 0x0);
        gbc.writeMem(0xd67c, { 0xc2, 0x61, 0x2a });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x1e19, gbc.sp());
        EXPECT(0x2a61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xd67c));
        EXPECT(0x61, gbc.readMem(0xd67d));
        EXPECT(0x2a, gbc.readMem(0xd67e));
        // C2 01C8
        gbc.setState(0xb277, 0x6541, 0x67f0, 0x53a3, 0xfe4e, 0x4479, 0x1, 0x1);
        gbc.writeMem(0xb277, { 0xc2, 0xcc, 0x9b });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x6541, gbc.sp());
        EXPECT(0xb27a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xb277));
        EXPECT(0xcc, gbc.readMem(0xb278));
        EXPECT(0x9b, gbc.readMem(0xb279));
        // C2 01C9
        gbc.setState(0x5fee, 0x2628, 0x34f0, 0x7be4, 0x2960, 0xe100, 0x0, 0x1);
        gbc.writeMem(0x5fee, { 0xc2, 0x2d, 0x23 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x2628, gbc.sp());
        EXPECT(0x5ff1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 01CA
        gbc.setState(0xc7d, 0x291b, 0xee10, 0x65dc, 0x293e, 0x379e, 0x0, 0x0);
        gbc.writeMem(0xc7d, { 0xc2, 0x16, 0xdc });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x291b, gbc.sp());
        EXPECT(0xdc16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 01CB
        gbc.setState(0xb3f6, 0x241b, 0x6ba0, 0x7954, 0xd720, 0x5e60, 0x0, 0x0);
        gbc.writeMem(0xb3f6, { 0xc2, 0x70, 0x6b });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x241b, gbc.sp());
        EXPECT(0xb3f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xb3f6));
        EXPECT(0x70, gbc.readMem(0xb3f7));
        EXPECT(0x6b, gbc.readMem(0xb3f8));
        // C2 01CC
        gbc.setState(0x8133, 0xf183, 0x6c10, 0x2095, 0xff77, 0xdeb7, 0x0, 0x1);
        gbc.writeMem(0x8133, { 0xc2, 0xa5, 0x75 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xf183, gbc.sp());
        EXPECT(0x75a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x8133));
        EXPECT(0xa5, gbc.readMem(0x8134));
        EXPECT(0x75, gbc.readMem(0x8135));
        // C2 01CD
        gbc.setState(0x6e2b, 0x3081, 0xaf10, 0x69da, 0x2ef4, 0x924f, 0x0, 0x0);
        gbc.writeMem(0x6e2b, { 0xc2, 0xe0, 0x3a });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x3081, gbc.sp());
        EXPECT(0x3ae0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 01CE
        gbc.setState(0x9564, 0x420e, 0xbfc0, 0x5784, 0xd286, 0x42b4, 0x0, 0x1);
        gbc.writeMem(0x9564, { 0xc2, 0x3b, 0xdd });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x420e, gbc.sp());
        EXPECT(0x9567, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x9564));
        EXPECT(0x3b, gbc.readMem(0x9565));
        EXPECT(0xdd, gbc.readMem(0x9566));
        // C2 01CF
        gbc.setState(0x1038, 0xda93, 0x9ee0, 0x46e5, 0xeb2d, 0x32f7, 0x1, 0x0);
        gbc.writeMem(0x1038, { 0xc2, 0x1e, 0xb2 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xda93, gbc.sp());
        EXPECT(0x103b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 01D0
        gbc.setState(0xd95f, 0x3215, 0xadd0, 0xa890, 0x1b9d, 0xb2ae, 0x1, 0x1);
        gbc.writeMem(0xd95f, { 0xc2, 0x23, 0x10 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x3215, gbc.sp());
        EXPECT(0xd962, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xd95f));
        EXPECT(0x23, gbc.readMem(0xd960));
        EXPECT(0x10, gbc.readMem(0xd961));
        // C2 01D1
        gbc.setState(0xa851, 0x2116, 0xd4c0, 0xccd3, 0x45cf, 0x4ccc, 0x1, 0x1);
        gbc.writeMem(0xa851, { 0xc2, 0x37, 0x40 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x2116, gbc.sp());
        EXPECT(0xa854, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xa851));
        EXPECT(0x37, gbc.readMem(0xa852));
        EXPECT(0x40, gbc.readMem(0xa853));
        // C2 01D2
        gbc.setState(0x6dcb, 0xd079, 0xb450, 0x32a0, 0xdca4, 0x6862, 0x0, 0x0);
        gbc.writeMem(0x6dcb, { 0xc2, 0xf1, 0x70 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xd079, gbc.sp());
        EXPECT(0x70f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 01D3
        gbc.setState(0x1a0c, 0xcd8d, 0x4720, 0xc815, 0x4b39, 0x14ac, 0x1, 0x0);
        gbc.writeMem(0x1a0c, { 0xc2, 0x4b, 0x27 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xcd8d, gbc.sp());
        EXPECT(0x274b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 01D4
        gbc.setState(0x8a2f, 0xedc4, 0xc2c0, 0x8f41, 0x2353, 0xb585, 0x1, 0x1);
        gbc.writeMem(0x8a2f, { 0xc2, 0xba, 0xe6 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xedc4, gbc.sp());
        EXPECT(0x8a32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x8a2f));
        EXPECT(0xba, gbc.readMem(0x8a30));
        EXPECT(0xe6, gbc.readMem(0x8a31));
        // C2 01D5
        gbc.setState(0x7b8, 0xac38, 0xbf40, 0x34ef, 0x9f22, 0x22a2, 0x1, 0x0);
        gbc.writeMem(0x7b8, { 0xc2, 0xee, 0xa5 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xac38, gbc.sp());
        EXPECT(0xa5ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 01D6
        gbc.setState(0x822f, 0x174e, 0x5050, 0x2a, 0xccb7, 0xe1fe, 0x0, 0x0);
        gbc.writeMem(0x822f, { 0xc2, 0xe2, 0x5a });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x174e, gbc.sp());
        EXPECT(0x5ae2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x822f));
        EXPECT(0xe2, gbc.readMem(0x8230));
        EXPECT(0x5a, gbc.readMem(0x8231));
        // C2 01D7
        gbc.setState(0x7c6e, 0xa6ce, 0xb040, 0x8fd0, 0x8c79, 0xf0f0, 0x1, 0x0);
        gbc.writeMem(0x7c6e, { 0xc2, 0x76, 0x52 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xa6ce, gbc.sp());
        EXPECT(0x5276, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 01D8
        gbc.setState(0x530b, 0x324e, 0xb900, 0xf05, 0x9e53, 0xfc71, 0x0, 0x0);
        gbc.writeMem(0x530b, { 0xc2, 0x93, 0x6c });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x324e, gbc.sp());
        EXPECT(0x6c93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 01D9
        gbc.setState(0xd599, 0xa7e9, 0x10f0, 0x102c, 0x456a, 0x90f2, 0x0, 0x0);
        gbc.writeMem(0xd599, { 0xc2, 0x8e, 0x2 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xa7e9, gbc.sp());
        EXPECT(0xd59c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xd599));
        EXPECT(0x8e, gbc.readMem(0xd59a));
        EXPECT(0x2, gbc.readMem(0xd59b));
        // C2 01DA
        gbc.setState(0xee91, 0x1512, 0x48c0, 0x792d, 0xce6c, 0x4323, 0x1, 0x0);
        gbc.writeMem(0xee91, { 0xc2, 0x7a, 0xb });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x1512, gbc.sp());
        EXPECT(0xee94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xee91));
        EXPECT(0x7a, gbc.readMem(0xee92));
        EXPECT(0xb, gbc.readMem(0xee93));
        // C2 01DB
        gbc.setState(0x13b3, 0x7289, 0xf110, 0x9960, 0x23bb, 0xc53a, 0x0, 0x0);
        gbc.writeMem(0x13b3, { 0xc2, 0xe6, 0x2f });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x7289, gbc.sp());
        EXPECT(0x2fe6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 01DC
        gbc.setState(0x3f3e, 0x2408, 0xf6f0, 0x2234, 0xa64b, 0x5702, 0x0, 0x0);
        gbc.writeMem(0x3f3e, { 0xc2, 0x8, 0xa1 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x2408, gbc.sp());
        EXPECT(0x3f41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 01DD
        gbc.setState(0x3895, 0x677b, 0x4a50, 0x8ff6, 0x2a7c, 0x47d8, 0x0, 0x0);
        gbc.writeMem(0x3895, { 0xc2, 0x95, 0x29 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x677b, gbc.sp());
        EXPECT(0x2995, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 01DE
        gbc.setState(0x1685, 0x9d2e, 0xe350, 0x577e, 0x6bd6, 0x3e45, 0x1, 0x0);
        gbc.writeMem(0x1685, { 0xc2, 0x79, 0x65 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x9d2e, gbc.sp());
        EXPECT(0x6579, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 01DF
        gbc.setState(0x30d8, 0xf805, 0x1750, 0xb9fd, 0x5751, 0x9245, 0x0, 0x0);
        gbc.writeMem(0x30d8, { 0xc2, 0x8a, 0xe4 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xf805, gbc.sp());
        EXPECT(0xe48a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 01E0
        gbc.setState(0x35e0, 0x7c15, 0x53e0, 0x1384, 0x5cd5, 0x35f9, 0x0, 0x0);
        gbc.writeMem(0x35e0, { 0xc2, 0x7e, 0x1b });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x7c15, gbc.sp());
        EXPECT(0x35e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 01E1
        gbc.setState(0x485c, 0xe9fe, 0x4610, 0xbfa9, 0x460c, 0x47f3, 0x0, 0x0);
        gbc.writeMem(0x485c, { 0xc2, 0x53, 0x82 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xe9fe, gbc.sp());
        EXPECT(0x8253, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 01E2
        gbc.setState(0x2988, 0x6736, 0x88a0, 0x220f, 0xe2d, 0x796f, 0x1, 0x0);
        gbc.writeMem(0x2988, { 0xc2, 0x26, 0x5c });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x6736, gbc.sp());
        EXPECT(0x298b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 01E3
        gbc.setState(0x4a0, 0xa30d, 0xb4f0, 0xbd06, 0x8d5a, 0xf172, 0x0, 0x1);
        gbc.writeMem(0x4a0, { 0xc2, 0xdd, 0x7b });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xa30d, gbc.sp());
        EXPECT(0x4a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 01E5
        gbc.setState(0x9d32, 0xc3fb, 0xe0d0, 0x8210, 0x2b9b, 0x20d2, 0x1, 0x1);
        gbc.writeMem(0x9d32, { 0xc2, 0x4b, 0x30 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xc3fb, gbc.sp());
        EXPECT(0x9d35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x9d32));
        EXPECT(0x4b, gbc.readMem(0x9d33));
        EXPECT(0x30, gbc.readMem(0x9d34));
        // C2 01E6
        gbc.setState(0xeff5, 0xce2e, 0x220, 0x703c, 0x97dc, 0x372f, 0x1, 0x1);
        gbc.writeMem(0xeff5, { 0xc2, 0x46, 0x55 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xce2e, gbc.sp());
        EXPECT(0x5546, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xeff5));
        EXPECT(0x46, gbc.readMem(0xeff6));
        EXPECT(0x55, gbc.readMem(0xeff7));
        // C2 01E7
        gbc.setState(0x31d5, 0x8620, 0xd4d0, 0x66e4, 0xfd6f, 0xbdf3, 0x0, 0x1);
        gbc.writeMem(0x31d5, { 0xc2, 0x36, 0x34 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x8620, gbc.sp());
        EXPECT(0x31d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 01E8
        gbc.setState(0x366, 0x75df, 0xc170, 0x4b9, 0xeb4c, 0xb5ce, 0x0, 0x1);
        gbc.writeMem(0x366, { 0xc2, 0xb, 0xa3 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x75df, gbc.sp());
        EXPECT(0xa30b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 01E9
        gbc.setState(0x3332, 0x8fff, 0xc2b0, 0xb794, 0xe889, 0x861b, 0x1, 0x0);
        gbc.writeMem(0x3332, { 0xc2, 0x67, 0xf0 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x8fff, gbc.sp());
        EXPECT(0x3335, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 01EA
        gbc.setState(0x8f02, 0x2d36, 0x8c20, 0xfa05, 0xc012, 0x278b, 0x1, 0x1);
        gbc.writeMem(0x8f02, { 0xc2, 0x92, 0xeb });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x2d36, gbc.sp());
        EXPECT(0xeb92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x8f02));
        EXPECT(0x92, gbc.readMem(0x8f03));
        EXPECT(0xeb, gbc.readMem(0x8f04));
        // C2 01EB
        gbc.setState(0xd29b, 0xdaa0, 0xc9d0, 0x51cb, 0x8f2b, 0x677a, 0x0, 0x0);
        gbc.writeMem(0xd29b, { 0xc2, 0xd, 0x65 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xdaa0, gbc.sp());
        EXPECT(0xd29e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xd29b));
        EXPECT(0xd, gbc.readMem(0xd29c));
        EXPECT(0x65, gbc.readMem(0xd29d));
        // C2 01ED
        gbc.setState(0x9001, 0xc233, 0xdd50, 0xac5a, 0x7146, 0xe591, 0x1, 0x1);
        gbc.writeMem(0x9001, { 0xc2, 0xd2, 0xa7 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xc233, gbc.sp());
        EXPECT(0xa7d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x9001));
        EXPECT(0xd2, gbc.readMem(0x9002));
        EXPECT(0xa7, gbc.readMem(0x9003));
        // C2 01EE
        gbc.setState(0x8728, 0xebda, 0x6930, 0xef68, 0xeec5, 0x6d63, 0x0, 0x1);
        gbc.writeMem(0x8728, { 0xc2, 0x45, 0xb7 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xebda, gbc.sp());
        EXPECT(0xb745, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x8728));
        EXPECT(0x45, gbc.readMem(0x8729));
        EXPECT(0xb7, gbc.readMem(0x872a));
        // C2 01EF
        gbc.setState(0x70c3, 0xffd1, 0x2090, 0x6929, 0xd87a, 0x3997, 0x0, 0x0);
        gbc.writeMem(0x70c3, { 0xc2, 0xe7, 0xed });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xffd1, gbc.sp());
        EXPECT(0x70c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 01F0
        gbc.setState(0x2b5e, 0x2615, 0x8990, 0x8879, 0xec5c, 0xba56, 0x0, 0x1);
        gbc.writeMem(0x2b5e, { 0xc2, 0xed, 0x49 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x2615, gbc.sp());
        EXPECT(0x2b61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 01F1
        gbc.setState(0x6882, 0x29c7, 0xcdb0, 0x2696, 0xf941, 0x14cb, 0x1, 0x0);
        gbc.writeMem(0x6882, { 0xc2, 0x7f, 0x3b });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x29c7, gbc.sp());
        EXPECT(0x6885, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 01F2
        gbc.setState(0xa852, 0x800, 0x1e10, 0x1539, 0x1002, 0x79dc, 0x0, 0x1);
        gbc.writeMem(0xa852, { 0xc2, 0x40, 0x9a });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x800, gbc.sp());
        EXPECT(0x9a40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xa852));
        EXPECT(0x40, gbc.readMem(0xa853));
        EXPECT(0x9a, gbc.readMem(0xa854));
        // C2 01F3
        gbc.setState(0x9b06, 0x49a5, 0x13a0, 0x81df, 0x4183, 0xe6d9, 0x0, 0x0);
        gbc.writeMem(0x9b06, { 0xc2, 0xe3, 0x1d });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x49a5, gbc.sp());
        EXPECT(0x9b09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x9b06));
        EXPECT(0xe3, gbc.readMem(0x9b07));
        EXPECT(0x1d, gbc.readMem(0x9b08));
        // C2 01F4
        gbc.setState(0xaa0a, 0xaa54, 0x3360, 0x19c, 0x7efe, 0x5f6, 0x0, 0x1);
        gbc.writeMem(0xaa0a, { 0xc2, 0x78, 0xc8 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xaa54, gbc.sp());
        EXPECT(0xc878, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xaa0a));
        EXPECT(0x78, gbc.readMem(0xaa0b));
        EXPECT(0xc8, gbc.readMem(0xaa0c));
        // C2 01F5
        gbc.setState(0x90e6, 0x6465, 0x6cb0, 0xe47d, 0x37af, 0x6544, 0x0, 0x1);
        gbc.writeMem(0x90e6, { 0xc2, 0xf0, 0x67 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x6465, gbc.sp());
        EXPECT(0x90e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x90e6));
        EXPECT(0xf0, gbc.readMem(0x90e7));
        EXPECT(0x67, gbc.readMem(0x90e8));
        // C2 01F6
        gbc.setState(0xa73e, 0x2e64, 0x8eb0, 0xc845, 0x4426, 0x7bd0, 0x1, 0x1);
        gbc.writeMem(0xa73e, { 0xc2, 0x64, 0x24 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x2e64, gbc.sp());
        EXPECT(0xa741, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xa73e));
        EXPECT(0x64, gbc.readMem(0xa73f));
        EXPECT(0x24, gbc.readMem(0xa740));
        // C2 01F7
        gbc.setState(0x7e39, 0x205e, 0x5ec0, 0x1070, 0xa029, 0xd3a9, 0x1, 0x1);
        gbc.writeMem(0x7e39, { 0xc2, 0x54, 0xba });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x205e, gbc.sp());
        EXPECT(0x7e3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 01F9
        gbc.setState(0x278a, 0x6faf, 0x7380, 0xa5fa, 0x6965, 0x80e3, 0x0, 0x0);
        gbc.writeMem(0x278a, { 0xc2, 0xf2, 0x71 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x6faf, gbc.sp());
        EXPECT(0x278d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 01FA
        gbc.setState(0x737d, 0xb442, 0x7770, 0xfd8b, 0x7155, 0x13c1, 0x0, 0x0);
        gbc.writeMem(0x737d, { 0xc2, 0x65, 0x52 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xb442, gbc.sp());
        EXPECT(0x5265, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 01FB
        gbc.setState(0x6f87, 0x5ad9, 0x5190, 0x9532, 0x9d18, 0xea7, 0x1, 0x0);
        gbc.writeMem(0x6f87, { 0xc2, 0x8d, 0x5e });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x5ad9, gbc.sp());
        EXPECT(0x6f8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 01FC
        gbc.setState(0x1df, 0x8bdd, 0x540, 0xa527, 0xacfe, 0x5d27, 0x1, 0x1);
        gbc.writeMem(0x1df, { 0xc2, 0x3d, 0xf });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x8bdd, gbc.sp());
        EXPECT(0xf3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 01FD
        gbc.setState(0xc42, 0x4d7c, 0x7e0, 0x3400, 0xe833, 0x6790, 0x1, 0x0);
        gbc.writeMem(0xc42, { 0xc2, 0x81, 0x38 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x4d7c, gbc.sp());
        EXPECT(0xc45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 01FE
        gbc.setState(0x8a3c, 0xe7c0, 0x5570, 0xd3fe, 0x4f78, 0x5f4c, 0x0, 0x1);
        gbc.writeMem(0x8a3c, { 0xc2, 0xea, 0xe2 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xe7c0, gbc.sp());
        EXPECT(0xe2ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x8a3c));
        EXPECT(0xea, gbc.readMem(0x8a3d));
        EXPECT(0xe2, gbc.readMem(0x8a3e));
        // C2 01FF
        gbc.setState(0x2bd0, 0x2dce, 0x9000, 0x89b2, 0xbb83, 0x78e7, 0x1, 0x1);
        gbc.writeMem(0x2bd0, { 0xc2, 0x18, 0x7a });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x2dce, gbc.sp());
        EXPECT(0x7a18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0200
        gbc.setState(0x115c, 0x20e, 0xd870, 0x6124, 0x7b05, 0x8f5d, 0x1, 0x0);
        gbc.writeMem(0x115c, { 0xc2, 0xdf, 0xf9 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x20e, gbc.sp());
        EXPECT(0xf9df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0201
        gbc.setState(0x6fef, 0x14c4, 0xfe40, 0xc8a7, 0x7c2b, 0x76be, 0x1, 0x0);
        gbc.writeMem(0x6fef, { 0xc2, 0x89, 0x64 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x14c4, gbc.sp());
        EXPECT(0x6489, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0202
        gbc.setState(0x729a, 0x1840, 0x90e0, 0x891c, 0xf71d, 0x19e2, 0x1, 0x1);
        gbc.writeMem(0x729a, { 0xc2, 0x8c, 0xd8 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x1840, gbc.sp());
        EXPECT(0x729d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0204
        gbc.setState(0xbf2a, 0x25d5, 0x4610, 0x675, 0x1000, 0x7fb4, 0x1, 0x1);
        gbc.writeMem(0xbf2a, { 0xc2, 0xe4, 0x2e });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x25d5, gbc.sp());
        EXPECT(0x2ee4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xbf2a));
        EXPECT(0xe4, gbc.readMem(0xbf2b));
        EXPECT(0x2e, gbc.readMem(0xbf2c));
        // C2 0205
        gbc.setState(0x5f35, 0xd91d, 0x920, 0xaf4b, 0xe8be, 0x2d23, 0x0, 0x0);
        gbc.writeMem(0x5f35, { 0xc2, 0x4e, 0x36 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xd91d, gbc.sp());
        EXPECT(0x364e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0206
        gbc.setState(0x40b9, 0x1575, 0x5e60, 0x4625, 0xd37a, 0x9d65, 0x0, 0x1);
        gbc.writeMem(0x40b9, { 0xc2, 0xb6, 0xfd });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x1575, gbc.sp());
        EXPECT(0xfdb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0207
        gbc.setState(0x84ab, 0xcefa, 0xb210, 0xfe58, 0x8271, 0x73ac, 0x0, 0x1);
        gbc.writeMem(0x84ab, { 0xc2, 0x48, 0x7c });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xcefa, gbc.sp());
        EXPECT(0x7c48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x84ab));
        EXPECT(0x48, gbc.readMem(0x84ac));
        EXPECT(0x7c, gbc.readMem(0x84ad));
        // C2 0208
        gbc.setState(0x8394, 0xb80b, 0xfdc0, 0x34dd, 0x9bf7, 0x5bf, 0x0, 0x1);
        gbc.writeMem(0x8394, { 0xc2, 0x4e, 0xd3 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xb80b, gbc.sp());
        EXPECT(0x8397, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x8394));
        EXPECT(0x4e, gbc.readMem(0x8395));
        EXPECT(0xd3, gbc.readMem(0x8396));
        // C2 0209
        gbc.setState(0x8ef, 0xeab7, 0xb1e0, 0xbbdb, 0xb780, 0xc59a, 0x0, 0x0);
        gbc.writeMem(0x8ef, { 0xc2, 0xc, 0x18 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xeab7, gbc.sp());
        EXPECT(0x8f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 020B
        gbc.setState(0x4976, 0xa940, 0x4990, 0x2afe, 0x2d79, 0x453, 0x0, 0x1);
        gbc.writeMem(0x4976, { 0xc2, 0x6d, 0xcc });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xa940, gbc.sp());
        EXPECT(0x4979, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 020C
        gbc.setState(0xac3c, 0x5222, 0x2ff0, 0xfc4a, 0x8d67, 0xaab0, 0x0, 0x1);
        gbc.writeMem(0xac3c, { 0xc2, 0x5e, 0xa4 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x5222, gbc.sp());
        EXPECT(0xac3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xac3c));
        EXPECT(0x5e, gbc.readMem(0xac3d));
        EXPECT(0xa4, gbc.readMem(0xac3e));
        // C2 020D
        gbc.setState(0x8417, 0xdb8a, 0xd660, 0xd491, 0x9996, 0x44c4, 0x0, 0x1);
        gbc.writeMem(0x8417, { 0xc2, 0x69, 0xe2 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xdb8a, gbc.sp());
        EXPECT(0xe269, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x8417));
        EXPECT(0x69, gbc.readMem(0x8418));
        EXPECT(0xe2, gbc.readMem(0x8419));
        // C2 020E
        gbc.setState(0xae57, 0x970b, 0x6df0, 0xb88c, 0x1ac, 0xf06f, 0x1, 0x1);
        gbc.writeMem(0xae57, { 0xc2, 0xb4, 0xf7 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x970b, gbc.sp());
        EXPECT(0xae5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xae57));
        EXPECT(0xb4, gbc.readMem(0xae58));
        EXPECT(0xf7, gbc.readMem(0xae59));
        // C2 020F
        gbc.setState(0xa89e, 0xa4c7, 0x2db0, 0xa9ea, 0x8734, 0x9dbb, 0x0, 0x0);
        gbc.writeMem(0xa89e, { 0xc2, 0x4a, 0x45 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xa4c7, gbc.sp());
        EXPECT(0xa8a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xa89e));
        EXPECT(0x4a, gbc.readMem(0xa89f));
        EXPECT(0x45, gbc.readMem(0xa8a0));
        // C2 0210
        gbc.setState(0x6dc6, 0xfa60, 0xfa90, 0x5186, 0x3e41, 0xc93, 0x1, 0x1);
        gbc.writeMem(0x6dc6, { 0xc2, 0xfa, 0x2e });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xfa60, gbc.sp());
        EXPECT(0x6dc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0211
        gbc.setState(0x9e20, 0xd4b6, 0xcfb0, 0x4c06, 0xec0b, 0x2c04, 0x0, 0x1);
        gbc.writeMem(0x9e20, { 0xc2, 0xe2, 0x96 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xd4b6, gbc.sp());
        EXPECT(0x9e23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x9e20));
        EXPECT(0xe2, gbc.readMem(0x9e21));
        EXPECT(0x96, gbc.readMem(0x9e22));
        // C2 0212
        gbc.setState(0x6e1, 0x4cd7, 0xe2b0, 0x354c, 0xc3f6, 0x76af, 0x0, 0x0);
        gbc.writeMem(0x6e1, { 0xc2, 0x91, 0xd8 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x4cd7, gbc.sp());
        EXPECT(0x6e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0213
        gbc.setState(0x98b0, 0x95d7, 0x80a0, 0xfe56, 0xe8a0, 0x3628, 0x1, 0x0);
        gbc.writeMem(0x98b0, { 0xc2, 0x83, 0x1f });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x95d7, gbc.sp());
        EXPECT(0x98b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x98b0));
        EXPECT(0x83, gbc.readMem(0x98b1));
        EXPECT(0x1f, gbc.readMem(0x98b2));
        // C2 0214
        gbc.setState(0x71ae, 0xe92c, 0xc1c0, 0x35e0, 0xaffb, 0xe79e, 0x0, 0x1);
        gbc.writeMem(0x71ae, { 0xc2, 0xb2, 0x1b });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xe92c, gbc.sp());
        EXPECT(0x71b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0215
        gbc.setState(0xd602, 0x5c2b, 0x80b0, 0x7d8d, 0xd9a4, 0x23b6, 0x1, 0x1);
        gbc.writeMem(0xd602, { 0xc2, 0x29, 0x73 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x5c2b, gbc.sp());
        EXPECT(0xd605, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xd602));
        EXPECT(0x29, gbc.readMem(0xd603));
        EXPECT(0x73, gbc.readMem(0xd604));
        // C2 0216
        gbc.setState(0x5093, 0x3c72, 0xea0, 0xbab6, 0x4052, 0x2aa, 0x0, 0x0);
        gbc.writeMem(0x5093, { 0xc2, 0x71, 0x5f });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x3c72, gbc.sp());
        EXPECT(0x5096, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0217
        gbc.setState(0xe11c, 0xbae0, 0x3b00, 0x6958, 0x5e6f, 0x62e0, 0x1, 0x0);
        gbc.writeMem(0xe11c, { 0xc2, 0xea, 0x4b });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xbae0, gbc.sp());
        EXPECT(0x4bea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xe11c));
        EXPECT(0xea, gbc.readMem(0xe11d));
        EXPECT(0x4b, gbc.readMem(0xe11e));
        // C2 0218
        gbc.setState(0xc7ee, 0x93e3, 0x8ea0, 0xa8e0, 0x1197, 0x5c6a, 0x1, 0x0);
        gbc.writeMem(0xc7ee, { 0xc2, 0x2f, 0x55 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x93e3, gbc.sp());
        EXPECT(0xc7f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xc7ee));
        EXPECT(0x2f, gbc.readMem(0xc7ef));
        EXPECT(0x55, gbc.readMem(0xc7f0));
        // C2 0219
        gbc.setState(0x166f, 0xf186, 0xb4b0, 0xfc7a, 0xc724, 0x1c69, 0x0, 0x0);
        gbc.writeMem(0x166f, { 0xc2, 0x84, 0x88 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xf186, gbc.sp());
        EXPECT(0x1672, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 021A
        gbc.setState(0x93cb, 0xd6f1, 0x8310, 0xe2ee, 0xcab4, 0x1931, 0x1, 0x0);
        gbc.writeMem(0x93cb, { 0xc2, 0x3c, 0x45 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xd6f1, gbc.sp());
        EXPECT(0x453c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x93cb));
        EXPECT(0x3c, gbc.readMem(0x93cc));
        EXPECT(0x45, gbc.readMem(0x93cd));
        // C2 021C
        gbc.setState(0x6d04, 0xc39c, 0x1060, 0x3869, 0x9bf3, 0x7e7f, 0x0, 0x0);
        gbc.writeMem(0x6d04, { 0xc2, 0x4c, 0x15 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xc39c, gbc.sp());
        EXPECT(0x154c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 021D
        gbc.setState(0x8e38, 0xc977, 0xba30, 0x3be2, 0xaf9d, 0x971d, 0x1, 0x1);
        gbc.writeMem(0x8e38, { 0xc2, 0x95, 0x6b });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xc977, gbc.sp());
        EXPECT(0x6b95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x8e38));
        EXPECT(0x95, gbc.readMem(0x8e39));
        EXPECT(0x6b, gbc.readMem(0x8e3a));
        // C2 021E
        gbc.setState(0xe4be, 0x3b8f, 0xbf10, 0x9857, 0xbbab, 0x5b08, 0x0, 0x0);
        gbc.writeMem(0xe4be, { 0xc2, 0x5, 0x5e });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x3b8f, gbc.sp());
        EXPECT(0x5e05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xe4be));
        EXPECT(0x5, gbc.readMem(0xe4bf));
        EXPECT(0x5e, gbc.readMem(0xe4c0));
        // C2 021F
        gbc.setState(0xa24d, 0x5e3f, 0xe610, 0x7c8d, 0x9b1a, 0x8423, 0x0, 0x1);
        gbc.writeMem(0xa24d, { 0xc2, 0x22, 0x8e });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x5e3f, gbc.sp());
        EXPECT(0x8e22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xa24d));
        EXPECT(0x22, gbc.readMem(0xa24e));
        EXPECT(0x8e, gbc.readMem(0xa24f));
        // C2 0220
        gbc.setState(0x2316, 0x62b, 0xc340, 0xaa3a, 0x571f, 0x4972, 0x1, 0x1);
        gbc.writeMem(0x2316, { 0xc2, 0x54, 0xb9 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x62b, gbc.sp());
        EXPECT(0xb954, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0221
        gbc.setState(0xe6fd, 0x1811, 0xab00, 0xcf0d, 0x19c3, 0xc87f, 0x0, 0x1);
        gbc.writeMem(0xe6fd, { 0xc2, 0x9c, 0x28 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x1811, gbc.sp());
        EXPECT(0x289c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xe6fd));
        EXPECT(0x9c, gbc.readMem(0xe6fe));
        EXPECT(0x28, gbc.readMem(0xe6ff));
        // C2 0222
        gbc.setState(0xd5b4, 0x2266, 0xa3c0, 0x6761, 0x15f2, 0xcf76, 0x0, 0x0);
        gbc.writeMem(0xd5b4, { 0xc2, 0x4e, 0x8f });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x2266, gbc.sp());
        EXPECT(0xd5b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xd5b4));
        EXPECT(0x4e, gbc.readMem(0xd5b5));
        EXPECT(0x8f, gbc.readMem(0xd5b6));
        // C2 0223
        gbc.setState(0xa624, 0x8f79, 0xa020, 0x2b55, 0x8cb7, 0x9442, 0x1, 0x0);
        gbc.writeMem(0xa624, { 0xc2, 0xc6, 0x6a });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x8f79, gbc.sp());
        EXPECT(0x6ac6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xa624));
        EXPECT(0xc6, gbc.readMem(0xa625));
        EXPECT(0x6a, gbc.readMem(0xa626));
        // C2 0224
        gbc.setState(0x8e06, 0x834, 0xb470, 0x54e7, 0x1c2d, 0x4566, 0x1, 0x1);
        gbc.writeMem(0x8e06, { 0xc2, 0x5e, 0xcd });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x834, gbc.sp());
        EXPECT(0xcd5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x8e06));
        EXPECT(0x5e, gbc.readMem(0x8e07));
        EXPECT(0xcd, gbc.readMem(0x8e08));
        // C2 0225
        gbc.setState(0x7ecc, 0x14bb, 0xc590, 0x9103, 0x65ed, 0x868f, 0x0, 0x0);
        gbc.writeMem(0x7ecc, { 0xc2, 0x8b, 0x87 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x14bb, gbc.sp());
        EXPECT(0x7ecf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0227
        gbc.setState(0xc725, 0x3884, 0x16b0, 0x9562, 0x302, 0xcefb, 0x0, 0x1);
        gbc.writeMem(0xc725, { 0xc2, 0xd9, 0x8b });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x3884, gbc.sp());
        EXPECT(0xc728, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xc725));
        EXPECT(0xd9, gbc.readMem(0xc726));
        EXPECT(0x8b, gbc.readMem(0xc727));
        // C2 0228
        gbc.setState(0xf5f, 0x81b3, 0xffb0, 0x52a3, 0x497e, 0x7240, 0x0, 0x0);
        gbc.writeMem(0xf5f, { 0xc2, 0xf7, 0xe });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x81b3, gbc.sp());
        EXPECT(0xf62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0229
        gbc.setState(0x5881, 0x1d1d, 0x4c60, 0xf0f5, 0xf5fb, 0x81f7, 0x0, 0x0);
        gbc.writeMem(0x5881, { 0xc2, 0x82, 0x9e });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x1d1d, gbc.sp());
        EXPECT(0x9e82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 022A
        gbc.setState(0xb7ee, 0x9ca0, 0x28f0, 0x6f87, 0x535f, 0x6f82, 0x0, 0x0);
        gbc.writeMem(0xb7ee, { 0xc2, 0x1a, 0x61 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x9ca0, gbc.sp());
        EXPECT(0xb7f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xb7ee));
        EXPECT(0x1a, gbc.readMem(0xb7ef));
        EXPECT(0x61, gbc.readMem(0xb7f0));
        // C2 022B
        gbc.setState(0x6208, 0x33a9, 0x26d0, 0x1960, 0x1f6b, 0xab3d, 0x0, 0x0);
        gbc.writeMem(0x6208, { 0xc2, 0xb, 0xf0 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x33a9, gbc.sp());
        EXPECT(0x620b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 022C
        gbc.setState(0x449f, 0x3be4, 0x8a70, 0x61b7, 0x95bb, 0x1551, 0x0, 0x1);
        gbc.writeMem(0x449f, { 0xc2, 0x95, 0xbe });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x3be4, gbc.sp());
        EXPECT(0xbe95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 022D
        gbc.setState(0x724a, 0x2318, 0x7420, 0x89ed, 0x2a68, 0x34a, 0x1, 0x1);
        gbc.writeMem(0x724a, { 0xc2, 0x9a, 0xc8 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x2318, gbc.sp());
        EXPECT(0xc89a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 022E
        gbc.setState(0x69a3, 0x40f3, 0x82d0, 0x8be4, 0x1022, 0x1412, 0x0, 0x0);
        gbc.writeMem(0x69a3, { 0xc2, 0x12, 0xb2 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x40f3, gbc.sp());
        EXPECT(0x69a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0230
        gbc.setState(0x3469, 0xc30d, 0x12e0, 0x1de7, 0xa196, 0xa9e1, 0x1, 0x0);
        gbc.writeMem(0x3469, { 0xc2, 0xa8, 0x62 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xc30d, gbc.sp());
        EXPECT(0x346c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0231
        gbc.setState(0x14f5, 0x4905, 0xe710, 0xd2d2, 0x69ad, 0x299, 0x1, 0x0);
        gbc.writeMem(0x14f5, { 0xc2, 0xe1, 0x20 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x4905, gbc.sp());
        EXPECT(0x20e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0232
        gbc.setState(0x6127, 0xe196, 0x930, 0x74b6, 0x7697, 0x5f8d, 0x1, 0x1);
        gbc.writeMem(0x6127, { 0xc2, 0xf, 0xa9 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xe196, gbc.sp());
        EXPECT(0xa90f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0233
        gbc.setState(0xccb8, 0xdb7a, 0xad0, 0x3279, 0xddac, 0x42da, 0x1, 0x0);
        gbc.writeMem(0xccb8, { 0xc2, 0x77, 0x49 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xdb7a, gbc.sp());
        EXPECT(0xccbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xccb8));
        EXPECT(0x77, gbc.readMem(0xccb9));
        EXPECT(0x49, gbc.readMem(0xccba));
        // C2 0234
        gbc.setState(0x943b, 0x1177, 0xe9a0, 0xee0, 0xcff7, 0x6b08, 0x1, 0x0);
        gbc.writeMem(0x943b, { 0xc2, 0x88, 0x26 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x1177, gbc.sp());
        EXPECT(0x943e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x943b));
        EXPECT(0x88, gbc.readMem(0x943c));
        EXPECT(0x26, gbc.readMem(0x943d));
        // C2 0235
        gbc.setState(0x9221, 0x6a7e, 0x9860, 0xa3cd, 0xa1ba, 0xa5da, 0x0, 0x1);
        gbc.writeMem(0x9221, { 0xc2, 0xee, 0x42 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x6a7e, gbc.sp());
        EXPECT(0x42ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x9221));
        EXPECT(0xee, gbc.readMem(0x9222));
        EXPECT(0x42, gbc.readMem(0x9223));
        // C2 0236
        gbc.setState(0x7108, 0xfb8a, 0xfb0, 0x3ac9, 0x5510, 0xa726, 0x1, 0x0);
        gbc.writeMem(0x7108, { 0xc2, 0xb, 0x10 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xfb8a, gbc.sp());
        EXPECT(0x710b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0237
        gbc.setState(0x3ed6, 0x5147, 0xe3e0, 0xae6b, 0x2b34, 0xc9c7, 0x0, 0x0);
        gbc.writeMem(0x3ed6, { 0xc2, 0x5e, 0x91 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x5147, gbc.sp());
        EXPECT(0x3ed9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0238
        gbc.setState(0x97f7, 0x2406, 0x2470, 0xf540, 0xdfa, 0x65c9, 0x1, 0x1);
        gbc.writeMem(0x97f7, { 0xc2, 0x4e, 0xcf });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x2406, gbc.sp());
        EXPECT(0xcf4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x97f7));
        EXPECT(0x4e, gbc.readMem(0x97f8));
        EXPECT(0xcf, gbc.readMem(0x97f9));
        // C2 0239
        gbc.setState(0xb4fa, 0x1987, 0xaa00, 0x2e16, 0x844, 0x38d3, 0x0, 0x0);
        gbc.writeMem(0xb4fa, { 0xc2, 0x37, 0xc2 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x1987, gbc.sp());
        EXPECT(0xc237, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xb4fa));
        EXPECT(0x37, gbc.readMem(0xb4fb));
        EXPECT(0xc2, gbc.readMem(0xb4fc));
        // C2 023A
        gbc.setState(0x566f, 0xaeae, 0xfae0, 0xe368, 0x8abe, 0x363, 0x0, 0x0);
        gbc.writeMem(0x566f, { 0xc2, 0x8a, 0xe0 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xaeae, gbc.sp());
        EXPECT(0x5672, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 023B
        gbc.setState(0x4cd8, 0xa3e, 0xb7b0, 0x8b8a, 0x5148, 0xfb9e, 0x1, 0x0);
        gbc.writeMem(0x4cd8, { 0xc2, 0xe0, 0x87 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xa3e, gbc.sp());
        EXPECT(0x4cdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 023C
        gbc.setState(0x106, 0x8deb, 0xeee0, 0x8a1f, 0x82e1, 0xc05a, 0x0, 0x0);
        gbc.writeMem(0x106, { 0xc2, 0x8f, 0x9f });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x8deb, gbc.sp());
        EXPECT(0x109, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 023D
        gbc.setState(0xc8f4, 0x261d, 0x3820, 0x8b59, 0x44f8, 0x3379, 0x1, 0x0);
        gbc.writeMem(0xc8f4, { 0xc2, 0x14, 0x52 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x261d, gbc.sp());
        EXPECT(0x5214, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xc8f4));
        EXPECT(0x14, gbc.readMem(0xc8f5));
        EXPECT(0x52, gbc.readMem(0xc8f6));
        // C2 023E
        gbc.setState(0xae24, 0xd575, 0x6ec0, 0xa5b1, 0xcd90, 0xb575, 0x1, 0x1);
        gbc.writeMem(0xae24, { 0xc2, 0x71, 0x13 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xd575, gbc.sp());
        EXPECT(0xae27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xae24));
        EXPECT(0x71, gbc.readMem(0xae25));
        EXPECT(0x13, gbc.readMem(0xae26));
        // C2 023F
        gbc.setState(0xc650, 0x333d, 0x15a0, 0x142f, 0x6060, 0x1450, 0x1, 0x1);
        gbc.writeMem(0xc650, { 0xc2, 0x62, 0xcd });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x333d, gbc.sp());
        EXPECT(0xc653, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xc650));
        EXPECT(0x62, gbc.readMem(0xc651));
        EXPECT(0xcd, gbc.readMem(0xc652));
        // C2 0240
        gbc.setState(0x8835, 0x5882, 0x6ef0, 0x50a5, 0xd6f, 0x335f, 0x1, 0x0);
        gbc.writeMem(0x8835, { 0xc2, 0x40, 0xf2 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x5882, gbc.sp());
        EXPECT(0x8838, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x8835));
        EXPECT(0x40, gbc.readMem(0x8836));
        EXPECT(0xf2, gbc.readMem(0x8837));
        // C2 0241
        gbc.setState(0x32dc, 0x468f, 0x12e0, 0x3348, 0xc57e, 0xed10, 0x0, 0x0);
        gbc.writeMem(0x32dc, { 0xc2, 0xb5, 0x4f });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x468f, gbc.sp());
        EXPECT(0x32df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0242
        gbc.setState(0xef63, 0x847d, 0xaa0, 0xed17, 0x73c5, 0x6a89, 0x1, 0x1);
        gbc.writeMem(0xef63, { 0xc2, 0x6f, 0xa6 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x847d, gbc.sp());
        EXPECT(0xef66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xef63));
        EXPECT(0x6f, gbc.readMem(0xef64));
        EXPECT(0xa6, gbc.readMem(0xef65));
        // C2 0243
        gbc.setState(0x56d1, 0x39f3, 0x2a70, 0x5150, 0xb9ad, 0xd531, 0x1, 0x0);
        gbc.writeMem(0x56d1, { 0xc2, 0xdb, 0x98 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x39f3, gbc.sp());
        EXPECT(0x98db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0244
        gbc.setState(0x3e76, 0xf14b, 0x1240, 0xc0bb, 0xc57a, 0xf8f6, 0x1, 0x0);
        gbc.writeMem(0x3e76, { 0xc2, 0xca, 0x4b });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xf14b, gbc.sp());
        EXPECT(0x4bca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0245
        gbc.setState(0x4727, 0x7876, 0xad60, 0x9dcb, 0xec0, 0xd414, 0x1, 0x1);
        gbc.writeMem(0x4727, { 0xc2, 0xfd, 0x97 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x7876, gbc.sp());
        EXPECT(0x97fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0246
        gbc.setState(0xc4a2, 0xf6a6, 0x5ec0, 0x9542, 0xb1e3, 0xa12c, 0x0, 0x0);
        gbc.writeMem(0xc4a2, { 0xc2, 0x52, 0x7f });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xf6a6, gbc.sp());
        EXPECT(0xc4a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xc4a2));
        EXPECT(0x52, gbc.readMem(0xc4a3));
        EXPECT(0x7f, gbc.readMem(0xc4a4));
        // C2 0247
        gbc.setState(0x24ce, 0xeb77, 0x7450, 0xdcc7, 0x591, 0x9243, 0x1, 0x1);
        gbc.writeMem(0x24ce, { 0xc2, 0xc4, 0xee });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xeb77, gbc.sp());
        EXPECT(0xeec4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0248
        gbc.setState(0x2645, 0xccf1, 0xebd0, 0xb14f, 0x48bf, 0x1a49, 0x0, 0x0);
        gbc.writeMem(0x2645, { 0xc2, 0x3, 0x32 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xccf1, gbc.sp());
        EXPECT(0x2648, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0249
        gbc.setState(0xc876, 0xc9de, 0xcf50, 0xd80, 0x91b5, 0x26a4, 0x1, 0x0);
        gbc.writeMem(0xc876, { 0xc2, 0x1b, 0x7f });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xc9de, gbc.sp());
        EXPECT(0x7f1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xc876));
        EXPECT(0x1b, gbc.readMem(0xc877));
        EXPECT(0x7f, gbc.readMem(0xc878));
        // C2 024A
        gbc.setState(0xb891, 0xb624, 0x23b0, 0xdb5b, 0x2e12, 0xe988, 0x0, 0x0);
        gbc.writeMem(0xb891, { 0xc2, 0x52, 0xa1 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xb624, gbc.sp());
        EXPECT(0xb894, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xb891));
        EXPECT(0x52, gbc.readMem(0xb892));
        EXPECT(0xa1, gbc.readMem(0xb893));
        // C2 024B
        gbc.setState(0xd14, 0x2d84, 0xfe60, 0x1454, 0x4bc1, 0x99fb, 0x0, 0x1);
        gbc.writeMem(0xd14, { 0xc2, 0xe7, 0x61 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x2d84, gbc.sp());
        EXPECT(0x61e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 024C
        gbc.setState(0xe77a, 0x9396, 0x2c90, 0xedf9, 0x2734, 0x69e2, 0x0, 0x0);
        gbc.writeMem(0xe77a, { 0xc2, 0x9c, 0x2c });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x9396, gbc.sp());
        EXPECT(0xe77d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xe77a));
        EXPECT(0x9c, gbc.readMem(0xe77b));
        EXPECT(0x2c, gbc.readMem(0xe77c));
        // C2 024D
        gbc.setState(0x8b49, 0xe71e, 0x7ae0, 0x9293, 0x1293, 0x9fd8, 0x1, 0x1);
        gbc.writeMem(0x8b49, { 0xc2, 0x71, 0xe9 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xe71e, gbc.sp());
        EXPECT(0x8b4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x8b49));
        EXPECT(0x71, gbc.readMem(0x8b4a));
        EXPECT(0xe9, gbc.readMem(0x8b4b));
        // C2 024E
        gbc.setState(0x2d8, 0xa5be, 0x8ad0, 0x12d7, 0xf68c, 0x5757, 0x1, 0x0);
        gbc.writeMem(0x2d8, { 0xc2, 0x10, 0xb3 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xa5be, gbc.sp());
        EXPECT(0x2db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 024F
        gbc.setState(0x3aac, 0xff6, 0xe120, 0x3bb5, 0x1ab3, 0x1430, 0x0, 0x0);
        gbc.writeMem(0x3aac, { 0xc2, 0x37, 0x9c });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xff6, gbc.sp());
        EXPECT(0x9c37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0250
        gbc.setState(0xa837, 0x7b96, 0x3b0, 0xbc4, 0x3286, 0x978d, 0x1, 0x0);
        gbc.writeMem(0xa837, { 0xc2, 0xcd, 0xe6 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x7b96, gbc.sp());
        EXPECT(0xa83a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xa837));
        EXPECT(0xcd, gbc.readMem(0xa838));
        EXPECT(0xe6, gbc.readMem(0xa839));
        // C2 0251
        gbc.setState(0xdfff, 0x61b4, 0x4050, 0x1031, 0xa647, 0xdae2, 0x1, 0x1);
        gbc.writeMem(0xdfff, { 0xc2, 0x17, 0xd5 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x61b4, gbc.sp());
        EXPECT(0xd517, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xdfff));
        EXPECT(0x17, gbc.readMem(0xe000));
        EXPECT(0xd5, gbc.readMem(0xe001));
        // C2 0252
        gbc.setState(0x6bdf, 0xadbb, 0x66a0, 0x440a, 0x75c5, 0x8c02, 0x0, 0x1);
        gbc.writeMem(0x6bdf, { 0xc2, 0xe, 0x83 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xadbb, gbc.sp());
        EXPECT(0x6be2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0254
        gbc.setState(0x16eb, 0xad22, 0x8340, 0xc537, 0xc670, 0x5d55, 0x1, 0x1);
        gbc.writeMem(0x16eb, { 0xc2, 0x57, 0xbb });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xad22, gbc.sp());
        EXPECT(0xbb57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0255
        gbc.setState(0x3f55, 0x6353, 0x6ac0, 0xbc25, 0xa828, 0x7c83, 0x0, 0x1);
        gbc.writeMem(0x3f55, { 0xc2, 0x13, 0x30 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x6353, gbc.sp());
        EXPECT(0x3f58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0256
        gbc.setState(0xb629, 0x1b97, 0x7550, 0x6317, 0x216f, 0x984c, 0x0, 0x0);
        gbc.writeMem(0xb629, { 0xc2, 0x3e, 0x7f });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x1b97, gbc.sp());
        EXPECT(0x7f3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xb629));
        EXPECT(0x3e, gbc.readMem(0xb62a));
        EXPECT(0x7f, gbc.readMem(0xb62b));
        // C2 0257
        gbc.setState(0x6afb, 0xd0f4, 0xf400, 0xaec5, 0x44e1, 0xa0e0, 0x1, 0x0);
        gbc.writeMem(0x6afb, { 0xc2, 0x27, 0x46 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xd0f4, gbc.sp());
        EXPECT(0x4627, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0258
        gbc.setState(0x5f9b, 0x2b0, 0x67f0, 0x216b, 0x521f, 0xf0b9, 0x1, 0x1);
        gbc.writeMem(0x5f9b, { 0xc2, 0x7b, 0x8d });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x2b0, gbc.sp());
        EXPECT(0x5f9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0259
        gbc.setState(0x767f, 0xc02d, 0xfd80, 0xfdd4, 0xe582, 0xde71, 0x0, 0x1);
        gbc.writeMem(0x767f, { 0xc2, 0x92, 0xb0 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xc02d, gbc.sp());
        EXPECT(0x7682, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 025A
        gbc.setState(0xea2c, 0x5d3d, 0xab00, 0x6187, 0xd538, 0x62a5, 0x0, 0x0);
        gbc.writeMem(0xea2c, { 0xc2, 0x90, 0x40 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x5d3d, gbc.sp());
        EXPECT(0x4090, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xea2c));
        EXPECT(0x90, gbc.readMem(0xea2d));
        EXPECT(0x40, gbc.readMem(0xea2e));
        // C2 025B
        gbc.setState(0x18e4, 0xc4b4, 0x56c0, 0x7382, 0x2987, 0x5030, 0x0, 0x1);
        gbc.writeMem(0x18e4, { 0xc2, 0x60, 0xc5 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xc4b4, gbc.sp());
        EXPECT(0x18e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 025C
        gbc.setState(0x8512, 0x12e, 0xbfd0, 0xc4b1, 0x8fd5, 0xe06c, 0x0, 0x1);
        gbc.writeMem(0x8512, { 0xc2, 0x59, 0xf7 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x12e, gbc.sp());
        EXPECT(0x8515, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x8512));
        EXPECT(0x59, gbc.readMem(0x8513));
        EXPECT(0xf7, gbc.readMem(0x8514));
        // C2 025D
        gbc.setState(0x1254, 0xd390, 0x10e0, 0x2ac3, 0xe6b9, 0x8f77, 0x1, 0x1);
        gbc.writeMem(0x1254, { 0xc2, 0xf2, 0x3a });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xd390, gbc.sp());
        EXPECT(0x1257, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 025E
        gbc.setState(0x6b02, 0x5373, 0xe650, 0x3f13, 0xe9be, 0xedf2, 0x0, 0x0);
        gbc.writeMem(0x6b02, { 0xc2, 0xe, 0xbe });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x5373, gbc.sp());
        EXPECT(0xbe0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 025F
        gbc.setState(0x50ba, 0x81d9, 0x1de0, 0x5fe8, 0x6bb0, 0x2d52, 0x1, 0x0);
        gbc.writeMem(0x50ba, { 0xc2, 0x1a, 0xb4 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x81d9, gbc.sp());
        EXPECT(0x50bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0260
        gbc.setState(0xaefb, 0x6f39, 0x4600, 0xae9a, 0x37fe, 0xb8d9, 0x0, 0x1);
        gbc.writeMem(0xaefb, { 0xc2, 0x2b, 0x1d });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x6f39, gbc.sp());
        EXPECT(0x1d2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xaefb));
        EXPECT(0x2b, gbc.readMem(0xaefc));
        EXPECT(0x1d, gbc.readMem(0xaefd));
        // C2 0261
        gbc.setState(0x4e34, 0x57fc, 0xdbb0, 0x9352, 0x6e40, 0x62e, 0x0, 0x1);
        gbc.writeMem(0x4e34, { 0xc2, 0x4d, 0x74 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x57fc, gbc.sp());
        EXPECT(0x4e37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0262
        gbc.setState(0xdfd5, 0xc46c, 0x2e70, 0x5e7f, 0xb882, 0x25e0, 0x1, 0x0);
        gbc.writeMem(0xdfd5, { 0xc2, 0xac, 0xb8 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xc46c, gbc.sp());
        EXPECT(0xb8ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xdfd5));
        EXPECT(0xac, gbc.readMem(0xdfd6));
        EXPECT(0xb8, gbc.readMem(0xdfd7));
        // C2 0263
        gbc.setState(0x3115, 0xb45f, 0x48c0, 0x231c, 0x9e66, 0x88c3, 0x1, 0x1);
        gbc.writeMem(0x3115, { 0xc2, 0xa0, 0xe7 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xb45f, gbc.sp());
        EXPECT(0x3118, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0264
        gbc.setState(0xa3dc, 0x531, 0x8db0, 0x446d, 0x4362, 0xd404, 0x1, 0x1);
        gbc.writeMem(0xa3dc, { 0xc2, 0x52, 0xf3 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x531, gbc.sp());
        EXPECT(0xa3df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xa3dc));
        EXPECT(0x52, gbc.readMem(0xa3dd));
        EXPECT(0xf3, gbc.readMem(0xa3de));
        // C2 0266
        gbc.setState(0xd833, 0x1c07, 0x35e0, 0x462a, 0xbe9, 0x6eee, 0x1, 0x1);
        gbc.writeMem(0xd833, { 0xc2, 0x47, 0xea });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x1c07, gbc.sp());
        EXPECT(0xd836, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xd833));
        EXPECT(0x47, gbc.readMem(0xd834));
        EXPECT(0xea, gbc.readMem(0xd835));
        // C2 0267
        gbc.setState(0xcfa2, 0x777a, 0x7470, 0xc04c, 0xadb6, 0x9646, 0x1, 0x1);
        gbc.writeMem(0xcfa2, { 0xc2, 0x8c, 0xeb });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x777a, gbc.sp());
        EXPECT(0xeb8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xcfa2));
        EXPECT(0x8c, gbc.readMem(0xcfa3));
        EXPECT(0xeb, gbc.readMem(0xcfa4));
        // C2 0268
        gbc.setState(0xc30e, 0x3a18, 0x1df0, 0xbd7e, 0x422f, 0xe63, 0x0, 0x1);
        gbc.writeMem(0xc30e, { 0xc2, 0xd8, 0x21 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x3a18, gbc.sp());
        EXPECT(0xc311, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xc30e));
        EXPECT(0xd8, gbc.readMem(0xc30f));
        EXPECT(0x21, gbc.readMem(0xc310));
        // C2 0269
        gbc.setState(0x11ea, 0x79ab, 0xdaa0, 0x30ab, 0x8767, 0xdaef, 0x0, 0x0);
        gbc.writeMem(0x11ea, { 0xc2, 0xf0, 0x56 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x79ab, gbc.sp());
        EXPECT(0x11ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 026A
        gbc.setState(0x1670, 0x3b60, 0xd510, 0x3fd, 0xc6f9, 0x8b9c, 0x1, 0x0);
        gbc.writeMem(0x1670, { 0xc2, 0x88, 0xf4 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x3b60, gbc.sp());
        EXPECT(0xf488, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 026B
        gbc.setState(0x288b, 0x5914, 0x3b00, 0xd18f, 0xafe3, 0x1b88, 0x1, 0x0);
        gbc.writeMem(0x288b, { 0xc2, 0xb5, 0x47 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x5914, gbc.sp());
        EXPECT(0x47b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 026C
        gbc.setState(0xa917, 0x5093, 0x3470, 0x1687, 0xcf32, 0x866, 0x0, 0x1);
        gbc.writeMem(0xa917, { 0xc2, 0x86, 0x8e });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x5093, gbc.sp());
        EXPECT(0x8e86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xa917));
        EXPECT(0x86, gbc.readMem(0xa918));
        EXPECT(0x8e, gbc.readMem(0xa919));
        // C2 026E
        gbc.setState(0x48ed, 0xa543, 0xc010, 0x9ca4, 0x4aee, 0xbe8e, 0x1, 0x1);
        gbc.writeMem(0x48ed, { 0xc2, 0xdf, 0x2a });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xa543, gbc.sp());
        EXPECT(0x2adf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 026F
        gbc.setState(0x368c, 0xd7c7, 0x3e50, 0x1455, 0xaba9, 0xccd8, 0x0, 0x1);
        gbc.writeMem(0x368c, { 0xc2, 0x90, 0xe2 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xd7c7, gbc.sp());
        EXPECT(0xe290, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0270
        gbc.setState(0xdb4e, 0xbe7f, 0x32e0, 0xd1dc, 0x420f, 0x4fee, 0x1, 0x0);
        gbc.writeMem(0xdb4e, { 0xc2, 0xb5, 0xbe });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xbe7f, gbc.sp());
        EXPECT(0xdb51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xdb4e));
        EXPECT(0xb5, gbc.readMem(0xdb4f));
        EXPECT(0xbe, gbc.readMem(0xdb50));
        // C2 0271
        gbc.setState(0x4e58, 0xbdac, 0xf980, 0x9055, 0xb4bc, 0xd859, 0x0, 0x1);
        gbc.writeMem(0x4e58, { 0xc2, 0xb0, 0xc3 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xbdac, gbc.sp());
        EXPECT(0x4e5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0272
        gbc.setState(0x29f1, 0xa4ef, 0x91b0, 0xbfc2, 0xdb84, 0x709f, 0x1, 0x1);
        gbc.writeMem(0x29f1, { 0xc2, 0x91, 0x69 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xa4ef, gbc.sp());
        EXPECT(0x29f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0274
        gbc.setState(0x758b, 0xa6ff, 0x5650, 0xec63, 0x89c5, 0x2d48, 0x1, 0x1);
        gbc.writeMem(0x758b, { 0xc2, 0xf0, 0xeb });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xa6ff, gbc.sp());
        EXPECT(0xebf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0275
        gbc.setState(0xe27, 0xd013, 0x6440, 0xc066, 0x875d, 0x19f2, 0x1, 0x1);
        gbc.writeMem(0xe27, { 0xc2, 0x40, 0xd7 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xd013, gbc.sp());
        EXPECT(0xd740, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0276
        gbc.setState(0xe17, 0xf5ec, 0x1190, 0xaab6, 0xa578, 0xc9a1, 0x1, 0x0);
        gbc.writeMem(0xe17, { 0xc2, 0xf8, 0xb8 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xf5ec, gbc.sp());
        EXPECT(0xe1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0277
        gbc.setState(0xa92d, 0xfc38, 0x4c10, 0x1776, 0xb13, 0x963d, 0x1, 0x0);
        gbc.writeMem(0xa92d, { 0xc2, 0xda, 0x99 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xfc38, gbc.sp());
        EXPECT(0x99da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xa92d));
        EXPECT(0xda, gbc.readMem(0xa92e));
        EXPECT(0x99, gbc.readMem(0xa92f));
        // C2 0278
        gbc.setState(0xa1ad, 0x4d4f, 0xa710, 0x2052, 0x7815, 0xba40, 0x0, 0x0);
        gbc.writeMem(0xa1ad, { 0xc2, 0xd1, 0xcc });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x4d4f, gbc.sp());
        EXPECT(0xccd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xa1ad));
        EXPECT(0xd1, gbc.readMem(0xa1ae));
        EXPECT(0xcc, gbc.readMem(0xa1af));
        // C2 0279
        gbc.setState(0xb086, 0x314e, 0xc90, 0xfbfc, 0x39e6, 0x5fe8, 0x0, 0x0);
        gbc.writeMem(0xb086, { 0xc2, 0x2e, 0xc1 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x314e, gbc.sp());
        EXPECT(0xb089, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xb086));
        EXPECT(0x2e, gbc.readMem(0xb087));
        EXPECT(0xc1, gbc.readMem(0xb088));
        // C2 027A
        gbc.setState(0xbb1a, 0x5e65, 0x6240, 0x17e3, 0xc4a1, 0x74b0, 0x0, 0x1);
        gbc.writeMem(0xbb1a, { 0xc2, 0x93, 0x3e });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x5e65, gbc.sp());
        EXPECT(0x3e93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xbb1a));
        EXPECT(0x93, gbc.readMem(0xbb1b));
        EXPECT(0x3e, gbc.readMem(0xbb1c));
        // C2 027B
        gbc.setState(0x6eeb, 0x1f5, 0xf2e0, 0x15c6, 0xd0b8, 0xba70, 0x0, 0x0);
        gbc.writeMem(0x6eeb, { 0xc2, 0xc6, 0x4e });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x1f5, gbc.sp());
        EXPECT(0x6eee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 027C
        gbc.setState(0x5288, 0xcd22, 0xba20, 0xa818, 0xbe4a, 0x2b73, 0x0, 0x1);
        gbc.writeMem(0x5288, { 0xc2, 0xa4, 0x62 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xcd22, gbc.sp());
        EXPECT(0x62a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 027D
        gbc.setState(0xd9ca, 0xd21c, 0xe7c0, 0xfd3f, 0x2a3c, 0x7ca2, 0x0, 0x1);
        gbc.writeMem(0xd9ca, { 0xc2, 0x7e, 0xa9 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xd21c, gbc.sp());
        EXPECT(0xd9cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xd9ca));
        EXPECT(0x7e, gbc.readMem(0xd9cb));
        EXPECT(0xa9, gbc.readMem(0xd9cc));
        // C2 027E
        gbc.setState(0xb50a, 0xdb99, 0xbf10, 0x4b79, 0x72fc, 0x7961, 0x1, 0x1);
        gbc.writeMem(0xb50a, { 0xc2, 0xd3, 0xf8 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xdb99, gbc.sp());
        EXPECT(0xf8d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xb50a));
        EXPECT(0xd3, gbc.readMem(0xb50b));
        EXPECT(0xf8, gbc.readMem(0xb50c));
        // C2 0280
        gbc.setState(0x6a0e, 0xc51f, 0x1860, 0xd1d0, 0x9e38, 0xea56, 0x1, 0x1);
        gbc.writeMem(0x6a0e, { 0xc2, 0x4d, 0x30 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xc51f, gbc.sp());
        EXPECT(0x304d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0281
        gbc.setState(0x7382, 0x464e, 0x5d0, 0xc102, 0x8767, 0x2214, 0x1, 0x1);
        gbc.writeMem(0x7382, { 0xc2, 0xc6, 0xdd });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x464e, gbc.sp());
        EXPECT(0x7385, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0282
        gbc.setState(0xe22e, 0xa93b, 0x13e0, 0xc663, 0x1793, 0x3350, 0x0, 0x1);
        gbc.writeMem(0xe22e, { 0xc2, 0x5f, 0x29 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xa93b, gbc.sp());
        EXPECT(0xe231, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xe22e));
        EXPECT(0x5f, gbc.readMem(0xe22f));
        EXPECT(0x29, gbc.readMem(0xe230));
        // C2 0283
        gbc.setState(0xad2e, 0x137c, 0x1d40, 0x77d7, 0xc27f, 0x48e7, 0x1, 0x0);
        gbc.writeMem(0xad2e, { 0xc2, 0x8, 0x8b });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x137c, gbc.sp());
        EXPECT(0x8b08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xad2e));
        EXPECT(0x8, gbc.readMem(0xad2f));
        EXPECT(0x8b, gbc.readMem(0xad30));
        // C2 0284
        gbc.setState(0xee79, 0x5c5e, 0x45b0, 0x4c2b, 0xfcf7, 0x7b69, 0x1, 0x1);
        gbc.writeMem(0xee79, { 0xc2, 0x25, 0x7f });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x5c5e, gbc.sp());
        EXPECT(0xee7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xee79));
        EXPECT(0x25, gbc.readMem(0xee7a));
        EXPECT(0x7f, gbc.readMem(0xee7b));
        // C2 0285
        gbc.setState(0x6612, 0x3a3c, 0xb4a0, 0x5a50, 0x998e, 0x3ce9, 0x1, 0x0);
        gbc.writeMem(0x6612, { 0xc2, 0x8, 0xf });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x3a3c, gbc.sp());
        EXPECT(0x6615, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0286
        gbc.setState(0x789a, 0x4c69, 0x38d0, 0x5835, 0x7fab, 0x3715, 0x0, 0x0);
        gbc.writeMem(0x789a, { 0xc2, 0xca, 0x7d });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x4c69, gbc.sp());
        EXPECT(0x789d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0287
        gbc.setState(0x5d95, 0x4a1a, 0xd40, 0x523, 0x40df, 0x3fc3, 0x0, 0x1);
        gbc.writeMem(0x5d95, { 0xc2, 0xe3, 0x2a });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x4a1a, gbc.sp());
        EXPECT(0x2ae3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0288
        gbc.setState(0x5374, 0xfae2, 0xb8b0, 0x1f74, 0x4986, 0x181f, 0x0, 0x0);
        gbc.writeMem(0x5374, { 0xc2, 0xca, 0x3b });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xfae2, gbc.sp());
        EXPECT(0x5377, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0289
        gbc.setState(0x4fe9, 0x7638, 0xdd70, 0xc9ef, 0x8977, 0xb113, 0x1, 0x1);
        gbc.writeMem(0x4fe9, { 0xc2, 0x43, 0x20 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x7638, gbc.sp());
        EXPECT(0x2043, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 028A
        gbc.setState(0x186e, 0xdf4c, 0x42c0, 0x8d65, 0x525b, 0x7a2e, 0x0, 0x0);
        gbc.writeMem(0x186e, { 0xc2, 0x77, 0x2c });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xdf4c, gbc.sp());
        EXPECT(0x1871, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 028B
        gbc.setState(0xe381, 0x2f79, 0x1020, 0x9a56, 0x929, 0xd64c, 0x0, 0x0);
        gbc.writeMem(0xe381, { 0xc2, 0x61, 0x8b });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x2f79, gbc.sp());
        EXPECT(0x8b61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xe381));
        EXPECT(0x61, gbc.readMem(0xe382));
        EXPECT(0x8b, gbc.readMem(0xe383));
        // C2 028C
        gbc.setState(0xa0bf, 0x1ac, 0x3660, 0xadeb, 0x5b25, 0x98c5, 0x1, 0x0);
        gbc.writeMem(0xa0bf, { 0xc2, 0x87, 0xe6 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x1ac, gbc.sp());
        EXPECT(0xe687, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xa0bf));
        EXPECT(0x87, gbc.readMem(0xa0c0));
        EXPECT(0xe6, gbc.readMem(0xa0c1));
        // C2 028D
        gbc.setState(0xe6bb, 0xa638, 0x7460, 0x7e87, 0x8ae2, 0x8ae0, 0x1, 0x1);
        gbc.writeMem(0xe6bb, { 0xc2, 0x55, 0xfd });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xa638, gbc.sp());
        EXPECT(0xfd55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xe6bb));
        EXPECT(0x55, gbc.readMem(0xe6bc));
        EXPECT(0xfd, gbc.readMem(0xe6bd));
        // C2 028E
        gbc.setState(0xa93c, 0x31d0, 0x7960, 0x3b3e, 0xef1d, 0xfcc5, 0x1, 0x1);
        gbc.writeMem(0xa93c, { 0xc2, 0x22, 0x3a });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x31d0, gbc.sp());
        EXPECT(0x3a22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xa93c));
        EXPECT(0x22, gbc.readMem(0xa93d));
        EXPECT(0x3a, gbc.readMem(0xa93e));
        // C2 028F
        gbc.setState(0x50e1, 0xe169, 0x7160, 0x185b, 0x733f, 0x908c, 0x1, 0x0);
        gbc.writeMem(0x50e1, { 0xc2, 0xc3, 0x3e });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xe169, gbc.sp());
        EXPECT(0x3ec3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0290
        gbc.setState(0xef58, 0x21, 0xc4a0, 0x96bb, 0x6a7a, 0x1034, 0x0, 0x1);
        gbc.writeMem(0xef58, { 0xc2, 0xf6, 0x13 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x21, gbc.sp());
        EXPECT(0xef5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xef58));
        EXPECT(0xf6, gbc.readMem(0xef59));
        EXPECT(0x13, gbc.readMem(0xef5a));
        // C2 0291
        gbc.setState(0xcdce, 0x298a, 0x21b0, 0x6e27, 0x7e0b, 0xe893, 0x1, 0x1);
        gbc.writeMem(0xcdce, { 0xc2, 0xb9, 0xec });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x298a, gbc.sp());
        EXPECT(0xcdd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xcdce));
        EXPECT(0xb9, gbc.readMem(0xcdcf));
        EXPECT(0xec, gbc.readMem(0xcdd0));
        // C2 0292
        gbc.setState(0xc5de, 0x4a89, 0xdc60, 0x4dcf, 0xf2eb, 0x273f, 0x0, 0x0);
        gbc.writeMem(0xc5de, { 0xc2, 0x92, 0x3a });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x4a89, gbc.sp());
        EXPECT(0x3a92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xc5de));
        EXPECT(0x92, gbc.readMem(0xc5df));
        EXPECT(0x3a, gbc.readMem(0xc5e0));
        // C2 0293
        gbc.setState(0x1b09, 0x860c, 0x9ed0, 0xc46a, 0x1172, 0x329d, 0x0, 0x1);
        gbc.writeMem(0x1b09, { 0xc2, 0x85, 0x49 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x860c, gbc.sp());
        EXPECT(0x1b0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0294
        gbc.setState(0xda21, 0x1cc, 0xe340, 0x992, 0xf7c5, 0xe37c, 0x0, 0x0);
        gbc.writeMem(0xda21, { 0xc2, 0xd, 0xa1 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x1cc, gbc.sp());
        EXPECT(0xa10d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xda21));
        EXPECT(0xd, gbc.readMem(0xda22));
        EXPECT(0xa1, gbc.readMem(0xda23));
        // C2 0295
        gbc.setState(0xdca0, 0xa8c5, 0x8fb0, 0x5bf1, 0x22af, 0xe2ed, 0x1, 0x0);
        gbc.writeMem(0xdca0, { 0xc2, 0xe8, 0x54 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xa8c5, gbc.sp());
        EXPECT(0xdca3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xdca0));
        EXPECT(0xe8, gbc.readMem(0xdca1));
        EXPECT(0x54, gbc.readMem(0xdca2));
        // C2 0298
        gbc.setState(0x649e, 0x9d12, 0x6e30, 0x2641, 0xe6d0, 0x7b18, 0x1, 0x1);
        gbc.writeMem(0x649e, { 0xc2, 0xe2, 0x98 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x9d12, gbc.sp());
        EXPECT(0x98e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 029A
        gbc.setState(0x5534, 0xd9af, 0xfa80, 0xe199, 0x430, 0x77f9, 0x1, 0x0);
        gbc.writeMem(0x5534, { 0xc2, 0xef, 0x7a });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xd9af, gbc.sp());
        EXPECT(0x5537, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 029B
        gbc.setState(0x8aa0, 0x4c1c, 0x8f60, 0xe04a, 0x3700, 0xbe38, 0x0, 0x0);
        gbc.writeMem(0x8aa0, { 0xc2, 0xc1, 0x16 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x4c1c, gbc.sp());
        EXPECT(0x16c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x8aa0));
        EXPECT(0xc1, gbc.readMem(0x8aa1));
        EXPECT(0x16, gbc.readMem(0x8aa2));
        // C2 029C
        gbc.setState(0xd186, 0xf7e9, 0x36e0, 0x1cfd, 0x75de, 0x4a59, 0x1, 0x1);
        gbc.writeMem(0xd186, { 0xc2, 0xed, 0x62 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xf7e9, gbc.sp());
        EXPECT(0xd189, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xd186));
        EXPECT(0xed, gbc.readMem(0xd187));
        EXPECT(0x62, gbc.readMem(0xd188));
        // C2 029D
        gbc.setState(0x6c75, 0xc378, 0xce80, 0xdd3a, 0x7c8, 0xd79d, 0x1, 0x0);
        gbc.writeMem(0x6c75, { 0xc2, 0xa, 0x76 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xc378, gbc.sp());
        EXPECT(0x6c78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 029E
        gbc.setState(0xbcab, 0x25d6, 0x1b00, 0x46e6, 0x8147, 0xc80, 0x1, 0x1);
        gbc.writeMem(0xbcab, { 0xc2, 0x5d, 0x96 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x25d6, gbc.sp());
        EXPECT(0x965d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xbcab));
        EXPECT(0x5d, gbc.readMem(0xbcac));
        EXPECT(0x96, gbc.readMem(0xbcad));
        // C2 029F
        gbc.setState(0x86c6, 0x3bc7, 0xc030, 0x51ca, 0x1c5b, 0x5c38, 0x0, 0x0);
        gbc.writeMem(0x86c6, { 0xc2, 0xd8, 0x65 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x3bc7, gbc.sp());
        EXPECT(0x65d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x86c6));
        EXPECT(0xd8, gbc.readMem(0x86c7));
        EXPECT(0x65, gbc.readMem(0x86c8));
        // C2 02A0
        gbc.setState(0x9090, 0xbef9, 0xf830, 0xfbd3, 0xc60e, 0xeb1a, 0x0, 0x0);
        gbc.writeMem(0x9090, { 0xc2, 0x94, 0xe3 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xbef9, gbc.sp());
        EXPECT(0xe394, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x9090));
        EXPECT(0x94, gbc.readMem(0x9091));
        EXPECT(0xe3, gbc.readMem(0x9092));
        // C2 02A1
        gbc.setState(0x7155, 0xe2b6, 0x8840, 0xc957, 0x2792, 0x7c9a, 0x1, 0x1);
        gbc.writeMem(0x7155, { 0xc2, 0x77, 0xe5 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xe2b6, gbc.sp());
        EXPECT(0xe577, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 02A2
        gbc.setState(0xa388, 0xbf9, 0x2b10, 0xa344, 0xf493, 0x5d62, 0x1, 0x1);
        gbc.writeMem(0xa388, { 0xc2, 0x70, 0xe9 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xbf9, gbc.sp());
        EXPECT(0xe970, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xa388));
        EXPECT(0x70, gbc.readMem(0xa389));
        EXPECT(0xe9, gbc.readMem(0xa38a));
        // C2 02A3
        gbc.setState(0x8947, 0x8ff3, 0xddc0, 0x2b88, 0xa1ed, 0x8621, 0x1, 0x0);
        gbc.writeMem(0x8947, { 0xc2, 0x9b, 0x12 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x8ff3, gbc.sp());
        EXPECT(0x894a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x8947));
        EXPECT(0x9b, gbc.readMem(0x8948));
        EXPECT(0x12, gbc.readMem(0x8949));
        // C2 02A4
        gbc.setState(0xb04b, 0x6a81, 0x9820, 0x9a82, 0xed65, 0x601b, 0x0, 0x0);
        gbc.writeMem(0xb04b, { 0xc2, 0x6c, 0x9 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x6a81, gbc.sp());
        EXPECT(0x96c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xb04b));
        EXPECT(0x6c, gbc.readMem(0xb04c));
        EXPECT(0x9, gbc.readMem(0xb04d));
        // C2 02A5
        gbc.setState(0xb649, 0xaf8e, 0x3080, 0x77b4, 0xfafa, 0xab0d, 0x1, 0x1);
        gbc.writeMem(0xb649, { 0xc2, 0x23, 0xa3 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xaf8e, gbc.sp());
        EXPECT(0xb64c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xb649));
        EXPECT(0x23, gbc.readMem(0xb64a));
        EXPECT(0xa3, gbc.readMem(0xb64b));
        // C2 02A6
        gbc.setState(0x878d, 0x1139, 0xe270, 0xa70d, 0x3d98, 0x55be, 0x0, 0x1);
        gbc.writeMem(0x878d, { 0xc2, 0x66, 0xfd });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x1139, gbc.sp());
        EXPECT(0xfd66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x878d));
        EXPECT(0x66, gbc.readMem(0x878e));
        EXPECT(0xfd, gbc.readMem(0x878f));
        // C2 02A7
        gbc.setState(0x9a, 0x103a, 0xcc20, 0x9125, 0xa549, 0xbd51, 0x1, 0x1);
        gbc.writeMem(0x9a, { 0xc2, 0x61, 0x78 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x103a, gbc.sp());
        EXPECT(0x7861, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 02A8
        gbc.setState(0xc416, 0xdf16, 0x8430, 0xdf32, 0x87db, 0xd7e8, 0x1, 0x1);
        gbc.writeMem(0xc416, { 0xc2, 0xee, 0xc3 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xdf16, gbc.sp());
        EXPECT(0xc3ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xc416));
        EXPECT(0xee, gbc.readMem(0xc417));
        EXPECT(0xc3, gbc.readMem(0xc418));
        // C2 02A9
        gbc.setState(0xfd1, 0xdd2e, 0xb890, 0x26a8, 0xdb2, 0xede7, 0x1, 0x1);
        gbc.writeMem(0xfd1, { 0xc2, 0x1, 0xb1 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xdd2e, gbc.sp());
        EXPECT(0xfd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 02AA
        gbc.setState(0x9c69, 0x9731, 0x5a90, 0xf7b7, 0x2ac6, 0x7ad7, 0x0, 0x0);
        gbc.writeMem(0x9c69, { 0xc2, 0xa2, 0x31 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x9731, gbc.sp());
        EXPECT(0x9c6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x9c69));
        EXPECT(0xa2, gbc.readMem(0x9c6a));
        EXPECT(0x31, gbc.readMem(0x9c6b));
        // C2 02AB
        gbc.setState(0x20d, 0xe10b, 0x4120, 0x29cc, 0x6fe8, 0xa887, 0x0, 0x1);
        gbc.writeMem(0x20d, { 0xc2, 0xc6, 0x51 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xe10b, gbc.sp());
        EXPECT(0x51c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 02AC
        gbc.setState(0x4adb, 0x4d4c, 0x1360, 0x76d3, 0xfba3, 0xfa8e, 0x1, 0x0);
        gbc.writeMem(0x4adb, { 0xc2, 0x8b, 0x50 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x4d4c, gbc.sp());
        EXPECT(0x508b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 02AD
        gbc.setState(0xda5e, 0x8531, 0xaf30, 0x2ed9, 0xfeee, 0x804e, 0x1, 0x0);
        gbc.writeMem(0xda5e, { 0xc2, 0x6c, 0xaa });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x8531, gbc.sp());
        EXPECT(0xaa6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xda5e));
        EXPECT(0x6c, gbc.readMem(0xda5f));
        EXPECT(0xaa, gbc.readMem(0xda60));
        // C2 02AE
        gbc.setState(0x3788, 0x98d6, 0x3230, 0x3159, 0x5e81, 0x1acd, 0x0, 0x0);
        gbc.writeMem(0x3788, { 0xc2, 0xe6, 0xe1 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x98d6, gbc.sp());
        EXPECT(0xe1e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 02B0
        gbc.setState(0xd54c, 0x31ed, 0x600, 0x95ee, 0xd388, 0x5547, 0x0, 0x0);
        gbc.writeMem(0xd54c, { 0xc2, 0xe1, 0x68 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x31ed, gbc.sp());
        EXPECT(0x68e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xd54c));
        EXPECT(0xe1, gbc.readMem(0xd54d));
        EXPECT(0x68, gbc.readMem(0xd54e));
        // C2 02B1
        gbc.setState(0xda4f, 0xb478, 0xc370, 0x74ee, 0xe9c1, 0xfb8a, 0x1, 0x1);
        gbc.writeMem(0xda4f, { 0xc2, 0x92, 0xbf });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xb478, gbc.sp());
        EXPECT(0xbf92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xda4f));
        EXPECT(0x92, gbc.readMem(0xda50));
        EXPECT(0xbf, gbc.readMem(0xda51));
        // C2 02B2
        gbc.setState(0xcb67, 0x7260, 0xda90, 0x9e96, 0x1dab, 0xb211, 0x1, 0x1);
        gbc.writeMem(0xcb67, { 0xc2, 0xf8, 0xfc });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x7260, gbc.sp());
        EXPECT(0xcb6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xcb67));
        EXPECT(0xf8, gbc.readMem(0xcb68));
        EXPECT(0xfc, gbc.readMem(0xcb69));
        // C2 02B3
        gbc.setState(0xe82c, 0x57c2, 0xb8c0, 0x573e, 0x3eca, 0x40f0, 0x1, 0x0);
        gbc.writeMem(0xe82c, { 0xc2, 0x30, 0x50 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x57c2, gbc.sp());
        EXPECT(0xe82f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xe82c));
        EXPECT(0x30, gbc.readMem(0xe82d));
        EXPECT(0x50, gbc.readMem(0xe82e));
        // C2 02B4
        gbc.setState(0x606a, 0x650b, 0xf5f0, 0x9f01, 0xb554, 0xe4a4, 0x1, 0x1);
        gbc.writeMem(0x606a, { 0xc2, 0xad, 0x1e });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x650b, gbc.sp());
        EXPECT(0x606d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 02B5
        gbc.setState(0x6a47, 0x7d49, 0xdb90, 0x328f, 0x7e37, 0xb81f, 0x1, 0x1);
        gbc.writeMem(0x6a47, { 0xc2, 0xad, 0x8b });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x7d49, gbc.sp());
        EXPECT(0x6a4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 02B6
        gbc.setState(0x32b8, 0x115a, 0x9700, 0x30a3, 0x9f35, 0x2a2e, 0x1, 0x1);
        gbc.writeMem(0x32b8, { 0xc2, 0x54, 0xf9 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x115a, gbc.sp());
        EXPECT(0xf954, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 02B7
        gbc.setState(0xc46f, 0x448a, 0x5530, 0x19c3, 0x63e0, 0x6aa, 0x1, 0x0);
        gbc.writeMem(0xc46f, { 0xc2, 0x5b, 0xeb });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x448a, gbc.sp());
        EXPECT(0xeb5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xc46f));
        EXPECT(0x5b, gbc.readMem(0xc470));
        EXPECT(0xeb, gbc.readMem(0xc471));
        // C2 02B8
        gbc.setState(0x9bce, 0x721f, 0xb030, 0xa403, 0x1be2, 0x5737, 0x0, 0x0);
        gbc.writeMem(0x9bce, { 0xc2, 0x71, 0x52 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x721f, gbc.sp());
        EXPECT(0x5271, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x9bce));
        EXPECT(0x71, gbc.readMem(0x9bcf));
        EXPECT(0x52, gbc.readMem(0x9bd0));
        // C2 02B9
        gbc.setState(0xa033, 0xdb3d, 0x51f0, 0x66e9, 0x48bc, 0x9237, 0x1, 0x1);
        gbc.writeMem(0xa033, { 0xc2, 0x87, 0x88 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xdb3d, gbc.sp());
        EXPECT(0xa036, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xa033));
        EXPECT(0x87, gbc.readMem(0xa034));
        EXPECT(0x88, gbc.readMem(0xa035));
        // C2 02BA
        gbc.setState(0x7a74, 0x8052, 0x3d30, 0xab18, 0xdd13, 0x37d8, 0x1, 0x1);
        gbc.writeMem(0x7a74, { 0xc2, 0x20, 0x22 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x8052, gbc.sp());
        EXPECT(0x2220, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 02BB
        gbc.setState(0x831c, 0xa98a, 0x9200, 0x512b, 0xc330, 0xd81c, 0x0, 0x1);
        gbc.writeMem(0x831c, { 0xc2, 0x21, 0xd5 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xa98a, gbc.sp());
        EXPECT(0xd521, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x831c));
        EXPECT(0x21, gbc.readMem(0x831d));
        EXPECT(0xd5, gbc.readMem(0x831e));
        // C2 02BC
        gbc.setState(0x8ab0, 0xb76, 0x4ed0, 0x5f6f, 0xf8f5, 0xf4af, 0x0, 0x0);
        gbc.writeMem(0x8ab0, { 0xc2, 0x96, 0x9c });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xb76, gbc.sp());
        EXPECT(0x8ab3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x8ab0));
        EXPECT(0x96, gbc.readMem(0x8ab1));
        EXPECT(0x9c, gbc.readMem(0x8ab2));
        // C2 02BD
        gbc.setState(0xeb88, 0x301a, 0xf870, 0x5adb, 0x92c9, 0xfe23, 0x0, 0x0);
        gbc.writeMem(0xeb88, { 0xc2, 0xf2, 0xd7 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x301a, gbc.sp());
        EXPECT(0xd7f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xeb88));
        EXPECT(0xf2, gbc.readMem(0xeb89));
        EXPECT(0xd7, gbc.readMem(0xeb8a));
        // C2 02BE
        gbc.setState(0xa8ab, 0x9712, 0xd3f0, 0xa8a9, 0x3221, 0x7446, 0x0, 0x1);
        gbc.writeMem(0xa8ab, { 0xc2, 0x1b, 0x53 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x9712, gbc.sp());
        EXPECT(0xa8ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xa8ab));
        EXPECT(0x1b, gbc.readMem(0xa8ac));
        EXPECT(0x53, gbc.readMem(0xa8ad));
        // C2 02BF
        gbc.setState(0x8609, 0xbfef, 0x77c0, 0xc4b5, 0x9d08, 0x25cc, 0x0, 0x1);
        gbc.writeMem(0x8609, { 0xc2, 0x3e, 0x7f });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xbfef, gbc.sp());
        EXPECT(0x860c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x8609));
        EXPECT(0x3e, gbc.readMem(0x860a));
        EXPECT(0x7f, gbc.readMem(0x860b));
        // C2 02C0
        gbc.setState(0x7253, 0x7631, 0x4100, 0x2045, 0x7a3f, 0x631b, 0x1, 0x0);
        gbc.writeMem(0x7253, { 0xc2, 0x58, 0x22 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x7631, gbc.sp());
        EXPECT(0x2258, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 02C1
        gbc.setState(0x6287, 0x4448, 0x9210, 0xf621, 0xef46, 0xe708, 0x0, 0x1);
        gbc.writeMem(0x6287, { 0xc2, 0x7f, 0xff });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x4448, gbc.sp());
        EXPECT(0xff7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 02C2
        gbc.setState(0x1f7c, 0x1d3d, 0x56c0, 0xb41a, 0xdaaa, 0xc731, 0x1, 0x1);
        gbc.writeMem(0x1f7c, { 0xc2, 0x8f, 0xe6 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x1d3d, gbc.sp());
        EXPECT(0x1f7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 02C3
        gbc.setState(0x6b73, 0xbf0e, 0x4e20, 0x9852, 0x4a66, 0xaa62, 0x0, 0x0);
        gbc.writeMem(0x6b73, { 0xc2, 0x72, 0xf });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xbf0e, gbc.sp());
        EXPECT(0xf72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 02C4
        gbc.setState(0x9c2b, 0x5374, 0xf720, 0xaf88, 0xc5b1, 0xe24a, 0x0, 0x0);
        gbc.writeMem(0x9c2b, { 0xc2, 0x88, 0x86 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x5374, gbc.sp());
        EXPECT(0x8688, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x9c2b));
        EXPECT(0x88, gbc.readMem(0x9c2c));
        EXPECT(0x86, gbc.readMem(0x9c2d));
        // C2 02C5
        gbc.setState(0x7db9, 0x4ed6, 0x3e30, 0x17d6, 0xce66, 0x32a, 0x0, 0x1);
        gbc.writeMem(0x7db9, { 0xc2, 0xcf, 0x38 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x4ed6, gbc.sp());
        EXPECT(0x38cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 02C6
        gbc.setState(0xace1, 0x9e10, 0x41a0, 0x65ac, 0xce82, 0x98a7, 0x0, 0x0);
        gbc.writeMem(0xace1, { 0xc2, 0x35, 0x81 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x9e10, gbc.sp());
        EXPECT(0xace4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xace1));
        EXPECT(0x35, gbc.readMem(0xace2));
        EXPECT(0x81, gbc.readMem(0xace3));
        // C2 02C7
        gbc.setState(0x62c, 0x92c, 0xb0c0, 0x8604, 0x708a, 0x10c6, 0x0, 0x1);
        gbc.writeMem(0x62c, { 0xc2, 0xc8, 0x88 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x92c, gbc.sp());
        EXPECT(0x62f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 02C8
        gbc.setState(0x4bf, 0x57a9, 0x31a0, 0x3db0, 0xf3ad, 0xd50b, 0x0, 0x1);
        gbc.writeMem(0x4bf, { 0xc2, 0x2a, 0x39 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x57a9, gbc.sp());
        EXPECT(0x4c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 02C9
        gbc.setState(0xdab6, 0xe5e9, 0xbc60, 0x2637, 0x9988, 0x186, 0x1, 0x0);
        gbc.writeMem(0xdab6, { 0xc2, 0x6f, 0xa5 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xe5e9, gbc.sp());
        EXPECT(0xa56f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xdab6));
        EXPECT(0x6f, gbc.readMem(0xdab7));
        EXPECT(0xa5, gbc.readMem(0xdab8));
        // C2 02CA
        gbc.setState(0x8b0d, 0xb138, 0xdcc0, 0xe0b8, 0x8656, 0xdd31, 0x1, 0x0);
        gbc.writeMem(0x8b0d, { 0xc2, 0xf, 0xd2 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xb138, gbc.sp());
        EXPECT(0x8b10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x8b0d));
        EXPECT(0xf, gbc.readMem(0x8b0e));
        EXPECT(0xd2, gbc.readMem(0x8b0f));
        // C2 02CB
        gbc.setState(0x8ac8, 0x73c9, 0xb600, 0x1682, 0x5ee3, 0xf4f7, 0x1, 0x1);
        gbc.writeMem(0x8ac8, { 0xc2, 0x8, 0x82 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x73c9, gbc.sp());
        EXPECT(0x8208, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x8ac8));
        EXPECT(0x8, gbc.readMem(0x8ac9));
        EXPECT(0x82, gbc.readMem(0x8aca));
        // C2 02CC
        gbc.setState(0x99e5, 0x8916, 0xc910, 0xbd5b, 0xef50, 0x2fae, 0x0, 0x1);
        gbc.writeMem(0x99e5, { 0xc2, 0xca, 0x9d });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x8916, gbc.sp());
        EXPECT(0x9dca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x99e5));
        EXPECT(0xca, gbc.readMem(0x99e6));
        EXPECT(0x9d, gbc.readMem(0x99e7));
        // C2 02CD
        gbc.setState(0x78e9, 0x16d, 0x4a50, 0xa0a, 0x860d, 0xd82a, 0x0, 0x1);
        gbc.writeMem(0x78e9, { 0xc2, 0xac, 0xc1 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x16d, gbc.sp());
        EXPECT(0xc1ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 02CE
        gbc.setState(0xe8d, 0x4c08, 0x4d20, 0x2f22, 0x5f75, 0x1fe6, 0x1, 0x0);
        gbc.writeMem(0xe8d, { 0xc2, 0x93, 0xaa });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x4c08, gbc.sp());
        EXPECT(0xaa93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 02CF
        gbc.setState(0x5c1, 0x4e5c, 0xcb80, 0x2e9, 0xbdf9, 0x7516, 0x0, 0x0);
        gbc.writeMem(0x5c1, { 0xc2, 0x24, 0xce });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x4e5c, gbc.sp());
        EXPECT(0x5c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 02D0
        gbc.setState(0x82d4, 0x2653, 0x6fe0, 0x89f, 0xa5d0, 0xb2e3, 0x1, 0x1);
        gbc.writeMem(0x82d4, { 0xc2, 0x8d, 0x5f });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x2653, gbc.sp());
        EXPECT(0x82d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x82d4));
        EXPECT(0x8d, gbc.readMem(0x82d5));
        EXPECT(0x5f, gbc.readMem(0x82d6));
        // C2 02D1
        gbc.setState(0x94c5, 0x3473, 0x1ef0, 0x7456, 0xff9, 0x3ae1, 0x1, 0x1);
        gbc.writeMem(0x94c5, { 0xc2, 0x63, 0x63 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x3473, gbc.sp());
        EXPECT(0x94c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x94c5));
        EXPECT(0x63, gbc.readMem(0x94c6));
        EXPECT(0x63, gbc.readMem(0x94c7));
        // C2 02D2
        gbc.setState(0x26f7, 0xcb0, 0x6490, 0xd69, 0xfb96, 0x63b8, 0x0, 0x0);
        gbc.writeMem(0x26f7, { 0xc2, 0x81, 0xd5 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xcb0, gbc.sp());
        EXPECT(0x26fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 02D3
        gbc.setState(0xbecf, 0xab98, 0xd740, 0xe7ff, 0x95cb, 0x7dca, 0x1, 0x1);
        gbc.writeMem(0xbecf, { 0xc2, 0xb, 0x7b });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xab98, gbc.sp());
        EXPECT(0x7b0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xbecf));
        EXPECT(0xb, gbc.readMem(0xbed0));
        EXPECT(0x7b, gbc.readMem(0xbed1));
        // C2 02D4
        gbc.setState(0x2fb2, 0x59d0, 0x4880, 0x6b67, 0x6111, 0xee08, 0x1, 0x1);
        gbc.writeMem(0x2fb2, { 0xc2, 0xa9, 0x5f });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x59d0, gbc.sp());
        EXPECT(0x2fb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 02D5
        gbc.setState(0xc6, 0xf626, 0x2300, 0xf44c, 0xeb1f, 0xfa2c, 0x0, 0x0);
        gbc.writeMem(0xc6, { 0xc2, 0x58, 0x2 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xf626, gbc.sp());
        EXPECT(0x258, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 02D6
        gbc.setState(0x547a, 0x268a, 0x1cc0, 0x11b4, 0x356d, 0xafb5, 0x0, 0x0);
        gbc.writeMem(0x547a, { 0xc2, 0x81, 0x76 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x268a, gbc.sp());
        EXPECT(0x547d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 02D7
        gbc.setState(0xc8dd, 0x1b99, 0x1340, 0xa72c, 0x3d07, 0x5963, 0x0, 0x0);
        gbc.writeMem(0xc8dd, { 0xc2, 0x30, 0x1c });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x1b99, gbc.sp());
        EXPECT(0x1c30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xc8dd));
        EXPECT(0x30, gbc.readMem(0xc8de));
        EXPECT(0x1c, gbc.readMem(0xc8df));
        // C2 02D8
        gbc.setState(0x9c8a, 0xfca, 0x1d40, 0x9087, 0x3969, 0x87bb, 0x1, 0x0);
        gbc.writeMem(0x9c8a, { 0xc2, 0x74, 0xd5 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xfca, gbc.sp());
        EXPECT(0xd574, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x9c8a));
        EXPECT(0x74, gbc.readMem(0x9c8b));
        EXPECT(0xd5, gbc.readMem(0x9c8c));
        // C2 02D9
        gbc.setState(0x470b, 0x6837, 0x2650, 0xe264, 0x6a8c, 0x473b, 0x0, 0x1);
        gbc.writeMem(0x470b, { 0xc2, 0xed, 0xef });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x6837, gbc.sp());
        EXPECT(0xefed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 02DB
        gbc.setState(0xe373, 0xb63c, 0xe4e0, 0x26a7, 0x3374, 0x5631, 0x0, 0x1);
        gbc.writeMem(0xe373, { 0xc2, 0x2f, 0xe6 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xb63c, gbc.sp());
        EXPECT(0xe376, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xe373));
        EXPECT(0x2f, gbc.readMem(0xe374));
        EXPECT(0xe6, gbc.readMem(0xe375));
        // C2 02DC
        gbc.setState(0x9675, 0xf5f3, 0x5650, 0xe755, 0x1e17, 0x2303, 0x1, 0x0);
        gbc.writeMem(0x9675, { 0xc2, 0x4e, 0x57 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xf5f3, gbc.sp());
        EXPECT(0x574e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x9675));
        EXPECT(0x4e, gbc.readMem(0x9676));
        EXPECT(0x57, gbc.readMem(0x9677));
        // C2 02DD
        gbc.setState(0x968b, 0x49c9, 0xf1d0, 0x7883, 0xcad5, 0x71ca, 0x0, 0x0);
        gbc.writeMem(0x968b, { 0xc2, 0xb, 0xb1 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x49c9, gbc.sp());
        EXPECT(0x968e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x968b));
        EXPECT(0xb, gbc.readMem(0x968c));
        EXPECT(0xb1, gbc.readMem(0x968d));
        // C2 02DE
        gbc.setState(0xa890, 0x8212, 0xfbb0, 0xf98, 0x420, 0xb59a, 0x1, 0x1);
        gbc.writeMem(0xa890, { 0xc2, 0x3b, 0x5 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x8212, gbc.sp());
        EXPECT(0xa893, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xa890));
        EXPECT(0x3b, gbc.readMem(0xa891));
        EXPECT(0x5, gbc.readMem(0xa892));
        // C2 02E0
        gbc.setState(0x6eb1, 0x2671, 0xc290, 0xb0b2, 0x551f, 0x53c1, 0x0, 0x0);
        gbc.writeMem(0x6eb1, { 0xc2, 0xfc, 0xae });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x2671, gbc.sp());
        EXPECT(0x6eb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 02E2
        gbc.setState(0x791b, 0x7547, 0x5bc0, 0x46e8, 0xe63, 0x6133, 0x0, 0x0);
        gbc.writeMem(0x791b, { 0xc2, 0xa9, 0x6c });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x7547, gbc.sp());
        EXPECT(0x791e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 02E3
        gbc.setState(0x6a9e, 0x93ce, 0xedf0, 0x5144, 0xf49e, 0x6e59, 0x0, 0x0);
        gbc.writeMem(0x6a9e, { 0xc2, 0xd5, 0x4f });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x93ce, gbc.sp());
        EXPECT(0x6aa1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 02E4
        gbc.setState(0x6198, 0x520b, 0x8f40, 0x752f, 0xe43f, 0x5aa, 0x0, 0x0);
        gbc.writeMem(0x6198, { 0xc2, 0xf3, 0x98 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x520b, gbc.sp());
        EXPECT(0x98f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 02E5
        gbc.setState(0xefea, 0x9abf, 0x2710, 0x86b3, 0xc9cd, 0x69dd, 0x0, 0x0);
        gbc.writeMem(0xefea, { 0xc2, 0x39, 0x81 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x9abf, gbc.sp());
        EXPECT(0x8139, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xefea));
        EXPECT(0x39, gbc.readMem(0xefeb));
        EXPECT(0x81, gbc.readMem(0xefec));
        // C2 02E6
        gbc.setState(0x8850, 0x78b7, 0x9310, 0xa9f5, 0x348, 0xe2f0, 0x1, 0x0);
        gbc.writeMem(0x8850, { 0xc2, 0x6c, 0x14 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x78b7, gbc.sp());
        EXPECT(0x146c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x8850));
        EXPECT(0x6c, gbc.readMem(0x8851));
        EXPECT(0x14, gbc.readMem(0x8852));
        // C2 02E7
        gbc.setState(0x997f, 0x2351, 0xce20, 0xa3da, 0xb37f, 0xee30, 0x0, 0x0);
        gbc.writeMem(0x997f, { 0xc2, 0xf4, 0x7d });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x2351, gbc.sp());
        EXPECT(0x7df4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x997f));
        EXPECT(0xf4, gbc.readMem(0x9980));
        EXPECT(0x7d, gbc.readMem(0x9981));
        // C2 02E8
        gbc.setState(0x9763, 0x378f, 0xd7e0, 0x43ab, 0xd82c, 0xba14, 0x1, 0x0);
        gbc.writeMem(0x9763, { 0xc2, 0x21, 0xcf });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x378f, gbc.sp());
        EXPECT(0x9766, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x9763));
        EXPECT(0x21, gbc.readMem(0x9764));
        EXPECT(0xcf, gbc.readMem(0x9765));
        // C2 02E9
        gbc.setState(0xacae, 0xab0a, 0x55b0, 0xf039, 0x515d, 0xf5f5, 0x1, 0x0);
        gbc.writeMem(0xacae, { 0xc2, 0x1c, 0xe1 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xab0a, gbc.sp());
        EXPECT(0xacb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xacae));
        EXPECT(0x1c, gbc.readMem(0xacaf));
        EXPECT(0xe1, gbc.readMem(0xacb0));
        // C2 02EA
        gbc.setState(0x1aa4, 0xe79, 0x4a30, 0x54ad, 0x23a0, 0xe617, 0x1, 0x1);
        gbc.writeMem(0x1aa4, { 0xc2, 0xc9, 0xef });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xe79, gbc.sp());
        EXPECT(0xefc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 02EC
        gbc.setState(0xdd03, 0x4105, 0x6090, 0x63d2, 0x1201, 0xc7e3, 0x0, 0x1);
        gbc.writeMem(0xdd03, { 0xc2, 0xbb, 0x3c });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x4105, gbc.sp());
        EXPECT(0xdd06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xdd03));
        EXPECT(0xbb, gbc.readMem(0xdd04));
        EXPECT(0x3c, gbc.readMem(0xdd05));
        // C2 02ED
        gbc.setState(0x438c, 0xc12e, 0xed10, 0x4ea0, 0x7cb1, 0x60ee, 0x0, 0x0);
        gbc.writeMem(0x438c, { 0xc2, 0xc0, 0x28 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xc12e, gbc.sp());
        EXPECT(0x28c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 02EE
        gbc.setState(0xc61, 0x8dad, 0xfd10, 0x201b, 0xc0a2, 0x62ee, 0x1, 0x1);
        gbc.writeMem(0xc61, { 0xc2, 0x82, 0x3b });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x8dad, gbc.sp());
        EXPECT(0x3b82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 02EF
        gbc.setState(0x1bf5, 0x9216, 0x8dd0, 0xe670, 0xb689, 0x67d2, 0x1, 0x0);
        gbc.writeMem(0x1bf5, { 0xc2, 0xce, 0x90 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x9216, gbc.sp());
        EXPECT(0x1bf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 02F0
        gbc.setState(0xb93c, 0x706, 0xfa20, 0x2a9d, 0x884f, 0xdd24, 0x1, 0x0);
        gbc.writeMem(0xb93c, { 0xc2, 0xb, 0xd1 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x706, gbc.sp());
        EXPECT(0xd10b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xb93c));
        EXPECT(0xb, gbc.readMem(0xb93d));
        EXPECT(0xd1, gbc.readMem(0xb93e));
        // C2 02F2
        gbc.setState(0x733f, 0x9ac5, 0x4300, 0xfa8e, 0xcc24, 0x410d, 0x1, 0x0);
        gbc.writeMem(0x733f, { 0xc2, 0x5e, 0xed });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x9ac5, gbc.sp());
        EXPECT(0xed5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 02F4
        gbc.setState(0x8cfc, 0xec2c, 0x7600, 0xf880, 0x4453, 0xee53, 0x0, 0x1);
        gbc.writeMem(0x8cfc, { 0xc2, 0xdd, 0x31 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xec2c, gbc.sp());
        EXPECT(0x31dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x8cfc));
        EXPECT(0xdd, gbc.readMem(0x8cfd));
        EXPECT(0x31, gbc.readMem(0x8cfe));
        // C2 02F5
        gbc.setState(0x45f0, 0xf2b2, 0x9640, 0xd831, 0x5498, 0x1807, 0x0, 0x1);
        gbc.writeMem(0x45f0, { 0xc2, 0x5a, 0xf3 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xf2b2, gbc.sp());
        EXPECT(0xf35a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 02F6
        gbc.setState(0x3cbe, 0xf735, 0xcbf0, 0x32e4, 0xee49, 0xe8b, 0x0, 0x0);
        gbc.writeMem(0x3cbe, { 0xc2, 0x1e, 0x3e });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xf735, gbc.sp());
        EXPECT(0x3cc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 02F7
        gbc.setState(0x5e8b, 0xdbfb, 0xe8b0, 0x4968, 0xdc31, 0x21c8, 0x0, 0x1);
        gbc.writeMem(0x5e8b, { 0xc2, 0x9f, 0xcf });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xdbfb, gbc.sp());
        EXPECT(0x5e8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 02F8
        gbc.setState(0x870, 0x93ee, 0xf2e0, 0x218f, 0x6c2, 0xab6f, 0x0, 0x1);
        gbc.writeMem(0x870, { 0xc2, 0xf4, 0xf1 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x93ee, gbc.sp());
        EXPECT(0x873, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 02F9
        gbc.setState(0x6ed3, 0x7be7, 0x4a20, 0x7ab8, 0x83e7, 0x585e, 0x0, 0x0);
        gbc.writeMem(0x6ed3, { 0xc2, 0x9b, 0xe0 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x7be7, gbc.sp());
        EXPECT(0xe09b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 02FA
        gbc.setState(0xbd91, 0xbcc9, 0xcd40, 0xa878, 0x4164, 0x3fb7, 0x0, 0x1);
        gbc.writeMem(0xbd91, { 0xc2, 0xa4, 0x22 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xbcc9, gbc.sp());
        EXPECT(0x22a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xbd91));
        EXPECT(0xa4, gbc.readMem(0xbd92));
        EXPECT(0x22, gbc.readMem(0xbd93));
        // C2 02FB
        gbc.setState(0xdb41, 0x179e, 0xeb20, 0xf133, 0xcea7, 0x44f, 0x0, 0x1);
        gbc.writeMem(0xdb41, { 0xc2, 0xee, 0xe3 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x179e, gbc.sp());
        EXPECT(0xe3ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xdb41));
        EXPECT(0xee, gbc.readMem(0xdb42));
        EXPECT(0xe3, gbc.readMem(0xdb43));
        // C2 02FC
        gbc.setState(0xbb87, 0x414, 0xded0, 0x83a7, 0x2936, 0x3ae3, 0x1, 0x0);
        gbc.writeMem(0xbb87, { 0xc2, 0xf1, 0x87 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x414, gbc.sp());
        EXPECT(0xbb8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xbb87));
        EXPECT(0xf1, gbc.readMem(0xbb88));
        EXPECT(0x87, gbc.readMem(0xbb89));
        // C2 02FD
        gbc.setState(0xe40f, 0x5aea, 0x86a0, 0x823c, 0xa3e8, 0x97c5, 0x0, 0x0);
        gbc.writeMem(0xe40f, { 0xc2, 0x55, 0xd5 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x5aea, gbc.sp());
        EXPECT(0xe412, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xe40f));
        EXPECT(0x55, gbc.readMem(0xe410));
        EXPECT(0xd5, gbc.readMem(0xe411));
        // C2 02FE
        gbc.setState(0xa4eb, 0x3323, 0x22b0, 0xb782, 0x47ea, 0x7f75, 0x0, 0x0);
        gbc.writeMem(0xa4eb, { 0xc2, 0xd6, 0x59 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x3323, gbc.sp());
        EXPECT(0xa4ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xa4eb));
        EXPECT(0xd6, gbc.readMem(0xa4ec));
        EXPECT(0x59, gbc.readMem(0xa4ed));
        // C2 02FF
        gbc.setState(0x6630, 0x8f95, 0x6a70, 0x25f0, 0x79b9, 0x3663, 0x1, 0x0);
        gbc.writeMem(0x6630, { 0xc2, 0xf0, 0x85 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x8f95, gbc.sp());
        EXPECT(0x85f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0300
        gbc.setState(0x6bbc, 0x8de, 0x9f10, 0x95c0, 0x6582, 0x628, 0x0, 0x0);
        gbc.writeMem(0x6bbc, { 0xc2, 0x6f, 0xeb });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x8de, gbc.sp());
        EXPECT(0xeb6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0301
        gbc.setState(0x5ede, 0x187c, 0x4cf0, 0x9973, 0x6f7c, 0xf857, 0x0, 0x0);
        gbc.writeMem(0x5ede, { 0xc2, 0x18, 0x54 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x187c, gbc.sp());
        EXPECT(0x5ee1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0302
        gbc.setState(0x9de5, 0xbb82, 0xc790, 0xd9c4, 0xb85b, 0xebfd, 0x1, 0x1);
        gbc.writeMem(0x9de5, { 0xc2, 0x7a, 0x41 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xbb82, gbc.sp());
        EXPECT(0x9de8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x9de5));
        EXPECT(0x7a, gbc.readMem(0x9de6));
        EXPECT(0x41, gbc.readMem(0x9de7));
        // C2 0303
        gbc.setState(0xe184, 0x38cb, 0x7790, 0x8374, 0xf2d1, 0x895f, 0x0, 0x0);
        gbc.writeMem(0xe184, { 0xc2, 0xb7, 0xfd });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x38cb, gbc.sp());
        EXPECT(0xe187, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xe184));
        EXPECT(0xb7, gbc.readMem(0xe185));
        EXPECT(0xfd, gbc.readMem(0xe186));
        // C2 0304
        gbc.setState(0x34bc, 0x8045, 0xc7c0, 0x7dc, 0x5324, 0x8add, 0x1, 0x0);
        gbc.writeMem(0x34bc, { 0xc2, 0xba, 0xc });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x8045, gbc.sp());
        EXPECT(0x34bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0305
        gbc.setState(0x66d5, 0x1d73, 0x4b30, 0x43b8, 0xbb2a, 0xa609, 0x1, 0x1);
        gbc.writeMem(0x66d5, { 0xc2, 0xc5, 0x1b });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x1d73, gbc.sp());
        EXPECT(0x1bc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0306
        gbc.setState(0xefbc, 0x5349, 0xae40, 0xcf89, 0x3d37, 0x2c99, 0x1, 0x0);
        gbc.writeMem(0xefbc, { 0xc2, 0xae, 0x1f });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x5349, gbc.sp());
        EXPECT(0x1fae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xefbc));
        EXPECT(0xae, gbc.readMem(0xefbd));
        EXPECT(0x1f, gbc.readMem(0xefbe));
        // C2 0307
        gbc.setState(0x959a, 0x7e69, 0x1420, 0x67eb, 0x124, 0x5ed3, 0x1, 0x1);
        gbc.writeMem(0x959a, { 0xc2, 0x1, 0x73 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x7e69, gbc.sp());
        EXPECT(0x7301, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x959a));
        EXPECT(0x1, gbc.readMem(0x959b));
        EXPECT(0x73, gbc.readMem(0x959c));
        // C2 0308
        gbc.setState(0x92eb, 0xd220, 0x620, 0x468d, 0x65eb, 0x1e87, 0x0, 0x0);
        gbc.writeMem(0x92eb, { 0xc2, 0x6e, 0x71 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xd220, gbc.sp());
        EXPECT(0x716e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x92eb));
        EXPECT(0x6e, gbc.readMem(0x92ec));
        EXPECT(0x71, gbc.readMem(0x92ed));
        // C2 0309
        gbc.setState(0xeca7, 0xdd61, 0x3ee0, 0x1afc, 0x4ccf, 0x4b04, 0x1, 0x1);
        gbc.writeMem(0xeca7, { 0xc2, 0xf4, 0x68 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xdd61, gbc.sp());
        EXPECT(0xecaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xeca7));
        EXPECT(0xf4, gbc.readMem(0xeca8));
        EXPECT(0x68, gbc.readMem(0xeca9));
        // C2 030A
        gbc.setState(0x3cc, 0x452e, 0x14c0, 0x1e46, 0x283d, 0x2318, 0x1, 0x1);
        gbc.writeMem(0x3cc, { 0xc2, 0xb4, 0x31 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x452e, gbc.sp());
        EXPECT(0x3cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 030B
        gbc.setState(0x5c23, 0x74fa, 0x45f0, 0x19f8, 0x1559, 0xc9c8, 0x0, 0x0);
        gbc.writeMem(0x5c23, { 0xc2, 0xcd, 0x13 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x74fa, gbc.sp());
        EXPECT(0x5c26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 030C
        gbc.setState(0x860, 0x6871, 0x520, 0xf479, 0xaf68, 0x88a1, 0x1, 0x0);
        gbc.writeMem(0x860, { 0xc2, 0xe, 0x99 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x6871, gbc.sp());
        EXPECT(0x990e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 030D
        gbc.setState(0x8f59, 0x8929, 0x4fd0, 0x8693, 0x5337, 0x543c, 0x1, 0x0);
        gbc.writeMem(0x8f59, { 0xc2, 0x20, 0xca });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x8929, gbc.sp());
        EXPECT(0x8f5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x8f59));
        EXPECT(0x20, gbc.readMem(0x8f5a));
        EXPECT(0xca, gbc.readMem(0x8f5b));
        // C2 030E
        gbc.setState(0x9cef, 0x5b2c, 0xd820, 0x7d1d, 0x8e44, 0x96a4, 0x0, 0x0);
        gbc.writeMem(0x9cef, { 0xc2, 0x94, 0xca });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x5b2c, gbc.sp());
        EXPECT(0xca94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x9cef));
        EXPECT(0x94, gbc.readMem(0x9cf0));
        EXPECT(0xca, gbc.readMem(0x9cf1));
        // C2 030F
        gbc.setState(0xae0b, 0xd719, 0xe2a0, 0x4e1a, 0x4f9a, 0x3aae, 0x0, 0x1);
        gbc.writeMem(0xae0b, { 0xc2, 0x11, 0x6 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xd719, gbc.sp());
        EXPECT(0xae0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xae0b));
        EXPECT(0x11, gbc.readMem(0xae0c));
        EXPECT(0x6, gbc.readMem(0xae0d));
        // C2 0310
        gbc.setState(0x9f4c, 0x55b7, 0xc020, 0xc6a7, 0xbbfc, 0x2f1d, 0x1, 0x1);
        gbc.writeMem(0x9f4c, { 0xc2, 0x1, 0x7e });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x55b7, gbc.sp());
        EXPECT(0x7e01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x9f4c));
        EXPECT(0x1, gbc.readMem(0x9f4d));
        EXPECT(0x7e, gbc.readMem(0x9f4e));
        // C2 0311
        gbc.setState(0xe260, 0x8f12, 0xdbd0, 0x479, 0x72a8, 0x7d9c, 0x0, 0x1);
        gbc.writeMem(0xe260, { 0xc2, 0x46, 0x3b });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x8f12, gbc.sp());
        EXPECT(0xe263, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xe260));
        EXPECT(0x46, gbc.readMem(0xe261));
        EXPECT(0x3b, gbc.readMem(0xe262));
        // C2 0312
        gbc.setState(0xe1d2, 0x69ae, 0x5fd0, 0x5466, 0x96af, 0x65ae, 0x1, 0x1);
        gbc.writeMem(0xe1d2, { 0xc2, 0xde, 0xa0 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x69ae, gbc.sp());
        EXPECT(0xe1d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xe1d2));
        EXPECT(0xde, gbc.readMem(0xe1d3));
        EXPECT(0xa0, gbc.readMem(0xe1d4));
        // C2 0313
        gbc.setState(0xd098, 0xa0df, 0x57d0, 0xe3b9, 0x1170, 0x16cf, 0x0, 0x1);
        gbc.writeMem(0xd098, { 0xc2, 0x40, 0xf9 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xa0df, gbc.sp());
        EXPECT(0xd09b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xd098));
        EXPECT(0x40, gbc.readMem(0xd099));
        EXPECT(0xf9, gbc.readMem(0xd09a));
        // C2 0314
        gbc.setState(0x7917, 0x28d8, 0xa390, 0x8afe, 0x994b, 0xd65d, 0x1, 0x0);
        gbc.writeMem(0x7917, { 0xc2, 0xf8, 0xdc });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x28d8, gbc.sp());
        EXPECT(0x791a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0315
        gbc.setState(0x2ff9, 0x25b7, 0x5ee0, 0x8785, 0xf735, 0x7299, 0x1, 0x0);
        gbc.writeMem(0x2ff9, { 0xc2, 0xf4, 0x94 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x25b7, gbc.sp());
        EXPECT(0x2ffc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0316
        gbc.setState(0x4bf2, 0x7226, 0x8ed0, 0x5f6d, 0x4f40, 0x125c, 0x1, 0x0);
        gbc.writeMem(0x4bf2, { 0xc2, 0x5, 0x2 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x7226, gbc.sp());
        EXPECT(0x4bf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0319
        gbc.setState(0x1bdb, 0xa65c, 0x3fd0, 0x6421, 0xfc19, 0x2091, 0x0, 0x0);
        gbc.writeMem(0x1bdb, { 0xc2, 0xd5, 0xd0 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xa65c, gbc.sp());
        EXPECT(0x1bde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 031A
        gbc.setState(0x8fef, 0xca24, 0xd580, 0x585f, 0x7e46, 0xf04f, 0x0, 0x0);
        gbc.writeMem(0x8fef, { 0xc2, 0x18, 0x3a });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xca24, gbc.sp());
        EXPECT(0x8ff2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x8fef));
        EXPECT(0x18, gbc.readMem(0x8ff0));
        EXPECT(0x3a, gbc.readMem(0x8ff1));
        // C2 031B
        gbc.setState(0x88ff, 0x99c4, 0x7f30, 0xc146, 0xd9d8, 0xb2f4, 0x1, 0x0);
        gbc.writeMem(0x88ff, { 0xc2, 0x17, 0xd });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x99c4, gbc.sp());
        EXPECT(0xd17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x88ff));
        EXPECT(0x17, gbc.readMem(0x8900));
        EXPECT(0xd, gbc.readMem(0x8901));
        // C2 031C
        gbc.setState(0x4f5b, 0x2a04, 0xb810, 0xa13f, 0x1ffa, 0xdc96, 0x0, 0x0);
        gbc.writeMem(0x4f5b, { 0xc2, 0x16, 0x4b });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x2a04, gbc.sp());
        EXPECT(0x4b16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 031D
        gbc.setState(0x2d28, 0xf46, 0x5f90, 0x7f3e, 0xf986, 0x5930, 0x1, 0x0);
        gbc.writeMem(0x2d28, { 0xc2, 0xbc, 0xfe });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xf46, gbc.sp());
        EXPECT(0x2d2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 031E
        gbc.setState(0xd8f1, 0x53dd, 0xfc90, 0xd3fc, 0x1d93, 0xd175, 0x0, 0x1);
        gbc.writeMem(0xd8f1, { 0xc2, 0x97, 0x92 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x53dd, gbc.sp());
        EXPECT(0xd8f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xd8f1));
        EXPECT(0x97, gbc.readMem(0xd8f2));
        EXPECT(0x92, gbc.readMem(0xd8f3));
        // C2 031F
        gbc.setState(0x7010, 0x995b, 0x8df0, 0x4d8c, 0xd0d8, 0xeaed, 0x1, 0x1);
        gbc.writeMem(0x7010, { 0xc2, 0x9b, 0xef });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x995b, gbc.sp());
        EXPECT(0x7013, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0320
        gbc.setState(0x70e5, 0xce1c, 0xbcb0, 0x2615, 0xd27, 0x9a49, 0x0, 0x0);
        gbc.writeMem(0x70e5, { 0xc2, 0xc5, 0xb2 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xce1c, gbc.sp());
        EXPECT(0x70e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0321
        gbc.setState(0x39cc, 0xca18, 0x2530, 0x9734, 0x957e, 0xa0f2, 0x1, 0x0);
        gbc.writeMem(0x39cc, { 0xc2, 0x30, 0xc5 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xca18, gbc.sp());
        EXPECT(0xc530, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0322
        gbc.setState(0x6f3f, 0xba5b, 0x27e0, 0xbed9, 0x5c31, 0xb582, 0x1, 0x1);
        gbc.writeMem(0x6f3f, { 0xc2, 0x86, 0x91 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xba5b, gbc.sp());
        EXPECT(0x6f42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0323
        gbc.setState(0x36d0, 0x573, 0x4040, 0x26c8, 0xd8e8, 0xf29, 0x1, 0x1);
        gbc.writeMem(0x36d0, { 0xc2, 0xb1, 0x9f });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x573, gbc.sp());
        EXPECT(0x9fb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0324
        gbc.setState(0xa08b, 0x2283, 0x5550, 0x36a5, 0x26f9, 0x3185, 0x0, 0x1);
        gbc.writeMem(0xa08b, { 0xc2, 0x13, 0xcd });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x2283, gbc.sp());
        EXPECT(0xcd13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xa08b));
        EXPECT(0x13, gbc.readMem(0xa08c));
        EXPECT(0xcd, gbc.readMem(0xa08d));
        // C2 0325
        gbc.setState(0xc84, 0xe935, 0x32d0, 0x38c2, 0x5940, 0x839, 0x0, 0x1);
        gbc.writeMem(0xc84, { 0xc2, 0x2f, 0x9 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xe935, gbc.sp());
        EXPECT(0xc87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0326
        gbc.setState(0x1d9, 0x545f, 0x7a80, 0xedf7, 0xfbd4, 0xc216, 0x0, 0x0);
        gbc.writeMem(0x1d9, { 0xc2, 0xb9, 0xd9 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x545f, gbc.sp());
        EXPECT(0x1dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0327
        gbc.setState(0xc6e1, 0x52ec, 0xc2c0, 0x9401, 0xe49e, 0x591e, 0x0, 0x1);
        gbc.writeMem(0xc6e1, { 0xc2, 0x55, 0x7b });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x52ec, gbc.sp());
        EXPECT(0xc6e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xc6e1));
        EXPECT(0x55, gbc.readMem(0xc6e2));
        EXPECT(0x7b, gbc.readMem(0xc6e3));
        // C2 0328
        gbc.setState(0x9d14, 0x9cac, 0x4180, 0x7c88, 0x307c, 0xef13, 0x1, 0x1);
        gbc.writeMem(0x9d14, { 0xc2, 0x5b, 0x54 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x9cac, gbc.sp());
        EXPECT(0x9d17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x9d14));
        EXPECT(0x5b, gbc.readMem(0x9d15));
        EXPECT(0x54, gbc.readMem(0x9d16));
        // C2 0329
        gbc.setState(0x923f, 0x6866, 0xf440, 0x614c, 0x15b2, 0x8f0b, 0x0, 0x1);
        gbc.writeMem(0x923f, { 0xc2, 0xe4, 0x6b });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x6866, gbc.sp());
        EXPECT(0x6be4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x923f));
        EXPECT(0xe4, gbc.readMem(0x9240));
        EXPECT(0x6b, gbc.readMem(0x9241));
        // C2 032A
        gbc.setState(0xe8ba, 0x1893, 0x2f70, 0x965, 0x23db, 0x7379, 0x0, 0x0);
        gbc.writeMem(0xe8ba, { 0xc2, 0x74, 0x7e });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x1893, gbc.sp());
        EXPECT(0x7e74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xe8ba));
        EXPECT(0x74, gbc.readMem(0xe8bb));
        EXPECT(0x7e, gbc.readMem(0xe8bc));
        // C2 032B
        gbc.setState(0x3c40, 0x7c6a, 0x95a0, 0x1346, 0xde27, 0x8b1c, 0x1, 0x1);
        gbc.writeMem(0x3c40, { 0xc2, 0x1, 0xe });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x7c6a, gbc.sp());
        EXPECT(0x3c43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 032C
        gbc.setState(0x6c53, 0x6ac2, 0x5070, 0x2cd6, 0x7853, 0x561f, 0x0, 0x0);
        gbc.writeMem(0x6c53, { 0xc2, 0x2d, 0xa2 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x6ac2, gbc.sp());
        EXPECT(0xa22d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 032D
        gbc.setState(0x6916, 0xa137, 0xce0, 0x9c30, 0x6c5c, 0x2a00, 0x0, 0x0);
        gbc.writeMem(0x6916, { 0xc2, 0x4, 0xa5 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xa137, gbc.sp());
        EXPECT(0x6919, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 032E
        gbc.setState(0x2e72, 0x760e, 0x3ac0, 0xce1e, 0x730f, 0xc2da, 0x1, 0x1);
        gbc.writeMem(0x2e72, { 0xc2, 0x45, 0x9f });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x760e, gbc.sp());
        EXPECT(0x2e75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 032F
        gbc.setState(0x30a5, 0x7bb7, 0xf540, 0xfd29, 0xe06a, 0x1c99, 0x1, 0x1);
        gbc.writeMem(0x30a5, { 0xc2, 0x75, 0x70 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x7bb7, gbc.sp());
        EXPECT(0x7075, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0330
        gbc.setState(0x3501, 0x52a8, 0xf770, 0x46c3, 0x3971, 0x6590, 0x1, 0x1);
        gbc.writeMem(0x3501, { 0xc2, 0x3, 0x92 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x52a8, gbc.sp());
        EXPECT(0x9203, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0331
        gbc.setState(0x5335, 0x5bd6, 0x6b0, 0x773f, 0x1c06, 0x9a80, 0x0, 0x0);
        gbc.writeMem(0x5335, { 0xc2, 0x3f, 0x72 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x5bd6, gbc.sp());
        EXPECT(0x5338, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0332
        gbc.setState(0x2cf5, 0x577b, 0x3530, 0x9813, 0x61c8, 0x9ad8, 0x0, 0x0);
        gbc.writeMem(0x2cf5, { 0xc2, 0x2b, 0x93 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x577b, gbc.sp());
        EXPECT(0x932b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0333
        gbc.setState(0xc313, 0x3990, 0xbbe0, 0xcf3d, 0x7647, 0xfe4d, 0x0, 0x0);
        gbc.writeMem(0xc313, { 0xc2, 0x4e, 0x52 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x3990, gbc.sp());
        EXPECT(0xc316, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xc313));
        EXPECT(0x4e, gbc.readMem(0xc314));
        EXPECT(0x52, gbc.readMem(0xc315));
        // C2 0334
        gbc.setState(0x90dc, 0x786b, 0xce40, 0xec14, 0xffc4, 0x5290, 0x0, 0x0);
        gbc.writeMem(0x90dc, { 0xc2, 0x42, 0x91 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x786b, gbc.sp());
        EXPECT(0x9142, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x90dc));
        EXPECT(0x42, gbc.readMem(0x90dd));
        EXPECT(0x91, gbc.readMem(0x90de));
        // C2 0335
        gbc.setState(0xc3df, 0xd7aa, 0x13c0, 0x6f2, 0xa66e, 0xd262, 0x1, 0x1);
        gbc.writeMem(0xc3df, { 0xc2, 0x7, 0xeb });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xd7aa, gbc.sp());
        EXPECT(0xc3e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xc3df));
        EXPECT(0x7, gbc.readMem(0xc3e0));
        EXPECT(0xeb, gbc.readMem(0xc3e1));
        // C2 0336
        gbc.setState(0x6ea1, 0x1f7b, 0xcf10, 0x7c35, 0xc1c4, 0xf85a, 0x1, 0x0);
        gbc.writeMem(0x6ea1, { 0xc2, 0xeb, 0xd1 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x1f7b, gbc.sp());
        EXPECT(0xd1eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0337
        gbc.setState(0xc8fc, 0x9164, 0x8ea0, 0xe833, 0xe06d, 0x88fc, 0x1, 0x1);
        gbc.writeMem(0xc8fc, { 0xc2, 0xe6, 0xa });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x9164, gbc.sp());
        EXPECT(0xc8ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xc8fc));
        EXPECT(0xe6, gbc.readMem(0xc8fd));
        EXPECT(0xa, gbc.readMem(0xc8fe));
        // C2 0338
        gbc.setState(0x1bb7, 0x5fc7, 0x2d80, 0xb0b0, 0x76de, 0xbfaf, 0x1, 0x1);
        gbc.writeMem(0x1bb7, { 0xc2, 0x3e, 0xb7 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x5fc7, gbc.sp());
        EXPECT(0x1bba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0339
        gbc.setState(0x52bf, 0xaced, 0x640, 0xe4c5, 0xf7e0, 0x18a, 0x0, 0x1);
        gbc.writeMem(0x52bf, { 0xc2, 0xb7, 0x22 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xaced, gbc.sp());
        EXPECT(0x22b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 033B
        gbc.setState(0x6a48, 0x4f7d, 0x5200, 0xd2e3, 0xa584, 0xfa97, 0x1, 0x0);
        gbc.writeMem(0x6a48, { 0xc2, 0x8b, 0x51 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x4f7d, gbc.sp());
        EXPECT(0x518b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 033D
        gbc.setState(0x5f0d, 0xea96, 0xcd30, 0x9951, 0x9e1, 0x550b, 0x0, 0x0);
        gbc.writeMem(0x5f0d, { 0xc2, 0x9d, 0xf3 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xea96, gbc.sp());
        EXPECT(0xf39d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 033E
        gbc.setState(0x8cb9, 0xccb, 0x5550, 0xf4df, 0x431d, 0xa02e, 0x0, 0x1);
        gbc.writeMem(0x8cb9, { 0xc2, 0x1, 0x9d });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xccb, gbc.sp());
        EXPECT(0x9d01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x8cb9));
        EXPECT(0x1, gbc.readMem(0x8cba));
        EXPECT(0x9d, gbc.readMem(0x8cbb));
        // C2 033F
        gbc.setState(0x5f08, 0x18bc, 0x75b0, 0xd67c, 0xbc77, 0x840f, 0x0, 0x0);
        gbc.writeMem(0x5f08, { 0xc2, 0x27, 0x1d });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x18bc, gbc.sp());
        EXPECT(0x5f0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0340
        gbc.setState(0x618, 0xc198, 0xba50, 0x96bb, 0xf21a, 0xb2dd, 0x1, 0x1);
        gbc.writeMem(0x618, { 0xc2, 0xcb, 0x41 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xc198, gbc.sp());
        EXPECT(0x41cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0342
        gbc.setState(0xdb97, 0x9272, 0x1aa0, 0x2c2f, 0x4ae0, 0xe36f, 0x1, 0x0);
        gbc.writeMem(0xdb97, { 0xc2, 0x9f, 0xa });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x9272, gbc.sp());
        EXPECT(0xdb9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xdb97));
        EXPECT(0x9f, gbc.readMem(0xdb98));
        EXPECT(0xa, gbc.readMem(0xdb99));
        // C2 0343
        gbc.setState(0x45a, 0x12da, 0x16d0, 0xa716, 0xadea, 0x9573, 0x0, 0x0);
        gbc.writeMem(0x45a, { 0xc2, 0x2d, 0x8f });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x12da, gbc.sp());
        EXPECT(0x45d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0344
        gbc.setState(0xce4c, 0xfc98, 0xe040, 0x36ba, 0x18b3, 0x2b5d, 0x0, 0x1);
        gbc.writeMem(0xce4c, { 0xc2, 0xf2, 0x81 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xfc98, gbc.sp());
        EXPECT(0x81f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xce4c));
        EXPECT(0xf2, gbc.readMem(0xce4d));
        EXPECT(0x81, gbc.readMem(0xce4e));
        // C2 0345
        gbc.setState(0xc14c, 0xaa87, 0x6960, 0xc81e, 0x160e, 0xbe64, 0x0, 0x0);
        gbc.writeMem(0xc14c, { 0xc2, 0x9f, 0xae });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xaa87, gbc.sp());
        EXPECT(0xae9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xc14c));
        EXPECT(0x9f, gbc.readMem(0xc14d));
        EXPECT(0xae, gbc.readMem(0xc14e));
        // C2 0346
        gbc.setState(0x217b, 0x6126, 0x4550, 0xc88a, 0xa438, 0x497c, 0x1, 0x1);
        gbc.writeMem(0x217b, { 0xc2, 0x6d, 0x3a });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x6126, gbc.sp());
        EXPECT(0x3a6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0347
        gbc.setState(0xb6c7, 0xf900, 0xfd20, 0x8b28, 0xb90c, 0xa576, 0x1, 0x0);
        gbc.writeMem(0xb6c7, { 0xc2, 0x2e, 0x30 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xf900, gbc.sp());
        EXPECT(0x302e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xb6c7));
        EXPECT(0x2e, gbc.readMem(0xb6c8));
        EXPECT(0x30, gbc.readMem(0xb6c9));
        // C2 0349
        gbc.setState(0xd560, 0xdecf, 0x9da0, 0x3105, 0xc319, 0x5059, 0x1, 0x1);
        gbc.writeMem(0xd560, { 0xc2, 0x92, 0xa0 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xdecf, gbc.sp());
        EXPECT(0xd563, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xd560));
        EXPECT(0x92, gbc.readMem(0xd561));
        EXPECT(0xa0, gbc.readMem(0xd562));
        // C2 034A
        gbc.setState(0x1eb4, 0xb326, 0xd960, 0x135d, 0xac78, 0xf545, 0x0, 0x0);
        gbc.writeMem(0x1eb4, { 0xc2, 0x8e, 0x8c });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xb326, gbc.sp());
        EXPECT(0x8c8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 034B
        gbc.setState(0x15ab, 0x70ac, 0xea70, 0x1ed3, 0x212b, 0x2cd1, 0x0, 0x0);
        gbc.writeMem(0x15ab, { 0xc2, 0x4d, 0xcb });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x70ac, gbc.sp());
        EXPECT(0xcb4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 034C
        gbc.setState(0x37a2, 0x30bd, 0x5c60, 0x677b, 0x6809, 0x7db4, 0x1, 0x0);
        gbc.writeMem(0x37a2, { 0xc2, 0xdf, 0xdf });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x30bd, gbc.sp());
        EXPECT(0xdfdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 034D
        gbc.setState(0x2138, 0x5d77, 0xd2f0, 0x2746, 0xd2ad, 0x3b65, 0x1, 0x1);
        gbc.writeMem(0x2138, { 0xc2, 0xf0, 0x66 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x5d77, gbc.sp());
        EXPECT(0x213b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 034E
        gbc.setState(0xd82d, 0x7b87, 0xc9c0, 0x8472, 0xb437, 0x83f, 0x1, 0x1);
        gbc.writeMem(0xd82d, { 0xc2, 0xea, 0xe8 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x7b87, gbc.sp());
        EXPECT(0xd830, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xd82d));
        EXPECT(0xea, gbc.readMem(0xd82e));
        EXPECT(0xe8, gbc.readMem(0xd82f));
        // C2 034F
        gbc.setState(0xd33, 0xd1f3, 0x1820, 0x135f, 0x6870, 0xdd14, 0x1, 0x1);
        gbc.writeMem(0xd33, { 0xc2, 0x79, 0x84 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xd1f3, gbc.sp());
        EXPECT(0x8479, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0350
        gbc.setState(0x885e, 0x7cde, 0x9250, 0xcbbe, 0x7897, 0xb74e, 0x0, 0x1);
        gbc.writeMem(0x885e, { 0xc2, 0xc2, 0x3c });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x7cde, gbc.sp());
        EXPECT(0x3cc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x885e));
        EXPECT(0xc2, gbc.readMem(0x885f));
        EXPECT(0x3c, gbc.readMem(0x8860));
        // C2 0351
        gbc.setState(0xa8df, 0x1857, 0xa960, 0x205f, 0x41d3, 0xe4d2, 0x1, 0x1);
        gbc.writeMem(0xa8df, { 0xc2, 0xf8, 0xce });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x1857, gbc.sp());
        EXPECT(0xcef8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xa8df));
        EXPECT(0xf8, gbc.readMem(0xa8e0));
        EXPECT(0xce, gbc.readMem(0xa8e1));
        // C2 0352
        gbc.setState(0x9b05, 0x79ab, 0x2ce0, 0xc894, 0xd141, 0xfaa, 0x1, 0x1);
        gbc.writeMem(0x9b05, { 0xc2, 0x21, 0xe3 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x79ab, gbc.sp());
        EXPECT(0x9b08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x9b05));
        EXPECT(0x21, gbc.readMem(0x9b06));
        EXPECT(0xe3, gbc.readMem(0x9b07));
        // C2 0353
        gbc.setState(0xd292, 0x49f8, 0x7990, 0xedf9, 0x1269, 0x30dc, 0x0, 0x1);
        gbc.writeMem(0xd292, { 0xc2, 0xab, 0xa });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x49f8, gbc.sp());
        EXPECT(0xd295, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xd292));
        EXPECT(0xab, gbc.readMem(0xd293));
        EXPECT(0xa, gbc.readMem(0xd294));
        // C2 0354
        gbc.setState(0x409, 0xb3a, 0x8d30, 0x5f1a, 0x2097, 0x5e5, 0x0, 0x0);
        gbc.writeMem(0x409, { 0xc2, 0xb5, 0x28 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xb3a, gbc.sp());
        EXPECT(0x28b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0355
        gbc.setState(0x116a, 0x679c, 0xfc80, 0x483b, 0xd8d, 0xf900, 0x1, 0x0);
        gbc.writeMem(0x116a, { 0xc2, 0x1, 0xe7 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x679c, gbc.sp());
        EXPECT(0x116d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0356
        gbc.setState(0x97ec, 0x7bd8, 0x4860, 0xc62a, 0x6359, 0xd0be, 0x1, 0x1);
        gbc.writeMem(0x97ec, { 0xc2, 0xdc, 0xed });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x7bd8, gbc.sp());
        EXPECT(0xeddc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x97ec));
        EXPECT(0xdc, gbc.readMem(0x97ed));
        EXPECT(0xed, gbc.readMem(0x97ee));
        // C2 0358
        gbc.setState(0x7400, 0xc707, 0xff30, 0x67fd, 0xe21e, 0x266b, 0x0, 0x0);
        gbc.writeMem(0x7400, { 0xc2, 0xbd, 0x52 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xc707, gbc.sp());
        EXPECT(0x52bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0359
        gbc.setState(0x3f5, 0xc87f, 0x2080, 0xadfe, 0x8707, 0x5dec, 0x1, 0x0);
        gbc.writeMem(0x3f5, { 0xc2, 0xd5, 0xf2 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xc87f, gbc.sp());
        EXPECT(0x3f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 035A
        gbc.setState(0x415c, 0x2dec, 0x58f0, 0x39ae, 0xe70e, 0xb708, 0x1, 0x1);
        gbc.writeMem(0x415c, { 0xc2, 0x99, 0xaf });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x2dec, gbc.sp());
        EXPECT(0x415f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 035B
        gbc.setState(0xd6ca, 0x8e24, 0x5e20, 0x2dfb, 0x47f9, 0xe97f, 0x1, 0x0);
        gbc.writeMem(0xd6ca, { 0xc2, 0x33, 0xb0 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x8e24, gbc.sp());
        EXPECT(0xb033, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xd6ca));
        EXPECT(0x33, gbc.readMem(0xd6cb));
        EXPECT(0xb0, gbc.readMem(0xd6cc));
        // C2 035C
        gbc.setState(0xbde9, 0xc915, 0x6100, 0x4988, 0xc2ac, 0x1083, 0x0, 0x1);
        gbc.writeMem(0xbde9, { 0xc2, 0x31, 0xe6 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xc915, gbc.sp());
        EXPECT(0xe631, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xbde9));
        EXPECT(0x31, gbc.readMem(0xbdea));
        EXPECT(0xe6, gbc.readMem(0xbdeb));
        // C2 035D
        gbc.setState(0xcaa1, 0x2532, 0xfc20, 0xa71d, 0x92d8, 0xae5a, 0x0, 0x0);
        gbc.writeMem(0xcaa1, { 0xc2, 0x4e, 0xf4 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x2532, gbc.sp());
        EXPECT(0xf44e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xcaa1));
        EXPECT(0x4e, gbc.readMem(0xcaa2));
        EXPECT(0xf4, gbc.readMem(0xcaa3));
        // C2 035E
        gbc.setState(0x40af, 0xbc16, 0x4920, 0x3a80, 0x672b, 0x7ff, 0x0, 0x1);
        gbc.writeMem(0x40af, { 0xc2, 0x3d, 0x64 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xbc16, gbc.sp());
        EXPECT(0x643d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 035F
        gbc.setState(0x5ad2, 0x4d3b, 0xe1b0, 0xf230, 0xbe61, 0xf4d1, 0x0, 0x1);
        gbc.writeMem(0x5ad2, { 0xc2, 0x6c, 0xee });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x4d3b, gbc.sp());
        EXPECT(0x5ad5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0360
        gbc.setState(0xcbb5, 0xdbc6, 0xbf10, 0x50e3, 0x5ce2, 0x151d, 0x1, 0x1);
        gbc.writeMem(0xcbb5, { 0xc2, 0x3d, 0x79 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xdbc6, gbc.sp());
        EXPECT(0x793d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xcbb5));
        EXPECT(0x3d, gbc.readMem(0xcbb6));
        EXPECT(0x79, gbc.readMem(0xcbb7));
        // C2 0361
        gbc.setState(0x3ff3, 0x82ec, 0x3e0, 0x4346, 0x9a93, 0xf094, 0x0, 0x0);
        gbc.writeMem(0x3ff3, { 0xc2, 0x72, 0x70 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x82ec, gbc.sp());
        EXPECT(0x3ff6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0362
        gbc.setState(0xc898, 0xe34e, 0xcee0, 0x8ed0, 0x705, 0x8f25, 0x1, 0x0);
        gbc.writeMem(0xc898, { 0xc2, 0x5b, 0x3d });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xe34e, gbc.sp());
        EXPECT(0xc89b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xc898));
        EXPECT(0x5b, gbc.readMem(0xc899));
        EXPECT(0x3d, gbc.readMem(0xc89a));
        // C2 0363
        gbc.setState(0x4c7d, 0xfd03, 0x6130, 0x8c74, 0xda59, 0x2453, 0x1, 0x1);
        gbc.writeMem(0x4c7d, { 0xc2, 0xf2, 0x11 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xfd03, gbc.sp());
        EXPECT(0x11f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0364
        gbc.setState(0x567e, 0xeb86, 0x1c30, 0xd150, 0xf17c, 0x6cd9, 0x0, 0x1);
        gbc.writeMem(0x567e, { 0xc2, 0x89, 0xd7 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xeb86, gbc.sp());
        EXPECT(0xd789, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0365
        gbc.setState(0x3be7, 0x56cb, 0x20a0, 0x5d8a, 0x6fa8, 0x132d, 0x1, 0x1);
        gbc.writeMem(0x3be7, { 0xc2, 0x2b, 0xfa });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x56cb, gbc.sp());
        EXPECT(0x3bea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0366
        gbc.setState(0xb18f, 0x88c, 0xbfa0, 0xc4c9, 0x374b, 0xb39b, 0x1, 0x1);
        gbc.writeMem(0xb18f, { 0xc2, 0xc3, 0x24 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x88c, gbc.sp());
        EXPECT(0xb192, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xb18f));
        EXPECT(0xc3, gbc.readMem(0xb190));
        EXPECT(0x24, gbc.readMem(0xb191));
        // C2 0367
        gbc.setState(0xdc11, 0x2721, 0xd760, 0xe807, 0x106c, 0xff60, 0x1, 0x0);
        gbc.writeMem(0xdc11, { 0xc2, 0xd0, 0x5f });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x2721, gbc.sp());
        EXPECT(0x5fd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xdc11));
        EXPECT(0xd0, gbc.readMem(0xdc12));
        EXPECT(0x5f, gbc.readMem(0xdc13));
        // C2 0369
        gbc.setState(0x29f2, 0xd526, 0x5340, 0x6f6, 0x4b8c, 0xb982, 0x0, 0x1);
        gbc.writeMem(0x29f2, { 0xc2, 0x69, 0x4b });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xd526, gbc.sp());
        EXPECT(0x4b69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 036A
        gbc.setState(0x618e, 0xda90, 0x1fb0, 0x5afc, 0x894c, 0xc78c, 0x1, 0x1);
        gbc.writeMem(0x618e, { 0xc2, 0x88, 0x1 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xda90, gbc.sp());
        EXPECT(0x6191, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 036B
        gbc.setState(0x4101, 0xf6a1, 0xfab0, 0x99e, 0xe0a9, 0x6678, 0x1, 0x0);
        gbc.writeMem(0x4101, { 0xc2, 0xdb, 0xb8 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xf6a1, gbc.sp());
        EXPECT(0x4104, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 036C
        gbc.setState(0x1d8f, 0xfc81, 0x7480, 0x1d52, 0x4163, 0x245d, 0x1, 0x1);
        gbc.writeMem(0x1d8f, { 0xc2, 0xd, 0xa6 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xfc81, gbc.sp());
        EXPECT(0x1d92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 036D
        gbc.setState(0x925a, 0x3c27, 0x5580, 0xd23a, 0x2c7c, 0xd82f, 0x1, 0x1);
        gbc.writeMem(0x925a, { 0xc2, 0xc, 0x0 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x3c27, gbc.sp());
        EXPECT(0x925d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x925a));
        EXPECT(0xc, gbc.readMem(0x925b));
        EXPECT(0x0, gbc.readMem(0x925c));
        // C2 036E
        gbc.setState(0x919b, 0x5ed3, 0x8880, 0xb141, 0x801, 0x833e, 0x1, 0x1);
        gbc.writeMem(0x919b, { 0xc2, 0x52, 0x16 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x5ed3, gbc.sp());
        EXPECT(0x919e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x919b));
        EXPECT(0x52, gbc.readMem(0x919c));
        EXPECT(0x16, gbc.readMem(0x919d));
        // C2 036F
        gbc.setState(0xe9ea, 0x395b, 0x75d0, 0x6f7a, 0xd455, 0x3de3, 0x1, 0x0);
        gbc.writeMem(0xe9ea, { 0xc2, 0x9a, 0x7e });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x395b, gbc.sp());
        EXPECT(0xe9ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xe9ea));
        EXPECT(0x9a, gbc.readMem(0xe9eb));
        EXPECT(0x7e, gbc.readMem(0xe9ec));
        // C2 0370
        gbc.setState(0x25ae, 0xbccf, 0x9590, 0xca0b, 0xc71b, 0xb423, 0x1, 0x1);
        gbc.writeMem(0x25ae, { 0xc2, 0xb3, 0x77 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xbccf, gbc.sp());
        EXPECT(0x25b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0371
        gbc.setState(0x48f3, 0x5dd7, 0x8ed0, 0x250b, 0x767f, 0x5486, 0x1, 0x1);
        gbc.writeMem(0x48f3, { 0xc2, 0xa4, 0xe9 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x5dd7, gbc.sp());
        EXPECT(0x48f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0372
        gbc.setState(0x29f5, 0x584, 0xeac0, 0xc65c, 0x21fa, 0x217, 0x1, 0x0);
        gbc.writeMem(0x29f5, { 0xc2, 0x6c, 0xd4 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x584, gbc.sp());
        EXPECT(0x29f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0373
        gbc.setState(0xa2ae, 0x18e2, 0x22d0, 0x6779, 0xee5c, 0x87df, 0x1, 0x0);
        gbc.writeMem(0xa2ae, { 0xc2, 0x53, 0xb1 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x18e2, gbc.sp());
        EXPECT(0xa2b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xa2ae));
        EXPECT(0x53, gbc.readMem(0xa2af));
        EXPECT(0xb1, gbc.readMem(0xa2b0));
        // C2 0374
        gbc.setState(0x5521, 0xbc0f, 0x7490, 0x9d4, 0x8895, 0x4ef, 0x0, 0x1);
        gbc.writeMem(0x5521, { 0xc2, 0xea, 0x1 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xbc0f, gbc.sp());
        EXPECT(0x5524, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0375
        gbc.setState(0x3d92, 0xd492, 0x5400, 0x7d65, 0xcde, 0xf3dc, 0x0, 0x1);
        gbc.writeMem(0x3d92, { 0xc2, 0xdd, 0x46 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xd492, gbc.sp());
        EXPECT(0x46dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0376
        gbc.setState(0xec7d, 0x9e4a, 0x9b80, 0xbdad, 0xc1b7, 0xfcea, 0x0, 0x1);
        gbc.writeMem(0xec7d, { 0xc2, 0xe9, 0xd5 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x9e4a, gbc.sp());
        EXPECT(0xec80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xec7d));
        EXPECT(0xe9, gbc.readMem(0xec7e));
        EXPECT(0xd5, gbc.readMem(0xec7f));
        // C2 0377
        gbc.setState(0xbedb, 0xa1dc, 0x3a10, 0x8dad, 0x213b, 0xb962, 0x1, 0x0);
        gbc.writeMem(0xbedb, { 0xc2, 0x3b, 0x64 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xa1dc, gbc.sp());
        EXPECT(0x643b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xbedb));
        EXPECT(0x3b, gbc.readMem(0xbedc));
        EXPECT(0x64, gbc.readMem(0xbedd));
        // C2 0378
        gbc.setState(0x2b17, 0x944a, 0x8e70, 0xbc5f, 0x84eb, 0xdbe6, 0x0, 0x0);
        gbc.writeMem(0x2b17, { 0xc2, 0xfe, 0x1a });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x944a, gbc.sp());
        EXPECT(0x1afe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0379
        gbc.setState(0xcb84, 0xeabb, 0x1100, 0xc0d6, 0xbe49, 0x8df0, 0x0, 0x1);
        gbc.writeMem(0xcb84, { 0xc2, 0xf0, 0x59 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xeabb, gbc.sp());
        EXPECT(0x59f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xcb84));
        EXPECT(0xf0, gbc.readMem(0xcb85));
        EXPECT(0x59, gbc.readMem(0xcb86));
        // C2 037A
        gbc.setState(0xd2ab, 0xf6d6, 0x6a50, 0x5ec1, 0x8b76, 0xb79a, 0x0, 0x1);
        gbc.writeMem(0xd2ab, { 0xc2, 0x30, 0x52 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xf6d6, gbc.sp());
        EXPECT(0x5230, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xd2ab));
        EXPECT(0x30, gbc.readMem(0xd2ac));
        EXPECT(0x52, gbc.readMem(0xd2ad));
        // C2 037B
        gbc.setState(0xba52, 0xa700, 0x2490, 0xbbd6, 0x8068, 0x3a4, 0x0, 0x1);
        gbc.writeMem(0xba52, { 0xc2, 0x9, 0x9e });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xa700, gbc.sp());
        EXPECT(0xba55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xba52));
        EXPECT(0x9, gbc.readMem(0xba53));
        EXPECT(0x9e, gbc.readMem(0xba54));
        // C2 037C
        gbc.setState(0x7754, 0x2bd0, 0x1190, 0x8013, 0x6168, 0xd63, 0x1, 0x0);
        gbc.writeMem(0x7754, { 0xc2, 0x96, 0xa3 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x2bd0, gbc.sp());
        EXPECT(0x7757, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 037D
        gbc.setState(0x4c91, 0xefcd, 0xc480, 0x39a8, 0xaf0c, 0xd06a, 0x1, 0x1);
        gbc.writeMem(0x4c91, { 0xc2, 0xfc, 0xa2 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xefcd, gbc.sp());
        EXPECT(0x4c94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 037E
        gbc.setState(0x9014, 0x1155, 0x3e20, 0x5097, 0x9062, 0xeba, 0x1, 0x0);
        gbc.writeMem(0x9014, { 0xc2, 0x45, 0xf0 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x1155, gbc.sp());
        EXPECT(0xf045, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x9014));
        EXPECT(0x45, gbc.readMem(0x9015));
        EXPECT(0xf0, gbc.readMem(0x9016));
        // C2 037F
        gbc.setState(0x2f5d, 0x2af2, 0x6640, 0xb149, 0x6a36, 0x3fd4, 0x1, 0x0);
        gbc.writeMem(0x2f5d, { 0xc2, 0xaf, 0x5 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x2af2, gbc.sp());
        EXPECT(0x5af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0380
        gbc.setState(0xb41f, 0x740d, 0x69a0, 0x7c1, 0x9372, 0x2a31, 0x1, 0x1);
        gbc.writeMem(0xb41f, { 0xc2, 0x9f, 0x4c });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x740d, gbc.sp());
        EXPECT(0xb422, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xb41f));
        EXPECT(0x9f, gbc.readMem(0xb420));
        EXPECT(0x4c, gbc.readMem(0xb421));
        // C2 0381
        gbc.setState(0xeb4b, 0x4dcb, 0xc710, 0xc025, 0xb336, 0x432c, 0x1, 0x1);
        gbc.writeMem(0xeb4b, { 0xc2, 0x5a, 0xd });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x4dcb, gbc.sp());
        EXPECT(0xd5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xeb4b));
        EXPECT(0x5a, gbc.readMem(0xeb4c));
        EXPECT(0xd, gbc.readMem(0xeb4d));
        // C2 0382
        gbc.setState(0xe29a, 0xb2de, 0x34b0, 0xf37e, 0xf8fc, 0xe5a9, 0x0, 0x0);
        gbc.writeMem(0xe29a, { 0xc2, 0x77, 0xd3 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xb2de, gbc.sp());
        EXPECT(0xe29d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xe29a));
        EXPECT(0x77, gbc.readMem(0xe29b));
        EXPECT(0xd3, gbc.readMem(0xe29c));
        // C2 0383
        gbc.setState(0x7e9a, 0x20d, 0xdf80, 0x771d, 0xd834, 0xffb0, 0x0, 0x1);
        gbc.writeMem(0x7e9a, { 0xc2, 0x28, 0x15 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x20d, gbc.sp());
        EXPECT(0x7e9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0384
        gbc.setState(0x933f, 0x351, 0x6880, 0x8dfa, 0xe1b9, 0x5dc1, 0x1, 0x0);
        gbc.writeMem(0x933f, { 0xc2, 0xaa, 0x9b });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x351, gbc.sp());
        EXPECT(0x9342, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x933f));
        EXPECT(0xaa, gbc.readMem(0x9340));
        EXPECT(0x9b, gbc.readMem(0x9341));
        // C2 0385
        gbc.setState(0xb4e3, 0xfa55, 0xb760, 0x3a31, 0xec1a, 0xc6a6, 0x1, 0x1);
        gbc.writeMem(0xb4e3, { 0xc2, 0xea, 0xfc });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xfa55, gbc.sp());
        EXPECT(0xfcea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xb4e3));
        EXPECT(0xea, gbc.readMem(0xb4e4));
        EXPECT(0xfc, gbc.readMem(0xb4e5));
        // C2 0386
        gbc.setState(0xa33e, 0xa7ab, 0x9d50, 0x8c3f, 0x833b, 0xcbc2, 0x0, 0x0);
        gbc.writeMem(0xa33e, { 0xc2, 0x9b, 0xe2 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xa7ab, gbc.sp());
        EXPECT(0xe29b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xa33e));
        EXPECT(0x9b, gbc.readMem(0xa33f));
        EXPECT(0xe2, gbc.readMem(0xa340));
        // C2 0387
        gbc.setState(0x400, 0x13c8, 0x9fd0, 0xdbdf, 0x295, 0xb5f2, 0x0, 0x0);
        gbc.writeMem(0x400, { 0xc2, 0x27, 0x9e });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x13c8, gbc.sp());
        EXPECT(0x403, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0388
        gbc.setState(0x3f75, 0x2453, 0xd5c0, 0x75a8, 0xa8b5, 0x5d5a, 0x0, 0x0);
        gbc.writeMem(0x3f75, { 0xc2, 0x7f, 0x96 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x2453, gbc.sp());
        EXPECT(0x3f78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0389
        gbc.setState(0x6e7c, 0x8d22, 0x9080, 0x2f5, 0x70f4, 0xe415, 0x0, 0x1);
        gbc.writeMem(0x6e7c, { 0xc2, 0xcd, 0x26 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x8d22, gbc.sp());
        EXPECT(0x6e7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 038A
        gbc.setState(0x994d, 0x5f13, 0x50b0, 0xb7ee, 0x5528, 0xfa32, 0x1, 0x0);
        gbc.writeMem(0x994d, { 0xc2, 0xb2, 0xb3 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x5f13, gbc.sp());
        EXPECT(0x9950, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x994d));
        EXPECT(0xb2, gbc.readMem(0x994e));
        EXPECT(0xb3, gbc.readMem(0x994f));
        // C2 038B
        gbc.setState(0x17cd, 0x95c, 0xd2b0, 0xd6ac, 0x31c1, 0x6ceb, 0x1, 0x0);
        gbc.writeMem(0x17cd, { 0xc2, 0x7, 0xfb });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x95c, gbc.sp());
        EXPECT(0x17d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 038C
        gbc.setState(0x9da7, 0xc2db, 0x5280, 0xb6b9, 0x3ae0, 0x7c24, 0x1, 0x1);
        gbc.writeMem(0x9da7, { 0xc2, 0x7d, 0x67 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xc2db, gbc.sp());
        EXPECT(0x9daa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x9da7));
        EXPECT(0x7d, gbc.readMem(0x9da8));
        EXPECT(0x67, gbc.readMem(0x9da9));
        // C2 038D
        gbc.setState(0x15ac, 0xcfdc, 0x7fd0, 0x5ff0, 0x55f5, 0x8161, 0x1, 0x0);
        gbc.writeMem(0x15ac, { 0xc2, 0xcb, 0xe5 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xcfdc, gbc.sp());
        EXPECT(0x15af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 038E
        gbc.setState(0x4a61, 0x2665, 0xa220, 0x6857, 0x51e4, 0x2288, 0x1, 0x0);
        gbc.writeMem(0x4a61, { 0xc2, 0x17, 0x73 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x2665, gbc.sp());
        EXPECT(0x7317, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 038F
        gbc.setState(0x582f, 0xbf4e, 0x15d0, 0x8438, 0x4794, 0xda63, 0x0, 0x1);
        gbc.writeMem(0x582f, { 0xc2, 0xa1, 0x8f });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xbf4e, gbc.sp());
        EXPECT(0x5832, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0390
        gbc.setState(0x71b, 0x9664, 0x60f0, 0xd64f, 0xb15f, 0x84cf, 0x1, 0x1);
        gbc.writeMem(0x71b, { 0xc2, 0xf5, 0x75 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x9664, gbc.sp());
        EXPECT(0x71e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 0391
        gbc.setState(0xbead, 0x4c7f, 0xae80, 0xcbc, 0x355, 0x9e5e, 0x1, 0x1);
        gbc.writeMem(0xbead, { 0xc2, 0x45, 0x76 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x4c7f, gbc.sp());
        EXPECT(0xbeb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xbead));
        EXPECT(0x45, gbc.readMem(0xbeae));
        EXPECT(0x76, gbc.readMem(0xbeaf));
        // C2 0392
        gbc.setState(0xe88b, 0xb8dd, 0x3310, 0xce5c, 0x8282, 0x86a1, 0x1, 0x1);
        gbc.writeMem(0xe88b, { 0xc2, 0xa4, 0xa1 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xb8dd, gbc.sp());
        EXPECT(0xa1a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xe88b));
        EXPECT(0xa4, gbc.readMem(0xe88c));
        EXPECT(0xa1, gbc.readMem(0xe88d));
        // C2 0393
        gbc.setState(0x8fa9, 0xaae4, 0x5d60, 0x1292, 0x7c3e, 0x653e, 0x1, 0x1);
        gbc.writeMem(0x8fa9, { 0xc2, 0x22, 0x72 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xaae4, gbc.sp());
        EXPECT(0x7222, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x8fa9));
        EXPECT(0x22, gbc.readMem(0x8faa));
        EXPECT(0x72, gbc.readMem(0x8fab));
        // C2 0394
        gbc.setState(0xedac, 0x3833, 0xefb0, 0x2fc9, 0xeb49, 0x7da4, 0x0, 0x0);
        gbc.writeMem(0xedac, { 0xc2, 0x5b, 0x5b });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x3833, gbc.sp());
        EXPECT(0xedaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xedac));
        EXPECT(0x5b, gbc.readMem(0xedad));
        EXPECT(0x5b, gbc.readMem(0xedae));
        // C2 0395
        gbc.setState(0xe6bc, 0x5bc, 0x45a0, 0x5795, 0x6ce0, 0xc68d, 0x1, 0x1);
        gbc.writeMem(0xe6bc, { 0xc2, 0xfd, 0x98 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x5bc, gbc.sp());
        EXPECT(0xe6bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xe6bc));
        EXPECT(0xfd, gbc.readMem(0xe6bd));
        EXPECT(0x98, gbc.readMem(0xe6be));
        // C2 0396
        gbc.setState(0x2ca1, 0xaef8, 0x2140, 0x95bd, 0x1833, 0x50ce, 0x0, 0x1);
        gbc.writeMem(0x2ca1, { 0xc2, 0x78, 0xb8 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xaef8, gbc.sp());
        EXPECT(0xb878, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0397
        gbc.setState(0x54f8, 0xe71e, 0xa020, 0x333b, 0x70c, 0xa15a, 0x0, 0x1);
        gbc.writeMem(0x54f8, { 0xc2, 0x6b, 0xe4 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xe71e, gbc.sp());
        EXPECT(0xe46b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0398
        gbc.setState(0x4b3a, 0xb977, 0x24e0, 0xd3e4, 0xc7d2, 0xe26c, 0x1, 0x0);
        gbc.writeMem(0x4b3a, { 0xc2, 0x35, 0xe7 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xb977, gbc.sp());
        EXPECT(0x4b3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 0399
        gbc.setState(0x1332, 0x2bd5, 0xcd50, 0x36e5, 0x1abc, 0xfa79, 0x1, 0x1);
        gbc.writeMem(0x1332, { 0xc2, 0x86, 0x95 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x2bd5, gbc.sp());
        EXPECT(0x9586, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 039A
        gbc.setState(0x4235, 0x8c4d, 0x1520, 0x1d1d, 0x94b, 0xe4cb, 0x1, 0x1);
        gbc.writeMem(0x4235, { 0xc2, 0x8c, 0x37 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x8c4d, gbc.sp());
        EXPECT(0x378c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 039B
        gbc.setState(0xc672, 0xaff3, 0x9440, 0x7878, 0xb5b2, 0x33b8, 0x1, 0x1);
        gbc.writeMem(0xc672, { 0xc2, 0x11, 0xe5 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xaff3, gbc.sp());
        EXPECT(0xe511, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xc672));
        EXPECT(0x11, gbc.readMem(0xc673));
        EXPECT(0xe5, gbc.readMem(0xc674));
        // C2 039C
        gbc.setState(0x702d, 0x119b, 0x2cb0, 0x81e1, 0x2dcc, 0xcaae, 0x0, 0x0);
        gbc.writeMem(0x702d, { 0xc2, 0xbc, 0x7c });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x119b, gbc.sp());
        EXPECT(0x7030, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 039D
        gbc.setState(0x2369, 0xb60f, 0x9250, 0xd667, 0x608b, 0xf58c, 0x1, 0x0);
        gbc.writeMem(0x2369, { 0xc2, 0x87, 0xae });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xb60f, gbc.sp());
        EXPECT(0xae87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 039E
        gbc.setState(0x6077, 0xa0fc, 0x1150, 0x9d25, 0x4b2d, 0x5095, 0x0, 0x1);
        gbc.writeMem(0x6077, { 0xc2, 0x8a, 0xfb });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xa0fc, gbc.sp());
        EXPECT(0xfb8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 039F
        gbc.setState(0x65c8, 0xfa0, 0x9c60, 0x5c03, 0x132d, 0x4ce4, 0x1, 0x1);
        gbc.writeMem(0x65c8, { 0xc2, 0xe0, 0x27 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xfa0, gbc.sp());
        EXPECT(0x27e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 03A0
        gbc.setState(0x900e, 0xecfd, 0x6890, 0x88c3, 0xfabb, 0x6f20, 0x0, 0x1);
        gbc.writeMem(0x900e, { 0xc2, 0x4c, 0x62 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xecfd, gbc.sp());
        EXPECT(0x9011, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x900e));
        EXPECT(0x4c, gbc.readMem(0x900f));
        EXPECT(0x62, gbc.readMem(0x9010));
        // C2 03A1
        gbc.setState(0x68ac, 0xa694, 0x9720, 0x457c, 0x100e, 0x19e1, 0x0, 0x0);
        gbc.writeMem(0x68ac, { 0xc2, 0x5c, 0xf1 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xa694, gbc.sp());
        EXPECT(0xf15c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 03A2
        gbc.setState(0xe934, 0x784f, 0x5ea0, 0x8b63, 0x2352, 0x465, 0x0, 0x1);
        gbc.writeMem(0xe934, { 0xc2, 0xc8, 0x47 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x784f, gbc.sp());
        EXPECT(0xe937, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xe934));
        EXPECT(0xc8, gbc.readMem(0xe935));
        EXPECT(0x47, gbc.readMem(0xe936));
        // C2 03A3
        gbc.setState(0xa7a0, 0xc2c7, 0xbb60, 0xa1c, 0x5187, 0xe498, 0x0, 0x1);
        gbc.writeMem(0xa7a0, { 0xc2, 0xfb, 0x98 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xc2c7, gbc.sp());
        EXPECT(0x98fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xa7a0));
        EXPECT(0xfb, gbc.readMem(0xa7a1));
        EXPECT(0x98, gbc.readMem(0xa7a2));
        // C2 03A4
        gbc.setState(0xae91, 0x607f, 0x32c0, 0x10b0, 0x36b4, 0x9945, 0x0, 0x0);
        gbc.writeMem(0xae91, { 0xc2, 0x7, 0x94 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x607f, gbc.sp());
        EXPECT(0xae94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xae91));
        EXPECT(0x7, gbc.readMem(0xae92));
        EXPECT(0x94, gbc.readMem(0xae93));
        // C2 03A5
        gbc.setState(0xdf2c, 0x98a8, 0x3140, 0x42f5, 0x6cdc, 0x7180, 0x1, 0x1);
        gbc.writeMem(0xdf2c, { 0xc2, 0x5f, 0xa6 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x98a8, gbc.sp());
        EXPECT(0xa65f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xdf2c));
        EXPECT(0x5f, gbc.readMem(0xdf2d));
        EXPECT(0xa6, gbc.readMem(0xdf2e));
        // C2 03A6
        gbc.setState(0x6dd6, 0x2913, 0x9f70, 0xfe33, 0xc2ed, 0x8d62, 0x1, 0x1);
        gbc.writeMem(0x6dd6, { 0xc2, 0xf6, 0xae });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x2913, gbc.sp());
        EXPECT(0xaef6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 03A7
        gbc.setState(0x64a8, 0x5e9d, 0x8450, 0x7af4, 0x3b52, 0x5817, 0x1, 0x0);
        gbc.writeMem(0x64a8, { 0xc2, 0xf4, 0x17 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x5e9d, gbc.sp());
        EXPECT(0x17f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 03A8
        gbc.setState(0x9e1b, 0x3c39, 0x77b0, 0xe957, 0x36bd, 0xe5e5, 0x0, 0x1);
        gbc.writeMem(0x9e1b, { 0xc2, 0x30, 0x43 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x3c39, gbc.sp());
        EXPECT(0x9e1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x9e1b));
        EXPECT(0x30, gbc.readMem(0x9e1c));
        EXPECT(0x43, gbc.readMem(0x9e1d));
        // C2 03A9
        gbc.setState(0xc0d6, 0x3351, 0x5a40, 0xc89b, 0xea96, 0x6c1a, 0x1, 0x1);
        gbc.writeMem(0xc0d6, { 0xc2, 0xee, 0x38 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x3351, gbc.sp());
        EXPECT(0x38ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xc0d6));
        EXPECT(0xee, gbc.readMem(0xc0d7));
        EXPECT(0x38, gbc.readMem(0xc0d8));
        // C2 03AA
        gbc.setState(0xb87d, 0x50a3, 0x9bb0, 0x61ef, 0xc73a, 0x4be6, 0x0, 0x1);
        gbc.writeMem(0xb87d, { 0xc2, 0xd5, 0x91 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x50a3, gbc.sp());
        EXPECT(0xb880, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xb87d));
        EXPECT(0xd5, gbc.readMem(0xb87e));
        EXPECT(0x91, gbc.readMem(0xb87f));
        // C2 03AB
        gbc.setState(0xbc14, 0x4982, 0xcd30, 0x72ad, 0xcc89, 0xaa8, 0x0, 0x1);
        gbc.writeMem(0xbc14, { 0xc2, 0xa6, 0x7a });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x4982, gbc.sp());
        EXPECT(0x7aa6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xbc14));
        EXPECT(0xa6, gbc.readMem(0xbc15));
        EXPECT(0x7a, gbc.readMem(0xbc16));
        // C2 03AC
        gbc.setState(0x2883, 0x8d7d, 0xf0f0, 0x6b9c, 0xbdf4, 0xa645, 0x0, 0x1);
        gbc.writeMem(0x2883, { 0xc2, 0xff, 0x64 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x8d7d, gbc.sp());
        EXPECT(0x2886, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 03AD
        gbc.setState(0x3ab, 0x7d4e, 0x44c0, 0xfa2d, 0x97d1, 0xdb56, 0x1, 0x0);
        gbc.writeMem(0x3ab, { 0xc2, 0x7c, 0xbf });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x7d4e, gbc.sp());
        EXPECT(0x3ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 03AE
        gbc.setState(0x949b, 0x2531, 0x9c40, 0x33f4, 0x62b7, 0x9305, 0x1, 0x1);
        gbc.writeMem(0x949b, { 0xc2, 0x79, 0x72 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x2531, gbc.sp());
        EXPECT(0x7279, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x949b));
        EXPECT(0x79, gbc.readMem(0x949c));
        EXPECT(0x72, gbc.readMem(0x949d));
        // C2 03AF
        gbc.setState(0xecb8, 0xe6f8, 0xf340, 0x7f43, 0xd227, 0xb284, 0x0, 0x1);
        gbc.writeMem(0xecb8, { 0xc2, 0x1c, 0xf5 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xe6f8, gbc.sp());
        EXPECT(0xf51c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xecb8));
        EXPECT(0x1c, gbc.readMem(0xecb9));
        EXPECT(0xf5, gbc.readMem(0xecba));
        // C2 03B0
        gbc.setState(0x8fef, 0x46d6, 0x18b0, 0xeb71, 0x192b, 0xdd1f, 0x1, 0x0);
        gbc.writeMem(0x8fef, { 0xc2, 0x18, 0x3a });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x46d6, gbc.sp());
        EXPECT(0x8ff2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x8fef));
        EXPECT(0x18, gbc.readMem(0x8ff0));
        EXPECT(0x3a, gbc.readMem(0x8ff1));
        // C2 03B1
        gbc.setState(0x1e47, 0xd9b3, 0x9420, 0xf29b, 0x7dd4, 0xd085, 0x0, 0x1);
        gbc.writeMem(0x1e47, { 0xc2, 0xe7, 0x0 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xd9b3, gbc.sp());
        EXPECT(0xe7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 03B2
        gbc.setState(0xb0a0, 0x2673, 0xda90, 0x1103, 0x788d, 0x1cac, 0x1, 0x1);
        gbc.writeMem(0xb0a0, { 0xc2, 0x89, 0x14 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x2673, gbc.sp());
        EXPECT(0xb0a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xb0a0));
        EXPECT(0x89, gbc.readMem(0xb0a1));
        EXPECT(0x14, gbc.readMem(0xb0a2));
        // C2 03B3
        gbc.setState(0x8bab, 0xe462, 0x50c0, 0x2c9d, 0x7431, 0xc759, 0x1, 0x1);
        gbc.writeMem(0x8bab, { 0xc2, 0xd3, 0xa4 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xe462, gbc.sp());
        EXPECT(0x8bae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x8bab));
        EXPECT(0xd3, gbc.readMem(0x8bac));
        EXPECT(0xa4, gbc.readMem(0x8bad));
        // C2 03B4
        gbc.setState(0x6336, 0xacdc, 0x3ea0, 0x38d3, 0x48e3, 0xd84b, 0x0, 0x1);
        gbc.writeMem(0x6336, { 0xc2, 0xa8, 0x78 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xacdc, gbc.sp());
        EXPECT(0x6339, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 03B6
        gbc.setState(0x49d7, 0xeb0b, 0x1050, 0xa2a7, 0xa02a, 0x408b, 0x1, 0x0);
        gbc.writeMem(0x49d7, { 0xc2, 0xfc, 0x5b });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xeb0b, gbc.sp());
        EXPECT(0x5bfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 03B7
        gbc.setState(0x8211, 0x6558, 0x5000, 0x9e38, 0xeb6b, 0xcbf0, 0x0, 0x1);
        gbc.writeMem(0x8211, { 0xc2, 0x71, 0xc6 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x6558, gbc.sp());
        EXPECT(0xc671, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x8211));
        EXPECT(0x71, gbc.readMem(0x8212));
        EXPECT(0xc6, gbc.readMem(0x8213));
        // C2 03B8
        gbc.setState(0x6146, 0xc39f, 0xc490, 0x8861, 0xc212, 0xd1dd, 0x1, 0x1);
        gbc.writeMem(0x6146, { 0xc2, 0xa, 0x23 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xc39f, gbc.sp());
        EXPECT(0x6149, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 03B9
        gbc.setState(0x9d39, 0x42d1, 0xcf90, 0xca31, 0xddc9, 0x71f4, 0x0, 0x0);
        gbc.writeMem(0x9d39, { 0xc2, 0x6, 0x0 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x42d1, gbc.sp());
        EXPECT(0x9d3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x9d39));
        EXPECT(0x6, gbc.readMem(0x9d3a));
        EXPECT(0x0, gbc.readMem(0x9d3b));
        // C2 03BA
        gbc.setState(0xcfb1, 0x75c1, 0x4fd0, 0x7bf5, 0xff76, 0x7416, 0x0, 0x1);
        gbc.writeMem(0xcfb1, { 0xc2, 0x2c, 0x2d });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x75c1, gbc.sp());
        EXPECT(0xcfb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xcfb1));
        EXPECT(0x2c, gbc.readMem(0xcfb2));
        EXPECT(0x2d, gbc.readMem(0xcfb3));
        // C2 03BB
        gbc.setState(0x129e, 0x822b, 0xd2f0, 0x5a3a, 0xfac9, 0x2cde, 0x1, 0x1);
        gbc.writeMem(0x129e, { 0xc2, 0x63, 0xc7 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x822b, gbc.sp());
        EXPECT(0x12a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 03BC
        gbc.setState(0x9d91, 0x3d98, 0x90b0, 0xe9ad, 0x65d, 0xf7a3, 0x0, 0x1);
        gbc.writeMem(0x9d91, { 0xc2, 0x15, 0x1d });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x3d98, gbc.sp());
        EXPECT(0x9d94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x9d91));
        EXPECT(0x15, gbc.readMem(0x9d92));
        EXPECT(0x1d, gbc.readMem(0x9d93));
        // C2 03BD
        gbc.setState(0x8c75, 0x87a4, 0xcdf0, 0x3f21, 0xcd5d, 0x443c, 0x1, 0x0);
        gbc.writeMem(0x8c75, { 0xc2, 0xad, 0xc6 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x87a4, gbc.sp());
        EXPECT(0x8c78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x8c75));
        EXPECT(0xad, gbc.readMem(0x8c76));
        EXPECT(0xc6, gbc.readMem(0x8c77));
        // C2 03BE
        gbc.setState(0x9dc8, 0xe04d, 0xb580, 0xf5cc, 0xe944, 0xbdef, 0x0, 0x0);
        gbc.writeMem(0x9dc8, { 0xc2, 0x19, 0xc5 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xe04d, gbc.sp());
        EXPECT(0x9dcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x9dc8));
        EXPECT(0x19, gbc.readMem(0x9dc9));
        EXPECT(0xc5, gbc.readMem(0x9dca));
        // C2 03BF
        gbc.setState(0x8aad, 0x63e6, 0x4270, 0xc42f, 0xb803, 0x6247, 0x1, 0x0);
        gbc.writeMem(0x8aad, { 0xc2, 0x69, 0xf1 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x63e6, gbc.sp());
        EXPECT(0xf169, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x8aad));
        EXPECT(0x69, gbc.readMem(0x8aae));
        EXPECT(0xf1, gbc.readMem(0x8aaf));
        // C2 03C1
        gbc.setState(0xc188, 0xe673, 0xd910, 0xd7b2, 0xc91b, 0x21e1, 0x1, 0x1);
        gbc.writeMem(0xc188, { 0xc2, 0xf, 0xf2 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xe673, gbc.sp());
        EXPECT(0xf20f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xc188));
        EXPECT(0xf, gbc.readMem(0xc189));
        EXPECT(0xf2, gbc.readMem(0xc18a));
        // C2 03C2
        gbc.setState(0x125, 0x1568, 0xf6b0, 0xe77e, 0xd8b2, 0x7e67, 0x1, 0x0);
        gbc.writeMem(0x125, { 0xc2, 0x50, 0x5c });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x1568, gbc.sp());
        EXPECT(0x128, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 03C3
        gbc.setState(0x2d0d, 0x3e78, 0xca00, 0xe5a6, 0xb619, 0xd0cc, 0x0, 0x0);
        gbc.writeMem(0x2d0d, { 0xc2, 0xcd, 0xeb });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x3e78, gbc.sp());
        EXPECT(0xebcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 03C4
        gbc.setState(0xa3be, 0x6421, 0xfa30, 0xe4fb, 0x8f0, 0x9118, 0x0, 0x0);
        gbc.writeMem(0xa3be, { 0xc2, 0x2c, 0xc5 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x6421, gbc.sp());
        EXPECT(0xc52c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xa3be));
        EXPECT(0x2c, gbc.readMem(0xa3bf));
        EXPECT(0xc5, gbc.readMem(0xa3c0));
        // C2 03C5
        gbc.setState(0x44ac, 0x800e, 0xc4a0, 0x69fa, 0x81de, 0xa363, 0x1, 0x1);
        gbc.writeMem(0x44ac, { 0xc2, 0x6, 0xb0 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x800e, gbc.sp());
        EXPECT(0x44af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 03C6
        gbc.setState(0x4afd, 0x6c63, 0xc940, 0x7a69, 0x8e5d, 0x1b13, 0x0, 0x1);
        gbc.writeMem(0x4afd, { 0xc2, 0xeb, 0xd3 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x6c63, gbc.sp());
        EXPECT(0xd3eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 03C7
        gbc.setState(0x7421, 0x87fd, 0xeb20, 0x4d50, 0xfea7, 0xfbd3, 0x0, 0x0);
        gbc.writeMem(0x7421, { 0xc2, 0xbd, 0x5a });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x87fd, gbc.sp());
        EXPECT(0x5abd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 03C8
        gbc.setState(0x9918, 0xb95, 0xb590, 0xa04b, 0x32e9, 0xc904, 0x1, 0x0);
        gbc.writeMem(0x9918, { 0xc2, 0xa0, 0xa5 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xb95, gbc.sp());
        EXPECT(0x991b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x9918));
        EXPECT(0xa0, gbc.readMem(0x9919));
        EXPECT(0xa5, gbc.readMem(0x991a));
        // C2 03C9
        gbc.setState(0x4803, 0xa054, 0xf6d0, 0xfec1, 0x6be6, 0x9151, 0x0, 0x1);
        gbc.writeMem(0x4803, { 0xc2, 0x1, 0xda });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xa054, gbc.sp());
        EXPECT(0x4806, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 03CA
        gbc.setState(0x4d6a, 0x607b, 0x9870, 0x492a, 0xced6, 0xde9e, 0x1, 0x0);
        gbc.writeMem(0x4d6a, { 0xc2, 0xff, 0x61 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x607b, gbc.sp());
        EXPECT(0x61ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 03CB
        gbc.setState(0x97d1, 0xefec, 0xefc0, 0x9d14, 0x5de8, 0x6150, 0x1, 0x1);
        gbc.writeMem(0x97d1, { 0xc2, 0x4b, 0x27 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xefec, gbc.sp());
        EXPECT(0x97d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x97d1));
        EXPECT(0x4b, gbc.readMem(0x97d2));
        EXPECT(0x27, gbc.readMem(0x97d3));
        // C2 03CC
        gbc.setState(0x118f, 0x8751, 0x8470, 0xad5e, 0x467d, 0x9321, 0x1, 0x1);
        gbc.writeMem(0x118f, { 0xc2, 0x93, 0xd4 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x8751, gbc.sp());
        EXPECT(0xd493, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 03CD
        gbc.setState(0x7aa9, 0x6213, 0x54a0, 0x53c, 0x4997, 0x737, 0x0, 0x1);
        gbc.writeMem(0x7aa9, { 0xc2, 0xc8, 0xf9 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x6213, gbc.sp());
        EXPECT(0x7aac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 03CE
        gbc.setState(0x9e06, 0xce45, 0xaa30, 0xf131, 0x3ac0, 0x6895, 0x0, 0x0);
        gbc.writeMem(0x9e06, { 0xc2, 0x92, 0xcf });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xce45, gbc.sp());
        EXPECT(0xcf92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x9e06));
        EXPECT(0x92, gbc.readMem(0x9e07));
        EXPECT(0xcf, gbc.readMem(0x9e08));
        // C2 03D0
        gbc.setState(0x7ed1, 0x314f, 0x89a0, 0x4825, 0x9abf, 0xb5b, 0x0, 0x1);
        gbc.writeMem(0x7ed1, { 0xc2, 0xc9, 0xe7 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x314f, gbc.sp());
        EXPECT(0x7ed4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 03D1
        gbc.setState(0xe089, 0x3fcd, 0xdce0, 0x9dce, 0xde30, 0x2301, 0x0, 0x1);
        gbc.writeMem(0xe089, { 0xc2, 0x5c, 0xd6 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x3fcd, gbc.sp());
        EXPECT(0xe08c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xe089));
        EXPECT(0x5c, gbc.readMem(0xe08a));
        EXPECT(0xd6, gbc.readMem(0xe08b));
        // C2 03D2
        gbc.setState(0xba99, 0x8f3b, 0x7120, 0x2b0a, 0x7bcb, 0x4553, 0x0, 0x0);
        gbc.writeMem(0xba99, { 0xc2, 0x59, 0xde });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x8f3b, gbc.sp());
        EXPECT(0xde59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xba99));
        EXPECT(0x59, gbc.readMem(0xba9a));
        EXPECT(0xde, gbc.readMem(0xba9b));
        // C2 03D3
        gbc.setState(0xa784, 0x77c4, 0xc770, 0x50d6, 0x6482, 0xfa38, 0x1, 0x0);
        gbc.writeMem(0xa784, { 0xc2, 0x83, 0x23 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x77c4, gbc.sp());
        EXPECT(0x2383, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xa784));
        EXPECT(0x83, gbc.readMem(0xa785));
        EXPECT(0x23, gbc.readMem(0xa786));
        // C2 03D4
        gbc.setState(0x5de4, 0x6d6, 0x4380, 0xc4aa, 0x657f, 0x339b, 0x1, 0x0);
        gbc.writeMem(0x5de4, { 0xc2, 0x4b, 0x53 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x6d6, gbc.sp());
        EXPECT(0x5de7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 03D5
        gbc.setState(0x54f8, 0xea7f, 0x1f70, 0xb329, 0xf937, 0x3924, 0x0, 0x0);
        gbc.writeMem(0x54f8, { 0xc2, 0x6b, 0xe4 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xea7f, gbc.sp());
        EXPECT(0xe46b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 03D6
        gbc.setState(0xbc8, 0x519d, 0x610, 0x61bd, 0x1ca3, 0x707d, 0x0, 0x0);
        gbc.writeMem(0xbc8, { 0xc2, 0x30, 0x95 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x519d, gbc.sp());
        EXPECT(0x9530, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 03D7
        gbc.setState(0x8138, 0x461e, 0x5d70, 0xb186, 0xa18b, 0x6164, 0x0, 0x1);
        gbc.writeMem(0x8138, { 0xc2, 0x3e, 0xa8 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x461e, gbc.sp());
        EXPECT(0xa83e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x8138));
        EXPECT(0x3e, gbc.readMem(0x8139));
        EXPECT(0xa8, gbc.readMem(0x813a));
        // C2 03D8
        gbc.setState(0x22ed, 0x6e56, 0xd130, 0x381e, 0x6fe, 0xb674, 0x0, 0x0);
        gbc.writeMem(0x22ed, { 0xc2, 0x62, 0x94 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x6e56, gbc.sp());
        EXPECT(0x9462, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 03D9
        gbc.setState(0x80b6, 0xdffc, 0xe350, 0x573f, 0xe791, 0x98ba, 0x0, 0x1);
        gbc.writeMem(0x80b6, { 0xc2, 0x83, 0x17 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xdffc, gbc.sp());
        EXPECT(0x1783, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x80b6));
        EXPECT(0x83, gbc.readMem(0x80b7));
        EXPECT(0x17, gbc.readMem(0x80b8));
        // C2 03DA
        gbc.setState(0xb71, 0xc377, 0x5c00, 0x9377, 0xae5c, 0x18f8, 0x0, 0x1);
        gbc.writeMem(0xb71, { 0xc2, 0xbc, 0x83 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xc377, gbc.sp());
        EXPECT(0x83bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 03DB
        gbc.setState(0x1659, 0x9816, 0x7e10, 0x9ae6, 0xfd92, 0x9c17, 0x0, 0x1);
        gbc.writeMem(0x1659, { 0xc2, 0xf3, 0x2b });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x9816, gbc.sp());
        EXPECT(0x2bf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 03DC
        gbc.setState(0xd591, 0xaa3, 0xaab0, 0x217, 0x2180, 0xe56b, 0x1, 0x1);
        gbc.writeMem(0xd591, { 0xc2, 0x8c, 0xe3 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xaa3, gbc.sp());
        EXPECT(0xd594, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xd591));
        EXPECT(0x8c, gbc.readMem(0xd592));
        EXPECT(0xe3, gbc.readMem(0xd593));
        // C2 03E1
        gbc.setState(0x279d, 0xf53a, 0x76c0, 0x28d6, 0xcaa3, 0xac63, 0x1, 0x0);
        gbc.writeMem(0x279d, { 0xc2, 0xb4, 0x41 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xf53a, gbc.sp());
        EXPECT(0x27a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // C2 03E2
        gbc.setState(0x6257, 0xfafe, 0x60b0, 0x169b, 0x15f2, 0xb532, 0x1, 0x1);
        gbc.writeMem(0x6257, { 0xc2, 0xe0, 0xb6 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xfafe, gbc.sp());
        EXPECT(0x625a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 03E3
        gbc.setState(0x60ff, 0x7eb1, 0x2c50, 0xb2b, 0x1cd4, 0x6dd4, 0x0, 0x1);
        gbc.writeMem(0x60ff, { 0xc2, 0x2a, 0x84 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x7eb1, gbc.sp());
        EXPECT(0x842a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 03E4
        gbc.setState(0x43bd, 0xe0d8, 0x4fb0, 0x4c1b, 0x3e4d, 0x43ab, 0x0, 0x1);
        gbc.writeMem(0x43bd, { 0xc2, 0xa4, 0x39 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xe0d8, gbc.sp());
        EXPECT(0x43c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // C2 03E5
        gbc.setState(0xa44f, 0x51e, 0xaf10, 0x507d, 0x267f, 0xcdbe, 0x1, 0x0);
        gbc.writeMem(0xa44f, { 0xc2, 0x67, 0x83 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x51e, gbc.sp());
        EXPECT(0x8367, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xa44f));
        EXPECT(0x67, gbc.readMem(0xa450));
        EXPECT(0x83, gbc.readMem(0xa451));
        // C2 03E6
        gbc.setState(0xab4c, 0xb6c9, 0x1d30, 0xd659, 0x2b53, 0x6351, 0x1, 0x1);
        gbc.writeMem(0xab4c, { 0xc2, 0x5, 0x16 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xb6c9, gbc.sp());
        EXPECT(0x1605, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xab4c));
        EXPECT(0x5, gbc.readMem(0xab4d));
        EXPECT(0x16, gbc.readMem(0xab4e));
        // C2 03E7
        gbc.setState(0xb0f9, 0x8275, 0x2d50, 0x818c, 0xe211, 0xa194, 0x1, 0x1);
        gbc.writeMem(0xb0f9, { 0xc2, 0xdd, 0x62 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x8275, gbc.sp());
        EXPECT(0x62dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xb0f9));
        EXPECT(0xdd, gbc.readMem(0xb0fa));
        EXPECT(0x62, gbc.readMem(0xb0fb));
    }
