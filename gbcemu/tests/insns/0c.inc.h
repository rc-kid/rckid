    TEST(gbcemu, opcode_0c) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 0C 0000
        gbc.setState(0x2a66, 0x414, 0x93e0, 0x621e, 0xa84d, 0x8816, 0x1, 0x0);
        gbc.writeMem(0x2a66, { 0xc });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x414, gbc.sp());
        EXPECT(0x2a67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 0001
        gbc.setState(0xe1bf, 0x5fbe, 0xc860, 0xb287, 0x2801, 0xd8a7, 0x1, 0x1);
        gbc.writeMem(0xe1bf, { 0xc });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x5fbe, gbc.sp());
        EXPECT(0xe1c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xe1bf));
        // 0C 0002
        gbc.setState(0xb813, 0x3e99, 0x6df0, 0xa99a, 0x195d, 0x501, 0x0, 0x0);
        gbc.writeMem(0xb813, { 0xc });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x3e99, gbc.sp());
        EXPECT(0xb814, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xb813));
        // 0C 0003
        gbc.setState(0x6b50, 0x9552, 0x4020, 0xb145, 0xcd78, 0x421e, 0x1, 0x0);
        gbc.writeMem(0x6b50, { 0xc });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x9552, gbc.sp());
        EXPECT(0x6b51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 0004
        gbc.setState(0xed13, 0xbbb8, 0xb670, 0xa697, 0x4353, 0xbcff, 0x0, 0x1);
        gbc.writeMem(0xed13, { 0xc });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xbbb8, gbc.sp());
        EXPECT(0xed14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xed13));
        // 0C 0005
        gbc.setState(0x2c8a, 0x5dc0, 0x7460, 0x3acc, 0x6fee, 0x1341, 0x1, 0x1);
        gbc.writeMem(0x2c8a, { 0xc });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x5dc0, gbc.sp());
        EXPECT(0x2c8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 0006
        gbc.setState(0x3820, 0x7aca, 0x5c60, 0xee9, 0xb8ee, 0x6aff, 0x0, 0x0);
        gbc.writeMem(0x3820, { 0xc });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x7aca, gbc.sp());
        EXPECT(0x3821, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 0007
        gbc.setState(0x40fa, 0x355f, 0x1180, 0x4528, 0x3ac0, 0x516f, 0x0, 0x1);
        gbc.writeMem(0x40fa, { 0xc });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x355f, gbc.sp());
        EXPECT(0x40fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 0008
        gbc.setState(0x3231, 0x3ba, 0x1290, 0x23c6, 0xdbbe, 0x36e8, 0x1, 0x0);
        gbc.writeMem(0x3231, { 0xc });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x3ba, gbc.sp());
        EXPECT(0x3232, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0009
        gbc.setState(0x72fc, 0xb1b2, 0xb1c0, 0x4833, 0x7cb6, 0xd93f, 0x0, 0x0);
        gbc.writeMem(0x72fc, { 0xc });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xb1b2, gbc.sp());
        EXPECT(0x72fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 000A
        gbc.setState(0x3843, 0x5192, 0xa810, 0xdbac, 0x2177, 0x712c, 0x0, 0x0);
        gbc.writeMem(0x3843, { 0xc });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x5192, gbc.sp());
        EXPECT(0x3844, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 000B
        gbc.setState(0x5a1c, 0x9d7d, 0x7670, 0xbcd9, 0x4625, 0x21f3, 0x0, 0x0);
        gbc.writeMem(0x5a1c, { 0xc });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x9d7d, gbc.sp());
        EXPECT(0x5a1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 000C
        gbc.setState(0x8f5f, 0xcb6a, 0x3490, 0x9877, 0x1d06, 0x34bb, 0x0, 0x0);
        gbc.writeMem(0x8f5f, { 0xc });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xcb6a, gbc.sp());
        EXPECT(0x8f60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x8f5f));
        // 0C 000D
        gbc.setState(0x41aa, 0x1442, 0x18f0, 0x1444, 0x26a2, 0xe6c7, 0x0, 0x0);
        gbc.writeMem(0x41aa, { 0xc });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x1442, gbc.sp());
        EXPECT(0x41ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 000E
        gbc.setState(0xa19a, 0xccbf, 0xb480, 0xd8ac, 0xe423, 0xdcfb, 0x0, 0x0);
        gbc.writeMem(0xa19a, { 0xc });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xccbf, gbc.sp());
        EXPECT(0xa19b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xa19a));
        // 0C 000F
        gbc.setState(0x8d56, 0xce96, 0x2050, 0xb304, 0xda88, 0x35fa, 0x0, 0x1);
        gbc.writeMem(0x8d56, { 0xc });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xce96, gbc.sp());
        EXPECT(0x8d57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x8d56));
        // 0C 0010
        gbc.setState(0x43ff, 0xd396, 0xc0b0, 0xa57d, 0xb0d0, 0xb348, 0x1, 0x0);
        gbc.writeMem(0x43ff, { 0xc });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xd396, gbc.sp());
        EXPECT(0x4400, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0011
        gbc.setState(0x788b, 0xb75e, 0xa740, 0xb3c0, 0x5bce, 0x39c9, 0x1, 0x1);
        gbc.writeMem(0x788b, { 0xc });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xb75e, gbc.sp());
        EXPECT(0x788c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 0012
        gbc.setState(0x49a6, 0x4bd1, 0x4500, 0xdcd3, 0xedf5, 0xc7d3, 0x1, 0x0);
        gbc.writeMem(0x49a6, { 0xc });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x4bd1, gbc.sp());
        EXPECT(0x49a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 0013
        gbc.setState(0x7d68, 0x8514, 0x8a70, 0x224b, 0xa289, 0xeaff, 0x1, 0x0);
        gbc.writeMem(0x7d68, { 0xc });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x8514, gbc.sp());
        EXPECT(0x7d69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0014
        gbc.setState(0x12d3, 0xe77d, 0x7630, 0xf418, 0xe0be, 0xbd9a, 0x1, 0x0);
        gbc.writeMem(0x12d3, { 0xc });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xe77d, gbc.sp());
        EXPECT(0x12d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0015
        gbc.setState(0x5e90, 0xb8f5, 0xbcb0, 0x1490, 0x7780, 0xe71, 0x1, 0x1);
        gbc.writeMem(0x5e90, { 0xc });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xb8f5, gbc.sp());
        EXPECT(0x5e91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0016
        gbc.setState(0x6b05, 0xefe6, 0x97c0, 0x9bb, 0xf9ec, 0x9387, 0x1, 0x0);
        gbc.writeMem(0x6b05, { 0xc });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xefe6, gbc.sp());
        EXPECT(0x6b06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 0017
        gbc.setState(0xa8a1, 0xb24c, 0x1e20, 0x6c91, 0x45bf, 0xa2a4, 0x0, 0x1);
        gbc.writeMem(0xa8a1, { 0xc });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xb24c, gbc.sp());
        EXPECT(0xa8a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xa8a1));
        // 0C 0018
        gbc.setState(0xa101, 0x7e80, 0xded0, 0x8787, 0x2e1b, 0x3788, 0x0, 0x0);
        gbc.writeMem(0xa101, { 0xc });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x7e80, gbc.sp());
        EXPECT(0xa102, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xa101));
        // 0C 0019
        gbc.setState(0x213f, 0x6fb, 0xe0, 0x1875, 0xdd38, 0xa0a4, 0x0, 0x1);
        gbc.writeMem(0x213f, { 0xc });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x6fb, gbc.sp());
        EXPECT(0x2140, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 001A
        gbc.setState(0xcf9d, 0x9bc2, 0x7a60, 0x4f4, 0xf677, 0x8e85, 0x1, 0x1);
        gbc.writeMem(0xcf9d, { 0xc });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x9bc2, gbc.sp());
        EXPECT(0xcf9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xcf9d));
        // 0C 001B
        gbc.setState(0x4147, 0x17d3, 0x1ca0, 0x5327, 0x472c, 0xfc83, 0x0, 0x0);
        gbc.writeMem(0x4147, { 0xc });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x17d3, gbc.sp());
        EXPECT(0x4148, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 001C
        gbc.setState(0xade1, 0xf579, 0xa9f0, 0xc304, 0x1a76, 0x8d96, 0x0, 0x0);
        gbc.writeMem(0xade1, { 0xc });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xf579, gbc.sp());
        EXPECT(0xade2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xade1));
        // 0C 001D
        gbc.setState(0x6322, 0xc0b7, 0x7e40, 0x54a4, 0xad52, 0x220d, 0x0, 0x0);
        gbc.writeMem(0x6322, { 0xc });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xc0b7, gbc.sp());
        EXPECT(0x6323, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 001E
        gbc.setState(0x939e, 0xcf0e, 0x3b90, 0x5d0e, 0xedec, 0xec90, 0x1, 0x1);
        gbc.writeMem(0x939e, { 0xc });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xcf0e, gbc.sp());
        EXPECT(0x939f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x939e));
        // 0C 001F
        gbc.setState(0xb414, 0xc29f, 0x5080, 0x9296, 0xaac9, 0xab5e, 0x0, 0x0);
        gbc.writeMem(0xb414, { 0xc });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xc29f, gbc.sp());
        EXPECT(0xb415, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xb414));
        // 0C 0021
        gbc.setState(0x83bd, 0xc6d6, 0xa2a0, 0x600c, 0x66c6, 0x6cd9, 0x1, 0x0);
        gbc.writeMem(0x83bd, { 0xc });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xc6d6, gbc.sp());
        EXPECT(0x83be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x83bd));
        // 0C 0022
        gbc.setState(0x4932, 0x20f0, 0x75f0, 0x3ed0, 0x3bbc, 0x7624, 0x0, 0x1);
        gbc.writeMem(0x4932, { 0xc });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x20f0, gbc.sp());
        EXPECT(0x4933, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0023
        gbc.setState(0xe62b, 0xd392, 0xfa00, 0xadf3, 0x1ba5, 0x1ac0, 0x1, 0x0);
        gbc.writeMem(0xe62b, { 0xc });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xd392, gbc.sp());
        EXPECT(0xe62c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xe62b));
        // 0C 0024
        gbc.setState(0x1f0e, 0x53f0, 0x8510, 0xc2dd, 0xb2b2, 0xc2e7, 0x0, 0x0);
        gbc.writeMem(0x1f0e, { 0xc });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x53f0, gbc.sp());
        EXPECT(0x1f0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0026
        gbc.setState(0xe5bb, 0xf1e4, 0xc230, 0x743e, 0x7329, 0xff8d, 0x0, 0x1);
        gbc.writeMem(0xe5bb, { 0xc });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xf1e4, gbc.sp());
        EXPECT(0xe5bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xe5bb));
        // 0C 0027
        gbc.setState(0x8e71, 0x16c7, 0x9800, 0xa533, 0x7d60, 0x4a51, 0x0, 0x0);
        gbc.writeMem(0x8e71, { 0xc });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x16c7, gbc.sp());
        EXPECT(0x8e72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x8e71));
        // 0C 0028
        gbc.setState(0x3e39, 0xd335, 0x9670, 0x8d62, 0x9c0d, 0x9532, 0x0, 0x0);
        gbc.writeMem(0x3e39, { 0xc });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xd335, gbc.sp());
        EXPECT(0x3e3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0029
        gbc.setState(0x9c5c, 0x3665, 0xf290, 0x8c4d, 0x8d55, 0xa543, 0x1, 0x1);
        gbc.writeMem(0x9c5c, { 0xc });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x3665, gbc.sp());
        EXPECT(0x9c5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x9c5c));
        // 0C 002B
        gbc.setState(0xa403, 0x8fb7, 0x9af0, 0xae8d, 0x13bc, 0xd897, 0x1, 0x1);
        gbc.writeMem(0xa403, { 0xc });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x8fb7, gbc.sp());
        EXPECT(0xa404, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xa403));
        // 0C 002D
        gbc.setState(0x9366, 0xe98a, 0x9190, 0x45ff, 0x89fb, 0x35fb, 0x0, 0x1);
        gbc.writeMem(0x9366, { 0xc });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xe98a, gbc.sp());
        EXPECT(0x9367, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x9366));
        // 0C 002E
        gbc.setState(0xa439, 0x3a0b, 0xcd60, 0x6c68, 0x5dc9, 0xaa43, 0x0, 0x1);
        gbc.writeMem(0xa439, { 0xc });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x3a0b, gbc.sp());
        EXPECT(0xa43a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xa439));
        // 0C 002F
        gbc.setState(0x8b06, 0x5f4d, 0x6d50, 0x862b, 0x3c6d, 0x212e, 0x0, 0x1);
        gbc.writeMem(0x8b06, { 0xc });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x5f4d, gbc.sp());
        EXPECT(0x8b07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x8b06));
        // 0C 0030
        gbc.setState(0xb36e, 0x5dd8, 0x8280, 0x2190, 0x96b2, 0x1d8a, 0x0, 0x0);
        gbc.writeMem(0xb36e, { 0xc });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x5dd8, gbc.sp());
        EXPECT(0xb36f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xb36e));
        // 0C 0031
        gbc.setState(0xcc6f, 0x81bf, 0xc7a0, 0xbb68, 0x815b, 0xd2e5, 0x1, 0x0);
        gbc.writeMem(0xcc6f, { 0xc });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x81bf, gbc.sp());
        EXPECT(0xcc70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xcc6f));
        // 0C 0032
        gbc.setState(0x7a0a, 0xea6c, 0x9010, 0x6de, 0xc4d3, 0x44cc, 0x1, 0x0);
        gbc.writeMem(0x7a0a, { 0xc });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xea6c, gbc.sp());
        EXPECT(0x7a0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0033
        gbc.setState(0x61b3, 0xa8eb, 0x3200, 0x27a8, 0x296f, 0x63ca, 0x0, 0x0);
        gbc.writeMem(0x61b3, { 0xc });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xa8eb, gbc.sp());
        EXPECT(0x61b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 0035
        gbc.setState(0x64fe, 0x1112, 0x5ef0, 0x6200, 0xe2a3, 0x3129, 0x1, 0x0);
        gbc.writeMem(0x64fe, { 0xc });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x1112, gbc.sp());
        EXPECT(0x64ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0036
        gbc.setState(0xdffc, 0x5c0b, 0x4640, 0x112, 0xa74c, 0x515, 0x0, 0x0);
        gbc.writeMem(0xdffc, { 0xc });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x5c0b, gbc.sp());
        EXPECT(0xdffd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xdffc));
        // 0C 0037
        gbc.setState(0xb1d8, 0xf309, 0xc7f0, 0x8875, 0x8a2, 0x17c7, 0x1, 0x0);
        gbc.writeMem(0xb1d8, { 0xc });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xf309, gbc.sp());
        EXPECT(0xb1d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xb1d8));
        // 0C 0038
        gbc.setState(0x2e65, 0x6188, 0xe3e0, 0x9631, 0x6abb, 0x16f7, 0x1, 0x1);
        gbc.writeMem(0x2e65, { 0xc });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x6188, gbc.sp());
        EXPECT(0x2e66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 0039
        gbc.setState(0x752, 0x767c, 0x1d10, 0x1259, 0x7575, 0xd8b7, 0x0, 0x1);
        gbc.writeMem(0x752, { 0xc });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x767c, gbc.sp());
        EXPECT(0x753, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 003A
        gbc.setState(0xdd75, 0x9463, 0x6f0, 0x765e, 0xe13c, 0x8968, 0x1, 0x1);
        gbc.writeMem(0xdd75, { 0xc });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x9463, gbc.sp());
        EXPECT(0xdd76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xdd75));
        // 0C 003B
        gbc.setState(0xaf5b, 0xca13, 0xd4b0, 0xc32e, 0x53ab, 0xa2bc, 0x0, 0x0);
        gbc.writeMem(0xaf5b, { 0xc });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xca13, gbc.sp());
        EXPECT(0xaf5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xaf5b));
        // 0C 003C
        gbc.setState(0x2a0b, 0x688e, 0x2860, 0x8a2e, 0x46d1, 0x74f2, 0x0, 0x0);
        gbc.writeMem(0x2a0b, { 0xc });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x688e, gbc.sp());
        EXPECT(0x2a0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 003D
        gbc.setState(0x3ea7, 0x7153, 0x69b0, 0xf5a8, 0x609f, 0xfbfa, 0x1, 0x0);
        gbc.writeMem(0x3ea7, { 0xc });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x7153, gbc.sp());
        EXPECT(0x3ea8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 003E
        gbc.setState(0x15af, 0x2c5a, 0xdbf0, 0xa0d6, 0xb81a, 0xb1dd, 0x1, 0x1);
        gbc.writeMem(0x15af, { 0xc });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x2c5a, gbc.sp());
        EXPECT(0x15b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 003F
        gbc.setState(0x77b0, 0xfa26, 0xc450, 0x56d5, 0x54b8, 0xdf92, 0x0, 0x1);
        gbc.writeMem(0x77b0, { 0xc });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xfa26, gbc.sp());
        EXPECT(0x77b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0040
        gbc.setState(0xce8, 0x52bd, 0x1fc0, 0xbd4f, 0x65d6, 0x16eb, 0x0, 0x0);
        gbc.writeMem(0xce8, { 0xc });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x52bd, gbc.sp());
        EXPECT(0xce9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 0041
        gbc.setState(0x5f9a, 0x9dbb, 0xb6a0, 0xb6e1, 0xcfb5, 0xf855, 0x0, 0x0);
        gbc.writeMem(0x5f9a, { 0xc });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x9dbb, gbc.sp());
        EXPECT(0x5f9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 0044
        gbc.setState(0x6f43, 0x88ac, 0xcb60, 0x31c, 0x5e0c, 0x3c83, 0x1, 0x1);
        gbc.writeMem(0x6f43, { 0xc });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x88ac, gbc.sp());
        EXPECT(0x6f44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 0045
        gbc.setState(0x5402, 0xe099, 0x4750, 0x468, 0x481d, 0xc51e, 0x1, 0x1);
        gbc.writeMem(0x5402, { 0xc });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xe099, gbc.sp());
        EXPECT(0x5403, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0046
        gbc.setState(0x5aa, 0xc98e, 0x8160, 0xe2bb, 0xc6fc, 0x319a, 0x1, 0x1);
        gbc.writeMem(0x5aa, { 0xc });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xc98e, gbc.sp());
        EXPECT(0x5ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 0047
        gbc.setState(0x8b6, 0xa37d, 0x1590, 0x9159, 0x95ea, 0xb84e, 0x1, 0x0);
        gbc.writeMem(0x8b6, { 0xc });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xa37d, gbc.sp());
        EXPECT(0x8b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0048
        gbc.setState(0x2966, 0xd18c, 0x8a20, 0xd59f, 0x18c9, 0xbbb9, 0x1, 0x1);
        gbc.writeMem(0x2966, { 0xc });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xd18c, gbc.sp());
        EXPECT(0x2967, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 0049
        gbc.setState(0xa3d8, 0x56b8, 0xce50, 0x3842, 0xe07, 0xa191, 0x1, 0x1);
        gbc.writeMem(0xa3d8, { 0xc });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x56b8, gbc.sp());
        EXPECT(0xa3d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xa3d8));
        // 0C 004A
        gbc.setState(0xba13, 0x9601, 0x13e0, 0xa912, 0x2b7b, 0x95ae, 0x0, 0x1);
        gbc.writeMem(0xba13, { 0xc });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x9601, gbc.sp());
        EXPECT(0xba14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xba13));
        // 0C 004B
        gbc.setState(0x845a, 0x4e64, 0xb7e0, 0xc86, 0x5a89, 0xe970, 0x1, 0x1);
        gbc.writeMem(0x845a, { 0xc });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x4e64, gbc.sp());
        EXPECT(0x845b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x845a));
        // 0C 004C
        gbc.setState(0xe6c7, 0xe1a6, 0xc4b0, 0x3d34, 0xab7b, 0xb02f, 0x0, 0x0);
        gbc.writeMem(0xe6c7, { 0xc });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xe1a6, gbc.sp());
        EXPECT(0xe6c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xe6c7));
        // 0C 004D
        gbc.setState(0xd07, 0xc76a, 0x8860, 0x2dd5, 0xaec0, 0xc48f, 0x1, 0x1);
        gbc.writeMem(0xd07, { 0xc });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xc76a, gbc.sp());
        EXPECT(0xd08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 004E
        gbc.setState(0x928a, 0x8658, 0x9b80, 0xa88a, 0x41bb, 0x1313, 0x1, 0x1);
        gbc.writeMem(0x928a, { 0xc });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x8658, gbc.sp());
        EXPECT(0x928b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x928a));
        // 0C 004F
        gbc.setState(0x4521, 0x575c, 0xdf30, 0x45a1, 0x8c8a, 0xef6f, 0x0, 0x0);
        gbc.writeMem(0x4521, { 0xc });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x575c, gbc.sp());
        EXPECT(0x4522, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0051
        gbc.setState(0x74ba, 0x65a7, 0xc500, 0x73e5, 0x300e, 0x2ee6, 0x1, 0x1);
        gbc.writeMem(0x74ba, { 0xc });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x65a7, gbc.sp());
        EXPECT(0x74bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 0052
        gbc.setState(0xe4b3, 0xd0eb, 0x3ff0, 0x3f64, 0xacf2, 0x2a6, 0x1, 0x1);
        gbc.writeMem(0xe4b3, { 0xc });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xd0eb, gbc.sp());
        EXPECT(0xe4b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xe4b3));
        // 0C 0053
        gbc.setState(0xe750, 0xab14, 0x5e60, 0x465a, 0xc28b, 0x1a76, 0x0, 0x1);
        gbc.writeMem(0xe750, { 0xc });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xab14, gbc.sp());
        EXPECT(0xe751, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xe750));
        // 0C 0054
        gbc.setState(0x7e3d, 0x359f, 0xfb20, 0xd1b0, 0x89be, 0x9060, 0x0, 0x1);
        gbc.writeMem(0x7e3d, { 0xc });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x359f, gbc.sp());
        EXPECT(0x7e3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 0056
        gbc.setState(0xcd75, 0x9ed9, 0xdb80, 0x2368, 0x8b, 0xb5be, 0x0, 0x0);
        gbc.writeMem(0xcd75, { 0xc });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x9ed9, gbc.sp());
        EXPECT(0xcd76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xcd75));
        // 0C 0057
        gbc.setState(0xc288, 0x76b1, 0x5dc0, 0xb3f2, 0x603, 0x223b, 0x0, 0x1);
        gbc.writeMem(0xc288, { 0xc });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x76b1, gbc.sp());
        EXPECT(0xc289, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xc288));
        // 0C 0058
        gbc.setState(0xe0c2, 0xf46a, 0xb090, 0xf2bf, 0x586, 0x91ec, 0x1, 0x0);
        gbc.writeMem(0xe0c2, { 0xc });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xf46a, gbc.sp());
        EXPECT(0xe0c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xe0c2));
        // 0C 0059
        gbc.setState(0xade7, 0x19c8, 0x14c0, 0xab5f, 0xdc52, 0xb87f, 0x0, 0x1);
        gbc.writeMem(0xade7, { 0xc });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x19c8, gbc.sp());
        EXPECT(0xade8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xade7));
        // 0C 005A
        gbc.setState(0xb243, 0x6860, 0x1610, 0xf2e1, 0x4954, 0x4ce7, 0x0, 0x0);
        gbc.writeMem(0xb243, { 0xc });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x6860, gbc.sp());
        EXPECT(0xb244, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xb243));
        // 0C 005B
        gbc.setState(0xe857, 0x8936, 0x4db0, 0xb484, 0x500d, 0x5443, 0x0, 0x0);
        gbc.writeMem(0xe857, { 0xc });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x8936, gbc.sp());
        EXPECT(0xe858, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xe857));
        // 0C 005C
        gbc.setState(0xda2e, 0x6556, 0xc1c0, 0x2796, 0xfebf, 0x31ef, 0x0, 0x1);
        gbc.writeMem(0xda2e, { 0xc });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x6556, gbc.sp());
        EXPECT(0xda2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xda2e));
        // 0C 005D
        gbc.setState(0x639e, 0x8643, 0xf590, 0x7348, 0xcea7, 0xd317, 0x1, 0x1);
        gbc.writeMem(0x639e, { 0xc });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x8643, gbc.sp());
        EXPECT(0x639f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 005E
        gbc.setState(0x74da, 0x31bf, 0x7400, 0x79c5, 0x798a, 0x7ae8, 0x1, 0x1);
        gbc.writeMem(0x74da, { 0xc });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x31bf, gbc.sp());
        EXPECT(0x74db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 005F
        gbc.setState(0xdd2d, 0x827c, 0x3660, 0x8b47, 0x9412, 0xb26d, 0x0, 0x1);
        gbc.writeMem(0xdd2d, { 0xc });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x827c, gbc.sp());
        EXPECT(0xdd2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xdd2d));
        // 0C 0060
        gbc.setState(0x6c4d, 0x6275, 0xe3b0, 0x111a, 0xb647, 0xe871, 0x0, 0x1);
        gbc.writeMem(0x6c4d, { 0xc });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x6275, gbc.sp());
        EXPECT(0x6c4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0061
        gbc.setState(0x601b, 0x9a0c, 0xe0a0, 0x3c5c, 0x3939, 0x3ce4, 0x1, 0x1);
        gbc.writeMem(0x601b, { 0xc });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x9a0c, gbc.sp());
        EXPECT(0x601c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 0062
        gbc.setState(0xdd8b, 0x8333, 0x51c0, 0x95c, 0x7f47, 0xf19, 0x0, 0x1);
        gbc.writeMem(0xdd8b, { 0xc });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x8333, gbc.sp());
        EXPECT(0xdd8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xdd8b));
        // 0C 0063
        gbc.setState(0x6430, 0x918c, 0xe160, 0xad45, 0xe9b0, 0xef5d, 0x1, 0x1);
        gbc.writeMem(0x6430, { 0xc });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x918c, gbc.sp());
        EXPECT(0x6431, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 0064
        gbc.setState(0x3ea9, 0x7235, 0x5610, 0xfafe, 0x247c, 0x2303, 0x0, 0x0);
        gbc.writeMem(0x3ea9, { 0xc });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x7235, gbc.sp());
        EXPECT(0x3eaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0065
        gbc.setState(0x3b56, 0x2034, 0x1e60, 0x18a9, 0xe206, 0x5dd3, 0x1, 0x1);
        gbc.writeMem(0x3b56, { 0xc });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x2034, gbc.sp());
        EXPECT(0x3b57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 0066
        gbc.setState(0x4151, 0xc73d, 0x3460, 0xc73, 0x60ae, 0xc9c6, 0x0, 0x1);
        gbc.writeMem(0x4151, { 0xc });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xc73d, gbc.sp());
        EXPECT(0x4152, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 0067
        gbc.setState(0x572c, 0xf0f0, 0xfb10, 0xc460, 0x6679, 0x8ee1, 0x0, 0x1);
        gbc.writeMem(0x572c, { 0xc });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xf0f0, gbc.sp());
        EXPECT(0x572d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0068
        gbc.setState(0xbe07, 0x8af9, 0xdbc0, 0x8c03, 0xfe7e, 0xdfd9, 0x0, 0x0);
        gbc.writeMem(0xbe07, { 0xc });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x8af9, gbc.sp());
        EXPECT(0xbe08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xbe07));
        // 0C 0069
        gbc.setState(0x27da, 0xdb61, 0x6040, 0xc059, 0xab06, 0x3955, 0x1, 0x1);
        gbc.writeMem(0x27da, { 0xc });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xdb61, gbc.sp());
        EXPECT(0x27db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 006A
        gbc.setState(0x28c4, 0xc52, 0x7cf0, 0xa50a, 0xfd67, 0x8ed8, 0x0, 0x1);
        gbc.writeMem(0x28c4, { 0xc });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xc52, gbc.sp());
        EXPECT(0x28c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 006B
        gbc.setState(0xd2a1, 0xeb14, 0xf120, 0xade1, 0xc6f8, 0xd8fe, 0x1, 0x0);
        gbc.writeMem(0xd2a1, { 0xc });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xeb14, gbc.sp());
        EXPECT(0xd2a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xd2a1));
        // 0C 006C
        gbc.setState(0x3143, 0x26b, 0x2f20, 0x7937, 0xd8e, 0xc883, 0x0, 0x0);
        gbc.writeMem(0x3143, { 0xc });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x26b, gbc.sp());
        EXPECT(0x3144, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 006D
        gbc.setState(0xd81a, 0xa946, 0xa6d0, 0x3d2a, 0x79f0, 0x4764, 0x0, 0x0);
        gbc.writeMem(0xd81a, { 0xc });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xa946, gbc.sp());
        EXPECT(0xd81b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xd81a));
        // 0C 006E
        gbc.setState(0xa7b7, 0xcc2f, 0x14e0, 0x6ece, 0x6bd9, 0x19c5, 0x1, 0x1);
        gbc.writeMem(0xa7b7, { 0xc });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xcc2f, gbc.sp());
        EXPECT(0xa7b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xa7b7));
        // 0C 006F
        gbc.setState(0xae38, 0x363f, 0x1b00, 0xbfd8, 0x5396, 0x4aa5, 0x1, 0x0);
        gbc.writeMem(0xae38, { 0xc });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x363f, gbc.sp());
        EXPECT(0xae39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xae38));
        // 0C 0070
        gbc.setState(0xd045, 0xed50, 0x4710, 0xa2cc, 0x5e6, 0x82da, 0x1, 0x0);
        gbc.writeMem(0xd045, { 0xc });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xed50, gbc.sp());
        EXPECT(0xd046, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xd045));
        // 0C 0071
        gbc.setState(0x933f, 0xbf36, 0xf510, 0x5628, 0x6b9b, 0x1cce, 0x1, 0x0);
        gbc.writeMem(0x933f, { 0xc });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xbf36, gbc.sp());
        EXPECT(0x9340, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x933f));
        // 0C 0072
        gbc.setState(0x9bf1, 0x54b1, 0x8ea0, 0x8ca9, 0x8c64, 0xb87d, 0x0, 0x1);
        gbc.writeMem(0x9bf1, { 0xc });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x54b1, gbc.sp());
        EXPECT(0x9bf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x9bf1));
        // 0C 0073
        gbc.setState(0xd634, 0xf284, 0xeac0, 0x57ff, 0xbb2a, 0x9853, 0x1, 0x0);
        gbc.writeMem(0xd634, { 0xc });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xf284, gbc.sp());
        EXPECT(0xd635, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xd634));
        // 0C 0074
        gbc.setState(0xad42, 0xdbc3, 0x510, 0x6f67, 0x9623, 0xb8f5, 0x0, 0x0);
        gbc.writeMem(0xad42, { 0xc });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xdbc3, gbc.sp());
        EXPECT(0xad43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xad42));
        // 0C 0075
        gbc.setState(0x8d22, 0xfcd7, 0x6b60, 0xa34e, 0xe4cb, 0x6cc5, 0x1, 0x1);
        gbc.writeMem(0x8d22, { 0xc });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xfcd7, gbc.sp());
        EXPECT(0x8d23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x8d22));
        // 0C 0076
        gbc.setState(0x6fdf, 0x3597, 0x93d0, 0x607e, 0xefaa, 0xe0b3, 0x0, 0x1);
        gbc.writeMem(0x6fdf, { 0xc });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x3597, gbc.sp());
        EXPECT(0x6fe0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0077
        gbc.setState(0xcb6c, 0xbc6a, 0x35d0, 0x3099, 0x858, 0xec72, 0x0, 0x0);
        gbc.writeMem(0xcb6c, { 0xc });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xbc6a, gbc.sp());
        EXPECT(0xcb6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xcb6c));
        // 0C 0078
        gbc.setState(0xd423, 0xc7bc, 0xffe0, 0x520f, 0xf842, 0x3642, 0x0, 0x0);
        gbc.writeMem(0xd423, { 0xc });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xc7bc, gbc.sp());
        EXPECT(0xd424, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xd423));
        // 0C 007A
        gbc.setState(0x6a28, 0x6ecc, 0x3240, 0xba52, 0xbefe, 0x8a2e, 0x1, 0x0);
        gbc.writeMem(0x6a28, { 0xc });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x6ecc, gbc.sp());
        EXPECT(0x6a29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 007B
        gbc.setState(0x933c, 0x1ce3, 0x5ce0, 0x790a, 0x9abb, 0x620f, 0x1, 0x1);
        gbc.writeMem(0x933c, { 0xc });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x1ce3, gbc.sp());
        EXPECT(0x933d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x933c));
        // 0C 007C
        gbc.setState(0x870d, 0xfbe2, 0xc250, 0x890e, 0xffa2, 0x2e80, 0x0, 0x0);
        gbc.writeMem(0x870d, { 0xc });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xfbe2, gbc.sp());
        EXPECT(0x870e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x870d));
        // 0C 007D
        gbc.setState(0x332e, 0x94dc, 0x7910, 0x2df2, 0xad76, 0xe744, 0x0, 0x0);
        gbc.writeMem(0x332e, { 0xc });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x94dc, gbc.sp());
        EXPECT(0x332f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 007E
        gbc.setState(0x6daa, 0x3470, 0xc1d0, 0xce1c, 0x26d7, 0x76a4, 0x1, 0x1);
        gbc.writeMem(0x6daa, { 0xc });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x3470, gbc.sp());
        EXPECT(0x6dab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 007F
        gbc.setState(0x1a08, 0x3822, 0x3200, 0x9c13, 0x63bd, 0x913b, 0x0, 0x0);
        gbc.writeMem(0x1a08, { 0xc });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x3822, gbc.sp());
        EXPECT(0x1a09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 0080
        gbc.setState(0xdbd7, 0x5e42, 0xbff0, 0x2f77, 0xa086, 0x7852, 0x1, 0x1);
        gbc.writeMem(0xdbd7, { 0xc });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x5e42, gbc.sp());
        EXPECT(0xdbd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xdbd7));
        // 0C 0081
        gbc.setState(0x76f4, 0xcf0, 0x3c90, 0xd86f, 0x64c1, 0x9bbf, 0x1, 0x1);
        gbc.writeMem(0x76f4, { 0xc });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xcf0, gbc.sp());
        EXPECT(0x76f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0082
        gbc.setState(0xbc12, 0x3461, 0xd830, 0xa760, 0x4688, 0xeb08, 0x1, 0x0);
        gbc.writeMem(0xbc12, { 0xc });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x3461, gbc.sp());
        EXPECT(0xbc13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xbc12));
        // 0C 0083
        gbc.setState(0x2899, 0x477a, 0x110, 0x260, 0x7b6b, 0xfb04, 0x0, 0x0);
        gbc.writeMem(0x2899, { 0xc });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x477a, gbc.sp());
        EXPECT(0x289a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0084
        gbc.setState(0xdda5, 0x4151, 0x9910, 0x7b69, 0x33a3, 0x9374, 0x0, 0x1);
        gbc.writeMem(0xdda5, { 0xc });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x4151, gbc.sp());
        EXPECT(0xdda6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xdda5));
        // 0C 0085
        gbc.setState(0x46b7, 0xea6d, 0xd210, 0xb1e3, 0xd2b7, 0xa51d, 0x1, 0x1);
        gbc.writeMem(0x46b7, { 0xc });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xea6d, gbc.sp());
        EXPECT(0x46b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0086
        gbc.setState(0x5fd, 0xbf79, 0x6e90, 0xaba4, 0x3ad8, 0xd6b0, 0x1, 0x0);
        gbc.writeMem(0x5fd, { 0xc });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xbf79, gbc.sp());
        EXPECT(0x5fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0088
        gbc.setState(0x59e7, 0xd53a, 0x2bf0, 0x8806, 0x34bd, 0x4a70, 0x0, 0x1);
        gbc.writeMem(0x59e7, { 0xc });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xd53a, gbc.sp());
        EXPECT(0x59e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0089
        gbc.setState(0x5fa7, 0x3e04, 0xfec0, 0x947e, 0xf2b8, 0xb886, 0x1, 0x1);
        gbc.writeMem(0x5fa7, { 0xc });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x3e04, gbc.sp());
        EXPECT(0x5fa8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 008A
        gbc.setState(0x5a53, 0x65f, 0x2070, 0xa609, 0x9ecd, 0x6e48, 0x1, 0x0);
        gbc.writeMem(0x5a53, { 0xc });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x65f, gbc.sp());
        EXPECT(0x5a54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 008B
        gbc.setState(0xd51b, 0x73b7, 0xb390, 0x9fd2, 0xd887, 0x6f94, 0x0, 0x1);
        gbc.writeMem(0xd51b, { 0xc });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x73b7, gbc.sp());
        EXPECT(0xd51c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xd51b));
        // 0C 008C
        gbc.setState(0x20e5, 0x975c, 0xbd40, 0x6663, 0xfe81, 0x10e1, 0x0, 0x1);
        gbc.writeMem(0x20e5, { 0xc });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x975c, gbc.sp());
        EXPECT(0x20e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 008D
        gbc.setState(0xa2a7, 0x1a9e, 0xc100, 0x773d, 0x558d, 0x81f9, 0x0, 0x1);
        gbc.writeMem(0xa2a7, { 0xc });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x1a9e, gbc.sp());
        EXPECT(0xa2a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xa2a7));
        // 0C 008E
        gbc.setState(0x42fa, 0x2760, 0xf990, 0x8767, 0xfc91, 0x3f84, 0x1, 0x1);
        gbc.writeMem(0x42fa, { 0xc });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x2760, gbc.sp());
        EXPECT(0x42fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 008F
        gbc.setState(0x1669, 0xbf29, 0xf450, 0x182c, 0x80b6, 0xb019, 0x0, 0x1);
        gbc.writeMem(0x1669, { 0xc });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xbf29, gbc.sp());
        EXPECT(0x166a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0090
        gbc.setState(0x9cc4, 0x65d3, 0x8090, 0x95da, 0x28c4, 0xe9cf, 0x1, 0x0);
        gbc.writeMem(0x9cc4, { 0xc });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x65d3, gbc.sp());
        EXPECT(0x9cc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x9cc4));
        // 0C 0091
        gbc.setState(0xa5c9, 0x8e6e, 0x8a0, 0x8ced, 0x2e3, 0xa1b4, 0x0, 0x1);
        gbc.writeMem(0xa5c9, { 0xc });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x8e6e, gbc.sp());
        EXPECT(0xa5ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xa5c9));
        // 0C 0092
        gbc.setState(0xc13d, 0x7560, 0x64a0, 0xc4b8, 0x14af, 0x6d69, 0x0, 0x1);
        gbc.writeMem(0xc13d, { 0xc });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x7560, gbc.sp());
        EXPECT(0xc13e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xc13d));
        // 0C 0093
        gbc.setState(0xe87a, 0xf9ab, 0x8420, 0x1e79, 0xe559, 0x92ae, 0x1, 0x0);
        gbc.writeMem(0xe87a, { 0xc });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xf9ab, gbc.sp());
        EXPECT(0xe87b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xe87a));
        // 0C 0094
        gbc.setState(0xe7c7, 0xa13f, 0x2b40, 0x77bb, 0xc831, 0xd375, 0x1, 0x1);
        gbc.writeMem(0xe7c7, { 0xc });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xa13f, gbc.sp());
        EXPECT(0xe7c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xe7c7));
        // 0C 0096
        gbc.setState(0x510d, 0xcc6a, 0xc470, 0x5fb3, 0x1c1e, 0x9c8b, 0x0, 0x1);
        gbc.writeMem(0x510d, { 0xc });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xcc6a, gbc.sp());
        EXPECT(0x510e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0097
        gbc.setState(0x9670, 0x98b6, 0xa480, 0xe17e, 0x5f88, 0x716f, 0x1, 0x1);
        gbc.writeMem(0x9670, { 0xc });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x98b6, gbc.sp());
        EXPECT(0x9671, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x9670));
        // 0C 0099
        gbc.setState(0x63f3, 0xb0ce, 0xe10, 0xf953, 0x951a, 0x6b23, 0x1, 0x0);
        gbc.writeMem(0x63f3, { 0xc });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xb0ce, gbc.sp());
        EXPECT(0x63f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 009A
        gbc.setState(0xdb9f, 0xa98f, 0xfe00, 0x9dcb, 0x89a5, 0x7bd8, 0x0, 0x1);
        gbc.writeMem(0xdb9f, { 0xc });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xa98f, gbc.sp());
        EXPECT(0xdba0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xdb9f));
        // 0C 009B
        gbc.setState(0xa260, 0xc82f, 0x19e0, 0xf753, 0x318c, 0xa7bb, 0x0, 0x1);
        gbc.writeMem(0xa260, { 0xc });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xc82f, gbc.sp());
        EXPECT(0xa261, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xa260));
        // 0C 009C
        gbc.setState(0xc55, 0xae, 0xb8e0, 0x10dc, 0xd2b3, 0x4103, 0x1, 0x0);
        gbc.writeMem(0xc55, { 0xc });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xae, gbc.sp());
        EXPECT(0xc56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 009D
        gbc.setState(0x992, 0x6729, 0x7010, 0x6eb8, 0x746b, 0x3649, 0x1, 0x1);
        gbc.writeMem(0x992, { 0xc });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x6729, gbc.sp());
        EXPECT(0x993, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 009E
        gbc.setState(0x2a4f, 0xe57e, 0x29f0, 0xe975, 0xafd0, 0xcd9b, 0x1, 0x1);
        gbc.writeMem(0x2a4f, { 0xc });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xe57e, gbc.sp());
        EXPECT(0x2a50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 009F
        gbc.setState(0x6541, 0x6a3a, 0x2700, 0x3274, 0x51, 0xc27e, 0x1, 0x0);
        gbc.writeMem(0x6541, { 0xc });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x6a3a, gbc.sp());
        EXPECT(0x6542, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 00A0
        gbc.setState(0xe076, 0xf69c, 0x2340, 0x7c98, 0x3ae2, 0xb296, 0x1, 0x1);
        gbc.writeMem(0xe076, { 0xc });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xf69c, gbc.sp());
        EXPECT(0xe077, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xe076));
        // 0C 00A1
        gbc.setState(0x9675, 0xb3e6, 0x75f0, 0x5bd9, 0x4340, 0xe090, 0x1, 0x0);
        gbc.writeMem(0x9675, { 0xc });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xb3e6, gbc.sp());
        EXPECT(0x9676, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x9675));
        // 0C 00A2
        gbc.setState(0x5e27, 0x6ce0, 0x9a40, 0x2f0d, 0xb876, 0x4fd2, 0x1, 0x1);
        gbc.writeMem(0x5e27, { 0xc });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x6ce0, gbc.sp());
        EXPECT(0x5e28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 00A3
        gbc.setState(0xaf25, 0xe5b1, 0x6750, 0xb332, 0xccb8, 0x15ff, 0x1, 0x1);
        gbc.writeMem(0xaf25, { 0xc });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xe5b1, gbc.sp());
        EXPECT(0xaf26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xaf25));
        // 0C 00A4
        gbc.setState(0x75dd, 0x2f23, 0xf390, 0x3657, 0xaf07, 0x8e69, 0x1, 0x1);
        gbc.writeMem(0x75dd, { 0xc });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x2f23, gbc.sp());
        EXPECT(0x75de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 00A5
        gbc.setState(0x59b6, 0x529f, 0xdf80, 0x8383, 0xbc15, 0xc8cd, 0x1, 0x1);
        gbc.writeMem(0x59b6, { 0xc });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x529f, gbc.sp());
        EXPECT(0x59b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 00A6
        gbc.setState(0x60e8, 0xa7e3, 0x6fa0, 0x9d22, 0x4664, 0xfbfc, 0x1, 0x1);
        gbc.writeMem(0x60e8, { 0xc });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xa7e3, gbc.sp());
        EXPECT(0x60e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 00A7
        gbc.setState(0x1eaa, 0xe113, 0x43d0, 0x7881, 0x34f6, 0x8fc, 0x1, 0x0);
        gbc.writeMem(0x1eaa, { 0xc });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xe113, gbc.sp());
        EXPECT(0x1eab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 00A8
        gbc.setState(0x23cd, 0xd421, 0x2c30, 0xfcbb, 0xf254, 0xf8d9, 0x0, 0x1);
        gbc.writeMem(0x23cd, { 0xc });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xd421, gbc.sp());
        EXPECT(0x23ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 00A9
        gbc.setState(0x7924, 0x8c0c, 0x5dc0, 0xc182, 0x832e, 0xcddf, 0x0, 0x1);
        gbc.writeMem(0x7924, { 0xc });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x8c0c, gbc.sp());
        EXPECT(0x7925, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 00AA
        gbc.setState(0xa004, 0x6fd8, 0xe170, 0xfacf, 0x8b22, 0xe5aa, 0x0, 0x0);
        gbc.writeMem(0xa004, { 0xc });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x6fd8, gbc.sp());
        EXPECT(0xa005, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xa004));
        // 0C 00AB
        gbc.setState(0x4777, 0xc279, 0xc850, 0x9158, 0xf4e2, 0x53ca, 0x1, 0x1);
        gbc.writeMem(0x4777, { 0xc });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xc279, gbc.sp());
        EXPECT(0x4778, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 00AC
        gbc.setState(0x81d4, 0x6f00, 0x5750, 0x490b, 0xa5c0, 0xa192, 0x1, 0x0);
        gbc.writeMem(0x81d4, { 0xc });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x6f00, gbc.sp());
        EXPECT(0x81d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x81d4));
        // 0C 00AD
        gbc.setState(0x6735, 0x6e8e, 0x3020, 0x4ce8, 0x157a, 0x2b04, 0x1, 0x1);
        gbc.writeMem(0x6735, { 0xc });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x6e8e, gbc.sp());
        EXPECT(0x6736, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 00AE
        gbc.setState(0xb14f, 0x6edd, 0xea40, 0x1296, 0xf9a4, 0xe0ad, 0x1, 0x1);
        gbc.writeMem(0xb14f, { 0xc });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x6edd, gbc.sp());
        EXPECT(0xb150, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xb14f));
        // 0C 00AF
        gbc.setState(0x1d22, 0x361b, 0xabe0, 0xce78, 0xcec7, 0xea5f, 0x1, 0x1);
        gbc.writeMem(0x1d22, { 0xc });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x361b, gbc.sp());
        EXPECT(0x1d23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 00B0
        gbc.setState(0xcce6, 0xf30c, 0xa40, 0x95a5, 0x77ec, 0xc3b8, 0x1, 0x1);
        gbc.writeMem(0xcce6, { 0xc });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xf30c, gbc.sp());
        EXPECT(0xcce7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xcce6));
        // 0C 00B1
        gbc.setState(0xc648, 0x2da9, 0xd890, 0x802f, 0x549e, 0x4ea2, 0x1, 0x0);
        gbc.writeMem(0xc648, { 0xc });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x2da9, gbc.sp());
        EXPECT(0xc649, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xc648));
        // 0C 00B2
        gbc.setState(0xbfe2, 0xeb7c, 0x19e0, 0x7e2, 0xc132, 0xf010, 0x0, 0x0);
        gbc.writeMem(0xbfe2, { 0xc });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xeb7c, gbc.sp());
        EXPECT(0xbfe3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xbfe2));
        // 0C 00B3
        gbc.setState(0x8dfe, 0x8e35, 0xc790, 0xf21f, 0x8c9b, 0x94ac, 0x0, 0x1);
        gbc.writeMem(0x8dfe, { 0xc });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x8e35, gbc.sp());
        EXPECT(0x8dff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x8dfe));
        // 0C 00B4
        gbc.setState(0x2664, 0x56b, 0xd9f0, 0x266e, 0xa420, 0xe2a9, 0x1, 0x0);
        gbc.writeMem(0x2664, { 0xc });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x56b, gbc.sp());
        EXPECT(0x2665, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 00B5
        gbc.setState(0xa544, 0x45ec, 0x5b0, 0x3b74, 0x7dc7, 0x9f58, 0x0, 0x0);
        gbc.writeMem(0xa544, { 0xc });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x45ec, gbc.sp());
        EXPECT(0xa545, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xa544));
        // 0C 00B6
        gbc.setState(0x2157, 0x9bd, 0x8260, 0xd118, 0xc908, 0x6336, 0x1, 0x0);
        gbc.writeMem(0x2157, { 0xc });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x9bd, gbc.sp());
        EXPECT(0x2158, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 00B7
        gbc.setState(0x916, 0xb809, 0x2020, 0xcbbf, 0xe08b, 0x76d, 0x1, 0x1);
        gbc.writeMem(0x916, { 0xc });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xb809, gbc.sp());
        EXPECT(0x917, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 00B8
        gbc.setState(0xd4ff, 0x3d55, 0x99c0, 0xbad4, 0xceb5, 0xb7a8, 0x0, 0x1);
        gbc.writeMem(0xd4ff, { 0xc });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x3d55, gbc.sp());
        EXPECT(0xd500, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xd4ff));
        // 0C 00BA
        gbc.setState(0x72e3, 0x7244, 0xdff0, 0xfa8a, 0xdcc9, 0xff2b, 0x0, 0x0);
        gbc.writeMem(0x72e3, { 0xc });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x7244, gbc.sp());
        EXPECT(0x72e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 00BB
        gbc.setState(0x9d47, 0x2d54, 0x9bf0, 0x10da, 0x4853, 0x1528, 0x1, 0x0);
        gbc.writeMem(0x9d47, { 0xc });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x2d54, gbc.sp());
        EXPECT(0x9d48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x9d47));
        // 0C 00BC
        gbc.setState(0xf0e, 0xe8c2, 0x450, 0xedcd, 0xf7d, 0x217d, 0x1, 0x1);
        gbc.writeMem(0xf0e, { 0xc });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xe8c2, gbc.sp());
        EXPECT(0xf0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 00BD
        gbc.setState(0x5419, 0xe0d9, 0x58b0, 0x64b8, 0x6f20, 0x40e, 0x0, 0x1);
        gbc.writeMem(0x5419, { 0xc });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xe0d9, gbc.sp());
        EXPECT(0x541a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 00BE
        gbc.setState(0xbf9d, 0xbc52, 0x9ab0, 0xa36b, 0x7465, 0x6561, 0x0, 0x1);
        gbc.writeMem(0xbf9d, { 0xc });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xbc52, gbc.sp());
        EXPECT(0xbf9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xbf9d));
        // 0C 00BF
        gbc.setState(0x4136, 0xe27b, 0x2da0, 0x3892, 0x55cf, 0x4bf9, 0x0, 0x1);
        gbc.writeMem(0x4136, { 0xc });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xe27b, gbc.sp());
        EXPECT(0x4137, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 00C0
        gbc.setState(0x8095, 0x7b22, 0x7de0, 0x4b09, 0x4e6e, 0xbe2, 0x0, 0x0);
        gbc.writeMem(0x8095, { 0xc });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x7b22, gbc.sp());
        EXPECT(0x8096, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x8095));
        // 0C 00C1
        gbc.setState(0x6391, 0x3132, 0xf4a0, 0x805e, 0x9b96, 0x992f, 0x0, 0x0);
        gbc.writeMem(0x6391, { 0xc });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x3132, gbc.sp());
        EXPECT(0x6392, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 00C2
        gbc.setState(0x7dec, 0xa671, 0x5ce0, 0xc3a4, 0x139e, 0x9a67, 0x0, 0x0);
        gbc.writeMem(0x7dec, { 0xc });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xa671, gbc.sp());
        EXPECT(0x7ded, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 00C3
        gbc.setState(0x6f74, 0x3142, 0x2b80, 0x51f7, 0x483, 0xc5a7, 0x0, 0x0);
        gbc.writeMem(0x6f74, { 0xc });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x3142, gbc.sp());
        EXPECT(0x6f75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 00C4
        gbc.setState(0x13df, 0x901f, 0x71f0, 0x3b64, 0xfdda, 0x4a0b, 0x0, 0x1);
        gbc.writeMem(0x13df, { 0xc });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x901f, gbc.sp());
        EXPECT(0x13e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 00C5
        gbc.setState(0x598b, 0xda2a, 0x2680, 0xb012, 0xfbf5, 0x8f02, 0x1, 0x0);
        gbc.writeMem(0x598b, { 0xc });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xda2a, gbc.sp());
        EXPECT(0x598c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 00C6
        gbc.setState(0xc5fd, 0x9988, 0x5ff0, 0x9f0, 0x530c, 0x8a58, 0x0, 0x1);
        gbc.writeMem(0xc5fd, { 0xc });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x9988, gbc.sp());
        EXPECT(0xc5fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xc5fd));
        // 0C 00C7
        gbc.setState(0xb92a, 0x951b, 0x8f60, 0x17b3, 0x7671, 0xc385, 0x0, 0x1);
        gbc.writeMem(0xb92a, { 0xc });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x951b, gbc.sp());
        EXPECT(0xb92b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xb92a));
        // 0C 00C8
        gbc.setState(0x23c4, 0xb018, 0xb300, 0x9109, 0x413a, 0x13c6, 0x1, 0x0);
        gbc.writeMem(0x23c4, { 0xc });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xb018, gbc.sp());
        EXPECT(0x23c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 00C9
        gbc.setState(0x3eb1, 0xa71d, 0xbf0, 0x64ff, 0x7e5c, 0x6fd6, 0x0, 0x0);
        gbc.writeMem(0x3eb1, { 0xc });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xa71d, gbc.sp());
        EXPECT(0x3eb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 00CA
        gbc.setState(0x488e, 0xbc7e, 0x9a0, 0xdbf, 0x3a42, 0xd745, 0x1, 0x1);
        gbc.writeMem(0x488e, { 0xc });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xbc7e, gbc.sp());
        EXPECT(0x488f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 00CB
        gbc.setState(0xda84, 0xb4aa, 0x2c10, 0xf408, 0x12a7, 0x7297, 0x1, 0x0);
        gbc.writeMem(0xda84, { 0xc });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xb4aa, gbc.sp());
        EXPECT(0xda85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xda84));
        // 0C 00CC
        gbc.setState(0xcc9, 0x63b9, 0xd820, 0x40ba, 0x6c07, 0xdc55, 0x1, 0x0);
        gbc.writeMem(0xcc9, { 0xc });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x63b9, gbc.sp());
        EXPECT(0xcca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 00CD
        gbc.setState(0xa827, 0x6443, 0x5f20, 0x1ef3, 0x3998, 0xbd1b, 0x1, 0x1);
        gbc.writeMem(0xa827, { 0xc });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x6443, gbc.sp());
        EXPECT(0xa828, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xa827));
        // 0C 00CE
        gbc.setState(0x4231, 0x1753, 0x4980, 0x7f64, 0x71bd, 0x271f, 0x0, 0x0);
        gbc.writeMem(0x4231, { 0xc });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x1753, gbc.sp());
        EXPECT(0x4232, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 00D0
        gbc.setState(0x23d0, 0xc298, 0x8480, 0x2fcc, 0x604b, 0xd67f, 0x0, 0x1);
        gbc.writeMem(0x23d0, { 0xc });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xc298, gbc.sp());
        EXPECT(0x23d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 00D2
        gbc.setState(0xbfe8, 0x46f0, 0x9d50, 0x9219, 0x45bf, 0xe068, 0x1, 0x1);
        gbc.writeMem(0xbfe8, { 0xc });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x46f0, gbc.sp());
        EXPECT(0xbfe9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xbfe8));
        // 0C 00D3
        gbc.setState(0x52a4, 0xf228, 0xf0f0, 0x106e, 0x9f3e, 0x5067, 0x0, 0x1);
        gbc.writeMem(0x52a4, { 0xc });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xf228, gbc.sp());
        EXPECT(0x52a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 00D4
        gbc.setState(0x5618, 0x7e73, 0x4fc0, 0xe252, 0xd683, 0xe99f, 0x0, 0x0);
        gbc.writeMem(0x5618, { 0xc });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x7e73, gbc.sp());
        EXPECT(0x5619, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 00D5
        gbc.setState(0x9e7b, 0x221f, 0xc3b0, 0x7e40, 0x9cf1, 0x672b, 0x1, 0x0);
        gbc.writeMem(0x9e7b, { 0xc });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x221f, gbc.sp());
        EXPECT(0x9e7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x9e7b));
        // 0C 00D6
        gbc.setState(0xaab4, 0xff92, 0xcb0, 0x5ca7, 0x59e7, 0x4ae5, 0x1, 0x1);
        gbc.writeMem(0xaab4, { 0xc });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xff92, gbc.sp());
        EXPECT(0xaab5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xaab4));
        // 0C 00D7
        gbc.setState(0xb56, 0xf7b3, 0x7ad0, 0xb886, 0x9080, 0xb6f2, 0x1, 0x0);
        gbc.writeMem(0xb56, { 0xc });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xf7b3, gbc.sp());
        EXPECT(0xb57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 00D8
        gbc.setState(0xa4e6, 0xfada, 0x6260, 0x3d51, 0xd04e, 0x36b3, 0x1, 0x1);
        gbc.writeMem(0xa4e6, { 0xc });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xfada, gbc.sp());
        EXPECT(0xa4e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xa4e6));
        // 0C 00D9
        gbc.setState(0x13ab, 0xb243, 0x60d0, 0x23cc, 0xa6e0, 0x61d0, 0x1, 0x0);
        gbc.writeMem(0x13ab, { 0xc });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xb243, gbc.sp());
        EXPECT(0x13ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 00DA
        gbc.setState(0x95e0, 0x6957, 0x1880, 0x7832, 0xe5fd, 0x5d2d, 0x0, 0x1);
        gbc.writeMem(0x95e0, { 0xc });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x6957, gbc.sp());
        EXPECT(0x95e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x95e0));
        // 0C 00DB
        gbc.setState(0xe290, 0x4bb9, 0x1c10, 0xdf6a, 0x9743, 0x1386, 0x0, 0x0);
        gbc.writeMem(0xe290, { 0xc });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x4bb9, gbc.sp());
        EXPECT(0xe291, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xe290));
        // 0C 00DC
        gbc.setState(0xd98, 0xf11a, 0xb320, 0x9e10, 0x75c2, 0x978b, 0x0, 0x0);
        gbc.writeMem(0xd98, { 0xc });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xf11a, gbc.sp());
        EXPECT(0xd99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 00DD
        gbc.setState(0xd232, 0x63d, 0x5cc0, 0x6af6, 0xe5b3, 0x3bf, 0x0, 0x1);
        gbc.writeMem(0xd232, { 0xc });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x63d, gbc.sp());
        EXPECT(0xd233, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xd232));
        // 0C 00DE
        gbc.setState(0x463d, 0xb7fd, 0xda90, 0xf4fc, 0xfceb, 0x7320, 0x0, 0x1);
        gbc.writeMem(0x463d, { 0xc });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xb7fd, gbc.sp());
        EXPECT(0x463e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 00DF
        gbc.setState(0xdbf6, 0x1518, 0x8f30, 0x640e, 0xe403, 0x2fb6, 0x0, 0x0);
        gbc.writeMem(0xdbf6, { 0xc });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x1518, gbc.sp());
        EXPECT(0xdbf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xdbf6));
        // 0C 00E0
        gbc.setState(0x5655, 0x21a8, 0xf590, 0x83c2, 0x726a, 0xf1da, 0x0, 0x0);
        gbc.writeMem(0x5655, { 0xc });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x21a8, gbc.sp());
        EXPECT(0x5656, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 00E1
        gbc.setState(0x44f6, 0x9c7d, 0x7090, 0xd1fe, 0x3103, 0xd713, 0x0, 0x0);
        gbc.writeMem(0x44f6, { 0xc });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x9c7d, gbc.sp());
        EXPECT(0x44f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 00E2
        gbc.setState(0x41f5, 0x134b, 0x34e0, 0xec3f, 0x6a62, 0x4a03, 0x0, 0x0);
        gbc.writeMem(0x41f5, { 0xc });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x134b, gbc.sp());
        EXPECT(0x41f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 00E3
        gbc.setState(0xe1db, 0x99f2, 0x400, 0x4917, 0x3a82, 0x87f4, 0x1, 0x0);
        gbc.writeMem(0xe1db, { 0xc });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x99f2, gbc.sp());
        EXPECT(0xe1dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xe1db));
        // 0C 00E4
        gbc.setState(0xc792, 0x7da9, 0x23c0, 0xbbb2, 0x710d, 0x3d24, 0x0, 0x1);
        gbc.writeMem(0xc792, { 0xc });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x7da9, gbc.sp());
        EXPECT(0xc793, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xc792));
        // 0C 00E5
        gbc.setState(0x90b0, 0xa8a1, 0x8480, 0x5100, 0x44a4, 0x85ca, 0x0, 0x1);
        gbc.writeMem(0x90b0, { 0xc });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xa8a1, gbc.sp());
        EXPECT(0x90b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x90b0));
        // 0C 00E6
        gbc.setState(0x8ccc, 0xda71, 0x5320, 0xead3, 0xeb91, 0xefca, 0x1, 0x0);
        gbc.writeMem(0x8ccc, { 0xc });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xda71, gbc.sp());
        EXPECT(0x8ccd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x8ccc));
        // 0C 00E7
        gbc.setState(0x9178, 0xa5a1, 0x8e10, 0x8cf2, 0xcb5, 0xef26, 0x1, 0x1);
        gbc.writeMem(0x9178, { 0xc });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xa5a1, gbc.sp());
        EXPECT(0x9179, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x9178));
        // 0C 00E8
        gbc.setState(0x4c53, 0x2920, 0x4130, 0xa719, 0x5dc4, 0x8f44, 0x1, 0x0);
        gbc.writeMem(0x4c53, { 0xc });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x2920, gbc.sp());
        EXPECT(0x4c54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 00E9
        gbc.setState(0x8b93, 0x935d, 0xf1a0, 0x1e3c, 0x3acc, 0x75e7, 0x1, 0x1);
        gbc.writeMem(0x8b93, { 0xc });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x935d, gbc.sp());
        EXPECT(0x8b94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x8b93));
        // 0C 00EA
        gbc.setState(0x151, 0x3bad, 0xa0e0, 0xef12, 0x6fa5, 0xbad7, 0x0, 0x1);
        gbc.writeMem(0x151, { 0xc });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x3bad, gbc.sp());
        EXPECT(0x152, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 00EB
        gbc.setState(0x961d, 0xa01b, 0x4610, 0x1cf3, 0x2d4c, 0x23d9, 0x0, 0x1);
        gbc.writeMem(0x961d, { 0xc });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xa01b, gbc.sp());
        EXPECT(0x961e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x961d));
        // 0C 00EC
        gbc.setState(0x347, 0x4db8, 0xb0a0, 0x41ab, 0xed43, 0xf655, 0x0, 0x0);
        gbc.writeMem(0x347, { 0xc });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x4db8, gbc.sp());
        EXPECT(0x348, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 00ED
        gbc.setState(0x8d8b, 0xe325, 0x1f20, 0xd4f8, 0xdda7, 0xe8d1, 0x0, 0x0);
        gbc.writeMem(0x8d8b, { 0xc });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xe325, gbc.sp());
        EXPECT(0x8d8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x8d8b));
        // 0C 00EE
        gbc.setState(0xd452, 0x333a, 0xf650, 0xc74, 0xc6f7, 0x2ccd, 0x1, 0x1);
        gbc.writeMem(0xd452, { 0xc });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x333a, gbc.sp());
        EXPECT(0xd453, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xd452));
        // 0C 00EF
        gbc.setState(0x21bf, 0x9066, 0x90c0, 0x23c8, 0x6f8b, 0x4c52, 0x0, 0x1);
        gbc.writeMem(0x21bf, { 0xc });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x9066, gbc.sp());
        EXPECT(0x21c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 00F0
        gbc.setState(0xc913, 0xb5f4, 0x1430, 0x1ea8, 0xa8c7, 0x5a38, 0x1, 0x1);
        gbc.writeMem(0xc913, { 0xc });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xb5f4, gbc.sp());
        EXPECT(0xc914, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xc913));
        // 0C 00F1
        gbc.setState(0x817b, 0xe13d, 0x8a80, 0x3cdf, 0x33e8, 0x3757, 0x1, 0x1);
        gbc.writeMem(0x817b, { 0xc });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xe13d, gbc.sp());
        EXPECT(0x817c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x817b));
        // 0C 00F2
        gbc.setState(0xddfe, 0x8990, 0x2d30, 0x7091, 0x4dc, 0x8192, 0x1, 0x1);
        gbc.writeMem(0xddfe, { 0xc });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x8990, gbc.sp());
        EXPECT(0xddff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xddfe));
        // 0C 00F3
        gbc.setState(0xd948, 0xae2d, 0xe1e0, 0xc6de, 0x1c67, 0x6087, 0x1, 0x1);
        gbc.writeMem(0xd948, { 0xc });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xae2d, gbc.sp());
        EXPECT(0xd949, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xd948));
        // 0C 00F4
        gbc.setState(0xdadc, 0x3b77, 0xc690, 0xf3e4, 0xaa52, 0x1c88, 0x1, 0x0);
        gbc.writeMem(0xdadc, { 0xc });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x3b77, gbc.sp());
        EXPECT(0xdadd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xdadc));
        // 0C 00F5
        gbc.setState(0x70dd, 0x51b, 0xffa0, 0x3dba, 0x744d, 0x5640, 0x1, 0x0);
        gbc.writeMem(0x70dd, { 0xc });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x51b, gbc.sp());
        EXPECT(0x70de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 00F6
        gbc.setState(0xa74a, 0xb8d2, 0x3e40, 0x2bac, 0x8c21, 0x97cf, 0x1, 0x0);
        gbc.writeMem(0xa74a, { 0xc });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xb8d2, gbc.sp());
        EXPECT(0xa74b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xa74a));
        // 0C 00F7
        gbc.setState(0x22cf, 0x25ee, 0xe30, 0x1205, 0x3a30, 0xec49, 0x1, 0x1);
        gbc.writeMem(0x22cf, { 0xc });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x25ee, gbc.sp());
        EXPECT(0x22d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 00F8
        gbc.setState(0x1a62, 0x73f4, 0x8a50, 0x550b, 0xa38f, 0x1249, 0x0, 0x1);
        gbc.writeMem(0x1a62, { 0xc });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x73f4, gbc.sp());
        EXPECT(0x1a63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 00F9
        gbc.setState(0xcc32, 0xb800, 0x41a0, 0xb61e, 0x8d80, 0x75f6, 0x1, 0x1);
        gbc.writeMem(0xcc32, { 0xc });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xb800, gbc.sp());
        EXPECT(0xcc33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xcc32));
        // 0C 00FA
        gbc.setState(0x19fd, 0x45a2, 0xabf0, 0xd5b2, 0x81f7, 0xe11, 0x0, 0x0);
        gbc.writeMem(0x19fd, { 0xc });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x45a2, gbc.sp());
        EXPECT(0x19fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 00FB
        gbc.setState(0x9296, 0x123c, 0xeb30, 0x1114, 0xbdea, 0x6040, 0x1, 0x0);
        gbc.writeMem(0x9296, { 0xc });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x123c, gbc.sp());
        EXPECT(0x9297, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x9296));
        // 0C 00FC
        gbc.setState(0x7263, 0xbed0, 0xe990, 0x7482, 0x7079, 0xe1ec, 0x1, 0x0);
        gbc.writeMem(0x7263, { 0xc });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xbed0, gbc.sp());
        EXPECT(0x7264, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 00FD
        gbc.setState(0xcdd5, 0xbd68, 0x310, 0xfb64, 0xd9dc, 0xef02, 0x0, 0x0);
        gbc.writeMem(0xcdd5, { 0xc });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xbd68, gbc.sp());
        EXPECT(0xcdd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xcdd5));
        // 0C 00FE
        gbc.setState(0x14fd, 0x9bdc, 0x7040, 0x68db, 0xd799, 0xa80e, 0x1, 0x0);
        gbc.writeMem(0x14fd, { 0xc });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x9bdc, gbc.sp());
        EXPECT(0x14fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 00FF
        gbc.setState(0x7200, 0x371d, 0xa80, 0x52f6, 0x311c, 0x243f, 0x1, 0x0);
        gbc.writeMem(0x7200, { 0xc });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x371d, gbc.sp());
        EXPECT(0x7201, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 0100
        gbc.setState(0x2d81, 0x789, 0x7f30, 0x380c, 0xcdbe, 0xe6f0, 0x0, 0x1);
        gbc.writeMem(0x2d81, { 0xc });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x789, gbc.sp());
        EXPECT(0x2d82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0101
        gbc.setState(0x95eb, 0xd394, 0x7eb0, 0xf638, 0x4a5, 0xa444, 0x1, 0x1);
        gbc.writeMem(0x95eb, { 0xc });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xd394, gbc.sp());
        EXPECT(0x95ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x95eb));
        // 0C 0103
        gbc.setState(0x365, 0xb03, 0x2980, 0x4d23, 0x45fa, 0x614, 0x1, 0x0);
        gbc.writeMem(0x365, { 0xc });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xb03, gbc.sp());
        EXPECT(0x366, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 0104
        gbc.setState(0x1352, 0xc4ef, 0x570, 0xa166, 0xa4de, 0x5c16, 0x1, 0x1);
        gbc.writeMem(0x1352, { 0xc });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xc4ef, gbc.sp());
        EXPECT(0x1353, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0105
        gbc.setState(0x3aeb, 0xa75d, 0xca30, 0x5d89, 0x9dfc, 0xcc1d, 0x1, 0x0);
        gbc.writeMem(0x3aeb, { 0xc });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xa75d, gbc.sp());
        EXPECT(0x3aec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0106
        gbc.setState(0x71f9, 0x7d4, 0x7680, 0xf41d, 0x4eb1, 0xca8d, 0x0, 0x1);
        gbc.writeMem(0x71f9, { 0xc });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x7d4, gbc.sp());
        EXPECT(0x71fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 0107
        gbc.setState(0xbdc3, 0x58f6, 0x2aa0, 0x384e, 0x6148, 0xb51d, 0x0, 0x1);
        gbc.writeMem(0xbdc3, { 0xc });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x58f6, gbc.sp());
        EXPECT(0xbdc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xbdc3));
        // 0C 0108
        gbc.setState(0x74d1, 0xf2ea, 0x12a0, 0x9bf9, 0x644c, 0x4951, 0x0, 0x0);
        gbc.writeMem(0x74d1, { 0xc });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xf2ea, gbc.sp());
        EXPECT(0x74d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 0109
        gbc.setState(0x6f5d, 0x706e, 0xd2b0, 0x9029, 0x4aa9, 0x251e, 0x1, 0x1);
        gbc.writeMem(0x6f5d, { 0xc });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x706e, gbc.sp());
        EXPECT(0x6f5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 010A
        gbc.setState(0xa662, 0x6043, 0xa870, 0x42c1, 0x7be0, 0x72db, 0x1, 0x1);
        gbc.writeMem(0xa662, { 0xc });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x6043, gbc.sp());
        EXPECT(0xa663, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xa662));
        // 0C 010B
        gbc.setState(0xab65, 0x6322, 0x1180, 0xd738, 0xcfb8, 0xefa, 0x1, 0x1);
        gbc.writeMem(0xab65, { 0xc });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x6322, gbc.sp());
        EXPECT(0xab66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xab65));
        // 0C 010C
        gbc.setState(0x66d4, 0x1942, 0xe0, 0xa0b8, 0xc5de, 0x10fc, 0x1, 0x1);
        gbc.writeMem(0x66d4, { 0xc });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x1942, gbc.sp());
        EXPECT(0x66d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 010D
        gbc.setState(0x1485, 0x58b5, 0x42c0, 0x1df9, 0x11fe, 0x5ea5, 0x0, 0x0);
        gbc.writeMem(0x1485, { 0xc });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x58b5, gbc.sp());
        EXPECT(0x1486, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 010F
        gbc.setState(0x357d, 0xe88, 0x8410, 0x9cd9, 0xf2ce, 0x504d, 0x0, 0x0);
        gbc.writeMem(0x357d, { 0xc });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xe88, gbc.sp());
        EXPECT(0x357e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0110
        gbc.setState(0x5a1, 0x3725, 0x3570, 0xc07f, 0xaaa0, 0xc201, 0x1, 0x1);
        gbc.writeMem(0x5a1, { 0xc });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x3725, gbc.sp());
        EXPECT(0x5a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0111
        gbc.setState(0x279d, 0xb782, 0xa570, 0x85d2, 0xd2dd, 0xd568, 0x0, 0x0);
        gbc.writeMem(0x279d, { 0xc });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xb782, gbc.sp());
        EXPECT(0x279e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0113
        gbc.setState(0xb9, 0xc771, 0x6640, 0x23d9, 0x1d7d, 0x392a, 0x1, 0x1);
        gbc.writeMem(0xb9, { 0xc });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xc771, gbc.sp());
        EXPECT(0xba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 0114
        gbc.setState(0xb86a, 0xb2ba, 0xbe90, 0xc52b, 0xe455, 0xdd8e, 0x0, 0x1);
        gbc.writeMem(0xb86a, { 0xc });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xb2ba, gbc.sp());
        EXPECT(0xb86b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xb86a));
        // 0C 0115
        gbc.setState(0x11aa, 0x4f17, 0xd580, 0xec8b, 0xd363, 0x73f3, 0x0, 0x0);
        gbc.writeMem(0x11aa, { 0xc });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x4f17, gbc.sp());
        EXPECT(0x11ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 0117
        gbc.setState(0x233d, 0xb4a9, 0x9e70, 0x9847, 0x640c, 0xc0e7, 0x1, 0x1);
        gbc.writeMem(0x233d, { 0xc });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xb4a9, gbc.sp());
        EXPECT(0x233e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0118
        gbc.setState(0xd772, 0xc449, 0xbc20, 0xd7c3, 0xdcd8, 0xf457, 0x1, 0x1);
        gbc.writeMem(0xd772, { 0xc });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xc449, gbc.sp());
        EXPECT(0xd773, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xd772));
        // 0C 0119
        gbc.setState(0xce7f, 0x51e4, 0xfaf0, 0x2f46, 0x33f6, 0xed28, 0x1, 0x0);
        gbc.writeMem(0xce7f, { 0xc });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x51e4, gbc.sp());
        EXPECT(0xce80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xce7f));
        // 0C 011A
        gbc.setState(0x6eb, 0xccd9, 0x79b0, 0xdee5, 0xdb67, 0xcb31, 0x0, 0x1);
        gbc.writeMem(0x6eb, { 0xc });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xccd9, gbc.sp());
        EXPECT(0x6ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 011B
        gbc.setState(0x2c30, 0x3e4b, 0x3110, 0xdec7, 0x2d18, 0xbf0f, 0x1, 0x0);
        gbc.writeMem(0x2c30, { 0xc });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x3e4b, gbc.sp());
        EXPECT(0x2c31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 011C
        gbc.setState(0x4b88, 0x7488, 0x6430, 0x65a3, 0x56a1, 0x78a2, 0x1, 0x1);
        gbc.writeMem(0x4b88, { 0xc });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x7488, gbc.sp());
        EXPECT(0x4b89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 011D
        gbc.setState(0x61b7, 0xb49b, 0x7aa0, 0xc9b5, 0x1fc9, 0xf0c6, 0x0, 0x1);
        gbc.writeMem(0x61b7, { 0xc });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xb49b, gbc.sp());
        EXPECT(0x61b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 011E
        gbc.setState(0x74a7, 0x3d22, 0x5b00, 0xab60, 0xee8e, 0xaaaf, 0x0, 0x1);
        gbc.writeMem(0x74a7, { 0xc });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x3d22, gbc.sp());
        EXPECT(0x74a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 011F
        gbc.setState(0xaf82, 0xd2af, 0x19e0, 0xbf98, 0x1338, 0xb4, 0x1, 0x1);
        gbc.writeMem(0xaf82, { 0xc });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xd2af, gbc.sp());
        EXPECT(0xaf83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xaf82));
        // 0C 0120
        gbc.setState(0xa413, 0xd232, 0x73f0, 0xeede, 0xf04c, 0xba51, 0x1, 0x1);
        gbc.writeMem(0xa413, { 0xc });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xd232, gbc.sp());
        EXPECT(0xa414, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xa413));
        // 0C 0121
        gbc.setState(0x8d68, 0x936f, 0x8d90, 0x3612, 0xe787, 0x48da, 0x0, 0x1);
        gbc.writeMem(0x8d68, { 0xc });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x936f, gbc.sp());
        EXPECT(0x8d69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x8d68));
        // 0C 0122
        gbc.setState(0x62a1, 0x231e, 0xfba0, 0xe0e0, 0x46f6, 0x82d3, 0x0, 0x0);
        gbc.writeMem(0x62a1, { 0xc });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x231e, gbc.sp());
        EXPECT(0x62a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 0124
        gbc.setState(0xd3b7, 0x73b9, 0xf950, 0x5571, 0x335f, 0x4c89, 0x1, 0x0);
        gbc.writeMem(0xd3b7, { 0xc });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x73b9, gbc.sp());
        EXPECT(0xd3b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xd3b7));
        // 0C 0125
        gbc.setState(0x2d01, 0x7ab3, 0xd020, 0x9fd9, 0x214, 0x3c1a, 0x1, 0x1);
        gbc.writeMem(0x2d01, { 0xc });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x7ab3, gbc.sp());
        EXPECT(0x2d02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 0126
        gbc.setState(0xa30a, 0xe115, 0xa7c0, 0x7eea, 0xb83f, 0x68a4, 0x0, 0x0);
        gbc.writeMem(0xa30a, { 0xc });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xe115, gbc.sp());
        EXPECT(0xa30b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xa30a));
        // 0C 0127
        gbc.setState(0x7565, 0x4025, 0x8560, 0x46a6, 0x7863, 0xa6d9, 0x1, 0x0);
        gbc.writeMem(0x7565, { 0xc });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x4025, gbc.sp());
        EXPECT(0x7566, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 0128
        gbc.setState(0x1d35, 0x577c, 0xc0a0, 0x3007, 0x60d, 0x9327, 0x1, 0x0);
        gbc.writeMem(0x1d35, { 0xc });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x577c, gbc.sp());
        EXPECT(0x1d36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 0129
        gbc.setState(0xeda0, 0x7c80, 0x3090, 0x7158, 0x7a29, 0x3a7c, 0x1, 0x0);
        gbc.writeMem(0xeda0, { 0xc });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x7c80, gbc.sp());
        EXPECT(0xeda1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xeda0));
        // 0C 012A
        gbc.setState(0x7a5b, 0x26cd, 0x96d0, 0xd467, 0x5d4d, 0x112a, 0x0, 0x0);
        gbc.writeMem(0x7a5b, { 0xc });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x26cd, gbc.sp());
        EXPECT(0x7a5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 012B
        gbc.setState(0x38f1, 0x9ec9, 0x5270, 0x7de, 0xd9fe, 0xca29, 0x1, 0x1);
        gbc.writeMem(0x38f1, { 0xc });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x9ec9, gbc.sp());
        EXPECT(0x38f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 012C
        gbc.setState(0xb9f8, 0x8666, 0x1310, 0x970b, 0x21fa, 0x205a, 0x1, 0x1);
        gbc.writeMem(0xb9f8, { 0xc });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x8666, gbc.sp());
        EXPECT(0xb9f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xb9f8));
        // 0C 012D
        gbc.setState(0x1e52, 0x1167, 0xaec0, 0x1f11, 0x4436, 0x98ae, 0x1, 0x0);
        gbc.writeMem(0x1e52, { 0xc });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x1167, gbc.sp());
        EXPECT(0x1e53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 012E
        gbc.setState(0x28b2, 0x9418, 0xe900, 0x645b, 0x79d0, 0x2180, 0x1, 0x0);
        gbc.writeMem(0x28b2, { 0xc });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x9418, gbc.sp());
        EXPECT(0x28b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 012F
        gbc.setState(0x22ec, 0x1c5c, 0x4e10, 0x6063, 0x3d52, 0xa065, 0x0, 0x0);
        gbc.writeMem(0x22ec, { 0xc });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x1c5c, gbc.sp());
        EXPECT(0x22ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0130
        gbc.setState(0xc813, 0xb9f0, 0xff60, 0x6714, 0xc41b, 0x1bb0, 0x1, 0x0);
        gbc.writeMem(0xc813, { 0xc });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xb9f0, gbc.sp());
        EXPECT(0xc814, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xc813));
        // 0C 0131
        gbc.setState(0xc6b9, 0xf98b, 0x50f0, 0xeaa6, 0x4324, 0x7edb, 0x1, 0x0);
        gbc.writeMem(0xc6b9, { 0xc });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xf98b, gbc.sp());
        EXPECT(0xc6ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xc6b9));
        // 0C 0132
        gbc.setState(0x6fb2, 0x4fc9, 0x5ba0, 0xfca2, 0xa3f1, 0x7d7a, 0x1, 0x1);
        gbc.writeMem(0x6fb2, { 0xc });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x4fc9, gbc.sp());
        EXPECT(0x6fb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 0133
        gbc.setState(0x52db, 0x84b2, 0x2ab0, 0xe7ad, 0xc51e, 0x5dec, 0x1, 0x1);
        gbc.writeMem(0x52db, { 0xc });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x84b2, gbc.sp());
        EXPECT(0x52dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0135
        gbc.setState(0x5d24, 0x3082, 0x7010, 0x9e35, 0xcf18, 0xebab, 0x0, 0x0);
        gbc.writeMem(0x5d24, { 0xc });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x3082, gbc.sp());
        EXPECT(0x5d25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0136
        gbc.setState(0xd76c, 0x3fa0, 0x1c00, 0x4790, 0x1690, 0x4435, 0x1, 0x1);
        gbc.writeMem(0xd76c, { 0xc });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x3fa0, gbc.sp());
        EXPECT(0xd76d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xd76c));
        // 0C 0137
        gbc.setState(0x67a9, 0xa6f, 0x5710, 0x51fd, 0xda85, 0xdaa9, 0x1, 0x0);
        gbc.writeMem(0x67a9, { 0xc });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xa6f, gbc.sp());
        EXPECT(0x67aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0138
        gbc.setState(0xeec1, 0xd414, 0xc0e0, 0xcab8, 0x11c9, 0x492c, 0x0, 0x1);
        gbc.writeMem(0xeec1, { 0xc });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xd414, gbc.sp());
        EXPECT(0xeec2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xeec1));
        // 0C 0139
        gbc.setState(0x9cb5, 0xdef3, 0x8bd0, 0xff7d, 0x29f9, 0x762c, 0x1, 0x1);
        gbc.writeMem(0x9cb5, { 0xc });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xdef3, gbc.sp());
        EXPECT(0x9cb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x9cb5));
        // 0C 013A
        gbc.setState(0x14dc, 0x9192, 0x22a0, 0x7903, 0xfb2b, 0xf3fa, 0x1, 0x1);
        gbc.writeMem(0x14dc, { 0xc });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x9192, gbc.sp());
        EXPECT(0x14dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 013C
        gbc.setState(0xc7d2, 0x3890, 0x85b0, 0x15fc, 0xcc2c, 0x7ff7, 0x0, 0x1);
        gbc.writeMem(0xc7d2, { 0xc });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x3890, gbc.sp());
        EXPECT(0xc7d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xc7d2));
        // 0C 013D
        gbc.setState(0x3db8, 0xdbc9, 0xfae0, 0x11d9, 0x6cf0, 0x4b60, 0x1, 0x0);
        gbc.writeMem(0x3db8, { 0xc });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xdbc9, gbc.sp());
        EXPECT(0x3db9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 013E
        gbc.setState(0x54c1, 0x4494, 0x1560, 0xea34, 0xfccf, 0x37c3, 0x1, 0x1);
        gbc.writeMem(0x54c1, { 0xc });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x4494, gbc.sp());
        EXPECT(0x54c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 013F
        gbc.setState(0x44ba, 0x7843, 0x51b0, 0x75fe, 0xd8ae, 0xd962, 0x0, 0x0);
        gbc.writeMem(0x44ba, { 0xc });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x7843, gbc.sp());
        EXPECT(0x44bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0140
        gbc.setState(0x4f97, 0xc39a, 0x9760, 0x9524, 0x49da, 0x244a, 0x0, 0x1);
        gbc.writeMem(0x4f97, { 0xc });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xc39a, gbc.sp());
        EXPECT(0x4f98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 0141
        gbc.setState(0xd1c9, 0xa35d, 0x1160, 0xcfd0, 0x23b5, 0xb9ea, 0x0, 0x1);
        gbc.writeMem(0xd1c9, { 0xc });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xa35d, gbc.sp());
        EXPECT(0xd1ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xd1c9));
        // 0C 0142
        gbc.setState(0x28b5, 0xf181, 0xaed0, 0xba93, 0x48b4, 0xc801, 0x0, 0x0);
        gbc.writeMem(0x28b5, { 0xc });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xf181, gbc.sp());
        EXPECT(0x28b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0143
        gbc.setState(0xb6f5, 0x33e1, 0x98c0, 0x33df, 0x9e3, 0x9f75, 0x1, 0x0);
        gbc.writeMem(0xb6f5, { 0xc });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x33e1, gbc.sp());
        EXPECT(0xb6f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xb6f5));
        // 0C 0144
        gbc.setState(0xb6df, 0x12c5, 0x9e00, 0xde4b, 0xafe1, 0x85ef, 0x0, 0x0);
        gbc.writeMem(0xb6df, { 0xc });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x12c5, gbc.sp());
        EXPECT(0xb6e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xb6df));
        // 0C 0145
        gbc.setState(0x8ec5, 0xc3ec, 0x5500, 0xe177, 0x2d6c, 0x47e2, 0x1, 0x0);
        gbc.writeMem(0x8ec5, { 0xc });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xc3ec, gbc.sp());
        EXPECT(0x8ec6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x8ec5));
        // 0C 0146
        gbc.setState(0x9aee, 0x182e, 0x6940, 0x9ec, 0xc355, 0xfd54, 0x1, 0x1);
        gbc.writeMem(0x9aee, { 0xc });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x182e, gbc.sp());
        EXPECT(0x9aef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x9aee));
        // 0C 0147
        gbc.setState(0xd32e, 0xe0e9, 0x74e0, 0xef2d, 0xd670, 0x532d, 0x0, 0x0);
        gbc.writeMem(0xd32e, { 0xc });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xe0e9, gbc.sp());
        EXPECT(0xd32f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xd32e));
        // 0C 0148
        gbc.setState(0xcacb, 0x1741, 0xe280, 0xe144, 0x2a4d, 0x8c5a, 0x1, 0x0);
        gbc.writeMem(0xcacb, { 0xc });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x1741, gbc.sp());
        EXPECT(0xcacc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xcacb));
        // 0C 0149
        gbc.setState(0xe2da, 0x6040, 0x5700, 0x8c56, 0x1d31, 0xa1dd, 0x0, 0x1);
        gbc.writeMem(0xe2da, { 0xc });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x6040, gbc.sp());
        EXPECT(0xe2db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xe2da));
        // 0C 014A
        gbc.setState(0x1ee2, 0x83d9, 0x40a0, 0x18da, 0xf893, 0x9e5e, 0x1, 0x1);
        gbc.writeMem(0x1ee2, { 0xc });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x83d9, gbc.sp());
        EXPECT(0x1ee3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 014B
        gbc.setState(0x8ca, 0x719b, 0xf20, 0x662d, 0xba91, 0x9bdb, 0x1, 0x0);
        gbc.writeMem(0x8ca, { 0xc });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x719b, gbc.sp());
        EXPECT(0x8cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 014C
        gbc.setState(0x68f1, 0x7105, 0x9b0, 0x8f23, 0x2e13, 0x64f3, 0x0, 0x1);
        gbc.writeMem(0x68f1, { 0xc });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x7105, gbc.sp());
        EXPECT(0x68f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 014D
        gbc.setState(0x2a1a, 0xa002, 0xc750, 0x7e08, 0xf844, 0xb281, 0x1, 0x0);
        gbc.writeMem(0x2a1a, { 0xc });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xa002, gbc.sp());
        EXPECT(0x2a1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 014E
        gbc.setState(0xbd86, 0xf74c, 0xa740, 0x1246, 0xbe68, 0xcdb8, 0x1, 0x1);
        gbc.writeMem(0xbd86, { 0xc });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xf74c, gbc.sp());
        EXPECT(0xbd87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xbd86));
        // 0C 014F
        gbc.setState(0x1318, 0x93a2, 0x2240, 0x2fcd, 0xe075, 0xa77d, 0x0, 0x1);
        gbc.writeMem(0x1318, { 0xc });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x93a2, gbc.sp());
        EXPECT(0x1319, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 0150
        gbc.setState(0xe039, 0x7eab, 0x3c10, 0x9e74, 0xf9c0, 0x910d, 0x1, 0x1);
        gbc.writeMem(0xe039, { 0xc });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x7eab, gbc.sp());
        EXPECT(0xe03a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xe039));
        // 0C 0151
        gbc.setState(0x83ee, 0x19ee, 0x6c40, 0x34a8, 0x1203, 0xa57f, 0x0, 0x0);
        gbc.writeMem(0x83ee, { 0xc });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x19ee, gbc.sp());
        EXPECT(0x83ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x83ee));
        // 0C 0152
        gbc.setState(0x1a54, 0x7181, 0xca70, 0xf41, 0xa608, 0x16e8, 0x0, 0x1);
        gbc.writeMem(0x1a54, { 0xc });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x7181, gbc.sp());
        EXPECT(0x1a55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0154
        gbc.setState(0xbc8e, 0xf13d, 0x2310, 0xa69c, 0x6f3e, 0xe3a4, 0x0, 0x0);
        gbc.writeMem(0xbc8e, { 0xc });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xf13d, gbc.sp());
        EXPECT(0xbc8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xbc8e));
        // 0C 0155
        gbc.setState(0x1c54, 0x91dd, 0x2f90, 0x36eb, 0x2a2a, 0xa09b, 0x1, 0x0);
        gbc.writeMem(0x1c54, { 0xc });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x91dd, gbc.sp());
        EXPECT(0x1c55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0156
        gbc.setState(0xc476, 0xecf6, 0xde80, 0x1ed5, 0x4f0, 0xd7f, 0x1, 0x0);
        gbc.writeMem(0xc476, { 0xc });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xecf6, gbc.sp());
        EXPECT(0xc477, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xc476));
        // 0C 0157
        gbc.setState(0xc5f0, 0xcb24, 0xff00, 0x82bc, 0x5a6f, 0x2b84, 0x1, 0x0);
        gbc.writeMem(0xc5f0, { 0xc });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xcb24, gbc.sp());
        EXPECT(0xc5f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xc5f0));
        // 0C 0158
        gbc.setState(0x6b7f, 0xf02, 0x6170, 0x9c72, 0xbb02, 0x4056, 0x1, 0x1);
        gbc.writeMem(0x6b7f, { 0xc });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xf02, gbc.sp());
        EXPECT(0x6b80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0159
        gbc.setState(0x747c, 0x8aa7, 0x53c0, 0xc22e, 0x26f6, 0xaa06, 0x0, 0x0);
        gbc.writeMem(0x747c, { 0xc });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x8aa7, gbc.sp());
        EXPECT(0x747d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 015A
        gbc.setState(0x5250, 0x5e36, 0x9910, 0xc2ed, 0xb95c, 0xda31, 0x1, 0x1);
        gbc.writeMem(0x5250, { 0xc });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x5e36, gbc.sp());
        EXPECT(0x5251, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 015B
        gbc.setState(0xb05d, 0x55b2, 0xbc80, 0x45cd, 0xd27a, 0x83ea, 0x0, 0x1);
        gbc.writeMem(0xb05d, { 0xc });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x55b2, gbc.sp());
        EXPECT(0xb05e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xb05d));
        // 0C 015C
        gbc.setState(0x8d1f, 0xb92a, 0xb10, 0x5fec, 0x701a, 0x4cac, 0x1, 0x0);
        gbc.writeMem(0x8d1f, { 0xc });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xb92a, gbc.sp());
        EXPECT(0x8d20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x8d1f));
        // 0C 015D
        gbc.setState(0xaad8, 0x3d96, 0x7700, 0x4cde, 0x2690, 0x735, 0x1, 0x0);
        gbc.writeMem(0xaad8, { 0xc });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x3d96, gbc.sp());
        EXPECT(0xaad9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xaad8));
        // 0C 015E
        gbc.setState(0x5a02, 0xc0cf, 0x85a0, 0x19d4, 0x6672, 0x5740, 0x1, 0x0);
        gbc.writeMem(0x5a02, { 0xc });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xc0cf, gbc.sp());
        EXPECT(0x5a03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 015F
        gbc.setState(0x1ceb, 0x5bd9, 0x5e00, 0xc41e, 0xa7e7, 0xbaff, 0x1, 0x1);
        gbc.writeMem(0x1ceb, { 0xc });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x5bd9, gbc.sp());
        EXPECT(0x1cec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 0160
        gbc.setState(0xd45b, 0xaf8, 0x80e0, 0xa171, 0x5e57, 0xd541, 0x1, 0x1);
        gbc.writeMem(0xd45b, { 0xc });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xaf8, gbc.sp());
        EXPECT(0xd45c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xd45b));
        // 0C 0162
        gbc.setState(0x7b69, 0x4aa0, 0x9a00, 0x98ce, 0x5ff1, 0xb506, 0x1, 0x1);
        gbc.writeMem(0x7b69, { 0xc });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x4aa0, gbc.sp());
        EXPECT(0x7b6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 0163
        gbc.setState(0xa324, 0xcb36, 0xdf50, 0xd01f, 0xebfa, 0xcc11, 0x1, 0x1);
        gbc.writeMem(0xa324, { 0xc });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xcb36, gbc.sp());
        EXPECT(0xa325, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xa324));
        // 0C 0164
        gbc.setState(0x2874, 0xe83e, 0xb570, 0x4e0a, 0x606, 0x52c4, 0x0, 0x0);
        gbc.writeMem(0x2874, { 0xc });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xe83e, gbc.sp());
        EXPECT(0x2875, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0165
        gbc.setState(0x40c3, 0x23d3, 0xa150, 0xa6f2, 0x9534, 0x8637, 0x0, 0x0);
        gbc.writeMem(0x40c3, { 0xc });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x23d3, gbc.sp());
        EXPECT(0x40c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0166
        gbc.setState(0xaf42, 0x670e, 0x4880, 0x79cf, 0x2921, 0x98d7, 0x0, 0x0);
        gbc.writeMem(0xaf42, { 0xc });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x670e, gbc.sp());
        EXPECT(0xaf43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xaf42));
        // 0C 0167
        gbc.setState(0x2592, 0x8b69, 0x1e40, 0x5f19, 0x5567, 0x5e4e, 0x1, 0x1);
        gbc.writeMem(0x2592, { 0xc });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x8b69, gbc.sp());
        EXPECT(0x2593, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 0168
        gbc.setState(0xb20f, 0x27d0, 0xf6c0, 0x9cfd, 0xe33f, 0xa275, 0x0, 0x0);
        gbc.writeMem(0xb20f, { 0xc });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x27d0, gbc.sp());
        EXPECT(0xb210, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xb20f));
        // 0C 0169
        gbc.setState(0xc3af, 0x4f59, 0xba50, 0xfcdd, 0xc43a, 0xe32a, 0x1, 0x1);
        gbc.writeMem(0xc3af, { 0xc });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x4f59, gbc.sp());
        EXPECT(0xc3b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xc3af));
        // 0C 016A
        gbc.setState(0xbe9c, 0xbce, 0x5b90, 0xf83a, 0x9729, 0x8cc8, 0x0, 0x0);
        gbc.writeMem(0xbe9c, { 0xc });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xbce, gbc.sp());
        EXPECT(0xbe9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xbe9c));
        // 0C 016B
        gbc.setState(0x6216, 0x23fd, 0xe1c0, 0xd6c5, 0x1c0, 0xb563, 0x0, 0x1);
        gbc.writeMem(0x6216, { 0xc });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x23fd, gbc.sp());
        EXPECT(0x6217, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 016C
        gbc.setState(0xde90, 0x4c57, 0xa5e0, 0xd63a, 0x832e, 0x2720, 0x1, 0x0);
        gbc.writeMem(0xde90, { 0xc });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x4c57, gbc.sp());
        EXPECT(0xde91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xde90));
        // 0C 016D
        gbc.setState(0x9c, 0x9cb2, 0x8d30, 0x744f, 0x7e65, 0xb0ae, 0x0, 0x0);
        gbc.writeMem(0x9c, { 0xc });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x9cb2, gbc.sp());
        EXPECT(0x9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 016E
        gbc.setState(0x3699, 0x5a58, 0x1180, 0xb883, 0xf09b, 0x5c6e, 0x1, 0x0);
        gbc.writeMem(0x3699, { 0xc });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x5a58, gbc.sp());
        EXPECT(0x369a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 016F
        gbc.setState(0x221d, 0xe6f3, 0x25a0, 0x23d6, 0xc735, 0xcc6f, 0x0, 0x1);
        gbc.writeMem(0x221d, { 0xc });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xe6f3, gbc.sp());
        EXPECT(0x221e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 0170
        gbc.setState(0x6759, 0x8053, 0x20f0, 0x4aed, 0x7599, 0xab0f, 0x0, 0x0);
        gbc.writeMem(0x6759, { 0xc });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x8053, gbc.sp());
        EXPECT(0x675a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0171
        gbc.setState(0xecc2, 0x822a, 0x2950, 0x763b, 0x970, 0xe366, 0x0, 0x0);
        gbc.writeMem(0xecc2, { 0xc });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x822a, gbc.sp());
        EXPECT(0xecc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xecc2));
        // 0C 0172
        gbc.setState(0x71cd, 0x2e73, 0xf150, 0x9a63, 0x59d, 0x1b8d, 0x1, 0x0);
        gbc.writeMem(0x71cd, { 0xc });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x2e73, gbc.sp());
        EXPECT(0x71ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0173
        gbc.setState(0x81ea, 0xa299, 0x7a70, 0x1803, 0xa152, 0x51f8, 0x0, 0x1);
        gbc.writeMem(0x81ea, { 0xc });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xa299, gbc.sp());
        EXPECT(0x81eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x81ea));
        // 0C 0174
        gbc.setState(0x75d3, 0xad5a, 0xd690, 0xf3ef, 0x903d, 0x13, 0x0, 0x1);
        gbc.writeMem(0x75d3, { 0xc });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xad5a, gbc.sp());
        EXPECT(0x75d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0175
        gbc.setState(0xb4ea, 0x1d50, 0x34a0, 0x2c4d, 0x1789, 0x83fb, 0x1, 0x0);
        gbc.writeMem(0xb4ea, { 0xc });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x1d50, gbc.sp());
        EXPECT(0xb4eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xb4ea));
        // 0C 0176
        gbc.setState(0xba7a, 0xec48, 0x1eb0, 0x4995, 0x297, 0xe5f5, 0x0, 0x1);
        gbc.writeMem(0xba7a, { 0xc });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xec48, gbc.sp());
        EXPECT(0xba7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xba7a));
        // 0C 0177
        gbc.setState(0x242f, 0x1db9, 0x81b0, 0x7b19, 0x36a3, 0x3575, 0x0, 0x1);
        gbc.writeMem(0x242f, { 0xc });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x1db9, gbc.sp());
        EXPECT(0x2430, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0178
        gbc.setState(0xa59a, 0xffe0, 0x2220, 0x4db1, 0x8699, 0x7f98, 0x0, 0x0);
        gbc.writeMem(0xa59a, { 0xc });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xffe0, gbc.sp());
        EXPECT(0xa59b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xa59a));
        // 0C 0179
        gbc.setState(0xeb3d, 0x259e, 0x56f0, 0x176, 0xcf5f, 0xee52, 0x1, 0x1);
        gbc.writeMem(0xeb3d, { 0xc });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x259e, gbc.sp());
        EXPECT(0xeb3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xeb3d));
        // 0C 017A
        gbc.setState(0xaa4, 0x6556, 0x5140, 0x89e6, 0x31f8, 0xe6fa, 0x0, 0x1);
        gbc.writeMem(0xaa4, { 0xc });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x6556, gbc.sp());
        EXPECT(0xaa5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 017B
        gbc.setState(0x5e98, 0x9e7d, 0x810, 0xad9d, 0x7fab, 0xe730, 0x0, 0x0);
        gbc.writeMem(0x5e98, { 0xc });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x9e7d, gbc.sp());
        EXPECT(0x5e99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 017C
        gbc.setState(0x7c4c, 0xaaa4, 0x4990, 0x86f5, 0x7bae, 0xd79e, 0x1, 0x0);
        gbc.writeMem(0x7c4c, { 0xc });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xaaa4, gbc.sp());
        EXPECT(0x7c4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 017D
        gbc.setState(0x3d6e, 0xf283, 0x2140, 0x4df9, 0x651f, 0xb549, 0x1, 0x0);
        gbc.writeMem(0x3d6e, { 0xc });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xf283, gbc.sp());
        EXPECT(0x3d6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 017E
        gbc.setState(0xb976, 0xee29, 0xb040, 0xeff4, 0xfbb6, 0x23, 0x0, 0x0);
        gbc.writeMem(0xb976, { 0xc });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xee29, gbc.sp());
        EXPECT(0xb977, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xb976));
        // 0C 017F
        gbc.setState(0xb931, 0x6272, 0x2f00, 0x5a24, 0x3b1e, 0xdf53, 0x0, 0x0);
        gbc.writeMem(0xb931, { 0xc });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x6272, gbc.sp());
        EXPECT(0xb932, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xb931));
        // 0C 0180
        gbc.setState(0x3798, 0x44bc, 0x5710, 0xba3c, 0x3533, 0xfeea, 0x0, 0x1);
        gbc.writeMem(0x3798, { 0xc });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x44bc, gbc.sp());
        EXPECT(0x3799, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0181
        gbc.setState(0x4ffc, 0x2f80, 0x5e90, 0x15ca, 0xba6f, 0xf1a0, 0x1, 0x0);
        gbc.writeMem(0x4ffc, { 0xc });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x2f80, gbc.sp());
        EXPECT(0x4ffd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0182
        gbc.setState(0x7a33, 0xecee, 0x4a40, 0xdcb8, 0x4ba0, 0x7fbb, 0x1, 0x1);
        gbc.writeMem(0x7a33, { 0xc });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xecee, gbc.sp());
        EXPECT(0x7a34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 0183
        gbc.setState(0xd0ff, 0xcbfa, 0x39e0, 0x70a9, 0xd035, 0xa51a, 0x0, 0x1);
        gbc.writeMem(0xd0ff, { 0xc });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xcbfa, gbc.sp());
        EXPECT(0xd100, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xd0ff));
        // 0C 0184
        gbc.setState(0xad3e, 0x1098, 0x7f90, 0xabd4, 0x6d09, 0x81c8, 0x0, 0x1);
        gbc.writeMem(0xad3e, { 0xc });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x1098, gbc.sp());
        EXPECT(0xad3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xad3e));
        // 0C 0185
        gbc.setState(0x30e, 0xca27, 0xf6b0, 0x88dc, 0x9f5b, 0x5f8c, 0x0, 0x0);
        gbc.writeMem(0x30e, { 0xc });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xca27, gbc.sp());
        EXPECT(0x30f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0186
        gbc.setState(0xe203, 0x808c, 0xcbf0, 0xe4c2, 0xa21b, 0x432b, 0x1, 0x1);
        gbc.writeMem(0xe203, { 0xc });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x808c, gbc.sp());
        EXPECT(0xe204, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xe203));
        // 0C 0187
        gbc.setState(0xe52f, 0xaa9e, 0x7aa0, 0x38b5, 0xd854, 0x1854, 0x0, 0x1);
        gbc.writeMem(0xe52f, { 0xc });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xaa9e, gbc.sp());
        EXPECT(0xe530, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xe52f));
        // 0C 0188
        gbc.setState(0xd5d1, 0x4e4, 0xa1c0, 0x8a22, 0x1cf6, 0x705f, 0x0, 0x0);
        gbc.writeMem(0xd5d1, { 0xc });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x4e4, gbc.sp());
        EXPECT(0xd5d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xd5d1));
        // 0C 0189
        gbc.setState(0x1dde, 0x213f, 0xbf80, 0x4b3e, 0x9daf, 0xc8d4, 0x0, 0x0);
        gbc.writeMem(0x1dde, { 0xc });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x213f, gbc.sp());
        EXPECT(0x1ddf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 018A
        gbc.setState(0x8719, 0xa019, 0x3ef0, 0xfa7c, 0x1e8e, 0xb05a, 0x1, 0x1);
        gbc.writeMem(0x8719, { 0xc });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xa019, gbc.sp());
        EXPECT(0x871a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x8719));
        // 0C 018B
        gbc.setState(0xb42e, 0xde15, 0x6770, 0xca5, 0xbede, 0x9639, 0x1, 0x1);
        gbc.writeMem(0xb42e, { 0xc });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xde15, gbc.sp());
        EXPECT(0xb42f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xb42e));
        // 0C 018D
        gbc.setState(0x3e2c, 0x6f68, 0xecb0, 0x6421, 0x398e, 0xd15b, 0x0, 0x1);
        gbc.writeMem(0x3e2c, { 0xc });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x6f68, gbc.sp());
        EXPECT(0x3e2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 018E
        gbc.setState(0xb183, 0xb7be, 0xc600, 0x7858, 0xc51d, 0x45ca, 0x1, 0x0);
        gbc.writeMem(0xb183, { 0xc });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xb7be, gbc.sp());
        EXPECT(0xb184, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xb183));
        // 0C 018F
        gbc.setState(0x1313, 0x1442, 0x20d0, 0x843a, 0x995e, 0xf703, 0x1, 0x0);
        gbc.writeMem(0x1313, { 0xc });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x1442, gbc.sp());
        EXPECT(0x1314, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0190
        gbc.setState(0xe522, 0x86f7, 0xfae0, 0x228e, 0x1826, 0xcc0a, 0x0, 0x0);
        gbc.writeMem(0xe522, { 0xc });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x86f7, gbc.sp());
        EXPECT(0xe523, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xe522));
        // 0C 0193
        gbc.setState(0xdac6, 0x7d60, 0x6050, 0x408f, 0x944b, 0x65e2, 0x0, 0x0);
        gbc.writeMem(0xdac6, { 0xc });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x7d60, gbc.sp());
        EXPECT(0xdac7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xdac6));
        // 0C 0194
        gbc.setState(0x9dca, 0xcfe, 0x6e30, 0x673b, 0x8723, 0xe10, 0x1, 0x0);
        gbc.writeMem(0x9dca, { 0xc });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xcfe, gbc.sp());
        EXPECT(0x9dcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x9dca));
        // 0C 0195
        gbc.setState(0xec6d, 0x228b, 0xcbc0, 0x2803, 0xfcd9, 0xda84, 0x1, 0x1);
        gbc.writeMem(0xec6d, { 0xc });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x228b, gbc.sp());
        EXPECT(0xec6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xec6d));
        // 0C 0196
        gbc.setState(0x5a92, 0x9167, 0xa80, 0x866d, 0x9155, 0x1829, 0x1, 0x0);
        gbc.writeMem(0x5a92, { 0xc });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x9167, gbc.sp());
        EXPECT(0x5a93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 0197
        gbc.setState(0xc15e, 0xea19, 0x8260, 0xa205, 0x2248, 0xa82d, 0x1, 0x1);
        gbc.writeMem(0xc15e, { 0xc });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xea19, gbc.sp());
        EXPECT(0xc15f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xc15e));
        // 0C 0198
        gbc.setState(0x489a, 0x1d61, 0x4140, 0xdb9f, 0x25a, 0x4118, 0x0, 0x1);
        gbc.writeMem(0x489a, { 0xc });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x1d61, gbc.sp());
        EXPECT(0x489b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 0199
        gbc.setState(0x9ae8, 0x80ba, 0x9e20, 0x608e, 0xd705, 0x88b2, 0x0, 0x0);
        gbc.writeMem(0x9ae8, { 0xc });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x80ba, gbc.sp());
        EXPECT(0x9ae9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x9ae8));
        // 0C 019A
        gbc.setState(0x3a58, 0x96d7, 0xb040, 0xf960, 0xe7e8, 0x12c8, 0x0, 0x0);
        gbc.writeMem(0x3a58, { 0xc });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x96d7, gbc.sp());
        EXPECT(0x3a59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 019B
        gbc.setState(0x1b94, 0xaa63, 0xb0c0, 0x52b1, 0x7224, 0xf305, 0x1, 0x0);
        gbc.writeMem(0x1b94, { 0xc });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xaa63, gbc.sp());
        EXPECT(0x1b95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 019C
        gbc.setState(0xe70, 0xfec2, 0x8700, 0xaf6, 0x2106, 0x3d71, 0x1, 0x0);
        gbc.writeMem(0xe70, { 0xc });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xfec2, gbc.sp());
        EXPECT(0xe71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 019D
        gbc.setState(0x959c, 0xa499, 0xf360, 0xd765, 0x2858, 0x3677, 0x0, 0x1);
        gbc.writeMem(0x959c, { 0xc });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xa499, gbc.sp());
        EXPECT(0x959d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x959c));
        // 0C 019E
        gbc.setState(0x259f, 0xa79b, 0x9560, 0xd948, 0x3ff9, 0x7417, 0x0, 0x0);
        gbc.writeMem(0x259f, { 0xc });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xa79b, gbc.sp());
        EXPECT(0x25a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 019F
        gbc.setState(0x9a3c, 0xbd, 0xa3e0, 0xd3aa, 0xca6c, 0x5e63, 0x1, 0x1);
        gbc.writeMem(0x9a3c, { 0xc });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xbd, gbc.sp());
        EXPECT(0x9a3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x9a3c));
        // 0C 01A0
        gbc.setState(0x56f6, 0x80c4, 0xa700, 0x2f46, 0x947e, 0xac63, 0x1, 0x0);
        gbc.writeMem(0x56f6, { 0xc });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x80c4, gbc.sp());
        EXPECT(0x56f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 01A1
        gbc.setState(0x7f5, 0x3fb9, 0xc130, 0x16de, 0x686a, 0xdabb, 0x1, 0x0);
        gbc.writeMem(0x7f5, { 0xc });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x3fb9, gbc.sp());
        EXPECT(0x7f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 01A2
        gbc.setState(0xcfca, 0xe18f, 0xa5f0, 0xa2ff, 0x8bb9, 0xa9cb, 0x1, 0x1);
        gbc.writeMem(0xcfca, { 0xc });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xe18f, gbc.sp());
        EXPECT(0xcfcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xcfca));
        // 0C 01A3
        gbc.setState(0x4ea0, 0x52c0, 0x5db0, 0x124a, 0xb400, 0xa2ac, 0x1, 0x1);
        gbc.writeMem(0x4ea0, { 0xc });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x52c0, gbc.sp());
        EXPECT(0x4ea1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 01A4
        gbc.setState(0xdebb, 0xfe50, 0xdfb0, 0x67da, 0x1566, 0x296b, 0x1, 0x1);
        gbc.writeMem(0xdebb, { 0xc });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xfe50, gbc.sp());
        EXPECT(0xdebc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xdebb));
        // 0C 01A5
        gbc.setState(0x9c87, 0x43d7, 0xb130, 0x770d, 0xd183, 0xc798, 0x0, 0x1);
        gbc.writeMem(0x9c87, { 0xc });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x43d7, gbc.sp());
        EXPECT(0x9c88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x9c87));
        // 0C 01A6
        gbc.setState(0x3c01, 0x6975, 0x4120, 0xf4d6, 0x5dde, 0x9084, 0x0, 0x1);
        gbc.writeMem(0x3c01, { 0xc });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x6975, gbc.sp());
        EXPECT(0x3c02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 01A7
        gbc.setState(0x3900, 0x3aae, 0x61f0, 0x1fb7, 0x5137, 0xf5a7, 0x1, 0x0);
        gbc.writeMem(0x3900, { 0xc });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x3aae, gbc.sp());
        EXPECT(0x3901, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 01A8
        gbc.setState(0x184d, 0xbef0, 0xa900, 0xfa5d, 0xeb86, 0x8f29, 0x1, 0x0);
        gbc.writeMem(0x184d, { 0xc });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xbef0, gbc.sp());
        EXPECT(0x184e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 01A9
        gbc.setState(0xd509, 0x1666, 0x100, 0x892e, 0x28c3, 0xbe57, 0x1, 0x0);
        gbc.writeMem(0xd509, { 0xc });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x1666, gbc.sp());
        EXPECT(0xd50a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xd509));
        // 0C 01AA
        gbc.setState(0x9744, 0xd717, 0xa1e0, 0x89a, 0xf3b8, 0x981a, 0x1, 0x0);
        gbc.writeMem(0x9744, { 0xc });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xd717, gbc.sp());
        EXPECT(0x9745, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x9744));
        // 0C 01AB
        gbc.setState(0x5d0b, 0x42b3, 0x7130, 0xed7b, 0xf357, 0x72d4, 0x0, 0x0);
        gbc.writeMem(0x5d0b, { 0xc });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x42b3, gbc.sp());
        EXPECT(0x5d0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 01AC
        gbc.setState(0xd025, 0x2938, 0xd3d0, 0x5ed4, 0x84e8, 0xf0fc, 0x0, 0x0);
        gbc.writeMem(0xd025, { 0xc });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x2938, gbc.sp());
        EXPECT(0xd026, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xd025));
        // 0C 01AD
        gbc.setState(0x7406, 0xa783, 0xced0, 0x426d, 0x5aa2, 0x7828, 0x0, 0x1);
        gbc.writeMem(0x7406, { 0xc });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xa783, gbc.sp());
        EXPECT(0x7407, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 01AF
        gbc.setState(0x4562, 0x6ee2, 0xbf0, 0xc1d5, 0x77f4, 0xefa6, 0x1, 0x1);
        gbc.writeMem(0x4562, { 0xc });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x6ee2, gbc.sp());
        EXPECT(0x4563, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 01B0
        gbc.setState(0xb787, 0x2334, 0x2620, 0xf236, 0xc17c, 0x7a39, 0x0, 0x0);
        gbc.writeMem(0xb787, { 0xc });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x2334, gbc.sp());
        EXPECT(0xb788, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xb787));
        // 0C 01B1
        gbc.setState(0x232f, 0x1508, 0x82c0, 0xc88f, 0x34da, 0x4aa8, 0x1, 0x0);
        gbc.writeMem(0x232f, { 0xc });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x1508, gbc.sp());
        EXPECT(0x2330, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 01B2
        gbc.setState(0x444f, 0x3bb3, 0x3740, 0x4cfe, 0xf6ae, 0xd20a, 0x1, 0x1);
        gbc.writeMem(0x444f, { 0xc });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x3bb3, gbc.sp());
        EXPECT(0x4450, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 01B3
        gbc.setState(0xd663, 0x6f61, 0x4320, 0xec55, 0x6886, 0x7885, 0x0, 0x0);
        gbc.writeMem(0xd663, { 0xc });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x6f61, gbc.sp());
        EXPECT(0xd664, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xd663));
        // 0C 01B4
        gbc.setState(0xddad, 0x5a1a, 0xbfa0, 0x53cc, 0x6fd9, 0xe0b4, 0x1, 0x0);
        gbc.writeMem(0xddad, { 0xc });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x5a1a, gbc.sp());
        EXPECT(0xddae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xddad));
        // 0C 01B5
        gbc.setState(0xbe, 0x467, 0x9460, 0x2a62, 0x59f, 0x9a55, 0x1, 0x0);
        gbc.writeMem(0xbe, { 0xc });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x467, gbc.sp());
        EXPECT(0xbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 01B6
        gbc.setState(0x920f, 0xd00d, 0xf250, 0x8551, 0x9fb7, 0xe541, 0x1, 0x0);
        gbc.writeMem(0x920f, { 0xc });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xd00d, gbc.sp());
        EXPECT(0x9210, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x920f));
        // 0C 01B7
        gbc.setState(0x586f, 0x839d, 0x15d0, 0xeabd, 0x9276, 0x1d2, 0x0, 0x1);
        gbc.writeMem(0x586f, { 0xc });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x839d, gbc.sp());
        EXPECT(0x5870, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 01B8
        gbc.setState(0x30af, 0xc62e, 0xaf00, 0xb9a8, 0x90ea, 0x3998, 0x0, 0x1);
        gbc.writeMem(0x30af, { 0xc });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xc62e, gbc.sp());
        EXPECT(0x30b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 01B9
        gbc.setState(0xae1c, 0x8a0f, 0x8d10, 0xe64b, 0x758f, 0x48d5, 0x1, 0x1);
        gbc.writeMem(0xae1c, { 0xc });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x8a0f, gbc.sp());
        EXPECT(0xae1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xae1c));
        // 0C 01BA
        gbc.setState(0x2207, 0xfa68, 0x5eb0, 0xae53, 0x1365, 0xd2f0, 0x1, 0x0);
        gbc.writeMem(0x2207, { 0xc });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xfa68, gbc.sp());
        EXPECT(0x2208, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 01BB
        gbc.setState(0x5b16, 0xf5e9, 0x1c00, 0x66f7, 0x8771, 0xd7b8, 0x1, 0x1);
        gbc.writeMem(0x5b16, { 0xc });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xf5e9, gbc.sp());
        EXPECT(0x5b17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 01BC
        gbc.setState(0x3d4c, 0x127, 0xe420, 0x3d85, 0x9d69, 0x7389, 0x0, 0x1);
        gbc.writeMem(0x3d4c, { 0xc });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x127, gbc.sp());
        EXPECT(0x3d4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 01BD
        gbc.setState(0xb64f, 0x6611, 0x2b0, 0xa248, 0x4cc7, 0x4e1c, 0x1, 0x1);
        gbc.writeMem(0xb64f, { 0xc });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x6611, gbc.sp());
        EXPECT(0xb650, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xb64f));
        // 0C 01BE
        gbc.setState(0xe403, 0xa5af, 0x3850, 0xf8c6, 0x4b03, 0x1367, 0x1, 0x0);
        gbc.writeMem(0xe403, { 0xc });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xa5af, gbc.sp());
        EXPECT(0xe404, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xe403));
        // 0C 01BF
        gbc.setState(0xcb97, 0xf6d1, 0x6dd0, 0xbe43, 0x14da, 0x1ed5, 0x1, 0x1);
        gbc.writeMem(0xcb97, { 0xc });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xf6d1, gbc.sp());
        EXPECT(0xcb98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xcb97));
        // 0C 01C0
        gbc.setState(0xd7b9, 0xab95, 0x9f00, 0x4095, 0x4272, 0x3b0b, 0x1, 0x1);
        gbc.writeMem(0xd7b9, { 0xc });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xab95, gbc.sp());
        EXPECT(0xd7ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xd7b9));
        // 0C 01C1
        gbc.setState(0x6fe1, 0x6ea7, 0x5020, 0xd14a, 0x8b08, 0x8e9e, 0x1, 0x1);
        gbc.writeMem(0x6fe1, { 0xc });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x6ea7, gbc.sp());
        EXPECT(0x6fe2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 01C2
        gbc.setState(0x6c3f, 0x7993, 0x78c0, 0x8e94, 0xe1d5, 0x82f1, 0x1, 0x0);
        gbc.writeMem(0x6c3f, { 0xc });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x7993, gbc.sp());
        EXPECT(0x6c40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 01C3
        gbc.setState(0x6f45, 0x1de3, 0xde90, 0x2e4a, 0x3941, 0xc709, 0x0, 0x1);
        gbc.writeMem(0x6f45, { 0xc });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x1de3, gbc.sp());
        EXPECT(0x6f46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 01C4
        gbc.setState(0xdd7f, 0x30be, 0xf960, 0x7e14, 0x5a78, 0x2a34, 0x1, 0x0);
        gbc.writeMem(0xdd7f, { 0xc });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x30be, gbc.sp());
        EXPECT(0xdd80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xdd7f));
        // 0C 01C5
        gbc.setState(0x144b, 0xf05f, 0xecf0, 0xb503, 0xf7ba, 0xe9cc, 0x0, 0x1);
        gbc.writeMem(0x144b, { 0xc });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xf05f, gbc.sp());
        EXPECT(0x144c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 01C6
        gbc.setState(0x622e, 0x8b56, 0x1c70, 0x7962, 0x605b, 0x51cc, 0x0, 0x1);
        gbc.writeMem(0x622e, { 0xc });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x8b56, gbc.sp());
        EXPECT(0x622f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 01C7
        gbc.setState(0x36ed, 0x5bc7, 0x2490, 0x3d9, 0xee2c, 0xf465, 0x0, 0x0);
        gbc.writeMem(0x36ed, { 0xc });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x5bc7, gbc.sp());
        EXPECT(0x36ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 01C8
        gbc.setState(0xb64, 0xcbda, 0x7380, 0x931c, 0xc, 0x644e, 0x0, 0x1);
        gbc.writeMem(0xb64, { 0xc });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xcbda, gbc.sp());
        EXPECT(0xb65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 01C9
        gbc.setState(0x5134, 0x764e, 0x25f0, 0x5f8, 0x1c25, 0xef40, 0x0, 0x1);
        gbc.writeMem(0x5134, { 0xc });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x764e, gbc.sp());
        EXPECT(0x5135, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 01CA
        gbc.setState(0xdaf4, 0x9109, 0xd1e0, 0x415d, 0xffa6, 0x889c, 0x1, 0x0);
        gbc.writeMem(0xdaf4, { 0xc });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x9109, gbc.sp());
        EXPECT(0xdaf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xdaf4));
        // 0C 01CB
        gbc.setState(0xda99, 0x4d9a, 0xef10, 0x7cd4, 0x306a, 0x1c28, 0x1, 0x1);
        gbc.writeMem(0xda99, { 0xc });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x4d9a, gbc.sp());
        EXPECT(0xda9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xda99));
        // 0C 01CC
        gbc.setState(0xe9c6, 0x969e, 0x7d90, 0x7329, 0x958c, 0x3711, 0x1, 0x1);
        gbc.writeMem(0xe9c6, { 0xc });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x969e, gbc.sp());
        EXPECT(0xe9c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xe9c6));
        // 0C 01CD
        gbc.setState(0x8453, 0x9604, 0x8640, 0xa426, 0xee3b, 0xd128, 0x0, 0x0);
        gbc.writeMem(0x8453, { 0xc });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x9604, gbc.sp());
        EXPECT(0x8454, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x8453));
        // 0C 01CF
        gbc.setState(0x1f97, 0x14d8, 0x9370, 0x348f, 0x34cc, 0xf849, 0x1, 0x1);
        gbc.writeMem(0x1f97, { 0xc });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x14d8, gbc.sp());
        EXPECT(0x1f98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 01D0
        gbc.setState(0x358a, 0xd7a4, 0x4e60, 0x7001, 0x1b35, 0xf1f8, 0x1, 0x1);
        gbc.writeMem(0x358a, { 0xc });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xd7a4, gbc.sp());
        EXPECT(0x358b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 01D1
        gbc.setState(0xe61f, 0xeb0a, 0xd5b0, 0x7b80, 0x5285, 0xad95, 0x1, 0x1);
        gbc.writeMem(0xe61f, { 0xc });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xeb0a, gbc.sp());
        EXPECT(0xe620, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xe61f));
        // 0C 01D2
        gbc.setState(0xc878, 0xca80, 0xd240, 0x8fd8, 0x1c54, 0x835d, 0x0, 0x0);
        gbc.writeMem(0xc878, { 0xc });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xca80, gbc.sp());
        EXPECT(0xc879, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xc878));
        // 0C 01D3
        gbc.setState(0x9f04, 0xee25, 0x4690, 0xc782, 0xe510, 0x21f6, 0x1, 0x0);
        gbc.writeMem(0x9f04, { 0xc });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xee25, gbc.sp());
        EXPECT(0x9f05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x9f04));
        // 0C 01D4
        gbc.setState(0x256a, 0xafcd, 0xcbd0, 0xa025, 0x7ff4, 0x1dce, 0x0, 0x1);
        gbc.writeMem(0x256a, { 0xc });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xafcd, gbc.sp());
        EXPECT(0x256b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 01D5
        gbc.setState(0x8f49, 0x570, 0xd030, 0x38e2, 0x770e, 0x97d8, 0x0, 0x0);
        gbc.writeMem(0x8f49, { 0xc });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x570, gbc.sp());
        EXPECT(0x8f4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x8f49));
        // 0C 01D7
        gbc.setState(0x3fc1, 0x1ee1, 0x5220, 0x8cf2, 0xb295, 0xb8d1, 0x0, 0x0);
        gbc.writeMem(0x3fc1, { 0xc });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x1ee1, gbc.sp());
        EXPECT(0x3fc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 01D8
        gbc.setState(0x9f7a, 0x7b93, 0xfa40, 0x3117, 0x70bd, 0xd305, 0x0, 0x0);
        gbc.writeMem(0x9f7a, { 0xc });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x7b93, gbc.sp());
        EXPECT(0x9f7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x9f7a));
        // 0C 01D9
        gbc.setState(0xe704, 0x8823, 0x2480, 0x4415, 0xf0bc, 0x24ec, 0x1, 0x0);
        gbc.writeMem(0xe704, { 0xc });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x8823, gbc.sp());
        EXPECT(0xe705, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xe704));
        // 0C 01DA
        gbc.setState(0x43af, 0x6bca, 0xf580, 0xbacd, 0x2ef0, 0xe7f0, 0x1, 0x0);
        gbc.writeMem(0x43af, { 0xc });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x6bca, gbc.sp());
        EXPECT(0x43b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 01DB
        gbc.setState(0xca21, 0xc63c, 0x98d0, 0xa064, 0x5c79, 0x8d59, 0x0, 0x1);
        gbc.writeMem(0xca21, { 0xc });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xc63c, gbc.sp());
        EXPECT(0xca22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xca21));
        // 0C 01DC
        gbc.setState(0xe071, 0xe370, 0x230, 0x88c3, 0xdcc0, 0x2152, 0x0, 0x1);
        gbc.writeMem(0xe071, { 0xc });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xe370, gbc.sp());
        EXPECT(0xe072, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xe071));
        // 0C 01DD
        gbc.setState(0xd9d5, 0x2c4d, 0xca10, 0x7f76, 0x6663, 0x7a71, 0x1, 0x1);
        gbc.writeMem(0xd9d5, { 0xc });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x2c4d, gbc.sp());
        EXPECT(0xd9d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xd9d5));
        // 0C 01DE
        gbc.setState(0xce04, 0xc01, 0xb170, 0x21e8, 0xa6b9, 0x4a6c, 0x1, 0x1);
        gbc.writeMem(0xce04, { 0xc });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xc01, gbc.sp());
        EXPECT(0xce05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xce04));
        // 0C 01DF
        gbc.setState(0x190e, 0x4f20, 0xc750, 0xb620, 0x2a72, 0xf4c6, 0x0, 0x1);
        gbc.writeMem(0x190e, { 0xc });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x4f20, gbc.sp());
        EXPECT(0x190f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 01E0
        gbc.setState(0x865a, 0xc6df, 0xa390, 0x52ab, 0x9e9e, 0xfb87, 0x1, 0x1);
        gbc.writeMem(0x865a, { 0xc });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xc6df, gbc.sp());
        EXPECT(0x865b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x865a));
        // 0C 01E1
        gbc.setState(0x3328, 0xbc4a, 0x6dc0, 0xda0, 0x20da, 0x6436, 0x0, 0x0);
        gbc.writeMem(0x3328, { 0xc });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xbc4a, gbc.sp());
        EXPECT(0x3329, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 01E2
        gbc.setState(0x412f, 0x9fd6, 0x5620, 0x38, 0x2568, 0x4d0b, 0x0, 0x1);
        gbc.writeMem(0x412f, { 0xc });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x9fd6, gbc.sp());
        EXPECT(0x4130, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 01E3
        gbc.setState(0x7041, 0x4f4f, 0x8f0, 0x6fd2, 0xd2f, 0x4b59, 0x0, 0x0);
        gbc.writeMem(0x7041, { 0xc });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x4f4f, gbc.sp());
        EXPECT(0x7042, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 01E4
        gbc.setState(0x59c6, 0xdad8, 0x1300, 0x4eca, 0x5619, 0x2994, 0x0, 0x0);
        gbc.writeMem(0x59c6, { 0xc });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xdad8, gbc.sp());
        EXPECT(0x59c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 01E5
        gbc.setState(0xa2f9, 0x53c5, 0x2330, 0xa015, 0x6336, 0x1304, 0x0, 0x1);
        gbc.writeMem(0xa2f9, { 0xc });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x53c5, gbc.sp());
        EXPECT(0xa2fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xa2f9));
        // 0C 01E6
        gbc.setState(0x5d2f, 0x29e9, 0xb670, 0x9777, 0xad5b, 0x9485, 0x0, 0x0);
        gbc.writeMem(0x5d2f, { 0xc });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x29e9, gbc.sp());
        EXPECT(0x5d30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 01E7
        gbc.setState(0xd525, 0x814d, 0xf730, 0x2af9, 0xe4c4, 0x4139, 0x0, 0x0);
        gbc.writeMem(0xd525, { 0xc });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x814d, gbc.sp());
        EXPECT(0xd526, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xd525));
        // 0C 01E8
        gbc.setState(0xa03b, 0x6cfd, 0xe0b0, 0xf724, 0x6f05, 0x6a69, 0x0, 0x0);
        gbc.writeMem(0xa03b, { 0xc });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x6cfd, gbc.sp());
        EXPECT(0xa03c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xa03b));
        // 0C 01E9
        gbc.setState(0x528, 0xf313, 0x8070, 0x8f8a, 0xf4af, 0x442c, 0x0, 0x0);
        gbc.writeMem(0x528, { 0xc });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xf313, gbc.sp());
        EXPECT(0x529, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 01EA
        gbc.setState(0x15f8, 0xca61, 0x1190, 0x8e4, 0x66d9, 0xffdd, 0x0, 0x0);
        gbc.writeMem(0x15f8, { 0xc });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xca61, gbc.sp());
        EXPECT(0x15f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 01EB
        gbc.setState(0xc238, 0x94d2, 0x4b80, 0x7ca2, 0x966a, 0x2773, 0x0, 0x1);
        gbc.writeMem(0xc238, { 0xc });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x94d2, gbc.sp());
        EXPECT(0xc239, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xc238));
        // 0C 01EC
        gbc.setState(0xb03b, 0x3831, 0x24b0, 0x19b4, 0xc4d3, 0x47d9, 0x0, 0x0);
        gbc.writeMem(0xb03b, { 0xc });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x3831, gbc.sp());
        EXPECT(0xb03c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xb03b));
        // 0C 01ED
        gbc.setState(0x8ac1, 0x58bb, 0xcec0, 0x7fd2, 0xf44, 0x326e, 0x1, 0x1);
        gbc.writeMem(0x8ac1, { 0xc });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x58bb, gbc.sp());
        EXPECT(0x8ac2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x8ac1));
        // 0C 01EE
        gbc.setState(0x4785, 0x5c69, 0xf2a0, 0x1d91, 0x4b64, 0xfe6b, 0x1, 0x0);
        gbc.writeMem(0x4785, { 0xc });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x5c69, gbc.sp());
        EXPECT(0x4786, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 01EF
        gbc.setState(0x1278, 0xf7be, 0xc5b0, 0x87c3, 0xe89f, 0xa42, 0x1, 0x0);
        gbc.writeMem(0x1278, { 0xc });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xf7be, gbc.sp());
        EXPECT(0x1279, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 01F0
        gbc.setState(0xc71f, 0xa22d, 0xff70, 0xee9e, 0xe38a, 0xe7c, 0x0, 0x0);
        gbc.writeMem(0xc71f, { 0xc });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xa22d, gbc.sp());
        EXPECT(0xc720, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xc71f));
        // 0C 01F1
        gbc.setState(0x2a4d, 0x8691, 0x1b0, 0x244d, 0x84f4, 0xf8ec, 0x1, 0x1);
        gbc.writeMem(0x2a4d, { 0xc });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x8691, gbc.sp());
        EXPECT(0x2a4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 01F2
        gbc.setState(0xef2c, 0xd724, 0x1fc0, 0x9e57, 0xc4a8, 0xf559, 0x0, 0x1);
        gbc.writeMem(0xef2c, { 0xc });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xd724, gbc.sp());
        EXPECT(0xef2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xef2c));
        // 0C 01F3
        gbc.setState(0x91e, 0x9f1e, 0xc570, 0x2617, 0x2546, 0xc5e0, 0x1, 0x1);
        gbc.writeMem(0x91e, { 0xc });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x9f1e, gbc.sp());
        EXPECT(0x91f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 01F4
        gbc.setState(0x13ce, 0x42d4, 0xf710, 0xfc54, 0xf0b8, 0xda86, 0x1, 0x1);
        gbc.writeMem(0x13ce, { 0xc });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x42d4, gbc.sp());
        EXPECT(0x13cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 01F5
        gbc.setState(0xc684, 0x2ec, 0x8e70, 0xb1c3, 0xb4bc, 0x3437, 0x0, 0x1);
        gbc.writeMem(0xc684, { 0xc });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x2ec, gbc.sp());
        EXPECT(0xc685, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xc684));
        // 0C 01F6
        gbc.setState(0xb107, 0x857b, 0x5ed0, 0xc6e8, 0xaf4, 0xde2, 0x0, 0x0);
        gbc.writeMem(0xb107, { 0xc });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x857b, gbc.sp());
        EXPECT(0xb108, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xb107));
        // 0C 01F7
        gbc.setState(0x616a, 0x52fd, 0xaf0, 0x5300, 0x17a7, 0x9f1a, 0x1, 0x0);
        gbc.writeMem(0x616a, { 0xc });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x52fd, gbc.sp());
        EXPECT(0x616b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 01F8
        gbc.setState(0x3114, 0xebe2, 0x5e40, 0x8173, 0xa5b0, 0x517, 0x0, 0x0);
        gbc.writeMem(0x3114, { 0xc });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xebe2, gbc.sp());
        EXPECT(0x3115, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 01F9
        gbc.setState(0x939f, 0xcc5f, 0x5f00, 0xb4b6, 0xa8bb, 0x450d, 0x1, 0x0);
        gbc.writeMem(0x939f, { 0xc });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xcc5f, gbc.sp());
        EXPECT(0x93a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x939f));
        // 0C 01FA
        gbc.setState(0xe3db, 0xa2c9, 0xebb0, 0xf140, 0x27f4, 0x2947, 0x0, 0x1);
        gbc.writeMem(0xe3db, { 0xc });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xa2c9, gbc.sp());
        EXPECT(0xe3dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xe3db));
        // 0C 01FC
        gbc.setState(0x3364, 0x7165, 0xd4c0, 0xe8ac, 0x8d50, 0x35b9, 0x1, 0x0);
        gbc.writeMem(0x3364, { 0xc });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x7165, gbc.sp());
        EXPECT(0x3365, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 01FD
        gbc.setState(0x8786, 0xf3b7, 0x1350, 0x7373, 0x76d2, 0xea32, 0x1, 0x0);
        gbc.writeMem(0x8786, { 0xc });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xf3b7, gbc.sp());
        EXPECT(0x8787, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x8786));
        // 0C 01FE
        gbc.setState(0xd9e1, 0x1887, 0xcc60, 0x8f6b, 0xf0c5, 0x37d5, 0x0, 0x0);
        gbc.writeMem(0xd9e1, { 0xc });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x1887, gbc.sp());
        EXPECT(0xd9e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xd9e1));
        // 0C 01FF
        gbc.setState(0x3103, 0x23ae, 0x8570, 0x991a, 0x12f6, 0x4a71, 0x1, 0x1);
        gbc.writeMem(0x3103, { 0xc });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x23ae, gbc.sp());
        EXPECT(0x3104, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0200
        gbc.setState(0xcda5, 0x10c3, 0x9380, 0xf0a2, 0x5e89, 0x197f, 0x0, 0x0);
        gbc.writeMem(0xcda5, { 0xc });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x10c3, gbc.sp());
        EXPECT(0xcda6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xcda5));
        // 0C 0201
        gbc.setState(0x8fbd, 0x832e, 0xa8c0, 0x1080, 0x330e, 0xd425, 0x1, 0x1);
        gbc.writeMem(0x8fbd, { 0xc });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x832e, gbc.sp());
        EXPECT(0x8fbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x8fbd));
        // 0C 0202
        gbc.setState(0x637c, 0x47f3, 0x5e10, 0xc1d2, 0xf108, 0xc8d4, 0x0, 0x0);
        gbc.writeMem(0x637c, { 0xc });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x47f3, gbc.sp());
        EXPECT(0x637d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0203
        gbc.setState(0x829f, 0x22c0, 0x4340, 0x5017, 0xff75, 0x247, 0x1, 0x1);
        gbc.writeMem(0x829f, { 0xc });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x22c0, gbc.sp());
        EXPECT(0x82a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x829f));
        // 0C 0204
        gbc.setState(0x56b9, 0x3945, 0xe230, 0xdcde, 0x629c, 0x528e, 0x1, 0x0);
        gbc.writeMem(0x56b9, { 0xc });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x3945, gbc.sp());
        EXPECT(0x56ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0205
        gbc.setState(0x2c5d, 0x5a37, 0xf6a0, 0xa3d9, 0xc93e, 0x57e2, 0x0, 0x1);
        gbc.writeMem(0x2c5d, { 0xc });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x5a37, gbc.sp());
        EXPECT(0x2c5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 0206
        gbc.setState(0xa76b, 0xe55c, 0x6650, 0x9427, 0x8415, 0xb648, 0x0, 0x1);
        gbc.writeMem(0xa76b, { 0xc });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xe55c, gbc.sp());
        EXPECT(0xa76c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xa76b));
        // 0C 0207
        gbc.setState(0xb3d3, 0x7895, 0x5290, 0xde18, 0x689f, 0x2a4e, 0x1, 0x0);
        gbc.writeMem(0xb3d3, { 0xc });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x7895, gbc.sp());
        EXPECT(0xb3d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xb3d3));
        // 0C 0208
        gbc.setState(0xe4fb, 0x437, 0x8730, 0xa939, 0xe352, 0x6d65, 0x0, 0x1);
        gbc.writeMem(0xe4fb, { 0xc });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x437, gbc.sp());
        EXPECT(0xe4fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xe4fb));
        // 0C 0209
        gbc.setState(0x1826, 0x5098, 0x3060, 0x8801, 0x2dde, 0x4b04, 0x0, 0x1);
        gbc.writeMem(0x1826, { 0xc });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x5098, gbc.sp());
        EXPECT(0x1827, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 020A
        gbc.setState(0x9b0c, 0x45e8, 0xbb0, 0x961e, 0xe019, 0x919f, 0x1, 0x0);
        gbc.writeMem(0x9b0c, { 0xc });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x45e8, gbc.sp());
        EXPECT(0x9b0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x9b0c));
        // 0C 020B
        gbc.setState(0xd97f, 0x63f1, 0x6040, 0x167a, 0x588b, 0x6e8c, 0x1, 0x1);
        gbc.writeMem(0xd97f, { 0xc });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x63f1, gbc.sp());
        EXPECT(0xd980, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xd97f));
        // 0C 020C
        gbc.setState(0x4b20, 0xfe66, 0x3650, 0x790c, 0x6e60, 0xdaa8, 0x1, 0x0);
        gbc.writeMem(0x4b20, { 0xc });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xfe66, gbc.sp());
        EXPECT(0x4b21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 020D
        gbc.setState(0x7a51, 0xa0c3, 0xfcc0, 0x53b4, 0x90c5, 0xa66f, 0x0, 0x0);
        gbc.writeMem(0x7a51, { 0xc });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xa0c3, gbc.sp());
        EXPECT(0x7a52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 020E
        gbc.setState(0xd2fa, 0xddae, 0x5a90, 0x50eb, 0x6300, 0x7c93, 0x1, 0x0);
        gbc.writeMem(0xd2fa, { 0xc });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xddae, gbc.sp());
        EXPECT(0xd2fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xd2fa));
        // 0C 020F
        gbc.setState(0x2b0, 0x70f7, 0xc070, 0xc20f, 0x2642, 0x44bb, 0x1, 0x1);
        gbc.writeMem(0x2b0, { 0xc });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x70f7, gbc.sp());
        EXPECT(0x2b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0210
        gbc.setState(0xa067, 0xba75, 0xe00, 0x7e66, 0x1878, 0xd8b8, 0x0, 0x0);
        gbc.writeMem(0xa067, { 0xc });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xba75, gbc.sp());
        EXPECT(0xa068, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xa067));
        // 0C 0211
        gbc.setState(0x922e, 0x4887, 0x85f0, 0x19b2, 0x381b, 0xe90, 0x1, 0x1);
        gbc.writeMem(0x922e, { 0xc });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x4887, gbc.sp());
        EXPECT(0x922f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x922e));
        // 0C 0212
        gbc.setState(0x6e41, 0x1157, 0xf810, 0xc6ae, 0x6bd2, 0x5456, 0x1, 0x0);
        gbc.writeMem(0x6e41, { 0xc });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x1157, gbc.sp());
        EXPECT(0x6e42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0213
        gbc.setState(0x9bc, 0x4eaa, 0xc860, 0x88a6, 0x4a49, 0xd212, 0x0, 0x1);
        gbc.writeMem(0x9bc, { 0xc });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x4eaa, gbc.sp());
        EXPECT(0x9bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 0214
        gbc.setState(0xafb9, 0x83fb, 0xb3d0, 0x1f40, 0x845d, 0x83f2, 0x1, 0x0);
        gbc.writeMem(0xafb9, { 0xc });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x83fb, gbc.sp());
        EXPECT(0xafba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xafb9));
        // 0C 0215
        gbc.setState(0xee29, 0xd129, 0x1cf0, 0xbdf7, 0xeace, 0x5064, 0x0, 0x1);
        gbc.writeMem(0xee29, { 0xc });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xd129, gbc.sp());
        EXPECT(0xee2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xee29));
        // 0C 0216
        gbc.setState(0x686a, 0x29ed, 0x56a0, 0x9030, 0x74e5, 0x8c75, 0x1, 0x0);
        gbc.writeMem(0x686a, { 0xc });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x29ed, gbc.sp());
        EXPECT(0x686b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 0217
        gbc.setState(0xc414, 0xbb4b, 0x2230, 0x887e, 0xb0a0, 0x3fe4, 0x0, 0x0);
        gbc.writeMem(0xc414, { 0xc });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xbb4b, gbc.sp());
        EXPECT(0xc415, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xc414));
        // 0C 0218
        gbc.setState(0xaf7f, 0xbcbe, 0xa330, 0xb167, 0xe66a, 0x358f, 0x0, 0x0);
        gbc.writeMem(0xaf7f, { 0xc });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xbcbe, gbc.sp());
        EXPECT(0xaf80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xaf7f));
        // 0C 0219
        gbc.setState(0x4ad1, 0x669e, 0x2eb0, 0x8888, 0xac18, 0x1bf3, 0x1, 0x0);
        gbc.writeMem(0x4ad1, { 0xc });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x669e, gbc.sp());
        EXPECT(0x4ad2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 021A
        gbc.setState(0x3555, 0x98e8, 0x9830, 0xf7e3, 0x961, 0xcae0, 0x0, 0x0);
        gbc.writeMem(0x3555, { 0xc });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x98e8, gbc.sp());
        EXPECT(0x3556, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 021B
        gbc.setState(0x4358, 0xff00, 0xed80, 0x9d7a, 0x3c96, 0x1013, 0x1, 0x1);
        gbc.writeMem(0x4358, { 0xc });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xff00, gbc.sp());
        EXPECT(0x4359, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 021C
        gbc.setState(0xb66b, 0xf09d, 0x1980, 0xfa34, 0xec53, 0x75f0, 0x0, 0x1);
        gbc.writeMem(0xb66b, { 0xc });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xf09d, gbc.sp());
        EXPECT(0xb66c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xb66b));
        // 0C 021D
        gbc.setState(0x9e6, 0x9459, 0x2140, 0xe5e7, 0x601a, 0x9394, 0x1, 0x0);
        gbc.writeMem(0x9e6, { 0xc });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x9459, gbc.sp());
        EXPECT(0x9e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 021E
        gbc.setState(0x7d92, 0xe0b4, 0x5250, 0x5122, 0x4612, 0xc8c0, 0x0, 0x0);
        gbc.writeMem(0x7d92, { 0xc });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xe0b4, gbc.sp());
        EXPECT(0x7d93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 021F
        gbc.setState(0xb3fc, 0x9d6a, 0xfcb0, 0xbb60, 0xace, 0x8a8c, 0x0, 0x1);
        gbc.writeMem(0xb3fc, { 0xc });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x9d6a, gbc.sp());
        EXPECT(0xb3fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xb3fc));
        // 0C 0220
        gbc.setState(0x4359, 0x206a, 0x32b0, 0x959a, 0xacb0, 0x8341, 0x1, 0x0);
        gbc.writeMem(0x4359, { 0xc });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x206a, gbc.sp());
        EXPECT(0x435a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0221
        gbc.setState(0xbae9, 0x8111, 0xd720, 0x4843, 0x7795, 0xaac1, 0x1, 0x1);
        gbc.writeMem(0xbae9, { 0xc });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x8111, gbc.sp());
        EXPECT(0xbaea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xbae9));
        // 0C 0222
        gbc.setState(0x4a47, 0x8d33, 0xf0a0, 0x29da, 0x62e5, 0xdda1, 0x0, 0x0);
        gbc.writeMem(0x4a47, { 0xc });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x8d33, gbc.sp());
        EXPECT(0x4a48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 0223
        gbc.setState(0xc8c, 0xc0bf, 0x7570, 0x9dc1, 0x4f9e, 0x128b, 0x0, 0x1);
        gbc.writeMem(0xc8c, { 0xc });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xc0bf, gbc.sp());
        EXPECT(0xc8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0224
        gbc.setState(0x896, 0x1e74, 0xd190, 0xe1c1, 0x5ab0, 0xd7d6, 0x1, 0x1);
        gbc.writeMem(0x896, { 0xc });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x1e74, gbc.sp());
        EXPECT(0x897, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0225
        gbc.setState(0x900a, 0x1402, 0x1c0, 0x5d74, 0xb5cd, 0xea3, 0x0, 0x0);
        gbc.writeMem(0x900a, { 0xc });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x1402, gbc.sp());
        EXPECT(0x900b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x900a));
        // 0C 0226
        gbc.setState(0x12ef, 0xa5, 0xe120, 0xa5ab, 0x43c4, 0x139f, 0x1, 0x1);
        gbc.writeMem(0x12ef, { 0xc });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xa5, gbc.sp());
        EXPECT(0x12f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 0227
        gbc.setState(0xcf0f, 0xfd97, 0x6380, 0x9617, 0x8c07, 0x1b82, 0x1, 0x1);
        gbc.writeMem(0xcf0f, { 0xc });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xfd97, gbc.sp());
        EXPECT(0xcf10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xcf0f));
        // 0C 0228
        gbc.setState(0xd644, 0x69d9, 0x8420, 0x596b, 0xd3f8, 0x2981, 0x0, 0x1);
        gbc.writeMem(0xd644, { 0xc });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x69d9, gbc.sp());
        EXPECT(0xd645, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xd644));
        // 0C 0229
        gbc.setState(0xb5fd, 0x6b82, 0x7470, 0x23fd, 0x503f, 0x7c6, 0x1, 0x0);
        gbc.writeMem(0xb5fd, { 0xc });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x6b82, gbc.sp());
        EXPECT(0xb5fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xb5fd));
        // 0C 022A
        gbc.setState(0xe5b8, 0x58f3, 0xf8a0, 0x459, 0x12e7, 0x9633, 0x1, 0x1);
        gbc.writeMem(0xe5b8, { 0xc });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x58f3, gbc.sp());
        EXPECT(0xe5b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xe5b8));
        // 0C 022B
        gbc.setState(0xe7c9, 0xab68, 0x74b0, 0x661a, 0x58bc, 0x8fc4, 0x1, 0x1);
        gbc.writeMem(0xe7c9, { 0xc });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xab68, gbc.sp());
        EXPECT(0xe7ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xe7c9));
        // 0C 022C
        gbc.setState(0x18ac, 0xb456, 0x6130, 0xfddf, 0x9dad, 0x3066, 0x0, 0x0);
        gbc.writeMem(0x18ac, { 0xc });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xb456, gbc.sp());
        EXPECT(0x18ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 022D
        gbc.setState(0xe49c, 0x157d, 0xc00, 0xebd5, 0x2209, 0x86c9, 0x1, 0x1);
        gbc.writeMem(0xe49c, { 0xc });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x157d, gbc.sp());
        EXPECT(0xe49d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xe49c));
        // 0C 022E
        gbc.setState(0x5ec6, 0x1ed8, 0x6590, 0x75cc, 0x9b37, 0xe371, 0x1, 0x0);
        gbc.writeMem(0x5ec6, { 0xc });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x1ed8, gbc.sp());
        EXPECT(0x5ec7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 022F
        gbc.setState(0x13cd, 0x87e5, 0xd7b0, 0xba01, 0x9a90, 0x2644, 0x1, 0x1);
        gbc.writeMem(0x13cd, { 0xc });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x87e5, gbc.sp());
        EXPECT(0x13ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0231
        gbc.setState(0x940a, 0x6f19, 0x64b0, 0xc385, 0xf439, 0x98e3, 0x0, 0x0);
        gbc.writeMem(0x940a, { 0xc });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x6f19, gbc.sp());
        EXPECT(0x940b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x940a));
        // 0C 0232
        gbc.setState(0x693b, 0x7cc, 0x4560, 0x3415, 0x5fd5, 0x5e82, 0x0, 0x0);
        gbc.writeMem(0x693b, { 0xc });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x7cc, gbc.sp());
        EXPECT(0x693c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 0233
        gbc.setState(0xd059, 0xa6df, 0xc110, 0xcd22, 0xc90f, 0xd8c0, 0x0, 0x0);
        gbc.writeMem(0xd059, { 0xc });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xa6df, gbc.sp());
        EXPECT(0xd05a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xd059));
        // 0C 0234
        gbc.setState(0xa351, 0x170a, 0x59b0, 0xa8a9, 0xe38, 0x4932, 0x1, 0x1);
        gbc.writeMem(0xa351, { 0xc });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x170a, gbc.sp());
        EXPECT(0xa352, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xa351));
        // 0C 0235
        gbc.setState(0x1887, 0x1ea7, 0x3390, 0x2876, 0x8461, 0x8f1, 0x1, 0x0);
        gbc.writeMem(0x1887, { 0xc });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x1ea7, gbc.sp());
        EXPECT(0x1888, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0236
        gbc.setState(0xeef5, 0x57ae, 0x3440, 0xd52e, 0xd08a, 0xd299, 0x0, 0x0);
        gbc.writeMem(0xeef5, { 0xc });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x57ae, gbc.sp());
        EXPECT(0xeef6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xeef5));
        // 0C 0238
        gbc.setState(0xc679, 0x4229, 0x9260, 0xcd73, 0xa203, 0x244a, 0x1, 0x0);
        gbc.writeMem(0xc679, { 0xc });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x4229, gbc.sp());
        EXPECT(0xc67a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xc679));
        // 0C 0239
        gbc.setState(0xd667, 0xf44c, 0xe130, 0x4cf7, 0xe13a, 0x24cb, 0x1, 0x0);
        gbc.writeMem(0xd667, { 0xc });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xf44c, gbc.sp());
        EXPECT(0xd668, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xd667));
        // 0C 023A
        gbc.setState(0x3258, 0xdb36, 0xcc90, 0xe4f0, 0x4ef, 0xd0bf, 0x0, 0x0);
        gbc.writeMem(0x3258, { 0xc });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xdb36, gbc.sp());
        EXPECT(0x3259, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 023B
        gbc.setState(0x88b6, 0x3a96, 0x7af0, 0x42a0, 0x6c40, 0x2f68, 0x1, 0x0);
        gbc.writeMem(0x88b6, { 0xc });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x3a96, gbc.sp());
        EXPECT(0x88b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x88b6));
        // 0C 023C
        gbc.setState(0x710b, 0xdca3, 0xaa10, 0x44bb, 0x195a, 0xe114, 0x1, 0x1);
        gbc.writeMem(0x710b, { 0xc });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xdca3, gbc.sp());
        EXPECT(0x710c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 023E
        gbc.setState(0x3ebf, 0x9586, 0xe3c0, 0x6310, 0x7cc6, 0xb4a, 0x0, 0x1);
        gbc.writeMem(0x3ebf, { 0xc });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x9586, gbc.sp());
        EXPECT(0x3ec0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 023F
        gbc.setState(0x5afb, 0x2dcc, 0x4f00, 0x141e, 0x887e, 0x501f, 0x1, 0x0);
        gbc.writeMem(0x5afb, { 0xc });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x2dcc, gbc.sp());
        EXPECT(0x5afc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 0240
        gbc.setState(0xcb2, 0xe555, 0xfb30, 0xeca5, 0x5836, 0x371a, 0x0, 0x1);
        gbc.writeMem(0xcb2, { 0xc });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xe555, gbc.sp());
        EXPECT(0xcb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0241
        gbc.setState(0x7f7d, 0x8800, 0xa960, 0xe707, 0x3753, 0x6726, 0x1, 0x1);
        gbc.writeMem(0x7f7d, { 0xc });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x8800, gbc.sp());
        EXPECT(0x7f7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 0242
        gbc.setState(0x50c, 0xc835, 0xc110, 0x7ecc, 0x621d, 0x1538, 0x0, 0x1);
        gbc.writeMem(0x50c, { 0xc });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xc835, gbc.sp());
        EXPECT(0x50d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0243
        gbc.setState(0x15a5, 0x4ba, 0x30e0, 0x1e20, 0xb955, 0xaf81, 0x0, 0x1);
        gbc.writeMem(0x15a5, { 0xc });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x4ba, gbc.sp());
        EXPECT(0x15a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 0244
        gbc.setState(0x3fb, 0x44c3, 0xddc0, 0x97ee, 0x7e92, 0x9214, 0x1, 0x0);
        gbc.writeMem(0x3fb, { 0xc });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x44c3, gbc.sp());
        EXPECT(0x3fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 0245
        gbc.setState(0x4599, 0x19fc, 0x42f0, 0x1136, 0xba4f, 0x5077, 0x0, 0x1);
        gbc.writeMem(0x4599, { 0xc });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x19fc, gbc.sp());
        EXPECT(0x459a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0246
        gbc.setState(0x8142, 0xb222, 0x7fd0, 0x8fca, 0xaa28, 0xb791, 0x1, 0x1);
        gbc.writeMem(0x8142, { 0xc });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xb222, gbc.sp());
        EXPECT(0x8143, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x8142));
        // 0C 0247
        gbc.setState(0xb58, 0xe2e, 0x9ae0, 0x800a, 0x7dbb, 0x7ec3, 0x0, 0x0);
        gbc.writeMem(0xb58, { 0xc });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xe2e, gbc.sp());
        EXPECT(0xb59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 0248
        gbc.setState(0xdc9a, 0xc77, 0x7ee0, 0xdc3a, 0x5302, 0x2100, 0x1, 0x1);
        gbc.writeMem(0xdc9a, { 0xc });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xc77, gbc.sp());
        EXPECT(0xdc9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xdc9a));
        // 0C 0249
        gbc.setState(0xc40b, 0x41f0, 0x5be0, 0x9edc, 0x6dbc, 0x898, 0x1, 0x1);
        gbc.writeMem(0xc40b, { 0xc });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x41f0, gbc.sp());
        EXPECT(0xc40c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xc40b));
        // 0C 024A
        gbc.setState(0xd275, 0x9066, 0x4f40, 0xe986, 0x5e5e, 0xc4da, 0x0, 0x1);
        gbc.writeMem(0xd275, { 0xc });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x9066, gbc.sp());
        EXPECT(0xd276, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xd275));
        // 0C 024B
        gbc.setState(0x1087, 0x33f9, 0x3420, 0x5f60, 0x2d1b, 0x53ad, 0x0, 0x0);
        gbc.writeMem(0x1087, { 0xc });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x33f9, gbc.sp());
        EXPECT(0x1088, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 024C
        gbc.setState(0xb860, 0xa81c, 0xd160, 0x2b88, 0xbcef, 0x4800, 0x0, 0x0);
        gbc.writeMem(0xb860, { 0xc });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xa81c, gbc.sp());
        EXPECT(0xb861, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xb860));
        // 0C 024D
        gbc.setState(0x7168, 0x5124, 0xc670, 0xb28, 0x84c3, 0xd097, 0x0, 0x0);
        gbc.writeMem(0x7168, { 0xc });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x5124, gbc.sp());
        EXPECT(0x7169, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 024F
        gbc.setState(0x7587, 0x2222, 0xf310, 0x33d7, 0x42f0, 0x5688, 0x0, 0x0);
        gbc.writeMem(0x7587, { 0xc });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x2222, gbc.sp());
        EXPECT(0x7588, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0250
        gbc.setState(0xaa22, 0x4607, 0x3a80, 0x537, 0x284a, 0xa103, 0x0, 0x0);
        gbc.writeMem(0xaa22, { 0xc });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x4607, gbc.sp());
        EXPECT(0xaa23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xaa22));
        // 0C 0251
        gbc.setState(0xc08a, 0xc663, 0x4290, 0x3a1f, 0x8cf4, 0xa5bd, 0x0, 0x0);
        gbc.writeMem(0xc08a, { 0xc });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xc663, gbc.sp());
        EXPECT(0xc08b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xc08a));
        // 0C 0252
        gbc.setState(0x633d, 0xcfd2, 0x5b0, 0x6626, 0x9938, 0x5ef1, 0x0, 0x1);
        gbc.writeMem(0x633d, { 0xc });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xcfd2, gbc.sp());
        EXPECT(0x633e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0253
        gbc.setState(0xa842, 0x6485, 0x6290, 0x5ab8, 0x1f9d, 0x3a1d, 0x0, 0x0);
        gbc.writeMem(0xa842, { 0xc });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x6485, gbc.sp());
        EXPECT(0xa843, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xa842));
        // 0C 0254
        gbc.setState(0xea80, 0xb5d3, 0x52d0, 0xac90, 0xf798, 0xd0ec, 0x0, 0x0);
        gbc.writeMem(0xea80, { 0xc });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xb5d3, gbc.sp());
        EXPECT(0xea81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xea80));
        // 0C 0255
        gbc.setState(0x8326, 0x5483, 0xe140, 0x2225, 0xaa6a, 0xac3c, 0x1, 0x1);
        gbc.writeMem(0x8326, { 0xc });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x5483, gbc.sp());
        EXPECT(0x8327, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x8326));
        // 0C 0256
        gbc.setState(0x887e, 0xe6ab, 0xd880, 0xc532, 0xce8d, 0x1813, 0x1, 0x0);
        gbc.writeMem(0x887e, { 0xc });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xe6ab, gbc.sp());
        EXPECT(0x887f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x887e));
        // 0C 0257
        gbc.setState(0xc7d7, 0xd72, 0x81d0, 0xaef6, 0x5742, 0xfc15, 0x1, 0x1);
        gbc.writeMem(0xc7d7, { 0xc });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xd72, gbc.sp());
        EXPECT(0xc7d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xc7d7));
        // 0C 0258
        gbc.setState(0xccf8, 0xa5cf, 0x2210, 0x4ded, 0x5cf2, 0xe92d, 0x0, 0x1);
        gbc.writeMem(0xccf8, { 0xc });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xa5cf, gbc.sp());
        EXPECT(0xccf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xccf8));
        // 0C 0259
        gbc.setState(0x7265, 0x1305, 0xa550, 0xc4c4, 0xf675, 0x9c49, 0x1, 0x0);
        gbc.writeMem(0x7265, { 0xc });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x1305, gbc.sp());
        EXPECT(0x7266, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 025A
        gbc.setState(0xcf9a, 0x2ba, 0x8290, 0x3360, 0xf401, 0xa6c, 0x1, 0x0);
        gbc.writeMem(0xcf9a, { 0xc });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x2ba, gbc.sp());
        EXPECT(0xcf9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xcf9a));
        // 0C 025B
        gbc.setState(0xce21, 0x640a, 0xc580, 0x9074, 0x6eb, 0x93fd, 0x1, 0x1);
        gbc.writeMem(0xce21, { 0xc });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x640a, gbc.sp());
        EXPECT(0xce22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xce21));
        // 0C 025C
        gbc.setState(0x6fd5, 0x8e5, 0xad50, 0xef07, 0x9343, 0x68d0, 0x0, 0x0);
        gbc.writeMem(0x6fd5, { 0xc });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x8e5, gbc.sp());
        EXPECT(0x6fd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 025D
        gbc.setState(0xa0a4, 0xaceb, 0xac10, 0x9b20, 0x30e4, 0x87e4, 0x1, 0x1);
        gbc.writeMem(0xa0a4, { 0xc });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xaceb, gbc.sp());
        EXPECT(0xa0a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xa0a4));
        // 0C 025E
        gbc.setState(0x1c2d, 0x8e8c, 0xa910, 0x668d, 0xc66e, 0xceb2, 0x0, 0x1);
        gbc.writeMem(0x1c2d, { 0xc });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x8e8c, gbc.sp());
        EXPECT(0x1c2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 025F
        gbc.setState(0xb6e0, 0x5742, 0x65c0, 0x1156, 0x3c73, 0xcbc7, 0x0, 0x1);
        gbc.writeMem(0xb6e0, { 0xc });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x5742, gbc.sp());
        EXPECT(0xb6e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xb6e0));
        // 0C 0260
        gbc.setState(0x7885, 0xd419, 0x5c30, 0x656a, 0x874d, 0x3e38, 0x0, 0x0);
        gbc.writeMem(0x7885, { 0xc });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xd419, gbc.sp());
        EXPECT(0x7886, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0261
        gbc.setState(0x7749, 0x5b21, 0x5720, 0x25f8, 0x339b, 0xec10, 0x1, 0x1);
        gbc.writeMem(0x7749, { 0xc });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x5b21, gbc.sp());
        EXPECT(0x774a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 0262
        gbc.setState(0xc92f, 0x98d8, 0x9480, 0xd6bf, 0x5141, 0x80e1, 0x0, 0x0);
        gbc.writeMem(0xc92f, { 0xc });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x98d8, gbc.sp());
        EXPECT(0xc930, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xc92f));
        // 0C 0263
        gbc.setState(0x7813, 0x335d, 0x2130, 0x7695, 0xa817, 0xcaad, 0x1, 0x0);
        gbc.writeMem(0x7813, { 0xc });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x335d, gbc.sp());
        EXPECT(0x7814, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0264
        gbc.setState(0x6250, 0xb8b7, 0xd810, 0x0, 0x9f9b, 0x7acf, 0x1, 0x0);
        gbc.writeMem(0x6250, { 0xc });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xb8b7, gbc.sp());
        EXPECT(0x6251, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0265
        gbc.setState(0x572, 0xf124, 0x7fb0, 0x5709, 0xb178, 0x1f82, 0x0, 0x1);
        gbc.writeMem(0x572, { 0xc });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xf124, gbc.sp());
        EXPECT(0x573, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0266
        gbc.setState(0xe0f9, 0xa934, 0x6af0, 0x6b2b, 0x59c2, 0x5af9, 0x1, 0x1);
        gbc.writeMem(0xe0f9, { 0xc });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xa934, gbc.sp());
        EXPECT(0xe0fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xe0f9));
        // 0C 0267
        gbc.setState(0xebe1, 0xa039, 0x5d60, 0x7499, 0xf5d5, 0x99ad, 0x1, 0x0);
        gbc.writeMem(0xebe1, { 0xc });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xa039, gbc.sp());
        EXPECT(0xebe2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xebe1));
        // 0C 0268
        gbc.setState(0xcbb1, 0xd9e4, 0xb690, 0x1f7a, 0x87dd, 0x11f7, 0x1, 0x0);
        gbc.writeMem(0xcbb1, { 0xc });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xd9e4, gbc.sp());
        EXPECT(0xcbb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xcbb1));
        // 0C 0269
        gbc.setState(0xe5ea, 0x99e7, 0xdbc0, 0x8466, 0x6465, 0x517d, 0x0, 0x1);
        gbc.writeMem(0xe5ea, { 0xc });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x99e7, gbc.sp());
        EXPECT(0xe5eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xe5ea));
        // 0C 026A
        gbc.setState(0x6156, 0x17eb, 0x410, 0xd95f, 0xeead, 0xb5a4, 0x0, 0x0);
        gbc.writeMem(0x6156, { 0xc });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x17eb, gbc.sp());
        EXPECT(0x6157, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 026B
        gbc.setState(0xb95c, 0x8d5a, 0x4de0, 0x781e, 0xeb45, 0x6129, 0x1, 0x0);
        gbc.writeMem(0xb95c, { 0xc });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x8d5a, gbc.sp());
        EXPECT(0xb95d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xb95c));
        // 0C 026C
        gbc.setState(0x44ef, 0x6859, 0x54f0, 0x7f0f, 0x4f31, 0xd0df, 0x1, 0x0);
        gbc.writeMem(0x44ef, { 0xc });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x6859, gbc.sp());
        EXPECT(0x44f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 026D
        gbc.setState(0xd62, 0x8f30, 0xce70, 0x5b22, 0x4872, 0x133d, 0x1, 0x1);
        gbc.writeMem(0xd62, { 0xc });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x8f30, gbc.sp());
        EXPECT(0xd63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 026E
        gbc.setState(0xbead, 0xa6b8, 0xc710, 0xf709, 0x668a, 0x17da, 0x1, 0x0);
        gbc.writeMem(0xbead, { 0xc });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xa6b8, gbc.sp());
        EXPECT(0xbeae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xbead));
        // 0C 026F
        gbc.setState(0xa771, 0xc380, 0xdc50, 0xe07, 0xcbef, 0xa93c, 0x0, 0x0);
        gbc.writeMem(0xa771, { 0xc });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xc380, gbc.sp());
        EXPECT(0xa772, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xa771));
        // 0C 0270
        gbc.setState(0xb6d5, 0xb831, 0xfe30, 0x741e, 0x1cb2, 0xdb0f, 0x0, 0x1);
        gbc.writeMem(0xb6d5, { 0xc });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xb831, gbc.sp());
        EXPECT(0xb6d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xb6d5));
        // 0C 0271
        gbc.setState(0xb8ff, 0x5363, 0xc90, 0x3b64, 0xbd9f, 0x2bae, 0x1, 0x1);
        gbc.writeMem(0xb8ff, { 0xc });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x5363, gbc.sp());
        EXPECT(0xb900, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xb8ff));
        // 0C 0272
        gbc.setState(0x964, 0xeaf8, 0x2cc0, 0x6e28, 0x5d0b, 0x8024, 0x0, 0x0);
        gbc.writeMem(0x964, { 0xc });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xeaf8, gbc.sp());
        EXPECT(0x965, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 0273
        gbc.setState(0x812a, 0xd9c3, 0x3a60, 0x5fb, 0xfbda, 0xd2be, 0x0, 0x1);
        gbc.writeMem(0x812a, { 0xc });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xd9c3, gbc.sp());
        EXPECT(0x812b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x812a));
        // 0C 0274
        gbc.setState(0xdbc5, 0x8425, 0xf700, 0x371, 0x96d8, 0xb167, 0x1, 0x1);
        gbc.writeMem(0xdbc5, { 0xc });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x8425, gbc.sp());
        EXPECT(0xdbc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xdbc5));
        // 0C 0275
        gbc.setState(0x3e28, 0xe814, 0x34e0, 0xb668, 0x2990, 0x4d0a, 0x1, 0x1);
        gbc.writeMem(0x3e28, { 0xc });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xe814, gbc.sp());
        EXPECT(0x3e29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 0276
        gbc.setState(0x63bc, 0xe19c, 0x2d10, 0xcd06, 0x3f29, 0xa863, 0x0, 0x0);
        gbc.writeMem(0x63bc, { 0xc });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xe19c, gbc.sp());
        EXPECT(0x63bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0278
        gbc.setState(0xad0b, 0x4fe4, 0x2740, 0x7d94, 0xe53d, 0xb1a8, 0x0, 0x1);
        gbc.writeMem(0xad0b, { 0xc });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x4fe4, gbc.sp());
        EXPECT(0xad0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xad0b));
        // 0C 0279
        gbc.setState(0x6474, 0xd82, 0xc4a0, 0x390c, 0x854b, 0xfc97, 0x0, 0x0);
        gbc.writeMem(0x6474, { 0xc });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xd82, gbc.sp());
        EXPECT(0x6475, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 027A
        gbc.setState(0x4850, 0xcc67, 0x9a70, 0x2d7e, 0x5ac0, 0x1944, 0x0, 0x1);
        gbc.writeMem(0x4850, { 0xc });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xcc67, gbc.sp());
        EXPECT(0x4851, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 027B
        gbc.setState(0x4588, 0x5dbb, 0x8300, 0x807f, 0xa902, 0xda1f, 0x0, 0x0);
        gbc.writeMem(0x4588, { 0xc });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x5dbb, gbc.sp());
        EXPECT(0x4589, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 027C
        gbc.setState(0x3e35, 0xbdeb, 0x2d0, 0x6ce4, 0x741d, 0x97d0, 0x0, 0x0);
        gbc.writeMem(0x3e35, { 0xc });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xbdeb, gbc.sp());
        EXPECT(0x3e36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 027D
        gbc.setState(0x9a24, 0xa19c, 0x1660, 0x3996, 0xd3cc, 0xe3e9, 0x0, 0x1);
        gbc.writeMem(0x9a24, { 0xc });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xa19c, gbc.sp());
        EXPECT(0x9a25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x9a24));
        // 0C 027E
        gbc.setState(0x236a, 0xbbc1, 0x1010, 0xa142, 0x663a, 0x43e3, 0x1, 0x0);
        gbc.writeMem(0x236a, { 0xc });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xbbc1, gbc.sp());
        EXPECT(0x236b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 027F
        gbc.setState(0x8740, 0x6a16, 0x80b0, 0x15cf, 0x5ec8, 0x2d75, 0x1, 0x1);
        gbc.writeMem(0x8740, { 0xc });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x6a16, gbc.sp());
        EXPECT(0x8741, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x8740));
        // 0C 0280
        gbc.setState(0x12d0, 0x66da, 0x9780, 0x99b, 0xcebe, 0xae9, 0x1, 0x0);
        gbc.writeMem(0x12d0, { 0xc });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x66da, gbc.sp());
        EXPECT(0x12d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 0281
        gbc.setState(0xab06, 0xfe97, 0x56a0, 0x7ead, 0x6b82, 0x91e4, 0x0, 0x1);
        gbc.writeMem(0xab06, { 0xc });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xfe97, gbc.sp());
        EXPECT(0xab07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xab06));
        // 0C 0282
        gbc.setState(0x59c0, 0xe449, 0xfc00, 0x341e, 0x2f2c, 0xe52d, 0x0, 0x1);
        gbc.writeMem(0x59c0, { 0xc });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xe449, gbc.sp());
        EXPECT(0x59c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 0283
        gbc.setState(0xaa56, 0x3c9b, 0x9710, 0x3778, 0x6c4f, 0x60d, 0x1, 0x0);
        gbc.writeMem(0xaa56, { 0xc });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x3c9b, gbc.sp());
        EXPECT(0xaa57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xaa56));
        // 0C 0284
        gbc.setState(0xa2e1, 0x250e, 0x92c0, 0x705e, 0xcc1e, 0x70, 0x1, 0x0);
        gbc.writeMem(0xa2e1, { 0xc });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x250e, gbc.sp());
        EXPECT(0xa2e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xa2e1));
        // 0C 0285
        gbc.setState(0x2675, 0x774b, 0xc770, 0xddbe, 0x4679, 0xd427, 0x1, 0x1);
        gbc.writeMem(0x2675, { 0xc });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x774b, gbc.sp());
        EXPECT(0x2676, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0286
        gbc.setState(0x2976, 0x2206, 0x6b90, 0x6f3e, 0xf7d1, 0xdf6, 0x0, 0x1);
        gbc.writeMem(0x2976, { 0xc });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x2206, gbc.sp());
        EXPECT(0x2977, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0287
        gbc.setState(0xb73a, 0xd229, 0x6f20, 0x2c40, 0xc2fa, 0x771e, 0x1, 0x1);
        gbc.writeMem(0xb73a, { 0xc });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xd229, gbc.sp());
        EXPECT(0xb73b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xb73a));
        // 0C 0288
        gbc.setState(0x2827, 0x448b, 0x3ca0, 0x3561, 0xa8b3, 0x93f5, 0x0, 0x1);
        gbc.writeMem(0x2827, { 0xc });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x448b, gbc.sp());
        EXPECT(0x2828, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 0289
        gbc.setState(0x98db, 0x5288, 0x9ee0, 0x9901, 0xc69e, 0xd753, 0x1, 0x0);
        gbc.writeMem(0x98db, { 0xc });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x5288, gbc.sp());
        EXPECT(0x98dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x98db));
        // 0C 028A
        gbc.setState(0x7b9f, 0x284d, 0xed60, 0xa8a3, 0xdaaa, 0x7e51, 0x1, 0x0);
        gbc.writeMem(0x7b9f, { 0xc });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x284d, gbc.sp());
        EXPECT(0x7ba0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 028B
        gbc.setState(0x1225, 0xbb1c, 0x7b00, 0x7c8e, 0xd0b4, 0x2c50, 0x1, 0x0);
        gbc.writeMem(0x1225, { 0xc });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xbb1c, gbc.sp());
        EXPECT(0x1226, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 028C
        gbc.setState(0x8572, 0x3e55, 0x27d0, 0x7d7b, 0xcfdf, 0x88c1, 0x1, 0x1);
        gbc.writeMem(0x8572, { 0xc });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x3e55, gbc.sp());
        EXPECT(0x8573, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x8572));
        // 0C 028D
        gbc.setState(0xd589, 0x173c, 0xa4f0, 0x7040, 0xd67e, 0x33a0, 0x1, 0x0);
        gbc.writeMem(0xd589, { 0xc });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x173c, gbc.sp());
        EXPECT(0xd58a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xd589));
        // 0C 028E
        gbc.setState(0x2946, 0xb56, 0x5070, 0xcf63, 0x611c, 0xe37d, 0x1, 0x0);
        gbc.writeMem(0x2946, { 0xc });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xb56, gbc.sp());
        EXPECT(0x2947, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 028F
        gbc.setState(0x1945, 0x191c, 0x8ed0, 0xb9d4, 0x4aa2, 0x864a, 0x1, 0x1);
        gbc.writeMem(0x1945, { 0xc });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x191c, gbc.sp());
        EXPECT(0x1946, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0290
        gbc.setState(0xda3e, 0x88d7, 0xca00, 0x27f2, 0x2e9d, 0x6a90, 0x1, 0x0);
        gbc.writeMem(0xda3e, { 0xc });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x88d7, gbc.sp());
        EXPECT(0xda3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xda3e));
        // 0C 0291
        gbc.setState(0x489d, 0x1a4f, 0xdd60, 0xf218, 0x6ee1, 0x7331, 0x1, 0x1);
        gbc.writeMem(0x489d, { 0xc });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x1a4f, gbc.sp());
        EXPECT(0x489e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 0292
        gbc.setState(0x27dd, 0xf89, 0x6c80, 0xc56d, 0xbe2, 0xa05d, 0x1, 0x0);
        gbc.writeMem(0x27dd, { 0xc });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xf89, gbc.sp());
        EXPECT(0x27de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 0293
        gbc.setState(0xd1a7, 0x70ef, 0xd2f0, 0x4728, 0xf83e, 0x6ff8, 0x0, 0x0);
        gbc.writeMem(0xd1a7, { 0xc });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x70ef, gbc.sp());
        EXPECT(0xd1a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xd1a7));
        // 0C 0294
        gbc.setState(0x6155, 0x91d8, 0x10f0, 0xb219, 0xd6dd, 0x3aa0, 0x1, 0x0);
        gbc.writeMem(0x6155, { 0xc });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x91d8, gbc.sp());
        EXPECT(0x6156, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0296
        gbc.setState(0xbbee, 0x6f6a, 0xf320, 0x97a6, 0xf6e4, 0xd34b, 0x0, 0x1);
        gbc.writeMem(0xbbee, { 0xc });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x6f6a, gbc.sp());
        EXPECT(0xbbef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xbbee));
        // 0C 0297
        gbc.setState(0x1c38, 0xb7c6, 0x70b0, 0x58ae, 0x2f8a, 0x369d, 0x0, 0x0);
        gbc.writeMem(0x1c38, { 0xc });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xb7c6, gbc.sp());
        EXPECT(0x1c39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0298
        gbc.setState(0xba80, 0x9986, 0xa310, 0x43b6, 0x6129, 0x271d, 0x1, 0x0);
        gbc.writeMem(0xba80, { 0xc });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x9986, gbc.sp());
        EXPECT(0xba81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xba80));
        // 0C 0299
        gbc.setState(0xc0e3, 0xa8a1, 0x5910, 0xe47a, 0xd4b5, 0x6ba5, 0x0, 0x1);
        gbc.writeMem(0xc0e3, { 0xc });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xa8a1, gbc.sp());
        EXPECT(0xc0e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xc0e3));
        // 0C 029A
        gbc.setState(0x4a39, 0xdd93, 0x8b20, 0xf38c, 0xab41, 0x79e3, 0x0, 0x1);
        gbc.writeMem(0x4a39, { 0xc });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xdd93, gbc.sp());
        EXPECT(0x4a3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 029B
        gbc.setState(0x14ef, 0x5dbd, 0x72d0, 0x9498, 0x3296, 0xeeb, 0x1, 0x0);
        gbc.writeMem(0x14ef, { 0xc });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x5dbd, gbc.sp());
        EXPECT(0x14f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 029D
        gbc.setState(0x4ef5, 0xccc, 0xbd80, 0x3abc, 0x3a46, 0x9f37, 0x0, 0x1);
        gbc.writeMem(0x4ef5, { 0xc });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xccc, gbc.sp());
        EXPECT(0x4ef6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 029E
        gbc.setState(0x61ac, 0x1b62, 0x4e80, 0x5013, 0x7807, 0xfbeb, 0x0, 0x0);
        gbc.writeMem(0x61ac, { 0xc });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x1b62, gbc.sp());
        EXPECT(0x61ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 029F
        gbc.setState(0x460b, 0x2127, 0xd9b0, 0xf46, 0x76f0, 0xa0e7, 0x0, 0x0);
        gbc.writeMem(0x460b, { 0xc });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x2127, gbc.sp());
        EXPECT(0x460c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 02A0
        gbc.setState(0xd154, 0xd13e, 0xbd20, 0x5789, 0x1c2, 0xdca5, 0x0, 0x1);
        gbc.writeMem(0xd154, { 0xc });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xd13e, gbc.sp());
        EXPECT(0xd155, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xd154));
        // 0C 02A1
        gbc.setState(0x2e27, 0x53d3, 0xb910, 0xa936, 0x246e, 0xdf1e, 0x0, 0x1);
        gbc.writeMem(0x2e27, { 0xc });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x53d3, gbc.sp());
        EXPECT(0x2e28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 02A2
        gbc.setState(0x4cc3, 0x7827, 0xe550, 0xca2f, 0xd4b6, 0x41be, 0x1, 0x0);
        gbc.writeMem(0x4cc3, { 0xc });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x7827, gbc.sp());
        EXPECT(0x4cc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 02A3
        gbc.setState(0xbdf5, 0x92c4, 0x7de0, 0xed8f, 0xd6c0, 0xd068, 0x0, 0x0);
        gbc.writeMem(0xbdf5, { 0xc });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x92c4, gbc.sp());
        EXPECT(0xbdf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xbdf5));
        // 0C 02A4
        gbc.setState(0x3ff6, 0xa15c, 0xfbf0, 0x2e53, 0x4bc4, 0xf693, 0x0, 0x0);
        gbc.writeMem(0x3ff6, { 0xc });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xa15c, gbc.sp());
        EXPECT(0x3ff7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 02A5
        gbc.setState(0x800a, 0x5e99, 0x7000, 0x2fa3, 0xad90, 0xb8d8, 0x1, 0x0);
        gbc.writeMem(0x800a, { 0xc });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x5e99, gbc.sp());
        EXPECT(0x800b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x800a));
        // 0C 02A6
        gbc.setState(0x92b8, 0xc94c, 0xdc80, 0xcedc, 0x5b90, 0x5bf5, 0x0, 0x1);
        gbc.writeMem(0x92b8, { 0xc });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xc94c, gbc.sp());
        EXPECT(0x92b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x92b8));
        // 0C 02A7
        gbc.setState(0xc462, 0x7b5, 0xcde0, 0x320e, 0x3428, 0x8c5b, 0x0, 0x1);
        gbc.writeMem(0xc462, { 0xc });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x7b5, gbc.sp());
        EXPECT(0xc463, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xc462));
        // 0C 02A8
        gbc.setState(0x313f, 0x4e0, 0x3640, 0x4d48, 0x6d6e, 0xc753, 0x0, 0x1);
        gbc.writeMem(0x313f, { 0xc });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x4e0, gbc.sp());
        EXPECT(0x3140, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 02AA
        gbc.setState(0x719f, 0x5b65, 0x8190, 0x1348, 0xf01d, 0x70c8, 0x0, 0x1);
        gbc.writeMem(0x719f, { 0xc });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x5b65, gbc.sp());
        EXPECT(0x71a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 02AB
        gbc.setState(0xb1f2, 0x6f5e, 0x8c30, 0x8574, 0xcac2, 0x3ee2, 0x1, 0x1);
        gbc.writeMem(0xb1f2, { 0xc });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x6f5e, gbc.sp());
        EXPECT(0xb1f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xb1f2));
        // 0C 02AC
        gbc.setState(0x166a, 0xa24d, 0xb840, 0x8778, 0x4c1c, 0x6def, 0x1, 0x1);
        gbc.writeMem(0x166a, { 0xc });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xa24d, gbc.sp());
        EXPECT(0x166b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 02AD
        gbc.setState(0xc030, 0x492b, 0x95e0, 0xd40e, 0x90ec, 0x4d6a, 0x1, 0x1);
        gbc.writeMem(0xc030, { 0xc });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x492b, gbc.sp());
        EXPECT(0xc031, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xc030));
        // 0C 02AE
        gbc.setState(0xc92, 0x3170, 0x14b0, 0xe846, 0x3ee9, 0xe39c, 0x0, 0x1);
        gbc.writeMem(0xc92, { 0xc });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x3170, gbc.sp());
        EXPECT(0xc93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 02AF
        gbc.setState(0x465e, 0xbd1, 0x8c60, 0x324, 0x3f58, 0xa5be, 0x1, 0x1);
        gbc.writeMem(0x465e, { 0xc });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xbd1, gbc.sp());
        EXPECT(0x465f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 02B0
        gbc.setState(0xd7e2, 0x2aff, 0x4bc0, 0x5390, 0xe4c6, 0x1072, 0x1, 0x0);
        gbc.writeMem(0xd7e2, { 0xc });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x2aff, gbc.sp());
        EXPECT(0xd7e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xd7e2));
        // 0C 02B1
        gbc.setState(0x58b9, 0xe7d6, 0xaa30, 0x26ee, 0x4803, 0xfd13, 0x0, 0x0);
        gbc.writeMem(0x58b9, { 0xc });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xe7d6, gbc.sp());
        EXPECT(0x58ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 02B2
        gbc.setState(0x89bc, 0x1fff, 0x3190, 0xb78f, 0x68bd, 0x5120, 0x1, 0x1);
        gbc.writeMem(0x89bc, { 0xc });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x1fff, gbc.sp());
        EXPECT(0x89bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x89bc));
        // 0C 02B3
        gbc.setState(0xbd2b, 0x8cc1, 0x28f0, 0x4cf9, 0xa8d6, 0x1c7d, 0x1, 0x1);
        gbc.writeMem(0xbd2b, { 0xc });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x8cc1, gbc.sp());
        EXPECT(0xbd2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xbd2b));
        // 0C 02B4
        gbc.setState(0xaa25, 0xa4ed, 0xb1a0, 0xa1cd, 0xe353, 0x76b9, 0x0, 0x1);
        gbc.writeMem(0xaa25, { 0xc });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xa4ed, gbc.sp());
        EXPECT(0xaa26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xaa25));
        // 0C 02B5
        gbc.setState(0xaca4, 0x3cb8, 0xa490, 0x7aaa, 0xf55c, 0x627b, 0x1, 0x1);
        gbc.writeMem(0xaca4, { 0xc });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x3cb8, gbc.sp());
        EXPECT(0xaca5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xaca4));
        // 0C 02B6
        gbc.setState(0x5c1d, 0xd6af, 0xb670, 0x8521, 0xf24e, 0x7f1f, 0x0, 0x0);
        gbc.writeMem(0x5c1d, { 0xc });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xd6af, gbc.sp());
        EXPECT(0x5c1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 02B7
        gbc.setState(0x3361, 0xf84b, 0xfae0, 0x42d6, 0xb7c7, 0x4db2, 0x1, 0x0);
        gbc.writeMem(0x3361, { 0xc });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xf84b, gbc.sp());
        EXPECT(0x3362, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 02B8
        gbc.setState(0x922a, 0xbf5a, 0xf6c0, 0x6269, 0x5910, 0x3a60, 0x0, 0x1);
        gbc.writeMem(0x922a, { 0xc });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xbf5a, gbc.sp());
        EXPECT(0x922b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x922a));
        // 0C 02B9
        gbc.setState(0x50c4, 0xc1b3, 0x58b0, 0xa955, 0xd80f, 0xff1c, 0x1, 0x1);
        gbc.writeMem(0x50c4, { 0xc });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xc1b3, gbc.sp());
        EXPECT(0x50c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 02BA
        gbc.setState(0xe1b1, 0x567c, 0x9ce0, 0x95a2, 0xa91c, 0x8ec0, 0x0, 0x0);
        gbc.writeMem(0xe1b1, { 0xc });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x567c, gbc.sp());
        EXPECT(0xe1b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xe1b1));
        // 0C 02BB
        gbc.setState(0xae7c, 0x1a4, 0xfe90, 0xf455, 0xddf6, 0x60a4, 0x0, 0x1);
        gbc.writeMem(0xae7c, { 0xc });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x1a4, gbc.sp());
        EXPECT(0xae7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xae7c));
        // 0C 02BC
        gbc.setState(0xcc9c, 0xc2bc, 0xe010, 0xe3b5, 0x492c, 0xa62f, 0x1, 0x1);
        gbc.writeMem(0xcc9c, { 0xc });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xc2bc, gbc.sp());
        EXPECT(0xcc9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xcc9c));
        // 0C 02BE
        gbc.setState(0x31b2, 0xecef, 0x5710, 0x8cb0, 0x8a36, 0x94ed, 0x0, 0x1);
        gbc.writeMem(0x31b2, { 0xc });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xecef, gbc.sp());
        EXPECT(0x31b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 02BF
        gbc.setState(0x1fec, 0x3e21, 0xe680, 0x39e, 0xdeef, 0xb6f0, 0x0, 0x0);
        gbc.writeMem(0x1fec, { 0xc });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x3e21, gbc.sp());
        EXPECT(0x1fed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 02C0
        gbc.setState(0x5cc7, 0xbb69, 0xd470, 0x56eb, 0xdd43, 0xf0b8, 0x0, 0x1);
        gbc.writeMem(0x5cc7, { 0xc });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xbb69, gbc.sp());
        EXPECT(0x5cc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 02C1
        gbc.setState(0xbec8, 0xbe28, 0xd000, 0x7166, 0xe26f, 0xc1cd, 0x0, 0x1);
        gbc.writeMem(0xbec8, { 0xc });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xbe28, gbc.sp());
        EXPECT(0xbec9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xbec8));
        // 0C 02C2
        gbc.setState(0x9e69, 0xef92, 0x4fb0, 0x6662, 0xa285, 0xa19a, 0x0, 0x0);
        gbc.writeMem(0x9e69, { 0xc });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xef92, gbc.sp());
        EXPECT(0x9e6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x9e69));
        // 0C 02C3
        gbc.setState(0xd217, 0xec27, 0xf590, 0x619d, 0xd8ee, 0xcdea, 0x0, 0x1);
        gbc.writeMem(0xd217, { 0xc });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xec27, gbc.sp());
        EXPECT(0xd218, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xd217));
        // 0C 02C4
        gbc.setState(0x5e46, 0xff0d, 0xf8d0, 0xd24e, 0x6766, 0xd395, 0x1, 0x1);
        gbc.writeMem(0x5e46, { 0xc });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xff0d, gbc.sp());
        EXPECT(0x5e47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 02C5
        gbc.setState(0x6c3a, 0x3401, 0x3310, 0x6fa9, 0x95fa, 0xaacf, 0x0, 0x0);
        gbc.writeMem(0x6c3a, { 0xc });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x3401, gbc.sp());
        EXPECT(0x6c3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 02C6
        gbc.setState(0x9244, 0x5e3f, 0xf8f0, 0x8bec, 0xae8b, 0x6867, 0x0, 0x0);
        gbc.writeMem(0x9244, { 0xc });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x5e3f, gbc.sp());
        EXPECT(0x9245, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x9244));
        // 0C 02C7
        gbc.setState(0xe8a6, 0xd0ab, 0x65d0, 0x2706, 0x2719, 0xa2f1, 0x0, 0x0);
        gbc.writeMem(0xe8a6, { 0xc });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xd0ab, gbc.sp());
        EXPECT(0xe8a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xe8a6));
        // 0C 02C8
        gbc.setState(0xcb8e, 0x7aa1, 0x6710, 0xa077, 0xb8a4, 0xaa51, 0x0, 0x0);
        gbc.writeMem(0xcb8e, { 0xc });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x7aa1, gbc.sp());
        EXPECT(0xcb8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xcb8e));
        // 0C 02C9
        gbc.setState(0xded9, 0x1170, 0xfa90, 0x31bf, 0xccef, 0xd458, 0x1, 0x1);
        gbc.writeMem(0xded9, { 0xc });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x1170, gbc.sp());
        EXPECT(0xdeda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xded9));
        // 0C 02CA
        gbc.setState(0x60b3, 0x5b55, 0x93f0, 0xfc47, 0x3cba, 0xee54, 0x1, 0x0);
        gbc.writeMem(0x60b3, { 0xc });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x5b55, gbc.sp());
        EXPECT(0x60b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 02CB
        gbc.setState(0x49dc, 0x2147, 0xb000, 0x5c8b, 0x880a, 0xfeef, 0x1, 0x0);
        gbc.writeMem(0x49dc, { 0xc });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x2147, gbc.sp());
        EXPECT(0x49dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 02CC
        gbc.setState(0x8bb7, 0x4be3, 0xb620, 0x18a9, 0x1617, 0x11c9, 0x1, 0x1);
        gbc.writeMem(0x8bb7, { 0xc });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x4be3, gbc.sp());
        EXPECT(0x8bb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x8bb7));
        // 0C 02CD
        gbc.setState(0x9ee2, 0xf12f, 0xca50, 0xcb36, 0xd7b9, 0x3a56, 0x0, 0x1);
        gbc.writeMem(0x9ee2, { 0xc });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xf12f, gbc.sp());
        EXPECT(0x9ee3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x9ee2));
        // 0C 02CE
        gbc.setState(0x273b, 0x4b2, 0xb8e0, 0x8e84, 0x21f0, 0xeb0, 0x1, 0x0);
        gbc.writeMem(0x273b, { 0xc });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x4b2, gbc.sp());
        EXPECT(0x273c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 02CF
        gbc.setState(0x42c1, 0xe181, 0xed0, 0x394c, 0x52e7, 0x1774, 0x0, 0x0);
        gbc.writeMem(0x42c1, { 0xc });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xe181, gbc.sp());
        EXPECT(0x42c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 02D0
        gbc.setState(0xa357, 0x44bb, 0x1c00, 0x4e4d, 0xffbc, 0x7098, 0x1, 0x0);
        gbc.writeMem(0xa357, { 0xc });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x44bb, gbc.sp());
        EXPECT(0xa358, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xa357));
        // 0C 02D1
        gbc.setState(0xd3e2, 0x34c1, 0x2e10, 0xf6c5, 0xf608, 0xce92, 0x0, 0x1);
        gbc.writeMem(0xd3e2, { 0xc });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x34c1, gbc.sp());
        EXPECT(0xd3e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xd3e2));
        // 0C 02D2
        gbc.setState(0x5cf2, 0xa097, 0x1ce0, 0x36b9, 0xd8c7, 0x3d16, 0x0, 0x1);
        gbc.writeMem(0x5cf2, { 0xc });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xa097, gbc.sp());
        EXPECT(0x5cf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 02D3
        gbc.setState(0x8531, 0x31b8, 0xab90, 0xdbdf, 0x2f1d, 0x86f, 0x1, 0x0);
        gbc.writeMem(0x8531, { 0xc });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x31b8, gbc.sp());
        EXPECT(0x8532, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x8531));
        // 0C 02D4
        gbc.setState(0x3b20, 0x3840, 0xf9d0, 0x8b9, 0xb11, 0x611b, 0x0, 0x1);
        gbc.writeMem(0x3b20, { 0xc });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x3840, gbc.sp());
        EXPECT(0x3b21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 02D5
        gbc.setState(0x4d9c, 0x8bf9, 0x280, 0x639d, 0x526a, 0x8df3, 0x1, 0x1);
        gbc.writeMem(0x4d9c, { 0xc });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x8bf9, gbc.sp());
        EXPECT(0x4d9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 02D6
        gbc.setState(0xe1fd, 0x470a, 0x7ac0, 0x6aed, 0x5971, 0xebe3, 0x1, 0x1);
        gbc.writeMem(0xe1fd, { 0xc });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x470a, gbc.sp());
        EXPECT(0xe1fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xe1fd));
        // 0C 02D7
        gbc.setState(0x1489, 0xf47d, 0x8a60, 0xc0ed, 0x641, 0xb361, 0x1, 0x0);
        gbc.writeMem(0x1489, { 0xc });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xf47d, gbc.sp());
        EXPECT(0x148a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 02D8
        gbc.setState(0x5410, 0xd1, 0xf920, 0x9b6e, 0x2b8a, 0x3923, 0x1, 0x1);
        gbc.writeMem(0x5410, { 0xc });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xd1, gbc.sp());
        EXPECT(0x5411, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 02D9
        gbc.setState(0xa697, 0xaec4, 0x99d0, 0x7681, 0x8cbf, 0x4710, 0x0, 0x0);
        gbc.writeMem(0xa697, { 0xc });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xaec4, gbc.sp());
        EXPECT(0xa698, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xa697));
        // 0C 02DA
        gbc.setState(0xb1e3, 0x71d3, 0xc8c0, 0x2b8, 0x1d72, 0xacd1, 0x1, 0x1);
        gbc.writeMem(0xb1e3, { 0xc });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x71d3, gbc.sp());
        EXPECT(0xb1e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xb1e3));
        // 0C 02DB
        gbc.setState(0xb034, 0x411, 0x8e0, 0x47d4, 0x243b, 0x7a26, 0x1, 0x0);
        gbc.writeMem(0xb034, { 0xc });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x411, gbc.sp());
        EXPECT(0xb035, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xb034));
        // 0C 02DC
        gbc.setState(0xcee1, 0x65fb, 0x4740, 0xbcd0, 0xfba9, 0xbdb1, 0x1, 0x1);
        gbc.writeMem(0xcee1, { 0xc });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x65fb, gbc.sp());
        EXPECT(0xcee2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xcee1));
        // 0C 02DD
        gbc.setState(0x756f, 0x6945, 0x9ea0, 0x9c26, 0x7fb9, 0x5618, 0x0, 0x1);
        gbc.writeMem(0x756f, { 0xc });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x6945, gbc.sp());
        EXPECT(0x7570, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 02DE
        gbc.setState(0x4b63, 0xda94, 0xabe0, 0x14ed, 0x6b82, 0x282d, 0x0, 0x1);
        gbc.writeMem(0x4b63, { 0xc });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xda94, gbc.sp());
        EXPECT(0x4b64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 02DF
        gbc.setState(0x6fa6, 0x6139, 0xf470, 0x4e93, 0xf5c5, 0xde3c, 0x0, 0x0);
        gbc.writeMem(0x6fa6, { 0xc });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x6139, gbc.sp());
        EXPECT(0x6fa7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 02E0
        gbc.setState(0x32e9, 0x7074, 0x9660, 0xb4ba, 0xf1f4, 0x7224, 0x0, 0x0);
        gbc.writeMem(0x32e9, { 0xc });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x7074, gbc.sp());
        EXPECT(0x32ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 02E2
        gbc.setState(0x12b2, 0xee73, 0xe700, 0x7940, 0x1210, 0xfdb5, 0x1, 0x0);
        gbc.writeMem(0x12b2, { 0xc });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xee73, gbc.sp());
        EXPECT(0x12b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 02E3
        gbc.setState(0x7b3a, 0x2acb, 0xdf60, 0x1fd4, 0x339f, 0x7c76, 0x0, 0x1);
        gbc.writeMem(0x7b3a, { 0xc });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x2acb, gbc.sp());
        EXPECT(0x7b3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 02E4
        gbc.setState(0xa9e7, 0x2f8a, 0x3880, 0xf766, 0x2d8e, 0x954b, 0x0, 0x1);
        gbc.writeMem(0xa9e7, { 0xc });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x2f8a, gbc.sp());
        EXPECT(0xa9e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xa9e7));
        // 0C 02E5
        gbc.setState(0xe3be, 0xb74d, 0x9e0, 0x704b, 0xee92, 0x8c7c, 0x1, 0x1);
        gbc.writeMem(0xe3be, { 0xc });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xb74d, gbc.sp());
        EXPECT(0xe3bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xe3be));
        // 0C 02E6
        gbc.setState(0xa771, 0xdad3, 0x6ad0, 0x8739, 0x985e, 0x18b4, 0x0, 0x1);
        gbc.writeMem(0xa771, { 0xc });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xdad3, gbc.sp());
        EXPECT(0xa772, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xa771));
        // 0C 02E7
        gbc.setState(0x323b, 0xb6b2, 0x30, 0xad96, 0xa8fa, 0x6508, 0x1, 0x0);
        gbc.writeMem(0x323b, { 0xc });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xb6b2, gbc.sp());
        EXPECT(0x323c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 02E8
        gbc.setState(0xb90c, 0xb12a, 0xe2b0, 0x1917, 0x8b37, 0x3de8, 0x0, 0x1);
        gbc.writeMem(0xb90c, { 0xc });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xb12a, gbc.sp());
        EXPECT(0xb90d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xb90c));
        // 0C 02E9
        gbc.setState(0xd4f3, 0xfac0, 0x4800, 0x710d, 0x455d, 0xaeb4, 0x0, 0x0);
        gbc.writeMem(0xd4f3, { 0xc });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xfac0, gbc.sp());
        EXPECT(0xd4f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xd4f3));
        // 0C 02EA
        gbc.setState(0x2a3b, 0x4c81, 0xc9e0, 0x43f6, 0xaf12, 0x5386, 0x1, 0x0);
        gbc.writeMem(0x2a3b, { 0xc });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x4c81, gbc.sp());
        EXPECT(0x2a3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 02EB
        gbc.setState(0xe02b, 0xc291, 0xb2c0, 0x445, 0x7c10, 0x4619, 0x0, 0x1);
        gbc.writeMem(0xe02b, { 0xc });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xc291, gbc.sp());
        EXPECT(0xe02c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xe02b));
        // 0C 02EC
        gbc.setState(0x6efe, 0x546f, 0xc30, 0x8a43, 0x9ff3, 0x2a3b, 0x0, 0x0);
        gbc.writeMem(0x6efe, { 0xc });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x546f, gbc.sp());
        EXPECT(0x6eff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 02ED
        gbc.setState(0x6bfc, 0x2c48, 0xc6a0, 0x4fc0, 0xcfb3, 0x3238, 0x0, 0x1);
        gbc.writeMem(0x6bfc, { 0xc });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x2c48, gbc.sp());
        EXPECT(0x6bfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 02EE
        gbc.setState(0x9298, 0x9f5f, 0xebf0, 0xb7c3, 0x1e17, 0xbc76, 0x0, 0x0);
        gbc.writeMem(0x9298, { 0xc });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x9f5f, gbc.sp());
        EXPECT(0x9299, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x9298));
        // 0C 02F0
        gbc.setState(0x5df1, 0xec8e, 0xdc30, 0xebca, 0xd618, 0x3a79, 0x0, 0x0);
        gbc.writeMem(0x5df1, { 0xc });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xec8e, gbc.sp());
        EXPECT(0x5df2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 02F1
        gbc.setState(0x9b1, 0xc8d2, 0x1440, 0xf59c, 0x2a98, 0x970b, 0x1, 0x0);
        gbc.writeMem(0x9b1, { 0xc });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xc8d2, gbc.sp());
        EXPECT(0x9b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 02F2
        gbc.setState(0xdce0, 0xc1c1, 0xb6d0, 0x534, 0x846d, 0x475a, 0x0, 0x1);
        gbc.writeMem(0xdce0, { 0xc });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xc1c1, gbc.sp());
        EXPECT(0xdce1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xdce0));
        // 0C 02F3
        gbc.setState(0xc1a, 0xdbcf, 0xc8b0, 0xdac5, 0x74e5, 0xbefe, 0x1, 0x0);
        gbc.writeMem(0xc1a, { 0xc });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xdbcf, gbc.sp());
        EXPECT(0xc1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 02F4
        gbc.setState(0xbfa7, 0xbd2c, 0x2ae0, 0x26fb, 0x9db6, 0x557c, 0x0, 0x0);
        gbc.writeMem(0xbfa7, { 0xc });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xbd2c, gbc.sp());
        EXPECT(0xbfa8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xbfa7));
        // 0C 02F5
        gbc.setState(0x30db, 0x1b93, 0x7ad0, 0x342a, 0x6b34, 0x76d7, 0x1, 0x1);
        gbc.writeMem(0x30db, { 0xc });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x1b93, gbc.sp());
        EXPECT(0x30dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 02F6
        gbc.setState(0xcaa6, 0x50d, 0xbf0, 0x1232, 0x3633, 0x1204, 0x0, 0x0);
        gbc.writeMem(0xcaa6, { 0xc });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x50d, gbc.sp());
        EXPECT(0xcaa7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xcaa6));
        // 0C 02F7
        gbc.setState(0x3d1d, 0x1350, 0x7ef0, 0xe04c, 0x8e96, 0x7f31, 0x0, 0x1);
        gbc.writeMem(0x3d1d, { 0xc });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x1350, gbc.sp());
        EXPECT(0x3d1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 02F8
        gbc.setState(0xece4, 0x3cf4, 0x36c0, 0xaa83, 0x8a89, 0x102d, 0x0, 0x1);
        gbc.writeMem(0xece4, { 0xc });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x3cf4, gbc.sp());
        EXPECT(0xece5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xece4));
        // 0C 02F9
        gbc.setState(0xd010, 0x31fa, 0x3fd0, 0x3dd0, 0xbcd9, 0x5b81, 0x0, 0x1);
        gbc.writeMem(0xd010, { 0xc });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x31fa, gbc.sp());
        EXPECT(0xd011, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xd010));
        // 0C 02FA
        gbc.setState(0x5469, 0xf7b0, 0xeec0, 0x9c1e, 0x7201, 0x2fc3, 0x0, 0x0);
        gbc.writeMem(0x5469, { 0xc });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xf7b0, gbc.sp());
        EXPECT(0x546a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 02FB
        gbc.setState(0x8891, 0x8c15, 0x4180, 0xebb2, 0x2b5f, 0xd9b1, 0x0, 0x1);
        gbc.writeMem(0x8891, { 0xc });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x8c15, gbc.sp());
        EXPECT(0x8892, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x8891));
        // 0C 02FD
        gbc.setState(0xb07b, 0xd9b0, 0xa4f0, 0x54b9, 0x4de1, 0xbdeb, 0x0, 0x0);
        gbc.writeMem(0xb07b, { 0xc });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xd9b0, gbc.sp());
        EXPECT(0xb07c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xb07b));
        // 0C 02FE
        gbc.setState(0xb596, 0x5a17, 0x4a90, 0x2417, 0x953b, 0x3796, 0x0, 0x1);
        gbc.writeMem(0xb596, { 0xc });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x5a17, gbc.sp());
        EXPECT(0xb597, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xb596));
        // 0C 02FF
        gbc.setState(0x3f60, 0x6bdc, 0xe340, 0x7a20, 0xb132, 0xbf24, 0x0, 0x1);
        gbc.writeMem(0x3f60, { 0xc });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x6bdc, gbc.sp());
        EXPECT(0x3f61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 0300
        gbc.setState(0xddd1, 0xa070, 0x4030, 0x3f7c, 0xde98, 0x96e8, 0x0, 0x1);
        gbc.writeMem(0xddd1, { 0xc });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xa070, gbc.sp());
        EXPECT(0xddd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xddd1));
        // 0C 0301
        gbc.setState(0xc7d1, 0xe9b5, 0x8780, 0x84b8, 0xb394, 0xd884, 0x1, 0x1);
        gbc.writeMem(0xc7d1, { 0xc });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xe9b5, gbc.sp());
        EXPECT(0xc7d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xc7d1));
        // 0C 0303
        gbc.setState(0xca62, 0x825c, 0x8770, 0x64a9, 0x1fb3, 0x6de7, 0x0, 0x1);
        gbc.writeMem(0xca62, { 0xc });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x825c, gbc.sp());
        EXPECT(0xca63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xca62));
        // 0C 0304
        gbc.setState(0x206, 0xd7b4, 0xc150, 0x8901, 0xb76d, 0x7aae, 0x0, 0x0);
        gbc.writeMem(0x206, { 0xc });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xd7b4, gbc.sp());
        EXPECT(0x207, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0305
        gbc.setState(0x795c, 0x137d, 0x8d90, 0x4547, 0x515f, 0xd35d, 0x0, 0x1);
        gbc.writeMem(0x795c, { 0xc });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x137d, gbc.sp());
        EXPECT(0x795d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0306
        gbc.setState(0xd951, 0x119f, 0x280, 0x20b9, 0x6ebf, 0xc1a1, 0x0, 0x0);
        gbc.writeMem(0xd951, { 0xc });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x119f, gbc.sp());
        EXPECT(0xd952, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xd951));
        // 0C 0307
        gbc.setState(0x2876, 0xbd4e, 0x6b00, 0x7b5f, 0x5d30, 0x7c81, 0x0, 0x1);
        gbc.writeMem(0x2876, { 0xc });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xbd4e, gbc.sp());
        EXPECT(0x2877, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 0308
        gbc.setState(0x30b9, 0x9eee, 0x25c0, 0x3ea4, 0xe93a, 0xc95a, 0x0, 0x0);
        gbc.writeMem(0x30b9, { 0xc });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x9eee, gbc.sp());
        EXPECT(0x30ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 0309
        gbc.setState(0x2903, 0x32e, 0xa4e0, 0xff8f, 0x96d1, 0x543b, 0x1, 0x0);
        gbc.writeMem(0x2903, { 0xc });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x32e, gbc.sp());
        EXPECT(0x2904, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 030A
        gbc.setState(0x7dc6, 0xe2ba, 0x7410, 0x4ca3, 0xaab, 0x53aa, 0x0, 0x1);
        gbc.writeMem(0x7dc6, { 0xc });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xe2ba, gbc.sp());
        EXPECT(0x7dc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 030B
        gbc.setState(0x27ec, 0x297a, 0x1c40, 0x5883, 0xd916, 0xf479, 0x0, 0x1);
        gbc.writeMem(0x27ec, { 0xc });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x297a, gbc.sp());
        EXPECT(0x27ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 030C
        gbc.setState(0x6871, 0x2a97, 0x8560, 0xb93b, 0x3190, 0xcc2, 0x1, 0x1);
        gbc.writeMem(0x6871, { 0xc });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x2a97, gbc.sp());
        EXPECT(0x6872, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 030D
        gbc.setState(0xeb1c, 0x7234, 0x59b0, 0x8cc0, 0x9145, 0xf3c, 0x1, 0x1);
        gbc.writeMem(0xeb1c, { 0xc });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x7234, gbc.sp());
        EXPECT(0xeb1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xeb1c));
        // 0C 030E
        gbc.setState(0xa971, 0x586f, 0xc030, 0xe4f6, 0xbac2, 0x5bf1, 0x1, 0x0);
        gbc.writeMem(0xa971, { 0xc });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x586f, gbc.sp());
        EXPECT(0xa972, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xa971));
        // 0C 030F
        gbc.setState(0x2e17, 0x7259, 0x92d0, 0xb242, 0xe2ba, 0x2d03, 0x0, 0x1);
        gbc.writeMem(0x2e17, { 0xc });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x7259, gbc.sp());
        EXPECT(0x2e18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0310
        gbc.setState(0xe732, 0xeedd, 0x170, 0x7bc6, 0xb67f, 0xf39, 0x0, 0x0);
        gbc.writeMem(0xe732, { 0xc });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xeedd, gbc.sp());
        EXPECT(0xe733, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xe732));
        // 0C 0311
        gbc.setState(0xccb6, 0x264b, 0x8470, 0x282f, 0xfa9b, 0xa034, 0x0, 0x0);
        gbc.writeMem(0xccb6, { 0xc });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x264b, gbc.sp());
        EXPECT(0xccb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xccb6));
        // 0C 0312
        gbc.setState(0xd61c, 0x1539, 0x6340, 0xa636, 0x389e, 0x3e04, 0x1, 0x1);
        gbc.writeMem(0xd61c, { 0xc });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x1539, gbc.sp());
        EXPECT(0xd61d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xd61c));
        // 0C 0313
        gbc.setState(0x9a0a, 0x6f13, 0xde00, 0xe3de, 0x2629, 0x2cff, 0x1, 0x0);
        gbc.writeMem(0x9a0a, { 0xc });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x6f13, gbc.sp());
        EXPECT(0x9a0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x9a0a));
        // 0C 0314
        gbc.setState(0x7ba8, 0x14b5, 0x74b0, 0x2b7b, 0x5831, 0x92e4, 0x1, 0x0);
        gbc.writeMem(0x7ba8, { 0xc });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x14b5, gbc.sp());
        EXPECT(0x7ba9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0315
        gbc.setState(0x5140, 0xdf3f, 0xafc0, 0x412e, 0x71be, 0x7cc5, 0x1, 0x0);
        gbc.writeMem(0x5140, { 0xc });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xdf3f, gbc.sp());
        EXPECT(0x5141, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 0316
        gbc.setState(0xd2f8, 0xad79, 0x3bf0, 0x9b59, 0x45b4, 0x95b6, 0x0, 0x1);
        gbc.writeMem(0xd2f8, { 0xc });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xad79, gbc.sp());
        EXPECT(0xd2f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xd2f8));
        // 0C 0317
        gbc.setState(0x14d, 0x227a, 0xfff0, 0x98ca, 0x882f, 0x81d6, 0x1, 0x0);
        gbc.writeMem(0x14d, { 0xc });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x227a, gbc.sp());
        EXPECT(0x14e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0318
        gbc.setState(0x56e1, 0x4039, 0xc5a0, 0xef4a, 0x483c, 0x5e34, 0x0, 0x0);
        gbc.writeMem(0x56e1, { 0xc });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x4039, gbc.sp());
        EXPECT(0x56e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 031A
        gbc.setState(0x4530, 0x2383, 0x7580, 0x7147, 0x63fa, 0x8806, 0x0, 0x1);
        gbc.writeMem(0x4530, { 0xc });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x2383, gbc.sp());
        EXPECT(0x4531, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 031B
        gbc.setState(0x2cc2, 0xd1aa, 0xca20, 0x1b5f, 0x51bf, 0x2887, 0x0, 0x1);
        gbc.writeMem(0x2cc2, { 0xc });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xd1aa, gbc.sp());
        EXPECT(0x2cc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 031C
        gbc.setState(0x14e4, 0x5833, 0x2a10, 0x6b59, 0xef5f, 0x484f, 0x1, 0x1);
        gbc.writeMem(0x14e4, { 0xc });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x5833, gbc.sp());
        EXPECT(0x14e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 031D
        gbc.setState(0x2949, 0xdb83, 0x85d0, 0x2a53, 0x3a32, 0xe490, 0x0, 0x0);
        gbc.writeMem(0x2949, { 0xc });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xdb83, gbc.sp());
        EXPECT(0x294a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 031F
        gbc.setState(0x8ce0, 0xb801, 0x4b90, 0xc134, 0x249e, 0xdb5a, 0x0, 0x0);
        gbc.writeMem(0x8ce0, { 0xc });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xb801, gbc.sp());
        EXPECT(0x8ce1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x8ce0));
        // 0C 0320
        gbc.setState(0xb2fd, 0xae84, 0x15f0, 0xb96, 0x76dd, 0x6536, 0x1, 0x1);
        gbc.writeMem(0xb2fd, { 0xc });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xae84, gbc.sp());
        EXPECT(0xb2fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xb2fd));
        // 0C 0321
        gbc.setState(0xc5df, 0x26d5, 0x3330, 0x953c, 0x58a0, 0x8395, 0x1, 0x1);
        gbc.writeMem(0xc5df, { 0xc });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x26d5, gbc.sp());
        EXPECT(0xc5e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xc5df));
        // 0C 0322
        gbc.setState(0x255c, 0xc106, 0xfd50, 0xa0db, 0x14b8, 0x1ff8, 0x1, 0x1);
        gbc.writeMem(0x255c, { 0xc });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xc106, gbc.sp());
        EXPECT(0x255d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0323
        gbc.setState(0x9680, 0x9710, 0x380, 0xaa7a, 0xb38a, 0xf8d3, 0x1, 0x1);
        gbc.writeMem(0x9680, { 0xc });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x9710, gbc.sp());
        EXPECT(0x9681, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x9680));
        // 0C 0324
        gbc.setState(0xa6b4, 0xd7b2, 0x7bd0, 0xdd2, 0xd6a5, 0xc7d9, 0x1, 0x1);
        gbc.writeMem(0xa6b4, { 0xc });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xd7b2, gbc.sp());
        EXPECT(0xa6b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xa6b4));
        // 0C 0325
        gbc.setState(0x4335, 0x57c4, 0xc0, 0x96c8, 0xc843, 0x4dcd, 0x0, 0x0);
        gbc.writeMem(0x4335, { 0xc });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x57c4, gbc.sp());
        EXPECT(0x4336, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 0326
        gbc.setState(0xea31, 0x1c08, 0x1020, 0x5be8, 0x993c, 0xb4fd, 0x0, 0x0);
        gbc.writeMem(0xea31, { 0xc });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x1c08, gbc.sp());
        EXPECT(0xea32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xea31));
        // 0C 0327
        gbc.setState(0x36ee, 0x3c3, 0x2d50, 0x9a42, 0x207d, 0xe464, 0x0, 0x1);
        gbc.writeMem(0x36ee, { 0xc });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x3c3, gbc.sp());
        EXPECT(0x36ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0328
        gbc.setState(0xb94, 0x4150, 0xff70, 0xdd7a, 0x6ce7, 0x6506, 0x1, 0x1);
        gbc.writeMem(0xb94, { 0xc });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x4150, gbc.sp());
        EXPECT(0xb95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0329
        gbc.setState(0x25ee, 0xc085, 0xf8a0, 0x35ec, 0x3beb, 0x4be0, 0x1, 0x1);
        gbc.writeMem(0x25ee, { 0xc });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xc085, gbc.sp());
        EXPECT(0x25ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 032A
        gbc.setState(0xcaa4, 0x881e, 0xdbe0, 0x3d5, 0x1395, 0xd9dc, 0x1, 0x1);
        gbc.writeMem(0xcaa4, { 0xc });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x881e, gbc.sp());
        EXPECT(0xcaa5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xcaa4));
        // 0C 032B
        gbc.setState(0x2add, 0x3cb1, 0x9670, 0x4c67, 0x7791, 0xaee7, 0x0, 0x0);
        gbc.writeMem(0x2add, { 0xc });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x3cb1, gbc.sp());
        EXPECT(0x2ade, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 032C
        gbc.setState(0x945c, 0xc0e5, 0x26c0, 0x89b6, 0xed42, 0xf668, 0x0, 0x1);
        gbc.writeMem(0x945c, { 0xc });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xc0e5, gbc.sp());
        EXPECT(0x945d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x945c));
        // 0C 032D
        gbc.setState(0xde19, 0xc1b1, 0xd260, 0x38ad, 0xcf50, 0x83e2, 0x0, 0x0);
        gbc.writeMem(0xde19, { 0xc });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xc1b1, gbc.sp());
        EXPECT(0xde1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xde19));
        // 0C 032E
        gbc.setState(0x7e77, 0xac16, 0x9110, 0x7387, 0x1d1, 0x872a, 0x1, 0x0);
        gbc.writeMem(0x7e77, { 0xc });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xac16, gbc.sp());
        EXPECT(0x7e78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 032F
        gbc.setState(0x6184, 0x3c6a, 0x2ab0, 0x1a59, 0x12f8, 0xf628, 0x1, 0x1);
        gbc.writeMem(0x6184, { 0xc });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x3c6a, gbc.sp());
        EXPECT(0x6185, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0330
        gbc.setState(0xeb4, 0x28b9, 0xfcb0, 0x8c75, 0xb118, 0x828f, 0x1, 0x1);
        gbc.writeMem(0xeb4, { 0xc });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x28b9, gbc.sp());
        EXPECT(0xeb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0331
        gbc.setState(0xb020, 0x4de7, 0xc00, 0xa1aa, 0xe42e, 0x341, 0x0, 0x0);
        gbc.writeMem(0xb020, { 0xc });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x4de7, gbc.sp());
        EXPECT(0xb021, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xb020));
        // 0C 0333
        gbc.setState(0x99e5, 0xaf4c, 0xeaf0, 0x926d, 0xd3d, 0x95e9, 0x0, 0x1);
        gbc.writeMem(0x99e5, { 0xc });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xaf4c, gbc.sp());
        EXPECT(0x99e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x99e5));
        // 0C 0335
        gbc.setState(0x9a56, 0x1ca0, 0x14c0, 0xf183, 0x47f0, 0xdc7f, 0x1, 0x1);
        gbc.writeMem(0x9a56, { 0xc });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x1ca0, gbc.sp());
        EXPECT(0x9a57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x9a56));
        // 0C 0336
        gbc.setState(0xacbe, 0x62b6, 0x22d0, 0xab7e, 0x3a4, 0x1744, 0x1, 0x0);
        gbc.writeMem(0xacbe, { 0xc });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x62b6, gbc.sp());
        EXPECT(0xacbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xacbe));
        // 0C 0337
        gbc.setState(0x71a9, 0x89dd, 0x5d90, 0x693c, 0x77f0, 0x1be8, 0x1, 0x1);
        gbc.writeMem(0x71a9, { 0xc });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x89dd, gbc.sp());
        EXPECT(0x71aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0338
        gbc.setState(0x45b8, 0x93e0, 0x1f80, 0xa8df, 0xce7, 0xfb62, 0x0, 0x0);
        gbc.writeMem(0x45b8, { 0xc });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x93e0, gbc.sp());
        EXPECT(0x45b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 0339
        gbc.setState(0x3285, 0x9307, 0x6890, 0xd8f3, 0xb1ab, 0x8345, 0x0, 0x1);
        gbc.writeMem(0x3285, { 0xc });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x9307, gbc.sp());
        EXPECT(0x3286, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 033A
        gbc.setState(0x8926, 0xd577, 0xa150, 0xba9a, 0xfad7, 0x1994, 0x0, 0x1);
        gbc.writeMem(0x8926, { 0xc });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xd577, gbc.sp());
        EXPECT(0x8927, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x8926));
        // 0C 033B
        gbc.setState(0x779b, 0x6272, 0x3840, 0xe879, 0x50b, 0x2650, 0x0, 0x1);
        gbc.writeMem(0x779b, { 0xc });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x6272, gbc.sp());
        EXPECT(0x779c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 033C
        gbc.setState(0xcdfa, 0x93b9, 0x5f50, 0xe0bb, 0xd015, 0x37f2, 0x1, 0x1);
        gbc.writeMem(0xcdfa, { 0xc });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x93b9, gbc.sp());
        EXPECT(0xcdfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xcdfa));
        // 0C 033D
        gbc.setState(0x315b, 0x6366, 0xf4c0, 0xf799, 0x5f08, 0x16f2, 0x1, 0x0);
        gbc.writeMem(0x315b, { 0xc });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x6366, gbc.sp());
        EXPECT(0x315c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 033E
        gbc.setState(0xeb7a, 0x52ca, 0x3da0, 0x592f, 0x2af3, 0xa6df, 0x1, 0x0);
        gbc.writeMem(0xeb7a, { 0xc });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x52ca, gbc.sp());
        EXPECT(0xeb7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xeb7a));
        // 0C 033F
        gbc.setState(0x8353, 0xe1ff, 0x3570, 0x4b5, 0xe059, 0xfd38, 0x1, 0x0);
        gbc.writeMem(0x8353, { 0xc });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xe1ff, gbc.sp());
        EXPECT(0x8354, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x8353));
        // 0C 0340
        gbc.setState(0xaf2c, 0x6bd3, 0x5080, 0xefd4, 0x32a9, 0x8a40, 0x1, 0x1);
        gbc.writeMem(0xaf2c, { 0xc });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x6bd3, gbc.sp());
        EXPECT(0xaf2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xaf2c));
        // 0C 0341
        gbc.setState(0x5ca4, 0x22b8, 0x8b80, 0x7285, 0xb0f9, 0xa0bc, 0x0, 0x1);
        gbc.writeMem(0x5ca4, { 0xc });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x22b8, gbc.sp());
        EXPECT(0x5ca5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 0342
        gbc.setState(0xd860, 0xd081, 0x45f0, 0x30eb, 0xbc27, 0xc638, 0x0, 0x1);
        gbc.writeMem(0xd860, { 0xc });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xd081, gbc.sp());
        EXPECT(0xd861, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xd860));
        // 0C 0343
        gbc.setState(0xe75, 0xffd0, 0xeb0, 0x3778, 0x3789, 0x3320, 0x0, 0x0);
        gbc.writeMem(0xe75, { 0xc });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xffd0, gbc.sp());
        EXPECT(0xe76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0344
        gbc.setState(0x30a2, 0x2406, 0xdc40, 0x98cb, 0x5418, 0xbeb9, 0x0, 0x0);
        gbc.writeMem(0x30a2, { 0xc });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x2406, gbc.sp());
        EXPECT(0x30a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 0345
        gbc.setState(0x7bf8, 0xf0dd, 0x4500, 0x4187, 0x3, 0x1e32, 0x1, 0x0);
        gbc.writeMem(0x7bf8, { 0xc });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xf0dd, gbc.sp());
        EXPECT(0x7bf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 0346
        gbc.setState(0x24c, 0x6d2e, 0x2710, 0xb4c8, 0x74ac, 0xe246, 0x1, 0x0);
        gbc.writeMem(0x24c, { 0xc });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x6d2e, gbc.sp());
        EXPECT(0x24d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0347
        gbc.setState(0xc10d, 0xb0ad, 0x3720, 0x1a68, 0x74af, 0xa959, 0x1, 0x1);
        gbc.writeMem(0xc10d, { 0xc });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xb0ad, gbc.sp());
        EXPECT(0xc10e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xc10d));
        // 0C 0348
        gbc.setState(0xaf30, 0xf49d, 0xe150, 0x3eb1, 0xf24, 0x368d, 0x1, 0x0);
        gbc.writeMem(0xaf30, { 0xc });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xf49d, gbc.sp());
        EXPECT(0xaf31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xaf30));
        // 0C 0349
        gbc.setState(0x666, 0xa6b, 0xea90, 0x896b, 0xd66e, 0x83e9, 0x1, 0x0);
        gbc.writeMem(0x666, { 0xc });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xa6b, gbc.sp());
        EXPECT(0x667, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 034A
        gbc.setState(0x55f5, 0x8ee2, 0x4ff0, 0xb03c, 0x1f41, 0x4fdc, 0x0, 0x1);
        gbc.writeMem(0x55f5, { 0xc });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x8ee2, gbc.sp());
        EXPECT(0x55f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 034B
        gbc.setState(0x1de5, 0x7ea1, 0xd7d0, 0x4197, 0x5098, 0x9a08, 0x1, 0x1);
        gbc.writeMem(0x1de5, { 0xc });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x7ea1, gbc.sp());
        EXPECT(0x1de6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 034C
        gbc.setState(0x233a, 0x9a4a, 0x6240, 0xe309, 0x64b3, 0x4b23, 0x1, 0x1);
        gbc.writeMem(0x233a, { 0xc });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x9a4a, gbc.sp());
        EXPECT(0x233b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 034D
        gbc.setState(0xe4e7, 0xec36, 0x3e10, 0x4eac, 0x68dc, 0x27f0, 0x0, 0x0);
        gbc.writeMem(0xe4e7, { 0xc });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xec36, gbc.sp());
        EXPECT(0xe4e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xe4e7));
        // 0C 034E
        gbc.setState(0x6a1d, 0x2bab, 0x4bb0, 0xeaff, 0x8218, 0xc9a3, 0x1, 0x1);
        gbc.writeMem(0x6a1d, { 0xc });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x2bab, gbc.sp());
        EXPECT(0x6a1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 034F
        gbc.setState(0x87da, 0xfea2, 0xbac0, 0x458c, 0x60b7, 0x3d79, 0x1, 0x0);
        gbc.writeMem(0x87da, { 0xc });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xfea2, gbc.sp());
        EXPECT(0x87db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x87da));
        // 0C 0350
        gbc.setState(0x8357, 0x9f8d, 0xb200, 0x1d66, 0x2e4, 0xdd40, 0x1, 0x1);
        gbc.writeMem(0x8357, { 0xc });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x9f8d, gbc.sp());
        EXPECT(0x8358, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x8357));
        // 0C 0351
        gbc.setState(0x153f, 0x5b7d, 0xaf70, 0x7e32, 0x916b, 0xec36, 0x0, 0x0);
        gbc.writeMem(0x153f, { 0xc });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x5b7d, gbc.sp());
        EXPECT(0x1540, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0352
        gbc.setState(0x1ce7, 0x57d9, 0x9660, 0xb052, 0x456a, 0xce84, 0x0, 0x1);
        gbc.writeMem(0x1ce7, { 0xc });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x57d9, gbc.sp());
        EXPECT(0x1ce8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 0353
        gbc.setState(0x69ce, 0x48de, 0x32c0, 0x35cd, 0x5754, 0xcf2b, 0x1, 0x0);
        gbc.writeMem(0x69ce, { 0xc });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x48de, gbc.sp());
        EXPECT(0x69cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 0354
        gbc.setState(0x7984, 0xea6f, 0x27f0, 0xbfb4, 0xd33e, 0xa164, 0x1, 0x0);
        gbc.writeMem(0x7984, { 0xc });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xea6f, gbc.sp());
        EXPECT(0x7985, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0355
        gbc.setState(0xe0f0, 0x2206, 0x9650, 0x2b77, 0x3845, 0x8a7a, 0x0, 0x0);
        gbc.writeMem(0xe0f0, { 0xc });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x2206, gbc.sp());
        EXPECT(0xe0f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xe0f0));
        // 0C 0356
        gbc.setState(0x35c6, 0xf5af, 0xc370, 0xbab5, 0x2d0e, 0x80bd, 0x0, 0x0);
        gbc.writeMem(0x35c6, { 0xc });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xf5af, gbc.sp());
        EXPECT(0x35c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0357
        gbc.setState(0xa29c, 0x3e3c, 0x40d0, 0x435f, 0xc19a, 0x1731, 0x1, 0x1);
        gbc.writeMem(0xa29c, { 0xc });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x3e3c, gbc.sp());
        EXPECT(0xa29d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xa29c));
        // 0C 0358
        gbc.setState(0xdf3e, 0xb846, 0x5f10, 0x6e0d, 0x96f6, 0xc83f, 0x1, 0x1);
        gbc.writeMem(0xdf3e, { 0xc });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xb846, gbc.sp());
        EXPECT(0xdf3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xdf3e));
        // 0C 0359
        gbc.setState(0x9640, 0xeae7, 0x9dc0, 0xdcc2, 0xbfd3, 0xd137, 0x1, 0x0);
        gbc.writeMem(0x9640, { 0xc });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xeae7, gbc.sp());
        EXPECT(0x9641, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x9640));
        // 0C 035A
        gbc.setState(0x2e91, 0xeff2, 0xbf00, 0x74d8, 0xde00, 0xf742, 0x0, 0x1);
        gbc.writeMem(0x2e91, { 0xc });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xeff2, gbc.sp());
        EXPECT(0x2e92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 035B
        gbc.setState(0x1977, 0xb4da, 0x4160, 0xa415, 0x7229, 0x2939, 0x0, 0x0);
        gbc.writeMem(0x1977, { 0xc });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xb4da, gbc.sp());
        EXPECT(0x1978, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 035C
        gbc.setState(0x6bff, 0xc6b9, 0xc3d0, 0x62a9, 0xb3d8, 0x7484, 0x0, 0x1);
        gbc.writeMem(0x6bff, { 0xc });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xc6b9, gbc.sp());
        EXPECT(0x6c00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 035D
        gbc.setState(0xaffa, 0xedc2, 0x8920, 0xea93, 0x70a5, 0x70fc, 0x0, 0x0);
        gbc.writeMem(0xaffa, { 0xc });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xedc2, gbc.sp());
        EXPECT(0xaffb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xaffa));
        // 0C 035E
        gbc.setState(0xcac2, 0x8610, 0xdcd0, 0x2acb, 0xb0e0, 0xe8a8, 0x1, 0x1);
        gbc.writeMem(0xcac2, { 0xc });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x8610, gbc.sp());
        EXPECT(0xcac3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xcac2));
        // 0C 0360
        gbc.setState(0x5125, 0x204c, 0x8850, 0x2bca, 0x44e7, 0x503b, 0x1, 0x1);
        gbc.writeMem(0x5125, { 0xc });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x204c, gbc.sp());
        EXPECT(0x5126, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0361
        gbc.setState(0x5571, 0x7fe0, 0x90f0, 0x9211, 0x765a, 0xfdf1, 0x1, 0x1);
        gbc.writeMem(0x5571, { 0xc });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x7fe0, gbc.sp());
        EXPECT(0x5572, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0362
        gbc.setState(0xa799, 0x3008, 0x31b0, 0x2c71, 0x8427, 0x5fed, 0x1, 0x1);
        gbc.writeMem(0xa799, { 0xc });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x3008, gbc.sp());
        EXPECT(0xa79a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xa799));
        // 0C 0363
        gbc.setState(0x3e58, 0x6971, 0x1230, 0x5bc8, 0xb4dc, 0xbaf, 0x0, 0x0);
        gbc.writeMem(0x3e58, { 0xc });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x6971, gbc.sp());
        EXPECT(0x3e59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0364
        gbc.setState(0x2814, 0xf473, 0x3240, 0x83bd, 0x95bc, 0xf48b, 0x1, 0x0);
        gbc.writeMem(0x2814, { 0xc });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xf473, gbc.sp());
        EXPECT(0x2815, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 0365
        gbc.setState(0xee60, 0xc220, 0xb3b0, 0x2a84, 0x1a64, 0xab17, 0x0, 0x1);
        gbc.writeMem(0xee60, { 0xc });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xc220, gbc.sp());
        EXPECT(0xee61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xee60));
        // 0C 0366
        gbc.setState(0x2d2b, 0x2cb2, 0xdb70, 0x6ac1, 0x5f75, 0x9762, 0x0, 0x1);
        gbc.writeMem(0x2d2b, { 0xc });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x2cb2, gbc.sp());
        EXPECT(0x2d2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0367
        gbc.setState(0x4930, 0xb2b4, 0x49b0, 0x652, 0x3cb9, 0x7488, 0x1, 0x1);
        gbc.writeMem(0x4930, { 0xc });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xb2b4, gbc.sp());
        EXPECT(0x4931, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0368
        gbc.setState(0xd1eb, 0xba27, 0xbd80, 0x9fd1, 0x3161, 0x74c0, 0x0, 0x0);
        gbc.writeMem(0xd1eb, { 0xc });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xba27, gbc.sp());
        EXPECT(0xd1ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xd1eb));
        // 0C 0369
        gbc.setState(0x461c, 0xf3b9, 0x9320, 0xd381, 0x74fb, 0xc1d4, 0x1, 0x0);
        gbc.writeMem(0x461c, { 0xc });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xf3b9, gbc.sp());
        EXPECT(0x461d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 036A
        gbc.setState(0x8c5f, 0x2725, 0x2eb0, 0xc5f6, 0xaacd, 0x4d57, 0x0, 0x0);
        gbc.writeMem(0x8c5f, { 0xc });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x2725, gbc.sp());
        EXPECT(0x8c60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x8c5f));
        // 0C 036B
        gbc.setState(0x2d97, 0x40f2, 0xb050, 0xaf35, 0x338f, 0x8462, 0x1, 0x1);
        gbc.writeMem(0x2d97, { 0xc });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x40f2, gbc.sp());
        EXPECT(0x2d98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 036C
        gbc.setState(0x467d, 0x1c1c, 0x38f0, 0x3c3b, 0xa7d5, 0x3011, 0x0, 0x0);
        gbc.writeMem(0x467d, { 0xc });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x1c1c, gbc.sp());
        EXPECT(0x467e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 036D
        gbc.setState(0x6d44, 0x8efc, 0x99c0, 0x2356, 0x2ff5, 0x1a05, 0x0, 0x0);
        gbc.writeMem(0x6d44, { 0xc });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x8efc, gbc.sp());
        EXPECT(0x6d45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 036E
        gbc.setState(0x352, 0xb4c2, 0xd8b0, 0x2887, 0xe538, 0xe8e0, 0x0, 0x0);
        gbc.writeMem(0x352, { 0xc });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xb4c2, gbc.sp());
        EXPECT(0x353, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 036F
        gbc.setState(0x3691, 0x743f, 0x68d0, 0x61ba, 0x629, 0x5fd6, 0x1, 0x0);
        gbc.writeMem(0x3691, { 0xc });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x743f, gbc.sp());
        EXPECT(0x3692, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0370
        gbc.setState(0x4fde, 0x4f8c, 0x1790, 0x8599, 0xa2cf, 0x70df, 0x1, 0x1);
        gbc.writeMem(0x4fde, { 0xc });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x4f8c, gbc.sp());
        EXPECT(0x4fdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0371
        gbc.setState(0xe071, 0x7c7a, 0xbe10, 0xc454, 0xa67e, 0xb500, 0x0, 0x0);
        gbc.writeMem(0xe071, { 0xc });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x7c7a, gbc.sp());
        EXPECT(0xe072, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xe071));
        // 0C 0373
        gbc.setState(0x881a, 0x2393, 0xdf00, 0x3dfe, 0xd9c2, 0x67fa, 0x0, 0x0);
        gbc.writeMem(0x881a, { 0xc });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x2393, gbc.sp());
        EXPECT(0x881b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x881a));
        // 0C 0374
        gbc.setState(0x1ea0, 0xaa37, 0xb480, 0x39e4, 0x2d49, 0xb94d, 0x0, 0x0);
        gbc.writeMem(0x1ea0, { 0xc });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xaa37, gbc.sp());
        EXPECT(0x1ea1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 0375
        gbc.setState(0x6e40, 0x5073, 0xfed0, 0x16cc, 0xcde, 0x1038, 0x1, 0x0);
        gbc.writeMem(0x6e40, { 0xc });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x5073, gbc.sp());
        EXPECT(0x6e41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0376
        gbc.setState(0x579c, 0x5180, 0x5390, 0xc563, 0xde69, 0x61c4, 0x1, 0x0);
        gbc.writeMem(0x579c, { 0xc });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x5180, gbc.sp());
        EXPECT(0x579d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0377
        gbc.setState(0xdc2, 0xa4a6, 0x5d40, 0xb319, 0xdeee, 0xb362, 0x0, 0x0);
        gbc.writeMem(0xdc2, { 0xc });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xa4a6, gbc.sp());
        EXPECT(0xdc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 0378
        gbc.setState(0x8018, 0x8134, 0x77d0, 0x68d9, 0x3bef, 0x97ac, 0x0, 0x1);
        gbc.writeMem(0x8018, { 0xc });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x8134, gbc.sp());
        EXPECT(0x8019, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x8018));
        // 0C 0379
        gbc.setState(0xb2fb, 0xaa03, 0xec10, 0x9ac2, 0xcdd2, 0xe2e6, 0x1, 0x0);
        gbc.writeMem(0xb2fb, { 0xc });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xaa03, gbc.sp());
        EXPECT(0xb2fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xb2fb));
        // 0C 037A
        gbc.setState(0x5802, 0x6901, 0xb20, 0xf259, 0x8ea0, 0x4e1c, 0x1, 0x1);
        gbc.writeMem(0x5802, { 0xc });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x6901, gbc.sp());
        EXPECT(0x5803, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 037B
        gbc.setState(0xc5b8, 0x6494, 0x9490, 0x5ad8, 0x9e7f, 0x7575, 0x0, 0x1);
        gbc.writeMem(0xc5b8, { 0xc });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x6494, gbc.sp());
        EXPECT(0xc5b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xc5b8));
        // 0C 037C
        gbc.setState(0x256f, 0x178, 0x180, 0xb0d6, 0x424f, 0x41c, 0x1, 0x1);
        gbc.writeMem(0x256f, { 0xc });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x178, gbc.sp());
        EXPECT(0x2570, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 037D
        gbc.setState(0x99c1, 0xb04d, 0xdfa0, 0x8fcb, 0xfa11, 0xa34, 0x1, 0x0);
        gbc.writeMem(0x99c1, { 0xc });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xb04d, gbc.sp());
        EXPECT(0x99c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x99c1));
        // 0C 037E
        gbc.setState(0xd176, 0x416a, 0x9180, 0xd7e8, 0x344f, 0xc49b, 0x1, 0x1);
        gbc.writeMem(0xd176, { 0xc });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x416a, gbc.sp());
        EXPECT(0xd177, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xd176));
        // 0C 037F
        gbc.setState(0x7172, 0x92f6, 0x6530, 0xcac5, 0x419c, 0xb65e, 0x0, 0x0);
        gbc.writeMem(0x7172, { 0xc });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x92f6, gbc.sp());
        EXPECT(0x7173, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0380
        gbc.setState(0xc7b9, 0xadee, 0x6f00, 0xae2a, 0x2e4f, 0x2e7c, 0x0, 0x1);
        gbc.writeMem(0xc7b9, { 0xc });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xadee, gbc.sp());
        EXPECT(0xc7ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xc7b9));
        // 0C 0381
        gbc.setState(0x38e3, 0xa9bb, 0x2d20, 0x9c6f, 0x5cb7, 0x24f5, 0x0, 0x1);
        gbc.writeMem(0x38e3, { 0xc });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xa9bb, gbc.sp());
        EXPECT(0x38e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 0382
        gbc.setState(0x1081, 0xf7e4, 0x59a0, 0x2075, 0x43cf, 0xb4dd, 0x0, 0x0);
        gbc.writeMem(0x1081, { 0xc });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xf7e4, gbc.sp());
        EXPECT(0x1082, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 0383
        gbc.setState(0x6241, 0xea0a, 0x91e0, 0xb86, 0x1e26, 0xd578, 0x0, 0x0);
        gbc.writeMem(0x6241, { 0xc });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xea0a, gbc.sp());
        EXPECT(0x6242, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 0384
        gbc.setState(0x8ca8, 0x4fe5, 0xae00, 0x67cd, 0xd2ee, 0x1277, 0x0, 0x1);
        gbc.writeMem(0x8ca8, { 0xc });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x4fe5, gbc.sp());
        EXPECT(0x8ca9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x8ca8));
        // 0C 0385
        gbc.setState(0x50d2, 0xb737, 0xcfd0, 0xdcd2, 0x9e3, 0x1ba4, 0x0, 0x0);
        gbc.writeMem(0x50d2, { 0xc });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xb737, gbc.sp());
        EXPECT(0x50d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0386
        gbc.setState(0xc123, 0xff0c, 0x8fc0, 0xb700, 0x7520, 0x6d18, 0x1, 0x0);
        gbc.writeMem(0xc123, { 0xc });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xff0c, gbc.sp());
        EXPECT(0xc124, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xc123));
        // 0C 0387
        gbc.setState(0x42cf, 0xecd9, 0xd700, 0x88e4, 0x95db, 0xd9e, 0x1, 0x1);
        gbc.writeMem(0x42cf, { 0xc });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xecd9, gbc.sp());
        EXPECT(0x42d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 0388
        gbc.setState(0x3341, 0x7fd8, 0x8680, 0x2cd3, 0xe5b2, 0x18fb, 0x1, 0x0);
        gbc.writeMem(0x3341, { 0xc });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x7fd8, gbc.sp());
        EXPECT(0x3342, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 0389
        gbc.setState(0x5bb8, 0xba37, 0xaf80, 0xb443, 0x4f0e, 0x9bdd, 0x1, 0x1);
        gbc.writeMem(0x5bb8, { 0xc });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xba37, gbc.sp());
        EXPECT(0x5bb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 038A
        gbc.setState(0x523, 0x827c, 0xb020, 0xb829, 0x6f12, 0xf348, 0x1, 0x0);
        gbc.writeMem(0x523, { 0xc });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x827c, gbc.sp());
        EXPECT(0x524, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 038B
        gbc.setState(0xbabf, 0xc360, 0x1c10, 0xd241, 0xec57, 0x6daf, 0x0, 0x0);
        gbc.writeMem(0xbabf, { 0xc });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xc360, gbc.sp());
        EXPECT(0xbac0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xbabf));
        // 0C 038C
        gbc.setState(0xbcb0, 0x26ce, 0x9cb0, 0x1797, 0x1e99, 0x7da5, 0x0, 0x0);
        gbc.writeMem(0xbcb0, { 0xc });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x26ce, gbc.sp());
        EXPECT(0xbcb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xbcb0));
        // 0C 038D
        gbc.setState(0xa7fa, 0xc02b, 0x35b0, 0xf7ed, 0x4a92, 0xa085, 0x0, 0x1);
        gbc.writeMem(0xa7fa, { 0xc });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xc02b, gbc.sp());
        EXPECT(0xa7fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xa7fa));
        // 0C 038E
        gbc.setState(0x7f97, 0x7f89, 0x6ed0, 0x27db, 0xb556, 0xc6fc, 0x0, 0x0);
        gbc.writeMem(0x7f97, { 0xc });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x7f89, gbc.sp());
        EXPECT(0x7f98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 038F
        gbc.setState(0xdb50, 0x39c3, 0xb730, 0x5e31, 0xd307, 0x3e16, 0x0, 0x0);
        gbc.writeMem(0xdb50, { 0xc });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x39c3, gbc.sp());
        EXPECT(0xdb51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xdb50));
        // 0C 0390
        gbc.setState(0x2e77, 0x9fdc, 0xf520, 0x9fbd, 0x19b2, 0x13b8, 0x1, 0x1);
        gbc.writeMem(0x2e77, { 0xc });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x9fdc, gbc.sp());
        EXPECT(0x2e78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 0391
        gbc.setState(0x4ff5, 0x785a, 0x9b30, 0x546d, 0x76e1, 0x927, 0x1, 0x1);
        gbc.writeMem(0x4ff5, { 0xc });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x785a, gbc.sp());
        EXPECT(0x4ff6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0392
        gbc.setState(0xa52a, 0x295e, 0x5a90, 0x260e, 0xb8c4, 0x35e8, 0x1, 0x1);
        gbc.writeMem(0xa52a, { 0xc });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x295e, gbc.sp());
        EXPECT(0xa52b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xa52a));
        // 0C 0393
        gbc.setState(0x52ac, 0xf8b8, 0x3ad0, 0xbf96, 0x58a9, 0x460, 0x0, 0x1);
        gbc.writeMem(0x52ac, { 0xc });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xf8b8, gbc.sp());
        EXPECT(0x52ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0394
        gbc.setState(0x7fdf, 0x79b0, 0xda50, 0xd363, 0xc058, 0xb6b9, 0x1, 0x0);
        gbc.writeMem(0x7fdf, { 0xc });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x79b0, gbc.sp());
        EXPECT(0x7fe0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0395
        gbc.setState(0x54e5, 0xda10, 0xf6f0, 0xcd94, 0x8118, 0xc2bb, 0x0, 0x0);
        gbc.writeMem(0x54e5, { 0xc });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xda10, gbc.sp());
        EXPECT(0x54e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0396
        gbc.setState(0x4e79, 0x2b6d, 0x4150, 0x8cd6, 0xac38, 0x4574, 0x1, 0x1);
        gbc.writeMem(0x4e79, { 0xc });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x2b6d, gbc.sp());
        EXPECT(0x4e7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0397
        gbc.setState(0x557a, 0x1357, 0xc220, 0x4882, 0x8fd0, 0x6985, 0x0, 0x1);
        gbc.writeMem(0x557a, { 0xc });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x1357, gbc.sp());
        EXPECT(0x557b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 0398
        gbc.setState(0x68ff, 0xa1f, 0x5590, 0x9af, 0xe6fc, 0x7275, 0x1, 0x1);
        gbc.writeMem(0x68ff, { 0xc });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xa1f, gbc.sp());
        EXPECT(0x6900, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 0399
        gbc.setState(0xeb0b, 0x1a93, 0x2fc0, 0xdd5, 0x70b0, 0x3c0d, 0x1, 0x0);
        gbc.writeMem(0xeb0b, { 0xc });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x1a93, gbc.sp());
        EXPECT(0xeb0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xeb0b));
        // 0C 039A
        gbc.setState(0x80c9, 0x2c29, 0xcfe0, 0xc7bf, 0xd51, 0x8c8e, 0x1, 0x0);
        gbc.writeMem(0x80c9, { 0xc });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x2c29, gbc.sp());
        EXPECT(0x80ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x80c9));
        // 0C 039B
        gbc.setState(0x208b, 0xbd24, 0x8970, 0x3ef0, 0xa0da, 0x9d0, 0x1, 0x1);
        gbc.writeMem(0x208b, { 0xc });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xbd24, gbc.sp());
        EXPECT(0x208c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 039C
        gbc.setState(0xdc11, 0x8462, 0x1bc0, 0x5f3c, 0x26db, 0x51ff, 0x1, 0x1);
        gbc.writeMem(0xdc11, { 0xc });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x8462, gbc.sp());
        EXPECT(0xdc12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xdc11));
        // 0C 039D
        gbc.setState(0x843e, 0xd0d4, 0x7530, 0x2d4, 0x80d, 0xea6f, 0x1, 0x1);
        gbc.writeMem(0x843e, { 0xc });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xd0d4, gbc.sp());
        EXPECT(0x843f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x843e));
        // 0C 039E
        gbc.setState(0xd226, 0xf58d, 0xc50, 0x43ef, 0xefc, 0x800, 0x0, 0x1);
        gbc.writeMem(0xd226, { 0xc });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xf58d, gbc.sp());
        EXPECT(0xd227, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xd226));
        // 0C 039F
        gbc.setState(0xb265, 0x6081, 0x29e0, 0xe749, 0x281a, 0x5739, 0x0, 0x0);
        gbc.writeMem(0xb265, { 0xc });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x6081, gbc.sp());
        EXPECT(0xb266, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xb265));
        // 0C 03A0
        gbc.setState(0x607f, 0x7c93, 0xf840, 0x40be, 0xd33b, 0x63bf, 0x1, 0x1);
        gbc.writeMem(0x607f, { 0xc });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x7c93, gbc.sp());
        EXPECT(0x6080, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 03A1
        gbc.setState(0x7494, 0x3585, 0x8c0, 0xda09, 0x22eb, 0x9057, 0x0, 0x0);
        gbc.writeMem(0x7494, { 0xc });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x3585, gbc.sp());
        EXPECT(0x7495, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 03A2
        gbc.setState(0x11ce, 0x43d, 0x6f40, 0x3873, 0x4bf6, 0x5ccc, 0x0, 0x0);
        gbc.writeMem(0x11ce, { 0xc });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x43d, gbc.sp());
        EXPECT(0x11cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 03A3
        gbc.setState(0x54fe, 0xdde5, 0x6430, 0x3034, 0x4f7e, 0x30b8, 0x0, 0x1);
        gbc.writeMem(0x54fe, { 0xc });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xdde5, gbc.sp());
        EXPECT(0x54ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 03A4
        gbc.setState(0xdec9, 0x178b, 0x3910, 0xc83, 0xc1a8, 0x8566, 0x0, 0x0);
        gbc.writeMem(0xdec9, { 0xc });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x178b, gbc.sp());
        EXPECT(0xdeca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xdec9));
        // 0C 03A5
        gbc.setState(0xedcb, 0x24b0, 0xbc50, 0xa09b, 0x1e9e, 0x8a00, 0x0, 0x0);
        gbc.writeMem(0xedcb, { 0xc });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x24b0, gbc.sp());
        EXPECT(0xedcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xedcb));
        // 0C 03A6
        gbc.setState(0xdc97, 0x3a23, 0x89e0, 0xc21b, 0x5f4f, 0x6b17, 0x1, 0x0);
        gbc.writeMem(0xdc97, { 0xc });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x3a23, gbc.sp());
        EXPECT(0xdc98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xdc97));
        // 0C 03A7
        gbc.setState(0x46bd, 0x1388, 0x5100, 0x43a9, 0x78bc, 0x5bd4, 0x1, 0x0);
        gbc.writeMem(0x46bd, { 0xc });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x1388, gbc.sp());
        EXPECT(0x46be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 03A8
        gbc.setState(0x101a, 0x27f8, 0x4940, 0x8a28, 0x81bf, 0x4d8c, 0x0, 0x0);
        gbc.writeMem(0x101a, { 0xc });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x27f8, gbc.sp());
        EXPECT(0x101b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 03A9
        gbc.setState(0x12ee, 0x6b54, 0x4a90, 0xcd2, 0x74b0, 0xffa8, 0x1, 0x1);
        gbc.writeMem(0x12ee, { 0xc });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x6b54, gbc.sp());
        EXPECT(0x12ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 03AB
        gbc.setState(0xbcd0, 0xf5d5, 0xd840, 0x4c8e, 0xbd46, 0xde20, 0x1, 0x1);
        gbc.writeMem(0xbcd0, { 0xc });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xf5d5, gbc.sp());
        EXPECT(0xbcd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xbcd0));
        // 0C 03AC
        gbc.setState(0xa8ec, 0x9a55, 0x9810, 0x18c3, 0xab17, 0xe78a, 0x1, 0x1);
        gbc.writeMem(0xa8ec, { 0xc });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x9a55, gbc.sp());
        EXPECT(0xa8ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xa8ec));
        // 0C 03AD
        gbc.setState(0x5793, 0xbd9e, 0xb0c0, 0x5a3e, 0x83be, 0x6202, 0x1, 0x0);
        gbc.writeMem(0x5793, { 0xc });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xbd9e, gbc.sp());
        EXPECT(0x5794, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 03AE
        gbc.setState(0x8c92, 0x1010, 0x8050, 0xcca1, 0x5925, 0xa10f, 0x1, 0x0);
        gbc.writeMem(0x8c92, { 0xc });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x1010, gbc.sp());
        EXPECT(0x8c93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x8c92));
        // 0C 03AF
        gbc.setState(0x9598, 0x380d, 0x51e0, 0xcd51, 0x1087, 0xa817, 0x1, 0x0);
        gbc.writeMem(0x9598, { 0xc });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x380d, gbc.sp());
        EXPECT(0x9599, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x9598));
        // 0C 03B0
        gbc.setState(0xc24a, 0x48c4, 0xadd0, 0xef60, 0x5d20, 0xa91e, 0x1, 0x0);
        gbc.writeMem(0xc24a, { 0xc });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x48c4, gbc.sp());
        EXPECT(0xc24b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xc24a));
        // 0C 03B1
        gbc.setState(0xe70a, 0x5a3c, 0x9dd0, 0x2dc9, 0x7dd2, 0x603c, 0x1, 0x0);
        gbc.writeMem(0xe70a, { 0xc });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x5a3c, gbc.sp());
        EXPECT(0xe70b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xe70a));
        // 0C 03B2
        gbc.setState(0x8a39, 0x6b2e, 0x4180, 0xd2e6, 0x6dd6, 0x314c, 0x0, 0x1);
        gbc.writeMem(0x8a39, { 0xc });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x6b2e, gbc.sp());
        EXPECT(0x8a3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x8a39));
        // 0C 03B3
        gbc.setState(0x8555, 0x2a32, 0x1830, 0xf53, 0xff2c, 0x2e8b, 0x1, 0x1);
        gbc.writeMem(0x8555, { 0xc });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x2a32, gbc.sp());
        EXPECT(0x8556, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x8555));
        // 0C 03B4
        gbc.setState(0x8c, 0x1b88, 0x77e0, 0xecb3, 0x7024, 0xb5a8, 0x1, 0x1);
        gbc.writeMem(0x8c, { 0xc });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x1b88, gbc.sp());
        EXPECT(0x8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 03B5
        gbc.setState(0x467c, 0x11b8, 0xe8b0, 0xbe60, 0xd336, 0xcdda, 0x0, 0x1);
        gbc.writeMem(0x467c, { 0xc });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x11b8, gbc.sp());
        EXPECT(0x467d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 03B6
        gbc.setState(0x5417, 0xe27, 0x7450, 0x24a6, 0x17ca, 0xba39, 0x0, 0x0);
        gbc.writeMem(0x5417, { 0xc });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xe27, gbc.sp());
        EXPECT(0x5418, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 03B7
        gbc.setState(0x6587, 0xc092, 0x3ff0, 0x447, 0x95c6, 0x7793, 0x1, 0x0);
        gbc.writeMem(0x6587, { 0xc });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xc092, gbc.sp());
        EXPECT(0x6588, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 03B8
        gbc.setState(0x7c81, 0x5d67, 0x33d0, 0x80c, 0x929f, 0x8f78, 0x1, 0x0);
        gbc.writeMem(0x7c81, { 0xc });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x5d67, gbc.sp());
        EXPECT(0x7c82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 03B9
        gbc.setState(0x1218, 0x39c2, 0x9610, 0x6d8e, 0xdc87, 0xd37, 0x0, 0x1);
        gbc.writeMem(0x1218, { 0xc });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x39c2, gbc.sp());
        EXPECT(0x1219, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 03BA
        gbc.setState(0xe97c, 0xdc71, 0xd8a0, 0x7ff5, 0x215, 0xd6fe, 0x1, 0x1);
        gbc.writeMem(0xe97c, { 0xc });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xdc71, gbc.sp());
        EXPECT(0xe97d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xe97c));
        // 0C 03BB
        gbc.setState(0x5fde, 0x4fd4, 0x300, 0xe23, 0x191e, 0x401e, 0x1, 0x1);
        gbc.writeMem(0x5fde, { 0xc });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x4fd4, gbc.sp());
        EXPECT(0x5fdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 03BC
        gbc.setState(0x22ef, 0xd26b, 0x3790, 0xb710, 0x77ea, 0xfba6, 0x1, 0x0);
        gbc.writeMem(0x22ef, { 0xc });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xd26b, gbc.sp());
        EXPECT(0x22f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 03BD
        gbc.setState(0xc818, 0x6e9, 0x3370, 0xeee3, 0x5f88, 0x3b45, 0x0, 0x0);
        gbc.writeMem(0xc818, { 0xc });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x6e9, gbc.sp());
        EXPECT(0xc819, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xc818));
        // 0C 03BE
        gbc.setState(0xd6d2, 0x336b, 0x1150, 0xf8fb, 0xb740, 0xd524, 0x1, 0x1);
        gbc.writeMem(0xd6d2, { 0xc });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x336b, gbc.sp());
        EXPECT(0xd6d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xd6d2));
        // 0C 03BF
        gbc.setState(0x5712, 0x503b, 0xb0, 0x96a5, 0x481d, 0x2db8, 0x1, 0x0);
        gbc.writeMem(0x5712, { 0xc });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x503b, gbc.sp());
        EXPECT(0x5713, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 03C0
        gbc.setState(0x7dfa, 0xb015, 0xe8e0, 0xafd, 0x4f73, 0xad2c, 0x1, 0x1);
        gbc.writeMem(0x7dfa, { 0xc });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xb015, gbc.sp());
        EXPECT(0x7dfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 03C1
        gbc.setState(0x47f0, 0x443d, 0x9b80, 0x541a, 0x589, 0x5e81, 0x0, 0x0);
        gbc.writeMem(0x47f0, { 0xc });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x443d, gbc.sp());
        EXPECT(0x47f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 03C2
        gbc.setState(0xe37c, 0x3b34, 0x8c80, 0x2142, 0x9c24, 0xd021, 0x1, 0x1);
        gbc.writeMem(0xe37c, { 0xc });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x3b34, gbc.sp());
        EXPECT(0xe37d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xe37c));
        // 0C 03C3
        gbc.setState(0x85b3, 0x93a4, 0x47c0, 0x3cbd, 0x3f80, 0xb275, 0x0, 0x1);
        gbc.writeMem(0x85b3, { 0xc });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x93a4, gbc.sp());
        EXPECT(0x85b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x85b3));
        // 0C 03C4
        gbc.setState(0x1287, 0x75ad, 0xb8a0, 0x1e69, 0x2317, 0x633a, 0x1, 0x1);
        gbc.writeMem(0x1287, { 0xc });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x75ad, gbc.sp());
        EXPECT(0x1288, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 03C5
        gbc.setState(0x375b, 0xc149, 0x9f90, 0xeb3f, 0x9e31, 0xf7f8, 0x1, 0x0);
        gbc.writeMem(0x375b, { 0xc });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xc149, gbc.sp());
        EXPECT(0x375c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 03C6
        gbc.setState(0x85ea, 0xccb2, 0x7940, 0xc4fe, 0x3e5d, 0x94fe, 0x0, 0x0);
        gbc.writeMem(0x85ea, { 0xc });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xccb2, gbc.sp());
        EXPECT(0x85eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x85ea));
        // 0C 03C7
        gbc.setState(0x667b, 0x6dcf, 0x91b0, 0x6075, 0xd6b5, 0x8b3b, 0x0, 0x0);
        gbc.writeMem(0x667b, { 0xc });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x6dcf, gbc.sp());
        EXPECT(0x667c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 03C8
        gbc.setState(0x202c, 0x44c8, 0x9740, 0x16c, 0xfb2b, 0x2c4, 0x0, 0x0);
        gbc.writeMem(0x202c, { 0xc });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x44c8, gbc.sp());
        EXPECT(0x202d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 03CA
        gbc.setState(0x7371, 0x59f, 0x190, 0xf2dd, 0xff19, 0x54b3, 0x1, 0x1);
        gbc.writeMem(0x7371, { 0xc });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x59f, gbc.sp());
        EXPECT(0x7372, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 03CC
        gbc.setState(0x6e90, 0x61f1, 0xe20, 0x6960, 0x2ee8, 0xcfe5, 0x0, 0x1);
        gbc.writeMem(0x6e90, { 0xc });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x61f1, gbc.sp());
        EXPECT(0x6e91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 03CD
        gbc.setState(0xab1d, 0xd098, 0xd250, 0x86d3, 0x3deb, 0x5140, 0x0, 0x1);
        gbc.writeMem(0xab1d, { 0xc });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xd098, gbc.sp());
        EXPECT(0xab1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xab1d));
        // 0C 03CE
        gbc.setState(0x755b, 0x84b3, 0xb740, 0x854, 0x76cb, 0x3dc8, 0x0, 0x0);
        gbc.writeMem(0x755b, { 0xc });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x84b3, gbc.sp());
        EXPECT(0x755c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 03CF
        gbc.setState(0xac1e, 0x341a, 0x3c90, 0xfa80, 0x5a99, 0xa6f2, 0x1, 0x1);
        gbc.writeMem(0xac1e, { 0xc });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x341a, gbc.sp());
        EXPECT(0xac1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xac1e));
        // 0C 03D0
        gbc.setState(0xaea7, 0xfde8, 0x1940, 0xc63a, 0x5e13, 0x20a5, 0x0, 0x1);
        gbc.writeMem(0xaea7, { 0xc });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xfde8, gbc.sp());
        EXPECT(0xaea8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xaea7));
        // 0C 03D1
        gbc.setState(0x6d9b, 0x8158, 0xbfb0, 0xe214, 0x67bd, 0xc574, 0x1, 0x0);
        gbc.writeMem(0x6d9b, { 0xc });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x8158, gbc.sp());
        EXPECT(0x6d9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 03D2
        gbc.setState(0xe19b, 0x94f4, 0xe280, 0x1197, 0xe233, 0x3e53, 0x0, 0x1);
        gbc.writeMem(0xe19b, { 0xc });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x94f4, gbc.sp());
        EXPECT(0xe19c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xe19b));
        // 0C 03D3
        gbc.setState(0x8865, 0x106c, 0xbbe0, 0xecfe, 0x114d, 0x4a50, 0x0, 0x0);
        gbc.writeMem(0x8865, { 0xc });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x106c, gbc.sp());
        EXPECT(0x8866, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x8865));
        // 0C 03D4
        gbc.setState(0x1e2, 0x43, 0xf6a0, 0x998d, 0xb8ad, 0xc45c, 0x1, 0x1);
        gbc.writeMem(0x1e2, { 0xc });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x43, gbc.sp());
        EXPECT(0x1e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 03D5
        gbc.setState(0x4367, 0x6c37, 0x3b60, 0x247, 0x231e, 0xcd79, 0x1, 0x1);
        gbc.writeMem(0x4367, { 0xc });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x6c37, gbc.sp());
        EXPECT(0x4368, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 03D6
        gbc.setState(0x9472, 0xbb3b, 0x97b0, 0xef2a, 0x73f7, 0xc986, 0x0, 0x0);
        gbc.writeMem(0x9472, { 0xc });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xbb3b, gbc.sp());
        EXPECT(0x9473, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x9472));
        // 0C 03D7
        gbc.setState(0xbd09, 0xed94, 0xd090, 0x8588, 0x5831, 0x135f, 0x0, 0x0);
        gbc.writeMem(0xbd09, { 0xc });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xed94, gbc.sp());
        EXPECT(0xbd0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xbd09));
        // 0C 03D8
        gbc.setState(0x132f, 0x5e28, 0xa830, 0x77a8, 0x9906, 0xae82, 0x0, 0x0);
        gbc.writeMem(0x132f, { 0xc });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x5e28, gbc.sp());
        EXPECT(0x1330, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 03D9
        gbc.setState(0xda96, 0xda68, 0x2a50, 0xb099, 0xc35d, 0x3d09, 0x1, 0x1);
        gbc.writeMem(0xda96, { 0xc });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xda68, gbc.sp());
        EXPECT(0xda97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xda96));
        // 0C 03DA
        gbc.setState(0x7c69, 0xf747, 0x5ac0, 0x7d3d, 0xc54e, 0x41c0, 0x0, 0x0);
        gbc.writeMem(0x7c69, { 0xc });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xf747, gbc.sp());
        EXPECT(0x7c6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 03DB
        gbc.setState(0x665e, 0xfccd, 0xe180, 0x9235, 0x111a, 0xa63b, 0x0, 0x1);
        gbc.writeMem(0x665e, { 0xc });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xfccd, gbc.sp());
        EXPECT(0x665f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 03DC
        gbc.setState(0x6f8b, 0x9dc, 0x8ab0, 0x3950, 0x2651, 0x9d95, 0x0, 0x1);
        gbc.writeMem(0x6f8b, { 0xc });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x9dc, gbc.sp());
        EXPECT(0x6f8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 03DD
        gbc.setState(0x2cf4, 0x1559, 0xb2f0, 0xc921, 0x692e, 0xf678, 0x0, 0x0);
        gbc.writeMem(0x2cf4, { 0xc });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x1559, gbc.sp());
        EXPECT(0x2cf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 03DE
        gbc.setState(0x40f9, 0x123f, 0xe10, 0xa108, 0x5711, 0x15a3, 0x1, 0x1);
        gbc.writeMem(0x40f9, { 0xc });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x123f, gbc.sp());
        EXPECT(0x40fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 03DF
        gbc.setState(0x6c3d, 0x848d, 0x5c30, 0xe95d, 0xeec0, 0x3c80, 0x0, 0x0);
        gbc.writeMem(0x6c3d, { 0xc });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x848d, gbc.sp());
        EXPECT(0x6c3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 03E0
        gbc.setState(0x2a9e, 0x9a61, 0x8e40, 0xae44, 0xbb8f, 0xdd8e, 0x1, 0x1);
        gbc.writeMem(0x2a9e, { 0xc });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x9a61, gbc.sp());
        EXPECT(0x2a9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 03E1
        gbc.setState(0x5b40, 0x3abf, 0x5710, 0x8b63, 0x242, 0x76e9, 0x0, 0x0);
        gbc.writeMem(0x5b40, { 0xc });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x3abf, gbc.sp());
        EXPECT(0x5b41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 0C 03E2
        gbc.setState(0x43fe, 0xc940, 0x24e0, 0xbef6, 0x6531, 0x30a1, 0x1, 0x1);
        gbc.writeMem(0x43fe, { 0xc });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xc940, gbc.sp());
        EXPECT(0x43ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 0C 03E4
        gbc.setState(0x85d1, 0xd4a2, 0x8990, 0xcbb6, 0xef51, 0xd316, 0x1, 0x1);
        gbc.writeMem(0x85d1, { 0xc });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xd4a2, gbc.sp());
        EXPECT(0x85d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x85d1));
        // 0C 03E7
        gbc.setState(0x1b76, 0x4953, 0xaa90, 0x8024, 0xb9bb, 0xd8b8, 0x0, 0x0);
        gbc.writeMem(0x1b76, { 0xc });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x4953, gbc.sp());
        EXPECT(0x1b77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
    }
