    TEST(gbcemu, opcode_cb_8e) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 8E 0000
        gbc.setState(0x64a4, 0x46bf, 0x2180, 0x14d6, 0xf950, 0x605b, 0x1, 0x1);
        gbc.writeMem(0x605b, { 0x3d });
        gbc.writeMem(0x64a4, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x46bf);
        EXPECT(gbc.pc(), 0x64a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8E 0003
        gbc.setState(0x8970, 0x291d, 0x3930, 0x97be, 0x9cec, 0xea4a, 0x0, 0x1);
        gbc.writeMem(0x8970, { 0xcb, 0x8e });
        gbc.writeMem(0xea4a, { 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x291d);
        EXPECT(gbc.pc(), 0x8972);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8970), 0xcb);
        EXPECT(gbc.readMem(0x8971), 0x8e);
        EXPECT(gbc.readMem(0xea4a), 0x49);
        // CB 8E 0004
        gbc.setState(0x2765, 0x655b, 0xa780, 0xd3b, 0x2c5a, 0x5df8, 0x0, 0x0);
        gbc.writeMem(0x2765, { 0xcb, 0x8e });
        gbc.writeMem(0x5df8, { 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x655b);
        EXPECT(gbc.pc(), 0x2767);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8E 0005
        gbc.setState(0x8466, 0xf5c5, 0xe670, 0xbb85, 0xbe44, 0xaa2b, 0x1, 0x0);
        gbc.writeMem(0x8466, { 0xcb, 0x8e });
        gbc.writeMem(0xaa2b, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xf5c5);
        EXPECT(gbc.pc(), 0x8468);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8466), 0xcb);
        EXPECT(gbc.readMem(0x8467), 0x8e);
        EXPECT(gbc.readMem(0xaa2b), 0x58);
        // CB 8E 0007
        gbc.setState(0x2087, 0xf5d, 0x6470, 0x4b48, 0x6ea0, 0xd47a, 0x1, 0x1);
        gbc.writeMem(0x2087, { 0xcb, 0x8e });
        gbc.writeMem(0xd47a, { 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xf5d);
        EXPECT(gbc.pc(), 0x2089);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd47a), 0xf1);
        // CB 8E 0008
        gbc.setState(0x7967, 0x4034, 0x3310, 0xdf9f, 0x97e2, 0xe9c4, 0x1, 0x1);
        gbc.writeMem(0x7967, { 0xcb, 0x8e });
        gbc.writeMem(0xe9c4, { 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x4034);
        EXPECT(gbc.pc(), 0x7969);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9c4), 0xe0);
        // CB 8E 0009
        gbc.setState(0x9ef, 0x6226, 0xe8a0, 0xf80c, 0xb4d4, 0x31c0, 0x0, 0x1);
        gbc.writeMem(0x9ef, { 0xcb, 0x8e });
        gbc.writeMem(0x31c0, { 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x6226);
        EXPECT(gbc.pc(), 0x9f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8E 000A
        gbc.setState(0x8536, 0x8ec0, 0x68a0, 0x10e0, 0x7955, 0xc705, 0x0, 0x0);
        gbc.writeMem(0x8536, { 0xcb, 0x8e });
        gbc.writeMem(0xc705, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x8ec0);
        EXPECT(gbc.pc(), 0x8538);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8536), 0xcb);
        EXPECT(gbc.readMem(0x8537), 0x8e);
        EXPECT(gbc.readMem(0xc705), 0x8c);
        // CB 8E 000B
        gbc.setState(0x8bdd, 0x963e, 0x2370, 0x8f80, 0xcc4, 0x2a69, 0x1, 0x1);
        gbc.writeMem(0x2a69, { 0x30 });
        gbc.writeMem(0x8bdd, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x963e);
        EXPECT(gbc.pc(), 0x8bdf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bdd), 0xcb);
        EXPECT(gbc.readMem(0x8bde), 0x8e);
        // CB 8E 000D
        gbc.setState(0x5641, 0xdc34, 0xfc50, 0x9818, 0x66, 0xe61e, 0x1, 0x1);
        gbc.writeMem(0x5641, { 0xcb, 0x8e });
        gbc.writeMem(0xe61e, { 0x76 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xdc34);
        EXPECT(gbc.pc(), 0x5643);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe61e), 0x74);
        // CB 8E 000E
        gbc.setState(0xe45a, 0x641d, 0x4480, 0xbcf7, 0x2266, 0x710, 0x0, 0x1);
        gbc.writeMem(0x710, { 0x81 });
        gbc.writeMem(0xe45a, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x641d);
        EXPECT(gbc.pc(), 0xe45c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe45a), 0xcb);
        EXPECT(gbc.readMem(0xe45b), 0x8e);
        // CB 8E 000F
        gbc.setState(0x95b2, 0x91e9, 0x80b0, 0xe425, 0xa130, 0x258, 0x0, 0x0);
        gbc.writeMem(0x258, { 0x8 });
        gbc.writeMem(0x95b2, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x91e9);
        EXPECT(gbc.pc(), 0x95b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95b2), 0xcb);
        EXPECT(gbc.readMem(0x95b3), 0x8e);
        // CB 8E 0010
        gbc.setState(0x6011, 0xbc72, 0x7940, 0x293d, 0x7661, 0x5b47, 0x0, 0x0);
        gbc.writeMem(0x5b47, { 0xbc });
        gbc.writeMem(0x6011, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xbc72);
        EXPECT(gbc.pc(), 0x6013);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8E 0011
        gbc.setState(0x748c, 0xc585, 0x33b0, 0x4b98, 0xb08d, 0x3fc2, 0x0, 0x1);
        gbc.writeMem(0x3fc2, { 0xcd });
        gbc.writeMem(0x748c, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xc585);
        EXPECT(gbc.pc(), 0x748e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8E 0012
        gbc.setState(0x6a7f, 0xb2b6, 0xd3e0, 0xb76c, 0x7fe8, 0xba0e, 0x1, 0x0);
        gbc.writeMem(0x6a7f, { 0xcb, 0x8e });
        gbc.writeMem(0xba0e, { 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xb2b6);
        EXPECT(gbc.pc(), 0x6a81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba0e), 0xc);
        // CB 8E 0013
        gbc.setState(0x9218, 0xe905, 0x7bf0, 0xfe05, 0x76d3, 0x32d6, 0x1, 0x1);
        gbc.writeMem(0x32d6, { 0xec });
        gbc.writeMem(0x9218, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xe905);
        EXPECT(gbc.pc(), 0x921a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9218), 0xcb);
        EXPECT(gbc.readMem(0x9219), 0x8e);
        // CB 8E 0014
        gbc.setState(0x14a, 0x548f, 0x4020, 0xb73e, 0x560e, 0x3841, 0x0, 0x1);
        gbc.writeMem(0x14a, { 0xcb, 0x8e });
        gbc.writeMem(0x3841, { 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x548f);
        EXPECT(gbc.pc(), 0x14c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8E 0015
        gbc.setState(0x7cd4, 0xf304, 0x7e50, 0xd5a1, 0xd765, 0x845b, 0x0, 0x1);
        gbc.writeMem(0x7cd4, { 0xcb, 0x8e });
        gbc.writeMem(0x845b, { 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xf304);
        EXPECT(gbc.pc(), 0x7cd6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x845b), 0x4c);
        // CB 8E 0017
        gbc.setState(0xed87, 0x8557, 0xc370, 0x833, 0x2099, 0xac1e, 0x1, 0x1);
        gbc.writeMem(0xac1e, { 0xa7 });
        gbc.writeMem(0xed87, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x8557);
        EXPECT(gbc.pc(), 0xed89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac1e), 0xa5);
        EXPECT(gbc.readMem(0xed87), 0xcb);
        EXPECT(gbc.readMem(0xed88), 0x8e);
        // CB 8E 001C
        gbc.setState(0x911a, 0x2192, 0x660, 0x2686, 0xc643, 0x4ef2, 0x0, 0x0);
        gbc.writeMem(0x4ef2, { 0x10 });
        gbc.writeMem(0x911a, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x2192);
        EXPECT(gbc.pc(), 0x911c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x911a), 0xcb);
        EXPECT(gbc.readMem(0x911b), 0x8e);
        // CB 8E 001E
        gbc.setState(0xda87, 0xfbd4, 0x5710, 0xae01, 0x9759, 0xf194, 0x1, 0x0);
        gbc.writeMem(0xda87, { 0xcb, 0x8e });
        gbc.writeMem(0xf194, { 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xfbd4);
        EXPECT(gbc.pc(), 0xda89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda87), 0xcb);
        EXPECT(gbc.readMem(0xda88), 0x8e);
        EXPECT(gbc.readMem(0xf194), 0x59);
        // CB 8E 001F
        gbc.setState(0x457e, 0x9e12, 0x1a30, 0xde1e, 0xf80e, 0xe962, 0x1, 0x0);
        gbc.writeMem(0x457e, { 0xcb, 0x8e });
        gbc.writeMem(0xe962, { 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x9e12);
        EXPECT(gbc.pc(), 0x4580);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe962), 0x50);
        // CB 8E 0020
        gbc.setState(0x6fb6, 0xb71c, 0x3c90, 0x5595, 0x2463, 0x86dc, 0x1, 0x0);
        gbc.writeMem(0x6fb6, { 0xcb, 0x8e });
        gbc.writeMem(0x86dc, { 0x1c });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xb71c);
        EXPECT(gbc.pc(), 0x6fb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86dc), 0x1c);
        // CB 8E 0021
        gbc.setState(0xcd1a, 0xc29a, 0xda20, 0xcb01, 0x87cf, 0xb1f6, 0x0, 0x0);
        gbc.writeMem(0xb1f6, { 0x52 });
        gbc.writeMem(0xcd1a, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xc29a);
        EXPECT(gbc.pc(), 0xcd1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1f6), 0x50);
        EXPECT(gbc.readMem(0xcd1a), 0xcb);
        EXPECT(gbc.readMem(0xcd1b), 0x8e);
        // CB 8E 0022
        gbc.setState(0x4cbc, 0x59d3, 0x6ba0, 0x4949, 0x6384, 0x5d1f, 0x1, 0x1);
        gbc.writeMem(0x4cbc, { 0xcb, 0x8e });
        gbc.writeMem(0x5d1f, { 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x59d3);
        EXPECT(gbc.pc(), 0x4cbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8E 0023
        gbc.setState(0x5db7, 0x70d1, 0xe060, 0x96b7, 0xc9b5, 0xb85e, 0x0, 0x0);
        gbc.writeMem(0x5db7, { 0xcb, 0x8e });
        gbc.writeMem(0xb85e, { 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x70d1);
        EXPECT(gbc.pc(), 0x5db9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb85e), 0x80);
        // CB 8E 0025
        gbc.setState(0x7668, 0xdc6, 0x8b0, 0x3a89, 0xfdda, 0xff53, 0x0, 0x1);
        gbc.writeMem(0x7668, { 0xcb, 0x8e });
        gbc.writeMem(0xff53, { 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xdc6);
        EXPECT(gbc.pc(), 0x766a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff53), 0xd0);
        // CB 8E 0028
        gbc.setState(0x58d0, 0x7f42, 0x1360, 0x2d92, 0xc029, 0xb2ba, 0x0, 0x0);
        gbc.writeMem(0x58d0, { 0xcb, 0x8e });
        gbc.writeMem(0xb2ba, { 0xa8 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x7f42);
        EXPECT(gbc.pc(), 0x58d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2ba), 0xa8);
        // CB 8E 0029
        gbc.setState(0x4546, 0x68e5, 0x3140, 0x9269, 0xa96a, 0x8f49, 0x1, 0x0);
        gbc.writeMem(0x4546, { 0xcb, 0x8e });
        gbc.writeMem(0x8f49, { 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x68e5);
        EXPECT(gbc.pc(), 0x4548);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f49), 0x5c);
        // CB 8E 002B
        gbc.setState(0xe703, 0x2a9a, 0x62c0, 0x1dcd, 0x2dd1, 0xae95, 0x0, 0x1);
        gbc.writeMem(0xae95, { 0x57 });
        gbc.writeMem(0xe703, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x2a9a);
        EXPECT(gbc.pc(), 0xe705);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae95), 0x55);
        EXPECT(gbc.readMem(0xe703), 0xcb);
        EXPECT(gbc.readMem(0xe704), 0x8e);
        // CB 8E 002C
        gbc.setState(0xabee, 0xffe4, 0xc740, 0x455a, 0xb2d8, 0xebec, 0x0, 0x1);
        gbc.writeMem(0xabee, { 0xcb, 0x8e });
        gbc.writeMem(0xebec, { 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xffe4);
        EXPECT(gbc.pc(), 0xabf0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabee), 0xcb);
        EXPECT(gbc.readMem(0xabef), 0x8e);
        EXPECT(gbc.readMem(0xebec), 0xf4);
        // CB 8E 002E
        gbc.setState(0x8541, 0x9af6, 0xe400, 0xb756, 0x3e7f, 0x3d6b, 0x0, 0x0);
        gbc.writeMem(0x3d6b, { 0xd4 });
        gbc.writeMem(0x8541, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x9af6);
        EXPECT(gbc.pc(), 0x8543);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8541), 0xcb);
        EXPECT(gbc.readMem(0x8542), 0x8e);
        // CB 8E 002F
        gbc.setState(0x6843, 0x1237, 0x8210, 0x5048, 0x93e9, 0xbcc9, 0x1, 0x0);
        gbc.writeMem(0x6843, { 0xcb, 0x8e });
        gbc.writeMem(0xbcc9, { 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x1237);
        EXPECT(gbc.pc(), 0x6845);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcc9), 0x38);
        // CB 8E 0031
        gbc.setState(0x117d, 0xbe33, 0x7350, 0x5680, 0xa97a, 0x5001, 0x0, 0x1);
        gbc.writeMem(0x117d, { 0xcb, 0x8e });
        gbc.writeMem(0x5001, { 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xbe33);
        EXPECT(gbc.pc(), 0x117f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8E 0032
        gbc.setState(0xcf1b, 0xe8fc, 0xa160, 0x95f7, 0xa51d, 0x3e44, 0x1, 0x1);
        gbc.writeMem(0x3e44, { 0x34 });
        gbc.writeMem(0xcf1b, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xe8fc);
        EXPECT(gbc.pc(), 0xcf1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf1b), 0xcb);
        EXPECT(gbc.readMem(0xcf1c), 0x8e);
        // CB 8E 0033
        gbc.setState(0x409e, 0x6149, 0x89a0, 0x39b1, 0xea62, 0x5cf5, 0x0, 0x1);
        gbc.writeMem(0x409e, { 0xcb, 0x8e });
        gbc.writeMem(0x5cf5, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x6149);
        EXPECT(gbc.pc(), 0x40a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8E 0034
        gbc.setState(0x3b3e, 0x7e53, 0xa610, 0x9587, 0xe5e1, 0xd0bd, 0x0, 0x0);
        gbc.writeMem(0x3b3e, { 0xcb, 0x8e });
        gbc.writeMem(0xd0bd, { 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x7e53);
        EXPECT(gbc.pc(), 0x3b40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0bd), 0xb0);
        // CB 8E 0035
        gbc.setState(0x9b34, 0x47b9, 0x5810, 0x27c0, 0x1b38, 0x22a3, 0x0, 0x1);
        gbc.writeMem(0x22a3, { 0x28 });
        gbc.writeMem(0x9b34, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x47b9);
        EXPECT(gbc.pc(), 0x9b36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b34), 0xcb);
        EXPECT(gbc.readMem(0x9b35), 0x8e);
        // CB 8E 0037
        gbc.setState(0x5af0, 0x6a65, 0xd7f0, 0x7163, 0x69c7, 0x90b1, 0x1, 0x0);
        gbc.writeMem(0x5af0, { 0xcb, 0x8e });
        gbc.writeMem(0x90b1, { 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x6a65);
        EXPECT(gbc.pc(), 0x5af2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90b1), 0xc);
        // CB 8E 0038
        gbc.setState(0x7f09, 0xc8ff, 0xb8d0, 0x6c14, 0x6573, 0xe926, 0x1, 0x0);
        gbc.writeMem(0x7f09, { 0xcb, 0x8e });
        gbc.writeMem(0xe926, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xc8ff);
        EXPECT(gbc.pc(), 0x7f0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe926), 0x10);
        // CB 8E 0039
        gbc.setState(0x42bb, 0x8ee5, 0xae10, 0x92b8, 0x2339, 0xc44a, 0x0, 0x0);
        gbc.writeMem(0x42bb, { 0xcb, 0x8e });
        gbc.writeMem(0xc44a, { 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x8ee5);
        EXPECT(gbc.pc(), 0x42bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc44a), 0x1);
        // CB 8E 003A
        gbc.setState(0xb2e5, 0xdc2d, 0x5300, 0xf705, 0x3e4, 0xb847, 0x0, 0x0);
        gbc.writeMem(0xb2e5, { 0xcb, 0x8e });
        gbc.writeMem(0xb847, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xdc2d);
        EXPECT(gbc.pc(), 0xb2e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2e5), 0xcb);
        EXPECT(gbc.readMem(0xb2e6), 0x8e);
        EXPECT(gbc.readMem(0xb847), 0x29);
        // CB 8E 003B
        gbc.setState(0x6248, 0x7df3, 0xb7c0, 0x5b5e, 0x473b, 0xa723, 0x0, 0x1);
        gbc.writeMem(0x6248, { 0xcb, 0x8e });
        gbc.writeMem(0xa723, { 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x7df3);
        EXPECT(gbc.pc(), 0x624a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa723), 0xb0);
        // CB 8E 003C
        gbc.setState(0xc562, 0x215, 0x85b0, 0x5e37, 0x17fa, 0xbc1e, 0x0, 0x1);
        gbc.writeMem(0xbc1e, { 0xfc });
        gbc.writeMem(0xc562, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x215);
        EXPECT(gbc.pc(), 0xc564);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc1e), 0xfc);
        EXPECT(gbc.readMem(0xc562), 0xcb);
        EXPECT(gbc.readMem(0xc563), 0x8e);
        // CB 8E 003D
        gbc.setState(0xdd67, 0xf375, 0x48b0, 0x2353, 0x976f, 0xa86f, 0x0, 0x0);
        gbc.writeMem(0xa86f, { 0xda });
        gbc.writeMem(0xdd67, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xf375);
        EXPECT(gbc.pc(), 0xdd69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa86f), 0xd8);
        EXPECT(gbc.readMem(0xdd67), 0xcb);
        EXPECT(gbc.readMem(0xdd68), 0x8e);
        // CB 8E 003F
        gbc.setState(0xd6d5, 0x62b, 0x1200, 0xaae1, 0xdcf, 0x6f2e, 0x0, 0x0);
        gbc.writeMem(0x6f2e, { 0xb9 });
        gbc.writeMem(0xd6d5, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x62b);
        EXPECT(gbc.pc(), 0xd6d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6d5), 0xcb);
        EXPECT(gbc.readMem(0xd6d6), 0x8e);
        // CB 8E 0041
        gbc.setState(0x6f1a, 0xbbc5, 0xf580, 0x648e, 0xaa10, 0xac68, 0x1, 0x1);
        gbc.writeMem(0x6f1a, { 0xcb, 0x8e });
        gbc.writeMem(0xac68, { 0x63 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xbbc5);
        EXPECT(gbc.pc(), 0x6f1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac68), 0x61);
        // CB 8E 0042
        gbc.setState(0x61bf, 0x37b9, 0x3e90, 0x5984, 0x7b9f, 0x6804, 0x0, 0x0);
        gbc.writeMem(0x61bf, { 0xcb, 0x8e });
        gbc.writeMem(0x6804, { 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x37b9);
        EXPECT(gbc.pc(), 0x61c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8E 0043
        gbc.setState(0x3149, 0xa67, 0xbd20, 0xf92e, 0x436, 0xad6b, 0x0, 0x0);
        gbc.writeMem(0x3149, { 0xcb, 0x8e });
        gbc.writeMem(0xad6b, { 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xa67);
        EXPECT(gbc.pc(), 0x314b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad6b), 0xd8);
        // CB 8E 0045
        gbc.setState(0x3044, 0xe874, 0x2d40, 0xe6f0, 0x4bfb, 0xb89e, 0x0, 0x0);
        gbc.writeMem(0x3044, { 0xcb, 0x8e });
        gbc.writeMem(0xb89e, { 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xe874);
        EXPECT(gbc.pc(), 0x3046);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb89e), 0x18);
        // CB 8E 0046
        gbc.setState(0x5aac, 0x59eb, 0x75a0, 0xdcef, 0x9261, 0xfb44, 0x0, 0x1);
        gbc.writeMem(0x5aac, { 0xcb, 0x8e });
        gbc.writeMem(0xfb44, { 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x59eb);
        EXPECT(gbc.pc(), 0x5aae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfb44), 0xbd);
        // CB 8E 0047
        gbc.setState(0xb94d, 0x9461, 0x76d0, 0x2c44, 0x8fad, 0xd4b8, 0x0, 0x0);
        gbc.writeMem(0xb94d, { 0xcb, 0x8e });
        gbc.writeMem(0xd4b8, { 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x9461);
        EXPECT(gbc.pc(), 0xb94f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb94d), 0xcb);
        EXPECT(gbc.readMem(0xb94e), 0x8e);
        EXPECT(gbc.readMem(0xd4b8), 0x24);
        // CB 8E 0049
        gbc.setState(0xa1f0, 0xbf5c, 0x4880, 0xe961, 0x5bd7, 0x52c7, 0x1, 0x1);
        gbc.writeMem(0x52c7, { 0x44 });
        gbc.writeMem(0xa1f0, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xbf5c);
        EXPECT(gbc.pc(), 0xa1f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1f0), 0xcb);
        EXPECT(gbc.readMem(0xa1f1), 0x8e);
        // CB 8E 004C
        gbc.setState(0xe32c, 0x63b5, 0x21e0, 0x3476, 0x305d, 0x87cb, 0x0, 0x1);
        gbc.writeMem(0x87cb, { 0x1f });
        gbc.writeMem(0xe32c, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x63b5);
        EXPECT(gbc.pc(), 0xe32e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87cb), 0x1d);
        EXPECT(gbc.readMem(0xe32c), 0xcb);
        EXPECT(gbc.readMem(0xe32d), 0x8e);
        // CB 8E 004D
        gbc.setState(0xd3b0, 0xa804, 0x5de0, 0xcb0e, 0x31e8, 0xebc8, 0x1, 0x0);
        gbc.writeMem(0xd3b0, { 0xcb, 0x8e });
        gbc.writeMem(0xebc8, { 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xa804);
        EXPECT(gbc.pc(), 0xd3b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3b0), 0xcb);
        EXPECT(gbc.readMem(0xd3b1), 0x8e);
        EXPECT(gbc.readMem(0xebc8), 0xc8);
        // CB 8E 004E
        gbc.setState(0x5c65, 0x6f55, 0x4610, 0xef41, 0x25d4, 0x818a, 0x1, 0x0);
        gbc.writeMem(0x5c65, { 0xcb, 0x8e });
        gbc.writeMem(0x818a, { 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x6f55);
        EXPECT(gbc.pc(), 0x5c67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x818a), 0x51);
        // CB 8E 004F
        gbc.setState(0x8977, 0x69e3, 0x7930, 0xd04, 0xabb0, 0xc13b, 0x1, 0x1);
        gbc.writeMem(0x8977, { 0xcb, 0x8e });
        gbc.writeMem(0xc13b, { 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x69e3);
        EXPECT(gbc.pc(), 0x8979);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8977), 0xcb);
        EXPECT(gbc.readMem(0x8978), 0x8e);
        EXPECT(gbc.readMem(0xc13b), 0xe8);
        // CB 8E 0052
        gbc.setState(0x9a48, 0x3265, 0x4110, 0xf656, 0x785, 0x622d, 0x0, 0x1);
        gbc.writeMem(0x622d, { 0x1c });
        gbc.writeMem(0x9a48, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x3265);
        EXPECT(gbc.pc(), 0x9a4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a48), 0xcb);
        EXPECT(gbc.readMem(0x9a49), 0x8e);
        // CB 8E 0053
        gbc.setState(0x5233, 0x50f2, 0x3a70, 0x1f43, 0xba12, 0x8048, 0x1, 0x0);
        gbc.writeMem(0x5233, { 0xcb, 0x8e });
        gbc.writeMem(0x8048, { 0x1c });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x50f2);
        EXPECT(gbc.pc(), 0x5235);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8048), 0x1c);
        // CB 8E 0054
        gbc.setState(0x8393, 0x39f7, 0x6540, 0x7258, 0x66f5, 0x779d, 0x1, 0x0);
        gbc.writeMem(0x779d, { 0x8c });
        gbc.writeMem(0x8393, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x39f7);
        EXPECT(gbc.pc(), 0x8395);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8393), 0xcb);
        EXPECT(gbc.readMem(0x8394), 0x8e);
        // CB 8E 0055
        gbc.setState(0x8da6, 0x1085, 0x89d0, 0xd01b, 0x9f9a, 0x1807, 0x0, 0x0);
        gbc.writeMem(0x1807, { 0xa5 });
        gbc.writeMem(0x8da6, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x1085);
        EXPECT(gbc.pc(), 0x8da8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8da6), 0xcb);
        EXPECT(gbc.readMem(0x8da7), 0x8e);
        // CB 8E 0056
        gbc.setState(0x7392, 0xbd62, 0x3810, 0xc364, 0x8cae, 0xc52e, 0x1, 0x1);
        gbc.writeMem(0x7392, { 0xcb, 0x8e });
        gbc.writeMem(0xc52e, { 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xbd62);
        EXPECT(gbc.pc(), 0x7394);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc52e), 0xbd);
        // CB 8E 0058
        gbc.setState(0x689, 0xa5cd, 0x590, 0xb651, 0xff6, 0x5566, 0x0, 0x1);
        gbc.writeMem(0x689, { 0xcb, 0x8e });
        gbc.writeMem(0x5566, { 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xa5cd);
        EXPECT(gbc.pc(), 0x68b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8E 0059
        gbc.setState(0xaae, 0x5274, 0xd2b0, 0xfaaa, 0x32e1, 0xc257, 0x0, 0x1);
        gbc.writeMem(0xaae, { 0xcb, 0x8e });
        gbc.writeMem(0xc257, { 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x5274);
        EXPECT(gbc.pc(), 0xab0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc257), 0x4d);
        // CB 8E 005A
        gbc.setState(0x218d, 0xe4c7, 0x18f0, 0x48ce, 0x1304, 0xe693, 0x1, 0x0);
        gbc.writeMem(0x218d, { 0xcb, 0x8e });
        gbc.writeMem(0xe693, { 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xe4c7);
        EXPECT(gbc.pc(), 0x218f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe693), 0x44);
        // CB 8E 005B
        gbc.setState(0xd6f, 0xb8e8, 0xc400, 0x27ae, 0x3837, 0x10c0, 0x0, 0x0);
        gbc.writeMem(0xd6f, { 0xcb, 0x8e });
        gbc.writeMem(0x10c0, { 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xb8e8);
        EXPECT(gbc.pc(), 0xd71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8E 005C
        gbc.setState(0xef7f, 0x8006, 0xdf70, 0x429f, 0x5122, 0x481a, 0x1, 0x0);
        gbc.writeMem(0x481a, { 0xac });
        gbc.writeMem(0xef7f, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x8006);
        EXPECT(gbc.pc(), 0xef81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef7f), 0xcb);
        EXPECT(gbc.readMem(0xef80), 0x8e);
        // CB 8E 005D
        gbc.setState(0x5204, 0xae5b, 0x6cb0, 0x985e, 0xbff0, 0xbcb5, 0x0, 0x1);
        gbc.writeMem(0x5204, { 0xcb, 0x8e });
        gbc.writeMem(0xbcb5, { 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xae5b);
        EXPECT(gbc.pc(), 0x5206);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcb5), 0x1);
        // CB 8E 005E
        gbc.setState(0x29c6, 0xcfab, 0x4f90, 0xd208, 0xfbb0, 0xe53f, 0x1, 0x0);
        gbc.writeMem(0x29c6, { 0xcb, 0x8e });
        gbc.writeMem(0xe53f, { 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xcfab);
        EXPECT(gbc.pc(), 0x29c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe53f), 0xfc);
        // CB 8E 005F
        gbc.setState(0xaa0d, 0x944c, 0x5c50, 0xe6cc, 0x6929, 0xd55b, 0x1, 0x0);
        gbc.writeMem(0xaa0d, { 0xcb, 0x8e });
        gbc.writeMem(0xd55b, { 0xf2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x944c);
        EXPECT(gbc.pc(), 0xaa0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa0d), 0xcb);
        EXPECT(gbc.readMem(0xaa0e), 0x8e);
        EXPECT(gbc.readMem(0xd55b), 0xf0);
        // CB 8E 0060
        gbc.setState(0xcf73, 0x4f60, 0x80a0, 0x5b09, 0x57e4, 0x8e3e, 0x0, 0x1);
        gbc.writeMem(0x8e3e, { 0xa0 });
        gbc.writeMem(0xcf73, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x4f60);
        EXPECT(gbc.pc(), 0xcf75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e3e), 0xa0);
        EXPECT(gbc.readMem(0xcf73), 0xcb);
        EXPECT(gbc.readMem(0xcf74), 0x8e);
        // CB 8E 0061
        gbc.setState(0x9c05, 0x96f5, 0x3d40, 0x8ab, 0xc367, 0xcb99, 0x0, 0x1);
        gbc.writeMem(0x9c05, { 0xcb, 0x8e });
        gbc.writeMem(0xcb99, { 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x96f5);
        EXPECT(gbc.pc(), 0x9c07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c05), 0xcb);
        EXPECT(gbc.readMem(0x9c06), 0x8e);
        EXPECT(gbc.readMem(0xcb99), 0xf4);
        // CB 8E 0064
        gbc.setState(0x682e, 0x8837, 0xb380, 0x159b, 0x91f6, 0xeb64, 0x1, 0x1);
        gbc.writeMem(0x682e, { 0xcb, 0x8e });
        gbc.writeMem(0xeb64, { 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x8837);
        EXPECT(gbc.pc(), 0x6830);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb64), 0x29);
        // CB 8E 0065
        gbc.setState(0xcd39, 0xfbf7, 0xa5f0, 0x60e4, 0xfce6, 0x9fb9, 0x1, 0x0);
        gbc.writeMem(0x9fb9, { 0xbe });
        gbc.writeMem(0xcd39, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xfbf7);
        EXPECT(gbc.pc(), 0xcd3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fb9), 0xbc);
        EXPECT(gbc.readMem(0xcd39), 0xcb);
        EXPECT(gbc.readMem(0xcd3a), 0x8e);
        // CB 8E 0066
        gbc.setState(0x9c45, 0x1318, 0x910, 0x71b7, 0x50ff, 0xafa0, 0x0, 0x0);
        gbc.writeMem(0x9c45, { 0xcb, 0x8e });
        gbc.writeMem(0xafa0, { 0x1c });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x1318);
        EXPECT(gbc.pc(), 0x9c47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c45), 0xcb);
        EXPECT(gbc.readMem(0x9c46), 0x8e);
        EXPECT(gbc.readMem(0xafa0), 0x1c);
        // CB 8E 0068
        gbc.setState(0x666, 0xce66, 0x61d0, 0xcef3, 0xae84, 0xb380, 0x0, 0x1);
        gbc.writeMem(0x666, { 0xcb, 0x8e });
        gbc.writeMem(0xb380, { 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xce66);
        EXPECT(gbc.pc(), 0x668);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb380), 0xf1);
        // CB 8E 0069
        gbc.setState(0x1a51, 0x762e, 0xb280, 0x9709, 0xa609, 0xbec8, 0x1, 0x0);
        gbc.writeMem(0x1a51, { 0xcb, 0x8e });
        gbc.writeMem(0xbec8, { 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x762e);
        EXPECT(gbc.pc(), 0x1a53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbec8), 0x6c);
        // CB 8E 006B
        gbc.setState(0x77e1, 0xf146, 0x36f0, 0x2587, 0x9847, 0xcd11, 0x0, 0x0);
        gbc.writeMem(0x77e1, { 0xcb, 0x8e });
        gbc.writeMem(0xcd11, { 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xf146);
        EXPECT(gbc.pc(), 0x77e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd11), 0x84);
        // CB 8E 006C
        gbc.setState(0x3429, 0x71c5, 0x18d0, 0x6f46, 0xdce8, 0x9ac5, 0x1, 0x1);
        gbc.writeMem(0x3429, { 0xcb, 0x8e });
        gbc.writeMem(0x9ac5, { 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x71c5);
        EXPECT(gbc.pc(), 0x342b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ac5), 0x6c);
        // CB 8E 006D
        gbc.setState(0x4ddd, 0x5f34, 0xeb80, 0x35c4, 0x1865, 0x970b, 0x0, 0x0);
        gbc.writeMem(0x4ddd, { 0xcb, 0x8e });
        gbc.writeMem(0x970b, { 0x34 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x5f34);
        EXPECT(gbc.pc(), 0x4ddf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x970b), 0x34);
        // CB 8E 006E
        gbc.setState(0xd5aa, 0xa992, 0x9e50, 0x95da, 0x31a6, 0xf430, 0x1, 0x0);
        gbc.writeMem(0xd5aa, { 0xcb, 0x8e });
        gbc.writeMem(0xf430, { 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xa992);
        EXPECT(gbc.pc(), 0xd5ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5aa), 0xcb);
        EXPECT(gbc.readMem(0xd5ab), 0x8e);
        EXPECT(gbc.readMem(0xf430), 0x65);
        // CB 8E 0070
        gbc.setState(0xcee4, 0x532e, 0xc770, 0x9f04, 0x6ddd, 0x3820, 0x0, 0x1);
        gbc.writeMem(0x3820, { 0xed });
        gbc.writeMem(0xcee4, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x532e);
        EXPECT(gbc.pc(), 0xcee6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcee4), 0xcb);
        EXPECT(gbc.readMem(0xcee5), 0x8e);
        // CB 8E 0071
        gbc.setState(0x88a8, 0x28eb, 0x5a00, 0xfdeb, 0xab52, 0x4524, 0x1, 0x0);
        gbc.writeMem(0x4524, { 0x70 });
        gbc.writeMem(0x88a8, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x28eb);
        EXPECT(gbc.pc(), 0x88aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88a8), 0xcb);
        EXPECT(gbc.readMem(0x88a9), 0x8e);
        // CB 8E 0073
        gbc.setState(0xb4b0, 0xfd9f, 0x6fd0, 0xa202, 0x9156, 0x6bc6, 0x1, 0x0);
        gbc.writeMem(0x6bc6, { 0x7d });
        gbc.writeMem(0xb4b0, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xfd9f);
        EXPECT(gbc.pc(), 0xb4b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4b0), 0xcb);
        EXPECT(gbc.readMem(0xb4b1), 0x8e);
        // CB 8E 0074
        gbc.setState(0xc3ec, 0x1647, 0xa1d0, 0x265e, 0x57d7, 0xb80d, 0x0, 0x1);
        gbc.writeMem(0xb80d, { 0x51 });
        gbc.writeMem(0xc3ec, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x1647);
        EXPECT(gbc.pc(), 0xc3ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb80d), 0x51);
        EXPECT(gbc.readMem(0xc3ec), 0xcb);
        EXPECT(gbc.readMem(0xc3ed), 0x8e);
        // CB 8E 0076
        gbc.setState(0xc072, 0x924e, 0x11d0, 0xba82, 0x79d4, 0x7fef, 0x1, 0x1);
        gbc.writeMem(0x7fef, { 0x58 });
        gbc.writeMem(0xc072, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x924e);
        EXPECT(gbc.pc(), 0xc074);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc072), 0xcb);
        EXPECT(gbc.readMem(0xc073), 0x8e);
        // CB 8E 0079
        gbc.setState(0x2863, 0xf400, 0x13c0, 0xc9d, 0x330e, 0x8969, 0x0, 0x0);
        gbc.writeMem(0x2863, { 0xcb, 0x8e });
        gbc.writeMem(0x8969, { 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xf400);
        EXPECT(gbc.pc(), 0x2865);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8969), 0xc1);
        // CB 8E 007B
        gbc.setState(0x6083, 0xead9, 0x4de0, 0xcf41, 0xe1e2, 0xfc80, 0x1, 0x1);
        gbc.writeMem(0x6083, { 0xcb, 0x8e });
        gbc.writeMem(0xfc80, { 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xead9);
        EXPECT(gbc.pc(), 0x6085);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfc80), 0x29);
        // CB 8E 007E
        gbc.setState(0x11d0, 0x9ac3, 0xc8d0, 0xe1fb, 0x585f, 0xb5b7, 0x0, 0x1);
        gbc.writeMem(0x11d0, { 0xcb, 0x8e });
        gbc.writeMem(0xb5b7, { 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x9ac3);
        EXPECT(gbc.pc(), 0x11d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5b7), 0xc9);
        // CB 8E 007F
        gbc.setState(0xa2a, 0x3b6f, 0x9a60, 0x4961, 0x997c, 0xae5b, 0x1, 0x0);
        gbc.writeMem(0xa2a, { 0xcb, 0x8e });
        gbc.writeMem(0xae5b, { 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x3b6f);
        EXPECT(gbc.pc(), 0xa2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae5b), 0x61);
        // CB 8E 0080
        gbc.setState(0x8b35, 0x4df8, 0xd0e0, 0x25c0, 0x9128, 0x5a22, 0x1, 0x1);
        gbc.writeMem(0x5a22, { 0x80 });
        gbc.writeMem(0x8b35, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x4df8);
        EXPECT(gbc.pc(), 0x8b37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b35), 0xcb);
        EXPECT(gbc.readMem(0x8b36), 0x8e);
        // CB 8E 0081
        gbc.setState(0x953a, 0x52e8, 0xd800, 0xafd3, 0x1639, 0x89d5, 0x0, 0x1);
        gbc.writeMem(0x89d5, { 0x38 });
        gbc.writeMem(0x953a, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x52e8);
        EXPECT(gbc.pc(), 0x953c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89d5), 0x38);
        EXPECT(gbc.readMem(0x953a), 0xcb);
        EXPECT(gbc.readMem(0x953b), 0x8e);
        // CB 8E 0086
        gbc.setState(0xa7f7, 0xc96f, 0x4ad0, 0x7cf6, 0xde2c, 0xf2e0, 0x0, 0x0);
        gbc.writeMem(0xa7f7, { 0xcb, 0x8e });
        gbc.writeMem(0xf2e0, { 0xf2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xc96f);
        EXPECT(gbc.pc(), 0xa7f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7f7), 0xcb);
        EXPECT(gbc.readMem(0xa7f8), 0x8e);
        EXPECT(gbc.readMem(0xf2e0), 0xf0);
        // CB 8E 0087
        gbc.setState(0x8015, 0x55f1, 0x200, 0xda26, 0x507e, 0xda61, 0x1, 0x1);
        gbc.writeMem(0x8015, { 0xcb, 0x8e });
        gbc.writeMem(0xda61, { 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x55f1);
        EXPECT(gbc.pc(), 0x8017);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8015), 0xcb);
        EXPECT(gbc.readMem(0x8016), 0x8e);
        EXPECT(gbc.readMem(0xda61), 0x21);
        // CB 8E 0088
        gbc.setState(0x539c, 0x5017, 0x1720, 0xe079, 0x1c4a, 0xcdca, 0x1, 0x0);
        gbc.writeMem(0x539c, { 0xcb, 0x8e });
        gbc.writeMem(0xcdca, { 0x9b });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x5017);
        EXPECT(gbc.pc(), 0x539e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdca), 0x99);
        // CB 8E 008A
        gbc.setState(0x9c3a, 0x3d82, 0x6be0, 0x559d, 0x5f70, 0x8fb5, 0x0, 0x0);
        gbc.writeMem(0x8fb5, { 0xbe });
        gbc.writeMem(0x9c3a, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x3d82);
        EXPECT(gbc.pc(), 0x9c3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fb5), 0xbc);
        EXPECT(gbc.readMem(0x9c3a), 0xcb);
        EXPECT(gbc.readMem(0x9c3b), 0x8e);
        // CB 8E 008C
        gbc.setState(0xe3f0, 0x731c, 0xf8e0, 0xa7d3, 0xf442, 0x2dc9, 0x0, 0x0);
        gbc.writeMem(0x2dc9, { 0x3d });
        gbc.writeMem(0xe3f0, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x731c);
        EXPECT(gbc.pc(), 0xe3f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3f0), 0xcb);
        EXPECT(gbc.readMem(0xe3f1), 0x8e);
        // CB 8E 008D
        gbc.setState(0x9d6d, 0x48f9, 0x5110, 0x45ff, 0x5607, 0xec54, 0x1, 0x1);
        gbc.writeMem(0x9d6d, { 0xcb, 0x8e });
        gbc.writeMem(0xec54, { 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x48f9);
        EXPECT(gbc.pc(), 0x9d6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d6d), 0xcb);
        EXPECT(gbc.readMem(0x9d6e), 0x8e);
        EXPECT(gbc.readMem(0xec54), 0x64);
        // CB 8E 008E
        gbc.setState(0xa724, 0x50c4, 0x9ab0, 0x4a4a, 0x4fc4, 0xe5cf, 0x0, 0x0);
        gbc.writeMem(0xa724, { 0xcb, 0x8e });
        gbc.writeMem(0xe5cf, { 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x50c4);
        EXPECT(gbc.pc(), 0xa726);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa724), 0xcb);
        EXPECT(gbc.readMem(0xa725), 0x8e);
        EXPECT(gbc.readMem(0xe5cf), 0x9c);
        // CB 8E 008F
        gbc.setState(0x70e9, 0x7595, 0xfeb0, 0x1869, 0xf715, 0xae7e, 0x1, 0x1);
        gbc.writeMem(0x70e9, { 0xcb, 0x8e });
        gbc.writeMem(0xae7e, { 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x7595);
        EXPECT(gbc.pc(), 0x70eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae7e), 0x29);
        // CB 8E 0090
        gbc.setState(0xc93b, 0x8a6a, 0x26d0, 0xc8a0, 0xf5fb, 0xa9ed, 0x0, 0x0);
        gbc.writeMem(0xa9ed, { 0xa3 });
        gbc.writeMem(0xc93b, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x8a6a);
        EXPECT(gbc.pc(), 0xc93d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9ed), 0xa1);
        EXPECT(gbc.readMem(0xc93b), 0xcb);
        EXPECT(gbc.readMem(0xc93c), 0x8e);
        // CB 8E 0092
        gbc.setState(0x837e, 0xd367, 0xa4d0, 0xa35b, 0x71fa, 0x5b06, 0x1, 0x1);
        gbc.writeMem(0x5b06, { 0xd1 });
        gbc.writeMem(0x837e, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xd367);
        EXPECT(gbc.pc(), 0x8380);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x837e), 0xcb);
        EXPECT(gbc.readMem(0x837f), 0x8e);
        // CB 8E 0094
        gbc.setState(0xeeb0, 0xdac, 0x4b50, 0x7c9a, 0xc4b3, 0x6081, 0x0, 0x0);
        gbc.writeMem(0x6081, { 0xb0 });
        gbc.writeMem(0xeeb0, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xdac);
        EXPECT(gbc.pc(), 0xeeb2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeeb0), 0xcb);
        EXPECT(gbc.readMem(0xeeb1), 0x8e);
        // CB 8E 0095
        gbc.setState(0x913c, 0x49d1, 0x66d0, 0x34c6, 0x96db, 0xb39b, 0x1, 0x1);
        gbc.writeMem(0x913c, { 0xcb, 0x8e });
        gbc.writeMem(0xb39b, { 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x49d1);
        EXPECT(gbc.pc(), 0x913e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x913c), 0xcb);
        EXPECT(gbc.readMem(0x913d), 0x8e);
        EXPECT(gbc.readMem(0xb39b), 0x4c);
        // CB 8E 0096
        gbc.setState(0x2c0d, 0xaea4, 0x3e40, 0x5de1, 0x67b5, 0x94db, 0x0, 0x0);
        gbc.writeMem(0x2c0d, { 0xcb, 0x8e });
        gbc.writeMem(0x94db, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xaea4);
        EXPECT(gbc.pc(), 0x2c0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94db), 0x81);
        // CB 8E 0097
        gbc.setState(0x58a2, 0xd795, 0xd240, 0x99cf, 0x776f, 0xf1c0, 0x1, 0x0);
        gbc.writeMem(0x58a2, { 0xcb, 0x8e });
        gbc.writeMem(0xf1c0, { 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xd795);
        EXPECT(gbc.pc(), 0x58a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf1c0), 0x79);
        // CB 8E 009C
        gbc.setState(0x31fc, 0x366d, 0xdb20, 0xcbda, 0x74b6, 0x1cf7, 0x0, 0x1);
        gbc.writeMem(0x1cf7, { 0xdd });
        gbc.writeMem(0x31fc, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x366d);
        EXPECT(gbc.pc(), 0x31fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8E 00A0
        gbc.setState(0x78b8, 0xae61, 0xb0f0, 0x9a55, 0x4a4c, 0x90a3, 0x1, 0x1);
        gbc.writeMem(0x78b8, { 0xcb, 0x8e });
        gbc.writeMem(0x90a3, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xae61);
        EXPECT(gbc.pc(), 0x78ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90a3), 0x29);
        // CB 8E 00A1
        gbc.setState(0x8365, 0x7f8c, 0x7f10, 0x24b7, 0xe9a4, 0xaed5, 0x1, 0x0);
        gbc.writeMem(0x8365, { 0xcb, 0x8e });
        gbc.writeMem(0xaed5, { 0x35 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x7f8c);
        EXPECT(gbc.pc(), 0x8367);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8365), 0xcb);
        EXPECT(gbc.readMem(0x8366), 0x8e);
        EXPECT(gbc.readMem(0xaed5), 0x35);
        // CB 8E 00A2
        gbc.setState(0x4377, 0xd599, 0x800, 0x6f4b, 0x6793, 0x83e7, 0x0, 0x0);
        gbc.writeMem(0x4377, { 0xcb, 0x8e });
        gbc.writeMem(0x83e7, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xd599);
        EXPECT(gbc.pc(), 0x4379);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83e7), 0xbc);
        // CB 8E 00A3
        gbc.setState(0x14cd, 0xa5e7, 0xa0c0, 0x76c, 0x100b, 0x26c5, 0x1, 0x0);
        gbc.writeMem(0x14cd, { 0xcb, 0x8e });
        gbc.writeMem(0x26c5, { 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xa5e7);
        EXPECT(gbc.pc(), 0x14cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8E 00A4
        gbc.setState(0xee37, 0x5ec5, 0x9ac0, 0xdd99, 0x8215, 0x4c14, 0x0, 0x0);
        gbc.writeMem(0x4c14, { 0xb5 });
        gbc.writeMem(0xee37, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x5ec5);
        EXPECT(gbc.pc(), 0xee39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee37), 0xcb);
        EXPECT(gbc.readMem(0xee38), 0x8e);
        // CB 8E 00A5
        gbc.setState(0x4d4b, 0xa52c, 0x8bf0, 0xeadf, 0xb4a7, 0xe551, 0x1, 0x1);
        gbc.writeMem(0x4d4b, { 0xcb, 0x8e });
        gbc.writeMem(0xe551, { 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xa52c);
        EXPECT(gbc.pc(), 0x4d4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe551), 0x40);
        // CB 8E 00A7
        gbc.setState(0x1320, 0x98f5, 0xce10, 0x1548, 0x127, 0xfba5, 0x1, 0x1);
        gbc.writeMem(0x1320, { 0xcb, 0x8e });
        gbc.writeMem(0xfba5, { 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x98f5);
        EXPECT(gbc.pc(), 0x1322);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfba5), 0x61);
        // CB 8E 00A8
        gbc.setState(0xc7b8, 0x1db7, 0xb6f0, 0xebf0, 0x26c9, 0xc6c2, 0x1, 0x0);
        gbc.writeMem(0xc6c2, { 0xd1 });
        gbc.writeMem(0xc7b8, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x1db7);
        EXPECT(gbc.pc(), 0xc7ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6c2), 0xd1);
        EXPECT(gbc.readMem(0xc7b8), 0xcb);
        EXPECT(gbc.readMem(0xc7b9), 0x8e);
        // CB 8E 00A9
        gbc.setState(0xec6, 0x7aff, 0xb80, 0x14a2, 0xd822, 0x3d6b, 0x1, 0x1);
        gbc.writeMem(0xec6, { 0xcb, 0x8e });
        gbc.writeMem(0x3d6b, { 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x7aff);
        EXPECT(gbc.pc(), 0xec8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8E 00AC
        gbc.setState(0x16d2, 0xabe4, 0xe0a0, 0xd83f, 0x6b72, 0xedb0, 0x1, 0x0);
        gbc.writeMem(0x16d2, { 0xcb, 0x8e });
        gbc.writeMem(0xedb0, { 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xabe4);
        EXPECT(gbc.pc(), 0x16d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedb0), 0xa0);
        // CB 8E 00AD
        gbc.setState(0x5c5f, 0x97c7, 0xafe0, 0xa42a, 0x62b3, 0xbfb7, 0x1, 0x0);
        gbc.writeMem(0x5c5f, { 0xcb, 0x8e });
        gbc.writeMem(0xbfb7, { 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x97c7);
        EXPECT(gbc.pc(), 0x5c61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfb7), 0xf8);
        // CB 8E 00AE
        gbc.setState(0x243, 0x3b53, 0xbeb0, 0x3c4, 0xf0d5, 0x9c34, 0x0, 0x0);
        gbc.writeMem(0x243, { 0xcb, 0x8e });
        gbc.writeMem(0x9c34, { 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x3b53);
        EXPECT(gbc.pc(), 0x245);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c34), 0xa0);
        // CB 8E 00AF
        gbc.setState(0x965a, 0xbb77, 0x7b40, 0x3da7, 0xf34b, 0x3388, 0x1, 0x0);
        gbc.writeMem(0x3388, { 0x10 });
        gbc.writeMem(0x965a, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xbb77);
        EXPECT(gbc.pc(), 0x965c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x965a), 0xcb);
        EXPECT(gbc.readMem(0x965b), 0x8e);
        // CB 8E 00B0
        gbc.setState(0x33db, 0x92bb, 0xbb10, 0x5870, 0x4d2d, 0x4180, 0x1, 0x1);
        gbc.writeMem(0x33db, { 0xcb, 0x8e });
        gbc.writeMem(0x4180, { 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x92bb);
        EXPECT(gbc.pc(), 0x33dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8E 00B1
        gbc.setState(0x3dcf, 0x6e8b, 0xa640, 0xa518, 0x26b3, 0x93c9, 0x0, 0x0);
        gbc.writeMem(0x3dcf, { 0xcb, 0x8e });
        gbc.writeMem(0x93c9, { 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x6e8b);
        EXPECT(gbc.pc(), 0x3dd1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93c9), 0xbd);
        // CB 8E 00B2
        gbc.setState(0x2b51, 0x6915, 0x5c50, 0x1ee7, 0xcb7b, 0xda02, 0x1, 0x1);
        gbc.writeMem(0x2b51, { 0xcb, 0x8e });
        gbc.writeMem(0xda02, { 0x1d });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x6915);
        EXPECT(gbc.pc(), 0x2b53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda02), 0x1d);
        // CB 8E 00B6
        gbc.setState(0x9bc5, 0x1f2b, 0x2360, 0xb007, 0x6ae4, 0x979d, 0x1, 0x0);
        gbc.writeMem(0x979d, { 0x3c });
        gbc.writeMem(0x9bc5, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x1f2b);
        EXPECT(gbc.pc(), 0x9bc7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x979d), 0x3c);
        EXPECT(gbc.readMem(0x9bc5), 0xcb);
        EXPECT(gbc.readMem(0x9bc6), 0x8e);
        // CB 8E 00B7
        gbc.setState(0x608e, 0x959b, 0x1160, 0x4715, 0xba96, 0x12c, 0x0, 0x0);
        gbc.writeMem(0x12c, { 0x81 });
        gbc.writeMem(0x608e, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x959b);
        EXPECT(gbc.pc(), 0x6090);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8E 00B9
        gbc.setState(0xee64, 0xce7, 0x4a10, 0xa18a, 0x5a1c, 0x98a7, 0x0, 0x1);
        gbc.writeMem(0x98a7, { 0x5e });
        gbc.writeMem(0xee64, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xce7);
        EXPECT(gbc.pc(), 0xee66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98a7), 0x5c);
        EXPECT(gbc.readMem(0xee64), 0xcb);
        EXPECT(gbc.readMem(0xee65), 0x8e);
        // CB 8E 00BC
        gbc.setState(0xca06, 0x6c48, 0xe7c0, 0xba7b, 0x61c3, 0x4a92, 0x0, 0x1);
        gbc.writeMem(0x4a92, { 0x14 });
        gbc.writeMem(0xca06, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x6c48);
        EXPECT(gbc.pc(), 0xca08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca06), 0xcb);
        EXPECT(gbc.readMem(0xca07), 0x8e);
        // CB 8E 00BD
        gbc.setState(0xc030, 0xf658, 0xcd00, 0xa292, 0x1e95, 0xa610, 0x0, 0x1);
        gbc.writeMem(0xa610, { 0x9e });
        gbc.writeMem(0xc030, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xf658);
        EXPECT(gbc.pc(), 0xc032);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa610), 0x9c);
        EXPECT(gbc.readMem(0xc030), 0xcb);
        EXPECT(gbc.readMem(0xc031), 0x8e);
        // CB 8E 00BE
        gbc.setState(0xd87f, 0x7b64, 0xdb20, 0x77b, 0xbf2f, 0x7cbc, 0x0, 0x0);
        gbc.writeMem(0x7cbc, { 0x8d });
        gbc.writeMem(0xd87f, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x7b64);
        EXPECT(gbc.pc(), 0xd881);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd87f), 0xcb);
        EXPECT(gbc.readMem(0xd880), 0x8e);
        // CB 8E 00BF
        gbc.setState(0x7ec4, 0x5588, 0x3bc0, 0x71b8, 0x914, 0xe75b, 0x0, 0x1);
        gbc.writeMem(0x7ec4, { 0xcb, 0x8e });
        gbc.writeMem(0xe75b, { 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x5588);
        EXPECT(gbc.pc(), 0x7ec6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe75b), 0xcc);
        // CB 8E 00C0
        gbc.setState(0xda93, 0xf44, 0x880, 0x4611, 0x75c, 0xa028, 0x1, 0x0);
        gbc.writeMem(0xa028, { 0xca });
        gbc.writeMem(0xda93, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xf44);
        EXPECT(gbc.pc(), 0xda95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa028), 0xc8);
        EXPECT(gbc.readMem(0xda93), 0xcb);
        EXPECT(gbc.readMem(0xda94), 0x8e);
        // CB 8E 00C1
        gbc.setState(0x58ef, 0x6c80, 0xfe30, 0x3c23, 0x6f67, 0x11b7, 0x0, 0x0);
        gbc.writeMem(0x11b7, { 0x71 });
        gbc.writeMem(0x58ef, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x6c80);
        EXPECT(gbc.pc(), 0x58f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8E 00C3
        gbc.setState(0xd6e9, 0xac5, 0x93b0, 0x8fcf, 0x79cc, 0xb32d, 0x1, 0x1);
        gbc.writeMem(0xb32d, { 0xea });
        gbc.writeMem(0xd6e9, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xac5);
        EXPECT(gbc.pc(), 0xd6eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb32d), 0xe8);
        EXPECT(gbc.readMem(0xd6e9), 0xcb);
        EXPECT(gbc.readMem(0xd6ea), 0x8e);
        // CB 8E 00C4
        gbc.setState(0xe968, 0x3fbe, 0x1040, 0x4a91, 0x9150, 0xb369, 0x0, 0x0);
        gbc.writeMem(0xb369, { 0x66 });
        gbc.writeMem(0xe968, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x3fbe);
        EXPECT(gbc.pc(), 0xe96a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb369), 0x64);
        EXPECT(gbc.readMem(0xe968), 0xcb);
        EXPECT(gbc.readMem(0xe969), 0x8e);
        // CB 8E 00C5
        gbc.setState(0x7bf6, 0x6b82, 0xb440, 0x4b6f, 0x61f2, 0xc6e, 0x0, 0x0);
        gbc.writeMem(0xc6e, { 0xb9 });
        gbc.writeMem(0x7bf6, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x6b82);
        EXPECT(gbc.pc(), 0x7bf8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8E 00C6
        gbc.setState(0xe32e, 0xd72d, 0x4f30, 0xad83, 0x935b, 0x96a6, 0x0, 0x0);
        gbc.writeMem(0x96a6, { 0x53 });
        gbc.writeMem(0xe32e, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xd72d);
        EXPECT(gbc.pc(), 0xe330);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96a6), 0x51);
        EXPECT(gbc.readMem(0xe32e), 0xcb);
        EXPECT(gbc.readMem(0xe32f), 0x8e);
        // CB 8E 00C7
        gbc.setState(0x64bf, 0x1350, 0x8640, 0xf869, 0x216, 0xc017, 0x1, 0x1);
        gbc.writeMem(0x64bf, { 0xcb, 0x8e });
        gbc.writeMem(0xc017, { 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x1350);
        EXPECT(gbc.pc(), 0x64c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc017), 0xd8);
        // CB 8E 00C8
        gbc.setState(0xcdf8, 0xe68f, 0x2da0, 0xb0d8, 0x4698, 0x57d8, 0x0, 0x0);
        gbc.writeMem(0x57d8, { 0xa1 });
        gbc.writeMem(0xcdf8, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xe68f);
        EXPECT(gbc.pc(), 0xcdfa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdf8), 0xcb);
        EXPECT(gbc.readMem(0xcdf9), 0x8e);
        // CB 8E 00C9
        gbc.setState(0x20c1, 0xac4e, 0x2e90, 0x7f3, 0xf205, 0xa553, 0x0, 0x0);
        gbc.writeMem(0x20c1, { 0xcb, 0x8e });
        gbc.writeMem(0xa553, { 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xac4e);
        EXPECT(gbc.pc(), 0x20c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa553), 0xcd);
        // CB 8E 00CE
        gbc.setState(0x84ba, 0x2b6e, 0x1aa0, 0x2e91, 0xce17, 0x95ee, 0x0, 0x0);
        gbc.writeMem(0x84ba, { 0xcb, 0x8e });
        gbc.writeMem(0x95ee, { 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x2b6e);
        EXPECT(gbc.pc(), 0x84bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84ba), 0xcb);
        EXPECT(gbc.readMem(0x84bb), 0x8e);
        EXPECT(gbc.readMem(0x95ee), 0x24);
        // CB 8E 00CF
        gbc.setState(0x8783, 0x216f, 0xe8d0, 0x87ae, 0x717b, 0xa1c4, 0x0, 0x1);
        gbc.writeMem(0x8783, { 0xcb, 0x8e });
        gbc.writeMem(0xa1c4, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x216f);
        EXPECT(gbc.pc(), 0x8785);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8783), 0xcb);
        EXPECT(gbc.readMem(0x8784), 0x8e);
        EXPECT(gbc.readMem(0xa1c4), 0xbc);
        // CB 8E 00D0
        gbc.setState(0x89a5, 0x3517, 0x59f0, 0x377f, 0x512c, 0x16c8, 0x0, 0x1);
        gbc.writeMem(0x16c8, { 0x31 });
        gbc.writeMem(0x89a5, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x3517);
        EXPECT(gbc.pc(), 0x89a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89a5), 0xcb);
        EXPECT(gbc.readMem(0x89a6), 0x8e);
        // CB 8E 00D1
        gbc.setState(0x8ca0, 0xa06, 0x4d40, 0xf7ab, 0x3af9, 0xfa49, 0x1, 0x1);
        gbc.writeMem(0x8ca0, { 0xcb, 0x8e });
        gbc.writeMem(0xfa49, { 0xaf });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xa06);
        EXPECT(gbc.pc(), 0x8ca2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ca0), 0xcb);
        EXPECT(gbc.readMem(0x8ca1), 0x8e);
        EXPECT(gbc.readMem(0xfa49), 0xad);
        // CB 8E 00D2
        gbc.setState(0xa262, 0xe344, 0xb7d0, 0xe081, 0xf199, 0xb4e4, 0x0, 0x0);
        gbc.writeMem(0xa262, { 0xcb, 0x8e });
        gbc.writeMem(0xb4e4, { 0xea });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xe344);
        EXPECT(gbc.pc(), 0xa264);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa262), 0xcb);
        EXPECT(gbc.readMem(0xa263), 0x8e);
        EXPECT(gbc.readMem(0xb4e4), 0xe8);
        // CB 8E 00D3
        gbc.setState(0xc92c, 0x694d, 0x6d0, 0x184d, 0x18ab, 0x959e, 0x1, 0x1);
        gbc.writeMem(0x959e, { 0x23 });
        gbc.writeMem(0xc92c, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x694d);
        EXPECT(gbc.pc(), 0xc92e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x959e), 0x21);
        EXPECT(gbc.readMem(0xc92c), 0xcb);
        EXPECT(gbc.readMem(0xc92d), 0x8e);
        // CB 8E 00D4
        gbc.setState(0x179e, 0xc920, 0xed40, 0x4548, 0x7a2, 0x822e, 0x0, 0x1);
        gbc.writeMem(0x179e, { 0xcb, 0x8e });
        gbc.writeMem(0x822e, { 0x17 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xc920);
        EXPECT(gbc.pc(), 0x17a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x822e), 0x15);
        // CB 8E 00D5
        gbc.setState(0x4d5d, 0xf5f7, 0xdb50, 0xdc92, 0x5346, 0xa2ec, 0x1, 0x1);
        gbc.writeMem(0x4d5d, { 0xcb, 0x8e });
        gbc.writeMem(0xa2ec, { 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xf5f7);
        EXPECT(gbc.pc(), 0x4d5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2ec), 0x5d);
        // CB 8E 00D7
        gbc.setState(0x227a, 0xdaf8, 0x7640, 0x97fe, 0xa3a7, 0x6889, 0x1, 0x0);
        gbc.writeMem(0x227a, { 0xcb, 0x8e });
        gbc.writeMem(0x6889, { 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xdaf8);
        EXPECT(gbc.pc(), 0x227c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8E 00D8
        gbc.setState(0xd9ce, 0x98bb, 0xa350, 0x446e, 0x3906, 0xb173, 0x0, 0x1);
        gbc.writeMem(0xb173, { 0x41 });
        gbc.writeMem(0xd9ce, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x98bb);
        EXPECT(gbc.pc(), 0xd9d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb173), 0x41);
        EXPECT(gbc.readMem(0xd9ce), 0xcb);
        EXPECT(gbc.readMem(0xd9cf), 0x8e);
        // CB 8E 00D9
        gbc.setState(0xcab0, 0x370d, 0x960, 0xac6f, 0xd771, 0x61f9, 0x0, 0x0);
        gbc.writeMem(0x61f9, { 0x6d });
        gbc.writeMem(0xcab0, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x370d);
        EXPECT(gbc.pc(), 0xcab2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcab0), 0xcb);
        EXPECT(gbc.readMem(0xcab1), 0x8e);
        // CB 8E 00DA
        gbc.setState(0x9ccd, 0x8d60, 0xaf50, 0xc425, 0x368f, 0xdffd, 0x0, 0x0);
        gbc.writeMem(0x9ccd, { 0xcb, 0x8e });
        gbc.writeMem(0xdffd, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x8d60);
        EXPECT(gbc.pc(), 0x9ccf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ccd), 0xcb);
        EXPECT(gbc.readMem(0x9cce), 0x8e);
        EXPECT(gbc.readMem(0xdffd), 0x10);
        // CB 8E 00DB
        gbc.setState(0xc384, 0xb37b, 0xabe0, 0x6705, 0xd002, 0xe0b2, 0x0, 0x0);
        gbc.writeMem(0xc384, { 0xcb, 0x8e });
        gbc.writeMem(0xe0b2, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xb37b);
        EXPECT(gbc.pc(), 0xc386);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc384), 0xcb);
        EXPECT(gbc.readMem(0xc385), 0x8e);
        EXPECT(gbc.readMem(0xe0b2), 0xb8);
        // CB 8E 00DC
        gbc.setState(0x104, 0x3b6c, 0x48c0, 0x2a92, 0x86f3, 0xe4a1, 0x0, 0x1);
        gbc.writeMem(0x104, { 0xcb, 0x8e });
        gbc.writeMem(0xe4a1, { 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x3b6c);
        EXPECT(gbc.pc(), 0x106);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4a1), 0xc9);
        // CB 8E 00DD
        gbc.setState(0x68a0, 0xe572, 0x8ff0, 0xc639, 0xab2c, 0x4ba6, 0x1, 0x1);
        gbc.writeMem(0x4ba6, { 0x5c });
        gbc.writeMem(0x68a0, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xe572);
        EXPECT(gbc.pc(), 0x68a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8E 00DF
        gbc.setState(0x618c, 0x573b, 0xab50, 0xfbcb, 0x5436, 0x96ed, 0x1, 0x0);
        gbc.writeMem(0x618c, { 0xcb, 0x8e });
        gbc.writeMem(0x96ed, { 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x573b);
        EXPECT(gbc.pc(), 0x618e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96ed), 0x85);
        // CB 8E 00E0
        gbc.setState(0xfe0, 0x7f41, 0x1cc0, 0xad74, 0x4436, 0xf27b, 0x0, 0x0);
        gbc.writeMem(0xfe0, { 0xcb, 0x8e });
        gbc.writeMem(0xf27b, { 0x5 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x7f41);
        EXPECT(gbc.pc(), 0xfe2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf27b), 0x5);
        // CB 8E 00E1
        gbc.setState(0xf05, 0x72ed, 0x33c0, 0x1c22, 0x5e3c, 0xaf36, 0x1, 0x0);
        gbc.writeMem(0xf05, { 0xcb, 0x8e });
        gbc.writeMem(0xaf36, { 0x47 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x72ed);
        EXPECT(gbc.pc(), 0xf07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf36), 0x45);
        // CB 8E 00E5
        gbc.setState(0x5d2d, 0x5cd5, 0xf520, 0x6362, 0x9c59, 0xec53, 0x1, 0x1);
        gbc.writeMem(0x5d2d, { 0xcb, 0x8e });
        gbc.writeMem(0xec53, { 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x5cd5);
        EXPECT(gbc.pc(), 0x5d2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec53), 0x5d);
        // CB 8E 00E7
        gbc.setState(0x7565, 0xc43f, 0x6da0, 0x784, 0x7a02, 0xa8f3, 0x1, 0x0);
        gbc.writeMem(0x7565, { 0xcb, 0x8e });
        gbc.writeMem(0xa8f3, { 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xc43f);
        EXPECT(gbc.pc(), 0x7567);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8f3), 0x98);
        // CB 8E 00E8
        gbc.setState(0xb777, 0x14c8, 0xd5d0, 0xc2fb, 0x985b, 0xa9c2, 0x0, 0x0);
        gbc.writeMem(0xa9c2, { 0x37 });
        gbc.writeMem(0xb777, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x14c8);
        EXPECT(gbc.pc(), 0xb779);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9c2), 0x35);
        EXPECT(gbc.readMem(0xb777), 0xcb);
        EXPECT(gbc.readMem(0xb778), 0x8e);
        // CB 8E 00E9
        gbc.setState(0xccbc, 0xb6ae, 0x9f60, 0x5bbf, 0x318d, 0x9569, 0x1, 0x0);
        gbc.writeMem(0x9569, { 0x3d });
        gbc.writeMem(0xccbc, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xb6ae);
        EXPECT(gbc.pc(), 0xccbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9569), 0x3d);
        EXPECT(gbc.readMem(0xccbc), 0xcb);
        EXPECT(gbc.readMem(0xccbd), 0x8e);
        // CB 8E 00EA
        gbc.setState(0x9583, 0x1a71, 0xd6f0, 0x93d4, 0xcfbe, 0xfac3, 0x1, 0x0);
        gbc.writeMem(0x9583, { 0xcb, 0x8e });
        gbc.writeMem(0xfac3, { 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x1a71);
        EXPECT(gbc.pc(), 0x9585);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9583), 0xcb);
        EXPECT(gbc.readMem(0x9584), 0x8e);
        EXPECT(gbc.readMem(0xfac3), 0x24);
        // CB 8E 00EB
        gbc.setState(0xe1d7, 0x43f6, 0x3490, 0x1e45, 0xbef4, 0x1591, 0x1, 0x0);
        gbc.writeMem(0x1591, { 0x9c });
        gbc.writeMem(0xe1d7, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x43f6);
        EXPECT(gbc.pc(), 0xe1d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1d7), 0xcb);
        EXPECT(gbc.readMem(0xe1d8), 0x8e);
        // CB 8E 00ED
        gbc.setState(0xc21d, 0xf46, 0xfe80, 0x186d, 0xb8bb, 0xe6db, 0x0, 0x1);
        gbc.writeMem(0xc21d, { 0xcb, 0x8e });
        gbc.writeMem(0xe6db, { 0x7d });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xf46);
        EXPECT(gbc.pc(), 0xc21f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc21d), 0xcb);
        EXPECT(gbc.readMem(0xc21e), 0x8e);
        EXPECT(gbc.readMem(0xe6db), 0x7d);
        // CB 8E 00EE
        gbc.setState(0xeca6, 0xd502, 0x8970, 0xe77d, 0x9904, 0x6728, 0x0, 0x1);
        gbc.writeMem(0x6728, { 0xfd });
        gbc.writeMem(0xeca6, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xd502);
        EXPECT(gbc.pc(), 0xeca8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeca6), 0xcb);
        EXPECT(gbc.readMem(0xeca7), 0x8e);
        // CB 8E 00F0
        gbc.setState(0xbbe, 0x7073, 0x4900, 0x4157, 0xa8a7, 0x3b8c, 0x1, 0x1);
        gbc.writeMem(0xbbe, { 0xcb, 0x8e });
        gbc.writeMem(0x3b8c, { 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x7073);
        EXPECT(gbc.pc(), 0xbc0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8E 00F1
        gbc.setState(0xc7bc, 0x95fe, 0x2e80, 0xd089, 0x1154, 0xd43f, 0x0, 0x0);
        gbc.writeMem(0xc7bc, { 0xcb, 0x8e });
        gbc.writeMem(0xd43f, { 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x95fe);
        EXPECT(gbc.pc(), 0xc7be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7bc), 0xcb);
        EXPECT(gbc.readMem(0xc7bd), 0x8e);
        EXPECT(gbc.readMem(0xd43f), 0x84);
        // CB 8E 00F3
        gbc.setState(0x43df, 0xe075, 0xd990, 0x9ac6, 0xa570, 0xc192, 0x1, 0x0);
        gbc.writeMem(0x43df, { 0xcb, 0x8e });
        gbc.writeMem(0xc192, { 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xe075);
        EXPECT(gbc.pc(), 0x43e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc192), 0xa9);
        // CB 8E 00F5
        gbc.setState(0x2f83, 0x8383, 0xd290, 0xcd18, 0x658f, 0xc67a, 0x0, 0x1);
        gbc.writeMem(0x2f83, { 0xcb, 0x8e });
        gbc.writeMem(0xc67a, { 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x8383);
        EXPECT(gbc.pc(), 0x2f85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc67a), 0xe4);
        // CB 8E 00F6
        gbc.setState(0x2a4e, 0xa722, 0x2fa0, 0xb03, 0x1244, 0xd513, 0x0, 0x1);
        gbc.writeMem(0x2a4e, { 0xcb, 0x8e });
        gbc.writeMem(0xd513, { 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xa722);
        EXPECT(gbc.pc(), 0x2a50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd513), 0xcc);
        // CB 8E 00F8
        gbc.setState(0x1b28, 0x21c9, 0xc810, 0x3227, 0x366a, 0x8da2, 0x0, 0x1);
        gbc.writeMem(0x1b28, { 0xcb, 0x8e });
        gbc.writeMem(0x8da2, { 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x21c9);
        EXPECT(gbc.pc(), 0x1b2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8da2), 0x5c);
        // CB 8E 00FA
        gbc.setState(0x67ca, 0x87b4, 0xa830, 0x95ac, 0x67f1, 0x8de5, 0x0, 0x0);
        gbc.writeMem(0x67ca, { 0xcb, 0x8e });
        gbc.writeMem(0x8de5, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x87b4);
        EXPECT(gbc.pc(), 0x67cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8de5), 0x70);
        // CB 8E 00FC
        gbc.setState(0x57e9, 0x40f9, 0x3bd0, 0xebaa, 0x9794, 0x73b6, 0x0, 0x0);
        gbc.writeMem(0x57e9, { 0xcb, 0x8e });
        gbc.writeMem(0x73b6, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x40f9);
        EXPECT(gbc.pc(), 0x57eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8E 00FD
        gbc.setState(0x39fb, 0xfc52, 0x5e10, 0x3196, 0x2096, 0xa12f, 0x0, 0x1);
        gbc.writeMem(0x39fb, { 0xcb, 0x8e });
        gbc.writeMem(0xa12f, { 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xfc52);
        EXPECT(gbc.pc(), 0x39fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa12f), 0x69);
        // CB 8E 00FF
        gbc.setState(0x31ca, 0xcfac, 0xb60, 0x7af7, 0x5ba1, 0xd88d, 0x1, 0x0);
        gbc.writeMem(0x31ca, { 0xcb, 0x8e });
        gbc.writeMem(0xd88d, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xcfac);
        EXPECT(gbc.pc(), 0x31cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd88d), 0x10);
        // CB 8E 0100
        gbc.setState(0xd1a5, 0x7cac, 0x5280, 0xa5e5, 0x1ad3, 0x70e4, 0x0, 0x1);
        gbc.writeMem(0x70e4, { 0xad });
        gbc.writeMem(0xd1a5, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x7cac);
        EXPECT(gbc.pc(), 0xd1a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1a5), 0xcb);
        EXPECT(gbc.readMem(0xd1a6), 0x8e);
        // CB 8E 0101
        gbc.setState(0xea8c, 0xdab0, 0x4e20, 0x287c, 0x7888, 0x8ca1, 0x0, 0x0);
        gbc.writeMem(0x8ca1, { 0x21 });
        gbc.writeMem(0xea8c, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xdab0);
        EXPECT(gbc.pc(), 0xea8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ca1), 0x21);
        EXPECT(gbc.readMem(0xea8c), 0xcb);
        EXPECT(gbc.readMem(0xea8d), 0x8e);
        // CB 8E 0102
        gbc.setState(0x962e, 0xf7f2, 0x8a80, 0xa95d, 0x4c63, 0x93fb, 0x0, 0x0);
        gbc.writeMem(0x93fb, { 0xfb });
        gbc.writeMem(0x962e, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xf7f2);
        EXPECT(gbc.pc(), 0x9630);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93fb), 0xf9);
        EXPECT(gbc.readMem(0x962e), 0xcb);
        EXPECT(gbc.readMem(0x962f), 0x8e);
        // CB 8E 0103
        gbc.setState(0x949f, 0x85fb, 0xe260, 0xbbe9, 0xe017, 0xfe8f, 0x1, 0x0);
        gbc.writeMem(0x949f, { 0xcb, 0x8e });
        gbc.writeMem(0xfe8f, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x85fb);
        EXPECT(gbc.pc(), 0x94a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x949f), 0xcb);
        EXPECT(gbc.readMem(0x94a0), 0x8e);
        EXPECT(gbc.readMem(0xfe8f), 0x29);
        // CB 8E 0104
        gbc.setState(0x98fb, 0x5d31, 0x9a20, 0x84c1, 0x7974, 0x1c2, 0x1, 0x1);
        gbc.writeMem(0x1c2, { 0xc5 });
        gbc.writeMem(0x98fb, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x5d31);
        EXPECT(gbc.pc(), 0x98fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98fb), 0xcb);
        EXPECT(gbc.readMem(0x98fc), 0x8e);
        // CB 8E 0105
        gbc.setState(0xef5d, 0xfd03, 0x2d20, 0x816f, 0x825c, 0xb027, 0x1, 0x0);
        gbc.writeMem(0xb027, { 0x1d });
        gbc.writeMem(0xef5d, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xfd03);
        EXPECT(gbc.pc(), 0xef5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb027), 0x1d);
        EXPECT(gbc.readMem(0xef5d), 0xcb);
        EXPECT(gbc.readMem(0xef5e), 0x8e);
        // CB 8E 0106
        gbc.setState(0x5878, 0x9d3a, 0x90, 0x531d, 0x6053, 0xb86f, 0x0, 0x0);
        gbc.writeMem(0x5878, { 0xcb, 0x8e });
        gbc.writeMem(0xb86f, { 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x9d3a);
        EXPECT(gbc.pc(), 0x587a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb86f), 0xdd);
        // CB 8E 0108
        gbc.setState(0x8e73, 0xc59c, 0x2570, 0x57e6, 0x819, 0x1b5c, 0x0, 0x1);
        gbc.writeMem(0x1b5c, { 0x71 });
        gbc.writeMem(0x8e73, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xc59c);
        EXPECT(gbc.pc(), 0x8e75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e73), 0xcb);
        EXPECT(gbc.readMem(0x8e74), 0x8e);
        // CB 8E 0109
        gbc.setState(0xbcde, 0xb697, 0x6ef0, 0x6e48, 0x8c03, 0xb111, 0x1, 0x0);
        gbc.writeMem(0xb111, { 0x67 });
        gbc.writeMem(0xbcde, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xb697);
        EXPECT(gbc.pc(), 0xbce0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb111), 0x65);
        EXPECT(gbc.readMem(0xbcde), 0xcb);
        EXPECT(gbc.readMem(0xbcdf), 0x8e);
        // CB 8E 010A
        gbc.setState(0x5a1d, 0xb56f, 0x4d20, 0xc0, 0x458f, 0xd8ce, 0x1, 0x1);
        gbc.writeMem(0x5a1d, { 0xcb, 0x8e });
        gbc.writeMem(0xd8ce, { 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xb56f);
        EXPECT(gbc.pc(), 0x5a1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8ce), 0x34);
        // CB 8E 010C
        gbc.setState(0x42c7, 0x1d76, 0xc4c0, 0x505, 0xe982, 0x6e7f, 0x0, 0x0);
        gbc.writeMem(0x42c7, { 0xcb, 0x8e });
        gbc.writeMem(0x6e7f, { 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x1d76);
        EXPECT(gbc.pc(), 0x42c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8E 010F
        gbc.setState(0xde57, 0x5328, 0x72d0, 0x1c8d, 0xbe7e, 0x2cf4, 0x1, 0x1);
        gbc.writeMem(0x2cf4, { 0x64 });
        gbc.writeMem(0xde57, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x5328);
        EXPECT(gbc.pc(), 0xde59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde57), 0xcb);
        EXPECT(gbc.readMem(0xde58), 0x8e);
        // CB 8E 0110
        gbc.setState(0xdc6c, 0xddfc, 0xcd50, 0x5e4d, 0xd02c, 0x35fc, 0x0, 0x1);
        gbc.writeMem(0x35fc, { 0xcd });
        gbc.writeMem(0xdc6c, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xddfc);
        EXPECT(gbc.pc(), 0xdc6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc6c), 0xcb);
        EXPECT(gbc.readMem(0xdc6d), 0x8e);
        // CB 8E 0111
        gbc.setState(0x91b0, 0x246a, 0x46e0, 0x5515, 0xb409, 0x4690, 0x0, 0x1);
        gbc.writeMem(0x4690, { 0x54 });
        gbc.writeMem(0x91b0, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x246a);
        EXPECT(gbc.pc(), 0x91b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91b0), 0xcb);
        EXPECT(gbc.readMem(0x91b1), 0x8e);
        // CB 8E 0112
        gbc.setState(0x3d50, 0x20b7, 0xa30, 0x2dd5, 0x1114, 0xf267, 0x0, 0x0);
        gbc.writeMem(0x3d50, { 0xcb, 0x8e });
        gbc.writeMem(0xf267, { 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x20b7);
        EXPECT(gbc.pc(), 0x3d52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf267), 0xb1);
        // CB 8E 0113
        gbc.setState(0xe616, 0x9ece, 0x2c00, 0xbdc5, 0x7b4e, 0xe6c8, 0x1, 0x1);
        gbc.writeMem(0xe616, { 0xcb, 0x8e });
        gbc.writeMem(0xe6c8, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x9ece);
        EXPECT(gbc.pc(), 0xe618);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe616), 0xcb);
        EXPECT(gbc.readMem(0xe617), 0x8e);
        EXPECT(gbc.readMem(0xe6c8), 0xd9);
        // CB 8E 0114
        gbc.setState(0xb691, 0x105c, 0x7e80, 0xd3be, 0xeeb2, 0x3b45, 0x1, 0x1);
        gbc.writeMem(0x3b45, { 0x10 });
        gbc.writeMem(0xb691, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x105c);
        EXPECT(gbc.pc(), 0xb693);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb691), 0xcb);
        EXPECT(gbc.readMem(0xb692), 0x8e);
        // CB 8E 0116
        gbc.setState(0x231f, 0x807f, 0x6a60, 0xf4e2, 0xce69, 0xd414, 0x1, 0x0);
        gbc.writeMem(0x231f, { 0xcb, 0x8e });
        gbc.writeMem(0xd414, { 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x807f);
        EXPECT(gbc.pc(), 0x2321);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd414), 0x1);
        // CB 8E 0117
        gbc.setState(0xdde4, 0x3270, 0xd140, 0x3e3b, 0x8389, 0x88ae, 0x0, 0x0);
        gbc.writeMem(0x88ae, { 0xb1 });
        gbc.writeMem(0xdde4, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x3270);
        EXPECT(gbc.pc(), 0xdde6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88ae), 0xb1);
        EXPECT(gbc.readMem(0xdde4), 0xcb);
        EXPECT(gbc.readMem(0xdde5), 0x8e);
        // CB 8E 0118
        gbc.setState(0x3bc0, 0xa41b, 0xe10, 0x49db, 0xaba4, 0x9511, 0x0, 0x1);
        gbc.writeMem(0x3bc0, { 0xcb, 0x8e });
        gbc.writeMem(0x9511, { 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xa41b);
        EXPECT(gbc.pc(), 0x3bc2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9511), 0x14);
        // CB 8E 0119
        gbc.setState(0x7468, 0x1bc4, 0x5f60, 0xc7ce, 0xea40, 0x95b0, 0x0, 0x0);
        gbc.writeMem(0x7468, { 0xcb, 0x8e });
        gbc.writeMem(0x95b0, { 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x1bc4);
        EXPECT(gbc.pc(), 0x746a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95b0), 0x9c);
        // CB 8E 011A
        gbc.setState(0xe921, 0xcb55, 0x5740, 0x804d, 0x704d, 0xa0ea, 0x1, 0x1);
        gbc.writeMem(0xa0ea, { 0x24 });
        gbc.writeMem(0xe921, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xcb55);
        EXPECT(gbc.pc(), 0xe923);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0ea), 0x24);
        EXPECT(gbc.readMem(0xe921), 0xcb);
        EXPECT(gbc.readMem(0xe922), 0x8e);
        // CB 8E 011B
        gbc.setState(0xc0bd, 0xfe63, 0x4f00, 0xfb17, 0xc268, 0xaf57, 0x0, 0x1);
        gbc.writeMem(0xaf57, { 0xd0 });
        gbc.writeMem(0xc0bd, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xfe63);
        EXPECT(gbc.pc(), 0xc0bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf57), 0xd0);
        EXPECT(gbc.readMem(0xc0bd), 0xcb);
        EXPECT(gbc.readMem(0xc0be), 0x8e);
        // CB 8E 011F
        gbc.setState(0xeafe, 0xe1ac, 0xc9e0, 0xc844, 0xd1ee, 0xc663, 0x0, 0x1);
        gbc.writeMem(0xc663, { 0x49 });
        gbc.writeMem(0xeafe, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xe1ac);
        EXPECT(gbc.pc(), 0xeb00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc663), 0x49);
        EXPECT(gbc.readMem(0xeafe), 0xcb);
        EXPECT(gbc.readMem(0xeaff), 0x8e);
        // CB 8E 0120
        gbc.setState(0x74cb, 0x6410, 0x46b0, 0xf74d, 0x6bca, 0xec13, 0x1, 0x1);
        gbc.writeMem(0x74cb, { 0xcb, 0x8e });
        gbc.writeMem(0xec13, { 0x4e });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x6410);
        EXPECT(gbc.pc(), 0x74cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec13), 0x4c);
        // CB 8E 0121
        gbc.setState(0x363b, 0xe8c4, 0xc4c0, 0x53b9, 0x469c, 0xa1b1, 0x0, 0x1);
        gbc.writeMem(0x363b, { 0xcb, 0x8e });
        gbc.writeMem(0xa1b1, { 0x6a });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xe8c4);
        EXPECT(gbc.pc(), 0x363d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1b1), 0x68);
        // CB 8E 0122
        gbc.setState(0x7620, 0x7018, 0x2870, 0xba64, 0x371e, 0x9e20, 0x1, 0x0);
        gbc.writeMem(0x7620, { 0xcb, 0x8e });
        gbc.writeMem(0x9e20, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x7018);
        EXPECT(gbc.pc(), 0x7622);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e20), 0xd5);
        // CB 8E 0123
        gbc.setState(0xda0a, 0xc525, 0x8f10, 0x2691, 0x8e87, 0xec4e, 0x0, 0x1);
        gbc.writeMem(0xda0a, { 0xcb, 0x8e });
        gbc.writeMem(0xec4e, { 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xc525);
        EXPECT(gbc.pc(), 0xda0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda0a), 0xcb);
        EXPECT(gbc.readMem(0xda0b), 0x8e);
        EXPECT(gbc.readMem(0xec4e), 0xdd);
        // CB 8E 0124
        gbc.setState(0x3134, 0x68c3, 0x6740, 0xb019, 0x9c26, 0x1702, 0x0, 0x0);
        gbc.writeMem(0x1702, { 0x68 });
        gbc.writeMem(0x3134, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x68c3);
        EXPECT(gbc.pc(), 0x3136);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8E 0129
        gbc.setState(0xa5a, 0x47f7, 0x4b30, 0x36c, 0x10e3, 0x8d81, 0x0, 0x0);
        gbc.writeMem(0xa5a, { 0xcb, 0x8e });
        gbc.writeMem(0x8d81, { 0x1c });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x47f7);
        EXPECT(gbc.pc(), 0xa5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d81), 0x1c);
        // CB 8E 012A
        gbc.setState(0xafb7, 0xd7bf, 0xded0, 0x39b8, 0x9dab, 0xd5ca, 0x0, 0x1);
        gbc.writeMem(0xafb7, { 0xcb, 0x8e });
        gbc.writeMem(0xd5ca, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xd7bf);
        EXPECT(gbc.pc(), 0xafb9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafb7), 0xcb);
        EXPECT(gbc.readMem(0xafb8), 0x8e);
        EXPECT(gbc.readMem(0xd5ca), 0x8c);
        // CB 8E 012B
        gbc.setState(0x552b, 0x8074, 0x1f70, 0x9955, 0x4cad, 0xb4ca, 0x0, 0x1);
        gbc.writeMem(0x552b, { 0xcb, 0x8e });
        gbc.writeMem(0xb4ca, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x8074);
        EXPECT(gbc.pc(), 0x552d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4ca), 0x28);
        // CB 8E 012D
        gbc.setState(0xb8be, 0xc948, 0x4ae0, 0xe458, 0xb9aa, 0xb854, 0x0, 0x0);
        gbc.writeMem(0xb854, { 0x2d });
        gbc.writeMem(0xb8be, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xc948);
        EXPECT(gbc.pc(), 0xb8c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb854), 0x2d);
        EXPECT(gbc.readMem(0xb8be), 0xcb);
        EXPECT(gbc.readMem(0xb8bf), 0x8e);
        // CB 8E 012E
        gbc.setState(0x69e6, 0xb5a0, 0xf8c0, 0x10c6, 0xb79, 0xa8c3, 0x1, 0x1);
        gbc.writeMem(0x69e6, { 0xcb, 0x8e });
        gbc.writeMem(0xa8c3, { 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xb5a0);
        EXPECT(gbc.pc(), 0x69e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8c3), 0xe8);
        // CB 8E 0130
        gbc.setState(0x405d, 0xc508, 0x9e10, 0xa1c3, 0xa519, 0xaacf, 0x0, 0x1);
        gbc.writeMem(0x405d, { 0xcb, 0x8e });
        gbc.writeMem(0xaacf, { 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xc508);
        EXPECT(gbc.pc(), 0x405f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaacf), 0x2c);
        // CB 8E 0132
        gbc.setState(0x175f, 0x7095, 0xa7a0, 0xc1cd, 0x8117, 0x8afc, 0x0, 0x0);
        gbc.writeMem(0x175f, { 0xcb, 0x8e });
        gbc.writeMem(0x8afc, { 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x7095);
        EXPECT(gbc.pc(), 0x1761);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8afc), 0xbd);
        // CB 8E 0133
        gbc.setState(0xa2ab, 0x5b58, 0x2400, 0x1706, 0xdde4, 0x692f, 0x0, 0x0);
        gbc.writeMem(0x692f, { 0x68 });
        gbc.writeMem(0xa2ab, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x5b58);
        EXPECT(gbc.pc(), 0xa2ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2ab), 0xcb);
        EXPECT(gbc.readMem(0xa2ac), 0x8e);
        // CB 8E 0134
        gbc.setState(0xc0c5, 0x421a, 0x1ca0, 0xc0b3, 0x3de7, 0xa3dc, 0x0, 0x0);
        gbc.writeMem(0xa3dc, { 0x6 });
        gbc.writeMem(0xc0c5, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x421a);
        EXPECT(gbc.pc(), 0xc0c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3dc), 0x4);
        EXPECT(gbc.readMem(0xc0c5), 0xcb);
        EXPECT(gbc.readMem(0xc0c6), 0x8e);
        // CB 8E 0136
        gbc.setState(0x23b3, 0xa317, 0x2e00, 0x628c, 0x1a74, 0x2bf3, 0x0, 0x0);
        gbc.writeMem(0x23b3, { 0xcb, 0x8e });
        gbc.writeMem(0x2bf3, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xa317);
        EXPECT(gbc.pc(), 0x23b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8E 0137
        gbc.setState(0x852, 0x244a, 0xc430, 0x9633, 0xc1ea, 0x52cf, 0x1, 0x1);
        gbc.writeMem(0x852, { 0xcb, 0x8e });
        gbc.writeMem(0x52cf, { 0xa1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x244a);
        EXPECT(gbc.pc(), 0x854);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8E 0138
        gbc.setState(0x76f2, 0x912b, 0xfcf0, 0x6551, 0x2fd0, 0x87f9, 0x1, 0x1);
        gbc.writeMem(0x76f2, { 0xcb, 0x8e });
        gbc.writeMem(0x87f9, { 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x912b);
        EXPECT(gbc.pc(), 0x76f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87f9), 0x39);
        // CB 8E 0139
        gbc.setState(0xefe4, 0x1564, 0x10f0, 0xc3bf, 0x91b7, 0x9064, 0x0, 0x0);
        gbc.writeMem(0x9064, { 0xd4 });
        gbc.writeMem(0xefe4, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x1564);
        EXPECT(gbc.pc(), 0xefe6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9064), 0xd4);
        EXPECT(gbc.readMem(0xefe4), 0xcb);
        EXPECT(gbc.readMem(0xefe5), 0x8e);
        // CB 8E 013B
        gbc.setState(0x57e8, 0xc6f9, 0x4be0, 0xec89, 0x80, 0x2850, 0x1, 0x1);
        gbc.writeMem(0x2850, { 0x65 });
        gbc.writeMem(0x57e8, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xc6f9);
        EXPECT(gbc.pc(), 0x57ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8E 013C
        gbc.setState(0xb5e4, 0x77ac, 0x8f50, 0x74cd, 0xe082, 0xc701, 0x1, 0x1);
        gbc.writeMem(0xb5e4, { 0xcb, 0x8e });
        gbc.writeMem(0xc701, { 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x77ac);
        EXPECT(gbc.pc(), 0xb5e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5e4), 0xcb);
        EXPECT(gbc.readMem(0xb5e5), 0x8e);
        EXPECT(gbc.readMem(0xc701), 0x6d);
        // CB 8E 013D
        gbc.setState(0xde8a, 0x6443, 0x4a50, 0xf4a3, 0x4357, 0x89ed, 0x0, 0x0);
        gbc.writeMem(0x89ed, { 0x34 });
        gbc.writeMem(0xde8a, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x6443);
        EXPECT(gbc.pc(), 0xde8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89ed), 0x34);
        EXPECT(gbc.readMem(0xde8a), 0xcb);
        EXPECT(gbc.readMem(0xde8b), 0x8e);
        // CB 8E 013E
        gbc.setState(0x11b8, 0x1df4, 0x2f40, 0x3cd6, 0x1068, 0x81f1, 0x1, 0x0);
        gbc.writeMem(0x11b8, { 0xcb, 0x8e });
        gbc.writeMem(0x81f1, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x1df4);
        EXPECT(gbc.pc(), 0x11ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81f1), 0x70);
        // CB 8E 013F
        gbc.setState(0xa72f, 0x70e0, 0x180, 0x2d60, 0xb1a7, 0xeb05, 0x1, 0x1);
        gbc.writeMem(0xa72f, { 0xcb, 0x8e });
        gbc.writeMem(0xeb05, { 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x70e0);
        EXPECT(gbc.pc(), 0xa731);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa72f), 0xcb);
        EXPECT(gbc.readMem(0xa730), 0x8e);
        EXPECT(gbc.readMem(0xeb05), 0xb4);
        // CB 8E 0140
        gbc.setState(0x82df, 0x7129, 0xd1e0, 0xc8e5, 0x2345, 0xac44, 0x0, 0x1);
        gbc.writeMem(0x82df, { 0xcb, 0x8e });
        gbc.writeMem(0xac44, { 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x7129);
        EXPECT(gbc.pc(), 0x82e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82df), 0xcb);
        EXPECT(gbc.readMem(0x82e0), 0x8e);
        EXPECT(gbc.readMem(0xac44), 0x60);
        // CB 8E 0141
        gbc.setState(0x93c2, 0x6c4, 0x5e90, 0x119e, 0xaafd, 0x43a3, 0x0, 0x1);
        gbc.writeMem(0x43a3, { 0x69 });
        gbc.writeMem(0x93c2, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x6c4);
        EXPECT(gbc.pc(), 0x93c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93c2), 0xcb);
        EXPECT(gbc.readMem(0x93c3), 0x8e);
        // CB 8E 0142
        gbc.setState(0x5a7f, 0x91f7, 0x7f30, 0xa641, 0x2226, 0x7bc9, 0x1, 0x1);
        gbc.writeMem(0x5a7f, { 0xcb, 0x8e });
        gbc.writeMem(0x7bc9, { 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x91f7);
        EXPECT(gbc.pc(), 0x5a81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8E 0143
        gbc.setState(0xcf19, 0x4734, 0xd330, 0x4dc6, 0xe60e, 0xf584, 0x0, 0x0);
        gbc.writeMem(0xcf19, { 0xcb, 0x8e });
        gbc.writeMem(0xf584, { 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x4734);
        EXPECT(gbc.pc(), 0xcf1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf19), 0xcb);
        EXPECT(gbc.readMem(0xcf1a), 0x8e);
        EXPECT(gbc.readMem(0xf584), 0x60);
        // CB 8E 0144
        gbc.setState(0xbe5f, 0x13da, 0xeb80, 0xf76d, 0x4dd5, 0xedb5, 0x0, 0x1);
        gbc.writeMem(0xbe5f, { 0xcb, 0x8e });
        gbc.writeMem(0xedb5, { 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x13da);
        EXPECT(gbc.pc(), 0xbe61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe5f), 0xcb);
        EXPECT(gbc.readMem(0xbe60), 0x8e);
        EXPECT(gbc.readMem(0xedb5), 0x39);
        // CB 8E 0145
        gbc.setState(0x6e70, 0xcc76, 0x620, 0xc3fd, 0xab1d, 0xa7a0, 0x1, 0x0);
        gbc.writeMem(0x6e70, { 0xcb, 0x8e });
        gbc.writeMem(0xa7a0, { 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xcc76);
        EXPECT(gbc.pc(), 0x6e72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7a0), 0x30);
        // CB 8E 0146
        gbc.setState(0x5f1b, 0x70c4, 0x90f0, 0x7660, 0xb2e4, 0xa66c, 0x1, 0x1);
        gbc.writeMem(0x5f1b, { 0xcb, 0x8e });
        gbc.writeMem(0xa66c, { 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x70c4);
        EXPECT(gbc.pc(), 0x5f1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa66c), 0x19);
        // CB 8E 0147
        gbc.setState(0x848e, 0x3ced, 0xb390, 0xe72f, 0x124d, 0x6133, 0x1, 0x0);
        gbc.writeMem(0x6133, { 0x6d });
        gbc.writeMem(0x848e, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x3ced);
        EXPECT(gbc.pc(), 0x8490);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x848e), 0xcb);
        EXPECT(gbc.readMem(0x848f), 0x8e);
        // CB 8E 0149
        gbc.setState(0x4e6e, 0xcb8f, 0xc5e0, 0xbbbc, 0xc7c, 0xba48, 0x1, 0x1);
        gbc.writeMem(0x4e6e, { 0xcb, 0x8e });
        gbc.writeMem(0xba48, { 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xcb8f);
        EXPECT(gbc.pc(), 0x4e70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba48), 0x61);
        // CB 8E 014A
        gbc.setState(0x746c, 0xb461, 0x4520, 0x5a50, 0xb52b, 0x5bd4, 0x0, 0x0);
        gbc.writeMem(0x5bd4, { 0x3c });
        gbc.writeMem(0x746c, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xb461);
        EXPECT(gbc.pc(), 0x746e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8E 014B
        gbc.setState(0xb986, 0x8ce5, 0x35f0, 0xf9b7, 0x31d2, 0x82be, 0x0, 0x0);
        gbc.writeMem(0x82be, { 0xac });
        gbc.writeMem(0xb986, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x8ce5);
        EXPECT(gbc.pc(), 0xb988);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82be), 0xac);
        EXPECT(gbc.readMem(0xb986), 0xcb);
        EXPECT(gbc.readMem(0xb987), 0x8e);
        // CB 8E 014C
        gbc.setState(0x67c5, 0x5366, 0x5f70, 0xe8c, 0x32d1, 0xaf7a, 0x0, 0x0);
        gbc.writeMem(0x67c5, { 0xcb, 0x8e });
        gbc.writeMem(0xaf7a, { 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x5366);
        EXPECT(gbc.pc(), 0x67c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf7a), 0x94);
        // CB 8E 014F
        gbc.setState(0x233, 0xfbab, 0xadf0, 0x1e76, 0x3cc7, 0xc686, 0x0, 0x1);
        gbc.writeMem(0x233, { 0xcb, 0x8e });
        gbc.writeMem(0xc686, { 0x6a });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xfbab);
        EXPECT(gbc.pc(), 0x235);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc686), 0x68);
        // CB 8E 0150
        gbc.setState(0xc79b, 0x5c1, 0xbfa0, 0x93a8, 0xa13d, 0xb3fb, 0x0, 0x1);
        gbc.writeMem(0xb3fb, { 0x11 });
        gbc.writeMem(0xc79b, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x5c1);
        EXPECT(gbc.pc(), 0xc79d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3fb), 0x11);
        EXPECT(gbc.readMem(0xc79b), 0xcb);
        EXPECT(gbc.readMem(0xc79c), 0x8e);
        // CB 8E 0151
        gbc.setState(0x477f, 0xfef, 0x6d70, 0x8184, 0x5385, 0xbabb, 0x1, 0x0);
        gbc.writeMem(0x477f, { 0xcb, 0x8e });
        gbc.writeMem(0xbabb, { 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xfef);
        EXPECT(gbc.pc(), 0x4781);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbabb), 0x2d);
        // CB 8E 0152
        gbc.setState(0xc0e8, 0x5763, 0xfa80, 0xde11, 0xb5fc, 0xd90, 0x0, 0x0);
        gbc.writeMem(0xd90, { 0x64 });
        gbc.writeMem(0xc0e8, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x5763);
        EXPECT(gbc.pc(), 0xc0ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0e8), 0xcb);
        EXPECT(gbc.readMem(0xc0e9), 0x8e);
        // CB 8E 0154
        gbc.setState(0x6fc7, 0x3515, 0x7980, 0xaddc, 0x9c4e, 0x8bc0, 0x0, 0x0);
        gbc.writeMem(0x6fc7, { 0xcb, 0x8e });
        gbc.writeMem(0x8bc0, { 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x3515);
        EXPECT(gbc.pc(), 0x6fc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bc0), 0xa4);
        // CB 8E 0155
        gbc.setState(0x9373, 0x4200, 0xb7b0, 0x89da, 0x253d, 0x9cc2, 0x1, 0x0);
        gbc.writeMem(0x9373, { 0xcb, 0x8e });
        gbc.writeMem(0x9cc2, { 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x4200);
        EXPECT(gbc.pc(), 0x9375);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9373), 0xcb);
        EXPECT(gbc.readMem(0x9374), 0x8e);
        EXPECT(gbc.readMem(0x9cc2), 0x9d);
        // CB 8E 0156
        gbc.setState(0x25a8, 0x396, 0x9920, 0xafc0, 0x72db, 0xd5a8, 0x1, 0x1);
        gbc.writeMem(0x25a8, { 0xcb, 0x8e });
        gbc.writeMem(0xd5a8, { 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x396);
        EXPECT(gbc.pc(), 0x25aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5a8), 0x30);
        // CB 8E 0157
        gbc.setState(0xb40b, 0x5dde, 0xf740, 0x3398, 0x42ad, 0xe016, 0x1, 0x1);
        gbc.writeMem(0xb40b, { 0xcb, 0x8e });
        gbc.writeMem(0xe016, { 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x5dde);
        EXPECT(gbc.pc(), 0xb40d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb40b), 0xcb);
        EXPECT(gbc.readMem(0xb40c), 0x8e);
        EXPECT(gbc.readMem(0xe016), 0xa0);
        // CB 8E 0158
        gbc.setState(0x20f, 0xb2c0, 0x22e0, 0x3e0f, 0xf331, 0x8c82, 0x0, 0x1);
        gbc.writeMem(0x20f, { 0xcb, 0x8e });
        gbc.writeMem(0x8c82, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xb2c0);
        EXPECT(gbc.pc(), 0x211);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c82), 0x8c);
        // CB 8E 0159
        gbc.setState(0xe4f4, 0xadd2, 0x4760, 0xd4c4, 0x9ab0, 0xf496, 0x0, 0x1);
        gbc.writeMem(0xe4f4, { 0xcb, 0x8e });
        gbc.writeMem(0xf496, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xadd2);
        EXPECT(gbc.pc(), 0xe4f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4f4), 0xcb);
        EXPECT(gbc.readMem(0xe4f5), 0x8e);
        EXPECT(gbc.readMem(0xf496), 0x94);
        // CB 8E 015A
        gbc.setState(0xafcc, 0x3ca5, 0xcc60, 0x960, 0x18ce, 0x9cbe, 0x0, 0x0);
        gbc.writeMem(0x9cbe, { 0xa0 });
        gbc.writeMem(0xafcc, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x3ca5);
        EXPECT(gbc.pc(), 0xafce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cbe), 0xa0);
        EXPECT(gbc.readMem(0xafcc), 0xcb);
        EXPECT(gbc.readMem(0xafcd), 0x8e);
        // CB 8E 015C
        gbc.setState(0xbce6, 0x1883, 0x8f60, 0xdb2e, 0x3b37, 0xfaad, 0x0, 0x1);
        gbc.writeMem(0xbce6, { 0xcb, 0x8e });
        gbc.writeMem(0xfaad, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x1883);
        EXPECT(gbc.pc(), 0xbce8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbce6), 0xcb);
        EXPECT(gbc.readMem(0xbce7), 0x8e);
        EXPECT(gbc.readMem(0xfaad), 0x60);
        // CB 8E 015D
        gbc.setState(0x2579, 0xd6c8, 0x5040, 0x41be, 0x8911, 0xde48, 0x1, 0x0);
        gbc.writeMem(0x2579, { 0xcb, 0x8e });
        gbc.writeMem(0xde48, { 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xd6c8);
        EXPECT(gbc.pc(), 0x257b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde48), 0x89);
        // CB 8E 015F
        gbc.setState(0x6c81, 0xc731, 0xd50, 0xcf18, 0x9175, 0x8211, 0x0, 0x1);
        gbc.writeMem(0x6c81, { 0xcb, 0x8e });
        gbc.writeMem(0x8211, { 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xc731);
        EXPECT(gbc.pc(), 0x6c83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8211), 0x9);
        // CB 8E 0160
        gbc.setState(0x8b1e, 0xf445, 0x56c0, 0xf6a7, 0x78d4, 0x893f, 0x1, 0x0);
        gbc.writeMem(0x893f, { 0x1 });
        gbc.writeMem(0x8b1e, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xf445);
        EXPECT(gbc.pc(), 0x8b20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x893f), 0x1);
        EXPECT(gbc.readMem(0x8b1e), 0xcb);
        EXPECT(gbc.readMem(0x8b1f), 0x8e);
        // CB 8E 0161
        gbc.setState(0x95b5, 0x693f, 0xd0c0, 0x3d71, 0x9ea8, 0x85e5, 0x1, 0x0);
        gbc.writeMem(0x85e5, { 0x61 });
        gbc.writeMem(0x95b5, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x693f);
        EXPECT(gbc.pc(), 0x95b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85e5), 0x61);
        EXPECT(gbc.readMem(0x95b5), 0xcb);
        EXPECT(gbc.readMem(0x95b6), 0x8e);
        // CB 8E 0162
        gbc.setState(0x9b4, 0x22a1, 0x8560, 0x8c4e, 0xe9d1, 0xa514, 0x0, 0x1);
        gbc.writeMem(0x9b4, { 0xcb, 0x8e });
        gbc.writeMem(0xa514, { 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x22a1);
        EXPECT(gbc.pc(), 0x9b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa514), 0xdd);
        // CB 8E 0163
        gbc.setState(0x9423, 0x534f, 0x3fa0, 0xf713, 0x6ae9, 0x6f08, 0x1, 0x1);
        gbc.writeMem(0x6f08, { 0x68 });
        gbc.writeMem(0x9423, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x534f);
        EXPECT(gbc.pc(), 0x9425);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9423), 0xcb);
        EXPECT(gbc.readMem(0x9424), 0x8e);
        // CB 8E 0164
        gbc.setState(0xb44, 0xe203, 0xbfd0, 0xc338, 0x9dfb, 0xd1a9, 0x0, 0x1);
        gbc.writeMem(0xb44, { 0xcb, 0x8e });
        gbc.writeMem(0xd1a9, { 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xe203);
        EXPECT(gbc.pc(), 0xb46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1a9), 0x19);
        // CB 8E 0165
        gbc.setState(0x7fa5, 0xa5ee, 0xa610, 0x17d6, 0x2219, 0x88a0, 0x1, 0x0);
        gbc.writeMem(0x7fa5, { 0xcb, 0x8e });
        gbc.writeMem(0x88a0, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xa5ee);
        EXPECT(gbc.pc(), 0x7fa7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88a0), 0x95);
        // CB 8E 0166
        gbc.setState(0xbd3, 0x1db, 0xf20, 0xf7ad, 0x389b, 0x66ab, 0x0, 0x1);
        gbc.writeMem(0xbd3, { 0xcb, 0x8e });
        gbc.writeMem(0x66ab, { 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x1db);
        EXPECT(gbc.pc(), 0xbd5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8E 0167
        gbc.setState(0xe462, 0x6905, 0x8610, 0x7cb7, 0xca70, 0x8771, 0x0, 0x0);
        gbc.writeMem(0x8771, { 0xf5 });
        gbc.writeMem(0xe462, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x6905);
        EXPECT(gbc.pc(), 0xe464);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8771), 0xf5);
        EXPECT(gbc.readMem(0xe462), 0xcb);
        EXPECT(gbc.readMem(0xe463), 0x8e);
        // CB 8E 0168
        gbc.setState(0x5cc6, 0x1e10, 0x11b0, 0x1295, 0x43e8, 0xd8b4, 0x0, 0x0);
        gbc.writeMem(0x5cc6, { 0xcb, 0x8e });
        gbc.writeMem(0xd8b4, { 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x1e10);
        EXPECT(gbc.pc(), 0x5cc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8b4), 0x3d);
        // CB 8E 0169
        gbc.setState(0xca0, 0x53fb, 0x10f0, 0xb7cd, 0xb003, 0x8b3d, 0x1, 0x0);
        gbc.writeMem(0xca0, { 0xcb, 0x8e });
        gbc.writeMem(0x8b3d, { 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x53fb);
        EXPECT(gbc.pc(), 0xca2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b3d), 0x39);
        // CB 8E 016A
        gbc.setState(0xccbf, 0xaa42, 0x6980, 0x2851, 0xa, 0xc28d, 0x1, 0x0);
        gbc.writeMem(0xc28d, { 0x1c });
        gbc.writeMem(0xccbf, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xaa42);
        EXPECT(gbc.pc(), 0xccc1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc28d), 0x1c);
        EXPECT(gbc.readMem(0xccbf), 0xcb);
        EXPECT(gbc.readMem(0xccc0), 0x8e);
        // CB 8E 016C
        gbc.setState(0x5635, 0x399e, 0x6460, 0x6b48, 0xc17, 0xcb73, 0x0, 0x1);
        gbc.writeMem(0x5635, { 0xcb, 0x8e });
        gbc.writeMem(0xcb73, { 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x399e);
        EXPECT(gbc.pc(), 0x5637);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb73), 0x75);
        // CB 8E 016E
        gbc.setState(0xb6ed, 0x47c4, 0x4c80, 0x2d91, 0x5e2c, 0x86ec, 0x0, 0x0);
        gbc.writeMem(0x86ec, { 0x94 });
        gbc.writeMem(0xb6ed, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x47c4);
        EXPECT(gbc.pc(), 0xb6ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86ec), 0x94);
        EXPECT(gbc.readMem(0xb6ed), 0xcb);
        EXPECT(gbc.readMem(0xb6ee), 0x8e);
        // CB 8E 0170
        gbc.setState(0x6910, 0x42d8, 0x7630, 0x7fd9, 0xe35, 0x37a1, 0x1, 0x0);
        gbc.writeMem(0x37a1, { 0xed });
        gbc.writeMem(0x6910, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x42d8);
        EXPECT(gbc.pc(), 0x6912);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8E 0171
        gbc.setState(0x10ce, 0x2fd2, 0x6380, 0x750d, 0x2985, 0x22cd, 0x1, 0x1);
        gbc.writeMem(0x10ce, { 0xcb, 0x8e });
        gbc.writeMem(0x22cd, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x2fd2);
        EXPECT(gbc.pc(), 0x10d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8E 0172
        gbc.setState(0x8e26, 0x552, 0x7200, 0x22d6, 0x4872, 0xf9d9, 0x0, 0x1);
        gbc.writeMem(0x8e26, { 0xcb, 0x8e });
        gbc.writeMem(0xf9d9, { 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x552);
        EXPECT(gbc.pc(), 0x8e28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e26), 0xcb);
        EXPECT(gbc.readMem(0x8e27), 0x8e);
        EXPECT(gbc.readMem(0xf9d9), 0xc0);
        // CB 8E 0173
        gbc.setState(0x654, 0x807b, 0xb3f0, 0xd4f5, 0x671, 0x7868, 0x1, 0x1);
        gbc.writeMem(0x654, { 0xcb, 0x8e });
        gbc.writeMem(0x7868, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x807b);
        EXPECT(gbc.pc(), 0x656);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8E 0174
        gbc.setState(0xe287, 0x9706, 0x4080, 0x6acb, 0x298c, 0xb2ec, 0x1, 0x0);
        gbc.writeMem(0xb2ec, { 0xe2 });
        gbc.writeMem(0xe287, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x9706);
        EXPECT(gbc.pc(), 0xe289);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2ec), 0xe0);
        EXPECT(gbc.readMem(0xe287), 0xcb);
        EXPECT(gbc.readMem(0xe288), 0x8e);
        // CB 8E 0176
        gbc.setState(0x8da0, 0xafb4, 0x1e90, 0xb3a3, 0x9936, 0xfa4, 0x1, 0x0);
        gbc.writeMem(0xfa4, { 0xc9 });
        gbc.writeMem(0x8da0, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xafb4);
        EXPECT(gbc.pc(), 0x8da2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8da0), 0xcb);
        EXPECT(gbc.readMem(0x8da1), 0x8e);
        // CB 8E 0177
        gbc.setState(0xbe5d, 0x3e96, 0x1170, 0x7fbc, 0x115b, 0x6ed8, 0x0, 0x0);
        gbc.writeMem(0x6ed8, { 0x35 });
        gbc.writeMem(0xbe5d, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x3e96);
        EXPECT(gbc.pc(), 0xbe5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe5d), 0xcb);
        EXPECT(gbc.readMem(0xbe5e), 0x8e);
        // CB 8E 0179
        gbc.setState(0xa0f1, 0x124e, 0x8c10, 0x7c82, 0xa9a, 0x61a5, 0x1, 0x0);
        gbc.writeMem(0x61a5, { 0x24 });
        gbc.writeMem(0xa0f1, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x124e);
        EXPECT(gbc.pc(), 0xa0f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0f1), 0xcb);
        EXPECT(gbc.readMem(0xa0f2), 0x8e);
        // CB 8E 017A
        gbc.setState(0x6cb6, 0xe517, 0x3a70, 0x9c86, 0x3223, 0xd3e3, 0x1, 0x1);
        gbc.writeMem(0x6cb6, { 0xcb, 0x8e });
        gbc.writeMem(0xd3e3, { 0x7 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xe517);
        EXPECT(gbc.pc(), 0x6cb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3e3), 0x5);
        // CB 8E 017B
        gbc.setState(0xbf45, 0x7d46, 0x4f60, 0x89c0, 0x39b7, 0xf418, 0x0, 0x1);
        gbc.writeMem(0xbf45, { 0xcb, 0x8e });
        gbc.writeMem(0xf418, { 0xde });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x7d46);
        EXPECT(gbc.pc(), 0xbf47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf45), 0xcb);
        EXPECT(gbc.readMem(0xbf46), 0x8e);
        EXPECT(gbc.readMem(0xf418), 0xdc);
        // CB 8E 017E
        gbc.setState(0x49d8, 0x19ab, 0xdc10, 0x24be, 0x29fb, 0xbe56, 0x0, 0x1);
        gbc.writeMem(0x49d8, { 0xcb, 0x8e });
        gbc.writeMem(0xbe56, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x19ab);
        EXPECT(gbc.pc(), 0x49da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe56), 0x71);
        // CB 8E 017F
        gbc.setState(0x7846, 0xc696, 0xebd0, 0x5c3c, 0xc5ea, 0x6044, 0x0, 0x1);
        gbc.writeMem(0x6044, { 0x64 });
        gbc.writeMem(0x7846, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xc696);
        EXPECT(gbc.pc(), 0x7848);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8E 0180
        gbc.setState(0xe163, 0xe1fc, 0x4dc0, 0xbe4b, 0xe4fb, 0x9956, 0x1, 0x1);
        gbc.writeMem(0x9956, { 0xb2 });
        gbc.writeMem(0xe163, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xe1fc);
        EXPECT(gbc.pc(), 0xe165);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9956), 0xb0);
        EXPECT(gbc.readMem(0xe163), 0xcb);
        EXPECT(gbc.readMem(0xe164), 0x8e);
        // CB 8E 0183
        gbc.setState(0x9e39, 0xe4d2, 0xa500, 0x7f6b, 0xccd3, 0x3310, 0x1, 0x1);
        gbc.writeMem(0x3310, { 0x41 });
        gbc.writeMem(0x9e39, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xe4d2);
        EXPECT(gbc.pc(), 0x9e3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e39), 0xcb);
        EXPECT(gbc.readMem(0x9e3a), 0x8e);
        // CB 8E 0186
        gbc.setState(0x4659, 0x59bd, 0x1c0, 0x9891, 0x68d6, 0xf515, 0x0, 0x0);
        gbc.writeMem(0x4659, { 0xcb, 0x8e });
        gbc.writeMem(0xf515, { 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x59bd);
        EXPECT(gbc.pc(), 0x465b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf515), 0xdd);
        // CB 8E 0187
        gbc.setState(0x22f, 0xc915, 0x1460, 0xcfbe, 0x2dec, 0xbd39, 0x1, 0x0);
        gbc.writeMem(0x22f, { 0xcb, 0x8e });
        gbc.writeMem(0xbd39, { 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xc915);
        EXPECT(gbc.pc(), 0x231);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd39), 0x5d);
        // CB 8E 0189
        gbc.setState(0xac16, 0xfd45, 0xabc0, 0x8896, 0x7220, 0x260, 0x0, 0x0);
        gbc.writeMem(0x260, { 0xf9 });
        gbc.writeMem(0xac16, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xfd45);
        EXPECT(gbc.pc(), 0xac18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac16), 0xcb);
        EXPECT(gbc.readMem(0xac17), 0x8e);
        // CB 8E 018A
        gbc.setState(0x8110, 0x9543, 0xc290, 0x61e2, 0x2f51, 0xb2f4, 0x1, 0x0);
        gbc.writeMem(0x8110, { 0xcb, 0x8e });
        gbc.writeMem(0xb2f4, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x9543);
        EXPECT(gbc.pc(), 0x8112);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8110), 0xcb);
        EXPECT(gbc.readMem(0x8111), 0x8e);
        EXPECT(gbc.readMem(0xb2f4), 0xd5);
        // CB 8E 018C
        gbc.setState(0x6159, 0xef31, 0x66c0, 0xee32, 0xaf71, 0x6e2c, 0x0, 0x1);
        gbc.writeMem(0x6159, { 0xcb, 0x8e });
        gbc.writeMem(0x6e2c, { 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xef31);
        EXPECT(gbc.pc(), 0x615b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8E 018D
        gbc.setState(0x8013, 0x4a3c, 0x3510, 0xc0b3, 0x13d7, 0x4474, 0x0, 0x0);
        gbc.writeMem(0x4474, { 0xbc });
        gbc.writeMem(0x8013, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x4a3c);
        EXPECT(gbc.pc(), 0x8015);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8013), 0xcb);
        EXPECT(gbc.readMem(0x8014), 0x8e);
        // CB 8E 018E
        gbc.setState(0x3155, 0x7f1c, 0x310, 0xc482, 0x4626, 0x8ea9, 0x1, 0x0);
        gbc.writeMem(0x3155, { 0xcb, 0x8e });
        gbc.writeMem(0x8ea9, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x7f1c);
        EXPECT(gbc.pc(), 0x3157);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ea9), 0xd5);
        // CB 8E 018F
        gbc.setState(0x4807, 0xbc44, 0x3f10, 0x3fc4, 0xc79a, 0x8ed1, 0x1, 0x1);
        gbc.writeMem(0x4807, { 0xcb, 0x8e });
        gbc.writeMem(0x8ed1, { 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xbc44);
        EXPECT(gbc.pc(), 0x4809);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ed1), 0x9);
        // CB 8E 0191
        gbc.setState(0x5826, 0xce11, 0xfe0, 0x58f6, 0x600c, 0xa6d6, 0x0, 0x1);
        gbc.writeMem(0x5826, { 0xcb, 0x8e });
        gbc.writeMem(0xa6d6, { 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xce11);
        EXPECT(gbc.pc(), 0x5828);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6d6), 0x3d);
        // CB 8E 0192
        gbc.setState(0xca3b, 0xaea6, 0x3aa0, 0x4d74, 0x3170, 0xae4d, 0x0, 0x1);
        gbc.writeMem(0xae4d, { 0x2d });
        gbc.writeMem(0xca3b, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xaea6);
        EXPECT(gbc.pc(), 0xca3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae4d), 0x2d);
        EXPECT(gbc.readMem(0xca3b), 0xcb);
        EXPECT(gbc.readMem(0xca3c), 0x8e);
        // CB 8E 0193
        gbc.setState(0xdc2d, 0xf76e, 0x5f10, 0x2df2, 0x8c4d, 0xd86f, 0x1, 0x0);
        gbc.writeMem(0xd86f, { 0xf });
        gbc.writeMem(0xdc2d, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xf76e);
        EXPECT(gbc.pc(), 0xdc2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd86f), 0xd);
        EXPECT(gbc.readMem(0xdc2d), 0xcb);
        EXPECT(gbc.readMem(0xdc2e), 0x8e);
        // CB 8E 0194
        gbc.setState(0x9bbf, 0x71e9, 0x4d00, 0xed28, 0x40f6, 0x11de, 0x1, 0x1);
        gbc.writeMem(0x11de, { 0xb0 });
        gbc.writeMem(0x9bbf, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x71e9);
        EXPECT(gbc.pc(), 0x9bc1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bbf), 0xcb);
        EXPECT(gbc.readMem(0x9bc0), 0x8e);
        // CB 8E 0195
        gbc.setState(0x77d1, 0xc2f, 0x1d00, 0xd711, 0xacac, 0x9ec0, 0x1, 0x0);
        gbc.writeMem(0x77d1, { 0xcb, 0x8e });
        gbc.writeMem(0x9ec0, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xc2f);
        EXPECT(gbc.pc(), 0x77d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ec0), 0x48);
        // CB 8E 0197
        gbc.setState(0x1c7f, 0x7aab, 0x8e70, 0x2800, 0xd03c, 0x85be, 0x1, 0x1);
        gbc.writeMem(0x1c7f, { 0xcb, 0x8e });
        gbc.writeMem(0x85be, { 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x7aab);
        EXPECT(gbc.pc(), 0x1c81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85be), 0x24);
        // CB 8E 0198
        gbc.setState(0x725c, 0x1ff4, 0x5b30, 0xdbed, 0xe0e3, 0x2dfc, 0x0, 0x0);
        gbc.writeMem(0x2dfc, { 0xb5 });
        gbc.writeMem(0x725c, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x1ff4);
        EXPECT(gbc.pc(), 0x725e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8E 0199
        gbc.setState(0x7c7e, 0x2668, 0x850, 0x2496, 0xd03e, 0x9bfb, 0x0, 0x1);
        gbc.writeMem(0x7c7e, { 0xcb, 0x8e });
        gbc.writeMem(0x9bfb, { 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x2668);
        EXPECT(gbc.pc(), 0x7c80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bfb), 0x4);
        // CB 8E 019A
        gbc.setState(0xcd20, 0x63b5, 0x8940, 0xd2e9, 0xf39e, 0x9d11, 0x0, 0x0);
        gbc.writeMem(0x9d11, { 0x97 });
        gbc.writeMem(0xcd20, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x63b5);
        EXPECT(gbc.pc(), 0xcd22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d11), 0x95);
        EXPECT(gbc.readMem(0xcd20), 0xcb);
        EXPECT(gbc.readMem(0xcd21), 0x8e);
        // CB 8E 019B
        gbc.setState(0x260f, 0x863e, 0x68b0, 0x2b96, 0x68dc, 0x2a24, 0x0, 0x1);
        gbc.writeMem(0x260f, { 0xcb, 0x8e });
        gbc.writeMem(0x2a24, { 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x863e);
        EXPECT(gbc.pc(), 0x2611);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8E 019C
        gbc.setState(0xc859, 0xc5bd, 0xda40, 0xdfac, 0xf212, 0x9741, 0x0, 0x1);
        gbc.writeMem(0x9741, { 0xac });
        gbc.writeMem(0xc859, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xc5bd);
        EXPECT(gbc.pc(), 0xc85b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9741), 0xac);
        EXPECT(gbc.readMem(0xc859), 0xcb);
        EXPECT(gbc.readMem(0xc85a), 0x8e);
        // CB 8E 019E
        gbc.setState(0x6117, 0xd15f, 0x57d0, 0xb884, 0x407e, 0xba80, 0x0, 0x0);
        gbc.writeMem(0x6117, { 0xcb, 0x8e });
        gbc.writeMem(0xba80, { 0x6a });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xd15f);
        EXPECT(gbc.pc(), 0x6119);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba80), 0x68);
        // CB 8E 019F
        gbc.setState(0xbe57, 0x6ab2, 0xbfd0, 0xed03, 0xb63e, 0xa235, 0x1, 0x0);
        gbc.writeMem(0xa235, { 0x61 });
        gbc.writeMem(0xbe57, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x6ab2);
        EXPECT(gbc.pc(), 0xbe59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa235), 0x61);
        EXPECT(gbc.readMem(0xbe57), 0xcb);
        EXPECT(gbc.readMem(0xbe58), 0x8e);
        // CB 8E 01A0
        gbc.setState(0x6d0c, 0xc3ab, 0x7250, 0x6e59, 0x489e, 0x2995, 0x1, 0x0);
        gbc.writeMem(0x2995, { 0x95 });
        gbc.writeMem(0x6d0c, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xc3ab);
        EXPECT(gbc.pc(), 0x6d0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8E 01A1
        gbc.setState(0x7172, 0xcb04, 0x2ef0, 0x157b, 0x96fa, 0xa57f, 0x1, 0x0);
        gbc.writeMem(0x7172, { 0xcb, 0x8e });
        gbc.writeMem(0xa57f, { 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xcb04);
        EXPECT(gbc.pc(), 0x7174);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa57f), 0x9d);
        // CB 8E 01A3
        gbc.setState(0xd17, 0xd510, 0x74c0, 0x393, 0x4bea, 0x8d5a, 0x0, 0x0);
        gbc.writeMem(0xd17, { 0xcb, 0x8e });
        gbc.writeMem(0x8d5a, { 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xd510);
        EXPECT(gbc.pc(), 0xd19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d5a), 0xe9);
        // CB 8E 01A4
        gbc.setState(0xd1a4, 0x2477, 0x8580, 0xe7e3, 0x4db1, 0x9d2c, 0x1, 0x1);
        gbc.writeMem(0x9d2c, { 0xb2 });
        gbc.writeMem(0xd1a4, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x2477);
        EXPECT(gbc.pc(), 0xd1a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d2c), 0xb0);
        EXPECT(gbc.readMem(0xd1a4), 0xcb);
        EXPECT(gbc.readMem(0xd1a5), 0x8e);
        // CB 8E 01A5
        gbc.setState(0x1c7b, 0x936, 0xc950, 0xb04e, 0x4c6d, 0xc2fe, 0x0, 0x1);
        gbc.writeMem(0x1c7b, { 0xcb, 0x8e });
        gbc.writeMem(0xc2fe, { 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x936);
        EXPECT(gbc.pc(), 0x1c7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2fe), 0xfd);
        // CB 8E 01A6
        gbc.setState(0x9b4, 0xe848, 0x9590, 0xbf11, 0x3214, 0x9314, 0x0, 0x0);
        gbc.writeMem(0x9b4, { 0xcb, 0x8e });
        gbc.writeMem(0x9314, { 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xe848);
        EXPECT(gbc.pc(), 0x9b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9314), 0x39);
        // CB 8E 01A7
        gbc.setState(0x819e, 0x76ae, 0xe9a0, 0x46e, 0xcd98, 0x2469, 0x1, 0x0);
        gbc.writeMem(0x2469, { 0x89 });
        gbc.writeMem(0x819e, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x76ae);
        EXPECT(gbc.pc(), 0x81a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x819e), 0xcb);
        EXPECT(gbc.readMem(0x819f), 0x8e);
        // CB 8E 01A8
        gbc.setState(0x16fd, 0x6e86, 0x22a0, 0x8d11, 0x4231, 0x4bfe, 0x1, 0x0);
        gbc.writeMem(0x16fd, { 0xcb, 0x8e });
        gbc.writeMem(0x4bfe, { 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x6e86);
        EXPECT(gbc.pc(), 0x16ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8E 01AA
        gbc.setState(0x5adb, 0xbb67, 0xd480, 0xe10c, 0xb663, 0xf2ac, 0x1, 0x0);
        gbc.writeMem(0x5adb, { 0xcb, 0x8e });
        gbc.writeMem(0xf2ac, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xbb67);
        EXPECT(gbc.pc(), 0x5add);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf2ac), 0x28);
        // CB 8E 01AB
        gbc.setState(0xa089, 0x6c1d, 0x69c0, 0xfd36, 0xbb44, 0x52fb, 0x1, 0x1);
        gbc.writeMem(0x52fb, { 0xcd });
        gbc.writeMem(0xa089, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x6c1d);
        EXPECT(gbc.pc(), 0xa08b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa089), 0xcb);
        EXPECT(gbc.readMem(0xa08a), 0x8e);
        // CB 8E 01AD
        gbc.setState(0x342e, 0x5049, 0x3b30, 0x7509, 0x3b05, 0xef8e, 0x0, 0x0);
        gbc.writeMem(0x342e, { 0xcb, 0x8e });
        gbc.writeMem(0xef8e, { 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x5049);
        EXPECT(gbc.pc(), 0x3430);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef8e), 0xdd);
        // CB 8E 01AE
        gbc.setState(0xa162, 0x583a, 0x58d0, 0xacfd, 0x4cfa, 0xc008, 0x0, 0x0);
        gbc.writeMem(0xa162, { 0xcb, 0x8e });
        gbc.writeMem(0xc008, { 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x583a);
        EXPECT(gbc.pc(), 0xa164);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa162), 0xcb);
        EXPECT(gbc.readMem(0xa163), 0x8e);
        EXPECT(gbc.readMem(0xc008), 0x8);
        // CB 8E 01AF
        gbc.setState(0xecdd, 0x9cc2, 0xd660, 0x9799, 0x59fa, 0xc912, 0x1, 0x1);
        gbc.writeMem(0xc912, { 0xd7 });
        gbc.writeMem(0xecdd, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x9cc2);
        EXPECT(gbc.pc(), 0xecdf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc912), 0xd5);
        EXPECT(gbc.readMem(0xecdd), 0xcb);
        EXPECT(gbc.readMem(0xecde), 0x8e);
        // CB 8E 01B0
        gbc.setState(0x67b5, 0xb346, 0xe30, 0x8550, 0x49cd, 0xa124, 0x1, 0x0);
        gbc.writeMem(0x67b5, { 0xcb, 0x8e });
        gbc.writeMem(0xa124, { 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xb346);
        EXPECT(gbc.pc(), 0x67b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa124), 0xa5);
        // CB 8E 01B1
        gbc.setState(0x489e, 0xc85e, 0x31f0, 0x66dc, 0xc070, 0xbfbf, 0x0, 0x0);
        gbc.writeMem(0x489e, { 0xcb, 0x8e });
        gbc.writeMem(0xbfbf, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xc85e);
        EXPECT(gbc.pc(), 0x48a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfbf), 0x91);
        // CB 8E 01B2
        gbc.setState(0xc94a, 0x4575, 0x5390, 0x798f, 0x4be9, 0xddef, 0x0, 0x1);
        gbc.writeMem(0xc94a, { 0xcb, 0x8e });
        gbc.writeMem(0xddef, { 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x4575);
        EXPECT(gbc.pc(), 0xc94c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc94a), 0xcb);
        EXPECT(gbc.readMem(0xc94b), 0x8e);
        EXPECT(gbc.readMem(0xddef), 0x30);
        // CB 8E 01B3
        gbc.setState(0x4485, 0xc434, 0x13d0, 0x31c9, 0xcee8, 0x9143, 0x1, 0x1);
        gbc.writeMem(0x4485, { 0xcb, 0x8e });
        gbc.writeMem(0x9143, { 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xc434);
        EXPECT(gbc.pc(), 0x4487);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9143), 0xe9);
        // CB 8E 01B4
        gbc.setState(0x6e03, 0x6504, 0xb000, 0x6ef4, 0x554e, 0xb2ae, 0x1, 0x1);
        gbc.writeMem(0x6e03, { 0xcb, 0x8e });
        gbc.writeMem(0xb2ae, { 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x6504);
        EXPECT(gbc.pc(), 0x6e05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2ae), 0xd4);
        // CB 8E 01B6
        gbc.setState(0x649, 0xb87f, 0xeae0, 0x5028, 0x936b, 0xbcc0, 0x1, 0x1);
        gbc.writeMem(0x649, { 0xcb, 0x8e });
        gbc.writeMem(0xbcc0, { 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xb87f);
        EXPECT(gbc.pc(), 0x64b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcc0), 0x4c);
        // CB 8E 01B7
        gbc.setState(0x6419, 0x86aa, 0x2a80, 0x97b1, 0x6d93, 0xeee4, 0x0, 0x0);
        gbc.writeMem(0x6419, { 0xcb, 0x8e });
        gbc.writeMem(0xeee4, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x86aa);
        EXPECT(gbc.pc(), 0x641b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeee4), 0x99);
        // CB 8E 01B8
        gbc.setState(0x98de, 0x7afe, 0x9700, 0x1274, 0x41db, 0xcf43, 0x1, 0x1);
        gbc.writeMem(0x98de, { 0xcb, 0x8e });
        gbc.writeMem(0xcf43, { 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x7afe);
        EXPECT(gbc.pc(), 0x98e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98de), 0xcb);
        EXPECT(gbc.readMem(0x98df), 0x8e);
        EXPECT(gbc.readMem(0xcf43), 0x28);
        // CB 8E 01B9
        gbc.setState(0xca67, 0xdf3b, 0x6bd0, 0x33fd, 0x1899, 0xc3b1, 0x0, 0x0);
        gbc.writeMem(0xc3b1, { 0x4c });
        gbc.writeMem(0xca67, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xdf3b);
        EXPECT(gbc.pc(), 0xca69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3b1), 0x4c);
        EXPECT(gbc.readMem(0xca67), 0xcb);
        EXPECT(gbc.readMem(0xca68), 0x8e);
        // CB 8E 01BE
        gbc.setState(0x9f34, 0x3251, 0x15c0, 0x4320, 0xefe5, 0xf4aa, 0x1, 0x0);
        gbc.writeMem(0x9f34, { 0xcb, 0x8e });
        gbc.writeMem(0xf4aa, { 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x3251);
        EXPECT(gbc.pc(), 0x9f36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f34), 0xcb);
        EXPECT(gbc.readMem(0x9f35), 0x8e);
        EXPECT(gbc.readMem(0xf4aa), 0x5c);
        // CB 8E 01BF
        gbc.setState(0xe408, 0x7763, 0x15f0, 0x40b, 0x9e4e, 0xa829, 0x0, 0x1);
        gbc.writeMem(0xa829, { 0x64 });
        gbc.writeMem(0xe408, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x7763);
        EXPECT(gbc.pc(), 0xe40a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa829), 0x64);
        EXPECT(gbc.readMem(0xe408), 0xcb);
        EXPECT(gbc.readMem(0xe409), 0x8e);
        // CB 8E 01C0
        gbc.setState(0xce5b, 0x32f1, 0xe1c0, 0x6086, 0x974d, 0xb1dc, 0x1, 0x1);
        gbc.writeMem(0xb1dc, { 0xd6 });
        gbc.writeMem(0xce5b, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x32f1);
        EXPECT(gbc.pc(), 0xce5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1dc), 0xd4);
        EXPECT(gbc.readMem(0xce5b), 0xcb);
        EXPECT(gbc.readMem(0xce5c), 0x8e);
        // CB 8E 01C1
        gbc.setState(0xc1ee, 0x5e42, 0x5740, 0xe227, 0x62c4, 0xb22f, 0x1, 0x1);
        gbc.writeMem(0xb22f, { 0xd });
        gbc.writeMem(0xc1ee, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x5e42);
        EXPECT(gbc.pc(), 0xc1f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb22f), 0xd);
        EXPECT(gbc.readMem(0xc1ee), 0xcb);
        EXPECT(gbc.readMem(0xc1ef), 0x8e);
        // CB 8E 01C2
        gbc.setState(0x8b10, 0xf418, 0x3370, 0xf29f, 0x2bf9, 0x9258, 0x0, 0x0);
        gbc.writeMem(0x8b10, { 0xcb, 0x8e });
        gbc.writeMem(0x9258, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xf418);
        EXPECT(gbc.pc(), 0x8b12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b10), 0xcb);
        EXPECT(gbc.readMem(0x8b11), 0x8e);
        EXPECT(gbc.readMem(0x9258), 0x71);
        // CB 8E 01C3
        gbc.setState(0x2347, 0xcf59, 0x2ec0, 0x8b84, 0x4b3b, 0xceda, 0x0, 0x0);
        gbc.writeMem(0x2347, { 0xcb, 0x8e });
        gbc.writeMem(0xceda, { 0xb7 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xcf59);
        EXPECT(gbc.pc(), 0x2349);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xceda), 0xb5);
        // CB 8E 01C4
        gbc.setState(0xd2dc, 0x45a6, 0x5860, 0x3124, 0x45bb, 0xc77d, 0x1, 0x0);
        gbc.writeMem(0xc77d, { 0xe4 });
        gbc.writeMem(0xd2dc, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x45a6);
        EXPECT(gbc.pc(), 0xd2de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc77d), 0xe4);
        EXPECT(gbc.readMem(0xd2dc), 0xcb);
        EXPECT(gbc.readMem(0xd2dd), 0x8e);
        // CB 8E 01C5
        gbc.setState(0x3a75, 0x217e, 0x1430, 0x6c57, 0x104b, 0x7129, 0x0, 0x0);
        gbc.writeMem(0x3a75, { 0xcb, 0x8e });
        gbc.writeMem(0x7129, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x217e);
        EXPECT(gbc.pc(), 0x3a77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8E 01C6
        gbc.setState(0x55d, 0x159c, 0x71f0, 0x44a, 0xbf49, 0x5131, 0x1, 0x1);
        gbc.writeMem(0x55d, { 0xcb, 0x8e });
        gbc.writeMem(0x5131, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x159c);
        EXPECT(gbc.pc(), 0x55f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8E 01C7
        gbc.setState(0xba69, 0x10e9, 0x3ca0, 0x3384, 0xfd95, 0x423, 0x0, 0x1);
        gbc.writeMem(0x423, { 0xa0 });
        gbc.writeMem(0xba69, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x10e9);
        EXPECT(gbc.pc(), 0xba6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba69), 0xcb);
        EXPECT(gbc.readMem(0xba6a), 0x8e);
        // CB 8E 01C8
        gbc.setState(0x7291, 0xc5d4, 0x7a50, 0xd5a6, 0xf8d2, 0xbab4, 0x0, 0x0);
        gbc.writeMem(0x7291, { 0xcb, 0x8e });
        gbc.writeMem(0xbab4, { 0xfc });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xc5d4);
        EXPECT(gbc.pc(), 0x7293);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbab4), 0xfc);
        // CB 8E 01C9
        gbc.setState(0xe93c, 0xbc2b, 0x2c20, 0xa45f, 0xbc57, 0x130, 0x0, 0x1);
        gbc.writeMem(0x130, { 0x7d });
        gbc.writeMem(0xe93c, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xbc2b);
        EXPECT(gbc.pc(), 0xe93e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe93c), 0xcb);
        EXPECT(gbc.readMem(0xe93d), 0x8e);
        // CB 8E 01CA
        gbc.setState(0x39e9, 0x339b, 0x5430, 0xb7ae, 0x97b5, 0x7c4f, 0x0, 0x0);
        gbc.writeMem(0x39e9, { 0xcb, 0x8e });
        gbc.writeMem(0x7c4f, { 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x339b);
        EXPECT(gbc.pc(), 0x39eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8E 01CD
        gbc.setState(0x21b7, 0x6aa5, 0x5220, 0x49d7, 0x16eb, 0x2659, 0x1, 0x0);
        gbc.writeMem(0x21b7, { 0xcb, 0x8e });
        gbc.writeMem(0x2659, { 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x6aa5);
        EXPECT(gbc.pc(), 0x21b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8E 01CF
        gbc.setState(0xa922, 0x995e, 0xd930, 0xbc60, 0xb584, 0xaece, 0x1, 0x0);
        gbc.writeMem(0xa922, { 0xcb, 0x8e });
        gbc.writeMem(0xaece, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x995e);
        EXPECT(gbc.pc(), 0xa924);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa922), 0xcb);
        EXPECT(gbc.readMem(0xa923), 0x8e);
        EXPECT(gbc.readMem(0xaece), 0x10);
        // CB 8E 01D2
        gbc.setState(0xc9c2, 0x4598, 0x2860, 0x71fc, 0x1d2, 0x6c65, 0x1, 0x0);
        gbc.writeMem(0x6c65, { 0x25 });
        gbc.writeMem(0xc9c2, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x4598);
        EXPECT(gbc.pc(), 0xc9c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9c2), 0xcb);
        EXPECT(gbc.readMem(0xc9c3), 0x8e);
        // CB 8E 01D3
        gbc.setState(0xd5e5, 0xabff, 0xa3d0, 0xc497, 0xa535, 0x7458, 0x1, 0x0);
        gbc.writeMem(0x7458, { 0xa8 });
        gbc.writeMem(0xd5e5, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xabff);
        EXPECT(gbc.pc(), 0xd5e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5e5), 0xcb);
        EXPECT(gbc.readMem(0xd5e6), 0x8e);
        // CB 8E 01D6
        gbc.setState(0x96f, 0x341f, 0x7220, 0x317b, 0x8ca3, 0xd4c7, 0x1, 0x1);
        gbc.writeMem(0x96f, { 0xcb, 0x8e });
        gbc.writeMem(0xd4c7, { 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x341f);
        EXPECT(gbc.pc(), 0x971);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4c7), 0xcc);
        // CB 8E 01DA
        gbc.setState(0x66c9, 0x2808, 0x7990, 0x6590, 0xf5e0, 0xce77, 0x0, 0x0);
        gbc.writeMem(0x66c9, { 0xcb, 0x8e });
        gbc.writeMem(0xce77, { 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x2808);
        EXPECT(gbc.pc(), 0x66cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce77), 0xd);
        // CB 8E 01DC
        gbc.setState(0x8f62, 0x9226, 0x7710, 0xaa66, 0xdb23, 0x45a2, 0x1, 0x0);
        gbc.writeMem(0x45a2, { 0xf4 });
        gbc.writeMem(0x8f62, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x9226);
        EXPECT(gbc.pc(), 0x8f64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f62), 0xcb);
        EXPECT(gbc.readMem(0x8f63), 0x8e);
        // CB 8E 01DD
        gbc.setState(0x31b9, 0x4a64, 0xe620, 0xa60a, 0xb9c5, 0xc9e6, 0x0, 0x0);
        gbc.writeMem(0x31b9, { 0xcb, 0x8e });
        gbc.writeMem(0xc9e6, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x4a64);
        EXPECT(gbc.pc(), 0x31bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9e6), 0x48);
        // CB 8E 01DE
        gbc.setState(0x270f, 0xff7d, 0x8dd0, 0xfc1f, 0x2f34, 0x67de, 0x1, 0x1);
        gbc.writeMem(0x270f, { 0xcb, 0x8e });
        gbc.writeMem(0x67de, { 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xff7d);
        EXPECT(gbc.pc(), 0x2711);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8E 01E0
        gbc.setState(0xc928, 0x8306, 0x2da0, 0xa474, 0x1c6b, 0xbfbf, 0x0, 0x0);
        gbc.writeMem(0xbfbf, { 0x93 });
        gbc.writeMem(0xc928, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x8306);
        EXPECT(gbc.pc(), 0xc92a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfbf), 0x91);
        EXPECT(gbc.readMem(0xc928), 0xcb);
        EXPECT(gbc.readMem(0xc929), 0x8e);
        // CB 8E 01E2
        gbc.setState(0x87ff, 0xeae1, 0x6840, 0x5284, 0x6f5c, 0xdae3, 0x1, 0x0);
        gbc.writeMem(0x87ff, { 0xcb, 0x8e });
        gbc.writeMem(0xdae3, { 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xeae1);
        EXPECT(gbc.pc(), 0x8801);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87ff), 0xcb);
        EXPECT(gbc.readMem(0x8800), 0x8e);
        EXPECT(gbc.readMem(0xdae3), 0x30);
        // CB 8E 01E3
        gbc.setState(0x6a42, 0x1525, 0x5e20, 0x11a4, 0xae4c, 0xb162, 0x1, 0x0);
        gbc.writeMem(0x6a42, { 0xcb, 0x8e });
        gbc.writeMem(0xb162, { 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x1525);
        EXPECT(gbc.pc(), 0x6a44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb162), 0x20);
        // CB 8E 01E4
        gbc.setState(0x9e77, 0x7fd8, 0x92e0, 0xe8bd, 0x3c7c, 0xb74c, 0x0, 0x0);
        gbc.writeMem(0x9e77, { 0xcb, 0x8e });
        gbc.writeMem(0xb74c, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x7fd8);
        EXPECT(gbc.pc(), 0x9e79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e77), 0xcb);
        EXPECT(gbc.readMem(0x9e78), 0x8e);
        EXPECT(gbc.readMem(0xb74c), 0x10);
        // CB 8E 01E6
        gbc.setState(0x2267, 0x10d0, 0xeb50, 0xaf45, 0xa4e6, 0x94f8, 0x1, 0x0);
        gbc.writeMem(0x2267, { 0xcb, 0x8e });
        gbc.writeMem(0x94f8, { 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x10d0);
        EXPECT(gbc.pc(), 0x2269);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94f8), 0x81);
        // CB 8E 01E7
        gbc.setState(0x6249, 0xbd3d, 0xb1a0, 0x930b, 0xa957, 0x6d96, 0x0, 0x1);
        gbc.writeMem(0x6249, { 0xcb, 0x8e });
        gbc.writeMem(0x6d96, { 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xbd3d);
        EXPECT(gbc.pc(), 0x624b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8E 01EB
        gbc.setState(0xa0ab, 0xf817, 0x2560, 0x6fb9, 0x3c9b, 0xfc13, 0x0, 0x1);
        gbc.writeMem(0xa0ab, { 0xcb, 0x8e });
        gbc.writeMem(0xfc13, { 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xf817);
        EXPECT(gbc.pc(), 0xa0ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0ab), 0xcb);
        EXPECT(gbc.readMem(0xa0ac), 0x8e);
        EXPECT(gbc.readMem(0xfc13), 0x90);
        // CB 8E 01EC
        gbc.setState(0x5326, 0x11bc, 0x4ab0, 0xc589, 0x1337, 0xc4b6, 0x0, 0x0);
        gbc.writeMem(0x5326, { 0xcb, 0x8e });
        gbc.writeMem(0xc4b6, { 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x11bc);
        EXPECT(gbc.pc(), 0x5328);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4b6), 0xe5);
        // CB 8E 01EF
        gbc.setState(0xc185, 0xd41b, 0xab70, 0x4cde, 0x7bcb, 0xd91a, 0x0, 0x0);
        gbc.writeMem(0xc185, { 0xcb, 0x8e });
        gbc.writeMem(0xd91a, { 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xd41b);
        EXPECT(gbc.pc(), 0xc187);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc185), 0xcb);
        EXPECT(gbc.readMem(0xc186), 0x8e);
        EXPECT(gbc.readMem(0xd91a), 0xa4);
        // CB 8E 01F1
        gbc.setState(0xa620, 0xac21, 0xf0f0, 0x5983, 0x1bc4, 0xf133, 0x0, 0x0);
        gbc.writeMem(0xa620, { 0xcb, 0x8e });
        gbc.writeMem(0xf133, { 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xac21);
        EXPECT(gbc.pc(), 0xa622);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa620), 0xcb);
        EXPECT(gbc.readMem(0xa621), 0x8e);
        EXPECT(gbc.readMem(0xf133), 0x84);
        // CB 8E 01F2
        gbc.setState(0x533, 0x36e6, 0xbf30, 0x1b86, 0xd817, 0xbb4c, 0x0, 0x0);
        gbc.writeMem(0x533, { 0xcb, 0x8e });
        gbc.writeMem(0xbb4c, { 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x36e6);
        EXPECT(gbc.pc(), 0x535);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb4c), 0xa4);
        // CB 8E 01F3
        gbc.setState(0x7e02, 0x90b5, 0x82f0, 0xe06a, 0x9e4c, 0x9b19, 0x1, 0x0);
        gbc.writeMem(0x7e02, { 0xcb, 0x8e });
        gbc.writeMem(0x9b19, { 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x90b5);
        EXPECT(gbc.pc(), 0x7e04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b19), 0x9c);
        // CB 8E 01F4
        gbc.setState(0xa7bf, 0xf808, 0x6b40, 0xfd11, 0x1a37, 0x4662, 0x1, 0x1);
        gbc.writeMem(0x4662, { 0xfc });
        gbc.writeMem(0xa7bf, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xf808);
        EXPECT(gbc.pc(), 0xa7c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7bf), 0xcb);
        EXPECT(gbc.readMem(0xa7c0), 0x8e);
        // CB 8E 01F5
        gbc.setState(0xb7cf, 0x54cc, 0x6490, 0xb411, 0x2788, 0xba51, 0x0, 0x1);
        gbc.writeMem(0xb7cf, { 0xcb, 0x8e });
        gbc.writeMem(0xba51, { 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x54cc);
        EXPECT(gbc.pc(), 0xb7d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7cf), 0xcb);
        EXPECT(gbc.readMem(0xb7d0), 0x8e);
        EXPECT(gbc.readMem(0xba51), 0x85);
        // CB 8E 01F7
        gbc.setState(0xc172, 0xe7d, 0x5200, 0x9bcf, 0x7ce0, 0xcfe0, 0x0, 0x1);
        gbc.writeMem(0xc172, { 0xcb, 0x8e });
        gbc.writeMem(0xcfe0, { 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xe7d);
        EXPECT(gbc.pc(), 0xc174);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc172), 0xcb);
        EXPECT(gbc.readMem(0xc173), 0x8e);
        EXPECT(gbc.readMem(0xcfe0), 0xfc);
        // CB 8E 01F8
        gbc.setState(0x7205, 0x21e4, 0xb2c0, 0x95f9, 0x2451, 0x1512, 0x0, 0x0);
        gbc.writeMem(0x1512, { 0xb1 });
        gbc.writeMem(0x7205, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x21e4);
        EXPECT(gbc.pc(), 0x7207);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8E 01F9
        gbc.setState(0x7be0, 0xa7b7, 0xe2e0, 0x3d1a, 0x4ae7, 0xfcb6, 0x1, 0x0);
        gbc.writeMem(0x7be0, { 0xcb, 0x8e });
        gbc.writeMem(0xfcb6, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xa7b7);
        EXPECT(gbc.pc(), 0x7be2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfcb6), 0x45);
        // CB 8E 01FA
        gbc.setState(0x371c, 0xb7e1, 0xe390, 0x4155, 0xa135, 0x898e, 0x0, 0x1);
        gbc.writeMem(0x371c, { 0xcb, 0x8e });
        gbc.writeMem(0x898e, { 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xb7e1);
        EXPECT(gbc.pc(), 0x371e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x898e), 0x3d);
        // CB 8E 01FB
        gbc.setState(0xbfcc, 0xe549, 0x8a60, 0x6512, 0x7298, 0xe857, 0x0, 0x1);
        gbc.writeMem(0xbfcc, { 0xcb, 0x8e });
        gbc.writeMem(0xe857, { 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xe549);
        EXPECT(gbc.pc(), 0xbfce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfcc), 0xcb);
        EXPECT(gbc.readMem(0xbfcd), 0x8e);
        EXPECT(gbc.readMem(0xe857), 0x54);
        // CB 8E 01FC
        gbc.setState(0x7178, 0xe3f4, 0xc180, 0xa60c, 0x27f9, 0x84c1, 0x0, 0x0);
        gbc.writeMem(0x7178, { 0xcb, 0x8e });
        gbc.writeMem(0x84c1, { 0xfb });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xe3f4);
        EXPECT(gbc.pc(), 0x717a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84c1), 0xf9);
        // CB 8E 01FD
        gbc.setState(0x8959, 0xe9cd, 0x54a0, 0x38da, 0x28b6, 0xdf2e, 0x1, 0x0);
        gbc.writeMem(0x8959, { 0xcb, 0x8e });
        gbc.writeMem(0xdf2e, { 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xe9cd);
        EXPECT(gbc.pc(), 0x895b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8959), 0xcb);
        EXPECT(gbc.readMem(0x895a), 0x8e);
        EXPECT(gbc.readMem(0xdf2e), 0xa4);
        // CB 8E 01FF
        gbc.setState(0xa60a, 0x8d16, 0x3090, 0x2ab8, 0xc526, 0x410a, 0x1, 0x1);
        gbc.writeMem(0x410a, { 0x14 });
        gbc.writeMem(0xa60a, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x8d16);
        EXPECT(gbc.pc(), 0xa60c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa60a), 0xcb);
        EXPECT(gbc.readMem(0xa60b), 0x8e);
        // CB 8E 0202
        gbc.setState(0x25af, 0xeee1, 0xb3d0, 0x115c, 0x1208, 0x9b4b, 0x1, 0x1);
        gbc.writeMem(0x25af, { 0xcb, 0x8e });
        gbc.writeMem(0x9b4b, { 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xeee1);
        EXPECT(gbc.pc(), 0x25b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b4b), 0x88);
        // CB 8E 0203
        gbc.setState(0x26cd, 0x89af, 0xb60, 0xaa90, 0xefed, 0xe57b, 0x0, 0x1);
        gbc.writeMem(0x26cd, { 0xcb, 0x8e });
        gbc.writeMem(0xe57b, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x89af);
        EXPECT(gbc.pc(), 0x26cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe57b), 0x99);
        // CB 8E 0204
        gbc.setState(0xe5bf, 0x7748, 0x2970, 0x1359, 0xe7a5, 0xf024, 0x1, 0x1);
        gbc.writeMem(0xe5bf, { 0xcb, 0x8e });
        gbc.writeMem(0xf024, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x7748);
        EXPECT(gbc.pc(), 0xe5c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5bf), 0xcb);
        EXPECT(gbc.readMem(0xe5c0), 0x8e);
        EXPECT(gbc.readMem(0xf024), 0xa9);
        // CB 8E 0205
        gbc.setState(0x9984, 0xdd4d, 0xb2b0, 0x8871, 0xf6c7, 0x99ae, 0x0, 0x1);
        gbc.writeMem(0x9984, { 0xcb, 0x8e });
        gbc.writeMem(0x99ae, { 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xdd4d);
        EXPECT(gbc.pc(), 0x9986);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9984), 0xcb);
        EXPECT(gbc.readMem(0x9985), 0x8e);
        EXPECT(gbc.readMem(0x99ae), 0xb9);
        // CB 8E 0207
        gbc.setState(0xef2b, 0x4442, 0xd890, 0xd31c, 0x1a75, 0x9de5, 0x0, 0x0);
        gbc.writeMem(0x9de5, { 0x32 });
        gbc.writeMem(0xef2b, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x4442);
        EXPECT(gbc.pc(), 0xef2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9de5), 0x30);
        EXPECT(gbc.readMem(0xef2b), 0xcb);
        EXPECT(gbc.readMem(0xef2c), 0x8e);
        // CB 8E 0209
        gbc.setState(0x938, 0x905a, 0x4870, 0xce54, 0x9b5f, 0xb089, 0x0, 0x0);
        gbc.writeMem(0x938, { 0xcb, 0x8e });
        gbc.writeMem(0xb089, { 0x17 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x905a);
        EXPECT(gbc.pc(), 0x93a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb089), 0x15);
        // CB 8E 020A
        gbc.setState(0x7eb2, 0x56c4, 0xaed0, 0x86d9, 0x8aa0, 0x8b25, 0x1, 0x0);
        gbc.writeMem(0x7eb2, { 0xcb, 0x8e });
        gbc.writeMem(0x8b25, { 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x56c4);
        EXPECT(gbc.pc(), 0x7eb4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b25), 0x59);
        // CB 8E 020B
        gbc.setState(0x3000, 0xb588, 0x51d0, 0x9d9f, 0x3ba8, 0xf80b, 0x1, 0x0);
        gbc.writeMem(0x3000, { 0xcb, 0x8e });
        gbc.writeMem(0xf80b, { 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xb588);
        EXPECT(gbc.pc(), 0x3002);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf80b), 0x5d);
        // CB 8E 020C
        gbc.setState(0xbb21, 0x9366, 0xff20, 0xeece, 0x16e0, 0xa146, 0x1, 0x0);
        gbc.writeMem(0xa146, { 0xb4 });
        gbc.writeMem(0xbb21, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x9366);
        EXPECT(gbc.pc(), 0xbb23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa146), 0xb4);
        EXPECT(gbc.readMem(0xbb21), 0xcb);
        EXPECT(gbc.readMem(0xbb22), 0x8e);
        // CB 8E 020D
        gbc.setState(0x6acd, 0xa19e, 0xa6c0, 0xbd96, 0x68b8, 0xd19d, 0x0, 0x1);
        gbc.writeMem(0x6acd, { 0xcb, 0x8e });
        gbc.writeMem(0xd19d, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xa19e);
        EXPECT(gbc.pc(), 0x6acf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd19d), 0xb8);
        // CB 8E 020F
        gbc.setState(0x998, 0x6404, 0x46a0, 0x9d1d, 0xdef0, 0x585e, 0x0, 0x0);
        gbc.writeMem(0x998, { 0xcb, 0x8e });
        gbc.writeMem(0x585e, { 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x6404);
        EXPECT(gbc.pc(), 0x99a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8E 0210
        gbc.setState(0x86f1, 0x8347, 0x85d0, 0x807f, 0x42cc, 0xa1d7, 0x1, 0x1);
        gbc.writeMem(0x86f1, { 0xcb, 0x8e });
        gbc.writeMem(0xa1d7, { 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x8347);
        EXPECT(gbc.pc(), 0x86f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86f1), 0xcb);
        EXPECT(gbc.readMem(0x86f2), 0x8e);
        EXPECT(gbc.readMem(0xa1d7), 0xd0);
        // CB 8E 0211
        gbc.setState(0xbc55, 0x70d5, 0xdd30, 0xa06, 0x5f8d, 0x9c26, 0x1, 0x0);
        gbc.writeMem(0x9c26, { 0x5d });
        gbc.writeMem(0xbc55, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x70d5);
        EXPECT(gbc.pc(), 0xbc57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c26), 0x5d);
        EXPECT(gbc.readMem(0xbc55), 0xcb);
        EXPECT(gbc.readMem(0xbc56), 0x8e);
        // CB 8E 0212
        gbc.setState(0x85fe, 0x5e58, 0xefa0, 0x9079, 0x7cb2, 0xca66, 0x1, 0x1);
        gbc.writeMem(0x85fe, { 0xcb, 0x8e });
        gbc.writeMem(0xca66, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x5e58);
        EXPECT(gbc.pc(), 0x8600);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85fe), 0xcb);
        EXPECT(gbc.readMem(0x85ff), 0x8e);
        EXPECT(gbc.readMem(0xca66), 0xd5);
        // CB 8E 0213
        gbc.setState(0x395a, 0x5ce0, 0xd3b0, 0x8940, 0x7ea5, 0xab37, 0x0, 0x0);
        gbc.writeMem(0x395a, { 0xcb, 0x8e });
        gbc.writeMem(0xab37, { 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x5ce0);
        EXPECT(gbc.pc(), 0x395c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab37), 0x84);
        // CB 8E 0214
        gbc.setState(0x72be, 0x8415, 0x5280, 0x997e, 0xad30, 0xf5c7, 0x1, 0x1);
        gbc.writeMem(0x72be, { 0xcb, 0x8e });
        gbc.writeMem(0xf5c7, { 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x8415);
        EXPECT(gbc.pc(), 0x72c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf5c7), 0xcc);
        // CB 8E 0216
        gbc.setState(0x55c7, 0x8f53, 0x6e0, 0x613a, 0x4fba, 0x7d32, 0x1, 0x1);
        gbc.writeMem(0x55c7, { 0xcb, 0x8e });
        gbc.writeMem(0x7d32, { 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x8f53);
        EXPECT(gbc.pc(), 0x55c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8E 0217
        gbc.setState(0x4e45, 0xae49, 0xa1c0, 0x377, 0x7447, 0xed2e, 0x0, 0x0);
        gbc.writeMem(0x4e45, { 0xcb, 0x8e });
        gbc.writeMem(0xed2e, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xae49);
        EXPECT(gbc.pc(), 0x4e47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed2e), 0x60);
        // CB 8E 0218
        gbc.setState(0x719b, 0xed82, 0x7370, 0x38cf, 0x2375, 0xf177, 0x0, 0x0);
        gbc.writeMem(0x719b, { 0xcb, 0x8e });
        gbc.writeMem(0xf177, { 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xed82);
        EXPECT(gbc.pc(), 0x719d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf177), 0x2d);
        // CB 8E 0219
        gbc.setState(0xde59, 0x15e7, 0xbb80, 0xcd58, 0x4b8c, 0x8535, 0x0, 0x1);
        gbc.writeMem(0x8535, { 0x47 });
        gbc.writeMem(0xde59, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x15e7);
        EXPECT(gbc.pc(), 0xde5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8535), 0x45);
        EXPECT(gbc.readMem(0xde59), 0xcb);
        EXPECT(gbc.readMem(0xde5a), 0x8e);
        // CB 8E 021A
        gbc.setState(0x84e6, 0xd6bf, 0x5440, 0x97ef, 0x2085, 0x52f5, 0x1, 0x0);
        gbc.writeMem(0x52f5, { 0x58 });
        gbc.writeMem(0x84e6, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xd6bf);
        EXPECT(gbc.pc(), 0x84e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84e6), 0xcb);
        EXPECT(gbc.readMem(0x84e7), 0x8e);
        // CB 8E 021B
        gbc.setState(0x1531, 0x24bc, 0x20, 0xd04, 0x3e48, 0xd942, 0x0, 0x1);
        gbc.writeMem(0x1531, { 0xcb, 0x8e });
        gbc.writeMem(0xd942, { 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x24bc);
        EXPECT(gbc.pc(), 0x1533);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd942), 0xfc);
        // CB 8E 021C
        gbc.setState(0x237b, 0x4ea, 0xb3c0, 0x3467, 0x8824, 0x54fa, 0x1, 0x0);
        gbc.writeMem(0x237b, { 0xcb, 0x8e });
        gbc.writeMem(0x54fa, { 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x4ea);
        EXPECT(gbc.pc(), 0x237d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8E 021D
        gbc.setState(0xb42f, 0xc38c, 0x16f0, 0x14e1, 0x6f6f, 0x2a60, 0x1, 0x0);
        gbc.writeMem(0x2a60, { 0x81 });
        gbc.writeMem(0xb42f, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xc38c);
        EXPECT(gbc.pc(), 0xb431);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb42f), 0xcb);
        EXPECT(gbc.readMem(0xb430), 0x8e);
        // CB 8E 021F
        gbc.setState(0x8004, 0x7734, 0xc6c0, 0x357a, 0x4ce1, 0xb9c9, 0x1, 0x0);
        gbc.writeMem(0x8004, { 0xcb, 0x8e });
        gbc.writeMem(0xb9c9, { 0x31 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x7734);
        EXPECT(gbc.pc(), 0x8006);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8004), 0xcb);
        EXPECT(gbc.readMem(0x8005), 0x8e);
        EXPECT(gbc.readMem(0xb9c9), 0x31);
        // CB 8E 0221
        gbc.setState(0xde1, 0x33df, 0xa340, 0x8ef3, 0x691c, 0x6953, 0x0, 0x0);
        gbc.writeMem(0xde1, { 0xcb, 0x8e });
        gbc.writeMem(0x6953, { 0xfc });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x33df);
        EXPECT(gbc.pc(), 0xde3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8E 0225
        gbc.setState(0x8023, 0x5d3e, 0xeed0, 0xc664, 0x1d9, 0xd0fd, 0x1, 0x0);
        gbc.writeMem(0x8023, { 0xcb, 0x8e });
        gbc.writeMem(0xd0fd, { 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x5d3e);
        EXPECT(gbc.pc(), 0x8025);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8023), 0xcb);
        EXPECT(gbc.readMem(0x8024), 0x8e);
        EXPECT(gbc.readMem(0xd0fd), 0xf5);
        // CB 8E 0226
        gbc.setState(0x4c1c, 0x54e2, 0x6f00, 0x622c, 0x77ec, 0x33d8, 0x0, 0x0);
        gbc.writeMem(0x33d8, { 0x1d });
        gbc.writeMem(0x4c1c, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x54e2);
        EXPECT(gbc.pc(), 0x4c1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8E 0228
        gbc.setState(0x6640, 0xe5c7, 0x2200, 0xdec0, 0xae6a, 0xbff2, 0x1, 0x1);
        gbc.writeMem(0x6640, { 0xcb, 0x8e });
        gbc.writeMem(0xbff2, { 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xe5c7);
        EXPECT(gbc.pc(), 0x6642);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbff2), 0xc9);
        // CB 8E 022B
        gbc.setState(0x19da, 0x728a, 0xbe80, 0xf389, 0xcf32, 0xa55b, 0x0, 0x1);
        gbc.writeMem(0x19da, { 0xcb, 0x8e });
        gbc.writeMem(0xa55b, { 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x728a);
        EXPECT(gbc.pc(), 0x19dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa55b), 0x18);
        // CB 8E 022C
        gbc.setState(0x34a6, 0x8fa1, 0x7440, 0x35dc, 0xee12, 0x9cca, 0x0, 0x0);
        gbc.writeMem(0x34a6, { 0xcb, 0x8e });
        gbc.writeMem(0x9cca, { 0x2c });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x8fa1);
        EXPECT(gbc.pc(), 0x34a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cca), 0x2c);
        // CB 8E 022D
        gbc.setState(0xa3c, 0xe61f, 0x310, 0x8acd, 0x2851, 0x6431, 0x0, 0x0);
        gbc.writeMem(0xa3c, { 0xcb, 0x8e });
        gbc.writeMem(0x6431, { 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xe61f);
        EXPECT(gbc.pc(), 0xa3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8E 022E
        gbc.setState(0x553b, 0xf04a, 0xf0d0, 0x8dee, 0x3a8b, 0xbc7c, 0x1, 0x1);
        gbc.writeMem(0x553b, { 0xcb, 0x8e });
        gbc.writeMem(0xbc7c, { 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xf04a);
        EXPECT(gbc.pc(), 0x553d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc7c), 0x11);
        // CB 8E 022F
        gbc.setState(0x5ae6, 0xed30, 0xfe70, 0xaf90, 0x25d5, 0x926c, 0x1, 0x1);
        gbc.writeMem(0x5ae6, { 0xcb, 0x8e });
        gbc.writeMem(0x926c, { 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xed30);
        EXPECT(gbc.pc(), 0x5ae8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x926c), 0x4);
        // CB 8E 0230
        gbc.setState(0xe2db, 0xeb, 0xadd0, 0xb946, 0x7166, 0xd4f6, 0x0, 0x1);
        gbc.writeMem(0xd4f6, { 0x91 });
        gbc.writeMem(0xe2db, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xeb);
        EXPECT(gbc.pc(), 0xe2dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4f6), 0x91);
        EXPECT(gbc.readMem(0xe2db), 0xcb);
        EXPECT(gbc.readMem(0xe2dc), 0x8e);
        // CB 8E 0231
        gbc.setState(0x21ed, 0xb2f6, 0x4500, 0x1c5c, 0x9fa, 0x8d7f, 0x1, 0x1);
        gbc.writeMem(0x21ed, { 0xcb, 0x8e });
        gbc.writeMem(0x8d7f, { 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xb2f6);
        EXPECT(gbc.pc(), 0x21ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d7f), 0x49);
        // CB 8E 0234
        gbc.setState(0x551e, 0x7044, 0x1350, 0x6025, 0x8643, 0xaf4d, 0x0, 0x0);
        gbc.writeMem(0x551e, { 0xcb, 0x8e });
        gbc.writeMem(0xaf4d, { 0x8 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x7044);
        EXPECT(gbc.pc(), 0x5520);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf4d), 0x8);
        // CB 8E 0235
        gbc.setState(0xa7d6, 0x68c8, 0xa040, 0x4e8b, 0x3ec7, 0xc0d2, 0x1, 0x1);
        gbc.writeMem(0xa7d6, { 0xcb, 0x8e });
        gbc.writeMem(0xc0d2, { 0xb0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x68c8);
        EXPECT(gbc.pc(), 0xa7d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7d6), 0xcb);
        EXPECT(gbc.readMem(0xa7d7), 0x8e);
        EXPECT(gbc.readMem(0xc0d2), 0xb0);
        // CB 8E 0236
        gbc.setState(0xdbf7, 0xa03b, 0xecd0, 0xd0e9, 0x85f8, 0xe72b, 0x1, 0x0);
        gbc.writeMem(0xdbf7, { 0xcb, 0x8e });
        gbc.writeMem(0xe72b, { 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xa03b);
        EXPECT(gbc.pc(), 0xdbf9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbf7), 0xcb);
        EXPECT(gbc.readMem(0xdbf8), 0x8e);
        EXPECT(gbc.readMem(0xe72b), 0xfd);
        // CB 8E 0237
        gbc.setState(0xe94f, 0xdee6, 0x3b80, 0x7b08, 0xb2d5, 0xad68, 0x1, 0x1);
        gbc.writeMem(0xad68, { 0x11 });
        gbc.writeMem(0xe94f, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xdee6);
        EXPECT(gbc.pc(), 0xe951);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad68), 0x11);
        EXPECT(gbc.readMem(0xe94f), 0xcb);
        EXPECT(gbc.readMem(0xe950), 0x8e);
        // CB 8E 0238
        gbc.setState(0x8c11, 0x5ebd, 0xce30, 0x6ec9, 0xd708, 0x6bc9, 0x0, 0x0);
        gbc.writeMem(0x6bc9, { 0x3d });
        gbc.writeMem(0x8c11, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x5ebd);
        EXPECT(gbc.pc(), 0x8c13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c11), 0xcb);
        EXPECT(gbc.readMem(0x8c12), 0x8e);
        // CB 8E 0239
        gbc.setState(0x745, 0xcc00, 0x75b0, 0x7ea1, 0x3800, 0x59cb, 0x0, 0x1);
        gbc.writeMem(0x745, { 0xcb, 0x8e });
        gbc.writeMem(0x59cb, { 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xcc00);
        EXPECT(gbc.pc(), 0x747);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8E 023A
        gbc.setState(0x18c7, 0x15dc, 0x28b0, 0xbe5e, 0xe0a0, 0x65a, 0x1, 0x1);
        gbc.writeMem(0x65a, { 0x24 });
        gbc.writeMem(0x18c7, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x15dc);
        EXPECT(gbc.pc(), 0x18c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8E 023C
        gbc.setState(0x1766, 0x6107, 0xbac0, 0xe256, 0x3034, 0xe6f0, 0x1, 0x0);
        gbc.writeMem(0x1766, { 0xcb, 0x8e });
        gbc.writeMem(0xe6f0, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x6107);
        EXPECT(gbc.pc(), 0x1768);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6f0), 0x21);
        // CB 8E 023E
        gbc.setState(0x25f2, 0xecfe, 0x57f0, 0xd358, 0x7dd2, 0xf1c5, 0x1, 0x0);
        gbc.writeMem(0x25f2, { 0xcb, 0x8e });
        gbc.writeMem(0xf1c5, { 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xecfe);
        EXPECT(gbc.pc(), 0x25f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf1c5), 0x6c);
        // CB 8E 023F
        gbc.setState(0x2741, 0x56f5, 0x8bf0, 0x8db2, 0xb1e0, 0xc8a7, 0x1, 0x1);
        gbc.writeMem(0x2741, { 0xcb, 0x8e });
        gbc.writeMem(0xc8a7, { 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x56f5);
        EXPECT(gbc.pc(), 0x2743);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8a7), 0xa4);
        // CB 8E 0240
        gbc.setState(0xc7fa, 0x1ae3, 0x7e20, 0x12cf, 0x5bd2, 0x2778, 0x0, 0x0);
        gbc.writeMem(0x2778, { 0x21 });
        gbc.writeMem(0xc7fa, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x1ae3);
        EXPECT(gbc.pc(), 0xc7fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7fa), 0xcb);
        EXPECT(gbc.readMem(0xc7fb), 0x8e);
        // CB 8E 0241
        gbc.setState(0x6f1d, 0x24e0, 0x1b50, 0x1314, 0xa122, 0xa78a, 0x1, 0x0);
        gbc.writeMem(0x6f1d, { 0xcb, 0x8e });
        gbc.writeMem(0xa78a, { 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x24e0);
        EXPECT(gbc.pc(), 0x6f1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa78a), 0x3c);
        // CB 8E 0242
        gbc.setState(0x3753, 0x9ca, 0x5120, 0x46b, 0x4e2d, 0x403b, 0x0, 0x0);
        gbc.writeMem(0x3753, { 0xcb, 0x8e });
        gbc.writeMem(0x403b, { 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x9ca);
        EXPECT(gbc.pc(), 0x3755);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8E 0243
        gbc.setState(0x392d, 0xd93c, 0xf790, 0x9b82, 0xf948, 0x9e88, 0x0, 0x1);
        gbc.writeMem(0x392d, { 0xcb, 0x8e });
        gbc.writeMem(0x9e88, { 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xd93c);
        EXPECT(gbc.pc(), 0x392f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e88), 0xe4);
        // CB 8E 0245
        gbc.setState(0x16c7, 0xb1f3, 0x9c30, 0xd972, 0x685e, 0xf8e0, 0x1, 0x1);
        gbc.writeMem(0x16c7, { 0xcb, 0x8e });
        gbc.writeMem(0xf8e0, { 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xb1f3);
        EXPECT(gbc.pc(), 0x16c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf8e0), 0x75);
        // CB 8E 0246
        gbc.setState(0x7201, 0xcc62, 0x5e30, 0xe3ea, 0x5421, 0xe9e6, 0x0, 0x1);
        gbc.writeMem(0x7201, { 0xcb, 0x8e });
        gbc.writeMem(0xe9e6, { 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xcc62);
        EXPECT(gbc.pc(), 0x7203);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9e6), 0x98);
        // CB 8E 0247
        gbc.setState(0xb3e0, 0x3be, 0x830, 0x84f0, 0x4bb0, 0xedb0, 0x0, 0x1);
        gbc.writeMem(0xb3e0, { 0xcb, 0x8e });
        gbc.writeMem(0xedb0, { 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x3be);
        EXPECT(gbc.pc(), 0xb3e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3e0), 0xcb);
        EXPECT(gbc.readMem(0xb3e1), 0x8e);
        EXPECT(gbc.readMem(0xedb0), 0xa0);
        // CB 8E 0248
        gbc.setState(0x87e4, 0x9f15, 0x5ba0, 0xeaa8, 0x1a4b, 0xb90f, 0x0, 0x0);
        gbc.writeMem(0x87e4, { 0xcb, 0x8e });
        gbc.writeMem(0xb90f, { 0xc5 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x9f15);
        EXPECT(gbc.pc(), 0x87e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87e4), 0xcb);
        EXPECT(gbc.readMem(0x87e5), 0x8e);
        EXPECT(gbc.readMem(0xb90f), 0xc5);
        // CB 8E 024A
        gbc.setState(0x3c32, 0x3a45, 0x6410, 0x9b9a, 0xcddf, 0x8757, 0x0, 0x0);
        gbc.writeMem(0x3c32, { 0xcb, 0x8e });
        gbc.writeMem(0x8757, { 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x3a45);
        EXPECT(gbc.pc(), 0x3c34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8757), 0xc9);
        // CB 8E 024B
        gbc.setState(0x264, 0x3e16, 0xa9f0, 0x7c0, 0x13d6, 0xd987, 0x0, 0x1);
        gbc.writeMem(0x264, { 0xcb, 0x8e });
        gbc.writeMem(0xd987, { 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x3e16);
        EXPECT(gbc.pc(), 0x266);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd987), 0x18);
        // CB 8E 024C
        gbc.setState(0x26de, 0x12ae, 0x2870, 0x62fb, 0x961d, 0x82d3, 0x0, 0x1);
        gbc.writeMem(0x26de, { 0xcb, 0x8e });
        gbc.writeMem(0x82d3, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x12ae);
        EXPECT(gbc.pc(), 0x26e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82d3), 0x70);
        // CB 8E 024E
        gbc.setState(0xc0ff, 0xbb84, 0x80, 0xed7f, 0x220c, 0xcc3f, 0x0, 0x0);
        gbc.writeMem(0xc0ff, { 0xcb, 0x8e });
        gbc.writeMem(0xcc3f, { 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xbb84);
        EXPECT(gbc.pc(), 0xc101);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0ff), 0xcb);
        EXPECT(gbc.readMem(0xc100), 0x8e);
        EXPECT(gbc.readMem(0xcc3f), 0x5d);
        // CB 8E 0250
        gbc.setState(0x5dc5, 0x3b01, 0x520, 0x4701, 0x259e, 0x8d39, 0x1, 0x1);
        gbc.writeMem(0x5dc5, { 0xcb, 0x8e });
        gbc.writeMem(0x8d39, { 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x3b01);
        EXPECT(gbc.pc(), 0x5dc7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d39), 0x39);
        // CB 8E 0252
        gbc.setState(0x6548, 0x8295, 0xcdb0, 0xaa07, 0x89c5, 0x1e03, 0x0, 0x0);
        gbc.writeMem(0x1e03, { 0x91 });
        gbc.writeMem(0x6548, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x8295);
        EXPECT(gbc.pc(), 0x654a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8E 0253
        gbc.setState(0x6e16, 0xaab6, 0xd7c0, 0xec79, 0x4bdd, 0xb309, 0x0, 0x0);
        gbc.writeMem(0x6e16, { 0xcb, 0x8e });
        gbc.writeMem(0xb309, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xaab6);
        EXPECT(gbc.pc(), 0x6e18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb309), 0x79);
        // CB 8E 0254
        gbc.setState(0x5ced, 0x117d, 0x3f0, 0x669e, 0xd1c7, 0x7d92, 0x1, 0x1);
        gbc.writeMem(0x5ced, { 0xcb, 0x8e });
        gbc.writeMem(0x7d92, { 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x117d);
        EXPECT(gbc.pc(), 0x5cef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8E 0256
        gbc.setState(0x8ab3, 0x5090, 0x9b50, 0x89ce, 0xb226, 0x26c9, 0x0, 0x1);
        gbc.writeMem(0x26c9, { 0x35 });
        gbc.writeMem(0x8ab3, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x5090);
        EXPECT(gbc.pc(), 0x8ab5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ab3), 0xcb);
        EXPECT(gbc.readMem(0x8ab4), 0x8e);
        // CB 8E 0257
        gbc.setState(0x1f87, 0x6bee, 0xb0b0, 0xd7e0, 0xf31e, 0xf835, 0x1, 0x0);
        gbc.writeMem(0x1f87, { 0xcb, 0x8e });
        gbc.writeMem(0xf835, { 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x6bee);
        EXPECT(gbc.pc(), 0x1f89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf835), 0x9);
        // CB 8E 0259
        gbc.setState(0x4cf6, 0xcba, 0x2420, 0xaa45, 0x3fb4, 0x5527, 0x0, 0x0);
        gbc.writeMem(0x4cf6, { 0xcb, 0x8e });
        gbc.writeMem(0x5527, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xcba);
        EXPECT(gbc.pc(), 0x4cf8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8E 025B
        gbc.setState(0xcac9, 0x6ff3, 0xe540, 0x1819, 0x88c1, 0xe0f6, 0x0, 0x1);
        gbc.writeMem(0xcac9, { 0xcb, 0x8e });
        gbc.writeMem(0xe0f6, { 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x6ff3);
        EXPECT(gbc.pc(), 0xcacb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcac9), 0xcb);
        EXPECT(gbc.readMem(0xcaca), 0x8e);
        EXPECT(gbc.readMem(0xe0f6), 0xed);
        // CB 8E 025C
        gbc.setState(0x3099, 0x1f84, 0xae30, 0x844, 0xe36f, 0xfe0d, 0x1, 0x0);
        gbc.writeMem(0x3099, { 0xcb, 0x8e });
        gbc.writeMem(0xfe0d, { 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x1f84);
        EXPECT(gbc.pc(), 0x309b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfe0d), 0xd);
        // CB 8E 025D
        gbc.setState(0x345c, 0x69d5, 0xe80, 0x9a2f, 0x8289, 0x881a, 0x0, 0x0);
        gbc.writeMem(0x345c, { 0xcb, 0x8e });
        gbc.writeMem(0x881a, { 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x69d5);
        EXPECT(gbc.pc(), 0x345e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x881a), 0xa9);
        // CB 8E 025F
        gbc.setState(0x5884, 0x7f79, 0x8470, 0xe0cb, 0xb14, 0xec77, 0x0, 0x1);
        gbc.writeMem(0x5884, { 0xcb, 0x8e });
        gbc.writeMem(0xec77, { 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x7f79);
        EXPECT(gbc.pc(), 0x5886);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec77), 0xf0);
        // CB 8E 0261
        gbc.setState(0xc711, 0x6129, 0x81a0, 0x152a, 0xdb81, 0x9e22, 0x0, 0x0);
        gbc.writeMem(0x9e22, { 0x96 });
        gbc.writeMem(0xc711, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x6129);
        EXPECT(gbc.pc(), 0xc713);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e22), 0x94);
        EXPECT(gbc.readMem(0xc711), 0xcb);
        EXPECT(gbc.readMem(0xc712), 0x8e);
        // CB 8E 0262
        gbc.setState(0x458e, 0xc2a9, 0xfc40, 0xb50, 0x373d, 0x96f7, 0x0, 0x1);
        gbc.writeMem(0x458e, { 0xcb, 0x8e });
        gbc.writeMem(0x96f7, { 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xc2a9);
        EXPECT(gbc.pc(), 0x4590);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96f7), 0xdd);
        // CB 8E 0264
        gbc.setState(0x3838, 0xa283, 0x7d00, 0x9d79, 0x8f5, 0x2b3, 0x0, 0x1);
        gbc.writeMem(0x2b3, { 0xc4 });
        gbc.writeMem(0x3838, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xa283);
        EXPECT(gbc.pc(), 0x383a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8E 0267
        gbc.setState(0xbda4, 0x6daf, 0xd4f0, 0x32fb, 0x7a89, 0x1501, 0x1, 0x0);
        gbc.writeMem(0x1501, { 0x8 });
        gbc.writeMem(0xbda4, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x6daf);
        EXPECT(gbc.pc(), 0xbda6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbda4), 0xcb);
        EXPECT(gbc.readMem(0xbda5), 0x8e);
        // CB 8E 0268
        gbc.setState(0xab36, 0x56bb, 0x3980, 0xbd89, 0xf6c2, 0x4f19, 0x1, 0x1);
        gbc.writeMem(0x4f19, { 0x18 });
        gbc.writeMem(0xab36, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x56bb);
        EXPECT(gbc.pc(), 0xab38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab36), 0xcb);
        EXPECT(gbc.readMem(0xab37), 0x8e);
        // CB 8E 0269
        gbc.setState(0x2955, 0x35c5, 0x4120, 0xe02f, 0xbd10, 0xe528, 0x0, 0x0);
        gbc.writeMem(0x2955, { 0xcb, 0x8e });
        gbc.writeMem(0xe528, { 0x48 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x35c5);
        EXPECT(gbc.pc(), 0x2957);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe528), 0x48);
        // CB 8E 026A
        gbc.setState(0x6fbd, 0x578a, 0xf0b0, 0xe078, 0xc155, 0x4a26, 0x0, 0x1);
        gbc.writeMem(0x4a26, { 0x69 });
        gbc.writeMem(0x6fbd, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x578a);
        EXPECT(gbc.pc(), 0x6fbf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8E 026B
        gbc.setState(0x1c08, 0x784b, 0xb920, 0x5d02, 0xc10b, 0xa8da, 0x1, 0x0);
        gbc.writeMem(0x1c08, { 0xcb, 0x8e });
        gbc.writeMem(0xa8da, { 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x784b);
        EXPECT(gbc.pc(), 0x1c0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8da), 0xcc);
        // CB 8E 026C
        gbc.setState(0xe9a, 0x9170, 0x2c00, 0xe8a5, 0xc24d, 0x7768, 0x1, 0x0);
        gbc.writeMem(0xe9a, { 0xcb, 0x8e });
        gbc.writeMem(0x7768, { 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x9170);
        EXPECT(gbc.pc(), 0xe9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8E 026E
        gbc.setState(0x17, 0x5449, 0x6450, 0x1bf8, 0x2586, 0x945d, 0x0, 0x1);
        gbc.writeMem(0x17, { 0xcb, 0x8e });
        gbc.writeMem(0x945d, { 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x5449);
        EXPECT(gbc.pc(), 0x19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x945d), 0xe0);
        // CB 8E 0270
        gbc.setState(0xd369, 0xf7e8, 0xafd0, 0x2b65, 0x2340, 0x8889, 0x0, 0x1);
        gbc.writeMem(0x8889, { 0x35 });
        gbc.writeMem(0xd369, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xf7e8);
        EXPECT(gbc.pc(), 0xd36b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8889), 0x35);
        EXPECT(gbc.readMem(0xd369), 0xcb);
        EXPECT(gbc.readMem(0xd36a), 0x8e);
        // CB 8E 0272
        gbc.setState(0xb10b, 0xe20e, 0x3270, 0x5137, 0xfc8a, 0xd53e, 0x0, 0x1);
        gbc.writeMem(0xb10b, { 0xcb, 0x8e });
        gbc.writeMem(0xd53e, { 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xe20e);
        EXPECT(gbc.pc(), 0xb10d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb10b), 0xcb);
        EXPECT(gbc.readMem(0xb10c), 0x8e);
        EXPECT(gbc.readMem(0xd53e), 0x19);
        // CB 8E 0273
        gbc.setState(0x80e4, 0x1bfa, 0x550, 0xf34e, 0x4b9f, 0x9e1a, 0x0, 0x1);
        gbc.writeMem(0x80e4, { 0xcb, 0x8e });
        gbc.writeMem(0x9e1a, { 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x1bfa);
        EXPECT(gbc.pc(), 0x80e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80e4), 0xcb);
        EXPECT(gbc.readMem(0x80e5), 0x8e);
        EXPECT(gbc.readMem(0x9e1a), 0xf5);
        // CB 8E 0274
        gbc.setState(0x4b88, 0xf971, 0x6d60, 0x5b3b, 0x81c2, 0x8363, 0x0, 0x1);
        gbc.writeMem(0x4b88, { 0xcb, 0x8e });
        gbc.writeMem(0x8363, { 0x31 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xf971);
        EXPECT(gbc.pc(), 0x4b8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8363), 0x31);
        // CB 8E 0275
        gbc.setState(0xbe0c, 0x4397, 0xa3b0, 0xbbb7, 0x14d9, 0x82c1, 0x1, 0x0);
        gbc.writeMem(0x82c1, { 0x90 });
        gbc.writeMem(0xbe0c, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x4397);
        EXPECT(gbc.pc(), 0xbe0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82c1), 0x90);
        EXPECT(gbc.readMem(0xbe0c), 0xcb);
        EXPECT(gbc.readMem(0xbe0d), 0x8e);
        // CB 8E 0276
        gbc.setState(0xcde2, 0x68ed, 0x2670, 0x353c, 0x8667, 0x26fb, 0x0, 0x0);
        gbc.writeMem(0x26fb, { 0x90 });
        gbc.writeMem(0xcde2, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x68ed);
        EXPECT(gbc.pc(), 0xcde4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcde2), 0xcb);
        EXPECT(gbc.readMem(0xcde3), 0x8e);
        // CB 8E 0277
        gbc.setState(0x66f8, 0xdd9f, 0x1ba0, 0x3489, 0x4dbd, 0xf278, 0x1, 0x1);
        gbc.writeMem(0x66f8, { 0xcb, 0x8e });
        gbc.writeMem(0xf278, { 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xdd9f);
        EXPECT(gbc.pc(), 0x66fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf278), 0xdd);
        // CB 8E 0279
        gbc.setState(0x9b28, 0x41, 0x8ef0, 0x2394, 0x4699, 0x4564, 0x1, 0x0);
        gbc.writeMem(0x4564, { 0x3c });
        gbc.writeMem(0x9b28, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x41);
        EXPECT(gbc.pc(), 0x9b2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b28), 0xcb);
        EXPECT(gbc.readMem(0x9b29), 0x8e);
        // CB 8E 027B
        gbc.setState(0x1729, 0x93c, 0xb070, 0x27e4, 0x5d23, 0xf431, 0x1, 0x1);
        gbc.writeMem(0x1729, { 0xcb, 0x8e });
        gbc.writeMem(0xf431, { 0xb5 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x93c);
        EXPECT(gbc.pc(), 0x172b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf431), 0xb5);
        // CB 8E 027C
        gbc.setState(0x1ab1, 0xe686, 0x57c0, 0xc69a, 0x2f58, 0x830e, 0x1, 0x1);
        gbc.writeMem(0x1ab1, { 0xcb, 0x8e });
        gbc.writeMem(0x830e, { 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xe686);
        EXPECT(gbc.pc(), 0x1ab3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x830e), 0x80);
        // CB 8E 0280
        gbc.setState(0x8486, 0x6b6c, 0x7460, 0xd0a1, 0xecaf, 0x17b5, 0x1, 0x1);
        gbc.writeMem(0x17b5, { 0x28 });
        gbc.writeMem(0x8486, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x6b6c);
        EXPECT(gbc.pc(), 0x8488);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8486), 0xcb);
        EXPECT(gbc.readMem(0x8487), 0x8e);
        // CB 8E 0281
        gbc.setState(0xd5e2, 0x36f9, 0xd10, 0x1bc5, 0x28bc, 0xc82f, 0x1, 0x0);
        gbc.writeMem(0xc82f, { 0x48 });
        gbc.writeMem(0xd5e2, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x36f9);
        EXPECT(gbc.pc(), 0xd5e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc82f), 0x48);
        EXPECT(gbc.readMem(0xd5e2), 0xcb);
        EXPECT(gbc.readMem(0xd5e3), 0x8e);
        // CB 8E 0283
        gbc.setState(0x6f0, 0x6c51, 0x8a80, 0xa358, 0xe983, 0x823f, 0x1, 0x1);
        gbc.writeMem(0x6f0, { 0xcb, 0x8e });
        gbc.writeMem(0x823f, { 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x6c51);
        EXPECT(gbc.pc(), 0x6f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x823f), 0x39);
        // CB 8E 0286
        gbc.setState(0x8b77, 0x6660, 0x38d0, 0x61d9, 0xa4f8, 0x994d, 0x0, 0x0);
        gbc.writeMem(0x8b77, { 0xcb, 0x8e });
        gbc.writeMem(0x994d, { 0x4e });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x6660);
        EXPECT(gbc.pc(), 0x8b79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b77), 0xcb);
        EXPECT(gbc.readMem(0x8b78), 0x8e);
        EXPECT(gbc.readMem(0x994d), 0x4c);
        // CB 8E 0287
        gbc.setState(0xb229, 0xac5b, 0xd7c0, 0xea13, 0x2a83, 0xe6fb, 0x0, 0x0);
        gbc.writeMem(0xb229, { 0xcb, 0x8e });
        gbc.writeMem(0xe6fb, { 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xac5b);
        EXPECT(gbc.pc(), 0xb22b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb229), 0xcb);
        EXPECT(gbc.readMem(0xb22a), 0x8e);
        EXPECT(gbc.readMem(0xe6fb), 0x24);
        // CB 8E 0288
        gbc.setState(0xe518, 0xb288, 0x6c60, 0x1f9, 0x5515, 0x5c0a, 0x1, 0x0);
        gbc.writeMem(0x5c0a, { 0x39 });
        gbc.writeMem(0xe518, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xb288);
        EXPECT(gbc.pc(), 0xe51a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe518), 0xcb);
        EXPECT(gbc.readMem(0xe519), 0x8e);
        // CB 8E 0289
        gbc.setState(0x3147, 0xc17d, 0xef70, 0xd6f7, 0xde61, 0xdcd2, 0x0, 0x0);
        gbc.writeMem(0x3147, { 0xcb, 0x8e });
        gbc.writeMem(0xdcd2, { 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xc17d);
        EXPECT(gbc.pc(), 0x3149);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdcd2), 0x88);
        // CB 8E 028A
        gbc.setState(0x5584, 0x49fd, 0x32a0, 0xba0f, 0xb0f2, 0xaeb0, 0x0, 0x0);
        gbc.writeMem(0x5584, { 0xcb, 0x8e });
        gbc.writeMem(0xaeb0, { 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x49fd);
        EXPECT(gbc.pc(), 0x5586);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaeb0), 0x8d);
        // CB 8E 028B
        gbc.setState(0xb9a3, 0x7db6, 0x400, 0x62fb, 0x3e0a, 0xaece, 0x1, 0x1);
        gbc.writeMem(0xaece, { 0x12 });
        gbc.writeMem(0xb9a3, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x7db6);
        EXPECT(gbc.pc(), 0xb9a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaece), 0x10);
        EXPECT(gbc.readMem(0xb9a3), 0xcb);
        EXPECT(gbc.readMem(0xb9a4), 0x8e);
        // CB 8E 028C
        gbc.setState(0x422e, 0x241b, 0x8100, 0x1b48, 0xbcb2, 0xf58e, 0x0, 0x0);
        gbc.writeMem(0x422e, { 0xcb, 0x8e });
        gbc.writeMem(0xf58e, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x241b);
        EXPECT(gbc.pc(), 0x4230);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf58e), 0x95);
        // CB 8E 028D
        gbc.setState(0xad70, 0x3f9f, 0x6d40, 0x1b32, 0x1cef, 0x55b4, 0x1, 0x0);
        gbc.writeMem(0x55b4, { 0x31 });
        gbc.writeMem(0xad70, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x3f9f);
        EXPECT(gbc.pc(), 0xad72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad70), 0xcb);
        EXPECT(gbc.readMem(0xad71), 0x8e);
        // CB 8E 028F
        gbc.setState(0xacd3, 0xc064, 0x9af0, 0x6ee9, 0x9600, 0xbfb8, 0x1, 0x1);
        gbc.writeMem(0xacd3, { 0xcb, 0x8e });
        gbc.writeMem(0xbfb8, { 0x37 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xc064);
        EXPECT(gbc.pc(), 0xacd5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacd3), 0xcb);
        EXPECT(gbc.readMem(0xacd4), 0x8e);
        EXPECT(gbc.readMem(0xbfb8), 0x35);
        // CB 8E 0290
        gbc.setState(0x3765, 0xb0c2, 0x8c10, 0xf03e, 0x8f30, 0xe28a, 0x0, 0x1);
        gbc.writeMem(0x3765, { 0xcb, 0x8e });
        gbc.writeMem(0xe28a, { 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xb0c2);
        EXPECT(gbc.pc(), 0x3767);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe28a), 0x38);
        // CB 8E 0293
        gbc.setState(0x53c, 0xe832, 0xb200, 0x801d, 0xe365, 0xe9ee, 0x0, 0x1);
        gbc.writeMem(0x53c, { 0xcb, 0x8e });
        gbc.writeMem(0xe9ee, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xe832);
        EXPECT(gbc.pc(), 0x53e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9ee), 0xd8);
        // CB 8E 0295
        gbc.setState(0xa4f9, 0xeaa, 0x7800, 0x5742, 0xa3f, 0x7ec1, 0x0, 0x0);
        gbc.writeMem(0x7ec1, { 0xf5 });
        gbc.writeMem(0xa4f9, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xeaa);
        EXPECT(gbc.pc(), 0xa4fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4f9), 0xcb);
        EXPECT(gbc.readMem(0xa4fa), 0x8e);
        // CB 8E 0296
        gbc.setState(0x810c, 0xd4cd, 0x6a0, 0xb7cb, 0x4b73, 0x1686, 0x0, 0x1);
        gbc.writeMem(0x1686, { 0x79 });
        gbc.writeMem(0x810c, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xd4cd);
        EXPECT(gbc.pc(), 0x810e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x810c), 0xcb);
        EXPECT(gbc.readMem(0x810d), 0x8e);
        // CB 8E 0297
        gbc.setState(0x21e7, 0x6fe3, 0xda50, 0x94fc, 0x46a7, 0x8859, 0x1, 0x1);
        gbc.writeMem(0x21e7, { 0xcb, 0x8e });
        gbc.writeMem(0x8859, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x6fe3);
        EXPECT(gbc.pc(), 0x21e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8859), 0xb8);
        // CB 8E 0298
        gbc.setState(0xeef5, 0x76a1, 0xf460, 0xcc96, 0xcbfa, 0xd735, 0x1, 0x1);
        gbc.writeMem(0xd735, { 0xd7 });
        gbc.writeMem(0xeef5, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x76a1);
        EXPECT(gbc.pc(), 0xeef7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd735), 0xd5);
        EXPECT(gbc.readMem(0xeef5), 0xcb);
        EXPECT(gbc.readMem(0xeef6), 0x8e);
        // CB 8E 0299
        gbc.setState(0xc0d3, 0xc20c, 0xf570, 0x397c, 0x95ee, 0x9e49, 0x0, 0x1);
        gbc.writeMem(0x9e49, { 0x6 });
        gbc.writeMem(0xc0d3, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xc20c);
        EXPECT(gbc.pc(), 0xc0d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e49), 0x4);
        EXPECT(gbc.readMem(0xc0d3), 0xcb);
        EXPECT(gbc.readMem(0xc0d4), 0x8e);
        // CB 8E 029A
        gbc.setState(0x76be, 0x549b, 0x9850, 0xae0d, 0x5954, 0x9160, 0x1, 0x0);
        gbc.writeMem(0x76be, { 0xcb, 0x8e });
        gbc.writeMem(0x9160, { 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x549b);
        EXPECT(gbc.pc(), 0x76c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9160), 0x54);
        // CB 8E 029C
        gbc.setState(0x6a20, 0x95e1, 0x2bc0, 0x4d0c, 0x16d9, 0x4c7f, 0x0, 0x0);
        gbc.writeMem(0x4c7f, { 0x11 });
        gbc.writeMem(0x6a20, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x95e1);
        EXPECT(gbc.pc(), 0x6a22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8E 029D
        gbc.setState(0xb156, 0xdb17, 0x9f90, 0xe88f, 0x45be, 0x904f, 0x1, 0x1);
        gbc.writeMem(0x904f, { 0x2e });
        gbc.writeMem(0xb156, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xdb17);
        EXPECT(gbc.pc(), 0xb158);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x904f), 0x2c);
        EXPECT(gbc.readMem(0xb156), 0xcb);
        EXPECT(gbc.readMem(0xb157), 0x8e);
        // CB 8E 029E
        gbc.setState(0x5e60, 0x8042, 0x3cf0, 0x7a61, 0xb96d, 0x829c, 0x0, 0x0);
        gbc.writeMem(0x5e60, { 0xcb, 0x8e });
        gbc.writeMem(0x829c, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x8042);
        EXPECT(gbc.pc(), 0x5e62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x829c), 0x78);
        // CB 8E 029F
        gbc.setState(0x7a8c, 0x2ab7, 0xe090, 0x7b71, 0x2580, 0x836b, 0x1, 0x1);
        gbc.writeMem(0x7a8c, { 0xcb, 0x8e });
        gbc.writeMem(0x836b, { 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x2ab7);
        EXPECT(gbc.pc(), 0x7a8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x836b), 0x6d);
        // CB 8E 02A0
        gbc.setState(0x803d, 0x39d, 0x44b0, 0x981e, 0x42ce, 0x9427, 0x1, 0x0);
        gbc.writeMem(0x803d, { 0xcb, 0x8e });
        gbc.writeMem(0x9427, { 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x39d);
        EXPECT(gbc.pc(), 0x803f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x803d), 0xcb);
        EXPECT(gbc.readMem(0x803e), 0x8e);
        EXPECT(gbc.readMem(0x9427), 0xf5);
        // CB 8E 02A2
        gbc.setState(0x50ff, 0x10d0, 0xd7d0, 0x97c6, 0xf56, 0xf96c, 0x1, 0x1);
        gbc.writeMem(0x50ff, { 0xcb, 0x8e });
        gbc.writeMem(0xf96c, { 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x10d0);
        EXPECT(gbc.pc(), 0x5101);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf96c), 0xb0);
        // CB 8E 02A3
        gbc.setState(0x2d3, 0x9b3c, 0xfd70, 0xa23f, 0xdb43, 0xb653, 0x1, 0x0);
        gbc.writeMem(0x2d3, { 0xcb, 0x8e });
        gbc.writeMem(0xb653, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x9b3c);
        EXPECT(gbc.pc(), 0x2d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb653), 0xb8);
        // CB 8E 02A4
        gbc.setState(0x997a, 0x2b3b, 0xef10, 0x5756, 0xa792, 0x3d0f, 0x0, 0x1);
        gbc.writeMem(0x3d0f, { 0xf9 });
        gbc.writeMem(0x997a, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x2b3b);
        EXPECT(gbc.pc(), 0x997c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x997a), 0xcb);
        EXPECT(gbc.readMem(0x997b), 0x8e);
        // CB 8E 02A5
        gbc.setState(0x4a70, 0x4f59, 0x5ee0, 0x1695, 0xec14, 0xa4d1, 0x0, 0x1);
        gbc.writeMem(0x4a70, { 0xcb, 0x8e });
        gbc.writeMem(0xa4d1, { 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x4f59);
        EXPECT(gbc.pc(), 0x4a72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4d1), 0xbc);
        // CB 8E 02A6
        gbc.setState(0xc66d, 0x8439, 0x6710, 0x1a2f, 0x8a45, 0x1707, 0x0, 0x1);
        gbc.writeMem(0x1707, { 0x4 });
        gbc.writeMem(0xc66d, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x8439);
        EXPECT(gbc.pc(), 0xc66f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc66d), 0xcb);
        EXPECT(gbc.readMem(0xc66e), 0x8e);
        // CB 8E 02A8
        gbc.setState(0xb35a, 0x11fd, 0xb1d0, 0x46a0, 0xea4, 0x60c6, 0x0, 0x0);
        gbc.writeMem(0x60c6, { 0xfc });
        gbc.writeMem(0xb35a, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x11fd);
        EXPECT(gbc.pc(), 0xb35c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb35a), 0xcb);
        EXPECT(gbc.readMem(0xb35b), 0x8e);
        // CB 8E 02A9
        gbc.setState(0xd7d4, 0xab1d, 0xe8c0, 0x75a3, 0xbf6d, 0xafa9, 0x1, 0x1);
        gbc.writeMem(0xafa9, { 0xf9 });
        gbc.writeMem(0xd7d4, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xab1d);
        EXPECT(gbc.pc(), 0xd7d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafa9), 0xf9);
        EXPECT(gbc.readMem(0xd7d4), 0xcb);
        EXPECT(gbc.readMem(0xd7d5), 0x8e);
        // CB 8E 02AC
        gbc.setState(0x6d7a, 0x7c84, 0x8dc0, 0x5ead, 0x7bb9, 0xdd7e, 0x0, 0x1);
        gbc.writeMem(0x6d7a, { 0xcb, 0x8e });
        gbc.writeMem(0xdd7e, { 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x7c84);
        EXPECT(gbc.pc(), 0x6d7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd7e), 0xb1);
        // CB 8E 02AD
        gbc.setState(0xae82, 0xd93b, 0x80d0, 0x2549, 0x75c, 0x3e7, 0x0, 0x0);
        gbc.writeMem(0x3e7, { 0x85 });
        gbc.writeMem(0xae82, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xd93b);
        EXPECT(gbc.pc(), 0xae84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae82), 0xcb);
        EXPECT(gbc.readMem(0xae83), 0x8e);
        // CB 8E 02AE
        gbc.setState(0x5d69, 0x6ebe, 0x41b0, 0xdcbb, 0x448b, 0x9c9c, 0x1, 0x0);
        gbc.writeMem(0x5d69, { 0xcb, 0x8e });
        gbc.writeMem(0x9c9c, { 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x6ebe);
        EXPECT(gbc.pc(), 0x5d6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c9c), 0x4d);
        // CB 8E 02AF
        gbc.setState(0x1b3d, 0xd15a, 0xae00, 0x4e2b, 0x488a, 0xb705, 0x1, 0x0);
        gbc.writeMem(0x1b3d, { 0xcb, 0x8e });
        gbc.writeMem(0xb705, { 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xd15a);
        EXPECT(gbc.pc(), 0x1b3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb705), 0x2d);
        // CB 8E 02B1
        gbc.setState(0xd794, 0xa0eb, 0xbc20, 0xe47a, 0xf3b0, 0x60f0, 0x1, 0x0);
        gbc.writeMem(0x60f0, { 0xb4 });
        gbc.writeMem(0xd794, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xa0eb);
        EXPECT(gbc.pc(), 0xd796);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd794), 0xcb);
        EXPECT(gbc.readMem(0xd795), 0x8e);
        // CB 8E 02B2
        gbc.setState(0x2979, 0x6def, 0x5eb0, 0x9de3, 0xacb, 0x426e, 0x1, 0x1);
        gbc.writeMem(0x2979, { 0xcb, 0x8e });
        gbc.writeMem(0x426e, { 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x6def);
        EXPECT(gbc.pc(), 0x297b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8E 02B4
        gbc.setState(0x8c6f, 0xb16d, 0xea40, 0x76c9, 0xa152, 0xeda0, 0x1, 0x0);
        gbc.writeMem(0x8c6f, { 0xcb, 0x8e });
        gbc.writeMem(0xeda0, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xb16d);
        EXPECT(gbc.pc(), 0x8c71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c6f), 0xcb);
        EXPECT(gbc.readMem(0x8c70), 0x8e);
        EXPECT(gbc.readMem(0xeda0), 0x95);
        // CB 8E 02B5
        gbc.setState(0x1dcb, 0xf9c, 0xd5c0, 0x6564, 0xab91, 0x499e, 0x0, 0x1);
        gbc.writeMem(0x1dcb, { 0xcb, 0x8e });
        gbc.writeMem(0x499e, { 0xb5 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xf9c);
        EXPECT(gbc.pc(), 0x1dcd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8E 02B6
        gbc.setState(0x306d, 0xa282, 0xc0c0, 0x4829, 0x37b7, 0x2067, 0x1, 0x1);
        gbc.writeMem(0x2067, { 0x44 });
        gbc.writeMem(0x306d, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xa282);
        EXPECT(gbc.pc(), 0x306f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8E 02B7
        gbc.setState(0x3942, 0x4ea8, 0x55b0, 0x29a7, 0x8061, 0xd3b4, 0x1, 0x0);
        gbc.writeMem(0x3942, { 0xcb, 0x8e });
        gbc.writeMem(0xd3b4, { 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x4ea8);
        EXPECT(gbc.pc(), 0x3944);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3b4), 0xe8);
        // CB 8E 02B9
        gbc.setState(0x69b7, 0x2716, 0x4640, 0x529e, 0xdf53, 0x104e, 0x1, 0x1);
        gbc.writeMem(0x104e, { 0xe9 });
        gbc.writeMem(0x69b7, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x2716);
        EXPECT(gbc.pc(), 0x69b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8E 02BB
        gbc.setState(0xd8c2, 0x599, 0x6400, 0xd4dc, 0x5b92, 0x7bcc, 0x1, 0x1);
        gbc.writeMem(0x7bcc, { 0x18 });
        gbc.writeMem(0xd8c2, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x599);
        EXPECT(gbc.pc(), 0xd8c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8c2), 0xcb);
        EXPECT(gbc.readMem(0xd8c3), 0x8e);
        // CB 8E 02BC
        gbc.setState(0x75cf, 0x89d3, 0x6830, 0x7526, 0xa3ed, 0x8134, 0x1, 0x1);
        gbc.writeMem(0x75cf, { 0xcb, 0x8e });
        gbc.writeMem(0x8134, { 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x89d3);
        EXPECT(gbc.pc(), 0x75d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8134), 0xa5);
        // CB 8E 02BD
        gbc.setState(0xe689, 0xaee2, 0xc760, 0x9dec, 0x9273, 0xdce4, 0x1, 0x1);
        gbc.writeMem(0xdce4, { 0xa1 });
        gbc.writeMem(0xe689, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xaee2);
        EXPECT(gbc.pc(), 0xe68b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdce4), 0xa1);
        EXPECT(gbc.readMem(0xe689), 0xcb);
        EXPECT(gbc.readMem(0xe68a), 0x8e);
        // CB 8E 02BE
        gbc.setState(0xe10d, 0xd14f, 0x6980, 0xab5c, 0x2ff4, 0xf511, 0x1, 0x1);
        gbc.writeMem(0xe10d, { 0xcb, 0x8e });
        gbc.writeMem(0xf511, { 0xf2 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xd14f);
        EXPECT(gbc.pc(), 0xe10f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe10d), 0xcb);
        EXPECT(gbc.readMem(0xe10e), 0x8e);
        EXPECT(gbc.readMem(0xf511), 0xf0);
        // CB 8E 02BF
        gbc.setState(0x10e5, 0xdb8c, 0xb9b0, 0xf3bd, 0xbf70, 0x6b60, 0x0, 0x0);
        gbc.writeMem(0x10e5, { 0xcb, 0x8e });
        gbc.writeMem(0x6b60, { 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xdb8c);
        EXPECT(gbc.pc(), 0x10e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8E 02C1
        gbc.setState(0x7a44, 0xb285, 0x7e50, 0xb86e, 0x9daf, 0x7c76, 0x1, 0x0);
        gbc.writeMem(0x7a44, { 0xcb, 0x8e });
        gbc.writeMem(0x7c76, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xb285);
        EXPECT(gbc.pc(), 0x7a46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8E 02C3
        gbc.setState(0x8c4f, 0xcebe, 0xce60, 0xee7, 0xa83f, 0xaee4, 0x0, 0x0);
        gbc.writeMem(0x8c4f, { 0xcb, 0x8e });
        gbc.writeMem(0xaee4, { 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xcebe);
        EXPECT(gbc.pc(), 0x8c51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c4f), 0xcb);
        EXPECT(gbc.readMem(0x8c50), 0x8e);
        EXPECT(gbc.readMem(0xaee4), 0xb9);
        // CB 8E 02C4
        gbc.setState(0x3571, 0x2936, 0x74d0, 0x1769, 0x326d, 0xa790, 0x1, 0x0);
        gbc.writeMem(0x3571, { 0xcb, 0x8e });
        gbc.writeMem(0xa790, { 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x2936);
        EXPECT(gbc.pc(), 0x3573);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa790), 0xf8);
        // CB 8E 02C5
        gbc.setState(0xe059, 0x33cb, 0x6a30, 0xc094, 0xcb88, 0xcf1b, 0x1, 0x1);
        gbc.writeMem(0xcf1b, { 0x67 });
        gbc.writeMem(0xe059, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x33cb);
        EXPECT(gbc.pc(), 0xe05b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf1b), 0x65);
        EXPECT(gbc.readMem(0xe059), 0xcb);
        EXPECT(gbc.readMem(0xe05a), 0x8e);
        // CB 8E 02C6
        gbc.setState(0x3e4f, 0x3fb2, 0x4ef0, 0xeba8, 0x3658, 0xd3f8, 0x0, 0x1);
        gbc.writeMem(0x3e4f, { 0xcb, 0x8e });
        gbc.writeMem(0xd3f8, { 0x48 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x3fb2);
        EXPECT(gbc.pc(), 0x3e51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3f8), 0x48);
        // CB 8E 02C7
        gbc.setState(0x426e, 0x46a4, 0x8c0, 0xfaea, 0xca7a, 0x7e38, 0x0, 0x0);
        gbc.writeMem(0x426e, { 0xcb, 0x8e });
        gbc.writeMem(0x7e38, { 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x46a4);
        EXPECT(gbc.pc(), 0x4270);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8E 02C8
        gbc.setState(0x9dfa, 0xc76e, 0x780, 0x84ae, 0x87a6, 0xfdaf, 0x0, 0x1);
        gbc.writeMem(0x9dfa, { 0xcb, 0x8e });
        gbc.writeMem(0xfdaf, { 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xc76e);
        EXPECT(gbc.pc(), 0x9dfc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9dfa), 0xcb);
        EXPECT(gbc.readMem(0x9dfb), 0x8e);
        EXPECT(gbc.readMem(0xfdaf), 0x41);
        // CB 8E 02C9
        gbc.setState(0xc570, 0x1f61, 0x8480, 0xaeba, 0x4bd4, 0xd238, 0x1, 0x0);
        gbc.writeMem(0xc570, { 0xcb, 0x8e });
        gbc.writeMem(0xd238, { 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x1f61);
        EXPECT(gbc.pc(), 0xc572);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc570), 0xcb);
        EXPECT(gbc.readMem(0xc571), 0x8e);
        EXPECT(gbc.readMem(0xd238), 0xd8);
        // CB 8E 02CA
        gbc.setState(0xa666, 0xfc26, 0xa560, 0xaf48, 0x3c30, 0x613e, 0x1, 0x0);
        gbc.writeMem(0x613e, { 0x71 });
        gbc.writeMem(0xa666, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xfc26);
        EXPECT(gbc.pc(), 0xa668);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa666), 0xcb);
        EXPECT(gbc.readMem(0xa667), 0x8e);
        // CB 8E 02CB
        gbc.setState(0x8e33, 0x846, 0x2050, 0x6ba8, 0x9771, 0xb72a, 0x0, 0x0);
        gbc.writeMem(0x8e33, { 0xcb, 0x8e });
        gbc.writeMem(0xb72a, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x846);
        EXPECT(gbc.pc(), 0x8e35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e33), 0xcb);
        EXPECT(gbc.readMem(0x8e34), 0x8e);
        EXPECT(gbc.readMem(0xb72a), 0x48);
        // CB 8E 02CC
        gbc.setState(0x8a49, 0x82d3, 0xa6a0, 0x31c7, 0x7e37, 0x11ea, 0x0, 0x1);
        gbc.writeMem(0x11ea, { 0xc8 });
        gbc.writeMem(0x8a49, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x82d3);
        EXPECT(gbc.pc(), 0x8a4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a49), 0xcb);
        EXPECT(gbc.readMem(0x8a4a), 0x8e);
        // CB 8E 02CD
        gbc.setState(0x1663, 0xd541, 0xf920, 0x552a, 0x62bb, 0xcc05, 0x1, 0x0);
        gbc.writeMem(0x1663, { 0xcb, 0x8e });
        gbc.writeMem(0xcc05, { 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xd541);
        EXPECT(gbc.pc(), 0x1665);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc05), 0x60);
        // CB 8E 02D0
        gbc.setState(0xd136, 0xf1c7, 0xf8a0, 0xfc2c, 0xea87, 0xe96b, 0x0, 0x0);
        gbc.writeMem(0xd136, { 0xcb, 0x8e });
        gbc.writeMem(0xe96b, { 0x63 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xf1c7);
        EXPECT(gbc.pc(), 0xd138);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd136), 0xcb);
        EXPECT(gbc.readMem(0xd137), 0x8e);
        EXPECT(gbc.readMem(0xe96b), 0x61);
        // CB 8E 02D2
        gbc.setState(0x32e5, 0x253, 0x2760, 0x41c6, 0xfe8c, 0xa003, 0x1, 0x0);
        gbc.writeMem(0x32e5, { 0xcb, 0x8e });
        gbc.writeMem(0xa003, { 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x253);
        EXPECT(gbc.pc(), 0x32e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa003), 0x85);
        // CB 8E 02D3
        gbc.setState(0x7abd, 0x730e, 0x6850, 0x4897, 0x3d04, 0x4ca, 0x1, 0x1);
        gbc.writeMem(0x4ca, { 0x8c });
        gbc.writeMem(0x7abd, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x730e);
        EXPECT(gbc.pc(), 0x7abf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8E 02D4
        gbc.setState(0x8030, 0x138e, 0x3310, 0x2de1, 0x8ff8, 0x7a68, 0x1, 0x1);
        gbc.writeMem(0x7a68, { 0xa0 });
        gbc.writeMem(0x8030, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x138e);
        EXPECT(gbc.pc(), 0x8032);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8030), 0xcb);
        EXPECT(gbc.readMem(0x8031), 0x8e);
        // CB 8E 02D5
        gbc.setState(0xcd4d, 0xadc6, 0x8f30, 0x4363, 0x76f6, 0x26e0, 0x0, 0x1);
        gbc.writeMem(0x26e0, { 0x70 });
        gbc.writeMem(0xcd4d, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xadc6);
        EXPECT(gbc.pc(), 0xcd4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd4d), 0xcb);
        EXPECT(gbc.readMem(0xcd4e), 0x8e);
        // CB 8E 02D8
        gbc.setState(0xa8d3, 0xb377, 0x2b90, 0xebac, 0x6a84, 0x9c3c, 0x0, 0x0);
        gbc.writeMem(0x9c3c, { 0x5c });
        gbc.writeMem(0xa8d3, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xb377);
        EXPECT(gbc.pc(), 0xa8d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c3c), 0x5c);
        EXPECT(gbc.readMem(0xa8d3), 0xcb);
        EXPECT(gbc.readMem(0xa8d4), 0x8e);
        // CB 8E 02DC
        gbc.setState(0xd78d, 0x4d60, 0x9040, 0xbab3, 0x2396, 0x9427, 0x1, 0x0);
        gbc.writeMem(0x9427, { 0xf7 });
        gbc.writeMem(0xd78d, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x4d60);
        EXPECT(gbc.pc(), 0xd78f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9427), 0xf5);
        EXPECT(gbc.readMem(0xd78d), 0xcb);
        EXPECT(gbc.readMem(0xd78e), 0x8e);
        // CB 8E 02DD
        gbc.setState(0x5075, 0x7482, 0xc070, 0x7644, 0x13ad, 0x9340, 0x0, 0x0);
        gbc.writeMem(0x5075, { 0xcb, 0x8e });
        gbc.writeMem(0x9340, { 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x7482);
        EXPECT(gbc.pc(), 0x5077);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9340), 0xa8);
        // CB 8E 02DE
        gbc.setState(0x479b, 0xb45a, 0x4df0, 0xc387, 0xd1c2, 0x7798, 0x1, 0x1);
        gbc.writeMem(0x479b, { 0xcb, 0x8e });
        gbc.writeMem(0x7798, { 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xb45a);
        EXPECT(gbc.pc(), 0x479d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8E 02DF
        gbc.setState(0x126a, 0xeebb, 0xe40, 0xc62b, 0x443e, 0xf762, 0x1, 0x0);
        gbc.writeMem(0x126a, { 0xcb, 0x8e });
        gbc.writeMem(0xf762, { 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xeebb);
        EXPECT(gbc.pc(), 0x126c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf762), 0x11);
        // CB 8E 02E0
        gbc.setState(0x982a, 0x7d85, 0x6270, 0x332f, 0x3124, 0xacbe, 0x0, 0x0);
        gbc.writeMem(0x982a, { 0xcb, 0x8e });
        gbc.writeMem(0xacbe, { 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x7d85);
        EXPECT(gbc.pc(), 0x982c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x982a), 0xcb);
        EXPECT(gbc.readMem(0x982b), 0x8e);
        EXPECT(gbc.readMem(0xacbe), 0xf4);
        // CB 8E 02E1
        gbc.setState(0xa0b0, 0xe5e7, 0xb1c0, 0xe698, 0x4b1, 0x7ed0, 0x1, 0x1);
        gbc.writeMem(0x7ed0, { 0xdd });
        gbc.writeMem(0xa0b0, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xe5e7);
        EXPECT(gbc.pc(), 0xa0b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0b0), 0xcb);
        EXPECT(gbc.readMem(0xa0b1), 0x8e);
        // CB 8E 02E2
        gbc.setState(0xee29, 0xe1b3, 0x8a80, 0xc081, 0x5668, 0xa97c, 0x0, 0x0);
        gbc.writeMem(0xa97c, { 0x6c });
        gbc.writeMem(0xee29, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xe1b3);
        EXPECT(gbc.pc(), 0xee2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa97c), 0x6c);
        EXPECT(gbc.readMem(0xee29), 0xcb);
        EXPECT(gbc.readMem(0xee2a), 0x8e);
        // CB 8E 02E3
        gbc.setState(0x4cad, 0xd367, 0x6590, 0x789a, 0xe88a, 0xd960, 0x1, 0x0);
        gbc.writeMem(0x4cad, { 0xcb, 0x8e });
        gbc.writeMem(0xd960, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xd367);
        EXPECT(gbc.pc(), 0x4caf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd960), 0x21);
        // CB 8E 02E5
        gbc.setState(0xd9c4, 0x5efc, 0xc870, 0x4604, 0xa210, 0x26d0, 0x0, 0x1);
        gbc.writeMem(0x26d0, { 0x54 });
        gbc.writeMem(0xd9c4, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x5efc);
        EXPECT(gbc.pc(), 0xd9c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9c4), 0xcb);
        EXPECT(gbc.readMem(0xd9c5), 0x8e);
        // CB 8E 02E6
        gbc.setState(0x4131, 0xefea, 0xfcb0, 0x51e0, 0xe38f, 0xf776, 0x0, 0x1);
        gbc.writeMem(0x4131, { 0xcb, 0x8e });
        gbc.writeMem(0xf776, { 0x5c });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xefea);
        EXPECT(gbc.pc(), 0x4133);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf776), 0x5c);
        // CB 8E 02E7
        gbc.setState(0x2, 0x18c3, 0xfc60, 0xaaee, 0xe888, 0xe6a9, 0x1, 0x0);
        gbc.writeMem(0x2, { 0xcb, 0x8e });
        gbc.writeMem(0xe6a9, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x18c3);
        EXPECT(gbc.pc(), 0x4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6a9), 0x71);
        // CB 8E 02E8
        gbc.setState(0x23cf, 0x1c5b, 0x63f0, 0x3327, 0xaa89, 0x9921, 0x1, 0x0);
        gbc.writeMem(0x23cf, { 0xcb, 0x8e });
        gbc.writeMem(0x9921, { 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x1c5b);
        EXPECT(gbc.pc(), 0x23d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9921), 0x29);
        // CB 8E 02EA
        gbc.setState(0x6e40, 0x9db3, 0xbd60, 0x9e59, 0x919b, 0x75f2, 0x0, 0x1);
        gbc.writeMem(0x6e40, { 0xcb, 0x8e });
        gbc.writeMem(0x75f2, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x9db3);
        EXPECT(gbc.pc(), 0x6e42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8E 02EB
        gbc.setState(0xae1b, 0xe2cd, 0xa260, 0x1ccf, 0x303a, 0xb5ab, 0x0, 0x0);
        gbc.writeMem(0xae1b, { 0xcb, 0x8e });
        gbc.writeMem(0xb5ab, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xe2cd);
        EXPECT(gbc.pc(), 0xae1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae1b), 0xcb);
        EXPECT(gbc.readMem(0xae1c), 0x8e);
        EXPECT(gbc.readMem(0xb5ab), 0x90);
        // CB 8E 02ED
        gbc.setState(0xa67, 0xf950, 0x8a10, 0xdb6b, 0xf258, 0xe3f2, 0x0, 0x1);
        gbc.writeMem(0xa67, { 0xcb, 0x8e });
        gbc.writeMem(0xe3f2, { 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xf950);
        EXPECT(gbc.pc(), 0xa69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3f2), 0x84);
        // CB 8E 02EF
        gbc.setState(0xd725, 0xe6a5, 0x2ab0, 0xfb11, 0x2751, 0x82be, 0x1, 0x1);
        gbc.writeMem(0x82be, { 0xac });
        gbc.writeMem(0xd725, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xe6a5);
        EXPECT(gbc.pc(), 0xd727);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82be), 0xac);
        EXPECT(gbc.readMem(0xd725), 0xcb);
        EXPECT(gbc.readMem(0xd726), 0x8e);
        // CB 8E 02F0
        gbc.setState(0xaa0f, 0xa717, 0xf480, 0x9090, 0x9587, 0x65a5, 0x0, 0x1);
        gbc.writeMem(0x65a5, { 0x2c });
        gbc.writeMem(0xaa0f, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xa717);
        EXPECT(gbc.pc(), 0xaa11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa0f), 0xcb);
        EXPECT(gbc.readMem(0xaa10), 0x8e);
        // CB 8E 02F2
        gbc.setState(0xe9eb, 0x4469, 0xcf00, 0x960c, 0x8d15, 0xf0ac, 0x0, 0x1);
        gbc.writeMem(0xe9eb, { 0xcb, 0x8e });
        gbc.writeMem(0xf0ac, { 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x4469);
        EXPECT(gbc.pc(), 0xe9ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9eb), 0xcb);
        EXPECT(gbc.readMem(0xe9ec), 0x8e);
        EXPECT(gbc.readMem(0xf0ac), 0x5d);
        // CB 8E 02F3
        gbc.setState(0x2706, 0x56a9, 0x7b60, 0xc224, 0xb60, 0x1342, 0x1, 0x0);
        gbc.writeMem(0x1342, { 0xc4 });
        gbc.writeMem(0x2706, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x56a9);
        EXPECT(gbc.pc(), 0x2708);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8E 02F4
        gbc.setState(0x9f71, 0x2ad8, 0x2ec0, 0x6f20, 0xab78, 0x3084, 0x0, 0x0);
        gbc.writeMem(0x3084, { 0x84 });
        gbc.writeMem(0x9f71, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x2ad8);
        EXPECT(gbc.pc(), 0x9f73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f71), 0xcb);
        EXPECT(gbc.readMem(0x9f72), 0x8e);
        // CB 8E 02F7
        gbc.setState(0x891d, 0x8366, 0xb340, 0xc345, 0x5ba6, 0xa8f3, 0x0, 0x0);
        gbc.writeMem(0x891d, { 0xcb, 0x8e });
        gbc.writeMem(0xa8f3, { 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x8366);
        EXPECT(gbc.pc(), 0x891f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x891d), 0xcb);
        EXPECT(gbc.readMem(0x891e), 0x8e);
        EXPECT(gbc.readMem(0xa8f3), 0x98);
        // CB 8E 02F9
        gbc.setState(0x84c6, 0x80c9, 0xa590, 0xa5ed, 0x8d1e, 0xa241, 0x0, 0x1);
        gbc.writeMem(0x84c6, { 0xcb, 0x8e });
        gbc.writeMem(0xa241, { 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x80c9);
        EXPECT(gbc.pc(), 0x84c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84c6), 0xcb);
        EXPECT(gbc.readMem(0x84c7), 0x8e);
        EXPECT(gbc.readMem(0xa241), 0x65);
        // CB 8E 02FC
        gbc.setState(0xc7c3, 0x1f56, 0x1050, 0x304f, 0xba1f, 0xd8ef, 0x1, 0x1);
        gbc.writeMem(0xc7c3, { 0xcb, 0x8e });
        gbc.writeMem(0xd8ef, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x1f56);
        EXPECT(gbc.pc(), 0xc7c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7c3), 0xcb);
        EXPECT(gbc.readMem(0xc7c4), 0x8e);
        EXPECT(gbc.readMem(0xd8ef), 0xd5);
        // CB 8E 02FD
        gbc.setState(0xb15c, 0xaeaa, 0xf230, 0x2ace, 0x7398, 0xe393, 0x1, 0x0);
        gbc.writeMem(0xb15c, { 0xcb, 0x8e });
        gbc.writeMem(0xe393, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xaeaa);
        EXPECT(gbc.pc(), 0xb15e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb15c), 0xcb);
        EXPECT(gbc.readMem(0xb15d), 0x8e);
        EXPECT(gbc.readMem(0xe393), 0x70);
        // CB 8E 02FE
        gbc.setState(0xc7cb, 0x4240, 0xf2b0, 0x5dc2, 0x12ff, 0x24eb, 0x0, 0x0);
        gbc.writeMem(0x24eb, { 0x75 });
        gbc.writeMem(0xc7cb, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x4240);
        EXPECT(gbc.pc(), 0xc7cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7cb), 0xcb);
        EXPECT(gbc.readMem(0xc7cc), 0x8e);
        // CB 8E 02FF
        gbc.setState(0x5f57, 0x2325, 0x4d60, 0xee07, 0xfd10, 0x5305, 0x1, 0x0);
        gbc.writeMem(0x5305, { 0x51 });
        gbc.writeMem(0x5f57, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x2325);
        EXPECT(gbc.pc(), 0x5f59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8E 0300
        gbc.setState(0x2fba, 0x600d, 0xaba0, 0x139d, 0x9708, 0xe92, 0x1, 0x0);
        gbc.writeMem(0xe92, { 0xd });
        gbc.writeMem(0x2fba, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x600d);
        EXPECT(gbc.pc(), 0x2fbc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8E 0301
        gbc.setState(0x513, 0x9f76, 0x160, 0x5637, 0x4402, 0xdd17, 0x0, 0x0);
        gbc.writeMem(0x513, { 0xcb, 0x8e });
        gbc.writeMem(0xdd17, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x9f76);
        EXPECT(gbc.pc(), 0x515);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd17), 0xcd);
        // CB 8E 0302
        gbc.setState(0x6e63, 0xabc7, 0x55e0, 0xbf00, 0x1cb, 0xffdf, 0x0, 0x0);
        gbc.writeMem(0x6e63, { 0xcb, 0x8e });
        gbc.writeMem(0xffdf, { 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xabc7);
        EXPECT(gbc.pc(), 0x6e65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffdf), 0xd);
        // CB 8E 0303
        gbc.setState(0x3569, 0xccc0, 0x8fb0, 0x2a6f, 0xa19c, 0x501c, 0x0, 0x0);
        gbc.writeMem(0x3569, { 0xcb, 0x8e });
        gbc.writeMem(0x501c, { 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xccc0);
        EXPECT(gbc.pc(), 0x356b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8E 0304
        gbc.setState(0x3284, 0xc494, 0xead0, 0xe591, 0x3374, 0xb6b7, 0x1, 0x1);
        gbc.writeMem(0x3284, { 0xcb, 0x8e });
        gbc.writeMem(0xb6b7, { 0x6b });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xc494);
        EXPECT(gbc.pc(), 0x3286);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6b7), 0x69);
        // CB 8E 030C
        gbc.setState(0x146a, 0xc8f7, 0x9a60, 0xb2cc, 0xc0e7, 0x86eb, 0x0, 0x1);
        gbc.writeMem(0x146a, { 0xcb, 0x8e });
        gbc.writeMem(0x86eb, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xc8f7);
        EXPECT(gbc.pc(), 0x146c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86eb), 0xd5);
        // CB 8E 030E
        gbc.setState(0xa71b, 0xf69f, 0xf770, 0x2349, 0xc03e, 0xaae6, 0x0, 0x0);
        gbc.writeMem(0xa71b, { 0xcb, 0x8e });
        gbc.writeMem(0xaae6, { 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xf69f);
        EXPECT(gbc.pc(), 0xa71d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa71b), 0xcb);
        EXPECT(gbc.readMem(0xa71c), 0x8e);
        EXPECT(gbc.readMem(0xaae6), 0xe9);
        // CB 8E 030F
        gbc.setState(0x73b, 0x881e, 0xfa10, 0x9a, 0xf1f5, 0xff14, 0x1, 0x1);
        gbc.writeMem(0x73b, { 0xcb, 0x8e });
        gbc.writeMem(0xff14, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x881e);
        EXPECT(gbc.pc(), 0x73d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff14), 0xac);
        // CB 8E 0310
        gbc.setState(0x164b, 0x17f9, 0x6720, 0x4246, 0xfc88, 0xedc, 0x1, 0x1);
        gbc.writeMem(0xedc, { 0x21 });
        gbc.writeMem(0x164b, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x17f9);
        EXPECT(gbc.pc(), 0x164d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8E 0311
        gbc.setState(0x4afb, 0x85f7, 0xa250, 0x4f3d, 0x1cf4, 0x6ffa, 0x1, 0x0);
        gbc.writeMem(0x4afb, { 0xcb, 0x8e });
        gbc.writeMem(0x6ffa, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x85f7);
        EXPECT(gbc.pc(), 0x4afd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8E 0312
        gbc.setState(0x8ca3, 0x6970, 0x68b0, 0x5c63, 0x1fcb, 0xad83, 0x1, 0x0);
        gbc.writeMem(0x8ca3, { 0xcb, 0x8e });
        gbc.writeMem(0xad83, { 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x6970);
        EXPECT(gbc.pc(), 0x8ca5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ca3), 0xcb);
        EXPECT(gbc.readMem(0x8ca4), 0x8e);
        EXPECT(gbc.readMem(0xad83), 0xa1);
        // CB 8E 0314
        gbc.setState(0xcd2c, 0xc8bc, 0xc210, 0x4dca, 0x921b, 0x8e98, 0x1, 0x1);
        gbc.writeMem(0x8e98, { 0x4d });
        gbc.writeMem(0xcd2c, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xc8bc);
        EXPECT(gbc.pc(), 0xcd2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e98), 0x4d);
        EXPECT(gbc.readMem(0xcd2c), 0xcb);
        EXPECT(gbc.readMem(0xcd2d), 0x8e);
        // CB 8E 0315
        gbc.setState(0x1a4d, 0x580a, 0x8aa0, 0x87f3, 0x978e, 0x34a0, 0x0, 0x1);
        gbc.writeMem(0x1a4d, { 0xcb, 0x8e });
        gbc.writeMem(0x34a0, { 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x580a);
        EXPECT(gbc.pc(), 0x1a4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8E 0316
        gbc.setState(0x6854, 0xe829, 0x9f50, 0x5223, 0xc3fc, 0xe6fd, 0x0, 0x1);
        gbc.writeMem(0x6854, { 0xcb, 0x8e });
        gbc.writeMem(0xe6fd, { 0x9f });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xe829);
        EXPECT(gbc.pc(), 0x6856);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6fd), 0x9d);
        // CB 8E 0319
        gbc.setState(0x95f7, 0xd335, 0xd580, 0xef57, 0x2f19, 0xf456, 0x1, 0x1);
        gbc.writeMem(0x95f7, { 0xcb, 0x8e });
        gbc.writeMem(0xf456, { 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xd335);
        EXPECT(gbc.pc(), 0x95f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95f7), 0xcb);
        EXPECT(gbc.readMem(0x95f8), 0x8e);
        EXPECT(gbc.readMem(0xf456), 0x60);
        // CB 8E 031A
        gbc.setState(0x4a82, 0xea28, 0x81b0, 0x7eb, 0xb712, 0x58c, 0x0, 0x1);
        gbc.writeMem(0x58c, { 0xe5 });
        gbc.writeMem(0x4a82, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xea28);
        EXPECT(gbc.pc(), 0x4a84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8E 031B
        gbc.setState(0x1a33, 0x1cac, 0x8270, 0x8ccf, 0x9caf, 0xefe9, 0x1, 0x1);
        gbc.writeMem(0x1a33, { 0xcb, 0x8e });
        gbc.writeMem(0xefe9, { 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x1cac);
        EXPECT(gbc.pc(), 0x1a35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefe9), 0xcc);
        // CB 8E 031E
        gbc.setState(0x8589, 0x6f77, 0x400, 0xeac2, 0xcbed, 0x839c, 0x1, 0x0);
        gbc.writeMem(0x839c, { 0x40 });
        gbc.writeMem(0x8589, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x6f77);
        EXPECT(gbc.pc(), 0x858b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x839c), 0x40);
        EXPECT(gbc.readMem(0x8589), 0xcb);
        EXPECT(gbc.readMem(0x858a), 0x8e);
        // CB 8E 0321
        gbc.setState(0x7f5d, 0x2205, 0x6990, 0x3cc1, 0xf9a3, 0xe759, 0x0, 0x0);
        gbc.writeMem(0x7f5d, { 0xcb, 0x8e });
        gbc.writeMem(0xe759, { 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x2205);
        EXPECT(gbc.pc(), 0x7f5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe759), 0x2d);
        // CB 8E 0322
        gbc.setState(0xdbb, 0xe2df, 0x8b40, 0xb50d, 0xcd2a, 0x1b4a, 0x0, 0x1);
        gbc.writeMem(0xdbb, { 0xcb, 0x8e });
        gbc.writeMem(0x1b4a, { 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xe2df);
        EXPECT(gbc.pc(), 0xdbd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8E 0324
        gbc.setState(0x1f70, 0x516b, 0xdb60, 0x18ff, 0xc645, 0xab3b, 0x1, 0x0);
        gbc.writeMem(0x1f70, { 0xcb, 0x8e });
        gbc.writeMem(0xab3b, { 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x516b);
        EXPECT(gbc.pc(), 0x1f72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab3b), 0xe5);
        // CB 8E 0325
        gbc.setState(0xc2d6, 0x68f8, 0x7030, 0x4e9b, 0x389c, 0x64f7, 0x0, 0x1);
        gbc.writeMem(0x64f7, { 0xe0 });
        gbc.writeMem(0xc2d6, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x68f8);
        EXPECT(gbc.pc(), 0xc2d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2d6), 0xcb);
        EXPECT(gbc.readMem(0xc2d7), 0x8e);
        // CB 8E 0327
        gbc.setState(0x2f21, 0xf910, 0xd740, 0x970b, 0x8e02, 0xbb95, 0x0, 0x1);
        gbc.writeMem(0x2f21, { 0xcb, 0x8e });
        gbc.writeMem(0xbb95, { 0x8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xf910);
        EXPECT(gbc.pc(), 0x2f23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb95), 0x8);
        // CB 8E 0328
        gbc.setState(0xaa60, 0x4088, 0x5d20, 0x5c66, 0x300c, 0xd5e, 0x1, 0x0);
        gbc.writeMem(0xd5e, { 0x6d });
        gbc.writeMem(0xaa60, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x4088);
        EXPECT(gbc.pc(), 0xaa62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa60), 0xcb);
        EXPECT(gbc.readMem(0xaa61), 0x8e);
        // CB 8E 0329
        gbc.setState(0x1a95, 0xba6b, 0x5950, 0x69c8, 0x2152, 0xcf7d, 0x1, 0x0);
        gbc.writeMem(0x1a95, { 0xcb, 0x8e });
        gbc.writeMem(0xcf7d, { 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xba6b);
        EXPECT(gbc.pc(), 0x1a97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf7d), 0x19);
        // CB 8E 032A
        gbc.setState(0x8b24, 0xb360, 0x2c70, 0xdfa3, 0x8a12, 0xbfa6, 0x1, 0x1);
        gbc.writeMem(0x8b24, { 0xcb, 0x8e });
        gbc.writeMem(0xbfa6, { 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xb360);
        EXPECT(gbc.pc(), 0x8b26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b24), 0xcb);
        EXPECT(gbc.readMem(0x8b25), 0x8e);
        EXPECT(gbc.readMem(0xbfa6), 0xb0);
        // CB 8E 032B
        gbc.setState(0x20b0, 0x84b0, 0x7cc0, 0x4fd5, 0xdff6, 0xb8d4, 0x1, 0x1);
        gbc.writeMem(0x20b0, { 0xcb, 0x8e });
        gbc.writeMem(0xb8d4, { 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x84b0);
        EXPECT(gbc.pc(), 0x20b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8d4), 0x49);
        // CB 8E 032C
        gbc.setState(0x4b57, 0xc866, 0x8030, 0xe94c, 0x1fd8, 0xf478, 0x0, 0x1);
        gbc.writeMem(0x4b57, { 0xcb, 0x8e });
        gbc.writeMem(0xf478, { 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xc866);
        EXPECT(gbc.pc(), 0x4b59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf478), 0x40);
        // CB 8E 032D
        gbc.setState(0x41cc, 0xf2a5, 0xa400, 0x1668, 0x1cc7, 0xff00, 0x0, 0x1);
        gbc.writeMem(0x41cc, { 0xcb, 0x8e });
        gbc.writeMem(0xff00, { 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xf2a5);
        EXPECT(gbc.pc(), 0x41ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff00), 0x38);
        // CB 8E 032E
        gbc.setState(0x8e7e, 0x16e1, 0xf830, 0xa44b, 0x2fb3, 0xf48b, 0x1, 0x1);
        gbc.writeMem(0x8e7e, { 0xcb, 0x8e });
        gbc.writeMem(0xf48b, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x16e1);
        EXPECT(gbc.pc(), 0x8e80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e7e), 0xcb);
        EXPECT(gbc.readMem(0x8e7f), 0x8e);
        EXPECT(gbc.readMem(0xf48b), 0x28);
        // CB 8E 0331
        gbc.setState(0x3fcb, 0x60b9, 0xa030, 0x739f, 0x8677, 0xb578, 0x0, 0x1);
        gbc.writeMem(0x3fcb, { 0xcb, 0x8e });
        gbc.writeMem(0xb578, { 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x60b9);
        EXPECT(gbc.pc(), 0x3fcd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb578), 0xf5);
        // CB 8E 0332
        gbc.setState(0xc067, 0xe9fa, 0xc6b0, 0x3fd7, 0x81cb, 0xa4b7, 0x1, 0x1);
        gbc.writeMem(0xa4b7, { 0xf4 });
        gbc.writeMem(0xc067, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xe9fa);
        EXPECT(gbc.pc(), 0xc069);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4b7), 0xf4);
        EXPECT(gbc.readMem(0xc067), 0xcb);
        EXPECT(gbc.readMem(0xc068), 0x8e);
        // CB 8E 0335
        gbc.setState(0xa9b4, 0x8c55, 0xb180, 0xf597, 0x65c9, 0x7835, 0x1, 0x0);
        gbc.writeMem(0x7835, { 0x3d });
        gbc.writeMem(0xa9b4, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x8c55);
        EXPECT(gbc.pc(), 0xa9b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9b4), 0xcb);
        EXPECT(gbc.readMem(0xa9b5), 0x8e);
        // CB 8E 0336
        gbc.setState(0x3de1, 0x4487, 0xd6d0, 0x2efe, 0xdd98, 0xfde2, 0x0, 0x1);
        gbc.writeMem(0x3de1, { 0xcb, 0x8e });
        gbc.writeMem(0xfde2, { 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x4487);
        EXPECT(gbc.pc(), 0x3de3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfde2), 0xf5);
        // CB 8E 0337
        gbc.setState(0xbc9a, 0xddf5, 0x2670, 0x79c5, 0x6380, 0xb98a, 0x0, 0x0);
        gbc.writeMem(0xb98a, { 0xd6 });
        gbc.writeMem(0xbc9a, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xddf5);
        EXPECT(gbc.pc(), 0xbc9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb98a), 0xd4);
        EXPECT(gbc.readMem(0xbc9a), 0xcb);
        EXPECT(gbc.readMem(0xbc9b), 0x8e);
        // CB 8E 0338
        gbc.setState(0x8f55, 0x5873, 0xacd0, 0x795b, 0x56ba, 0xa38f, 0x0, 0x0);
        gbc.writeMem(0x8f55, { 0xcb, 0x8e });
        gbc.writeMem(0xa38f, { 0xa1 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x5873);
        EXPECT(gbc.pc(), 0x8f57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f55), 0xcb);
        EXPECT(gbc.readMem(0x8f56), 0x8e);
        EXPECT(gbc.readMem(0xa38f), 0xa1);
        // CB 8E 033A
        gbc.setState(0x6347, 0xc672, 0xb330, 0xb1b5, 0x383a, 0x147f, 0x1, 0x1);
        gbc.writeMem(0x147f, { 0x9 });
        gbc.writeMem(0x6347, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xc672);
        EXPECT(gbc.pc(), 0x6349);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8E 033C
        gbc.setState(0x2464, 0x1765, 0x6610, 0x418e, 0xdee2, 0xa580, 0x0, 0x0);
        gbc.writeMem(0x2464, { 0xcb, 0x8e });
        gbc.writeMem(0xa580, { 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x1765);
        EXPECT(gbc.pc(), 0x2466);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa580), 0xc1);
        // CB 8E 033D
        gbc.setState(0x770b, 0xde9, 0x2760, 0xa37e, 0xf6b0, 0xdad8, 0x1, 0x1);
        gbc.writeMem(0x770b, { 0xcb, 0x8e });
        gbc.writeMem(0xdad8, { 0xc5 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xde9);
        EXPECT(gbc.pc(), 0x770d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdad8), 0xc5);
        // CB 8E 033E
        gbc.setState(0x61e0, 0xf920, 0x3190, 0x38b8, 0xd661, 0xe797, 0x0, 0x0);
        gbc.writeMem(0x61e0, { 0xcb, 0x8e });
        gbc.writeMem(0xe797, { 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xf920);
        EXPECT(gbc.pc(), 0x61e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe797), 0xa9);
        // CB 8E 033F
        gbc.setState(0xca36, 0x123a, 0x8320, 0xbf8b, 0xbfc3, 0x3233, 0x0, 0x1);
        gbc.writeMem(0x3233, { 0x80 });
        gbc.writeMem(0xca36, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x123a);
        EXPECT(gbc.pc(), 0xca38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca36), 0xcb);
        EXPECT(gbc.readMem(0xca37), 0x8e);
        // CB 8E 0340
        gbc.setState(0x2999, 0xe83d, 0xbb20, 0x1a0, 0xd9d8, 0xb216, 0x0, 0x1);
        gbc.writeMem(0x2999, { 0xcb, 0x8e });
        gbc.writeMem(0xb216, { 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xe83d);
        EXPECT(gbc.pc(), 0x299b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb216), 0xc1);
        // CB 8E 0341
        gbc.setState(0x2029, 0x74d8, 0x6170, 0xc66c, 0x42ee, 0xde64, 0x0, 0x0);
        gbc.writeMem(0x2029, { 0xcb, 0x8e });
        gbc.writeMem(0xde64, { 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x74d8);
        EXPECT(gbc.pc(), 0x202b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde64), 0xd4);
        // CB 8E 0342
        gbc.setState(0xdbd3, 0xee01, 0x37a0, 0x7ca3, 0x41b9, 0xf15d, 0x0, 0x0);
        gbc.writeMem(0xdbd3, { 0xcb, 0x8e });
        gbc.writeMem(0xf15d, { 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xee01);
        EXPECT(gbc.pc(), 0xdbd5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbd3), 0xcb);
        EXPECT(gbc.readMem(0xdbd4), 0x8e);
        EXPECT(gbc.readMem(0xf15d), 0xa9);
        // CB 8E 0344
        gbc.setState(0x61fa, 0x819, 0x4110, 0x5d7a, 0xdbc8, 0xedab, 0x1, 0x1);
        gbc.writeMem(0x61fa, { 0xcb, 0x8e });
        gbc.writeMem(0xedab, { 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x819);
        EXPECT(gbc.pc(), 0x61fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedab), 0xd1);
        // CB 8E 0345
        gbc.setState(0x7b3d, 0x3875, 0x2e00, 0xf933, 0xe8f, 0xa6b3, 0x0, 0x0);
        gbc.writeMem(0x7b3d, { 0xcb, 0x8e });
        gbc.writeMem(0xa6b3, { 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x3875);
        EXPECT(gbc.pc(), 0x7b3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6b3), 0x38);
        // CB 8E 0347
        gbc.setState(0x4280, 0x3b33, 0x7bb0, 0x4ecf, 0x3c96, 0xd76e, 0x0, 0x0);
        gbc.writeMem(0x4280, { 0xcb, 0x8e });
        gbc.writeMem(0xd76e, { 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x3b33);
        EXPECT(gbc.pc(), 0x4282);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd76e), 0xf8);
        // CB 8E 0348
        gbc.setState(0x6f14, 0x1186, 0xa170, 0x25ff, 0xf9da, 0xd0f1, 0x0, 0x0);
        gbc.writeMem(0x6f14, { 0xcb, 0x8e });
        gbc.writeMem(0xd0f1, { 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x1186);
        EXPECT(gbc.pc(), 0x6f16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0f1), 0x2d);
        // CB 8E 034A
        gbc.setState(0xc880, 0x83ff, 0x8490, 0x15bb, 0x302e, 0x6336, 0x1, 0x0);
        gbc.writeMem(0x6336, { 0xf9 });
        gbc.writeMem(0xc880, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x83ff);
        EXPECT(gbc.pc(), 0xc882);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc880), 0xcb);
        EXPECT(gbc.readMem(0xc881), 0x8e);
        // CB 8E 034C
        gbc.setState(0x273d, 0x7d66, 0x4e80, 0x2e85, 0x8f53, 0x4e7, 0x0, 0x1);
        gbc.writeMem(0x4e7, { 0xf4 });
        gbc.writeMem(0x273d, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x7d66);
        EXPECT(gbc.pc(), 0x273f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8E 034D
        gbc.setState(0xe555, 0x2385, 0x6760, 0xa8ba, 0xd119, 0x7593, 0x1, 0x0);
        gbc.writeMem(0x7593, { 0xb5 });
        gbc.writeMem(0xe555, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x2385);
        EXPECT(gbc.pc(), 0xe557);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe555), 0xcb);
        EXPECT(gbc.readMem(0xe556), 0x8e);
        // CB 8E 034F
        gbc.setState(0x8d79, 0x981a, 0x47d0, 0xcff1, 0x6650, 0xdbaa, 0x1, 0x0);
        gbc.writeMem(0x8d79, { 0xcb, 0x8e });
        gbc.writeMem(0xdbaa, { 0x3c });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x981a);
        EXPECT(gbc.pc(), 0x8d7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d79), 0xcb);
        EXPECT(gbc.readMem(0x8d7a), 0x8e);
        EXPECT(gbc.readMem(0xdbaa), 0x3c);
        // CB 8E 0353
        gbc.setState(0x6846, 0xe51c, 0x2b30, 0xbdd4, 0xd540, 0xb9fd, 0x1, 0x1);
        gbc.writeMem(0x6846, { 0xcb, 0x8e });
        gbc.writeMem(0xb9fd, { 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xe51c);
        EXPECT(gbc.pc(), 0x6848);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9fd), 0x89);
        // CB 8E 0356
        gbc.setState(0x6695, 0x2e7e, 0x44f0, 0x51a, 0x4537, 0x2670, 0x0, 0x0);
        gbc.writeMem(0x2670, { 0xcc });
        gbc.writeMem(0x6695, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x2e7e);
        EXPECT(gbc.pc(), 0x6697);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8E 0359
        gbc.setState(0x9ff7, 0x2b4d, 0xd050, 0x1584, 0x196, 0x4351, 0x1, 0x0);
        gbc.writeMem(0x4351, { 0x91 });
        gbc.writeMem(0x9ff7, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x2b4d);
        EXPECT(gbc.pc(), 0x9ff9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ff7), 0xcb);
        EXPECT(gbc.readMem(0x9ff8), 0x8e);
        // CB 8E 035A
        gbc.setState(0xc82c, 0x3050, 0x13d0, 0x8e61, 0xdd71, 0xaa10, 0x1, 0x0);
        gbc.writeMem(0xaa10, { 0x5 });
        gbc.writeMem(0xc82c, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x3050);
        EXPECT(gbc.pc(), 0xc82e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa10), 0x5);
        EXPECT(gbc.readMem(0xc82c), 0xcb);
        EXPECT(gbc.readMem(0xc82d), 0x8e);
        // CB 8E 035E
        gbc.setState(0xecc3, 0x885a, 0x94c0, 0x2765, 0x3499, 0xcff2, 0x0, 0x1);
        gbc.writeMem(0xcff2, { 0xd6 });
        gbc.writeMem(0xecc3, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x885a);
        EXPECT(gbc.pc(), 0xecc5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcff2), 0xd4);
        EXPECT(gbc.readMem(0xecc3), 0xcb);
        EXPECT(gbc.readMem(0xecc4), 0x8e);
        // CB 8E 035F
        gbc.setState(0xbd16, 0x5cb0, 0xac00, 0xdad0, 0xc67c, 0x8a86, 0x0, 0x0);
        gbc.writeMem(0x8a86, { 0x43 });
        gbc.writeMem(0xbd16, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x5cb0);
        EXPECT(gbc.pc(), 0xbd18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a86), 0x41);
        EXPECT(gbc.readMem(0xbd16), 0xcb);
        EXPECT(gbc.readMem(0xbd17), 0x8e);
        // CB 8E 0360
        gbc.setState(0x1da9, 0xbee9, 0xf4f0, 0x4b35, 0x8ab4, 0x85ea, 0x1, 0x0);
        gbc.writeMem(0x1da9, { 0xcb, 0x8e });
        gbc.writeMem(0x85ea, { 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xbee9);
        EXPECT(gbc.pc(), 0x1dab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85ea), 0xe0);
        // CB 8E 0362
        gbc.setState(0xb00f, 0xd9d8, 0x2900, 0xb241, 0xbc5f, 0x2991, 0x1, 0x1);
        gbc.writeMem(0x2991, { 0x4d });
        gbc.writeMem(0xb00f, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xd9d8);
        EXPECT(gbc.pc(), 0xb011);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb00f), 0xcb);
        EXPECT(gbc.readMem(0xb010), 0x8e);
        // CB 8E 0363
        gbc.setState(0x6ab5, 0xf761, 0xb2a0, 0x4d01, 0x820b, 0x939e, 0x1, 0x1);
        gbc.writeMem(0x6ab5, { 0xcb, 0x8e });
        gbc.writeMem(0x939e, { 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xf761);
        EXPECT(gbc.pc(), 0x6ab7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x939e), 0x90);
        // CB 8E 0365
        gbc.setState(0xadf6, 0x99a7, 0x2650, 0x9fe2, 0xad94, 0x2fb3, 0x0, 0x1);
        gbc.writeMem(0x2fb3, { 0xa9 });
        gbc.writeMem(0xadf6, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x99a7);
        EXPECT(gbc.pc(), 0xadf8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadf6), 0xcb);
        EXPECT(gbc.readMem(0xadf7), 0x8e);
        // CB 8E 0367
        gbc.setState(0x65c1, 0x4946, 0x9c10, 0xeba6, 0x4986, 0xf874, 0x1, 0x1);
        gbc.writeMem(0x65c1, { 0xcb, 0x8e });
        gbc.writeMem(0xf874, { 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x4946);
        EXPECT(gbc.pc(), 0x65c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf874), 0x44);
        // CB 8E 0369
        gbc.setState(0xada2, 0xf3aa, 0x1870, 0x1a4e, 0xe74e, 0xe068, 0x1, 0x1);
        gbc.writeMem(0xada2, { 0xcb, 0x8e });
        gbc.writeMem(0xe068, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xf3aa);
        EXPECT(gbc.pc(), 0xada4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xada2), 0xcb);
        EXPECT(gbc.readMem(0xada3), 0x8e);
        EXPECT(gbc.readMem(0xe068), 0x0);
        // CB 8E 036A
        gbc.setState(0xc026, 0xa1dd, 0x5b0, 0x731c, 0x15e1, 0x794d, 0x0, 0x0);
        gbc.writeMem(0x794d, { 0x89 });
        gbc.writeMem(0xc026, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xa1dd);
        EXPECT(gbc.pc(), 0xc028);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc026), 0xcb);
        EXPECT(gbc.readMem(0xc027), 0x8e);
        // CB 8E 036B
        gbc.setState(0x4fc8, 0x79af, 0xea30, 0x4c5d, 0x8b95, 0x96b4, 0x1, 0x1);
        gbc.writeMem(0x4fc8, { 0xcb, 0x8e });
        gbc.writeMem(0x96b4, { 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x79af);
        EXPECT(gbc.pc(), 0x4fca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96b4), 0x38);
        // CB 8E 036C
        gbc.setState(0xcd1, 0x98a8, 0x41f0, 0x24d0, 0x6f00, 0xa06f, 0x1, 0x1);
        gbc.writeMem(0xcd1, { 0xcb, 0x8e });
        gbc.writeMem(0xa06f, { 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x98a8);
        EXPECT(gbc.pc(), 0xcd3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa06f), 0x3c);
        // CB 8E 036F
        gbc.setState(0x1484, 0x4c92, 0xc610, 0xceab, 0x3f4e, 0xe2a6, 0x0, 0x0);
        gbc.writeMem(0x1484, { 0xcb, 0x8e });
        gbc.writeMem(0xe2a6, { 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x4c92);
        EXPECT(gbc.pc(), 0x1486);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2a6), 0xb9);
        // CB 8E 0370
        gbc.setState(0x4b8f, 0x5e41, 0x87e0, 0xff31, 0x8e15, 0xd703, 0x0, 0x1);
        gbc.writeMem(0x4b8f, { 0xcb, 0x8e });
        gbc.writeMem(0xd703, { 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x5e41);
        EXPECT(gbc.pc(), 0x4b91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd703), 0xa0);
        // CB 8E 0371
        gbc.setState(0xb679, 0x205, 0xed50, 0x47ec, 0x844c, 0x7001, 0x1, 0x0);
        gbc.writeMem(0x7001, { 0xa0 });
        gbc.writeMem(0xb679, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x205);
        EXPECT(gbc.pc(), 0xb67b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb679), 0xcb);
        EXPECT(gbc.readMem(0xb67a), 0x8e);
        // CB 8E 0373
        gbc.setState(0xe71b, 0xcc4d, 0x1df0, 0x7b79, 0xd1ed, 0xd36, 0x1, 0x1);
        gbc.writeMem(0xd36, { 0x24 });
        gbc.writeMem(0xe71b, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xcc4d);
        EXPECT(gbc.pc(), 0xe71d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe71b), 0xcb);
        EXPECT(gbc.readMem(0xe71c), 0x8e);
        // CB 8E 0374
        gbc.setState(0xe1e7, 0xb3e0, 0xb800, 0x7f2e, 0xbad0, 0xe6e9, 0x0, 0x1);
        gbc.writeMem(0xe1e7, { 0xcb, 0x8e });
        gbc.writeMem(0xe6e9, { 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xb3e0);
        EXPECT(gbc.pc(), 0xe1e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1e7), 0xcb);
        EXPECT(gbc.readMem(0xe1e8), 0x8e);
        EXPECT(gbc.readMem(0xe6e9), 0x80);
        // CB 8E 0375
        gbc.setState(0xc3a2, 0xd9d8, 0x65e0, 0xdba2, 0x514a, 0x50, 0x1, 0x1);
        gbc.writeMem(0x50, { 0x55 });
        gbc.writeMem(0xc3a2, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xd9d8);
        EXPECT(gbc.pc(), 0xc3a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3a2), 0xcb);
        EXPECT(gbc.readMem(0xc3a3), 0x8e);
        // CB 8E 0376
        gbc.setState(0x1e9, 0x9cfb, 0x7ff0, 0xb41e, 0xbc3f, 0x31d4, 0x1, 0x1);
        gbc.writeMem(0x1e9, { 0xcb, 0x8e });
        gbc.writeMem(0x31d4, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x9cfb);
        EXPECT(gbc.pc(), 0x1eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8E 0377
        gbc.setState(0x4aa2, 0xb1f9, 0xbfd0, 0x3f6c, 0x22e, 0x15c0, 0x1, 0x0);
        gbc.writeMem(0x15c0, { 0xf8 });
        gbc.writeMem(0x4aa2, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xb1f9);
        EXPECT(gbc.pc(), 0x4aa4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8E 0378
        gbc.setState(0x5448, 0x132, 0x81b0, 0x5479, 0xbd63, 0x9249, 0x1, 0x0);
        gbc.writeMem(0x5448, { 0xcb, 0x8e });
        gbc.writeMem(0x9249, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x132);
        EXPECT(gbc.pc(), 0x544a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9249), 0x81);
        // CB 8E 0379
        gbc.setState(0x3af5, 0x6d12, 0x5ba0, 0xd883, 0xcc32, 0x6597, 0x1, 0x0);
        gbc.writeMem(0x3af5, { 0xcb, 0x8e });
        gbc.writeMem(0x6597, { 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x6d12);
        EXPECT(gbc.pc(), 0x3af7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8E 037A
        gbc.setState(0x46d8, 0x3764, 0x84d0, 0xe352, 0x939c, 0x1036, 0x1, 0x0);
        gbc.writeMem(0x1036, { 0x28 });
        gbc.writeMem(0x46d8, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x3764);
        EXPECT(gbc.pc(), 0x46da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 8E 037B
        gbc.setState(0x686b, 0xc6c9, 0x9670, 0xb6aa, 0xd2de, 0x969c, 0x1, 0x0);
        gbc.writeMem(0x686b, { 0xcb, 0x8e });
        gbc.writeMem(0x969c, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xc6c9);
        EXPECT(gbc.pc(), 0x686d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x969c), 0x60);
        // CB 8E 037C
        gbc.setState(0x1f54, 0xc024, 0x3060, 0x1a57, 0x8d12, 0x5307, 0x0, 0x1);
        gbc.writeMem(0x1f54, { 0xcb, 0x8e });
        gbc.writeMem(0x5307, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xc024);
        EXPECT(gbc.pc(), 0x1f56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8E 037D
        gbc.setState(0x9fec, 0x849, 0x3460, 0x4dbd, 0xbed9, 0x50bd, 0x0, 0x1);
        gbc.writeMem(0x50bd, { 0xf4 });
        gbc.writeMem(0x9fec, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x849);
        EXPECT(gbc.pc(), 0x9fee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fec), 0xcb);
        EXPECT(gbc.readMem(0x9fed), 0x8e);
        // CB 8E 037F
        gbc.setState(0x98b5, 0x63a5, 0x9820, 0x4de4, 0x96ee, 0xbae9, 0x0, 0x1);
        gbc.writeMem(0x98b5, { 0xcb, 0x8e });
        gbc.writeMem(0xbae9, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x63a5);
        EXPECT(gbc.pc(), 0x98b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98b5), 0xcb);
        EXPECT(gbc.readMem(0x98b6), 0x8e);
        EXPECT(gbc.readMem(0xbae9), 0x99);
        // CB 8E 0381
        gbc.setState(0x5320, 0x6eab, 0xbe00, 0x3b17, 0x3b7d, 0xd99c, 0x1, 0x0);
        gbc.writeMem(0x5320, { 0xcb, 0x8e });
        gbc.writeMem(0xd99c, { 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x6eab);
        EXPECT(gbc.pc(), 0x5322);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd99c), 0x44);
        // CB 8E 0382
        gbc.setState(0x89e7, 0xb359, 0x24b0, 0x21d5, 0xd1df, 0xccfe, 0x0, 0x1);
        gbc.writeMem(0x89e7, { 0xcb, 0x8e });
        gbc.writeMem(0xccfe, { 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xb359);
        EXPECT(gbc.pc(), 0x89e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89e7), 0xcb);
        EXPECT(gbc.readMem(0x89e8), 0x8e);
        EXPECT(gbc.readMem(0xccfe), 0x39);
        // CB 8E 0383
        gbc.setState(0x8f, 0x9790, 0xe2a0, 0x1697, 0x4533, 0xd7c9, 0x1, 0x0);
        gbc.writeMem(0x8f, { 0xcb, 0x8e });
        gbc.writeMem(0xd7c9, { 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x9790);
        EXPECT(gbc.pc(), 0x91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7c9), 0x51);
        // CB 8E 0384
        gbc.setState(0x3858, 0xde3d, 0x85e0, 0x85d1, 0x2cbf, 0x130, 0x1, 0x0);
        gbc.writeMem(0x130, { 0x7d });
        gbc.writeMem(0x3858, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xde3d);
        EXPECT(gbc.pc(), 0x385a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8E 0385
        gbc.setState(0x5f2, 0x6bf8, 0x5ea0, 0xb701, 0xa509, 0x20c0, 0x0, 0x0);
        gbc.writeMem(0x5f2, { 0xcb, 0x8e });
        gbc.writeMem(0x20c0, { 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x6bf8);
        EXPECT(gbc.pc(), 0x5f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8E 0386
        gbc.setState(0xcb4d, 0x108e, 0x6730, 0xd105, 0xecdc, 0x7e01, 0x1, 0x0);
        gbc.writeMem(0x7e01, { 0xe9 });
        gbc.writeMem(0xcb4d, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x108e);
        EXPECT(gbc.pc(), 0xcb4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb4d), 0xcb);
        EXPECT(gbc.readMem(0xcb4e), 0x8e);
        // CB 8E 0388
        gbc.setState(0xebc4, 0x1cd4, 0xbc70, 0x5415, 0xc8d9, 0xa877, 0x1, 0x1);
        gbc.writeMem(0xa877, { 0x61 });
        gbc.writeMem(0xebc4, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x1cd4);
        EXPECT(gbc.pc(), 0xebc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa877), 0x61);
        EXPECT(gbc.readMem(0xebc4), 0xcb);
        EXPECT(gbc.readMem(0xebc5), 0x8e);
        // CB 8E 038A
        gbc.setState(0x6097, 0x5d28, 0xa6e0, 0x4c10, 0xb6d9, 0x9fa8, 0x0, 0x1);
        gbc.writeMem(0x6097, { 0xcb, 0x8e });
        gbc.writeMem(0x9fa8, { 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x5d28);
        EXPECT(gbc.pc(), 0x6099);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fa8), 0xc1);
        // CB 8E 038B
        gbc.setState(0xaf79, 0xb2ad, 0x7080, 0xa4a9, 0x9f4b, 0xa763, 0x0, 0x0);
        gbc.writeMem(0xa763, { 0x1d });
        gbc.writeMem(0xaf79, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xb2ad);
        EXPECT(gbc.pc(), 0xaf7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa763), 0x1d);
        EXPECT(gbc.readMem(0xaf79), 0xcb);
        EXPECT(gbc.readMem(0xaf7a), 0x8e);
        // CB 8E 038E
        gbc.setState(0x9c51, 0x559d, 0x3d0, 0xc6f9, 0x4c4d, 0x44aa, 0x0, 0x1);
        gbc.writeMem(0x44aa, { 0x68 });
        gbc.writeMem(0x9c51, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x559d);
        EXPECT(gbc.pc(), 0x9c53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c51), 0xcb);
        EXPECT(gbc.readMem(0x9c52), 0x8e);
        // CB 8E 038F
        gbc.setState(0x6d3a, 0xaa5e, 0xb30, 0x726, 0x878a, 0x2781, 0x0, 0x1);
        gbc.writeMem(0x2781, { 0xec });
        gbc.writeMem(0x6d3a, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xaa5e);
        EXPECT(gbc.pc(), 0x6d3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8E 0391
        gbc.setState(0xebe4, 0x39dd, 0x9090, 0x9529, 0x8f5c, 0xbafa, 0x1, 0x1);
        gbc.writeMem(0xbafa, { 0x6d });
        gbc.writeMem(0xebe4, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x39dd);
        EXPECT(gbc.pc(), 0xebe6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbafa), 0x6d);
        EXPECT(gbc.readMem(0xebe4), 0xcb);
        EXPECT(gbc.readMem(0xebe5), 0x8e);
        // CB 8E 0392
        gbc.setState(0xcfd8, 0xc25b, 0x24a0, 0x7462, 0x6396, 0x1377, 0x0, 0x0);
        gbc.writeMem(0x1377, { 0x35 });
        gbc.writeMem(0xcfd8, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xc25b);
        EXPECT(gbc.pc(), 0xcfda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfd8), 0xcb);
        EXPECT(gbc.readMem(0xcfd9), 0x8e);
        // CB 8E 0395
        gbc.setState(0x3d3b, 0xadf0, 0xf450, 0x1e61, 0xd9e9, 0xf752, 0x1, 0x0);
        gbc.writeMem(0x3d3b, { 0xcb, 0x8e });
        gbc.writeMem(0xf752, { 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xadf0);
        EXPECT(gbc.pc(), 0x3d3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf752), 0x85);
        // CB 8E 0396
        gbc.setState(0xa8d6, 0xda2, 0x490, 0xfc5, 0xf8c3, 0xb1d9, 0x1, 0x0);
        gbc.writeMem(0xa8d6, { 0xcb, 0x8e });
        gbc.writeMem(0xb1d9, { 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xda2);
        EXPECT(gbc.pc(), 0xa8d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8d6), 0xcb);
        EXPECT(gbc.readMem(0xa8d7), 0x8e);
        EXPECT(gbc.readMem(0xb1d9), 0x2d);
        // CB 8E 0397
        gbc.setState(0x8fc0, 0x9c9e, 0xed60, 0x467b, 0x898c, 0xfb7e, 0x1, 0x1);
        gbc.writeMem(0x8fc0, { 0xcb, 0x8e });
        gbc.writeMem(0xfb7e, { 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x9c9e);
        EXPECT(gbc.pc(), 0x8fc2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fc0), 0xcb);
        EXPECT(gbc.readMem(0x8fc1), 0x8e);
        EXPECT(gbc.readMem(0xfb7e), 0xad);
        // CB 8E 0398
        gbc.setState(0xc3fd, 0x15d7, 0x8700, 0x28aa, 0x31b9, 0xa248, 0x1, 0x1);
        gbc.writeMem(0xa248, { 0xbd });
        gbc.writeMem(0xc3fd, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x15d7);
        EXPECT(gbc.pc(), 0xc3ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa248), 0xbd);
        EXPECT(gbc.readMem(0xc3fd), 0xcb);
        EXPECT(gbc.readMem(0xc3fe), 0x8e);
        // CB 8E 039A
        gbc.setState(0xe861, 0xd4b2, 0xff40, 0x52a3, 0x205e, 0x2a64, 0x1, 0x0);
        gbc.writeMem(0x2a64, { 0xa5 });
        gbc.writeMem(0xe861, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xd4b2);
        EXPECT(gbc.pc(), 0xe863);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe861), 0xcb);
        EXPECT(gbc.readMem(0xe862), 0x8e);
        // CB 8E 039D
        gbc.setState(0x886b, 0x4b96, 0xf910, 0xfa26, 0xa68a, 0x43a8, 0x1, 0x0);
        gbc.writeMem(0x43a8, { 0x34 });
        gbc.writeMem(0x886b, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x4b96);
        EXPECT(gbc.pc(), 0x886d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x886b), 0xcb);
        EXPECT(gbc.readMem(0x886c), 0x8e);
        // CB 8E 039E
        gbc.setState(0x8dc7, 0x93d8, 0x2620, 0xacfc, 0x93a9, 0x67da, 0x0, 0x0);
        gbc.writeMem(0x67da, { 0xed });
        gbc.writeMem(0x8dc7, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x93d8);
        EXPECT(gbc.pc(), 0x8dc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8dc7), 0xcb);
        EXPECT(gbc.readMem(0x8dc8), 0x8e);
        // CB 8E 039F
        gbc.setState(0x6d5c, 0xd9ce, 0x9f40, 0x1bf6, 0xcbb7, 0x834, 0x1, 0x0);
        gbc.writeMem(0x834, { 0x45 });
        gbc.writeMem(0x6d5c, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xd9ce);
        EXPECT(gbc.pc(), 0x6d5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8E 03A0
        gbc.setState(0x84bd, 0x88b2, 0x9740, 0x45f9, 0xb54a, 0x854, 0x0, 0x0);
        gbc.writeMem(0x854, { 0x58 });
        gbc.writeMem(0x84bd, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x88b2);
        EXPECT(gbc.pc(), 0x84bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84bd), 0xcb);
        EXPECT(gbc.readMem(0x84be), 0x8e);
        // CB 8E 03A1
        gbc.setState(0x7623, 0xabf1, 0xfb40, 0x45b1, 0xad05, 0xcb92, 0x1, 0x0);
        gbc.writeMem(0x7623, { 0xcb, 0x8e });
        gbc.writeMem(0xcb92, { 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xabf1);
        EXPECT(gbc.pc(), 0x7625);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb92), 0x98);
        // CB 8E 03A2
        gbc.setState(0xb084, 0xe595, 0xf330, 0xd25b, 0x8949, 0xe58a, 0x1, 0x1);
        gbc.writeMem(0xb084, { 0xcb, 0x8e });
        gbc.writeMem(0xe58a, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xe595);
        EXPECT(gbc.pc(), 0xb086);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb084), 0xcb);
        EXPECT(gbc.readMem(0xb085), 0x8e);
        EXPECT(gbc.readMem(0xe58a), 0x71);
        // CB 8E 03A3
        gbc.setState(0x783a, 0x11b2, 0x9670, 0x8e7a, 0x7ece, 0xca44, 0x0, 0x0);
        gbc.writeMem(0x783a, { 0xcb, 0x8e });
        gbc.writeMem(0xca44, { 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x11b2);
        EXPECT(gbc.pc(), 0x783c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca44), 0xa5);
        // CB 8E 03A5
        gbc.setState(0x37b8, 0xa83d, 0x8e50, 0x80e2, 0x637f, 0x88ea, 0x1, 0x0);
        gbc.writeMem(0x37b8, { 0xcb, 0x8e });
        gbc.writeMem(0x88ea, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xa83d);
        EXPECT(gbc.pc(), 0x37ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88ea), 0xcd);
        // CB 8E 03A6
        gbc.setState(0xd2b0, 0x5f2d, 0xaca0, 0x5747, 0xfa58, 0x285, 0x0, 0x1);
        gbc.writeMem(0x285, { 0x2d });
        gbc.writeMem(0xd2b0, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x5f2d);
        EXPECT(gbc.pc(), 0xd2b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2b0), 0xcb);
        EXPECT(gbc.readMem(0xd2b1), 0x8e);
        // CB 8E 03A7
        gbc.setState(0xe21c, 0x1a66, 0xc4c0, 0x5127, 0x9cc8, 0x29cf, 0x0, 0x0);
        gbc.writeMem(0x29cf, { 0x2d });
        gbc.writeMem(0xe21c, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x1a66);
        EXPECT(gbc.pc(), 0xe21e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe21c), 0xcb);
        EXPECT(gbc.readMem(0xe21d), 0x8e);
        // CB 8E 03A8
        gbc.setState(0x6da5, 0xc61e, 0x14d0, 0xe1cb, 0x5e8, 0xa801, 0x0, 0x0);
        gbc.writeMem(0x6da5, { 0xcb, 0x8e });
        gbc.writeMem(0xa801, { 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xc61e);
        EXPECT(gbc.pc(), 0x6da7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa801), 0x84);
        // CB 8E 03A9
        gbc.setState(0x88c1, 0xd593, 0xe290, 0x2c82, 0x113b, 0x5be6, 0x0, 0x1);
        gbc.writeMem(0x5be6, { 0x9c });
        gbc.writeMem(0x88c1, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xd593);
        EXPECT(gbc.pc(), 0x88c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88c1), 0xcb);
        EXPECT(gbc.readMem(0x88c2), 0x8e);
        // CB 8E 03AA
        gbc.setState(0xd5b1, 0x2930, 0x7900, 0xf8e8, 0x5003, 0x8faa, 0x1, 0x0);
        gbc.writeMem(0x8faa, { 0x22 });
        gbc.writeMem(0xd5b1, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x2930);
        EXPECT(gbc.pc(), 0xd5b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8faa), 0x20);
        EXPECT(gbc.readMem(0xd5b1), 0xcb);
        EXPECT(gbc.readMem(0xd5b2), 0x8e);
        // CB 8E 03AB
        gbc.setState(0x1f4c, 0x1e5d, 0xc9a0, 0xc4c9, 0x91e, 0x86ff, 0x0, 0x0);
        gbc.writeMem(0x1f4c, { 0xcb, 0x8e });
        gbc.writeMem(0x86ff, { 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x1e5d);
        EXPECT(gbc.pc(), 0x1f4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86ff), 0x4);
        // CB 8E 03AC
        gbc.setState(0xa599, 0x41e8, 0xc6e0, 0x51db, 0x8170, 0xa96b, 0x0, 0x1);
        gbc.writeMem(0xa599, { 0xcb, 0x8e });
        gbc.writeMem(0xa96b, { 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x41e8);
        EXPECT(gbc.pc(), 0xa59b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa599), 0xcb);
        EXPECT(gbc.readMem(0xa59a), 0x8e);
        EXPECT(gbc.readMem(0xa96b), 0x61);
        // CB 8E 03AD
        gbc.setState(0x4bba, 0xb7b6, 0x6690, 0xb558, 0xd38f, 0x8a62, 0x1, 0x1);
        gbc.writeMem(0x4bba, { 0xcb, 0x8e });
        gbc.writeMem(0x8a62, { 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xb7b6);
        EXPECT(gbc.pc(), 0x4bbc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a62), 0x78);
        // CB 8E 03AE
        gbc.setState(0xb97c, 0x4e12, 0x3010, 0x68b8, 0x898c, 0x7e4, 0x1, 0x0);
        gbc.writeMem(0x7e4, { 0x64 });
        gbc.writeMem(0xb97c, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x4e12);
        EXPECT(gbc.pc(), 0xb97e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb97c), 0xcb);
        EXPECT(gbc.readMem(0xb97d), 0x8e);
        // CB 8E 03AF
        gbc.setState(0xc0c2, 0x7db6, 0xc2b0, 0x87e6, 0xb348, 0x74a6, 0x1, 0x1);
        gbc.writeMem(0x74a6, { 0x65 });
        gbc.writeMem(0xc0c2, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x7db6);
        EXPECT(gbc.pc(), 0xc0c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0c2), 0xcb);
        EXPECT(gbc.readMem(0xc0c3), 0x8e);
        // CB 8E 03B3
        gbc.setState(0x15e4, 0xe016, 0x9450, 0x3f44, 0x8170, 0x8983, 0x0, 0x1);
        gbc.writeMem(0x15e4, { 0xcb, 0x8e });
        gbc.writeMem(0x8983, { 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xe016);
        EXPECT(gbc.pc(), 0x15e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8983), 0x84);
        // CB 8E 03B5
        gbc.setState(0x6e3d, 0xfe3a, 0x7440, 0x5514, 0x6afc, 0xa606, 0x1, 0x0);
        gbc.writeMem(0x6e3d, { 0xcb, 0x8e });
        gbc.writeMem(0xa606, { 0x2c });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xfe3a);
        EXPECT(gbc.pc(), 0x6e3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa606), 0x2c);
        // CB 8E 03B8
        gbc.setState(0xba27, 0xdce1, 0x1ef0, 0xa732, 0xa27c, 0x7131, 0x0, 0x0);
        gbc.writeMem(0x7131, { 0x20 });
        gbc.writeMem(0xba27, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xdce1);
        EXPECT(gbc.pc(), 0xba29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba27), 0xcb);
        EXPECT(gbc.readMem(0xba28), 0x8e);
        // CB 8E 03B9
        gbc.setState(0xf57, 0xafe3, 0xe790, 0x5c62, 0x3714, 0xc561, 0x0, 0x0);
        gbc.writeMem(0xf57, { 0xcb, 0x8e });
        gbc.writeMem(0xc561, { 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xafe3);
        EXPECT(gbc.pc(), 0xf59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc561), 0xd0);
        // CB 8E 03BA
        gbc.setState(0xe0a9, 0xe7ac, 0x4600, 0xa2f6, 0xd4fe, 0x82a8, 0x1, 0x1);
        gbc.writeMem(0x82a8, { 0x3e });
        gbc.writeMem(0xe0a9, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xe7ac);
        EXPECT(gbc.pc(), 0xe0ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82a8), 0x3c);
        EXPECT(gbc.readMem(0xe0a9), 0xcb);
        EXPECT(gbc.readMem(0xe0aa), 0x8e);
        // CB 8E 03BB
        gbc.setState(0x4c1a, 0xc4de, 0x7680, 0x3f7d, 0x3e92, 0xdd63, 0x0, 0x0);
        gbc.writeMem(0x4c1a, { 0xcb, 0x8e });
        gbc.writeMem(0xdd63, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xc4de);
        EXPECT(gbc.pc(), 0x4c1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd63), 0x55);
        // CB 8E 03BE
        gbc.setState(0x9a20, 0xb7be, 0x3630, 0x908f, 0x81a9, 0xdd8d, 0x1, 0x1);
        gbc.writeMem(0x9a20, { 0xcb, 0x8e });
        gbc.writeMem(0xdd8d, { 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xb7be);
        EXPECT(gbc.pc(), 0x9a22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a20), 0xcb);
        EXPECT(gbc.readMem(0x9a21), 0x8e);
        EXPECT(gbc.readMem(0xdd8d), 0x49);
        // CB 8E 03BF
        gbc.setState(0xd84c, 0x8a13, 0x5180, 0x156f, 0x3b2d, 0xa677, 0x1, 0x0);
        gbc.writeMem(0xa677, { 0x85 });
        gbc.writeMem(0xd84c, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x8a13);
        EXPECT(gbc.pc(), 0xd84e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa677), 0x85);
        EXPECT(gbc.readMem(0xd84c), 0xcb);
        EXPECT(gbc.readMem(0xd84d), 0x8e);
        // CB 8E 03C0
        gbc.setState(0x5f0, 0xe63a, 0xbb0, 0x63fd, 0xa418, 0x9a1a, 0x0, 0x1);
        gbc.writeMem(0x5f0, { 0xcb, 0x8e });
        gbc.writeMem(0x9a1a, { 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xe63a);
        EXPECT(gbc.pc(), 0x5f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a1a), 0xb9);
        // CB 8E 03C2
        gbc.setState(0xdaef, 0xa9dd, 0xfdb0, 0xb283, 0xd04f, 0xe18a, 0x1, 0x0);
        gbc.writeMem(0xdaef, { 0xcb, 0x8e });
        gbc.writeMem(0xe18a, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xa9dd);
        EXPECT(gbc.pc(), 0xdaf1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdaef), 0xcb);
        EXPECT(gbc.readMem(0xdaf0), 0x8e);
        EXPECT(gbc.readMem(0xe18a), 0x51);
        // CB 8E 03C3
        gbc.setState(0x5484, 0xa259, 0x9700, 0x1828, 0xe464, 0x979f, 0x1, 0x0);
        gbc.writeMem(0x5484, { 0xcb, 0x8e });
        gbc.writeMem(0x979f, { 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xa259);
        EXPECT(gbc.pc(), 0x5486);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x979f), 0xb9);
        // CB 8E 03C4
        gbc.setState(0x8f3, 0xacbe, 0x640, 0xc5ba, 0xd298, 0x994b, 0x0, 0x1);
        gbc.writeMem(0x8f3, { 0xcb, 0x8e });
        gbc.writeMem(0x994b, { 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xacbe);
        EXPECT(gbc.pc(), 0x8f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x994b), 0xe9);
        // CB 8E 03C5
        gbc.setState(0x463e, 0x9304, 0xcac0, 0xb2cc, 0x7dd2, 0x8f73, 0x1, 0x0);
        gbc.writeMem(0x463e, { 0xcb, 0x8e });
        gbc.writeMem(0x8f73, { 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x9304);
        EXPECT(gbc.pc(), 0x4640);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f73), 0xdd);
        // CB 8E 03C7
        gbc.setState(0x8ec, 0xf3e9, 0x20, 0x215d, 0x178, 0x700b, 0x1, 0x0);
        gbc.writeMem(0x8ec, { 0xcb, 0x8e });
        gbc.writeMem(0x700b, { 0xb5 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xf3e9);
        EXPECT(gbc.pc(), 0x8ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8E 03C8
        gbc.setState(0x2568, 0xb82e, 0x6570, 0x3355, 0xecbd, 0x983e, 0x1, 0x1);
        gbc.writeMem(0x2568, { 0xcb, 0x8e });
        gbc.writeMem(0x983e, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xb82e);
        EXPECT(gbc.pc(), 0x256a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x983e), 0xd8);
        // CB 8E 03C9
        gbc.setState(0x4436, 0xc0a9, 0xa330, 0x9dc4, 0x20b4, 0x2c15, 0x1, 0x1);
        gbc.writeMem(0x2c15, { 0x40 });
        gbc.writeMem(0x4436, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xc0a9);
        EXPECT(gbc.pc(), 0x4438);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8E 03CB
        gbc.setState(0xb8f4, 0xa022, 0xa560, 0x7fe2, 0x3b9e, 0x595d, 0x0, 0x1);
        gbc.writeMem(0x595d, { 0x28 });
        gbc.writeMem(0xb8f4, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xa022);
        EXPECT(gbc.pc(), 0xb8f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8f4), 0xcb);
        EXPECT(gbc.readMem(0xb8f5), 0x8e);
        // CB 8E 03CD
        gbc.setState(0xa8de, 0x6c9e, 0x2060, 0x94d0, 0xa70f, 0x687c, 0x0, 0x0);
        gbc.writeMem(0x687c, { 0x84 });
        gbc.writeMem(0xa8de, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x6c9e);
        EXPECT(gbc.pc(), 0xa8e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8de), 0xcb);
        EXPECT(gbc.readMem(0xa8df), 0x8e);
        // CB 8E 03CE
        gbc.setState(0x62d1, 0x4e9f, 0xf170, 0xa40f, 0xd539, 0x9c81, 0x0, 0x0);
        gbc.writeMem(0x62d1, { 0xcb, 0x8e });
        gbc.writeMem(0x9c81, { 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x4e9f);
        EXPECT(gbc.pc(), 0x62d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c81), 0x74);
        // CB 8E 03CF
        gbc.setState(0x69d0, 0x4c32, 0x3f40, 0xbd71, 0x2277, 0x2996, 0x0, 0x1);
        gbc.writeMem(0x2996, { 0x6c });
        gbc.writeMem(0x69d0, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x4c32);
        EXPECT(gbc.pc(), 0x69d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8E 03D1
        gbc.setState(0x6ae8, 0x4507, 0x2430, 0x4f8, 0x77e0, 0x98fe, 0x1, 0x0);
        gbc.writeMem(0x6ae8, { 0xcb, 0x8e });
        gbc.writeMem(0x98fe, { 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x4507);
        EXPECT(gbc.pc(), 0x6aea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98fe), 0x3c);
        // CB 8E 03D4
        gbc.setState(0xe917, 0x7b44, 0x8d10, 0x17c0, 0x98dc, 0x2a70, 0x1, 0x0);
        gbc.writeMem(0x2a70, { 0x28 });
        gbc.writeMem(0xe917, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x7b44);
        EXPECT(gbc.pc(), 0xe919);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe917), 0xcb);
        EXPECT(gbc.readMem(0xe918), 0x8e);
        // CB 8E 03D5
        gbc.setState(0x595e, 0xb2f6, 0x5580, 0xb3eb, 0x4aab, 0x643e, 0x0, 0x1);
        gbc.writeMem(0x595e, { 0xcb, 0x8e });
        gbc.writeMem(0x643e, { 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xb2f6);
        EXPECT(gbc.pc(), 0x5960);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 8E 03D6
        gbc.setState(0x9117, 0x30c, 0x4a40, 0xb5e0, 0x9e24, 0x413d, 0x0, 0x1);
        gbc.writeMem(0x413d, { 0x60 });
        gbc.writeMem(0x9117, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x30c);
        EXPECT(gbc.pc(), 0x9119);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9117), 0xcb);
        EXPECT(gbc.readMem(0x9118), 0x8e);
        // CB 8E 03D9
        gbc.setState(0xdd2f, 0xa7e4, 0x1f50, 0x89a8, 0x10b9, 0x9357, 0x0, 0x1);
        gbc.writeMem(0x9357, { 0x52 });
        gbc.writeMem(0xdd2f, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xa7e4);
        EXPECT(gbc.pc(), 0xdd31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9357), 0x50);
        EXPECT(gbc.readMem(0xdd2f), 0xcb);
        EXPECT(gbc.readMem(0xdd30), 0x8e);
        // CB 8E 03DA
        gbc.setState(0x7324, 0xe09d, 0x3200, 0x5f15, 0x3c08, 0xfbbd, 0x1, 0x0);
        gbc.writeMem(0x7324, { 0xcb, 0x8e });
        gbc.writeMem(0xfbbd, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xe09d);
        EXPECT(gbc.pc(), 0x7326);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfbbd), 0x55);
        // CB 8E 03DB
        gbc.setState(0x3dc2, 0xcc10, 0x8d60, 0xc441, 0xef96, 0x868c, 0x1, 0x1);
        gbc.writeMem(0x3dc2, { 0xcb, 0x8e });
        gbc.writeMem(0x868c, { 0xde });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xcc10);
        EXPECT(gbc.pc(), 0x3dc4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x868c), 0xdc);
        // CB 8E 03DC
        gbc.setState(0x5b9f, 0xcce6, 0xd1b0, 0xa061, 0xf22c, 0x7e27, 0x1, 0x0);
        gbc.writeMem(0x5b9f, { 0xcb, 0x8e });
        gbc.writeMem(0x7e27, { 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xcce6);
        EXPECT(gbc.pc(), 0x5ba1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 8E 03E0
        gbc.setState(0xc3a3, 0x9c74, 0x5dc0, 0x409c, 0x21df, 0x2f1a, 0x1, 0x0);
        gbc.writeMem(0x2f1a, { 0x1d });
        gbc.writeMem(0xc3a3, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x9c74);
        EXPECT(gbc.pc(), 0xc3a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3a3), 0xcb);
        EXPECT(gbc.readMem(0xc3a4), 0x8e);
        // CB 8E 03E1
        gbc.setState(0xbb53, 0x6c19, 0x50a0, 0xba69, 0x5ad1, 0x748b, 0x0, 0x1);
        gbc.writeMem(0x748b, { 0xd8 });
        gbc.writeMem(0xbb53, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x6c19);
        EXPECT(gbc.pc(), 0xbb55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb53), 0xcb);
        EXPECT(gbc.readMem(0xbb54), 0x8e);
        // CB 8E 03E3
        gbc.setState(0xd2bd, 0x9785, 0x62a0, 0xfeee, 0xe00d, 0xae50, 0x1, 0x0);
        gbc.writeMem(0xae50, { 0x37 });
        gbc.writeMem(0xd2bd, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x9785);
        EXPECT(gbc.pc(), 0xd2bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae50), 0x35);
        EXPECT(gbc.readMem(0xd2bd), 0xcb);
        EXPECT(gbc.readMem(0xd2be), 0x8e);
        // CB 8E 03E4
        gbc.setState(0x5cf5, 0x4192, 0x1b60, 0x7630, 0x6b68, 0x2800, 0x1, 0x1);
        gbc.writeMem(0x2800, { 0xf8 });
        gbc.writeMem(0x5cf5, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x4192);
        EXPECT(gbc.pc(), 0x5cf7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 8E 03E5
        gbc.setState(0xc8c0, 0x646d, 0xe260, 0x1488, 0x8307, 0xb654, 0x0, 0x0);
        gbc.writeMem(0xb654, { 0x5f });
        gbc.writeMem(0xc8c0, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x646d);
        EXPECT(gbc.pc(), 0xc8c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb654), 0x5d);
        EXPECT(gbc.readMem(0xc8c0), 0xcb);
        EXPECT(gbc.readMem(0xc8c1), 0x8e);
    }
