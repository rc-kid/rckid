    TEST(gbcemu, opcode_cb_8e) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 8E 0000
        gbc.setState(0x64a4, 0x46bf, 0x2180, 0x14d6, 0xf950, 0x605b, 0x1, 0x1);
        gbc.writeMem(0x605b, { 0x3d });
        gbc.writeMem(0x64a4, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x46bf, gbc.sp());
        EXPECT(0x64a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8E 0003
        gbc.setState(0x8970, 0x291d, 0x3930, 0x97be, 0x9cec, 0xea4a, 0x0, 0x1);
        gbc.writeMem(0x8970, { 0xcb, 0x8e });
        gbc.writeMem(0xea4a, { 0x4b });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x291d, gbc.sp());
        EXPECT(0x8972, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8970));
        EXPECT(0x8e, gbc.readMem(0x8971));
        EXPECT(0x49, gbc.readMem(0xea4a));
        // CB 8E 0004
        gbc.setState(0x2765, 0x655b, 0xa780, 0xd3b, 0x2c5a, 0x5df8, 0x0, 0x0);
        gbc.writeMem(0x2765, { 0xcb, 0x8e });
        gbc.writeMem(0x5df8, { 0x2d });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x655b, gbc.sp());
        EXPECT(0x2767, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8E 0005
        gbc.setState(0x8466, 0xf5c5, 0xe670, 0xbb85, 0xbe44, 0xaa2b, 0x1, 0x0);
        gbc.writeMem(0x8466, { 0xcb, 0x8e });
        gbc.writeMem(0xaa2b, { 0x58 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xf5c5, gbc.sp());
        EXPECT(0x8468, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8466));
        EXPECT(0x8e, gbc.readMem(0x8467));
        EXPECT(0x58, gbc.readMem(0xaa2b));
        // CB 8E 0007
        gbc.setState(0x2087, 0xf5d, 0x6470, 0x4b48, 0x6ea0, 0xd47a, 0x1, 0x1);
        gbc.writeMem(0x2087, { 0xcb, 0x8e });
        gbc.writeMem(0xd47a, { 0xf1 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xf5d, gbc.sp());
        EXPECT(0x2089, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xd47a));
        // CB 8E 0008
        gbc.setState(0x7967, 0x4034, 0x3310, 0xdf9f, 0x97e2, 0xe9c4, 0x1, 0x1);
        gbc.writeMem(0x7967, { 0xcb, 0x8e });
        gbc.writeMem(0xe9c4, { 0xe0 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x4034, gbc.sp());
        EXPECT(0x7969, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xe9c4));
        // CB 8E 0009
        gbc.setState(0x9ef, 0x6226, 0xe8a0, 0xf80c, 0xb4d4, 0x31c0, 0x0, 0x1);
        gbc.writeMem(0x9ef, { 0xcb, 0x8e });
        gbc.writeMem(0x31c0, { 0x69 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x6226, gbc.sp());
        EXPECT(0x9f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8E 000A
        gbc.setState(0x8536, 0x8ec0, 0x68a0, 0x10e0, 0x7955, 0xc705, 0x0, 0x0);
        gbc.writeMem(0x8536, { 0xcb, 0x8e });
        gbc.writeMem(0xc705, { 0x8e });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x8ec0, gbc.sp());
        EXPECT(0x8538, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8536));
        EXPECT(0x8e, gbc.readMem(0x8537));
        EXPECT(0x8c, gbc.readMem(0xc705));
        // CB 8E 000B
        gbc.setState(0x8bdd, 0x963e, 0x2370, 0x8f80, 0xcc4, 0x2a69, 0x1, 0x1);
        gbc.writeMem(0x2a69, { 0x30 });
        gbc.writeMem(0x8bdd, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x963e, gbc.sp());
        EXPECT(0x8bdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bdd));
        EXPECT(0x8e, gbc.readMem(0x8bde));
        // CB 8E 000D
        gbc.setState(0x5641, 0xdc34, 0xfc50, 0x9818, 0x66, 0xe61e, 0x1, 0x1);
        gbc.writeMem(0x5641, { 0xcb, 0x8e });
        gbc.writeMem(0xe61e, { 0x76 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xdc34, gbc.sp());
        EXPECT(0x5643, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xe61e));
        // CB 8E 000E
        gbc.setState(0xe45a, 0x641d, 0x4480, 0xbcf7, 0x2266, 0x710, 0x0, 0x1);
        gbc.writeMem(0x710, { 0x81 });
        gbc.writeMem(0xe45a, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x641d, gbc.sp());
        EXPECT(0xe45c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe45a));
        EXPECT(0x8e, gbc.readMem(0xe45b));
        // CB 8E 000F
        gbc.setState(0x95b2, 0x91e9, 0x80b0, 0xe425, 0xa130, 0x258, 0x0, 0x0);
        gbc.writeMem(0x258, { 0x8 });
        gbc.writeMem(0x95b2, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x91e9, gbc.sp());
        EXPECT(0x95b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95b2));
        EXPECT(0x8e, gbc.readMem(0x95b3));
        // CB 8E 0010
        gbc.setState(0x6011, 0xbc72, 0x7940, 0x293d, 0x7661, 0x5b47, 0x0, 0x0);
        gbc.writeMem(0x5b47, { 0xbc });
        gbc.writeMem(0x6011, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xbc72, gbc.sp());
        EXPECT(0x6013, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8E 0011
        gbc.setState(0x748c, 0xc585, 0x33b0, 0x4b98, 0xb08d, 0x3fc2, 0x0, 0x1);
        gbc.writeMem(0x3fc2, { 0xcd });
        gbc.writeMem(0x748c, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xc585, gbc.sp());
        EXPECT(0x748e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8E 0012
        gbc.setState(0x6a7f, 0xb2b6, 0xd3e0, 0xb76c, 0x7fe8, 0xba0e, 0x1, 0x0);
        gbc.writeMem(0x6a7f, { 0xcb, 0x8e });
        gbc.writeMem(0xba0e, { 0xe });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xb2b6, gbc.sp());
        EXPECT(0x6a81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xba0e));
        // CB 8E 0013
        gbc.setState(0x9218, 0xe905, 0x7bf0, 0xfe05, 0x76d3, 0x32d6, 0x1, 0x1);
        gbc.writeMem(0x32d6, { 0xec });
        gbc.writeMem(0x9218, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xe905, gbc.sp());
        EXPECT(0x921a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9218));
        EXPECT(0x8e, gbc.readMem(0x9219));
        // CB 8E 0014
        gbc.setState(0x14a, 0x548f, 0x4020, 0xb73e, 0x560e, 0x3841, 0x0, 0x1);
        gbc.writeMem(0x14a, { 0xcb, 0x8e });
        gbc.writeMem(0x3841, { 0xe9 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x548f, gbc.sp());
        EXPECT(0x14c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8E 0015
        gbc.setState(0x7cd4, 0xf304, 0x7e50, 0xd5a1, 0xd765, 0x845b, 0x0, 0x1);
        gbc.writeMem(0x7cd4, { 0xcb, 0x8e });
        gbc.writeMem(0x845b, { 0x4c });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xf304, gbc.sp());
        EXPECT(0x7cd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x845b));
        // CB 8E 0017
        gbc.setState(0xed87, 0x8557, 0xc370, 0x833, 0x2099, 0xac1e, 0x1, 0x1);
        gbc.writeMem(0xac1e, { 0xa7 });
        gbc.writeMem(0xed87, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x8557, gbc.sp());
        EXPECT(0xed89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa5, gbc.readMem(0xac1e));
        EXPECT(0xcb, gbc.readMem(0xed87));
        EXPECT(0x8e, gbc.readMem(0xed88));
        // CB 8E 001C
        gbc.setState(0x911a, 0x2192, 0x660, 0x2686, 0xc643, 0x4ef2, 0x0, 0x0);
        gbc.writeMem(0x4ef2, { 0x10 });
        gbc.writeMem(0x911a, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x2192, gbc.sp());
        EXPECT(0x911c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x911a));
        EXPECT(0x8e, gbc.readMem(0x911b));
        // CB 8E 001E
        gbc.setState(0xda87, 0xfbd4, 0x5710, 0xae01, 0x9759, 0xf194, 0x1, 0x0);
        gbc.writeMem(0xda87, { 0xcb, 0x8e });
        gbc.writeMem(0xf194, { 0x5b });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xfbd4, gbc.sp());
        EXPECT(0xda89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda87));
        EXPECT(0x8e, gbc.readMem(0xda88));
        EXPECT(0x59, gbc.readMem(0xf194));
        // CB 8E 001F
        gbc.setState(0x457e, 0x9e12, 0x1a30, 0xde1e, 0xf80e, 0xe962, 0x1, 0x0);
        gbc.writeMem(0x457e, { 0xcb, 0x8e });
        gbc.writeMem(0xe962, { 0x52 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x9e12, gbc.sp());
        EXPECT(0x4580, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xe962));
        // CB 8E 0020
        gbc.setState(0x6fb6, 0xb71c, 0x3c90, 0x5595, 0x2463, 0x86dc, 0x1, 0x0);
        gbc.writeMem(0x6fb6, { 0xcb, 0x8e });
        gbc.writeMem(0x86dc, { 0x1c });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xb71c, gbc.sp());
        EXPECT(0x6fb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0x86dc));
        // CB 8E 0021
        gbc.setState(0xcd1a, 0xc29a, 0xda20, 0xcb01, 0x87cf, 0xb1f6, 0x0, 0x0);
        gbc.writeMem(0xb1f6, { 0x52 });
        gbc.writeMem(0xcd1a, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xc29a, gbc.sp());
        EXPECT(0xcd1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xb1f6));
        EXPECT(0xcb, gbc.readMem(0xcd1a));
        EXPECT(0x8e, gbc.readMem(0xcd1b));
        // CB 8E 0022
        gbc.setState(0x4cbc, 0x59d3, 0x6ba0, 0x4949, 0x6384, 0x5d1f, 0x1, 0x1);
        gbc.writeMem(0x4cbc, { 0xcb, 0x8e });
        gbc.writeMem(0x5d1f, { 0xe1 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x59d3, gbc.sp());
        EXPECT(0x4cbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8E 0023
        gbc.setState(0x5db7, 0x70d1, 0xe060, 0x96b7, 0xc9b5, 0xb85e, 0x0, 0x0);
        gbc.writeMem(0x5db7, { 0xcb, 0x8e });
        gbc.writeMem(0xb85e, { 0x80 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x70d1, gbc.sp());
        EXPECT(0x5db9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xb85e));
        // CB 8E 0025
        gbc.setState(0x7668, 0xdc6, 0x8b0, 0x3a89, 0xfdda, 0xff53, 0x0, 0x1);
        gbc.writeMem(0x7668, { 0xcb, 0x8e });
        gbc.writeMem(0xff53, { 0xd2 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xdc6, gbc.sp());
        EXPECT(0x766a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xff53));
        // CB 8E 0028
        gbc.setState(0x58d0, 0x7f42, 0x1360, 0x2d92, 0xc029, 0xb2ba, 0x0, 0x0);
        gbc.writeMem(0x58d0, { 0xcb, 0x8e });
        gbc.writeMem(0xb2ba, { 0xa8 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x7f42, gbc.sp());
        EXPECT(0x58d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa8, gbc.readMem(0xb2ba));
        // CB 8E 0029
        gbc.setState(0x4546, 0x68e5, 0x3140, 0x9269, 0xa96a, 0x8f49, 0x1, 0x0);
        gbc.writeMem(0x4546, { 0xcb, 0x8e });
        gbc.writeMem(0x8f49, { 0x5e });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x68e5, gbc.sp());
        EXPECT(0x4548, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0x8f49));
        // CB 8E 002B
        gbc.setState(0xe703, 0x2a9a, 0x62c0, 0x1dcd, 0x2dd1, 0xae95, 0x0, 0x1);
        gbc.writeMem(0xae95, { 0x57 });
        gbc.writeMem(0xe703, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x2a9a, gbc.sp());
        EXPECT(0xe705, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xae95));
        EXPECT(0xcb, gbc.readMem(0xe703));
        EXPECT(0x8e, gbc.readMem(0xe704));
        // CB 8E 002C
        gbc.setState(0xabee, 0xffe4, 0xc740, 0x455a, 0xb2d8, 0xebec, 0x0, 0x1);
        gbc.writeMem(0xabee, { 0xcb, 0x8e });
        gbc.writeMem(0xebec, { 0xf6 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xffe4, gbc.sp());
        EXPECT(0xabf0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabee));
        EXPECT(0x8e, gbc.readMem(0xabef));
        EXPECT(0xf4, gbc.readMem(0xebec));
        // CB 8E 002E
        gbc.setState(0x8541, 0x9af6, 0xe400, 0xb756, 0x3e7f, 0x3d6b, 0x0, 0x0);
        gbc.writeMem(0x3d6b, { 0xd4 });
        gbc.writeMem(0x8541, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x9af6, gbc.sp());
        EXPECT(0x8543, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8541));
        EXPECT(0x8e, gbc.readMem(0x8542));
        // CB 8E 002F
        gbc.setState(0x6843, 0x1237, 0x8210, 0x5048, 0x93e9, 0xbcc9, 0x1, 0x0);
        gbc.writeMem(0x6843, { 0xcb, 0x8e });
        gbc.writeMem(0xbcc9, { 0x38 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x1237, gbc.sp());
        EXPECT(0x6845, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xbcc9));
        // CB 8E 0031
        gbc.setState(0x117d, 0xbe33, 0x7350, 0x5680, 0xa97a, 0x5001, 0x0, 0x1);
        gbc.writeMem(0x117d, { 0xcb, 0x8e });
        gbc.writeMem(0x5001, { 0x88 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xbe33, gbc.sp());
        EXPECT(0x117f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8E 0032
        gbc.setState(0xcf1b, 0xe8fc, 0xa160, 0x95f7, 0xa51d, 0x3e44, 0x1, 0x1);
        gbc.writeMem(0x3e44, { 0x34 });
        gbc.writeMem(0xcf1b, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xe8fc, gbc.sp());
        EXPECT(0xcf1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf1b));
        EXPECT(0x8e, gbc.readMem(0xcf1c));
        // CB 8E 0033
        gbc.setState(0x409e, 0x6149, 0x89a0, 0x39b1, 0xea62, 0x5cf5, 0x0, 0x1);
        gbc.writeMem(0x409e, { 0xcb, 0x8e });
        gbc.writeMem(0x5cf5, { 0xb8 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x6149, gbc.sp());
        EXPECT(0x40a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8E 0034
        gbc.setState(0x3b3e, 0x7e53, 0xa610, 0x9587, 0xe5e1, 0xd0bd, 0x0, 0x0);
        gbc.writeMem(0x3b3e, { 0xcb, 0x8e });
        gbc.writeMem(0xd0bd, { 0xb2 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x7e53, gbc.sp());
        EXPECT(0x3b40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xd0bd));
        // CB 8E 0035
        gbc.setState(0x9b34, 0x47b9, 0x5810, 0x27c0, 0x1b38, 0x22a3, 0x0, 0x1);
        gbc.writeMem(0x22a3, { 0x28 });
        gbc.writeMem(0x9b34, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x47b9, gbc.sp());
        EXPECT(0x9b36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b34));
        EXPECT(0x8e, gbc.readMem(0x9b35));
        // CB 8E 0037
        gbc.setState(0x5af0, 0x6a65, 0xd7f0, 0x7163, 0x69c7, 0x90b1, 0x1, 0x0);
        gbc.writeMem(0x5af0, { 0xcb, 0x8e });
        gbc.writeMem(0x90b1, { 0xe });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x6a65, gbc.sp());
        EXPECT(0x5af2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x90b1));
        // CB 8E 0038
        gbc.setState(0x7f09, 0xc8ff, 0xb8d0, 0x6c14, 0x6573, 0xe926, 0x1, 0x0);
        gbc.writeMem(0x7f09, { 0xcb, 0x8e });
        gbc.writeMem(0xe926, { 0x12 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xc8ff, gbc.sp());
        EXPECT(0x7f0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xe926));
        // CB 8E 0039
        gbc.setState(0x42bb, 0x8ee5, 0xae10, 0x92b8, 0x2339, 0xc44a, 0x0, 0x0);
        gbc.writeMem(0x42bb, { 0xcb, 0x8e });
        gbc.writeMem(0xc44a, { 0x1 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x8ee5, gbc.sp());
        EXPECT(0x42bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0xc44a));
        // CB 8E 003A
        gbc.setState(0xb2e5, 0xdc2d, 0x5300, 0xf705, 0x3e4, 0xb847, 0x0, 0x0);
        gbc.writeMem(0xb2e5, { 0xcb, 0x8e });
        gbc.writeMem(0xb847, { 0x29 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xdc2d, gbc.sp());
        EXPECT(0xb2e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2e5));
        EXPECT(0x8e, gbc.readMem(0xb2e6));
        EXPECT(0x29, gbc.readMem(0xb847));
        // CB 8E 003B
        gbc.setState(0x6248, 0x7df3, 0xb7c0, 0x5b5e, 0x473b, 0xa723, 0x0, 0x1);
        gbc.writeMem(0x6248, { 0xcb, 0x8e });
        gbc.writeMem(0xa723, { 0xb2 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x7df3, gbc.sp());
        EXPECT(0x624a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xa723));
        // CB 8E 003C
        gbc.setState(0xc562, 0x215, 0x85b0, 0x5e37, 0x17fa, 0xbc1e, 0x0, 0x1);
        gbc.writeMem(0xbc1e, { 0xfc });
        gbc.writeMem(0xc562, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x215, gbc.sp());
        EXPECT(0xc564, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfc, gbc.readMem(0xbc1e));
        EXPECT(0xcb, gbc.readMem(0xc562));
        EXPECT(0x8e, gbc.readMem(0xc563));
        // CB 8E 003D
        gbc.setState(0xdd67, 0xf375, 0x48b0, 0x2353, 0x976f, 0xa86f, 0x0, 0x0);
        gbc.writeMem(0xa86f, { 0xda });
        gbc.writeMem(0xdd67, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xf375, gbc.sp());
        EXPECT(0xdd69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0xa86f));
        EXPECT(0xcb, gbc.readMem(0xdd67));
        EXPECT(0x8e, gbc.readMem(0xdd68));
        // CB 8E 003F
        gbc.setState(0xd6d5, 0x62b, 0x1200, 0xaae1, 0xdcf, 0x6f2e, 0x0, 0x0);
        gbc.writeMem(0x6f2e, { 0xb9 });
        gbc.writeMem(0xd6d5, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x62b, gbc.sp());
        EXPECT(0xd6d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6d5));
        EXPECT(0x8e, gbc.readMem(0xd6d6));
        // CB 8E 0041
        gbc.setState(0x6f1a, 0xbbc5, 0xf580, 0x648e, 0xaa10, 0xac68, 0x1, 0x1);
        gbc.writeMem(0x6f1a, { 0xcb, 0x8e });
        gbc.writeMem(0xac68, { 0x63 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xbbc5, gbc.sp());
        EXPECT(0x6f1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xac68));
        // CB 8E 0042
        gbc.setState(0x61bf, 0x37b9, 0x3e90, 0x5984, 0x7b9f, 0x6804, 0x0, 0x0);
        gbc.writeMem(0x61bf, { 0xcb, 0x8e });
        gbc.writeMem(0x6804, { 0xc1 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x37b9, gbc.sp());
        EXPECT(0x61c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8E 0043
        gbc.setState(0x3149, 0xa67, 0xbd20, 0xf92e, 0x436, 0xad6b, 0x0, 0x0);
        gbc.writeMem(0x3149, { 0xcb, 0x8e });
        gbc.writeMem(0xad6b, { 0xda });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xa67, gbc.sp());
        EXPECT(0x314b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0xad6b));
        // CB 8E 0045
        gbc.setState(0x3044, 0xe874, 0x2d40, 0xe6f0, 0x4bfb, 0xb89e, 0x0, 0x0);
        gbc.writeMem(0x3044, { 0xcb, 0x8e });
        gbc.writeMem(0xb89e, { 0x1a });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xe874, gbc.sp());
        EXPECT(0x3046, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0xb89e));
        // CB 8E 0046
        gbc.setState(0x5aac, 0x59eb, 0x75a0, 0xdcef, 0x9261, 0xfb44, 0x0, 0x1);
        gbc.writeMem(0x5aac, { 0xcb, 0x8e });
        gbc.writeMem(0xfb44, { 0xbf });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x59eb, gbc.sp());
        EXPECT(0x5aae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xfb44));
        // CB 8E 0047
        gbc.setState(0xb94d, 0x9461, 0x76d0, 0x2c44, 0x8fad, 0xd4b8, 0x0, 0x0);
        gbc.writeMem(0xb94d, { 0xcb, 0x8e });
        gbc.writeMem(0xd4b8, { 0x24 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x9461, gbc.sp());
        EXPECT(0xb94f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb94d));
        EXPECT(0x8e, gbc.readMem(0xb94e));
        EXPECT(0x24, gbc.readMem(0xd4b8));
        // CB 8E 0049
        gbc.setState(0xa1f0, 0xbf5c, 0x4880, 0xe961, 0x5bd7, 0x52c7, 0x1, 0x1);
        gbc.writeMem(0x52c7, { 0x44 });
        gbc.writeMem(0xa1f0, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xbf5c, gbc.sp());
        EXPECT(0xa1f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1f0));
        EXPECT(0x8e, gbc.readMem(0xa1f1));
        // CB 8E 004C
        gbc.setState(0xe32c, 0x63b5, 0x21e0, 0x3476, 0x305d, 0x87cb, 0x0, 0x1);
        gbc.writeMem(0x87cb, { 0x1f });
        gbc.writeMem(0xe32c, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x63b5, gbc.sp());
        EXPECT(0xe32e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x87cb));
        EXPECT(0xcb, gbc.readMem(0xe32c));
        EXPECT(0x8e, gbc.readMem(0xe32d));
        // CB 8E 004D
        gbc.setState(0xd3b0, 0xa804, 0x5de0, 0xcb0e, 0x31e8, 0xebc8, 0x1, 0x0);
        gbc.writeMem(0xd3b0, { 0xcb, 0x8e });
        gbc.writeMem(0xebc8, { 0xc8 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xa804, gbc.sp());
        EXPECT(0xd3b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3b0));
        EXPECT(0x8e, gbc.readMem(0xd3b1));
        EXPECT(0xc8, gbc.readMem(0xebc8));
        // CB 8E 004E
        gbc.setState(0x5c65, 0x6f55, 0x4610, 0xef41, 0x25d4, 0x818a, 0x1, 0x0);
        gbc.writeMem(0x5c65, { 0xcb, 0x8e });
        gbc.writeMem(0x818a, { 0x53 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x6f55, gbc.sp());
        EXPECT(0x5c67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x818a));
        // CB 8E 004F
        gbc.setState(0x8977, 0x69e3, 0x7930, 0xd04, 0xabb0, 0xc13b, 0x1, 0x1);
        gbc.writeMem(0x8977, { 0xcb, 0x8e });
        gbc.writeMem(0xc13b, { 0xe8 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x69e3, gbc.sp());
        EXPECT(0x8979, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8977));
        EXPECT(0x8e, gbc.readMem(0x8978));
        EXPECT(0xe8, gbc.readMem(0xc13b));
        // CB 8E 0052
        gbc.setState(0x9a48, 0x3265, 0x4110, 0xf656, 0x785, 0x622d, 0x0, 0x1);
        gbc.writeMem(0x622d, { 0x1c });
        gbc.writeMem(0x9a48, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x3265, gbc.sp());
        EXPECT(0x9a4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a48));
        EXPECT(0x8e, gbc.readMem(0x9a49));
        // CB 8E 0053
        gbc.setState(0x5233, 0x50f2, 0x3a70, 0x1f43, 0xba12, 0x8048, 0x1, 0x0);
        gbc.writeMem(0x5233, { 0xcb, 0x8e });
        gbc.writeMem(0x8048, { 0x1c });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x50f2, gbc.sp());
        EXPECT(0x5235, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0x8048));
        // CB 8E 0054
        gbc.setState(0x8393, 0x39f7, 0x6540, 0x7258, 0x66f5, 0x779d, 0x1, 0x0);
        gbc.writeMem(0x779d, { 0x8c });
        gbc.writeMem(0x8393, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x39f7, gbc.sp());
        EXPECT(0x8395, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8393));
        EXPECT(0x8e, gbc.readMem(0x8394));
        // CB 8E 0055
        gbc.setState(0x8da6, 0x1085, 0x89d0, 0xd01b, 0x9f9a, 0x1807, 0x0, 0x0);
        gbc.writeMem(0x1807, { 0xa5 });
        gbc.writeMem(0x8da6, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x1085, gbc.sp());
        EXPECT(0x8da8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8da6));
        EXPECT(0x8e, gbc.readMem(0x8da7));
        // CB 8E 0056
        gbc.setState(0x7392, 0xbd62, 0x3810, 0xc364, 0x8cae, 0xc52e, 0x1, 0x1);
        gbc.writeMem(0x7392, { 0xcb, 0x8e });
        gbc.writeMem(0xc52e, { 0xbf });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xbd62, gbc.sp());
        EXPECT(0x7394, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xc52e));
        // CB 8E 0058
        gbc.setState(0x689, 0xa5cd, 0x590, 0xb651, 0xff6, 0x5566, 0x0, 0x1);
        gbc.writeMem(0x689, { 0xcb, 0x8e });
        gbc.writeMem(0x5566, { 0xbd });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xa5cd, gbc.sp());
        EXPECT(0x68b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8E 0059
        gbc.setState(0xaae, 0x5274, 0xd2b0, 0xfaaa, 0x32e1, 0xc257, 0x0, 0x1);
        gbc.writeMem(0xaae, { 0xcb, 0x8e });
        gbc.writeMem(0xc257, { 0x4f });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x5274, gbc.sp());
        EXPECT(0xab0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xc257));
        // CB 8E 005A
        gbc.setState(0x218d, 0xe4c7, 0x18f0, 0x48ce, 0x1304, 0xe693, 0x1, 0x0);
        gbc.writeMem(0x218d, { 0xcb, 0x8e });
        gbc.writeMem(0xe693, { 0x46 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xe4c7, gbc.sp());
        EXPECT(0x218f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xe693));
        // CB 8E 005B
        gbc.setState(0xd6f, 0xb8e8, 0xc400, 0x27ae, 0x3837, 0x10c0, 0x0, 0x0);
        gbc.writeMem(0xd6f, { 0xcb, 0x8e });
        gbc.writeMem(0x10c0, { 0xb9 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xb8e8, gbc.sp());
        EXPECT(0xd71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8E 005C
        gbc.setState(0xef7f, 0x8006, 0xdf70, 0x429f, 0x5122, 0x481a, 0x1, 0x0);
        gbc.writeMem(0x481a, { 0xac });
        gbc.writeMem(0xef7f, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x8006, gbc.sp());
        EXPECT(0xef81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef7f));
        EXPECT(0x8e, gbc.readMem(0xef80));
        // CB 8E 005D
        gbc.setState(0x5204, 0xae5b, 0x6cb0, 0x985e, 0xbff0, 0xbcb5, 0x0, 0x1);
        gbc.writeMem(0x5204, { 0xcb, 0x8e });
        gbc.writeMem(0xbcb5, { 0x1 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xae5b, gbc.sp());
        EXPECT(0x5206, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0xbcb5));
        // CB 8E 005E
        gbc.setState(0x29c6, 0xcfab, 0x4f90, 0xd208, 0xfbb0, 0xe53f, 0x1, 0x0);
        gbc.writeMem(0x29c6, { 0xcb, 0x8e });
        gbc.writeMem(0xe53f, { 0xfe });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xcfab, gbc.sp());
        EXPECT(0x29c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfc, gbc.readMem(0xe53f));
        // CB 8E 005F
        gbc.setState(0xaa0d, 0x944c, 0x5c50, 0xe6cc, 0x6929, 0xd55b, 0x1, 0x0);
        gbc.writeMem(0xaa0d, { 0xcb, 0x8e });
        gbc.writeMem(0xd55b, { 0xf2 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x944c, gbc.sp());
        EXPECT(0xaa0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa0d));
        EXPECT(0x8e, gbc.readMem(0xaa0e));
        EXPECT(0xf0, gbc.readMem(0xd55b));
        // CB 8E 0060
        gbc.setState(0xcf73, 0x4f60, 0x80a0, 0x5b09, 0x57e4, 0x8e3e, 0x0, 0x1);
        gbc.writeMem(0x8e3e, { 0xa0 });
        gbc.writeMem(0xcf73, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x4f60, gbc.sp());
        EXPECT(0xcf75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x8e3e));
        EXPECT(0xcb, gbc.readMem(0xcf73));
        EXPECT(0x8e, gbc.readMem(0xcf74));
        // CB 8E 0061
        gbc.setState(0x9c05, 0x96f5, 0x3d40, 0x8ab, 0xc367, 0xcb99, 0x0, 0x1);
        gbc.writeMem(0x9c05, { 0xcb, 0x8e });
        gbc.writeMem(0xcb99, { 0xf6 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x96f5, gbc.sp());
        EXPECT(0x9c07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c05));
        EXPECT(0x8e, gbc.readMem(0x9c06));
        EXPECT(0xf4, gbc.readMem(0xcb99));
        // CB 8E 0064
        gbc.setState(0x682e, 0x8837, 0xb380, 0x159b, 0x91f6, 0xeb64, 0x1, 0x1);
        gbc.writeMem(0x682e, { 0xcb, 0x8e });
        gbc.writeMem(0xeb64, { 0x2b });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x8837, gbc.sp());
        EXPECT(0x6830, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xeb64));
        // CB 8E 0065
        gbc.setState(0xcd39, 0xfbf7, 0xa5f0, 0x60e4, 0xfce6, 0x9fb9, 0x1, 0x0);
        gbc.writeMem(0x9fb9, { 0xbe });
        gbc.writeMem(0xcd39, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xfbf7, gbc.sp());
        EXPECT(0xcd3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x9fb9));
        EXPECT(0xcb, gbc.readMem(0xcd39));
        EXPECT(0x8e, gbc.readMem(0xcd3a));
        // CB 8E 0066
        gbc.setState(0x9c45, 0x1318, 0x910, 0x71b7, 0x50ff, 0xafa0, 0x0, 0x0);
        gbc.writeMem(0x9c45, { 0xcb, 0x8e });
        gbc.writeMem(0xafa0, { 0x1c });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x1318, gbc.sp());
        EXPECT(0x9c47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c45));
        EXPECT(0x8e, gbc.readMem(0x9c46));
        EXPECT(0x1c, gbc.readMem(0xafa0));
        // CB 8E 0068
        gbc.setState(0x666, 0xce66, 0x61d0, 0xcef3, 0xae84, 0xb380, 0x0, 0x1);
        gbc.writeMem(0x666, { 0xcb, 0x8e });
        gbc.writeMem(0xb380, { 0xf1 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xce66, gbc.sp());
        EXPECT(0x668, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xb380));
        // CB 8E 0069
        gbc.setState(0x1a51, 0x762e, 0xb280, 0x9709, 0xa609, 0xbec8, 0x1, 0x0);
        gbc.writeMem(0x1a51, { 0xcb, 0x8e });
        gbc.writeMem(0xbec8, { 0x6e });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x762e, gbc.sp());
        EXPECT(0x1a53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xbec8));
        // CB 8E 006B
        gbc.setState(0x77e1, 0xf146, 0x36f0, 0x2587, 0x9847, 0xcd11, 0x0, 0x0);
        gbc.writeMem(0x77e1, { 0xcb, 0x8e });
        gbc.writeMem(0xcd11, { 0x86 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xf146, gbc.sp());
        EXPECT(0x77e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0xcd11));
        // CB 8E 006C
        gbc.setState(0x3429, 0x71c5, 0x18d0, 0x6f46, 0xdce8, 0x9ac5, 0x1, 0x1);
        gbc.writeMem(0x3429, { 0xcb, 0x8e });
        gbc.writeMem(0x9ac5, { 0x6e });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x71c5, gbc.sp());
        EXPECT(0x342b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0x9ac5));
        // CB 8E 006D
        gbc.setState(0x4ddd, 0x5f34, 0xeb80, 0x35c4, 0x1865, 0x970b, 0x0, 0x0);
        gbc.writeMem(0x4ddd, { 0xcb, 0x8e });
        gbc.writeMem(0x970b, { 0x34 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x5f34, gbc.sp());
        EXPECT(0x4ddf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0x970b));
        // CB 8E 006E
        gbc.setState(0xd5aa, 0xa992, 0x9e50, 0x95da, 0x31a6, 0xf430, 0x1, 0x0);
        gbc.writeMem(0xd5aa, { 0xcb, 0x8e });
        gbc.writeMem(0xf430, { 0x67 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xa992, gbc.sp());
        EXPECT(0xd5ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5aa));
        EXPECT(0x8e, gbc.readMem(0xd5ab));
        EXPECT(0x65, gbc.readMem(0xf430));
        // CB 8E 0070
        gbc.setState(0xcee4, 0x532e, 0xc770, 0x9f04, 0x6ddd, 0x3820, 0x0, 0x1);
        gbc.writeMem(0x3820, { 0xed });
        gbc.writeMem(0xcee4, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x532e, gbc.sp());
        EXPECT(0xcee6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcee4));
        EXPECT(0x8e, gbc.readMem(0xcee5));
        // CB 8E 0071
        gbc.setState(0x88a8, 0x28eb, 0x5a00, 0xfdeb, 0xab52, 0x4524, 0x1, 0x0);
        gbc.writeMem(0x4524, { 0x70 });
        gbc.writeMem(0x88a8, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x28eb, gbc.sp());
        EXPECT(0x88aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88a8));
        EXPECT(0x8e, gbc.readMem(0x88a9));
        // CB 8E 0073
        gbc.setState(0xb4b0, 0xfd9f, 0x6fd0, 0xa202, 0x9156, 0x6bc6, 0x1, 0x0);
        gbc.writeMem(0x6bc6, { 0x7d });
        gbc.writeMem(0xb4b0, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xfd9f, gbc.sp());
        EXPECT(0xb4b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4b0));
        EXPECT(0x8e, gbc.readMem(0xb4b1));
        // CB 8E 0074
        gbc.setState(0xc3ec, 0x1647, 0xa1d0, 0x265e, 0x57d7, 0xb80d, 0x0, 0x1);
        gbc.writeMem(0xb80d, { 0x51 });
        gbc.writeMem(0xc3ec, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x1647, gbc.sp());
        EXPECT(0xc3ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xb80d));
        EXPECT(0xcb, gbc.readMem(0xc3ec));
        EXPECT(0x8e, gbc.readMem(0xc3ed));
        // CB 8E 0076
        gbc.setState(0xc072, 0x924e, 0x11d0, 0xba82, 0x79d4, 0x7fef, 0x1, 0x1);
        gbc.writeMem(0x7fef, { 0x58 });
        gbc.writeMem(0xc072, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x924e, gbc.sp());
        EXPECT(0xc074, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc072));
        EXPECT(0x8e, gbc.readMem(0xc073));
        // CB 8E 0079
        gbc.setState(0x2863, 0xf400, 0x13c0, 0xc9d, 0x330e, 0x8969, 0x0, 0x0);
        gbc.writeMem(0x2863, { 0xcb, 0x8e });
        gbc.writeMem(0x8969, { 0xc3 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xf400, gbc.sp());
        EXPECT(0x2865, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x8969));
        // CB 8E 007B
        gbc.setState(0x6083, 0xead9, 0x4de0, 0xcf41, 0xe1e2, 0xfc80, 0x1, 0x1);
        gbc.writeMem(0x6083, { 0xcb, 0x8e });
        gbc.writeMem(0xfc80, { 0x2b });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xead9, gbc.sp());
        EXPECT(0x6085, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xfc80));
        // CB 8E 007E
        gbc.setState(0x11d0, 0x9ac3, 0xc8d0, 0xe1fb, 0x585f, 0xb5b7, 0x0, 0x1);
        gbc.writeMem(0x11d0, { 0xcb, 0x8e });
        gbc.writeMem(0xb5b7, { 0xc9 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x9ac3, gbc.sp());
        EXPECT(0x11d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xb5b7));
        // CB 8E 007F
        gbc.setState(0xa2a, 0x3b6f, 0x9a60, 0x4961, 0x997c, 0xae5b, 0x1, 0x0);
        gbc.writeMem(0xa2a, { 0xcb, 0x8e });
        gbc.writeMem(0xae5b, { 0x61 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x3b6f, gbc.sp());
        EXPECT(0xa2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xae5b));
        // CB 8E 0080
        gbc.setState(0x8b35, 0x4df8, 0xd0e0, 0x25c0, 0x9128, 0x5a22, 0x1, 0x1);
        gbc.writeMem(0x5a22, { 0x80 });
        gbc.writeMem(0x8b35, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x4df8, gbc.sp());
        EXPECT(0x8b37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b35));
        EXPECT(0x8e, gbc.readMem(0x8b36));
        // CB 8E 0081
        gbc.setState(0x953a, 0x52e8, 0xd800, 0xafd3, 0x1639, 0x89d5, 0x0, 0x1);
        gbc.writeMem(0x89d5, { 0x38 });
        gbc.writeMem(0x953a, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x52e8, gbc.sp());
        EXPECT(0x953c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x89d5));
        EXPECT(0xcb, gbc.readMem(0x953a));
        EXPECT(0x8e, gbc.readMem(0x953b));
        // CB 8E 0086
        gbc.setState(0xa7f7, 0xc96f, 0x4ad0, 0x7cf6, 0xde2c, 0xf2e0, 0x0, 0x0);
        gbc.writeMem(0xa7f7, { 0xcb, 0x8e });
        gbc.writeMem(0xf2e0, { 0xf2 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xc96f, gbc.sp());
        EXPECT(0xa7f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7f7));
        EXPECT(0x8e, gbc.readMem(0xa7f8));
        EXPECT(0xf0, gbc.readMem(0xf2e0));
        // CB 8E 0087
        gbc.setState(0x8015, 0x55f1, 0x200, 0xda26, 0x507e, 0xda61, 0x1, 0x1);
        gbc.writeMem(0x8015, { 0xcb, 0x8e });
        gbc.writeMem(0xda61, { 0x21 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x55f1, gbc.sp());
        EXPECT(0x8017, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8015));
        EXPECT(0x8e, gbc.readMem(0x8016));
        EXPECT(0x21, gbc.readMem(0xda61));
        // CB 8E 0088
        gbc.setState(0x539c, 0x5017, 0x1720, 0xe079, 0x1c4a, 0xcdca, 0x1, 0x0);
        gbc.writeMem(0x539c, { 0xcb, 0x8e });
        gbc.writeMem(0xcdca, { 0x9b });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x5017, gbc.sp());
        EXPECT(0x539e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xcdca));
        // CB 8E 008A
        gbc.setState(0x9c3a, 0x3d82, 0x6be0, 0x559d, 0x5f70, 0x8fb5, 0x0, 0x0);
        gbc.writeMem(0x8fb5, { 0xbe });
        gbc.writeMem(0x9c3a, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x3d82, gbc.sp());
        EXPECT(0x9c3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x8fb5));
        EXPECT(0xcb, gbc.readMem(0x9c3a));
        EXPECT(0x8e, gbc.readMem(0x9c3b));
        // CB 8E 008C
        gbc.setState(0xe3f0, 0x731c, 0xf8e0, 0xa7d3, 0xf442, 0x2dc9, 0x0, 0x0);
        gbc.writeMem(0x2dc9, { 0x3d });
        gbc.writeMem(0xe3f0, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x731c, gbc.sp());
        EXPECT(0xe3f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3f0));
        EXPECT(0x8e, gbc.readMem(0xe3f1));
        // CB 8E 008D
        gbc.setState(0x9d6d, 0x48f9, 0x5110, 0x45ff, 0x5607, 0xec54, 0x1, 0x1);
        gbc.writeMem(0x9d6d, { 0xcb, 0x8e });
        gbc.writeMem(0xec54, { 0x66 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x48f9, gbc.sp());
        EXPECT(0x9d6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d6d));
        EXPECT(0x8e, gbc.readMem(0x9d6e));
        EXPECT(0x64, gbc.readMem(0xec54));
        // CB 8E 008E
        gbc.setState(0xa724, 0x50c4, 0x9ab0, 0x4a4a, 0x4fc4, 0xe5cf, 0x0, 0x0);
        gbc.writeMem(0xa724, { 0xcb, 0x8e });
        gbc.writeMem(0xe5cf, { 0x9c });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x50c4, gbc.sp());
        EXPECT(0xa726, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa724));
        EXPECT(0x8e, gbc.readMem(0xa725));
        EXPECT(0x9c, gbc.readMem(0xe5cf));
        // CB 8E 008F
        gbc.setState(0x70e9, 0x7595, 0xfeb0, 0x1869, 0xf715, 0xae7e, 0x1, 0x1);
        gbc.writeMem(0x70e9, { 0xcb, 0x8e });
        gbc.writeMem(0xae7e, { 0x2b });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x7595, gbc.sp());
        EXPECT(0x70eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xae7e));
        // CB 8E 0090
        gbc.setState(0xc93b, 0x8a6a, 0x26d0, 0xc8a0, 0xf5fb, 0xa9ed, 0x0, 0x0);
        gbc.writeMem(0xa9ed, { 0xa3 });
        gbc.writeMem(0xc93b, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x8a6a, gbc.sp());
        EXPECT(0xc93d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xa9ed));
        EXPECT(0xcb, gbc.readMem(0xc93b));
        EXPECT(0x8e, gbc.readMem(0xc93c));
        // CB 8E 0092
        gbc.setState(0x837e, 0xd367, 0xa4d0, 0xa35b, 0x71fa, 0x5b06, 0x1, 0x1);
        gbc.writeMem(0x5b06, { 0xd1 });
        gbc.writeMem(0x837e, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xd367, gbc.sp());
        EXPECT(0x8380, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x837e));
        EXPECT(0x8e, gbc.readMem(0x837f));
        // CB 8E 0094
        gbc.setState(0xeeb0, 0xdac, 0x4b50, 0x7c9a, 0xc4b3, 0x6081, 0x0, 0x0);
        gbc.writeMem(0x6081, { 0xb0 });
        gbc.writeMem(0xeeb0, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xdac, gbc.sp());
        EXPECT(0xeeb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeeb0));
        EXPECT(0x8e, gbc.readMem(0xeeb1));
        // CB 8E 0095
        gbc.setState(0x913c, 0x49d1, 0x66d0, 0x34c6, 0x96db, 0xb39b, 0x1, 0x1);
        gbc.writeMem(0x913c, { 0xcb, 0x8e });
        gbc.writeMem(0xb39b, { 0x4c });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x49d1, gbc.sp());
        EXPECT(0x913e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x913c));
        EXPECT(0x8e, gbc.readMem(0x913d));
        EXPECT(0x4c, gbc.readMem(0xb39b));
        // CB 8E 0096
        gbc.setState(0x2c0d, 0xaea4, 0x3e40, 0x5de1, 0x67b5, 0x94db, 0x0, 0x0);
        gbc.writeMem(0x2c0d, { 0xcb, 0x8e });
        gbc.writeMem(0x94db, { 0x83 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xaea4, gbc.sp());
        EXPECT(0x2c0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x94db));
        // CB 8E 0097
        gbc.setState(0x58a2, 0xd795, 0xd240, 0x99cf, 0x776f, 0xf1c0, 0x1, 0x0);
        gbc.writeMem(0x58a2, { 0xcb, 0x8e });
        gbc.writeMem(0xf1c0, { 0x7b });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xd795, gbc.sp());
        EXPECT(0x58a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xf1c0));
        // CB 8E 009C
        gbc.setState(0x31fc, 0x366d, 0xdb20, 0xcbda, 0x74b6, 0x1cf7, 0x0, 0x1);
        gbc.writeMem(0x1cf7, { 0xdd });
        gbc.writeMem(0x31fc, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x366d, gbc.sp());
        EXPECT(0x31fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8E 00A0
        gbc.setState(0x78b8, 0xae61, 0xb0f0, 0x9a55, 0x4a4c, 0x90a3, 0x1, 0x1);
        gbc.writeMem(0x78b8, { 0xcb, 0x8e });
        gbc.writeMem(0x90a3, { 0x29 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xae61, gbc.sp());
        EXPECT(0x78ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x90a3));
        // CB 8E 00A1
        gbc.setState(0x8365, 0x7f8c, 0x7f10, 0x24b7, 0xe9a4, 0xaed5, 0x1, 0x0);
        gbc.writeMem(0x8365, { 0xcb, 0x8e });
        gbc.writeMem(0xaed5, { 0x35 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x7f8c, gbc.sp());
        EXPECT(0x8367, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8365));
        EXPECT(0x8e, gbc.readMem(0x8366));
        EXPECT(0x35, gbc.readMem(0xaed5));
        // CB 8E 00A2
        gbc.setState(0x4377, 0xd599, 0x800, 0x6f4b, 0x6793, 0x83e7, 0x0, 0x0);
        gbc.writeMem(0x4377, { 0xcb, 0x8e });
        gbc.writeMem(0x83e7, { 0xbe });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xd599, gbc.sp());
        EXPECT(0x4379, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x83e7));
        // CB 8E 00A3
        gbc.setState(0x14cd, 0xa5e7, 0xa0c0, 0x76c, 0x100b, 0x26c5, 0x1, 0x0);
        gbc.writeMem(0x14cd, { 0xcb, 0x8e });
        gbc.writeMem(0x26c5, { 0xe4 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xa5e7, gbc.sp());
        EXPECT(0x14cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8E 00A4
        gbc.setState(0xee37, 0x5ec5, 0x9ac0, 0xdd99, 0x8215, 0x4c14, 0x0, 0x0);
        gbc.writeMem(0x4c14, { 0xb5 });
        gbc.writeMem(0xee37, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x5ec5, gbc.sp());
        EXPECT(0xee39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee37));
        EXPECT(0x8e, gbc.readMem(0xee38));
        // CB 8E 00A5
        gbc.setState(0x4d4b, 0xa52c, 0x8bf0, 0xeadf, 0xb4a7, 0xe551, 0x1, 0x1);
        gbc.writeMem(0x4d4b, { 0xcb, 0x8e });
        gbc.writeMem(0xe551, { 0x42 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xa52c, gbc.sp());
        EXPECT(0x4d4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xe551));
        // CB 8E 00A7
        gbc.setState(0x1320, 0x98f5, 0xce10, 0x1548, 0x127, 0xfba5, 0x1, 0x1);
        gbc.writeMem(0x1320, { 0xcb, 0x8e });
        gbc.writeMem(0xfba5, { 0x61 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x98f5, gbc.sp());
        EXPECT(0x1322, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xfba5));
        // CB 8E 00A8
        gbc.setState(0xc7b8, 0x1db7, 0xb6f0, 0xebf0, 0x26c9, 0xc6c2, 0x1, 0x0);
        gbc.writeMem(0xc6c2, { 0xd1 });
        gbc.writeMem(0xc7b8, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x1db7, gbc.sp());
        EXPECT(0xc7ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0xc6c2));
        EXPECT(0xcb, gbc.readMem(0xc7b8));
        EXPECT(0x8e, gbc.readMem(0xc7b9));
        // CB 8E 00A9
        gbc.setState(0xec6, 0x7aff, 0xb80, 0x14a2, 0xd822, 0x3d6b, 0x1, 0x1);
        gbc.writeMem(0xec6, { 0xcb, 0x8e });
        gbc.writeMem(0x3d6b, { 0xd4 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x7aff, gbc.sp());
        EXPECT(0xec8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8E 00AC
        gbc.setState(0x16d2, 0xabe4, 0xe0a0, 0xd83f, 0x6b72, 0xedb0, 0x1, 0x0);
        gbc.writeMem(0x16d2, { 0xcb, 0x8e });
        gbc.writeMem(0xedb0, { 0xa2 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xabe4, gbc.sp());
        EXPECT(0x16d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xedb0));
        // CB 8E 00AD
        gbc.setState(0x5c5f, 0x97c7, 0xafe0, 0xa42a, 0x62b3, 0xbfb7, 0x1, 0x0);
        gbc.writeMem(0x5c5f, { 0xcb, 0x8e });
        gbc.writeMem(0xbfb7, { 0xf8 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x97c7, gbc.sp());
        EXPECT(0x5c61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xbfb7));
        // CB 8E 00AE
        gbc.setState(0x243, 0x3b53, 0xbeb0, 0x3c4, 0xf0d5, 0x9c34, 0x0, 0x0);
        gbc.writeMem(0x243, { 0xcb, 0x8e });
        gbc.writeMem(0x9c34, { 0xa2 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x3b53, gbc.sp());
        EXPECT(0x245, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x9c34));
        // CB 8E 00AF
        gbc.setState(0x965a, 0xbb77, 0x7b40, 0x3da7, 0xf34b, 0x3388, 0x1, 0x0);
        gbc.writeMem(0x3388, { 0x10 });
        gbc.writeMem(0x965a, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xbb77, gbc.sp());
        EXPECT(0x965c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x965a));
        EXPECT(0x8e, gbc.readMem(0x965b));
        // CB 8E 00B0
        gbc.setState(0x33db, 0x92bb, 0xbb10, 0x5870, 0x4d2d, 0x4180, 0x1, 0x1);
        gbc.writeMem(0x33db, { 0xcb, 0x8e });
        gbc.writeMem(0x4180, { 0xdd });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x92bb, gbc.sp());
        EXPECT(0x33dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8E 00B1
        gbc.setState(0x3dcf, 0x6e8b, 0xa640, 0xa518, 0x26b3, 0x93c9, 0x0, 0x0);
        gbc.writeMem(0x3dcf, { 0xcb, 0x8e });
        gbc.writeMem(0x93c9, { 0xbf });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x6e8b, gbc.sp());
        EXPECT(0x3dd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x93c9));
        // CB 8E 00B2
        gbc.setState(0x2b51, 0x6915, 0x5c50, 0x1ee7, 0xcb7b, 0xda02, 0x1, 0x1);
        gbc.writeMem(0x2b51, { 0xcb, 0x8e });
        gbc.writeMem(0xda02, { 0x1d });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x6915, gbc.sp());
        EXPECT(0x2b53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xda02));
        // CB 8E 00B6
        gbc.setState(0x9bc5, 0x1f2b, 0x2360, 0xb007, 0x6ae4, 0x979d, 0x1, 0x0);
        gbc.writeMem(0x979d, { 0x3c });
        gbc.writeMem(0x9bc5, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x1f2b, gbc.sp());
        EXPECT(0x9bc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x979d));
        EXPECT(0xcb, gbc.readMem(0x9bc5));
        EXPECT(0x8e, gbc.readMem(0x9bc6));
        // CB 8E 00B7
        gbc.setState(0x608e, 0x959b, 0x1160, 0x4715, 0xba96, 0x12c, 0x0, 0x0);
        gbc.writeMem(0x12c, { 0x81 });
        gbc.writeMem(0x608e, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x959b, gbc.sp());
        EXPECT(0x6090, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8E 00B9
        gbc.setState(0xee64, 0xce7, 0x4a10, 0xa18a, 0x5a1c, 0x98a7, 0x0, 0x1);
        gbc.writeMem(0x98a7, { 0x5e });
        gbc.writeMem(0xee64, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xce7, gbc.sp());
        EXPECT(0xee66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0x98a7));
        EXPECT(0xcb, gbc.readMem(0xee64));
        EXPECT(0x8e, gbc.readMem(0xee65));
        // CB 8E 00BC
        gbc.setState(0xca06, 0x6c48, 0xe7c0, 0xba7b, 0x61c3, 0x4a92, 0x0, 0x1);
        gbc.writeMem(0x4a92, { 0x14 });
        gbc.writeMem(0xca06, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x6c48, gbc.sp());
        EXPECT(0xca08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca06));
        EXPECT(0x8e, gbc.readMem(0xca07));
        // CB 8E 00BD
        gbc.setState(0xc030, 0xf658, 0xcd00, 0xa292, 0x1e95, 0xa610, 0x0, 0x1);
        gbc.writeMem(0xa610, { 0x9e });
        gbc.writeMem(0xc030, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xf658, gbc.sp());
        EXPECT(0xc032, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xa610));
        EXPECT(0xcb, gbc.readMem(0xc030));
        EXPECT(0x8e, gbc.readMem(0xc031));
        // CB 8E 00BE
        gbc.setState(0xd87f, 0x7b64, 0xdb20, 0x77b, 0xbf2f, 0x7cbc, 0x0, 0x0);
        gbc.writeMem(0x7cbc, { 0x8d });
        gbc.writeMem(0xd87f, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x7b64, gbc.sp());
        EXPECT(0xd881, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd87f));
        EXPECT(0x8e, gbc.readMem(0xd880));
        // CB 8E 00BF
        gbc.setState(0x7ec4, 0x5588, 0x3bc0, 0x71b8, 0x914, 0xe75b, 0x0, 0x1);
        gbc.writeMem(0x7ec4, { 0xcb, 0x8e });
        gbc.writeMem(0xe75b, { 0xcc });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x5588, gbc.sp());
        EXPECT(0x7ec6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcc, gbc.readMem(0xe75b));
        // CB 8E 00C0
        gbc.setState(0xda93, 0xf44, 0x880, 0x4611, 0x75c, 0xa028, 0x1, 0x0);
        gbc.writeMem(0xa028, { 0xca });
        gbc.writeMem(0xda93, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xf44, gbc.sp());
        EXPECT(0xda95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xa028));
        EXPECT(0xcb, gbc.readMem(0xda93));
        EXPECT(0x8e, gbc.readMem(0xda94));
        // CB 8E 00C1
        gbc.setState(0x58ef, 0x6c80, 0xfe30, 0x3c23, 0x6f67, 0x11b7, 0x0, 0x0);
        gbc.writeMem(0x11b7, { 0x71 });
        gbc.writeMem(0x58ef, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x6c80, gbc.sp());
        EXPECT(0x58f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8E 00C3
        gbc.setState(0xd6e9, 0xac5, 0x93b0, 0x8fcf, 0x79cc, 0xb32d, 0x1, 0x1);
        gbc.writeMem(0xb32d, { 0xea });
        gbc.writeMem(0xd6e9, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xac5, gbc.sp());
        EXPECT(0xd6eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0xb32d));
        EXPECT(0xcb, gbc.readMem(0xd6e9));
        EXPECT(0x8e, gbc.readMem(0xd6ea));
        // CB 8E 00C4
        gbc.setState(0xe968, 0x3fbe, 0x1040, 0x4a91, 0x9150, 0xb369, 0x0, 0x0);
        gbc.writeMem(0xb369, { 0x66 });
        gbc.writeMem(0xe968, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x3fbe, gbc.sp());
        EXPECT(0xe96a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xb369));
        EXPECT(0xcb, gbc.readMem(0xe968));
        EXPECT(0x8e, gbc.readMem(0xe969));
        // CB 8E 00C5
        gbc.setState(0x7bf6, 0x6b82, 0xb440, 0x4b6f, 0x61f2, 0xc6e, 0x0, 0x0);
        gbc.writeMem(0xc6e, { 0xb9 });
        gbc.writeMem(0x7bf6, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x6b82, gbc.sp());
        EXPECT(0x7bf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8E 00C6
        gbc.setState(0xe32e, 0xd72d, 0x4f30, 0xad83, 0x935b, 0x96a6, 0x0, 0x0);
        gbc.writeMem(0x96a6, { 0x53 });
        gbc.writeMem(0xe32e, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xd72d, gbc.sp());
        EXPECT(0xe330, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x96a6));
        EXPECT(0xcb, gbc.readMem(0xe32e));
        EXPECT(0x8e, gbc.readMem(0xe32f));
        // CB 8E 00C7
        gbc.setState(0x64bf, 0x1350, 0x8640, 0xf869, 0x216, 0xc017, 0x1, 0x1);
        gbc.writeMem(0x64bf, { 0xcb, 0x8e });
        gbc.writeMem(0xc017, { 0xda });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x1350, gbc.sp());
        EXPECT(0x64c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0xc017));
        // CB 8E 00C8
        gbc.setState(0xcdf8, 0xe68f, 0x2da0, 0xb0d8, 0x4698, 0x57d8, 0x0, 0x0);
        gbc.writeMem(0x57d8, { 0xa1 });
        gbc.writeMem(0xcdf8, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xe68f, gbc.sp());
        EXPECT(0xcdfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdf8));
        EXPECT(0x8e, gbc.readMem(0xcdf9));
        // CB 8E 00C9
        gbc.setState(0x20c1, 0xac4e, 0x2e90, 0x7f3, 0xf205, 0xa553, 0x0, 0x0);
        gbc.writeMem(0x20c1, { 0xcb, 0x8e });
        gbc.writeMem(0xa553, { 0xcd });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xac4e, gbc.sp());
        EXPECT(0x20c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0xa553));
        // CB 8E 00CE
        gbc.setState(0x84ba, 0x2b6e, 0x1aa0, 0x2e91, 0xce17, 0x95ee, 0x0, 0x0);
        gbc.writeMem(0x84ba, { 0xcb, 0x8e });
        gbc.writeMem(0x95ee, { 0x26 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x2b6e, gbc.sp());
        EXPECT(0x84bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84ba));
        EXPECT(0x8e, gbc.readMem(0x84bb));
        EXPECT(0x24, gbc.readMem(0x95ee));
        // CB 8E 00CF
        gbc.setState(0x8783, 0x216f, 0xe8d0, 0x87ae, 0x717b, 0xa1c4, 0x0, 0x1);
        gbc.writeMem(0x8783, { 0xcb, 0x8e });
        gbc.writeMem(0xa1c4, { 0xbe });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x216f, gbc.sp());
        EXPECT(0x8785, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8783));
        EXPECT(0x8e, gbc.readMem(0x8784));
        EXPECT(0xbc, gbc.readMem(0xa1c4));
        // CB 8E 00D0
        gbc.setState(0x89a5, 0x3517, 0x59f0, 0x377f, 0x512c, 0x16c8, 0x0, 0x1);
        gbc.writeMem(0x16c8, { 0x31 });
        gbc.writeMem(0x89a5, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x3517, gbc.sp());
        EXPECT(0x89a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89a5));
        EXPECT(0x8e, gbc.readMem(0x89a6));
        // CB 8E 00D1
        gbc.setState(0x8ca0, 0xa06, 0x4d40, 0xf7ab, 0x3af9, 0xfa49, 0x1, 0x1);
        gbc.writeMem(0x8ca0, { 0xcb, 0x8e });
        gbc.writeMem(0xfa49, { 0xaf });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xa06, gbc.sp());
        EXPECT(0x8ca2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ca0));
        EXPECT(0x8e, gbc.readMem(0x8ca1));
        EXPECT(0xad, gbc.readMem(0xfa49));
        // CB 8E 00D2
        gbc.setState(0xa262, 0xe344, 0xb7d0, 0xe081, 0xf199, 0xb4e4, 0x0, 0x0);
        gbc.writeMem(0xa262, { 0xcb, 0x8e });
        gbc.writeMem(0xb4e4, { 0xea });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xe344, gbc.sp());
        EXPECT(0xa264, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa262));
        EXPECT(0x8e, gbc.readMem(0xa263));
        EXPECT(0xe8, gbc.readMem(0xb4e4));
        // CB 8E 00D3
        gbc.setState(0xc92c, 0x694d, 0x6d0, 0x184d, 0x18ab, 0x959e, 0x1, 0x1);
        gbc.writeMem(0x959e, { 0x23 });
        gbc.writeMem(0xc92c, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x694d, gbc.sp());
        EXPECT(0xc92e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x959e));
        EXPECT(0xcb, gbc.readMem(0xc92c));
        EXPECT(0x8e, gbc.readMem(0xc92d));
        // CB 8E 00D4
        gbc.setState(0x179e, 0xc920, 0xed40, 0x4548, 0x7a2, 0x822e, 0x0, 0x1);
        gbc.writeMem(0x179e, { 0xcb, 0x8e });
        gbc.writeMem(0x822e, { 0x17 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xc920, gbc.sp());
        EXPECT(0x17a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x822e));
        // CB 8E 00D5
        gbc.setState(0x4d5d, 0xf5f7, 0xdb50, 0xdc92, 0x5346, 0xa2ec, 0x1, 0x1);
        gbc.writeMem(0x4d5d, { 0xcb, 0x8e });
        gbc.writeMem(0xa2ec, { 0x5f });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xf5f7, gbc.sp());
        EXPECT(0x4d5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xa2ec));
        // CB 8E 00D7
        gbc.setState(0x227a, 0xdaf8, 0x7640, 0x97fe, 0xa3a7, 0x6889, 0x1, 0x0);
        gbc.writeMem(0x227a, { 0xcb, 0x8e });
        gbc.writeMem(0x6889, { 0x85 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xdaf8, gbc.sp());
        EXPECT(0x227c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8E 00D8
        gbc.setState(0xd9ce, 0x98bb, 0xa350, 0x446e, 0x3906, 0xb173, 0x0, 0x1);
        gbc.writeMem(0xb173, { 0x41 });
        gbc.writeMem(0xd9ce, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x98bb, gbc.sp());
        EXPECT(0xd9d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x41, gbc.readMem(0xb173));
        EXPECT(0xcb, gbc.readMem(0xd9ce));
        EXPECT(0x8e, gbc.readMem(0xd9cf));
        // CB 8E 00D9
        gbc.setState(0xcab0, 0x370d, 0x960, 0xac6f, 0xd771, 0x61f9, 0x0, 0x0);
        gbc.writeMem(0x61f9, { 0x6d });
        gbc.writeMem(0xcab0, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x370d, gbc.sp());
        EXPECT(0xcab2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcab0));
        EXPECT(0x8e, gbc.readMem(0xcab1));
        // CB 8E 00DA
        gbc.setState(0x9ccd, 0x8d60, 0xaf50, 0xc425, 0x368f, 0xdffd, 0x0, 0x0);
        gbc.writeMem(0x9ccd, { 0xcb, 0x8e });
        gbc.writeMem(0xdffd, { 0x10 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x8d60, gbc.sp());
        EXPECT(0x9ccf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ccd));
        EXPECT(0x8e, gbc.readMem(0x9cce));
        EXPECT(0x10, gbc.readMem(0xdffd));
        // CB 8E 00DB
        gbc.setState(0xc384, 0xb37b, 0xabe0, 0x6705, 0xd002, 0xe0b2, 0x0, 0x0);
        gbc.writeMem(0xc384, { 0xcb, 0x8e });
        gbc.writeMem(0xe0b2, { 0xb8 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xb37b, gbc.sp());
        EXPECT(0xc386, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc384));
        EXPECT(0x8e, gbc.readMem(0xc385));
        EXPECT(0xb8, gbc.readMem(0xe0b2));
        // CB 8E 00DC
        gbc.setState(0x104, 0x3b6c, 0x48c0, 0x2a92, 0x86f3, 0xe4a1, 0x0, 0x1);
        gbc.writeMem(0x104, { 0xcb, 0x8e });
        gbc.writeMem(0xe4a1, { 0xc9 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x3b6c, gbc.sp());
        EXPECT(0x106, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xe4a1));
        // CB 8E 00DD
        gbc.setState(0x68a0, 0xe572, 0x8ff0, 0xc639, 0xab2c, 0x4ba6, 0x1, 0x1);
        gbc.writeMem(0x4ba6, { 0x5c });
        gbc.writeMem(0x68a0, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xe572, gbc.sp());
        EXPECT(0x68a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8E 00DF
        gbc.setState(0x618c, 0x573b, 0xab50, 0xfbcb, 0x5436, 0x96ed, 0x1, 0x0);
        gbc.writeMem(0x618c, { 0xcb, 0x8e });
        gbc.writeMem(0x96ed, { 0x85 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x573b, gbc.sp());
        EXPECT(0x618e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x96ed));
        // CB 8E 00E0
        gbc.setState(0xfe0, 0x7f41, 0x1cc0, 0xad74, 0x4436, 0xf27b, 0x0, 0x0);
        gbc.writeMem(0xfe0, { 0xcb, 0x8e });
        gbc.writeMem(0xf27b, { 0x5 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x7f41, gbc.sp());
        EXPECT(0xfe2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xf27b));
        // CB 8E 00E1
        gbc.setState(0xf05, 0x72ed, 0x33c0, 0x1c22, 0x5e3c, 0xaf36, 0x1, 0x0);
        gbc.writeMem(0xf05, { 0xcb, 0x8e });
        gbc.writeMem(0xaf36, { 0x47 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x72ed, gbc.sp());
        EXPECT(0xf07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0xaf36));
        // CB 8E 00E5
        gbc.setState(0x5d2d, 0x5cd5, 0xf520, 0x6362, 0x9c59, 0xec53, 0x1, 0x1);
        gbc.writeMem(0x5d2d, { 0xcb, 0x8e });
        gbc.writeMem(0xec53, { 0x5f });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x5cd5, gbc.sp());
        EXPECT(0x5d2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xec53));
        // CB 8E 00E7
        gbc.setState(0x7565, 0xc43f, 0x6da0, 0x784, 0x7a02, 0xa8f3, 0x1, 0x0);
        gbc.writeMem(0x7565, { 0xcb, 0x8e });
        gbc.writeMem(0xa8f3, { 0x98 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xc43f, gbc.sp());
        EXPECT(0x7567, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xa8f3));
        // CB 8E 00E8
        gbc.setState(0xb777, 0x14c8, 0xd5d0, 0xc2fb, 0x985b, 0xa9c2, 0x0, 0x0);
        gbc.writeMem(0xa9c2, { 0x37 });
        gbc.writeMem(0xb777, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x14c8, gbc.sp());
        EXPECT(0xb779, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xa9c2));
        EXPECT(0xcb, gbc.readMem(0xb777));
        EXPECT(0x8e, gbc.readMem(0xb778));
        // CB 8E 00E9
        gbc.setState(0xccbc, 0xb6ae, 0x9f60, 0x5bbf, 0x318d, 0x9569, 0x1, 0x0);
        gbc.writeMem(0x9569, { 0x3d });
        gbc.writeMem(0xccbc, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xb6ae, gbc.sp());
        EXPECT(0xccbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3d, gbc.readMem(0x9569));
        EXPECT(0xcb, gbc.readMem(0xccbc));
        EXPECT(0x8e, gbc.readMem(0xccbd));
        // CB 8E 00EA
        gbc.setState(0x9583, 0x1a71, 0xd6f0, 0x93d4, 0xcfbe, 0xfac3, 0x1, 0x0);
        gbc.writeMem(0x9583, { 0xcb, 0x8e });
        gbc.writeMem(0xfac3, { 0x24 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x1a71, gbc.sp());
        EXPECT(0x9585, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9583));
        EXPECT(0x8e, gbc.readMem(0x9584));
        EXPECT(0x24, gbc.readMem(0xfac3));
        // CB 8E 00EB
        gbc.setState(0xe1d7, 0x43f6, 0x3490, 0x1e45, 0xbef4, 0x1591, 0x1, 0x0);
        gbc.writeMem(0x1591, { 0x9c });
        gbc.writeMem(0xe1d7, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x43f6, gbc.sp());
        EXPECT(0xe1d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1d7));
        EXPECT(0x8e, gbc.readMem(0xe1d8));
        // CB 8E 00ED
        gbc.setState(0xc21d, 0xf46, 0xfe80, 0x186d, 0xb8bb, 0xe6db, 0x0, 0x1);
        gbc.writeMem(0xc21d, { 0xcb, 0x8e });
        gbc.writeMem(0xe6db, { 0x7d });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xf46, gbc.sp());
        EXPECT(0xc21f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc21d));
        EXPECT(0x8e, gbc.readMem(0xc21e));
        EXPECT(0x7d, gbc.readMem(0xe6db));
        // CB 8E 00EE
        gbc.setState(0xeca6, 0xd502, 0x8970, 0xe77d, 0x9904, 0x6728, 0x0, 0x1);
        gbc.writeMem(0x6728, { 0xfd });
        gbc.writeMem(0xeca6, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xd502, gbc.sp());
        EXPECT(0xeca8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeca6));
        EXPECT(0x8e, gbc.readMem(0xeca7));
        // CB 8E 00F0
        gbc.setState(0xbbe, 0x7073, 0x4900, 0x4157, 0xa8a7, 0x3b8c, 0x1, 0x1);
        gbc.writeMem(0xbbe, { 0xcb, 0x8e });
        gbc.writeMem(0x3b8c, { 0xac });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x7073, gbc.sp());
        EXPECT(0xbc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8E 00F1
        gbc.setState(0xc7bc, 0x95fe, 0x2e80, 0xd089, 0x1154, 0xd43f, 0x0, 0x0);
        gbc.writeMem(0xc7bc, { 0xcb, 0x8e });
        gbc.writeMem(0xd43f, { 0x84 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x95fe, gbc.sp());
        EXPECT(0xc7be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7bc));
        EXPECT(0x8e, gbc.readMem(0xc7bd));
        EXPECT(0x84, gbc.readMem(0xd43f));
        // CB 8E 00F3
        gbc.setState(0x43df, 0xe075, 0xd990, 0x9ac6, 0xa570, 0xc192, 0x1, 0x0);
        gbc.writeMem(0x43df, { 0xcb, 0x8e });
        gbc.writeMem(0xc192, { 0xa9 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xe075, gbc.sp());
        EXPECT(0x43e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa9, gbc.readMem(0xc192));
        // CB 8E 00F5
        gbc.setState(0x2f83, 0x8383, 0xd290, 0xcd18, 0x658f, 0xc67a, 0x0, 0x1);
        gbc.writeMem(0x2f83, { 0xcb, 0x8e });
        gbc.writeMem(0xc67a, { 0xe6 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x8383, gbc.sp());
        EXPECT(0x2f85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe4, gbc.readMem(0xc67a));
        // CB 8E 00F6
        gbc.setState(0x2a4e, 0xa722, 0x2fa0, 0xb03, 0x1244, 0xd513, 0x0, 0x1);
        gbc.writeMem(0x2a4e, { 0xcb, 0x8e });
        gbc.writeMem(0xd513, { 0xce });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xa722, gbc.sp());
        EXPECT(0x2a50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcc, gbc.readMem(0xd513));
        // CB 8E 00F8
        gbc.setState(0x1b28, 0x21c9, 0xc810, 0x3227, 0x366a, 0x8da2, 0x0, 0x1);
        gbc.writeMem(0x1b28, { 0xcb, 0x8e });
        gbc.writeMem(0x8da2, { 0x5e });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x21c9, gbc.sp());
        EXPECT(0x1b2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0x8da2));
        // CB 8E 00FA
        gbc.setState(0x67ca, 0x87b4, 0xa830, 0x95ac, 0x67f1, 0x8de5, 0x0, 0x0);
        gbc.writeMem(0x67ca, { 0xcb, 0x8e });
        gbc.writeMem(0x8de5, { 0x72 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x87b4, gbc.sp());
        EXPECT(0x67cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0x8de5));
        // CB 8E 00FC
        gbc.setState(0x57e9, 0x40f9, 0x3bd0, 0xebaa, 0x9794, 0x73b6, 0x0, 0x0);
        gbc.writeMem(0x57e9, { 0xcb, 0x8e });
        gbc.writeMem(0x73b6, { 0x99 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x40f9, gbc.sp());
        EXPECT(0x57eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8E 00FD
        gbc.setState(0x39fb, 0xfc52, 0x5e10, 0x3196, 0x2096, 0xa12f, 0x0, 0x1);
        gbc.writeMem(0x39fb, { 0xcb, 0x8e });
        gbc.writeMem(0xa12f, { 0x69 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xfc52, gbc.sp());
        EXPECT(0x39fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xa12f));
        // CB 8E 00FF
        gbc.setState(0x31ca, 0xcfac, 0xb60, 0x7af7, 0x5ba1, 0xd88d, 0x1, 0x0);
        gbc.writeMem(0x31ca, { 0xcb, 0x8e });
        gbc.writeMem(0xd88d, { 0x10 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xcfac, gbc.sp());
        EXPECT(0x31cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xd88d));
        // CB 8E 0100
        gbc.setState(0xd1a5, 0x7cac, 0x5280, 0xa5e5, 0x1ad3, 0x70e4, 0x0, 0x1);
        gbc.writeMem(0x70e4, { 0xad });
        gbc.writeMem(0xd1a5, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x7cac, gbc.sp());
        EXPECT(0xd1a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1a5));
        EXPECT(0x8e, gbc.readMem(0xd1a6));
        // CB 8E 0101
        gbc.setState(0xea8c, 0xdab0, 0x4e20, 0x287c, 0x7888, 0x8ca1, 0x0, 0x0);
        gbc.writeMem(0x8ca1, { 0x21 });
        gbc.writeMem(0xea8c, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xdab0, gbc.sp());
        EXPECT(0xea8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x8ca1));
        EXPECT(0xcb, gbc.readMem(0xea8c));
        EXPECT(0x8e, gbc.readMem(0xea8d));
        // CB 8E 0102
        gbc.setState(0x962e, 0xf7f2, 0x8a80, 0xa95d, 0x4c63, 0x93fb, 0x0, 0x0);
        gbc.writeMem(0x93fb, { 0xfb });
        gbc.writeMem(0x962e, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xf7f2, gbc.sp());
        EXPECT(0x9630, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf9, gbc.readMem(0x93fb));
        EXPECT(0xcb, gbc.readMem(0x962e));
        EXPECT(0x8e, gbc.readMem(0x962f));
        // CB 8E 0103
        gbc.setState(0x949f, 0x85fb, 0xe260, 0xbbe9, 0xe017, 0xfe8f, 0x1, 0x0);
        gbc.writeMem(0x949f, { 0xcb, 0x8e });
        gbc.writeMem(0xfe8f, { 0x29 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x85fb, gbc.sp());
        EXPECT(0x94a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x949f));
        EXPECT(0x8e, gbc.readMem(0x94a0));
        EXPECT(0x29, gbc.readMem(0xfe8f));
        // CB 8E 0104
        gbc.setState(0x98fb, 0x5d31, 0x9a20, 0x84c1, 0x7974, 0x1c2, 0x1, 0x1);
        gbc.writeMem(0x1c2, { 0xc5 });
        gbc.writeMem(0x98fb, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x5d31, gbc.sp());
        EXPECT(0x98fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98fb));
        EXPECT(0x8e, gbc.readMem(0x98fc));
        // CB 8E 0105
        gbc.setState(0xef5d, 0xfd03, 0x2d20, 0x816f, 0x825c, 0xb027, 0x1, 0x0);
        gbc.writeMem(0xb027, { 0x1d });
        gbc.writeMem(0xef5d, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xfd03, gbc.sp());
        EXPECT(0xef5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xb027));
        EXPECT(0xcb, gbc.readMem(0xef5d));
        EXPECT(0x8e, gbc.readMem(0xef5e));
        // CB 8E 0106
        gbc.setState(0x5878, 0x9d3a, 0x90, 0x531d, 0x6053, 0xb86f, 0x0, 0x0);
        gbc.writeMem(0x5878, { 0xcb, 0x8e });
        gbc.writeMem(0xb86f, { 0xdd });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x9d3a, gbc.sp());
        EXPECT(0x587a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0xb86f));
        // CB 8E 0108
        gbc.setState(0x8e73, 0xc59c, 0x2570, 0x57e6, 0x819, 0x1b5c, 0x0, 0x1);
        gbc.writeMem(0x1b5c, { 0x71 });
        gbc.writeMem(0x8e73, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xc59c, gbc.sp());
        EXPECT(0x8e75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e73));
        EXPECT(0x8e, gbc.readMem(0x8e74));
        // CB 8E 0109
        gbc.setState(0xbcde, 0xb697, 0x6ef0, 0x6e48, 0x8c03, 0xb111, 0x1, 0x0);
        gbc.writeMem(0xb111, { 0x67 });
        gbc.writeMem(0xbcde, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xb697, gbc.sp());
        EXPECT(0xbce0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xb111));
        EXPECT(0xcb, gbc.readMem(0xbcde));
        EXPECT(0x8e, gbc.readMem(0xbcdf));
        // CB 8E 010A
        gbc.setState(0x5a1d, 0xb56f, 0x4d20, 0xc0, 0x458f, 0xd8ce, 0x1, 0x1);
        gbc.writeMem(0x5a1d, { 0xcb, 0x8e });
        gbc.writeMem(0xd8ce, { 0x36 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xb56f, gbc.sp());
        EXPECT(0x5a1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xd8ce));
        // CB 8E 010C
        gbc.setState(0x42c7, 0x1d76, 0xc4c0, 0x505, 0xe982, 0x6e7f, 0x0, 0x0);
        gbc.writeMem(0x42c7, { 0xcb, 0x8e });
        gbc.writeMem(0x6e7f, { 0xb1 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x1d76, gbc.sp());
        EXPECT(0x42c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8E 010F
        gbc.setState(0xde57, 0x5328, 0x72d0, 0x1c8d, 0xbe7e, 0x2cf4, 0x1, 0x1);
        gbc.writeMem(0x2cf4, { 0x64 });
        gbc.writeMem(0xde57, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x5328, gbc.sp());
        EXPECT(0xde59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde57));
        EXPECT(0x8e, gbc.readMem(0xde58));
        // CB 8E 0110
        gbc.setState(0xdc6c, 0xddfc, 0xcd50, 0x5e4d, 0xd02c, 0x35fc, 0x0, 0x1);
        gbc.writeMem(0x35fc, { 0xcd });
        gbc.writeMem(0xdc6c, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xddfc, gbc.sp());
        EXPECT(0xdc6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc6c));
        EXPECT(0x8e, gbc.readMem(0xdc6d));
        // CB 8E 0111
        gbc.setState(0x91b0, 0x246a, 0x46e0, 0x5515, 0xb409, 0x4690, 0x0, 0x1);
        gbc.writeMem(0x4690, { 0x54 });
        gbc.writeMem(0x91b0, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x246a, gbc.sp());
        EXPECT(0x91b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91b0));
        EXPECT(0x8e, gbc.readMem(0x91b1));
        // CB 8E 0112
        gbc.setState(0x3d50, 0x20b7, 0xa30, 0x2dd5, 0x1114, 0xf267, 0x0, 0x0);
        gbc.writeMem(0x3d50, { 0xcb, 0x8e });
        gbc.writeMem(0xf267, { 0xb1 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x20b7, gbc.sp());
        EXPECT(0x3d52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb1, gbc.readMem(0xf267));
        // CB 8E 0113
        gbc.setState(0xe616, 0x9ece, 0x2c00, 0xbdc5, 0x7b4e, 0xe6c8, 0x1, 0x1);
        gbc.writeMem(0xe616, { 0xcb, 0x8e });
        gbc.writeMem(0xe6c8, { 0xd9 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x9ece, gbc.sp());
        EXPECT(0xe618, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe616));
        EXPECT(0x8e, gbc.readMem(0xe617));
        EXPECT(0xd9, gbc.readMem(0xe6c8));
        // CB 8E 0114
        gbc.setState(0xb691, 0x105c, 0x7e80, 0xd3be, 0xeeb2, 0x3b45, 0x1, 0x1);
        gbc.writeMem(0x3b45, { 0x10 });
        gbc.writeMem(0xb691, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x105c, gbc.sp());
        EXPECT(0xb693, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb691));
        EXPECT(0x8e, gbc.readMem(0xb692));
        // CB 8E 0116
        gbc.setState(0x231f, 0x807f, 0x6a60, 0xf4e2, 0xce69, 0xd414, 0x1, 0x0);
        gbc.writeMem(0x231f, { 0xcb, 0x8e });
        gbc.writeMem(0xd414, { 0x1 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x807f, gbc.sp());
        EXPECT(0x2321, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0xd414));
        // CB 8E 0117
        gbc.setState(0xdde4, 0x3270, 0xd140, 0x3e3b, 0x8389, 0x88ae, 0x0, 0x0);
        gbc.writeMem(0x88ae, { 0xb1 });
        gbc.writeMem(0xdde4, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x3270, gbc.sp());
        EXPECT(0xdde6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb1, gbc.readMem(0x88ae));
        EXPECT(0xcb, gbc.readMem(0xdde4));
        EXPECT(0x8e, gbc.readMem(0xdde5));
        // CB 8E 0118
        gbc.setState(0x3bc0, 0xa41b, 0xe10, 0x49db, 0xaba4, 0x9511, 0x0, 0x1);
        gbc.writeMem(0x3bc0, { 0xcb, 0x8e });
        gbc.writeMem(0x9511, { 0x14 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xa41b, gbc.sp());
        EXPECT(0x3bc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x9511));
        // CB 8E 0119
        gbc.setState(0x7468, 0x1bc4, 0x5f60, 0xc7ce, 0xea40, 0x95b0, 0x0, 0x0);
        gbc.writeMem(0x7468, { 0xcb, 0x8e });
        gbc.writeMem(0x95b0, { 0x9c });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x1bc4, gbc.sp());
        EXPECT(0x746a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x95b0));
        // CB 8E 011A
        gbc.setState(0xe921, 0xcb55, 0x5740, 0x804d, 0x704d, 0xa0ea, 0x1, 0x1);
        gbc.writeMem(0xa0ea, { 0x24 });
        gbc.writeMem(0xe921, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xcb55, gbc.sp());
        EXPECT(0xe923, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0xa0ea));
        EXPECT(0xcb, gbc.readMem(0xe921));
        EXPECT(0x8e, gbc.readMem(0xe922));
        // CB 8E 011B
        gbc.setState(0xc0bd, 0xfe63, 0x4f00, 0xfb17, 0xc268, 0xaf57, 0x0, 0x1);
        gbc.writeMem(0xaf57, { 0xd0 });
        gbc.writeMem(0xc0bd, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xfe63, gbc.sp());
        EXPECT(0xc0bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xaf57));
        EXPECT(0xcb, gbc.readMem(0xc0bd));
        EXPECT(0x8e, gbc.readMem(0xc0be));
        // CB 8E 011F
        gbc.setState(0xeafe, 0xe1ac, 0xc9e0, 0xc844, 0xd1ee, 0xc663, 0x0, 0x1);
        gbc.writeMem(0xc663, { 0x49 });
        gbc.writeMem(0xeafe, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xe1ac, gbc.sp());
        EXPECT(0xeb00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xc663));
        EXPECT(0xcb, gbc.readMem(0xeafe));
        EXPECT(0x8e, gbc.readMem(0xeaff));
        // CB 8E 0120
        gbc.setState(0x74cb, 0x6410, 0x46b0, 0xf74d, 0x6bca, 0xec13, 0x1, 0x1);
        gbc.writeMem(0x74cb, { 0xcb, 0x8e });
        gbc.writeMem(0xec13, { 0x4e });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x6410, gbc.sp());
        EXPECT(0x74cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xec13));
        // CB 8E 0121
        gbc.setState(0x363b, 0xe8c4, 0xc4c0, 0x53b9, 0x469c, 0xa1b1, 0x0, 0x1);
        gbc.writeMem(0x363b, { 0xcb, 0x8e });
        gbc.writeMem(0xa1b1, { 0x6a });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xe8c4, gbc.sp());
        EXPECT(0x363d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xa1b1));
        // CB 8E 0122
        gbc.setState(0x7620, 0x7018, 0x2870, 0xba64, 0x371e, 0x9e20, 0x1, 0x0);
        gbc.writeMem(0x7620, { 0xcb, 0x8e });
        gbc.writeMem(0x9e20, { 0xd7 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x7018, gbc.sp());
        EXPECT(0x7622, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0x9e20));
        // CB 8E 0123
        gbc.setState(0xda0a, 0xc525, 0x8f10, 0x2691, 0x8e87, 0xec4e, 0x0, 0x1);
        gbc.writeMem(0xda0a, { 0xcb, 0x8e });
        gbc.writeMem(0xec4e, { 0xdf });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xc525, gbc.sp());
        EXPECT(0xda0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda0a));
        EXPECT(0x8e, gbc.readMem(0xda0b));
        EXPECT(0xdd, gbc.readMem(0xec4e));
        // CB 8E 0124
        gbc.setState(0x3134, 0x68c3, 0x6740, 0xb019, 0x9c26, 0x1702, 0x0, 0x0);
        gbc.writeMem(0x1702, { 0x68 });
        gbc.writeMem(0x3134, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x68c3, gbc.sp());
        EXPECT(0x3136, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8E 0129
        gbc.setState(0xa5a, 0x47f7, 0x4b30, 0x36c, 0x10e3, 0x8d81, 0x0, 0x0);
        gbc.writeMem(0xa5a, { 0xcb, 0x8e });
        gbc.writeMem(0x8d81, { 0x1c });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x47f7, gbc.sp());
        EXPECT(0xa5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0x8d81));
        // CB 8E 012A
        gbc.setState(0xafb7, 0xd7bf, 0xded0, 0x39b8, 0x9dab, 0xd5ca, 0x0, 0x1);
        gbc.writeMem(0xafb7, { 0xcb, 0x8e });
        gbc.writeMem(0xd5ca, { 0x8c });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xd7bf, gbc.sp());
        EXPECT(0xafb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafb7));
        EXPECT(0x8e, gbc.readMem(0xafb8));
        EXPECT(0x8c, gbc.readMem(0xd5ca));
        // CB 8E 012B
        gbc.setState(0x552b, 0x8074, 0x1f70, 0x9955, 0x4cad, 0xb4ca, 0x0, 0x1);
        gbc.writeMem(0x552b, { 0xcb, 0x8e });
        gbc.writeMem(0xb4ca, { 0x2a });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x8074, gbc.sp());
        EXPECT(0x552d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x28, gbc.readMem(0xb4ca));
        // CB 8E 012D
        gbc.setState(0xb8be, 0xc948, 0x4ae0, 0xe458, 0xb9aa, 0xb854, 0x0, 0x0);
        gbc.writeMem(0xb854, { 0x2d });
        gbc.writeMem(0xb8be, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xc948, gbc.sp());
        EXPECT(0xb8c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xb854));
        EXPECT(0xcb, gbc.readMem(0xb8be));
        EXPECT(0x8e, gbc.readMem(0xb8bf));
        // CB 8E 012E
        gbc.setState(0x69e6, 0xb5a0, 0xf8c0, 0x10c6, 0xb79, 0xa8c3, 0x1, 0x1);
        gbc.writeMem(0x69e6, { 0xcb, 0x8e });
        gbc.writeMem(0xa8c3, { 0xe8 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xb5a0, gbc.sp());
        EXPECT(0x69e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0xa8c3));
        // CB 8E 0130
        gbc.setState(0x405d, 0xc508, 0x9e10, 0xa1c3, 0xa519, 0xaacf, 0x0, 0x1);
        gbc.writeMem(0x405d, { 0xcb, 0x8e });
        gbc.writeMem(0xaacf, { 0x2e });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xc508, gbc.sp());
        EXPECT(0x405f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xaacf));
        // CB 8E 0132
        gbc.setState(0x175f, 0x7095, 0xa7a0, 0xc1cd, 0x8117, 0x8afc, 0x0, 0x0);
        gbc.writeMem(0x175f, { 0xcb, 0x8e });
        gbc.writeMem(0x8afc, { 0xbd });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x7095, gbc.sp());
        EXPECT(0x1761, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x8afc));
        // CB 8E 0133
        gbc.setState(0xa2ab, 0x5b58, 0x2400, 0x1706, 0xdde4, 0x692f, 0x0, 0x0);
        gbc.writeMem(0x692f, { 0x68 });
        gbc.writeMem(0xa2ab, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x5b58, gbc.sp());
        EXPECT(0xa2ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2ab));
        EXPECT(0x8e, gbc.readMem(0xa2ac));
        // CB 8E 0134
        gbc.setState(0xc0c5, 0x421a, 0x1ca0, 0xc0b3, 0x3de7, 0xa3dc, 0x0, 0x0);
        gbc.writeMem(0xa3dc, { 0x6 });
        gbc.writeMem(0xc0c5, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x421a, gbc.sp());
        EXPECT(0xc0c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xa3dc));
        EXPECT(0xcb, gbc.readMem(0xc0c5));
        EXPECT(0x8e, gbc.readMem(0xc0c6));
        // CB 8E 0136
        gbc.setState(0x23b3, 0xa317, 0x2e00, 0x628c, 0x1a74, 0x2bf3, 0x0, 0x0);
        gbc.writeMem(0x23b3, { 0xcb, 0x8e });
        gbc.writeMem(0x2bf3, { 0xd5 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xa317, gbc.sp());
        EXPECT(0x23b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8E 0137
        gbc.setState(0x852, 0x244a, 0xc430, 0x9633, 0xc1ea, 0x52cf, 0x1, 0x1);
        gbc.writeMem(0x852, { 0xcb, 0x8e });
        gbc.writeMem(0x52cf, { 0xa1 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x244a, gbc.sp());
        EXPECT(0x854, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8E 0138
        gbc.setState(0x76f2, 0x912b, 0xfcf0, 0x6551, 0x2fd0, 0x87f9, 0x1, 0x1);
        gbc.writeMem(0x76f2, { 0xcb, 0x8e });
        gbc.writeMem(0x87f9, { 0x3b });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x912b, gbc.sp());
        EXPECT(0x76f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0x87f9));
        // CB 8E 0139
        gbc.setState(0xefe4, 0x1564, 0x10f0, 0xc3bf, 0x91b7, 0x9064, 0x0, 0x0);
        gbc.writeMem(0x9064, { 0xd4 });
        gbc.writeMem(0xefe4, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x1564, gbc.sp());
        EXPECT(0xefe6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x9064));
        EXPECT(0xcb, gbc.readMem(0xefe4));
        EXPECT(0x8e, gbc.readMem(0xefe5));
        // CB 8E 013B
        gbc.setState(0x57e8, 0xc6f9, 0x4be0, 0xec89, 0x80, 0x2850, 0x1, 0x1);
        gbc.writeMem(0x2850, { 0x65 });
        gbc.writeMem(0x57e8, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xc6f9, gbc.sp());
        EXPECT(0x57ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8E 013C
        gbc.setState(0xb5e4, 0x77ac, 0x8f50, 0x74cd, 0xe082, 0xc701, 0x1, 0x1);
        gbc.writeMem(0xb5e4, { 0xcb, 0x8e });
        gbc.writeMem(0xc701, { 0x6f });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x77ac, gbc.sp());
        EXPECT(0xb5e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5e4));
        EXPECT(0x8e, gbc.readMem(0xb5e5));
        EXPECT(0x6d, gbc.readMem(0xc701));
        // CB 8E 013D
        gbc.setState(0xde8a, 0x6443, 0x4a50, 0xf4a3, 0x4357, 0x89ed, 0x0, 0x0);
        gbc.writeMem(0x89ed, { 0x34 });
        gbc.writeMem(0xde8a, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x6443, gbc.sp());
        EXPECT(0xde8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0x89ed));
        EXPECT(0xcb, gbc.readMem(0xde8a));
        EXPECT(0x8e, gbc.readMem(0xde8b));
        // CB 8E 013E
        gbc.setState(0x11b8, 0x1df4, 0x2f40, 0x3cd6, 0x1068, 0x81f1, 0x1, 0x0);
        gbc.writeMem(0x11b8, { 0xcb, 0x8e });
        gbc.writeMem(0x81f1, { 0x70 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x1df4, gbc.sp());
        EXPECT(0x11ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0x81f1));
        // CB 8E 013F
        gbc.setState(0xa72f, 0x70e0, 0x180, 0x2d60, 0xb1a7, 0xeb05, 0x1, 0x1);
        gbc.writeMem(0xa72f, { 0xcb, 0x8e });
        gbc.writeMem(0xeb05, { 0xb4 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x70e0, gbc.sp());
        EXPECT(0xa731, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa72f));
        EXPECT(0x8e, gbc.readMem(0xa730));
        EXPECT(0xb4, gbc.readMem(0xeb05));
        // CB 8E 0140
        gbc.setState(0x82df, 0x7129, 0xd1e0, 0xc8e5, 0x2345, 0xac44, 0x0, 0x1);
        gbc.writeMem(0x82df, { 0xcb, 0x8e });
        gbc.writeMem(0xac44, { 0x62 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x7129, gbc.sp());
        EXPECT(0x82e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82df));
        EXPECT(0x8e, gbc.readMem(0x82e0));
        EXPECT(0x60, gbc.readMem(0xac44));
        // CB 8E 0141
        gbc.setState(0x93c2, 0x6c4, 0x5e90, 0x119e, 0xaafd, 0x43a3, 0x0, 0x1);
        gbc.writeMem(0x43a3, { 0x69 });
        gbc.writeMem(0x93c2, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x6c4, gbc.sp());
        EXPECT(0x93c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93c2));
        EXPECT(0x8e, gbc.readMem(0x93c3));
        // CB 8E 0142
        gbc.setState(0x5a7f, 0x91f7, 0x7f30, 0xa641, 0x2226, 0x7bc9, 0x1, 0x1);
        gbc.writeMem(0x5a7f, { 0xcb, 0x8e });
        gbc.writeMem(0x7bc9, { 0x21 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x91f7, gbc.sp());
        EXPECT(0x5a81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8E 0143
        gbc.setState(0xcf19, 0x4734, 0xd330, 0x4dc6, 0xe60e, 0xf584, 0x0, 0x0);
        gbc.writeMem(0xcf19, { 0xcb, 0x8e });
        gbc.writeMem(0xf584, { 0x62 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x4734, gbc.sp());
        EXPECT(0xcf1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf19));
        EXPECT(0x8e, gbc.readMem(0xcf1a));
        EXPECT(0x60, gbc.readMem(0xf584));
        // CB 8E 0144
        gbc.setState(0xbe5f, 0x13da, 0xeb80, 0xf76d, 0x4dd5, 0xedb5, 0x0, 0x1);
        gbc.writeMem(0xbe5f, { 0xcb, 0x8e });
        gbc.writeMem(0xedb5, { 0x3b });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x13da, gbc.sp());
        EXPECT(0xbe61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe5f));
        EXPECT(0x8e, gbc.readMem(0xbe60));
        EXPECT(0x39, gbc.readMem(0xedb5));
        // CB 8E 0145
        gbc.setState(0x6e70, 0xcc76, 0x620, 0xc3fd, 0xab1d, 0xa7a0, 0x1, 0x0);
        gbc.writeMem(0x6e70, { 0xcb, 0x8e });
        gbc.writeMem(0xa7a0, { 0x30 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xcc76, gbc.sp());
        EXPECT(0x6e72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0xa7a0));
        // CB 8E 0146
        gbc.setState(0x5f1b, 0x70c4, 0x90f0, 0x7660, 0xb2e4, 0xa66c, 0x1, 0x1);
        gbc.writeMem(0x5f1b, { 0xcb, 0x8e });
        gbc.writeMem(0xa66c, { 0x19 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x70c4, gbc.sp());
        EXPECT(0x5f1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xa66c));
        // CB 8E 0147
        gbc.setState(0x848e, 0x3ced, 0xb390, 0xe72f, 0x124d, 0x6133, 0x1, 0x0);
        gbc.writeMem(0x6133, { 0x6d });
        gbc.writeMem(0x848e, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x3ced, gbc.sp());
        EXPECT(0x8490, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x848e));
        EXPECT(0x8e, gbc.readMem(0x848f));
        // CB 8E 0149
        gbc.setState(0x4e6e, 0xcb8f, 0xc5e0, 0xbbbc, 0xc7c, 0xba48, 0x1, 0x1);
        gbc.writeMem(0x4e6e, { 0xcb, 0x8e });
        gbc.writeMem(0xba48, { 0x61 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xcb8f, gbc.sp());
        EXPECT(0x4e70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xba48));
        // CB 8E 014A
        gbc.setState(0x746c, 0xb461, 0x4520, 0x5a50, 0xb52b, 0x5bd4, 0x0, 0x0);
        gbc.writeMem(0x5bd4, { 0x3c });
        gbc.writeMem(0x746c, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xb461, gbc.sp());
        EXPECT(0x746e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8E 014B
        gbc.setState(0xb986, 0x8ce5, 0x35f0, 0xf9b7, 0x31d2, 0x82be, 0x0, 0x0);
        gbc.writeMem(0x82be, { 0xac });
        gbc.writeMem(0xb986, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x8ce5, gbc.sp());
        EXPECT(0xb988, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x82be));
        EXPECT(0xcb, gbc.readMem(0xb986));
        EXPECT(0x8e, gbc.readMem(0xb987));
        // CB 8E 014C
        gbc.setState(0x67c5, 0x5366, 0x5f70, 0xe8c, 0x32d1, 0xaf7a, 0x0, 0x0);
        gbc.writeMem(0x67c5, { 0xcb, 0x8e });
        gbc.writeMem(0xaf7a, { 0x94 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x5366, gbc.sp());
        EXPECT(0x67c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xaf7a));
        // CB 8E 014F
        gbc.setState(0x233, 0xfbab, 0xadf0, 0x1e76, 0x3cc7, 0xc686, 0x0, 0x1);
        gbc.writeMem(0x233, { 0xcb, 0x8e });
        gbc.writeMem(0xc686, { 0x6a });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xfbab, gbc.sp());
        EXPECT(0x235, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xc686));
        // CB 8E 0150
        gbc.setState(0xc79b, 0x5c1, 0xbfa0, 0x93a8, 0xa13d, 0xb3fb, 0x0, 0x1);
        gbc.writeMem(0xb3fb, { 0x11 });
        gbc.writeMem(0xc79b, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x5c1, gbc.sp());
        EXPECT(0xc79d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xb3fb));
        EXPECT(0xcb, gbc.readMem(0xc79b));
        EXPECT(0x8e, gbc.readMem(0xc79c));
        // CB 8E 0151
        gbc.setState(0x477f, 0xfef, 0x6d70, 0x8184, 0x5385, 0xbabb, 0x1, 0x0);
        gbc.writeMem(0x477f, { 0xcb, 0x8e });
        gbc.writeMem(0xbabb, { 0x2d });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xfef, gbc.sp());
        EXPECT(0x4781, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xbabb));
        // CB 8E 0152
        gbc.setState(0xc0e8, 0x5763, 0xfa80, 0xde11, 0xb5fc, 0xd90, 0x0, 0x0);
        gbc.writeMem(0xd90, { 0x64 });
        gbc.writeMem(0xc0e8, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x5763, gbc.sp());
        EXPECT(0xc0ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0e8));
        EXPECT(0x8e, gbc.readMem(0xc0e9));
        // CB 8E 0154
        gbc.setState(0x6fc7, 0x3515, 0x7980, 0xaddc, 0x9c4e, 0x8bc0, 0x0, 0x0);
        gbc.writeMem(0x6fc7, { 0xcb, 0x8e });
        gbc.writeMem(0x8bc0, { 0xa6 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x3515, gbc.sp());
        EXPECT(0x6fc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x8bc0));
        // CB 8E 0155
        gbc.setState(0x9373, 0x4200, 0xb7b0, 0x89da, 0x253d, 0x9cc2, 0x1, 0x0);
        gbc.writeMem(0x9373, { 0xcb, 0x8e });
        gbc.writeMem(0x9cc2, { 0x9d });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x4200, gbc.sp());
        EXPECT(0x9375, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9373));
        EXPECT(0x8e, gbc.readMem(0x9374));
        EXPECT(0x9d, gbc.readMem(0x9cc2));
        // CB 8E 0156
        gbc.setState(0x25a8, 0x396, 0x9920, 0xafc0, 0x72db, 0xd5a8, 0x1, 0x1);
        gbc.writeMem(0x25a8, { 0xcb, 0x8e });
        gbc.writeMem(0xd5a8, { 0x30 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x396, gbc.sp());
        EXPECT(0x25aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0xd5a8));
        // CB 8E 0157
        gbc.setState(0xb40b, 0x5dde, 0xf740, 0x3398, 0x42ad, 0xe016, 0x1, 0x1);
        gbc.writeMem(0xb40b, { 0xcb, 0x8e });
        gbc.writeMem(0xe016, { 0xa0 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x5dde, gbc.sp());
        EXPECT(0xb40d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb40b));
        EXPECT(0x8e, gbc.readMem(0xb40c));
        EXPECT(0xa0, gbc.readMem(0xe016));
        // CB 8E 0158
        gbc.setState(0x20f, 0xb2c0, 0x22e0, 0x3e0f, 0xf331, 0x8c82, 0x0, 0x1);
        gbc.writeMem(0x20f, { 0xcb, 0x8e });
        gbc.writeMem(0x8c82, { 0x8e });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xb2c0, gbc.sp());
        EXPECT(0x211, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x8c82));
        // CB 8E 0159
        gbc.setState(0xe4f4, 0xadd2, 0x4760, 0xd4c4, 0x9ab0, 0xf496, 0x0, 0x1);
        gbc.writeMem(0xe4f4, { 0xcb, 0x8e });
        gbc.writeMem(0xf496, { 0x96 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xadd2, gbc.sp());
        EXPECT(0xe4f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4f4));
        EXPECT(0x8e, gbc.readMem(0xe4f5));
        EXPECT(0x94, gbc.readMem(0xf496));
        // CB 8E 015A
        gbc.setState(0xafcc, 0x3ca5, 0xcc60, 0x960, 0x18ce, 0x9cbe, 0x0, 0x0);
        gbc.writeMem(0x9cbe, { 0xa0 });
        gbc.writeMem(0xafcc, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x3ca5, gbc.sp());
        EXPECT(0xafce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x9cbe));
        EXPECT(0xcb, gbc.readMem(0xafcc));
        EXPECT(0x8e, gbc.readMem(0xafcd));
        // CB 8E 015C
        gbc.setState(0xbce6, 0x1883, 0x8f60, 0xdb2e, 0x3b37, 0xfaad, 0x0, 0x1);
        gbc.writeMem(0xbce6, { 0xcb, 0x8e });
        gbc.writeMem(0xfaad, { 0x60 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x1883, gbc.sp());
        EXPECT(0xbce8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbce6));
        EXPECT(0x8e, gbc.readMem(0xbce7));
        EXPECT(0x60, gbc.readMem(0xfaad));
        // CB 8E 015D
        gbc.setState(0x2579, 0xd6c8, 0x5040, 0x41be, 0x8911, 0xde48, 0x1, 0x0);
        gbc.writeMem(0x2579, { 0xcb, 0x8e });
        gbc.writeMem(0xde48, { 0x8b });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xd6c8, gbc.sp());
        EXPECT(0x257b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xde48));
        // CB 8E 015F
        gbc.setState(0x6c81, 0xc731, 0xd50, 0xcf18, 0x9175, 0x8211, 0x0, 0x1);
        gbc.writeMem(0x6c81, { 0xcb, 0x8e });
        gbc.writeMem(0x8211, { 0xb });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xc731, gbc.sp());
        EXPECT(0x6c83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x8211));
        // CB 8E 0160
        gbc.setState(0x8b1e, 0xf445, 0x56c0, 0xf6a7, 0x78d4, 0x893f, 0x1, 0x0);
        gbc.writeMem(0x893f, { 0x1 });
        gbc.writeMem(0x8b1e, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xf445, gbc.sp());
        EXPECT(0x8b20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0x893f));
        EXPECT(0xcb, gbc.readMem(0x8b1e));
        EXPECT(0x8e, gbc.readMem(0x8b1f));
        // CB 8E 0161
        gbc.setState(0x95b5, 0x693f, 0xd0c0, 0x3d71, 0x9ea8, 0x85e5, 0x1, 0x0);
        gbc.writeMem(0x85e5, { 0x61 });
        gbc.writeMem(0x95b5, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x693f, gbc.sp());
        EXPECT(0x95b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x85e5));
        EXPECT(0xcb, gbc.readMem(0x95b5));
        EXPECT(0x8e, gbc.readMem(0x95b6));
        // CB 8E 0162
        gbc.setState(0x9b4, 0x22a1, 0x8560, 0x8c4e, 0xe9d1, 0xa514, 0x0, 0x1);
        gbc.writeMem(0x9b4, { 0xcb, 0x8e });
        gbc.writeMem(0xa514, { 0xdf });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x22a1, gbc.sp());
        EXPECT(0x9b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0xa514));
        // CB 8E 0163
        gbc.setState(0x9423, 0x534f, 0x3fa0, 0xf713, 0x6ae9, 0x6f08, 0x1, 0x1);
        gbc.writeMem(0x6f08, { 0x68 });
        gbc.writeMem(0x9423, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x534f, gbc.sp());
        EXPECT(0x9425, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9423));
        EXPECT(0x8e, gbc.readMem(0x9424));
        // CB 8E 0164
        gbc.setState(0xb44, 0xe203, 0xbfd0, 0xc338, 0x9dfb, 0xd1a9, 0x0, 0x1);
        gbc.writeMem(0xb44, { 0xcb, 0x8e });
        gbc.writeMem(0xd1a9, { 0x19 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xe203, gbc.sp());
        EXPECT(0xb46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xd1a9));
        // CB 8E 0165
        gbc.setState(0x7fa5, 0xa5ee, 0xa610, 0x17d6, 0x2219, 0x88a0, 0x1, 0x0);
        gbc.writeMem(0x7fa5, { 0xcb, 0x8e });
        gbc.writeMem(0x88a0, { 0x97 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xa5ee, gbc.sp());
        EXPECT(0x7fa7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x88a0));
        // CB 8E 0166
        gbc.setState(0xbd3, 0x1db, 0xf20, 0xf7ad, 0x389b, 0x66ab, 0x0, 0x1);
        gbc.writeMem(0xbd3, { 0xcb, 0x8e });
        gbc.writeMem(0x66ab, { 0xd });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x1db, gbc.sp());
        EXPECT(0xbd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8E 0167
        gbc.setState(0xe462, 0x6905, 0x8610, 0x7cb7, 0xca70, 0x8771, 0x0, 0x0);
        gbc.writeMem(0x8771, { 0xf5 });
        gbc.writeMem(0xe462, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x6905, gbc.sp());
        EXPECT(0xe464, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0x8771));
        EXPECT(0xcb, gbc.readMem(0xe462));
        EXPECT(0x8e, gbc.readMem(0xe463));
        // CB 8E 0168
        gbc.setState(0x5cc6, 0x1e10, 0x11b0, 0x1295, 0x43e8, 0xd8b4, 0x0, 0x0);
        gbc.writeMem(0x5cc6, { 0xcb, 0x8e });
        gbc.writeMem(0xd8b4, { 0x3f });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x1e10, gbc.sp());
        EXPECT(0x5cc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3d, gbc.readMem(0xd8b4));
        // CB 8E 0169
        gbc.setState(0xca0, 0x53fb, 0x10f0, 0xb7cd, 0xb003, 0x8b3d, 0x1, 0x0);
        gbc.writeMem(0xca0, { 0xcb, 0x8e });
        gbc.writeMem(0x8b3d, { 0x3b });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x53fb, gbc.sp());
        EXPECT(0xca2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0x8b3d));
        // CB 8E 016A
        gbc.setState(0xccbf, 0xaa42, 0x6980, 0x2851, 0xa, 0xc28d, 0x1, 0x0);
        gbc.writeMem(0xc28d, { 0x1c });
        gbc.writeMem(0xccbf, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xaa42, gbc.sp());
        EXPECT(0xccc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0xc28d));
        EXPECT(0xcb, gbc.readMem(0xccbf));
        EXPECT(0x8e, gbc.readMem(0xccc0));
        // CB 8E 016C
        gbc.setState(0x5635, 0x399e, 0x6460, 0x6b48, 0xc17, 0xcb73, 0x0, 0x1);
        gbc.writeMem(0x5635, { 0xcb, 0x8e });
        gbc.writeMem(0xcb73, { 0x77 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x399e, gbc.sp());
        EXPECT(0x5637, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xcb73));
        // CB 8E 016E
        gbc.setState(0xb6ed, 0x47c4, 0x4c80, 0x2d91, 0x5e2c, 0x86ec, 0x0, 0x0);
        gbc.writeMem(0x86ec, { 0x94 });
        gbc.writeMem(0xb6ed, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x47c4, gbc.sp());
        EXPECT(0xb6ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x86ec));
        EXPECT(0xcb, gbc.readMem(0xb6ed));
        EXPECT(0x8e, gbc.readMem(0xb6ee));
        // CB 8E 0170
        gbc.setState(0x6910, 0x42d8, 0x7630, 0x7fd9, 0xe35, 0x37a1, 0x1, 0x0);
        gbc.writeMem(0x37a1, { 0xed });
        gbc.writeMem(0x6910, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x42d8, gbc.sp());
        EXPECT(0x6912, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8E 0171
        gbc.setState(0x10ce, 0x2fd2, 0x6380, 0x750d, 0x2985, 0x22cd, 0x1, 0x1);
        gbc.writeMem(0x10ce, { 0xcb, 0x8e });
        gbc.writeMem(0x22cd, { 0xd1 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x2fd2, gbc.sp());
        EXPECT(0x10d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8E 0172
        gbc.setState(0x8e26, 0x552, 0x7200, 0x22d6, 0x4872, 0xf9d9, 0x0, 0x1);
        gbc.writeMem(0x8e26, { 0xcb, 0x8e });
        gbc.writeMem(0xf9d9, { 0xc2 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x552, gbc.sp());
        EXPECT(0x8e28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e26));
        EXPECT(0x8e, gbc.readMem(0x8e27));
        EXPECT(0xc0, gbc.readMem(0xf9d9));
        // CB 8E 0173
        gbc.setState(0x654, 0x807b, 0xb3f0, 0xd4f5, 0x671, 0x7868, 0x1, 0x1);
        gbc.writeMem(0x654, { 0xcb, 0x8e });
        gbc.writeMem(0x7868, { 0x59 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x807b, gbc.sp());
        EXPECT(0x656, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8E 0174
        gbc.setState(0xe287, 0x9706, 0x4080, 0x6acb, 0x298c, 0xb2ec, 0x1, 0x0);
        gbc.writeMem(0xb2ec, { 0xe2 });
        gbc.writeMem(0xe287, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x9706, gbc.sp());
        EXPECT(0xe289, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xb2ec));
        EXPECT(0xcb, gbc.readMem(0xe287));
        EXPECT(0x8e, gbc.readMem(0xe288));
        // CB 8E 0176
        gbc.setState(0x8da0, 0xafb4, 0x1e90, 0xb3a3, 0x9936, 0xfa4, 0x1, 0x0);
        gbc.writeMem(0xfa4, { 0xc9 });
        gbc.writeMem(0x8da0, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xafb4, gbc.sp());
        EXPECT(0x8da2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8da0));
        EXPECT(0x8e, gbc.readMem(0x8da1));
        // CB 8E 0177
        gbc.setState(0xbe5d, 0x3e96, 0x1170, 0x7fbc, 0x115b, 0x6ed8, 0x0, 0x0);
        gbc.writeMem(0x6ed8, { 0x35 });
        gbc.writeMem(0xbe5d, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x3e96, gbc.sp());
        EXPECT(0xbe5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe5d));
        EXPECT(0x8e, gbc.readMem(0xbe5e));
        // CB 8E 0179
        gbc.setState(0xa0f1, 0x124e, 0x8c10, 0x7c82, 0xa9a, 0x61a5, 0x1, 0x0);
        gbc.writeMem(0x61a5, { 0x24 });
        gbc.writeMem(0xa0f1, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x124e, gbc.sp());
        EXPECT(0xa0f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0f1));
        EXPECT(0x8e, gbc.readMem(0xa0f2));
        // CB 8E 017A
        gbc.setState(0x6cb6, 0xe517, 0x3a70, 0x9c86, 0x3223, 0xd3e3, 0x1, 0x1);
        gbc.writeMem(0x6cb6, { 0xcb, 0x8e });
        gbc.writeMem(0xd3e3, { 0x7 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xe517, gbc.sp());
        EXPECT(0x6cb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xd3e3));
        // CB 8E 017B
        gbc.setState(0xbf45, 0x7d46, 0x4f60, 0x89c0, 0x39b7, 0xf418, 0x0, 0x1);
        gbc.writeMem(0xbf45, { 0xcb, 0x8e });
        gbc.writeMem(0xf418, { 0xde });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x7d46, gbc.sp());
        EXPECT(0xbf47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf45));
        EXPECT(0x8e, gbc.readMem(0xbf46));
        EXPECT(0xdc, gbc.readMem(0xf418));
        // CB 8E 017E
        gbc.setState(0x49d8, 0x19ab, 0xdc10, 0x24be, 0x29fb, 0xbe56, 0x0, 0x1);
        gbc.writeMem(0x49d8, { 0xcb, 0x8e });
        gbc.writeMem(0xbe56, { 0x71 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x19ab, gbc.sp());
        EXPECT(0x49da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xbe56));
        // CB 8E 017F
        gbc.setState(0x7846, 0xc696, 0xebd0, 0x5c3c, 0xc5ea, 0x6044, 0x0, 0x1);
        gbc.writeMem(0x6044, { 0x64 });
        gbc.writeMem(0x7846, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xc696, gbc.sp());
        EXPECT(0x7848, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8E 0180
        gbc.setState(0xe163, 0xe1fc, 0x4dc0, 0xbe4b, 0xe4fb, 0x9956, 0x1, 0x1);
        gbc.writeMem(0x9956, { 0xb2 });
        gbc.writeMem(0xe163, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xe1fc, gbc.sp());
        EXPECT(0xe165, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x9956));
        EXPECT(0xcb, gbc.readMem(0xe163));
        EXPECT(0x8e, gbc.readMem(0xe164));
        // CB 8E 0183
        gbc.setState(0x9e39, 0xe4d2, 0xa500, 0x7f6b, 0xccd3, 0x3310, 0x1, 0x1);
        gbc.writeMem(0x3310, { 0x41 });
        gbc.writeMem(0x9e39, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xe4d2, gbc.sp());
        EXPECT(0x9e3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e39));
        EXPECT(0x8e, gbc.readMem(0x9e3a));
        // CB 8E 0186
        gbc.setState(0x4659, 0x59bd, 0x1c0, 0x9891, 0x68d6, 0xf515, 0x0, 0x0);
        gbc.writeMem(0x4659, { 0xcb, 0x8e });
        gbc.writeMem(0xf515, { 0xdd });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x59bd, gbc.sp());
        EXPECT(0x465b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0xf515));
        // CB 8E 0187
        gbc.setState(0x22f, 0xc915, 0x1460, 0xcfbe, 0x2dec, 0xbd39, 0x1, 0x0);
        gbc.writeMem(0x22f, { 0xcb, 0x8e });
        gbc.writeMem(0xbd39, { 0x5d });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xc915, gbc.sp());
        EXPECT(0x231, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xbd39));
        // CB 8E 0189
        gbc.setState(0xac16, 0xfd45, 0xabc0, 0x8896, 0x7220, 0x260, 0x0, 0x0);
        gbc.writeMem(0x260, { 0xf9 });
        gbc.writeMem(0xac16, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xfd45, gbc.sp());
        EXPECT(0xac18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac16));
        EXPECT(0x8e, gbc.readMem(0xac17));
        // CB 8E 018A
        gbc.setState(0x8110, 0x9543, 0xc290, 0x61e2, 0x2f51, 0xb2f4, 0x1, 0x0);
        gbc.writeMem(0x8110, { 0xcb, 0x8e });
        gbc.writeMem(0xb2f4, { 0xd5 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x9543, gbc.sp());
        EXPECT(0x8112, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8110));
        EXPECT(0x8e, gbc.readMem(0x8111));
        EXPECT(0xd5, gbc.readMem(0xb2f4));
        // CB 8E 018C
        gbc.setState(0x6159, 0xef31, 0x66c0, 0xee32, 0xaf71, 0x6e2c, 0x0, 0x1);
        gbc.writeMem(0x6159, { 0xcb, 0x8e });
        gbc.writeMem(0x6e2c, { 0xe0 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xef31, gbc.sp());
        EXPECT(0x615b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8E 018D
        gbc.setState(0x8013, 0x4a3c, 0x3510, 0xc0b3, 0x13d7, 0x4474, 0x0, 0x0);
        gbc.writeMem(0x4474, { 0xbc });
        gbc.writeMem(0x8013, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x4a3c, gbc.sp());
        EXPECT(0x8015, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8013));
        EXPECT(0x8e, gbc.readMem(0x8014));
        // CB 8E 018E
        gbc.setState(0x3155, 0x7f1c, 0x310, 0xc482, 0x4626, 0x8ea9, 0x1, 0x0);
        gbc.writeMem(0x3155, { 0xcb, 0x8e });
        gbc.writeMem(0x8ea9, { 0xd5 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x7f1c, gbc.sp());
        EXPECT(0x3157, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0x8ea9));
        // CB 8E 018F
        gbc.setState(0x4807, 0xbc44, 0x3f10, 0x3fc4, 0xc79a, 0x8ed1, 0x1, 0x1);
        gbc.writeMem(0x4807, { 0xcb, 0x8e });
        gbc.writeMem(0x8ed1, { 0xb });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xbc44, gbc.sp());
        EXPECT(0x4809, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x8ed1));
        // CB 8E 0191
        gbc.setState(0x5826, 0xce11, 0xfe0, 0x58f6, 0x600c, 0xa6d6, 0x0, 0x1);
        gbc.writeMem(0x5826, { 0xcb, 0x8e });
        gbc.writeMem(0xa6d6, { 0x3d });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xce11, gbc.sp());
        EXPECT(0x5828, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3d, gbc.readMem(0xa6d6));
        // CB 8E 0192
        gbc.setState(0xca3b, 0xaea6, 0x3aa0, 0x4d74, 0x3170, 0xae4d, 0x0, 0x1);
        gbc.writeMem(0xae4d, { 0x2d });
        gbc.writeMem(0xca3b, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xaea6, gbc.sp());
        EXPECT(0xca3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xae4d));
        EXPECT(0xcb, gbc.readMem(0xca3b));
        EXPECT(0x8e, gbc.readMem(0xca3c));
        // CB 8E 0193
        gbc.setState(0xdc2d, 0xf76e, 0x5f10, 0x2df2, 0x8c4d, 0xd86f, 0x1, 0x0);
        gbc.writeMem(0xd86f, { 0xf });
        gbc.writeMem(0xdc2d, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xf76e, gbc.sp());
        EXPECT(0xdc2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0xd86f));
        EXPECT(0xcb, gbc.readMem(0xdc2d));
        EXPECT(0x8e, gbc.readMem(0xdc2e));
        // CB 8E 0194
        gbc.setState(0x9bbf, 0x71e9, 0x4d00, 0xed28, 0x40f6, 0x11de, 0x1, 0x1);
        gbc.writeMem(0x11de, { 0xb0 });
        gbc.writeMem(0x9bbf, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x71e9, gbc.sp());
        EXPECT(0x9bc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bbf));
        EXPECT(0x8e, gbc.readMem(0x9bc0));
        // CB 8E 0195
        gbc.setState(0x77d1, 0xc2f, 0x1d00, 0xd711, 0xacac, 0x9ec0, 0x1, 0x0);
        gbc.writeMem(0x77d1, { 0xcb, 0x8e });
        gbc.writeMem(0x9ec0, { 0x4a });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xc2f, gbc.sp());
        EXPECT(0x77d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x9ec0));
        // CB 8E 0197
        gbc.setState(0x1c7f, 0x7aab, 0x8e70, 0x2800, 0xd03c, 0x85be, 0x1, 0x1);
        gbc.writeMem(0x1c7f, { 0xcb, 0x8e });
        gbc.writeMem(0x85be, { 0x24 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x7aab, gbc.sp());
        EXPECT(0x1c81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0x85be));
        // CB 8E 0198
        gbc.setState(0x725c, 0x1ff4, 0x5b30, 0xdbed, 0xe0e3, 0x2dfc, 0x0, 0x0);
        gbc.writeMem(0x2dfc, { 0xb5 });
        gbc.writeMem(0x725c, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x1ff4, gbc.sp());
        EXPECT(0x725e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8E 0199
        gbc.setState(0x7c7e, 0x2668, 0x850, 0x2496, 0xd03e, 0x9bfb, 0x0, 0x1);
        gbc.writeMem(0x7c7e, { 0xcb, 0x8e });
        gbc.writeMem(0x9bfb, { 0x4 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x2668, gbc.sp());
        EXPECT(0x7c80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x9bfb));
        // CB 8E 019A
        gbc.setState(0xcd20, 0x63b5, 0x8940, 0xd2e9, 0xf39e, 0x9d11, 0x0, 0x0);
        gbc.writeMem(0x9d11, { 0x97 });
        gbc.writeMem(0xcd20, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x63b5, gbc.sp());
        EXPECT(0xcd22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x9d11));
        EXPECT(0xcb, gbc.readMem(0xcd20));
        EXPECT(0x8e, gbc.readMem(0xcd21));
        // CB 8E 019B
        gbc.setState(0x260f, 0x863e, 0x68b0, 0x2b96, 0x68dc, 0x2a24, 0x0, 0x1);
        gbc.writeMem(0x260f, { 0xcb, 0x8e });
        gbc.writeMem(0x2a24, { 0xc9 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x863e, gbc.sp());
        EXPECT(0x2611, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8E 019C
        gbc.setState(0xc859, 0xc5bd, 0xda40, 0xdfac, 0xf212, 0x9741, 0x0, 0x1);
        gbc.writeMem(0x9741, { 0xac });
        gbc.writeMem(0xc859, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xc5bd, gbc.sp());
        EXPECT(0xc85b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x9741));
        EXPECT(0xcb, gbc.readMem(0xc859));
        EXPECT(0x8e, gbc.readMem(0xc85a));
        // CB 8E 019E
        gbc.setState(0x6117, 0xd15f, 0x57d0, 0xb884, 0x407e, 0xba80, 0x0, 0x0);
        gbc.writeMem(0x6117, { 0xcb, 0x8e });
        gbc.writeMem(0xba80, { 0x6a });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xd15f, gbc.sp());
        EXPECT(0x6119, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xba80));
        // CB 8E 019F
        gbc.setState(0xbe57, 0x6ab2, 0xbfd0, 0xed03, 0xb63e, 0xa235, 0x1, 0x0);
        gbc.writeMem(0xa235, { 0x61 });
        gbc.writeMem(0xbe57, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x6ab2, gbc.sp());
        EXPECT(0xbe59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xa235));
        EXPECT(0xcb, gbc.readMem(0xbe57));
        EXPECT(0x8e, gbc.readMem(0xbe58));
        // CB 8E 01A0
        gbc.setState(0x6d0c, 0xc3ab, 0x7250, 0x6e59, 0x489e, 0x2995, 0x1, 0x0);
        gbc.writeMem(0x2995, { 0x95 });
        gbc.writeMem(0x6d0c, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xc3ab, gbc.sp());
        EXPECT(0x6d0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8E 01A1
        gbc.setState(0x7172, 0xcb04, 0x2ef0, 0x157b, 0x96fa, 0xa57f, 0x1, 0x0);
        gbc.writeMem(0x7172, { 0xcb, 0x8e });
        gbc.writeMem(0xa57f, { 0x9d });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xcb04, gbc.sp());
        EXPECT(0x7174, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xa57f));
        // CB 8E 01A3
        gbc.setState(0xd17, 0xd510, 0x74c0, 0x393, 0x4bea, 0x8d5a, 0x0, 0x0);
        gbc.writeMem(0xd17, { 0xcb, 0x8e });
        gbc.writeMem(0x8d5a, { 0xeb });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xd510, gbc.sp());
        EXPECT(0xd19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x8d5a));
        // CB 8E 01A4
        gbc.setState(0xd1a4, 0x2477, 0x8580, 0xe7e3, 0x4db1, 0x9d2c, 0x1, 0x1);
        gbc.writeMem(0x9d2c, { 0xb2 });
        gbc.writeMem(0xd1a4, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x2477, gbc.sp());
        EXPECT(0xd1a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x9d2c));
        EXPECT(0xcb, gbc.readMem(0xd1a4));
        EXPECT(0x8e, gbc.readMem(0xd1a5));
        // CB 8E 01A5
        gbc.setState(0x1c7b, 0x936, 0xc950, 0xb04e, 0x4c6d, 0xc2fe, 0x0, 0x1);
        gbc.writeMem(0x1c7b, { 0xcb, 0x8e });
        gbc.writeMem(0xc2fe, { 0xfd });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x936, gbc.sp());
        EXPECT(0x1c7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0xc2fe));
        // CB 8E 01A6
        gbc.setState(0x9b4, 0xe848, 0x9590, 0xbf11, 0x3214, 0x9314, 0x0, 0x0);
        gbc.writeMem(0x9b4, { 0xcb, 0x8e });
        gbc.writeMem(0x9314, { 0x3b });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xe848, gbc.sp());
        EXPECT(0x9b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0x9314));
        // CB 8E 01A7
        gbc.setState(0x819e, 0x76ae, 0xe9a0, 0x46e, 0xcd98, 0x2469, 0x1, 0x0);
        gbc.writeMem(0x2469, { 0x89 });
        gbc.writeMem(0x819e, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x76ae, gbc.sp());
        EXPECT(0x81a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x819e));
        EXPECT(0x8e, gbc.readMem(0x819f));
        // CB 8E 01A8
        gbc.setState(0x16fd, 0x6e86, 0x22a0, 0x8d11, 0x4231, 0x4bfe, 0x1, 0x0);
        gbc.writeMem(0x16fd, { 0xcb, 0x8e });
        gbc.writeMem(0x4bfe, { 0x28 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x6e86, gbc.sp());
        EXPECT(0x16ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8E 01AA
        gbc.setState(0x5adb, 0xbb67, 0xd480, 0xe10c, 0xb663, 0xf2ac, 0x1, 0x0);
        gbc.writeMem(0x5adb, { 0xcb, 0x8e });
        gbc.writeMem(0xf2ac, { 0x2a });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xbb67, gbc.sp());
        EXPECT(0x5add, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x28, gbc.readMem(0xf2ac));
        // CB 8E 01AB
        gbc.setState(0xa089, 0x6c1d, 0x69c0, 0xfd36, 0xbb44, 0x52fb, 0x1, 0x1);
        gbc.writeMem(0x52fb, { 0xcd });
        gbc.writeMem(0xa089, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x6c1d, gbc.sp());
        EXPECT(0xa08b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa089));
        EXPECT(0x8e, gbc.readMem(0xa08a));
        // CB 8E 01AD
        gbc.setState(0x342e, 0x5049, 0x3b30, 0x7509, 0x3b05, 0xef8e, 0x0, 0x0);
        gbc.writeMem(0x342e, { 0xcb, 0x8e });
        gbc.writeMem(0xef8e, { 0xdd });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x5049, gbc.sp());
        EXPECT(0x3430, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0xef8e));
        // CB 8E 01AE
        gbc.setState(0xa162, 0x583a, 0x58d0, 0xacfd, 0x4cfa, 0xc008, 0x0, 0x0);
        gbc.writeMem(0xa162, { 0xcb, 0x8e });
        gbc.writeMem(0xc008, { 0xa });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x583a, gbc.sp());
        EXPECT(0xa164, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa162));
        EXPECT(0x8e, gbc.readMem(0xa163));
        EXPECT(0x8, gbc.readMem(0xc008));
        // CB 8E 01AF
        gbc.setState(0xecdd, 0x9cc2, 0xd660, 0x9799, 0x59fa, 0xc912, 0x1, 0x1);
        gbc.writeMem(0xc912, { 0xd7 });
        gbc.writeMem(0xecdd, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x9cc2, gbc.sp());
        EXPECT(0xecdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xc912));
        EXPECT(0xcb, gbc.readMem(0xecdd));
        EXPECT(0x8e, gbc.readMem(0xecde));
        // CB 8E 01B0
        gbc.setState(0x67b5, 0xb346, 0xe30, 0x8550, 0x49cd, 0xa124, 0x1, 0x0);
        gbc.writeMem(0x67b5, { 0xcb, 0x8e });
        gbc.writeMem(0xa124, { 0xa5 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xb346, gbc.sp());
        EXPECT(0x67b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa5, gbc.readMem(0xa124));
        // CB 8E 01B1
        gbc.setState(0x489e, 0xc85e, 0x31f0, 0x66dc, 0xc070, 0xbfbf, 0x0, 0x0);
        gbc.writeMem(0x489e, { 0xcb, 0x8e });
        gbc.writeMem(0xbfbf, { 0x93 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xc85e, gbc.sp());
        EXPECT(0x48a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xbfbf));
        // CB 8E 01B2
        gbc.setState(0xc94a, 0x4575, 0x5390, 0x798f, 0x4be9, 0xddef, 0x0, 0x1);
        gbc.writeMem(0xc94a, { 0xcb, 0x8e });
        gbc.writeMem(0xddef, { 0x32 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x4575, gbc.sp());
        EXPECT(0xc94c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc94a));
        EXPECT(0x8e, gbc.readMem(0xc94b));
        EXPECT(0x30, gbc.readMem(0xddef));
        // CB 8E 01B3
        gbc.setState(0x4485, 0xc434, 0x13d0, 0x31c9, 0xcee8, 0x9143, 0x1, 0x1);
        gbc.writeMem(0x4485, { 0xcb, 0x8e });
        gbc.writeMem(0x9143, { 0xeb });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xc434, gbc.sp());
        EXPECT(0x4487, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x9143));
        // CB 8E 01B4
        gbc.setState(0x6e03, 0x6504, 0xb000, 0x6ef4, 0x554e, 0xb2ae, 0x1, 0x1);
        gbc.writeMem(0x6e03, { 0xcb, 0x8e });
        gbc.writeMem(0xb2ae, { 0xd6 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x6504, gbc.sp());
        EXPECT(0x6e05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xb2ae));
        // CB 8E 01B6
        gbc.setState(0x649, 0xb87f, 0xeae0, 0x5028, 0x936b, 0xbcc0, 0x1, 0x1);
        gbc.writeMem(0x649, { 0xcb, 0x8e });
        gbc.writeMem(0xbcc0, { 0x4c });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xb87f, gbc.sp());
        EXPECT(0x64b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xbcc0));
        // CB 8E 01B7
        gbc.setState(0x6419, 0x86aa, 0x2a80, 0x97b1, 0x6d93, 0xeee4, 0x0, 0x0);
        gbc.writeMem(0x6419, { 0xcb, 0x8e });
        gbc.writeMem(0xeee4, { 0x99 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x86aa, gbc.sp());
        EXPECT(0x641b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xeee4));
        // CB 8E 01B8
        gbc.setState(0x98de, 0x7afe, 0x9700, 0x1274, 0x41db, 0xcf43, 0x1, 0x1);
        gbc.writeMem(0x98de, { 0xcb, 0x8e });
        gbc.writeMem(0xcf43, { 0x28 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x7afe, gbc.sp());
        EXPECT(0x98e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98de));
        EXPECT(0x8e, gbc.readMem(0x98df));
        EXPECT(0x28, gbc.readMem(0xcf43));
        // CB 8E 01B9
        gbc.setState(0xca67, 0xdf3b, 0x6bd0, 0x33fd, 0x1899, 0xc3b1, 0x0, 0x0);
        gbc.writeMem(0xc3b1, { 0x4c });
        gbc.writeMem(0xca67, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xdf3b, gbc.sp());
        EXPECT(0xca69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xc3b1));
        EXPECT(0xcb, gbc.readMem(0xca67));
        EXPECT(0x8e, gbc.readMem(0xca68));
        // CB 8E 01BE
        gbc.setState(0x9f34, 0x3251, 0x15c0, 0x4320, 0xefe5, 0xf4aa, 0x1, 0x0);
        gbc.writeMem(0x9f34, { 0xcb, 0x8e });
        gbc.writeMem(0xf4aa, { 0x5e });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x3251, gbc.sp());
        EXPECT(0x9f36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f34));
        EXPECT(0x8e, gbc.readMem(0x9f35));
        EXPECT(0x5c, gbc.readMem(0xf4aa));
        // CB 8E 01BF
        gbc.setState(0xe408, 0x7763, 0x15f0, 0x40b, 0x9e4e, 0xa829, 0x0, 0x1);
        gbc.writeMem(0xa829, { 0x64 });
        gbc.writeMem(0xe408, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x7763, gbc.sp());
        EXPECT(0xe40a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xa829));
        EXPECT(0xcb, gbc.readMem(0xe408));
        EXPECT(0x8e, gbc.readMem(0xe409));
        // CB 8E 01C0
        gbc.setState(0xce5b, 0x32f1, 0xe1c0, 0x6086, 0x974d, 0xb1dc, 0x1, 0x1);
        gbc.writeMem(0xb1dc, { 0xd6 });
        gbc.writeMem(0xce5b, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x32f1, gbc.sp());
        EXPECT(0xce5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xb1dc));
        EXPECT(0xcb, gbc.readMem(0xce5b));
        EXPECT(0x8e, gbc.readMem(0xce5c));
        // CB 8E 01C1
        gbc.setState(0xc1ee, 0x5e42, 0x5740, 0xe227, 0x62c4, 0xb22f, 0x1, 0x1);
        gbc.writeMem(0xb22f, { 0xd });
        gbc.writeMem(0xc1ee, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x5e42, gbc.sp());
        EXPECT(0xc1f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0xb22f));
        EXPECT(0xcb, gbc.readMem(0xc1ee));
        EXPECT(0x8e, gbc.readMem(0xc1ef));
        // CB 8E 01C2
        gbc.setState(0x8b10, 0xf418, 0x3370, 0xf29f, 0x2bf9, 0x9258, 0x0, 0x0);
        gbc.writeMem(0x8b10, { 0xcb, 0x8e });
        gbc.writeMem(0x9258, { 0x71 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xf418, gbc.sp());
        EXPECT(0x8b12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b10));
        EXPECT(0x8e, gbc.readMem(0x8b11));
        EXPECT(0x71, gbc.readMem(0x9258));
        // CB 8E 01C3
        gbc.setState(0x2347, 0xcf59, 0x2ec0, 0x8b84, 0x4b3b, 0xceda, 0x0, 0x0);
        gbc.writeMem(0x2347, { 0xcb, 0x8e });
        gbc.writeMem(0xceda, { 0xb7 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xcf59, gbc.sp());
        EXPECT(0x2349, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xceda));
        // CB 8E 01C4
        gbc.setState(0xd2dc, 0x45a6, 0x5860, 0x3124, 0x45bb, 0xc77d, 0x1, 0x0);
        gbc.writeMem(0xc77d, { 0xe4 });
        gbc.writeMem(0xd2dc, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x45a6, gbc.sp());
        EXPECT(0xd2de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe4, gbc.readMem(0xc77d));
        EXPECT(0xcb, gbc.readMem(0xd2dc));
        EXPECT(0x8e, gbc.readMem(0xd2dd));
        // CB 8E 01C5
        gbc.setState(0x3a75, 0x217e, 0x1430, 0x6c57, 0x104b, 0x7129, 0x0, 0x0);
        gbc.writeMem(0x3a75, { 0xcb, 0x8e });
        gbc.writeMem(0x7129, { 0x70 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x217e, gbc.sp());
        EXPECT(0x3a77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8E 01C6
        gbc.setState(0x55d, 0x159c, 0x71f0, 0x44a, 0xbf49, 0x5131, 0x1, 0x1);
        gbc.writeMem(0x55d, { 0xcb, 0x8e });
        gbc.writeMem(0x5131, { 0x8c });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x159c, gbc.sp());
        EXPECT(0x55f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8E 01C7
        gbc.setState(0xba69, 0x10e9, 0x3ca0, 0x3384, 0xfd95, 0x423, 0x0, 0x1);
        gbc.writeMem(0x423, { 0xa0 });
        gbc.writeMem(0xba69, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x10e9, gbc.sp());
        EXPECT(0xba6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba69));
        EXPECT(0x8e, gbc.readMem(0xba6a));
        // CB 8E 01C8
        gbc.setState(0x7291, 0xc5d4, 0x7a50, 0xd5a6, 0xf8d2, 0xbab4, 0x0, 0x0);
        gbc.writeMem(0x7291, { 0xcb, 0x8e });
        gbc.writeMem(0xbab4, { 0xfc });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xc5d4, gbc.sp());
        EXPECT(0x7293, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfc, gbc.readMem(0xbab4));
        // CB 8E 01C9
        gbc.setState(0xe93c, 0xbc2b, 0x2c20, 0xa45f, 0xbc57, 0x130, 0x0, 0x1);
        gbc.writeMem(0x130, { 0x7d });
        gbc.writeMem(0xe93c, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xbc2b, gbc.sp());
        EXPECT(0xe93e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe93c));
        EXPECT(0x8e, gbc.readMem(0xe93d));
        // CB 8E 01CA
        gbc.setState(0x39e9, 0x339b, 0x5430, 0xb7ae, 0x97b5, 0x7c4f, 0x0, 0x0);
        gbc.writeMem(0x39e9, { 0xcb, 0x8e });
        gbc.writeMem(0x7c4f, { 0xa9 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x339b, gbc.sp());
        EXPECT(0x39eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8E 01CD
        gbc.setState(0x21b7, 0x6aa5, 0x5220, 0x49d7, 0x16eb, 0x2659, 0x1, 0x0);
        gbc.writeMem(0x21b7, { 0xcb, 0x8e });
        gbc.writeMem(0x2659, { 0x40 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x6aa5, gbc.sp());
        EXPECT(0x21b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8E 01CF
        gbc.setState(0xa922, 0x995e, 0xd930, 0xbc60, 0xb584, 0xaece, 0x1, 0x0);
        gbc.writeMem(0xa922, { 0xcb, 0x8e });
        gbc.writeMem(0xaece, { 0x12 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x995e, gbc.sp());
        EXPECT(0xa924, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa922));
        EXPECT(0x8e, gbc.readMem(0xa923));
        EXPECT(0x10, gbc.readMem(0xaece));
        // CB 8E 01D2
        gbc.setState(0xc9c2, 0x4598, 0x2860, 0x71fc, 0x1d2, 0x6c65, 0x1, 0x0);
        gbc.writeMem(0x6c65, { 0x25 });
        gbc.writeMem(0xc9c2, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x4598, gbc.sp());
        EXPECT(0xc9c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9c2));
        EXPECT(0x8e, gbc.readMem(0xc9c3));
        // CB 8E 01D3
        gbc.setState(0xd5e5, 0xabff, 0xa3d0, 0xc497, 0xa535, 0x7458, 0x1, 0x0);
        gbc.writeMem(0x7458, { 0xa8 });
        gbc.writeMem(0xd5e5, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xabff, gbc.sp());
        EXPECT(0xd5e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5e5));
        EXPECT(0x8e, gbc.readMem(0xd5e6));
        // CB 8E 01D6
        gbc.setState(0x96f, 0x341f, 0x7220, 0x317b, 0x8ca3, 0xd4c7, 0x1, 0x1);
        gbc.writeMem(0x96f, { 0xcb, 0x8e });
        gbc.writeMem(0xd4c7, { 0xce });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x341f, gbc.sp());
        EXPECT(0x971, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcc, gbc.readMem(0xd4c7));
        // CB 8E 01DA
        gbc.setState(0x66c9, 0x2808, 0x7990, 0x6590, 0xf5e0, 0xce77, 0x0, 0x0);
        gbc.writeMem(0x66c9, { 0xcb, 0x8e });
        gbc.writeMem(0xce77, { 0xd });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x2808, gbc.sp());
        EXPECT(0x66cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0xce77));
        // CB 8E 01DC
        gbc.setState(0x8f62, 0x9226, 0x7710, 0xaa66, 0xdb23, 0x45a2, 0x1, 0x0);
        gbc.writeMem(0x45a2, { 0xf4 });
        gbc.writeMem(0x8f62, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x9226, gbc.sp());
        EXPECT(0x8f64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f62));
        EXPECT(0x8e, gbc.readMem(0x8f63));
        // CB 8E 01DD
        gbc.setState(0x31b9, 0x4a64, 0xe620, 0xa60a, 0xb9c5, 0xc9e6, 0x0, 0x0);
        gbc.writeMem(0x31b9, { 0xcb, 0x8e });
        gbc.writeMem(0xc9e6, { 0x4a });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x4a64, gbc.sp());
        EXPECT(0x31bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xc9e6));
        // CB 8E 01DE
        gbc.setState(0x270f, 0xff7d, 0x8dd0, 0xfc1f, 0x2f34, 0x67de, 0x1, 0x1);
        gbc.writeMem(0x270f, { 0xcb, 0x8e });
        gbc.writeMem(0x67de, { 0x81 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xff7d, gbc.sp());
        EXPECT(0x2711, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8E 01E0
        gbc.setState(0xc928, 0x8306, 0x2da0, 0xa474, 0x1c6b, 0xbfbf, 0x0, 0x0);
        gbc.writeMem(0xbfbf, { 0x93 });
        gbc.writeMem(0xc928, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x8306, gbc.sp());
        EXPECT(0xc92a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xbfbf));
        EXPECT(0xcb, gbc.readMem(0xc928));
        EXPECT(0x8e, gbc.readMem(0xc929));
        // CB 8E 01E2
        gbc.setState(0x87ff, 0xeae1, 0x6840, 0x5284, 0x6f5c, 0xdae3, 0x1, 0x0);
        gbc.writeMem(0x87ff, { 0xcb, 0x8e });
        gbc.writeMem(0xdae3, { 0x32 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xeae1, gbc.sp());
        EXPECT(0x8801, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87ff));
        EXPECT(0x8e, gbc.readMem(0x8800));
        EXPECT(0x30, gbc.readMem(0xdae3));
        // CB 8E 01E3
        gbc.setState(0x6a42, 0x1525, 0x5e20, 0x11a4, 0xae4c, 0xb162, 0x1, 0x0);
        gbc.writeMem(0x6a42, { 0xcb, 0x8e });
        gbc.writeMem(0xb162, { 0x20 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x1525, gbc.sp());
        EXPECT(0x6a44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xb162));
        // CB 8E 01E4
        gbc.setState(0x9e77, 0x7fd8, 0x92e0, 0xe8bd, 0x3c7c, 0xb74c, 0x0, 0x0);
        gbc.writeMem(0x9e77, { 0xcb, 0x8e });
        gbc.writeMem(0xb74c, { 0x12 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x7fd8, gbc.sp());
        EXPECT(0x9e79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e77));
        EXPECT(0x8e, gbc.readMem(0x9e78));
        EXPECT(0x10, gbc.readMem(0xb74c));
        // CB 8E 01E6
        gbc.setState(0x2267, 0x10d0, 0xeb50, 0xaf45, 0xa4e6, 0x94f8, 0x1, 0x0);
        gbc.writeMem(0x2267, { 0xcb, 0x8e });
        gbc.writeMem(0x94f8, { 0x81 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x10d0, gbc.sp());
        EXPECT(0x2269, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x94f8));
        // CB 8E 01E7
        gbc.setState(0x6249, 0xbd3d, 0xb1a0, 0x930b, 0xa957, 0x6d96, 0x0, 0x1);
        gbc.writeMem(0x6249, { 0xcb, 0x8e });
        gbc.writeMem(0x6d96, { 0xad });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xbd3d, gbc.sp());
        EXPECT(0x624b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8E 01EB
        gbc.setState(0xa0ab, 0xf817, 0x2560, 0x6fb9, 0x3c9b, 0xfc13, 0x0, 0x1);
        gbc.writeMem(0xa0ab, { 0xcb, 0x8e });
        gbc.writeMem(0xfc13, { 0x92 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xf817, gbc.sp());
        EXPECT(0xa0ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0ab));
        EXPECT(0x8e, gbc.readMem(0xa0ac));
        EXPECT(0x90, gbc.readMem(0xfc13));
        // CB 8E 01EC
        gbc.setState(0x5326, 0x11bc, 0x4ab0, 0xc589, 0x1337, 0xc4b6, 0x0, 0x0);
        gbc.writeMem(0x5326, { 0xcb, 0x8e });
        gbc.writeMem(0xc4b6, { 0xe7 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x11bc, gbc.sp());
        EXPECT(0x5328, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xc4b6));
        // CB 8E 01EF
        gbc.setState(0xc185, 0xd41b, 0xab70, 0x4cde, 0x7bcb, 0xd91a, 0x0, 0x0);
        gbc.writeMem(0xc185, { 0xcb, 0x8e });
        gbc.writeMem(0xd91a, { 0xa4 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xd41b, gbc.sp());
        EXPECT(0xc187, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc185));
        EXPECT(0x8e, gbc.readMem(0xc186));
        EXPECT(0xa4, gbc.readMem(0xd91a));
        // CB 8E 01F1
        gbc.setState(0xa620, 0xac21, 0xf0f0, 0x5983, 0x1bc4, 0xf133, 0x0, 0x0);
        gbc.writeMem(0xa620, { 0xcb, 0x8e });
        gbc.writeMem(0xf133, { 0x86 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xac21, gbc.sp());
        EXPECT(0xa622, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa620));
        EXPECT(0x8e, gbc.readMem(0xa621));
        EXPECT(0x84, gbc.readMem(0xf133));
        // CB 8E 01F2
        gbc.setState(0x533, 0x36e6, 0xbf30, 0x1b86, 0xd817, 0xbb4c, 0x0, 0x0);
        gbc.writeMem(0x533, { 0xcb, 0x8e });
        gbc.writeMem(0xbb4c, { 0xa6 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x36e6, gbc.sp());
        EXPECT(0x535, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xbb4c));
        // CB 8E 01F3
        gbc.setState(0x7e02, 0x90b5, 0x82f0, 0xe06a, 0x9e4c, 0x9b19, 0x1, 0x0);
        gbc.writeMem(0x7e02, { 0xcb, 0x8e });
        gbc.writeMem(0x9b19, { 0x9e });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x90b5, gbc.sp());
        EXPECT(0x7e04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x9b19));
        // CB 8E 01F4
        gbc.setState(0xa7bf, 0xf808, 0x6b40, 0xfd11, 0x1a37, 0x4662, 0x1, 0x1);
        gbc.writeMem(0x4662, { 0xfc });
        gbc.writeMem(0xa7bf, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xf808, gbc.sp());
        EXPECT(0xa7c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7bf));
        EXPECT(0x8e, gbc.readMem(0xa7c0));
        // CB 8E 01F5
        gbc.setState(0xb7cf, 0x54cc, 0x6490, 0xb411, 0x2788, 0xba51, 0x0, 0x1);
        gbc.writeMem(0xb7cf, { 0xcb, 0x8e });
        gbc.writeMem(0xba51, { 0x87 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x54cc, gbc.sp());
        EXPECT(0xb7d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7cf));
        EXPECT(0x8e, gbc.readMem(0xb7d0));
        EXPECT(0x85, gbc.readMem(0xba51));
        // CB 8E 01F7
        gbc.setState(0xc172, 0xe7d, 0x5200, 0x9bcf, 0x7ce0, 0xcfe0, 0x0, 0x1);
        gbc.writeMem(0xc172, { 0xcb, 0x8e });
        gbc.writeMem(0xcfe0, { 0xfe });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xe7d, gbc.sp());
        EXPECT(0xc174, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc172));
        EXPECT(0x8e, gbc.readMem(0xc173));
        EXPECT(0xfc, gbc.readMem(0xcfe0));
        // CB 8E 01F8
        gbc.setState(0x7205, 0x21e4, 0xb2c0, 0x95f9, 0x2451, 0x1512, 0x0, 0x0);
        gbc.writeMem(0x1512, { 0xb1 });
        gbc.writeMem(0x7205, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x21e4, gbc.sp());
        EXPECT(0x7207, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8E 01F9
        gbc.setState(0x7be0, 0xa7b7, 0xe2e0, 0x3d1a, 0x4ae7, 0xfcb6, 0x1, 0x0);
        gbc.writeMem(0x7be0, { 0xcb, 0x8e });
        gbc.writeMem(0xfcb6, { 0x45 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xa7b7, gbc.sp());
        EXPECT(0x7be2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0xfcb6));
        // CB 8E 01FA
        gbc.setState(0x371c, 0xb7e1, 0xe390, 0x4155, 0xa135, 0x898e, 0x0, 0x1);
        gbc.writeMem(0x371c, { 0xcb, 0x8e });
        gbc.writeMem(0x898e, { 0x3f });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xb7e1, gbc.sp());
        EXPECT(0x371e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3d, gbc.readMem(0x898e));
        // CB 8E 01FB
        gbc.setState(0xbfcc, 0xe549, 0x8a60, 0x6512, 0x7298, 0xe857, 0x0, 0x1);
        gbc.writeMem(0xbfcc, { 0xcb, 0x8e });
        gbc.writeMem(0xe857, { 0x56 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xe549, gbc.sp());
        EXPECT(0xbfce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfcc));
        EXPECT(0x8e, gbc.readMem(0xbfcd));
        EXPECT(0x54, gbc.readMem(0xe857));
        // CB 8E 01FC
        gbc.setState(0x7178, 0xe3f4, 0xc180, 0xa60c, 0x27f9, 0x84c1, 0x0, 0x0);
        gbc.writeMem(0x7178, { 0xcb, 0x8e });
        gbc.writeMem(0x84c1, { 0xfb });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xe3f4, gbc.sp());
        EXPECT(0x717a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf9, gbc.readMem(0x84c1));
        // CB 8E 01FD
        gbc.setState(0x8959, 0xe9cd, 0x54a0, 0x38da, 0x28b6, 0xdf2e, 0x1, 0x0);
        gbc.writeMem(0x8959, { 0xcb, 0x8e });
        gbc.writeMem(0xdf2e, { 0xa6 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xe9cd, gbc.sp());
        EXPECT(0x895b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8959));
        EXPECT(0x8e, gbc.readMem(0x895a));
        EXPECT(0xa4, gbc.readMem(0xdf2e));
        // CB 8E 01FF
        gbc.setState(0xa60a, 0x8d16, 0x3090, 0x2ab8, 0xc526, 0x410a, 0x1, 0x1);
        gbc.writeMem(0x410a, { 0x14 });
        gbc.writeMem(0xa60a, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x8d16, gbc.sp());
        EXPECT(0xa60c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa60a));
        EXPECT(0x8e, gbc.readMem(0xa60b));
        // CB 8E 0202
        gbc.setState(0x25af, 0xeee1, 0xb3d0, 0x115c, 0x1208, 0x9b4b, 0x1, 0x1);
        gbc.writeMem(0x25af, { 0xcb, 0x8e });
        gbc.writeMem(0x9b4b, { 0x88 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xeee1, gbc.sp());
        EXPECT(0x25b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x9b4b));
        // CB 8E 0203
        gbc.setState(0x26cd, 0x89af, 0xb60, 0xaa90, 0xefed, 0xe57b, 0x0, 0x1);
        gbc.writeMem(0x26cd, { 0xcb, 0x8e });
        gbc.writeMem(0xe57b, { 0x99 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x89af, gbc.sp());
        EXPECT(0x26cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xe57b));
        // CB 8E 0204
        gbc.setState(0xe5bf, 0x7748, 0x2970, 0x1359, 0xe7a5, 0xf024, 0x1, 0x1);
        gbc.writeMem(0xe5bf, { 0xcb, 0x8e });
        gbc.writeMem(0xf024, { 0xab });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x7748, gbc.sp());
        EXPECT(0xe5c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5bf));
        EXPECT(0x8e, gbc.readMem(0xe5c0));
        EXPECT(0xa9, gbc.readMem(0xf024));
        // CB 8E 0205
        gbc.setState(0x9984, 0xdd4d, 0xb2b0, 0x8871, 0xf6c7, 0x99ae, 0x0, 0x1);
        gbc.writeMem(0x9984, { 0xcb, 0x8e });
        gbc.writeMem(0x99ae, { 0xbb });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xdd4d, gbc.sp());
        EXPECT(0x9986, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9984));
        EXPECT(0x8e, gbc.readMem(0x9985));
        EXPECT(0xb9, gbc.readMem(0x99ae));
        // CB 8E 0207
        gbc.setState(0xef2b, 0x4442, 0xd890, 0xd31c, 0x1a75, 0x9de5, 0x0, 0x0);
        gbc.writeMem(0x9de5, { 0x32 });
        gbc.writeMem(0xef2b, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x4442, gbc.sp());
        EXPECT(0xef2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0x9de5));
        EXPECT(0xcb, gbc.readMem(0xef2b));
        EXPECT(0x8e, gbc.readMem(0xef2c));
        // CB 8E 0209
        gbc.setState(0x938, 0x905a, 0x4870, 0xce54, 0x9b5f, 0xb089, 0x0, 0x0);
        gbc.writeMem(0x938, { 0xcb, 0x8e });
        gbc.writeMem(0xb089, { 0x17 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x905a, gbc.sp());
        EXPECT(0x93a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xb089));
        // CB 8E 020A
        gbc.setState(0x7eb2, 0x56c4, 0xaed0, 0x86d9, 0x8aa0, 0x8b25, 0x1, 0x0);
        gbc.writeMem(0x7eb2, { 0xcb, 0x8e });
        gbc.writeMem(0x8b25, { 0x5b });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x56c4, gbc.sp());
        EXPECT(0x7eb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x59, gbc.readMem(0x8b25));
        // CB 8E 020B
        gbc.setState(0x3000, 0xb588, 0x51d0, 0x9d9f, 0x3ba8, 0xf80b, 0x1, 0x0);
        gbc.writeMem(0x3000, { 0xcb, 0x8e });
        gbc.writeMem(0xf80b, { 0x5f });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xb588, gbc.sp());
        EXPECT(0x3002, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xf80b));
        // CB 8E 020C
        gbc.setState(0xbb21, 0x9366, 0xff20, 0xeece, 0x16e0, 0xa146, 0x1, 0x0);
        gbc.writeMem(0xa146, { 0xb4 });
        gbc.writeMem(0xbb21, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x9366, gbc.sp());
        EXPECT(0xbb23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0xa146));
        EXPECT(0xcb, gbc.readMem(0xbb21));
        EXPECT(0x8e, gbc.readMem(0xbb22));
        // CB 8E 020D
        gbc.setState(0x6acd, 0xa19e, 0xa6c0, 0xbd96, 0x68b8, 0xd19d, 0x0, 0x1);
        gbc.writeMem(0x6acd, { 0xcb, 0x8e });
        gbc.writeMem(0xd19d, { 0xb8 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xa19e, gbc.sp());
        EXPECT(0x6acf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0xd19d));
        // CB 8E 020F
        gbc.setState(0x998, 0x6404, 0x46a0, 0x9d1d, 0xdef0, 0x585e, 0x0, 0x0);
        gbc.writeMem(0x998, { 0xcb, 0x8e });
        gbc.writeMem(0x585e, { 0x38 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x6404, gbc.sp());
        EXPECT(0x99a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8E 0210
        gbc.setState(0x86f1, 0x8347, 0x85d0, 0x807f, 0x42cc, 0xa1d7, 0x1, 0x1);
        gbc.writeMem(0x86f1, { 0xcb, 0x8e });
        gbc.writeMem(0xa1d7, { 0xd2 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x8347, gbc.sp());
        EXPECT(0x86f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86f1));
        EXPECT(0x8e, gbc.readMem(0x86f2));
        EXPECT(0xd0, gbc.readMem(0xa1d7));
        // CB 8E 0211
        gbc.setState(0xbc55, 0x70d5, 0xdd30, 0xa06, 0x5f8d, 0x9c26, 0x1, 0x0);
        gbc.writeMem(0x9c26, { 0x5d });
        gbc.writeMem(0xbc55, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x70d5, gbc.sp());
        EXPECT(0xbc57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x9c26));
        EXPECT(0xcb, gbc.readMem(0xbc55));
        EXPECT(0x8e, gbc.readMem(0xbc56));
        // CB 8E 0212
        gbc.setState(0x85fe, 0x5e58, 0xefa0, 0x9079, 0x7cb2, 0xca66, 0x1, 0x1);
        gbc.writeMem(0x85fe, { 0xcb, 0x8e });
        gbc.writeMem(0xca66, { 0xd7 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x5e58, gbc.sp());
        EXPECT(0x8600, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85fe));
        EXPECT(0x8e, gbc.readMem(0x85ff));
        EXPECT(0xd5, gbc.readMem(0xca66));
        // CB 8E 0213
        gbc.setState(0x395a, 0x5ce0, 0xd3b0, 0x8940, 0x7ea5, 0xab37, 0x0, 0x0);
        gbc.writeMem(0x395a, { 0xcb, 0x8e });
        gbc.writeMem(0xab37, { 0x86 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x5ce0, gbc.sp());
        EXPECT(0x395c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0xab37));
        // CB 8E 0214
        gbc.setState(0x72be, 0x8415, 0x5280, 0x997e, 0xad30, 0xf5c7, 0x1, 0x1);
        gbc.writeMem(0x72be, { 0xcb, 0x8e });
        gbc.writeMem(0xf5c7, { 0xce });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x8415, gbc.sp());
        EXPECT(0x72c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcc, gbc.readMem(0xf5c7));
        // CB 8E 0216
        gbc.setState(0x55c7, 0x8f53, 0x6e0, 0x613a, 0x4fba, 0x7d32, 0x1, 0x1);
        gbc.writeMem(0x55c7, { 0xcb, 0x8e });
        gbc.writeMem(0x7d32, { 0xa9 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x8f53, gbc.sp());
        EXPECT(0x55c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8E 0217
        gbc.setState(0x4e45, 0xae49, 0xa1c0, 0x377, 0x7447, 0xed2e, 0x0, 0x0);
        gbc.writeMem(0x4e45, { 0xcb, 0x8e });
        gbc.writeMem(0xed2e, { 0x60 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xae49, gbc.sp());
        EXPECT(0x4e47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0xed2e));
        // CB 8E 0218
        gbc.setState(0x719b, 0xed82, 0x7370, 0x38cf, 0x2375, 0xf177, 0x0, 0x0);
        gbc.writeMem(0x719b, { 0xcb, 0x8e });
        gbc.writeMem(0xf177, { 0x2d });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xed82, gbc.sp());
        EXPECT(0x719d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xf177));
        // CB 8E 0219
        gbc.setState(0xde59, 0x15e7, 0xbb80, 0xcd58, 0x4b8c, 0x8535, 0x0, 0x1);
        gbc.writeMem(0x8535, { 0x47 });
        gbc.writeMem(0xde59, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x15e7, gbc.sp());
        EXPECT(0xde5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0x8535));
        EXPECT(0xcb, gbc.readMem(0xde59));
        EXPECT(0x8e, gbc.readMem(0xde5a));
        // CB 8E 021A
        gbc.setState(0x84e6, 0xd6bf, 0x5440, 0x97ef, 0x2085, 0x52f5, 0x1, 0x0);
        gbc.writeMem(0x52f5, { 0x58 });
        gbc.writeMem(0x84e6, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xd6bf, gbc.sp());
        EXPECT(0x84e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84e6));
        EXPECT(0x8e, gbc.readMem(0x84e7));
        // CB 8E 021B
        gbc.setState(0x1531, 0x24bc, 0x20, 0xd04, 0x3e48, 0xd942, 0x0, 0x1);
        gbc.writeMem(0x1531, { 0xcb, 0x8e });
        gbc.writeMem(0xd942, { 0xfe });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x24bc, gbc.sp());
        EXPECT(0x1533, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfc, gbc.readMem(0xd942));
        // CB 8E 021C
        gbc.setState(0x237b, 0x4ea, 0xb3c0, 0x3467, 0x8824, 0x54fa, 0x1, 0x0);
        gbc.writeMem(0x237b, { 0xcb, 0x8e });
        gbc.writeMem(0x54fa, { 0xe4 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x4ea, gbc.sp());
        EXPECT(0x237d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8E 021D
        gbc.setState(0xb42f, 0xc38c, 0x16f0, 0x14e1, 0x6f6f, 0x2a60, 0x1, 0x0);
        gbc.writeMem(0x2a60, { 0x81 });
        gbc.writeMem(0xb42f, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xc38c, gbc.sp());
        EXPECT(0xb431, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb42f));
        EXPECT(0x8e, gbc.readMem(0xb430));
        // CB 8E 021F
        gbc.setState(0x8004, 0x7734, 0xc6c0, 0x357a, 0x4ce1, 0xb9c9, 0x1, 0x0);
        gbc.writeMem(0x8004, { 0xcb, 0x8e });
        gbc.writeMem(0xb9c9, { 0x31 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x7734, gbc.sp());
        EXPECT(0x8006, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8004));
        EXPECT(0x8e, gbc.readMem(0x8005));
        EXPECT(0x31, gbc.readMem(0xb9c9));
        // CB 8E 0221
        gbc.setState(0xde1, 0x33df, 0xa340, 0x8ef3, 0x691c, 0x6953, 0x0, 0x0);
        gbc.writeMem(0xde1, { 0xcb, 0x8e });
        gbc.writeMem(0x6953, { 0xfc });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x33df, gbc.sp());
        EXPECT(0xde3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8E 0225
        gbc.setState(0x8023, 0x5d3e, 0xeed0, 0xc664, 0x1d9, 0xd0fd, 0x1, 0x0);
        gbc.writeMem(0x8023, { 0xcb, 0x8e });
        gbc.writeMem(0xd0fd, { 0xf7 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x5d3e, gbc.sp());
        EXPECT(0x8025, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8023));
        EXPECT(0x8e, gbc.readMem(0x8024));
        EXPECT(0xf5, gbc.readMem(0xd0fd));
        // CB 8E 0226
        gbc.setState(0x4c1c, 0x54e2, 0x6f00, 0x622c, 0x77ec, 0x33d8, 0x0, 0x0);
        gbc.writeMem(0x33d8, { 0x1d });
        gbc.writeMem(0x4c1c, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x54e2, gbc.sp());
        EXPECT(0x4c1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8E 0228
        gbc.setState(0x6640, 0xe5c7, 0x2200, 0xdec0, 0xae6a, 0xbff2, 0x1, 0x1);
        gbc.writeMem(0x6640, { 0xcb, 0x8e });
        gbc.writeMem(0xbff2, { 0xcb });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xe5c7, gbc.sp());
        EXPECT(0x6642, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xbff2));
        // CB 8E 022B
        gbc.setState(0x19da, 0x728a, 0xbe80, 0xf389, 0xcf32, 0xa55b, 0x0, 0x1);
        gbc.writeMem(0x19da, { 0xcb, 0x8e });
        gbc.writeMem(0xa55b, { 0x18 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x728a, gbc.sp());
        EXPECT(0x19dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0xa55b));
        // CB 8E 022C
        gbc.setState(0x34a6, 0x8fa1, 0x7440, 0x35dc, 0xee12, 0x9cca, 0x0, 0x0);
        gbc.writeMem(0x34a6, { 0xcb, 0x8e });
        gbc.writeMem(0x9cca, { 0x2c });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x8fa1, gbc.sp());
        EXPECT(0x34a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x9cca));
        // CB 8E 022D
        gbc.setState(0xa3c, 0xe61f, 0x310, 0x8acd, 0x2851, 0x6431, 0x0, 0x0);
        gbc.writeMem(0xa3c, { 0xcb, 0x8e });
        gbc.writeMem(0x6431, { 0x54 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xe61f, gbc.sp());
        EXPECT(0xa3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8E 022E
        gbc.setState(0x553b, 0xf04a, 0xf0d0, 0x8dee, 0x3a8b, 0xbc7c, 0x1, 0x1);
        gbc.writeMem(0x553b, { 0xcb, 0x8e });
        gbc.writeMem(0xbc7c, { 0x11 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xf04a, gbc.sp());
        EXPECT(0x553d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xbc7c));
        // CB 8E 022F
        gbc.setState(0x5ae6, 0xed30, 0xfe70, 0xaf90, 0x25d5, 0x926c, 0x1, 0x1);
        gbc.writeMem(0x5ae6, { 0xcb, 0x8e });
        gbc.writeMem(0x926c, { 0x4 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xed30, gbc.sp());
        EXPECT(0x5ae8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x926c));
        // CB 8E 0230
        gbc.setState(0xe2db, 0xeb, 0xadd0, 0xb946, 0x7166, 0xd4f6, 0x0, 0x1);
        gbc.writeMem(0xd4f6, { 0x91 });
        gbc.writeMem(0xe2db, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xeb, gbc.sp());
        EXPECT(0xe2dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xd4f6));
        EXPECT(0xcb, gbc.readMem(0xe2db));
        EXPECT(0x8e, gbc.readMem(0xe2dc));
        // CB 8E 0231
        gbc.setState(0x21ed, 0xb2f6, 0x4500, 0x1c5c, 0x9fa, 0x8d7f, 0x1, 0x1);
        gbc.writeMem(0x21ed, { 0xcb, 0x8e });
        gbc.writeMem(0x8d7f, { 0x4b });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xb2f6, gbc.sp());
        EXPECT(0x21ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x8d7f));
        // CB 8E 0234
        gbc.setState(0x551e, 0x7044, 0x1350, 0x6025, 0x8643, 0xaf4d, 0x0, 0x0);
        gbc.writeMem(0x551e, { 0xcb, 0x8e });
        gbc.writeMem(0xaf4d, { 0x8 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x7044, gbc.sp());
        EXPECT(0x5520, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0xaf4d));
        // CB 8E 0235
        gbc.setState(0xa7d6, 0x68c8, 0xa040, 0x4e8b, 0x3ec7, 0xc0d2, 0x1, 0x1);
        gbc.writeMem(0xa7d6, { 0xcb, 0x8e });
        gbc.writeMem(0xc0d2, { 0xb0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x68c8, gbc.sp());
        EXPECT(0xa7d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7d6));
        EXPECT(0x8e, gbc.readMem(0xa7d7));
        EXPECT(0xb0, gbc.readMem(0xc0d2));
        // CB 8E 0236
        gbc.setState(0xdbf7, 0xa03b, 0xecd0, 0xd0e9, 0x85f8, 0xe72b, 0x1, 0x0);
        gbc.writeMem(0xdbf7, { 0xcb, 0x8e });
        gbc.writeMem(0xe72b, { 0xfd });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xa03b, gbc.sp());
        EXPECT(0xdbf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbf7));
        EXPECT(0x8e, gbc.readMem(0xdbf8));
        EXPECT(0xfd, gbc.readMem(0xe72b));
        // CB 8E 0237
        gbc.setState(0xe94f, 0xdee6, 0x3b80, 0x7b08, 0xb2d5, 0xad68, 0x1, 0x1);
        gbc.writeMem(0xad68, { 0x11 });
        gbc.writeMem(0xe94f, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xdee6, gbc.sp());
        EXPECT(0xe951, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xad68));
        EXPECT(0xcb, gbc.readMem(0xe94f));
        EXPECT(0x8e, gbc.readMem(0xe950));
        // CB 8E 0238
        gbc.setState(0x8c11, 0x5ebd, 0xce30, 0x6ec9, 0xd708, 0x6bc9, 0x0, 0x0);
        gbc.writeMem(0x6bc9, { 0x3d });
        gbc.writeMem(0x8c11, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x5ebd, gbc.sp());
        EXPECT(0x8c13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c11));
        EXPECT(0x8e, gbc.readMem(0x8c12));
        // CB 8E 0239
        gbc.setState(0x745, 0xcc00, 0x75b0, 0x7ea1, 0x3800, 0x59cb, 0x0, 0x1);
        gbc.writeMem(0x745, { 0xcb, 0x8e });
        gbc.writeMem(0x59cb, { 0x1 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xcc00, gbc.sp());
        EXPECT(0x747, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8E 023A
        gbc.setState(0x18c7, 0x15dc, 0x28b0, 0xbe5e, 0xe0a0, 0x65a, 0x1, 0x1);
        gbc.writeMem(0x65a, { 0x24 });
        gbc.writeMem(0x18c7, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x15dc, gbc.sp());
        EXPECT(0x18c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8E 023C
        gbc.setState(0x1766, 0x6107, 0xbac0, 0xe256, 0x3034, 0xe6f0, 0x1, 0x0);
        gbc.writeMem(0x1766, { 0xcb, 0x8e });
        gbc.writeMem(0xe6f0, { 0x23 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x6107, gbc.sp());
        EXPECT(0x1768, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xe6f0));
        // CB 8E 023E
        gbc.setState(0x25f2, 0xecfe, 0x57f0, 0xd358, 0x7dd2, 0xf1c5, 0x1, 0x0);
        gbc.writeMem(0x25f2, { 0xcb, 0x8e });
        gbc.writeMem(0xf1c5, { 0x6e });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xecfe, gbc.sp());
        EXPECT(0x25f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xf1c5));
        // CB 8E 023F
        gbc.setState(0x2741, 0x56f5, 0x8bf0, 0x8db2, 0xb1e0, 0xc8a7, 0x1, 0x1);
        gbc.writeMem(0x2741, { 0xcb, 0x8e });
        gbc.writeMem(0xc8a7, { 0xa6 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x56f5, gbc.sp());
        EXPECT(0x2743, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xc8a7));
        // CB 8E 0240
        gbc.setState(0xc7fa, 0x1ae3, 0x7e20, 0x12cf, 0x5bd2, 0x2778, 0x0, 0x0);
        gbc.writeMem(0x2778, { 0x21 });
        gbc.writeMem(0xc7fa, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x1ae3, gbc.sp());
        EXPECT(0xc7fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7fa));
        EXPECT(0x8e, gbc.readMem(0xc7fb));
        // CB 8E 0241
        gbc.setState(0x6f1d, 0x24e0, 0x1b50, 0x1314, 0xa122, 0xa78a, 0x1, 0x0);
        gbc.writeMem(0x6f1d, { 0xcb, 0x8e });
        gbc.writeMem(0xa78a, { 0x3e });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x24e0, gbc.sp());
        EXPECT(0x6f1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xa78a));
        // CB 8E 0242
        gbc.setState(0x3753, 0x9ca, 0x5120, 0x46b, 0x4e2d, 0x403b, 0x0, 0x0);
        gbc.writeMem(0x3753, { 0xcb, 0x8e });
        gbc.writeMem(0x403b, { 0x4d });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x9ca, gbc.sp());
        EXPECT(0x3755, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8E 0243
        gbc.setState(0x392d, 0xd93c, 0xf790, 0x9b82, 0xf948, 0x9e88, 0x0, 0x1);
        gbc.writeMem(0x392d, { 0xcb, 0x8e });
        gbc.writeMem(0x9e88, { 0xe4 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xd93c, gbc.sp());
        EXPECT(0x392f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe4, gbc.readMem(0x9e88));
        // CB 8E 0245
        gbc.setState(0x16c7, 0xb1f3, 0x9c30, 0xd972, 0x685e, 0xf8e0, 0x1, 0x1);
        gbc.writeMem(0x16c7, { 0xcb, 0x8e });
        gbc.writeMem(0xf8e0, { 0x77 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xb1f3, gbc.sp());
        EXPECT(0x16c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xf8e0));
        // CB 8E 0246
        gbc.setState(0x7201, 0xcc62, 0x5e30, 0xe3ea, 0x5421, 0xe9e6, 0x0, 0x1);
        gbc.writeMem(0x7201, { 0xcb, 0x8e });
        gbc.writeMem(0xe9e6, { 0x9a });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xcc62, gbc.sp());
        EXPECT(0x7203, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xe9e6));
        // CB 8E 0247
        gbc.setState(0xb3e0, 0x3be, 0x830, 0x84f0, 0x4bb0, 0xedb0, 0x0, 0x1);
        gbc.writeMem(0xb3e0, { 0xcb, 0x8e });
        gbc.writeMem(0xedb0, { 0xa2 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x3be, gbc.sp());
        EXPECT(0xb3e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3e0));
        EXPECT(0x8e, gbc.readMem(0xb3e1));
        EXPECT(0xa0, gbc.readMem(0xedb0));
        // CB 8E 0248
        gbc.setState(0x87e4, 0x9f15, 0x5ba0, 0xeaa8, 0x1a4b, 0xb90f, 0x0, 0x0);
        gbc.writeMem(0x87e4, { 0xcb, 0x8e });
        gbc.writeMem(0xb90f, { 0xc5 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x9f15, gbc.sp());
        EXPECT(0x87e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87e4));
        EXPECT(0x8e, gbc.readMem(0x87e5));
        EXPECT(0xc5, gbc.readMem(0xb90f));
        // CB 8E 024A
        gbc.setState(0x3c32, 0x3a45, 0x6410, 0x9b9a, 0xcddf, 0x8757, 0x0, 0x0);
        gbc.writeMem(0x3c32, { 0xcb, 0x8e });
        gbc.writeMem(0x8757, { 0xc9 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x3a45, gbc.sp());
        EXPECT(0x3c34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x8757));
        // CB 8E 024B
        gbc.setState(0x264, 0x3e16, 0xa9f0, 0x7c0, 0x13d6, 0xd987, 0x0, 0x1);
        gbc.writeMem(0x264, { 0xcb, 0x8e });
        gbc.writeMem(0xd987, { 0x18 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x3e16, gbc.sp());
        EXPECT(0x266, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0xd987));
        // CB 8E 024C
        gbc.setState(0x26de, 0x12ae, 0x2870, 0x62fb, 0x961d, 0x82d3, 0x0, 0x1);
        gbc.writeMem(0x26de, { 0xcb, 0x8e });
        gbc.writeMem(0x82d3, { 0x70 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x12ae, gbc.sp());
        EXPECT(0x26e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0x82d3));
        // CB 8E 024E
        gbc.setState(0xc0ff, 0xbb84, 0x80, 0xed7f, 0x220c, 0xcc3f, 0x0, 0x0);
        gbc.writeMem(0xc0ff, { 0xcb, 0x8e });
        gbc.writeMem(0xcc3f, { 0x5f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xbb84, gbc.sp());
        EXPECT(0xc101, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0ff));
        EXPECT(0x8e, gbc.readMem(0xc100));
        EXPECT(0x5d, gbc.readMem(0xcc3f));
        // CB 8E 0250
        gbc.setState(0x5dc5, 0x3b01, 0x520, 0x4701, 0x259e, 0x8d39, 0x1, 0x1);
        gbc.writeMem(0x5dc5, { 0xcb, 0x8e });
        gbc.writeMem(0x8d39, { 0x39 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x3b01, gbc.sp());
        EXPECT(0x5dc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0x8d39));
        // CB 8E 0252
        gbc.setState(0x6548, 0x8295, 0xcdb0, 0xaa07, 0x89c5, 0x1e03, 0x0, 0x0);
        gbc.writeMem(0x1e03, { 0x91 });
        gbc.writeMem(0x6548, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x8295, gbc.sp());
        EXPECT(0x654a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8E 0253
        gbc.setState(0x6e16, 0xaab6, 0xd7c0, 0xec79, 0x4bdd, 0xb309, 0x0, 0x0);
        gbc.writeMem(0x6e16, { 0xcb, 0x8e });
        gbc.writeMem(0xb309, { 0x79 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xaab6, gbc.sp());
        EXPECT(0x6e18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xb309));
        // CB 8E 0254
        gbc.setState(0x5ced, 0x117d, 0x3f0, 0x669e, 0xd1c7, 0x7d92, 0x1, 0x1);
        gbc.writeMem(0x5ced, { 0xcb, 0x8e });
        gbc.writeMem(0x7d92, { 0xed });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x117d, gbc.sp());
        EXPECT(0x5cef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8E 0256
        gbc.setState(0x8ab3, 0x5090, 0x9b50, 0x89ce, 0xb226, 0x26c9, 0x0, 0x1);
        gbc.writeMem(0x26c9, { 0x35 });
        gbc.writeMem(0x8ab3, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x5090, gbc.sp());
        EXPECT(0x8ab5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ab3));
        EXPECT(0x8e, gbc.readMem(0x8ab4));
        // CB 8E 0257
        gbc.setState(0x1f87, 0x6bee, 0xb0b0, 0xd7e0, 0xf31e, 0xf835, 0x1, 0x0);
        gbc.writeMem(0x1f87, { 0xcb, 0x8e });
        gbc.writeMem(0xf835, { 0xb });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x6bee, gbc.sp());
        EXPECT(0x1f89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xf835));
        // CB 8E 0259
        gbc.setState(0x4cf6, 0xcba, 0x2420, 0xaa45, 0x3fb4, 0x5527, 0x0, 0x0);
        gbc.writeMem(0x4cf6, { 0xcb, 0x8e });
        gbc.writeMem(0x5527, { 0xd5 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xcba, gbc.sp());
        EXPECT(0x4cf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8E 025B
        gbc.setState(0xcac9, 0x6ff3, 0xe540, 0x1819, 0x88c1, 0xe0f6, 0x0, 0x1);
        gbc.writeMem(0xcac9, { 0xcb, 0x8e });
        gbc.writeMem(0xe0f6, { 0xed });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x6ff3, gbc.sp());
        EXPECT(0xcacb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcac9));
        EXPECT(0x8e, gbc.readMem(0xcaca));
        EXPECT(0xed, gbc.readMem(0xe0f6));
        // CB 8E 025C
        gbc.setState(0x3099, 0x1f84, 0xae30, 0x844, 0xe36f, 0xfe0d, 0x1, 0x0);
        gbc.writeMem(0x3099, { 0xcb, 0x8e });
        gbc.writeMem(0xfe0d, { 0xd });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x1f84, gbc.sp());
        EXPECT(0x309b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0xfe0d));
        // CB 8E 025D
        gbc.setState(0x345c, 0x69d5, 0xe80, 0x9a2f, 0x8289, 0x881a, 0x0, 0x0);
        gbc.writeMem(0x345c, { 0xcb, 0x8e });
        gbc.writeMem(0x881a, { 0xa9 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x69d5, gbc.sp());
        EXPECT(0x345e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa9, gbc.readMem(0x881a));
        // CB 8E 025F
        gbc.setState(0x5884, 0x7f79, 0x8470, 0xe0cb, 0xb14, 0xec77, 0x0, 0x1);
        gbc.writeMem(0x5884, { 0xcb, 0x8e });
        gbc.writeMem(0xec77, { 0xf0 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x7f79, gbc.sp());
        EXPECT(0x5886, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xec77));
        // CB 8E 0261
        gbc.setState(0xc711, 0x6129, 0x81a0, 0x152a, 0xdb81, 0x9e22, 0x0, 0x0);
        gbc.writeMem(0x9e22, { 0x96 });
        gbc.writeMem(0xc711, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x6129, gbc.sp());
        EXPECT(0xc713, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x9e22));
        EXPECT(0xcb, gbc.readMem(0xc711));
        EXPECT(0x8e, gbc.readMem(0xc712));
        // CB 8E 0262
        gbc.setState(0x458e, 0xc2a9, 0xfc40, 0xb50, 0x373d, 0x96f7, 0x0, 0x1);
        gbc.writeMem(0x458e, { 0xcb, 0x8e });
        gbc.writeMem(0x96f7, { 0xdf });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xc2a9, gbc.sp());
        EXPECT(0x4590, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0x96f7));
        // CB 8E 0264
        gbc.setState(0x3838, 0xa283, 0x7d00, 0x9d79, 0x8f5, 0x2b3, 0x0, 0x1);
        gbc.writeMem(0x2b3, { 0xc4 });
        gbc.writeMem(0x3838, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xa283, gbc.sp());
        EXPECT(0x383a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8E 0267
        gbc.setState(0xbda4, 0x6daf, 0xd4f0, 0x32fb, 0x7a89, 0x1501, 0x1, 0x0);
        gbc.writeMem(0x1501, { 0x8 });
        gbc.writeMem(0xbda4, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x6daf, gbc.sp());
        EXPECT(0xbda6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbda4));
        EXPECT(0x8e, gbc.readMem(0xbda5));
        // CB 8E 0268
        gbc.setState(0xab36, 0x56bb, 0x3980, 0xbd89, 0xf6c2, 0x4f19, 0x1, 0x1);
        gbc.writeMem(0x4f19, { 0x18 });
        gbc.writeMem(0xab36, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x56bb, gbc.sp());
        EXPECT(0xab38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab36));
        EXPECT(0x8e, gbc.readMem(0xab37));
        // CB 8E 0269
        gbc.setState(0x2955, 0x35c5, 0x4120, 0xe02f, 0xbd10, 0xe528, 0x0, 0x0);
        gbc.writeMem(0x2955, { 0xcb, 0x8e });
        gbc.writeMem(0xe528, { 0x48 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x35c5, gbc.sp());
        EXPECT(0x2957, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xe528));
        // CB 8E 026A
        gbc.setState(0x6fbd, 0x578a, 0xf0b0, 0xe078, 0xc155, 0x4a26, 0x0, 0x1);
        gbc.writeMem(0x4a26, { 0x69 });
        gbc.writeMem(0x6fbd, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x578a, gbc.sp());
        EXPECT(0x6fbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8E 026B
        gbc.setState(0x1c08, 0x784b, 0xb920, 0x5d02, 0xc10b, 0xa8da, 0x1, 0x0);
        gbc.writeMem(0x1c08, { 0xcb, 0x8e });
        gbc.writeMem(0xa8da, { 0xce });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x784b, gbc.sp());
        EXPECT(0x1c0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcc, gbc.readMem(0xa8da));
        // CB 8E 026C
        gbc.setState(0xe9a, 0x9170, 0x2c00, 0xe8a5, 0xc24d, 0x7768, 0x1, 0x0);
        gbc.writeMem(0xe9a, { 0xcb, 0x8e });
        gbc.writeMem(0x7768, { 0x89 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x9170, gbc.sp());
        EXPECT(0xe9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8E 026E
        gbc.setState(0x17, 0x5449, 0x6450, 0x1bf8, 0x2586, 0x945d, 0x0, 0x1);
        gbc.writeMem(0x17, { 0xcb, 0x8e });
        gbc.writeMem(0x945d, { 0xe2 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x5449, gbc.sp());
        EXPECT(0x19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x945d));
        // CB 8E 0270
        gbc.setState(0xd369, 0xf7e8, 0xafd0, 0x2b65, 0x2340, 0x8889, 0x0, 0x1);
        gbc.writeMem(0x8889, { 0x35 });
        gbc.writeMem(0xd369, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xf7e8, gbc.sp());
        EXPECT(0xd36b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x8889));
        EXPECT(0xcb, gbc.readMem(0xd369));
        EXPECT(0x8e, gbc.readMem(0xd36a));
        // CB 8E 0272
        gbc.setState(0xb10b, 0xe20e, 0x3270, 0x5137, 0xfc8a, 0xd53e, 0x0, 0x1);
        gbc.writeMem(0xb10b, { 0xcb, 0x8e });
        gbc.writeMem(0xd53e, { 0x1b });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xe20e, gbc.sp());
        EXPECT(0xb10d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb10b));
        EXPECT(0x8e, gbc.readMem(0xb10c));
        EXPECT(0x19, gbc.readMem(0xd53e));
        // CB 8E 0273
        gbc.setState(0x80e4, 0x1bfa, 0x550, 0xf34e, 0x4b9f, 0x9e1a, 0x0, 0x1);
        gbc.writeMem(0x80e4, { 0xcb, 0x8e });
        gbc.writeMem(0x9e1a, { 0xf7 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x1bfa, gbc.sp());
        EXPECT(0x80e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80e4));
        EXPECT(0x8e, gbc.readMem(0x80e5));
        EXPECT(0xf5, gbc.readMem(0x9e1a));
        // CB 8E 0274
        gbc.setState(0x4b88, 0xf971, 0x6d60, 0x5b3b, 0x81c2, 0x8363, 0x0, 0x1);
        gbc.writeMem(0x4b88, { 0xcb, 0x8e });
        gbc.writeMem(0x8363, { 0x31 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xf971, gbc.sp());
        EXPECT(0x4b8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x8363));
        // CB 8E 0275
        gbc.setState(0xbe0c, 0x4397, 0xa3b0, 0xbbb7, 0x14d9, 0x82c1, 0x1, 0x0);
        gbc.writeMem(0x82c1, { 0x90 });
        gbc.writeMem(0xbe0c, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x4397, gbc.sp());
        EXPECT(0xbe0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0x82c1));
        EXPECT(0xcb, gbc.readMem(0xbe0c));
        EXPECT(0x8e, gbc.readMem(0xbe0d));
        // CB 8E 0276
        gbc.setState(0xcde2, 0x68ed, 0x2670, 0x353c, 0x8667, 0x26fb, 0x0, 0x0);
        gbc.writeMem(0x26fb, { 0x90 });
        gbc.writeMem(0xcde2, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x68ed, gbc.sp());
        EXPECT(0xcde4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcde2));
        EXPECT(0x8e, gbc.readMem(0xcde3));
        // CB 8E 0277
        gbc.setState(0x66f8, 0xdd9f, 0x1ba0, 0x3489, 0x4dbd, 0xf278, 0x1, 0x1);
        gbc.writeMem(0x66f8, { 0xcb, 0x8e });
        gbc.writeMem(0xf278, { 0xdd });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xdd9f, gbc.sp());
        EXPECT(0x66fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0xf278));
        // CB 8E 0279
        gbc.setState(0x9b28, 0x41, 0x8ef0, 0x2394, 0x4699, 0x4564, 0x1, 0x0);
        gbc.writeMem(0x4564, { 0x3c });
        gbc.writeMem(0x9b28, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x41, gbc.sp());
        EXPECT(0x9b2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b28));
        EXPECT(0x8e, gbc.readMem(0x9b29));
        // CB 8E 027B
        gbc.setState(0x1729, 0x93c, 0xb070, 0x27e4, 0x5d23, 0xf431, 0x1, 0x1);
        gbc.writeMem(0x1729, { 0xcb, 0x8e });
        gbc.writeMem(0xf431, { 0xb5 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x93c, gbc.sp());
        EXPECT(0x172b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xf431));
        // CB 8E 027C
        gbc.setState(0x1ab1, 0xe686, 0x57c0, 0xc69a, 0x2f58, 0x830e, 0x1, 0x1);
        gbc.writeMem(0x1ab1, { 0xcb, 0x8e });
        gbc.writeMem(0x830e, { 0x82 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xe686, gbc.sp());
        EXPECT(0x1ab3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x830e));
        // CB 8E 0280
        gbc.setState(0x8486, 0x6b6c, 0x7460, 0xd0a1, 0xecaf, 0x17b5, 0x1, 0x1);
        gbc.writeMem(0x17b5, { 0x28 });
        gbc.writeMem(0x8486, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x6b6c, gbc.sp());
        EXPECT(0x8488, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8486));
        EXPECT(0x8e, gbc.readMem(0x8487));
        // CB 8E 0281
        gbc.setState(0xd5e2, 0x36f9, 0xd10, 0x1bc5, 0x28bc, 0xc82f, 0x1, 0x0);
        gbc.writeMem(0xc82f, { 0x48 });
        gbc.writeMem(0xd5e2, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x36f9, gbc.sp());
        EXPECT(0xd5e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xc82f));
        EXPECT(0xcb, gbc.readMem(0xd5e2));
        EXPECT(0x8e, gbc.readMem(0xd5e3));
        // CB 8E 0283
        gbc.setState(0x6f0, 0x6c51, 0x8a80, 0xa358, 0xe983, 0x823f, 0x1, 0x1);
        gbc.writeMem(0x6f0, { 0xcb, 0x8e });
        gbc.writeMem(0x823f, { 0x39 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x6c51, gbc.sp());
        EXPECT(0x6f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0x823f));
        // CB 8E 0286
        gbc.setState(0x8b77, 0x6660, 0x38d0, 0x61d9, 0xa4f8, 0x994d, 0x0, 0x0);
        gbc.writeMem(0x8b77, { 0xcb, 0x8e });
        gbc.writeMem(0x994d, { 0x4e });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x6660, gbc.sp());
        EXPECT(0x8b79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b77));
        EXPECT(0x8e, gbc.readMem(0x8b78));
        EXPECT(0x4c, gbc.readMem(0x994d));
        // CB 8E 0287
        gbc.setState(0xb229, 0xac5b, 0xd7c0, 0xea13, 0x2a83, 0xe6fb, 0x0, 0x0);
        gbc.writeMem(0xb229, { 0xcb, 0x8e });
        gbc.writeMem(0xe6fb, { 0x24 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xac5b, gbc.sp());
        EXPECT(0xb22b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb229));
        EXPECT(0x8e, gbc.readMem(0xb22a));
        EXPECT(0x24, gbc.readMem(0xe6fb));
        // CB 8E 0288
        gbc.setState(0xe518, 0xb288, 0x6c60, 0x1f9, 0x5515, 0x5c0a, 0x1, 0x0);
        gbc.writeMem(0x5c0a, { 0x39 });
        gbc.writeMem(0xe518, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xb288, gbc.sp());
        EXPECT(0xe51a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe518));
        EXPECT(0x8e, gbc.readMem(0xe519));
        // CB 8E 0289
        gbc.setState(0x3147, 0xc17d, 0xef70, 0xd6f7, 0xde61, 0xdcd2, 0x0, 0x0);
        gbc.writeMem(0x3147, { 0xcb, 0x8e });
        gbc.writeMem(0xdcd2, { 0x8a });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xc17d, gbc.sp());
        EXPECT(0x3149, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xdcd2));
        // CB 8E 028A
        gbc.setState(0x5584, 0x49fd, 0x32a0, 0xba0f, 0xb0f2, 0xaeb0, 0x0, 0x0);
        gbc.writeMem(0x5584, { 0xcb, 0x8e });
        gbc.writeMem(0xaeb0, { 0x8d });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x49fd, gbc.sp());
        EXPECT(0x5586, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xaeb0));
        // CB 8E 028B
        gbc.setState(0xb9a3, 0x7db6, 0x400, 0x62fb, 0x3e0a, 0xaece, 0x1, 0x1);
        gbc.writeMem(0xaece, { 0x12 });
        gbc.writeMem(0xb9a3, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x7db6, gbc.sp());
        EXPECT(0xb9a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xaece));
        EXPECT(0xcb, gbc.readMem(0xb9a3));
        EXPECT(0x8e, gbc.readMem(0xb9a4));
        // CB 8E 028C
        gbc.setState(0x422e, 0x241b, 0x8100, 0x1b48, 0xbcb2, 0xf58e, 0x0, 0x0);
        gbc.writeMem(0x422e, { 0xcb, 0x8e });
        gbc.writeMem(0xf58e, { 0x97 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x241b, gbc.sp());
        EXPECT(0x4230, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xf58e));
        // CB 8E 028D
        gbc.setState(0xad70, 0x3f9f, 0x6d40, 0x1b32, 0x1cef, 0x55b4, 0x1, 0x0);
        gbc.writeMem(0x55b4, { 0x31 });
        gbc.writeMem(0xad70, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x3f9f, gbc.sp());
        EXPECT(0xad72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad70));
        EXPECT(0x8e, gbc.readMem(0xad71));
        // CB 8E 028F
        gbc.setState(0xacd3, 0xc064, 0x9af0, 0x6ee9, 0x9600, 0xbfb8, 0x1, 0x1);
        gbc.writeMem(0xacd3, { 0xcb, 0x8e });
        gbc.writeMem(0xbfb8, { 0x37 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xc064, gbc.sp());
        EXPECT(0xacd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacd3));
        EXPECT(0x8e, gbc.readMem(0xacd4));
        EXPECT(0x35, gbc.readMem(0xbfb8));
        // CB 8E 0290
        gbc.setState(0x3765, 0xb0c2, 0x8c10, 0xf03e, 0x8f30, 0xe28a, 0x0, 0x1);
        gbc.writeMem(0x3765, { 0xcb, 0x8e });
        gbc.writeMem(0xe28a, { 0x3a });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xb0c2, gbc.sp());
        EXPECT(0x3767, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xe28a));
        // CB 8E 0293
        gbc.setState(0x53c, 0xe832, 0xb200, 0x801d, 0xe365, 0xe9ee, 0x0, 0x1);
        gbc.writeMem(0x53c, { 0xcb, 0x8e });
        gbc.writeMem(0xe9ee, { 0xd8 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xe832, gbc.sp());
        EXPECT(0x53e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0xe9ee));
        // CB 8E 0295
        gbc.setState(0xa4f9, 0xeaa, 0x7800, 0x5742, 0xa3f, 0x7ec1, 0x0, 0x0);
        gbc.writeMem(0x7ec1, { 0xf5 });
        gbc.writeMem(0xa4f9, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xeaa, gbc.sp());
        EXPECT(0xa4fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4f9));
        EXPECT(0x8e, gbc.readMem(0xa4fa));
        // CB 8E 0296
        gbc.setState(0x810c, 0xd4cd, 0x6a0, 0xb7cb, 0x4b73, 0x1686, 0x0, 0x1);
        gbc.writeMem(0x1686, { 0x79 });
        gbc.writeMem(0x810c, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xd4cd, gbc.sp());
        EXPECT(0x810e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x810c));
        EXPECT(0x8e, gbc.readMem(0x810d));
        // CB 8E 0297
        gbc.setState(0x21e7, 0x6fe3, 0xda50, 0x94fc, 0x46a7, 0x8859, 0x1, 0x1);
        gbc.writeMem(0x21e7, { 0xcb, 0x8e });
        gbc.writeMem(0x8859, { 0xba });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x6fe3, gbc.sp());
        EXPECT(0x21e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0x8859));
        // CB 8E 0298
        gbc.setState(0xeef5, 0x76a1, 0xf460, 0xcc96, 0xcbfa, 0xd735, 0x1, 0x1);
        gbc.writeMem(0xd735, { 0xd7 });
        gbc.writeMem(0xeef5, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x76a1, gbc.sp());
        EXPECT(0xeef7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xd735));
        EXPECT(0xcb, gbc.readMem(0xeef5));
        EXPECT(0x8e, gbc.readMem(0xeef6));
        // CB 8E 0299
        gbc.setState(0xc0d3, 0xc20c, 0xf570, 0x397c, 0x95ee, 0x9e49, 0x0, 0x1);
        gbc.writeMem(0x9e49, { 0x6 });
        gbc.writeMem(0xc0d3, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xc20c, gbc.sp());
        EXPECT(0xc0d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x9e49));
        EXPECT(0xcb, gbc.readMem(0xc0d3));
        EXPECT(0x8e, gbc.readMem(0xc0d4));
        // CB 8E 029A
        gbc.setState(0x76be, 0x549b, 0x9850, 0xae0d, 0x5954, 0x9160, 0x1, 0x0);
        gbc.writeMem(0x76be, { 0xcb, 0x8e });
        gbc.writeMem(0x9160, { 0x54 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x549b, gbc.sp());
        EXPECT(0x76c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x54, gbc.readMem(0x9160));
        // CB 8E 029C
        gbc.setState(0x6a20, 0x95e1, 0x2bc0, 0x4d0c, 0x16d9, 0x4c7f, 0x0, 0x0);
        gbc.writeMem(0x4c7f, { 0x11 });
        gbc.writeMem(0x6a20, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x95e1, gbc.sp());
        EXPECT(0x6a22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8E 029D
        gbc.setState(0xb156, 0xdb17, 0x9f90, 0xe88f, 0x45be, 0x904f, 0x1, 0x1);
        gbc.writeMem(0x904f, { 0x2e });
        gbc.writeMem(0xb156, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xdb17, gbc.sp());
        EXPECT(0xb158, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x904f));
        EXPECT(0xcb, gbc.readMem(0xb156));
        EXPECT(0x8e, gbc.readMem(0xb157));
        // CB 8E 029E
        gbc.setState(0x5e60, 0x8042, 0x3cf0, 0x7a61, 0xb96d, 0x829c, 0x0, 0x0);
        gbc.writeMem(0x5e60, { 0xcb, 0x8e });
        gbc.writeMem(0x829c, { 0x78 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x8042, gbc.sp());
        EXPECT(0x5e62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x829c));
        // CB 8E 029F
        gbc.setState(0x7a8c, 0x2ab7, 0xe090, 0x7b71, 0x2580, 0x836b, 0x1, 0x1);
        gbc.writeMem(0x7a8c, { 0xcb, 0x8e });
        gbc.writeMem(0x836b, { 0x6f });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x2ab7, gbc.sp());
        EXPECT(0x7a8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x836b));
        // CB 8E 02A0
        gbc.setState(0x803d, 0x39d, 0x44b0, 0x981e, 0x42ce, 0x9427, 0x1, 0x0);
        gbc.writeMem(0x803d, { 0xcb, 0x8e });
        gbc.writeMem(0x9427, { 0xf7 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x39d, gbc.sp());
        EXPECT(0x803f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x803d));
        EXPECT(0x8e, gbc.readMem(0x803e));
        EXPECT(0xf5, gbc.readMem(0x9427));
        // CB 8E 02A2
        gbc.setState(0x50ff, 0x10d0, 0xd7d0, 0x97c6, 0xf56, 0xf96c, 0x1, 0x1);
        gbc.writeMem(0x50ff, { 0xcb, 0x8e });
        gbc.writeMem(0xf96c, { 0xb2 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x10d0, gbc.sp());
        EXPECT(0x5101, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xf96c));
        // CB 8E 02A3
        gbc.setState(0x2d3, 0x9b3c, 0xfd70, 0xa23f, 0xdb43, 0xb653, 0x1, 0x0);
        gbc.writeMem(0x2d3, { 0xcb, 0x8e });
        gbc.writeMem(0xb653, { 0xba });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x9b3c, gbc.sp());
        EXPECT(0x2d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0xb653));
        // CB 8E 02A4
        gbc.setState(0x997a, 0x2b3b, 0xef10, 0x5756, 0xa792, 0x3d0f, 0x0, 0x1);
        gbc.writeMem(0x3d0f, { 0xf9 });
        gbc.writeMem(0x997a, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x2b3b, gbc.sp());
        EXPECT(0x997c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x997a));
        EXPECT(0x8e, gbc.readMem(0x997b));
        // CB 8E 02A5
        gbc.setState(0x4a70, 0x4f59, 0x5ee0, 0x1695, 0xec14, 0xa4d1, 0x0, 0x1);
        gbc.writeMem(0x4a70, { 0xcb, 0x8e });
        gbc.writeMem(0xa4d1, { 0xbc });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x4f59, gbc.sp());
        EXPECT(0x4a72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xa4d1));
        // CB 8E 02A6
        gbc.setState(0xc66d, 0x8439, 0x6710, 0x1a2f, 0x8a45, 0x1707, 0x0, 0x1);
        gbc.writeMem(0x1707, { 0x4 });
        gbc.writeMem(0xc66d, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x8439, gbc.sp());
        EXPECT(0xc66f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc66d));
        EXPECT(0x8e, gbc.readMem(0xc66e));
        // CB 8E 02A8
        gbc.setState(0xb35a, 0x11fd, 0xb1d0, 0x46a0, 0xea4, 0x60c6, 0x0, 0x0);
        gbc.writeMem(0x60c6, { 0xfc });
        gbc.writeMem(0xb35a, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x11fd, gbc.sp());
        EXPECT(0xb35c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb35a));
        EXPECT(0x8e, gbc.readMem(0xb35b));
        // CB 8E 02A9
        gbc.setState(0xd7d4, 0xab1d, 0xe8c0, 0x75a3, 0xbf6d, 0xafa9, 0x1, 0x1);
        gbc.writeMem(0xafa9, { 0xf9 });
        gbc.writeMem(0xd7d4, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xab1d, gbc.sp());
        EXPECT(0xd7d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf9, gbc.readMem(0xafa9));
        EXPECT(0xcb, gbc.readMem(0xd7d4));
        EXPECT(0x8e, gbc.readMem(0xd7d5));
        // CB 8E 02AC
        gbc.setState(0x6d7a, 0x7c84, 0x8dc0, 0x5ead, 0x7bb9, 0xdd7e, 0x0, 0x1);
        gbc.writeMem(0x6d7a, { 0xcb, 0x8e });
        gbc.writeMem(0xdd7e, { 0xb1 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x7c84, gbc.sp());
        EXPECT(0x6d7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb1, gbc.readMem(0xdd7e));
        // CB 8E 02AD
        gbc.setState(0xae82, 0xd93b, 0x80d0, 0x2549, 0x75c, 0x3e7, 0x0, 0x0);
        gbc.writeMem(0x3e7, { 0x85 });
        gbc.writeMem(0xae82, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xd93b, gbc.sp());
        EXPECT(0xae84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae82));
        EXPECT(0x8e, gbc.readMem(0xae83));
        // CB 8E 02AE
        gbc.setState(0x5d69, 0x6ebe, 0x41b0, 0xdcbb, 0x448b, 0x9c9c, 0x1, 0x0);
        gbc.writeMem(0x5d69, { 0xcb, 0x8e });
        gbc.writeMem(0x9c9c, { 0x4f });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x6ebe, gbc.sp());
        EXPECT(0x5d6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x9c9c));
        // CB 8E 02AF
        gbc.setState(0x1b3d, 0xd15a, 0xae00, 0x4e2b, 0x488a, 0xb705, 0x1, 0x0);
        gbc.writeMem(0x1b3d, { 0xcb, 0x8e });
        gbc.writeMem(0xb705, { 0x2d });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xd15a, gbc.sp());
        EXPECT(0x1b3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xb705));
        // CB 8E 02B1
        gbc.setState(0xd794, 0xa0eb, 0xbc20, 0xe47a, 0xf3b0, 0x60f0, 0x1, 0x0);
        gbc.writeMem(0x60f0, { 0xb4 });
        gbc.writeMem(0xd794, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xa0eb, gbc.sp());
        EXPECT(0xd796, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd794));
        EXPECT(0x8e, gbc.readMem(0xd795));
        // CB 8E 02B2
        gbc.setState(0x2979, 0x6def, 0x5eb0, 0x9de3, 0xacb, 0x426e, 0x1, 0x1);
        gbc.writeMem(0x2979, { 0xcb, 0x8e });
        gbc.writeMem(0x426e, { 0x9d });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x6def, gbc.sp());
        EXPECT(0x297b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8E 02B4
        gbc.setState(0x8c6f, 0xb16d, 0xea40, 0x76c9, 0xa152, 0xeda0, 0x1, 0x0);
        gbc.writeMem(0x8c6f, { 0xcb, 0x8e });
        gbc.writeMem(0xeda0, { 0x95 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xb16d, gbc.sp());
        EXPECT(0x8c71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c6f));
        EXPECT(0x8e, gbc.readMem(0x8c70));
        EXPECT(0x95, gbc.readMem(0xeda0));
        // CB 8E 02B5
        gbc.setState(0x1dcb, 0xf9c, 0xd5c0, 0x6564, 0xab91, 0x499e, 0x0, 0x1);
        gbc.writeMem(0x1dcb, { 0xcb, 0x8e });
        gbc.writeMem(0x499e, { 0xb5 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xf9c, gbc.sp());
        EXPECT(0x1dcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8E 02B6
        gbc.setState(0x306d, 0xa282, 0xc0c0, 0x4829, 0x37b7, 0x2067, 0x1, 0x1);
        gbc.writeMem(0x2067, { 0x44 });
        gbc.writeMem(0x306d, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xa282, gbc.sp());
        EXPECT(0x306f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8E 02B7
        gbc.setState(0x3942, 0x4ea8, 0x55b0, 0x29a7, 0x8061, 0xd3b4, 0x1, 0x0);
        gbc.writeMem(0x3942, { 0xcb, 0x8e });
        gbc.writeMem(0xd3b4, { 0xe8 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x4ea8, gbc.sp());
        EXPECT(0x3944, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0xd3b4));
        // CB 8E 02B9
        gbc.setState(0x69b7, 0x2716, 0x4640, 0x529e, 0xdf53, 0x104e, 0x1, 0x1);
        gbc.writeMem(0x104e, { 0xe9 });
        gbc.writeMem(0x69b7, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x2716, gbc.sp());
        EXPECT(0x69b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8E 02BB
        gbc.setState(0xd8c2, 0x599, 0x6400, 0xd4dc, 0x5b92, 0x7bcc, 0x1, 0x1);
        gbc.writeMem(0x7bcc, { 0x18 });
        gbc.writeMem(0xd8c2, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x599, gbc.sp());
        EXPECT(0xd8c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8c2));
        EXPECT(0x8e, gbc.readMem(0xd8c3));
        // CB 8E 02BC
        gbc.setState(0x75cf, 0x89d3, 0x6830, 0x7526, 0xa3ed, 0x8134, 0x1, 0x1);
        gbc.writeMem(0x75cf, { 0xcb, 0x8e });
        gbc.writeMem(0x8134, { 0xa5 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x89d3, gbc.sp());
        EXPECT(0x75d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa5, gbc.readMem(0x8134));
        // CB 8E 02BD
        gbc.setState(0xe689, 0xaee2, 0xc760, 0x9dec, 0x9273, 0xdce4, 0x1, 0x1);
        gbc.writeMem(0xdce4, { 0xa1 });
        gbc.writeMem(0xe689, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xaee2, gbc.sp());
        EXPECT(0xe68b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xdce4));
        EXPECT(0xcb, gbc.readMem(0xe689));
        EXPECT(0x8e, gbc.readMem(0xe68a));
        // CB 8E 02BE
        gbc.setState(0xe10d, 0xd14f, 0x6980, 0xab5c, 0x2ff4, 0xf511, 0x1, 0x1);
        gbc.writeMem(0xe10d, { 0xcb, 0x8e });
        gbc.writeMem(0xf511, { 0xf2 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xd14f, gbc.sp());
        EXPECT(0xe10f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe10d));
        EXPECT(0x8e, gbc.readMem(0xe10e));
        EXPECT(0xf0, gbc.readMem(0xf511));
        // CB 8E 02BF
        gbc.setState(0x10e5, 0xdb8c, 0xb9b0, 0xf3bd, 0xbf70, 0x6b60, 0x0, 0x0);
        gbc.writeMem(0x10e5, { 0xcb, 0x8e });
        gbc.writeMem(0x6b60, { 0x38 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xdb8c, gbc.sp());
        EXPECT(0x10e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8E 02C1
        gbc.setState(0x7a44, 0xb285, 0x7e50, 0xb86e, 0x9daf, 0x7c76, 0x1, 0x0);
        gbc.writeMem(0x7a44, { 0xcb, 0x8e });
        gbc.writeMem(0x7c76, { 0x75 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xb285, gbc.sp());
        EXPECT(0x7a46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8E 02C3
        gbc.setState(0x8c4f, 0xcebe, 0xce60, 0xee7, 0xa83f, 0xaee4, 0x0, 0x0);
        gbc.writeMem(0x8c4f, { 0xcb, 0x8e });
        gbc.writeMem(0xaee4, { 0xbb });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xcebe, gbc.sp());
        EXPECT(0x8c51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c4f));
        EXPECT(0x8e, gbc.readMem(0x8c50));
        EXPECT(0xb9, gbc.readMem(0xaee4));
        // CB 8E 02C4
        gbc.setState(0x3571, 0x2936, 0x74d0, 0x1769, 0x326d, 0xa790, 0x1, 0x0);
        gbc.writeMem(0x3571, { 0xcb, 0x8e });
        gbc.writeMem(0xa790, { 0xfa });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x2936, gbc.sp());
        EXPECT(0x3573, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xa790));
        // CB 8E 02C5
        gbc.setState(0xe059, 0x33cb, 0x6a30, 0xc094, 0xcb88, 0xcf1b, 0x1, 0x1);
        gbc.writeMem(0xcf1b, { 0x67 });
        gbc.writeMem(0xe059, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x33cb, gbc.sp());
        EXPECT(0xe05b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xcf1b));
        EXPECT(0xcb, gbc.readMem(0xe059));
        EXPECT(0x8e, gbc.readMem(0xe05a));
        // CB 8E 02C6
        gbc.setState(0x3e4f, 0x3fb2, 0x4ef0, 0xeba8, 0x3658, 0xd3f8, 0x0, 0x1);
        gbc.writeMem(0x3e4f, { 0xcb, 0x8e });
        gbc.writeMem(0xd3f8, { 0x48 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x3fb2, gbc.sp());
        EXPECT(0x3e51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xd3f8));
        // CB 8E 02C7
        gbc.setState(0x426e, 0x46a4, 0x8c0, 0xfaea, 0xca7a, 0x7e38, 0x0, 0x0);
        gbc.writeMem(0x426e, { 0xcb, 0x8e });
        gbc.writeMem(0x7e38, { 0x40 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x46a4, gbc.sp());
        EXPECT(0x4270, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8E 02C8
        gbc.setState(0x9dfa, 0xc76e, 0x780, 0x84ae, 0x87a6, 0xfdaf, 0x0, 0x1);
        gbc.writeMem(0x9dfa, { 0xcb, 0x8e });
        gbc.writeMem(0xfdaf, { 0x41 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xc76e, gbc.sp());
        EXPECT(0x9dfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dfa));
        EXPECT(0x8e, gbc.readMem(0x9dfb));
        EXPECT(0x41, gbc.readMem(0xfdaf));
        // CB 8E 02C9
        gbc.setState(0xc570, 0x1f61, 0x8480, 0xaeba, 0x4bd4, 0xd238, 0x1, 0x0);
        gbc.writeMem(0xc570, { 0xcb, 0x8e });
        gbc.writeMem(0xd238, { 0xda });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x1f61, gbc.sp());
        EXPECT(0xc572, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc570));
        EXPECT(0x8e, gbc.readMem(0xc571));
        EXPECT(0xd8, gbc.readMem(0xd238));
        // CB 8E 02CA
        gbc.setState(0xa666, 0xfc26, 0xa560, 0xaf48, 0x3c30, 0x613e, 0x1, 0x0);
        gbc.writeMem(0x613e, { 0x71 });
        gbc.writeMem(0xa666, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xfc26, gbc.sp());
        EXPECT(0xa668, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa666));
        EXPECT(0x8e, gbc.readMem(0xa667));
        // CB 8E 02CB
        gbc.setState(0x8e33, 0x846, 0x2050, 0x6ba8, 0x9771, 0xb72a, 0x0, 0x0);
        gbc.writeMem(0x8e33, { 0xcb, 0x8e });
        gbc.writeMem(0xb72a, { 0x4a });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x846, gbc.sp());
        EXPECT(0x8e35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e33));
        EXPECT(0x8e, gbc.readMem(0x8e34));
        EXPECT(0x48, gbc.readMem(0xb72a));
        // CB 8E 02CC
        gbc.setState(0x8a49, 0x82d3, 0xa6a0, 0x31c7, 0x7e37, 0x11ea, 0x0, 0x1);
        gbc.writeMem(0x11ea, { 0xc8 });
        gbc.writeMem(0x8a49, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x82d3, gbc.sp());
        EXPECT(0x8a4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a49));
        EXPECT(0x8e, gbc.readMem(0x8a4a));
        // CB 8E 02CD
        gbc.setState(0x1663, 0xd541, 0xf920, 0x552a, 0x62bb, 0xcc05, 0x1, 0x0);
        gbc.writeMem(0x1663, { 0xcb, 0x8e });
        gbc.writeMem(0xcc05, { 0x62 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xd541, gbc.sp());
        EXPECT(0x1665, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0xcc05));
        // CB 8E 02D0
        gbc.setState(0xd136, 0xf1c7, 0xf8a0, 0xfc2c, 0xea87, 0xe96b, 0x0, 0x0);
        gbc.writeMem(0xd136, { 0xcb, 0x8e });
        gbc.writeMem(0xe96b, { 0x63 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xf1c7, gbc.sp());
        EXPECT(0xd138, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd136));
        EXPECT(0x8e, gbc.readMem(0xd137));
        EXPECT(0x61, gbc.readMem(0xe96b));
        // CB 8E 02D2
        gbc.setState(0x32e5, 0x253, 0x2760, 0x41c6, 0xfe8c, 0xa003, 0x1, 0x0);
        gbc.writeMem(0x32e5, { 0xcb, 0x8e });
        gbc.writeMem(0xa003, { 0x87 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x253, gbc.sp());
        EXPECT(0x32e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xa003));
        // CB 8E 02D3
        gbc.setState(0x7abd, 0x730e, 0x6850, 0x4897, 0x3d04, 0x4ca, 0x1, 0x1);
        gbc.writeMem(0x4ca, { 0x8c });
        gbc.writeMem(0x7abd, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x730e, gbc.sp());
        EXPECT(0x7abf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8E 02D4
        gbc.setState(0x8030, 0x138e, 0x3310, 0x2de1, 0x8ff8, 0x7a68, 0x1, 0x1);
        gbc.writeMem(0x7a68, { 0xa0 });
        gbc.writeMem(0x8030, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x138e, gbc.sp());
        EXPECT(0x8032, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8030));
        EXPECT(0x8e, gbc.readMem(0x8031));
        // CB 8E 02D5
        gbc.setState(0xcd4d, 0xadc6, 0x8f30, 0x4363, 0x76f6, 0x26e0, 0x0, 0x1);
        gbc.writeMem(0x26e0, { 0x70 });
        gbc.writeMem(0xcd4d, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xadc6, gbc.sp());
        EXPECT(0xcd4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd4d));
        EXPECT(0x8e, gbc.readMem(0xcd4e));
        // CB 8E 02D8
        gbc.setState(0xa8d3, 0xb377, 0x2b90, 0xebac, 0x6a84, 0x9c3c, 0x0, 0x0);
        gbc.writeMem(0x9c3c, { 0x5c });
        gbc.writeMem(0xa8d3, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xb377, gbc.sp());
        EXPECT(0xa8d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0x9c3c));
        EXPECT(0xcb, gbc.readMem(0xa8d3));
        EXPECT(0x8e, gbc.readMem(0xa8d4));
        // CB 8E 02DC
        gbc.setState(0xd78d, 0x4d60, 0x9040, 0xbab3, 0x2396, 0x9427, 0x1, 0x0);
        gbc.writeMem(0x9427, { 0xf7 });
        gbc.writeMem(0xd78d, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x4d60, gbc.sp());
        EXPECT(0xd78f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0x9427));
        EXPECT(0xcb, gbc.readMem(0xd78d));
        EXPECT(0x8e, gbc.readMem(0xd78e));
        // CB 8E 02DD
        gbc.setState(0x5075, 0x7482, 0xc070, 0x7644, 0x13ad, 0x9340, 0x0, 0x0);
        gbc.writeMem(0x5075, { 0xcb, 0x8e });
        gbc.writeMem(0x9340, { 0xaa });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x7482, gbc.sp());
        EXPECT(0x5077, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa8, gbc.readMem(0x9340));
        // CB 8E 02DE
        gbc.setState(0x479b, 0xb45a, 0x4df0, 0xc387, 0xd1c2, 0x7798, 0x1, 0x1);
        gbc.writeMem(0x479b, { 0xcb, 0x8e });
        gbc.writeMem(0x7798, { 0xbc });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xb45a, gbc.sp());
        EXPECT(0x479d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8E 02DF
        gbc.setState(0x126a, 0xeebb, 0xe40, 0xc62b, 0x443e, 0xf762, 0x1, 0x0);
        gbc.writeMem(0x126a, { 0xcb, 0x8e });
        gbc.writeMem(0xf762, { 0x11 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xeebb, gbc.sp());
        EXPECT(0x126c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xf762));
        // CB 8E 02E0
        gbc.setState(0x982a, 0x7d85, 0x6270, 0x332f, 0x3124, 0xacbe, 0x0, 0x0);
        gbc.writeMem(0x982a, { 0xcb, 0x8e });
        gbc.writeMem(0xacbe, { 0xf6 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x7d85, gbc.sp());
        EXPECT(0x982c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x982a));
        EXPECT(0x8e, gbc.readMem(0x982b));
        EXPECT(0xf4, gbc.readMem(0xacbe));
        // CB 8E 02E1
        gbc.setState(0xa0b0, 0xe5e7, 0xb1c0, 0xe698, 0x4b1, 0x7ed0, 0x1, 0x1);
        gbc.writeMem(0x7ed0, { 0xdd });
        gbc.writeMem(0xa0b0, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xe5e7, gbc.sp());
        EXPECT(0xa0b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0b0));
        EXPECT(0x8e, gbc.readMem(0xa0b1));
        // CB 8E 02E2
        gbc.setState(0xee29, 0xe1b3, 0x8a80, 0xc081, 0x5668, 0xa97c, 0x0, 0x0);
        gbc.writeMem(0xa97c, { 0x6c });
        gbc.writeMem(0xee29, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xe1b3, gbc.sp());
        EXPECT(0xee2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xa97c));
        EXPECT(0xcb, gbc.readMem(0xee29));
        EXPECT(0x8e, gbc.readMem(0xee2a));
        // CB 8E 02E3
        gbc.setState(0x4cad, 0xd367, 0x6590, 0x789a, 0xe88a, 0xd960, 0x1, 0x0);
        gbc.writeMem(0x4cad, { 0xcb, 0x8e });
        gbc.writeMem(0xd960, { 0x23 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xd367, gbc.sp());
        EXPECT(0x4caf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xd960));
        // CB 8E 02E5
        gbc.setState(0xd9c4, 0x5efc, 0xc870, 0x4604, 0xa210, 0x26d0, 0x0, 0x1);
        gbc.writeMem(0x26d0, { 0x54 });
        gbc.writeMem(0xd9c4, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x5efc, gbc.sp());
        EXPECT(0xd9c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9c4));
        EXPECT(0x8e, gbc.readMem(0xd9c5));
        // CB 8E 02E6
        gbc.setState(0x4131, 0xefea, 0xfcb0, 0x51e0, 0xe38f, 0xf776, 0x0, 0x1);
        gbc.writeMem(0x4131, { 0xcb, 0x8e });
        gbc.writeMem(0xf776, { 0x5c });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xefea, gbc.sp());
        EXPECT(0x4133, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0xf776));
        // CB 8E 02E7
        gbc.setState(0x2, 0x18c3, 0xfc60, 0xaaee, 0xe888, 0xe6a9, 0x1, 0x0);
        gbc.writeMem(0x2, { 0xcb, 0x8e });
        gbc.writeMem(0xe6a9, { 0x73 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x18c3, gbc.sp());
        EXPECT(0x4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xe6a9));
        // CB 8E 02E8
        gbc.setState(0x23cf, 0x1c5b, 0x63f0, 0x3327, 0xaa89, 0x9921, 0x1, 0x0);
        gbc.writeMem(0x23cf, { 0xcb, 0x8e });
        gbc.writeMem(0x9921, { 0x2b });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x1c5b, gbc.sp());
        EXPECT(0x23d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x9921));
        // CB 8E 02EA
        gbc.setState(0x6e40, 0x9db3, 0xbd60, 0x9e59, 0x919b, 0x75f2, 0x0, 0x1);
        gbc.writeMem(0x6e40, { 0xcb, 0x8e });
        gbc.writeMem(0x75f2, { 0x71 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x9db3, gbc.sp());
        EXPECT(0x6e42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8E 02EB
        gbc.setState(0xae1b, 0xe2cd, 0xa260, 0x1ccf, 0x303a, 0xb5ab, 0x0, 0x0);
        gbc.writeMem(0xae1b, { 0xcb, 0x8e });
        gbc.writeMem(0xb5ab, { 0x90 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xe2cd, gbc.sp());
        EXPECT(0xae1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae1b));
        EXPECT(0x8e, gbc.readMem(0xae1c));
        EXPECT(0x90, gbc.readMem(0xb5ab));
        // CB 8E 02ED
        gbc.setState(0xa67, 0xf950, 0x8a10, 0xdb6b, 0xf258, 0xe3f2, 0x0, 0x1);
        gbc.writeMem(0xa67, { 0xcb, 0x8e });
        gbc.writeMem(0xe3f2, { 0x84 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xf950, gbc.sp());
        EXPECT(0xa69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0xe3f2));
        // CB 8E 02EF
        gbc.setState(0xd725, 0xe6a5, 0x2ab0, 0xfb11, 0x2751, 0x82be, 0x1, 0x1);
        gbc.writeMem(0x82be, { 0xac });
        gbc.writeMem(0xd725, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xe6a5, gbc.sp());
        EXPECT(0xd727, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x82be));
        EXPECT(0xcb, gbc.readMem(0xd725));
        EXPECT(0x8e, gbc.readMem(0xd726));
        // CB 8E 02F0
        gbc.setState(0xaa0f, 0xa717, 0xf480, 0x9090, 0x9587, 0x65a5, 0x0, 0x1);
        gbc.writeMem(0x65a5, { 0x2c });
        gbc.writeMem(0xaa0f, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xa717, gbc.sp());
        EXPECT(0xaa11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa0f));
        EXPECT(0x8e, gbc.readMem(0xaa10));
        // CB 8E 02F2
        gbc.setState(0xe9eb, 0x4469, 0xcf00, 0x960c, 0x8d15, 0xf0ac, 0x0, 0x1);
        gbc.writeMem(0xe9eb, { 0xcb, 0x8e });
        gbc.writeMem(0xf0ac, { 0x5f });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x4469, gbc.sp());
        EXPECT(0xe9ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9eb));
        EXPECT(0x8e, gbc.readMem(0xe9ec));
        EXPECT(0x5d, gbc.readMem(0xf0ac));
        // CB 8E 02F3
        gbc.setState(0x2706, 0x56a9, 0x7b60, 0xc224, 0xb60, 0x1342, 0x1, 0x0);
        gbc.writeMem(0x1342, { 0xc4 });
        gbc.writeMem(0x2706, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x56a9, gbc.sp());
        EXPECT(0x2708, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8E 02F4
        gbc.setState(0x9f71, 0x2ad8, 0x2ec0, 0x6f20, 0xab78, 0x3084, 0x0, 0x0);
        gbc.writeMem(0x3084, { 0x84 });
        gbc.writeMem(0x9f71, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x2ad8, gbc.sp());
        EXPECT(0x9f73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f71));
        EXPECT(0x8e, gbc.readMem(0x9f72));
        // CB 8E 02F7
        gbc.setState(0x891d, 0x8366, 0xb340, 0xc345, 0x5ba6, 0xa8f3, 0x0, 0x0);
        gbc.writeMem(0x891d, { 0xcb, 0x8e });
        gbc.writeMem(0xa8f3, { 0x98 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x8366, gbc.sp());
        EXPECT(0x891f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x891d));
        EXPECT(0x8e, gbc.readMem(0x891e));
        EXPECT(0x98, gbc.readMem(0xa8f3));
        // CB 8E 02F9
        gbc.setState(0x84c6, 0x80c9, 0xa590, 0xa5ed, 0x8d1e, 0xa241, 0x0, 0x1);
        gbc.writeMem(0x84c6, { 0xcb, 0x8e });
        gbc.writeMem(0xa241, { 0x65 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x80c9, gbc.sp());
        EXPECT(0x84c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84c6));
        EXPECT(0x8e, gbc.readMem(0x84c7));
        EXPECT(0x65, gbc.readMem(0xa241));
        // CB 8E 02FC
        gbc.setState(0xc7c3, 0x1f56, 0x1050, 0x304f, 0xba1f, 0xd8ef, 0x1, 0x1);
        gbc.writeMem(0xc7c3, { 0xcb, 0x8e });
        gbc.writeMem(0xd8ef, { 0xd7 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x1f56, gbc.sp());
        EXPECT(0xc7c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7c3));
        EXPECT(0x8e, gbc.readMem(0xc7c4));
        EXPECT(0xd5, gbc.readMem(0xd8ef));
        // CB 8E 02FD
        gbc.setState(0xb15c, 0xaeaa, 0xf230, 0x2ace, 0x7398, 0xe393, 0x1, 0x0);
        gbc.writeMem(0xb15c, { 0xcb, 0x8e });
        gbc.writeMem(0xe393, { 0x72 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xaeaa, gbc.sp());
        EXPECT(0xb15e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb15c));
        EXPECT(0x8e, gbc.readMem(0xb15d));
        EXPECT(0x70, gbc.readMem(0xe393));
        // CB 8E 02FE
        gbc.setState(0xc7cb, 0x4240, 0xf2b0, 0x5dc2, 0x12ff, 0x24eb, 0x0, 0x0);
        gbc.writeMem(0x24eb, { 0x75 });
        gbc.writeMem(0xc7cb, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x4240, gbc.sp());
        EXPECT(0xc7cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7cb));
        EXPECT(0x8e, gbc.readMem(0xc7cc));
        // CB 8E 02FF
        gbc.setState(0x5f57, 0x2325, 0x4d60, 0xee07, 0xfd10, 0x5305, 0x1, 0x0);
        gbc.writeMem(0x5305, { 0x51 });
        gbc.writeMem(0x5f57, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x2325, gbc.sp());
        EXPECT(0x5f59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8E 0300
        gbc.setState(0x2fba, 0x600d, 0xaba0, 0x139d, 0x9708, 0xe92, 0x1, 0x0);
        gbc.writeMem(0xe92, { 0xd });
        gbc.writeMem(0x2fba, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x600d, gbc.sp());
        EXPECT(0x2fbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8E 0301
        gbc.setState(0x513, 0x9f76, 0x160, 0x5637, 0x4402, 0xdd17, 0x0, 0x0);
        gbc.writeMem(0x513, { 0xcb, 0x8e });
        gbc.writeMem(0xdd17, { 0xcf });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x9f76, gbc.sp());
        EXPECT(0x515, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0xdd17));
        // CB 8E 0302
        gbc.setState(0x6e63, 0xabc7, 0x55e0, 0xbf00, 0x1cb, 0xffdf, 0x0, 0x0);
        gbc.writeMem(0x6e63, { 0xcb, 0x8e });
        gbc.writeMem(0xffdf, { 0xd });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xabc7, gbc.sp());
        EXPECT(0x6e65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0xffdf));
        // CB 8E 0303
        gbc.setState(0x3569, 0xccc0, 0x8fb0, 0x2a6f, 0xa19c, 0x501c, 0x0, 0x0);
        gbc.writeMem(0x3569, { 0xcb, 0x8e });
        gbc.writeMem(0x501c, { 0xf1 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xccc0, gbc.sp());
        EXPECT(0x356b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8E 0304
        gbc.setState(0x3284, 0xc494, 0xead0, 0xe591, 0x3374, 0xb6b7, 0x1, 0x1);
        gbc.writeMem(0x3284, { 0xcb, 0x8e });
        gbc.writeMem(0xb6b7, { 0x6b });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xc494, gbc.sp());
        EXPECT(0x3286, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xb6b7));
        // CB 8E 030C
        gbc.setState(0x146a, 0xc8f7, 0x9a60, 0xb2cc, 0xc0e7, 0x86eb, 0x0, 0x1);
        gbc.writeMem(0x146a, { 0xcb, 0x8e });
        gbc.writeMem(0x86eb, { 0xd5 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xc8f7, gbc.sp());
        EXPECT(0x146c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0x86eb));
        // CB 8E 030E
        gbc.setState(0xa71b, 0xf69f, 0xf770, 0x2349, 0xc03e, 0xaae6, 0x0, 0x0);
        gbc.writeMem(0xa71b, { 0xcb, 0x8e });
        gbc.writeMem(0xaae6, { 0xeb });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xf69f, gbc.sp());
        EXPECT(0xa71d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa71b));
        EXPECT(0x8e, gbc.readMem(0xa71c));
        EXPECT(0xe9, gbc.readMem(0xaae6));
        // CB 8E 030F
        gbc.setState(0x73b, 0x881e, 0xfa10, 0x9a, 0xf1f5, 0xff14, 0x1, 0x1);
        gbc.writeMem(0x73b, { 0xcb, 0x8e });
        gbc.writeMem(0xff14, { 0xae });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x881e, gbc.sp());
        EXPECT(0x73d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xff14));
        // CB 8E 0310
        gbc.setState(0x164b, 0x17f9, 0x6720, 0x4246, 0xfc88, 0xedc, 0x1, 0x1);
        gbc.writeMem(0xedc, { 0x21 });
        gbc.writeMem(0x164b, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x17f9, gbc.sp());
        EXPECT(0x164d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8E 0311
        gbc.setState(0x4afb, 0x85f7, 0xa250, 0x4f3d, 0x1cf4, 0x6ffa, 0x1, 0x0);
        gbc.writeMem(0x4afb, { 0xcb, 0x8e });
        gbc.writeMem(0x6ffa, { 0x8c });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x85f7, gbc.sp());
        EXPECT(0x4afd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8E 0312
        gbc.setState(0x8ca3, 0x6970, 0x68b0, 0x5c63, 0x1fcb, 0xad83, 0x1, 0x0);
        gbc.writeMem(0x8ca3, { 0xcb, 0x8e });
        gbc.writeMem(0xad83, { 0xa3 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x6970, gbc.sp());
        EXPECT(0x8ca5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ca3));
        EXPECT(0x8e, gbc.readMem(0x8ca4));
        EXPECT(0xa1, gbc.readMem(0xad83));
        // CB 8E 0314
        gbc.setState(0xcd2c, 0xc8bc, 0xc210, 0x4dca, 0x921b, 0x8e98, 0x1, 0x1);
        gbc.writeMem(0x8e98, { 0x4d });
        gbc.writeMem(0xcd2c, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xc8bc, gbc.sp());
        EXPECT(0xcd2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x8e98));
        EXPECT(0xcb, gbc.readMem(0xcd2c));
        EXPECT(0x8e, gbc.readMem(0xcd2d));
        // CB 8E 0315
        gbc.setState(0x1a4d, 0x580a, 0x8aa0, 0x87f3, 0x978e, 0x34a0, 0x0, 0x1);
        gbc.writeMem(0x1a4d, { 0xcb, 0x8e });
        gbc.writeMem(0x34a0, { 0x69 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x580a, gbc.sp());
        EXPECT(0x1a4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8E 0316
        gbc.setState(0x6854, 0xe829, 0x9f50, 0x5223, 0xc3fc, 0xe6fd, 0x0, 0x1);
        gbc.writeMem(0x6854, { 0xcb, 0x8e });
        gbc.writeMem(0xe6fd, { 0x9f });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xe829, gbc.sp());
        EXPECT(0x6856, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xe6fd));
        // CB 8E 0319
        gbc.setState(0x95f7, 0xd335, 0xd580, 0xef57, 0x2f19, 0xf456, 0x1, 0x1);
        gbc.writeMem(0x95f7, { 0xcb, 0x8e });
        gbc.writeMem(0xf456, { 0x62 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xd335, gbc.sp());
        EXPECT(0x95f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95f7));
        EXPECT(0x8e, gbc.readMem(0x95f8));
        EXPECT(0x60, gbc.readMem(0xf456));
        // CB 8E 031A
        gbc.setState(0x4a82, 0xea28, 0x81b0, 0x7eb, 0xb712, 0x58c, 0x0, 0x1);
        gbc.writeMem(0x58c, { 0xe5 });
        gbc.writeMem(0x4a82, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xea28, gbc.sp());
        EXPECT(0x4a84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8E 031B
        gbc.setState(0x1a33, 0x1cac, 0x8270, 0x8ccf, 0x9caf, 0xefe9, 0x1, 0x1);
        gbc.writeMem(0x1a33, { 0xcb, 0x8e });
        gbc.writeMem(0xefe9, { 0xce });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x1cac, gbc.sp());
        EXPECT(0x1a35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcc, gbc.readMem(0xefe9));
        // CB 8E 031E
        gbc.setState(0x8589, 0x6f77, 0x400, 0xeac2, 0xcbed, 0x839c, 0x1, 0x0);
        gbc.writeMem(0x839c, { 0x40 });
        gbc.writeMem(0x8589, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x6f77, gbc.sp());
        EXPECT(0x858b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x839c));
        EXPECT(0xcb, gbc.readMem(0x8589));
        EXPECT(0x8e, gbc.readMem(0x858a));
        // CB 8E 0321
        gbc.setState(0x7f5d, 0x2205, 0x6990, 0x3cc1, 0xf9a3, 0xe759, 0x0, 0x0);
        gbc.writeMem(0x7f5d, { 0xcb, 0x8e });
        gbc.writeMem(0xe759, { 0x2d });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x2205, gbc.sp());
        EXPECT(0x7f5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xe759));
        // CB 8E 0322
        gbc.setState(0xdbb, 0xe2df, 0x8b40, 0xb50d, 0xcd2a, 0x1b4a, 0x0, 0x1);
        gbc.writeMem(0xdbb, { 0xcb, 0x8e });
        gbc.writeMem(0x1b4a, { 0x11 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xe2df, gbc.sp());
        EXPECT(0xdbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8E 0324
        gbc.setState(0x1f70, 0x516b, 0xdb60, 0x18ff, 0xc645, 0xab3b, 0x1, 0x0);
        gbc.writeMem(0x1f70, { 0xcb, 0x8e });
        gbc.writeMem(0xab3b, { 0xe7 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x516b, gbc.sp());
        EXPECT(0x1f72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xab3b));
        // CB 8E 0325
        gbc.setState(0xc2d6, 0x68f8, 0x7030, 0x4e9b, 0x389c, 0x64f7, 0x0, 0x1);
        gbc.writeMem(0x64f7, { 0xe0 });
        gbc.writeMem(0xc2d6, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x68f8, gbc.sp());
        EXPECT(0xc2d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2d6));
        EXPECT(0x8e, gbc.readMem(0xc2d7));
        // CB 8E 0327
        gbc.setState(0x2f21, 0xf910, 0xd740, 0x970b, 0x8e02, 0xbb95, 0x0, 0x1);
        gbc.writeMem(0x2f21, { 0xcb, 0x8e });
        gbc.writeMem(0xbb95, { 0x8 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xf910, gbc.sp());
        EXPECT(0x2f23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0xbb95));
        // CB 8E 0328
        gbc.setState(0xaa60, 0x4088, 0x5d20, 0x5c66, 0x300c, 0xd5e, 0x1, 0x0);
        gbc.writeMem(0xd5e, { 0x6d });
        gbc.writeMem(0xaa60, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x4088, gbc.sp());
        EXPECT(0xaa62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa60));
        EXPECT(0x8e, gbc.readMem(0xaa61));
        // CB 8E 0329
        gbc.setState(0x1a95, 0xba6b, 0x5950, 0x69c8, 0x2152, 0xcf7d, 0x1, 0x0);
        gbc.writeMem(0x1a95, { 0xcb, 0x8e });
        gbc.writeMem(0xcf7d, { 0x19 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xba6b, gbc.sp());
        EXPECT(0x1a97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xcf7d));
        // CB 8E 032A
        gbc.setState(0x8b24, 0xb360, 0x2c70, 0xdfa3, 0x8a12, 0xbfa6, 0x1, 0x1);
        gbc.writeMem(0x8b24, { 0xcb, 0x8e });
        gbc.writeMem(0xbfa6, { 0xb2 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xb360, gbc.sp());
        EXPECT(0x8b26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b24));
        EXPECT(0x8e, gbc.readMem(0x8b25));
        EXPECT(0xb0, gbc.readMem(0xbfa6));
        // CB 8E 032B
        gbc.setState(0x20b0, 0x84b0, 0x7cc0, 0x4fd5, 0xdff6, 0xb8d4, 0x1, 0x1);
        gbc.writeMem(0x20b0, { 0xcb, 0x8e });
        gbc.writeMem(0xb8d4, { 0x4b });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x84b0, gbc.sp());
        EXPECT(0x20b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xb8d4));
        // CB 8E 032C
        gbc.setState(0x4b57, 0xc866, 0x8030, 0xe94c, 0x1fd8, 0xf478, 0x0, 0x1);
        gbc.writeMem(0x4b57, { 0xcb, 0x8e });
        gbc.writeMem(0xf478, { 0x42 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xc866, gbc.sp());
        EXPECT(0x4b59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xf478));
        // CB 8E 032D
        gbc.setState(0x41cc, 0xf2a5, 0xa400, 0x1668, 0x1cc7, 0xff00, 0x0, 0x1);
        gbc.writeMem(0x41cc, { 0xcb, 0x8e });
        gbc.writeMem(0xff00, { 0x3a });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xf2a5, gbc.sp());
        EXPECT(0x41ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xff00));
        // CB 8E 032E
        gbc.setState(0x8e7e, 0x16e1, 0xf830, 0xa44b, 0x2fb3, 0xf48b, 0x1, 0x1);
        gbc.writeMem(0x8e7e, { 0xcb, 0x8e });
        gbc.writeMem(0xf48b, { 0x2a });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x16e1, gbc.sp());
        EXPECT(0x8e80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e7e));
        EXPECT(0x8e, gbc.readMem(0x8e7f));
        EXPECT(0x28, gbc.readMem(0xf48b));
        // CB 8E 0331
        gbc.setState(0x3fcb, 0x60b9, 0xa030, 0x739f, 0x8677, 0xb578, 0x0, 0x1);
        gbc.writeMem(0x3fcb, { 0xcb, 0x8e });
        gbc.writeMem(0xb578, { 0xf5 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x60b9, gbc.sp());
        EXPECT(0x3fcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xb578));
        // CB 8E 0332
        gbc.setState(0xc067, 0xe9fa, 0xc6b0, 0x3fd7, 0x81cb, 0xa4b7, 0x1, 0x1);
        gbc.writeMem(0xa4b7, { 0xf4 });
        gbc.writeMem(0xc067, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xe9fa, gbc.sp());
        EXPECT(0xc069, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0xa4b7));
        EXPECT(0xcb, gbc.readMem(0xc067));
        EXPECT(0x8e, gbc.readMem(0xc068));
        // CB 8E 0335
        gbc.setState(0xa9b4, 0x8c55, 0xb180, 0xf597, 0x65c9, 0x7835, 0x1, 0x0);
        gbc.writeMem(0x7835, { 0x3d });
        gbc.writeMem(0xa9b4, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x8c55, gbc.sp());
        EXPECT(0xa9b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9b4));
        EXPECT(0x8e, gbc.readMem(0xa9b5));
        // CB 8E 0336
        gbc.setState(0x3de1, 0x4487, 0xd6d0, 0x2efe, 0xdd98, 0xfde2, 0x0, 0x1);
        gbc.writeMem(0x3de1, { 0xcb, 0x8e });
        gbc.writeMem(0xfde2, { 0xf5 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x4487, gbc.sp());
        EXPECT(0x3de3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xfde2));
        // CB 8E 0337
        gbc.setState(0xbc9a, 0xddf5, 0x2670, 0x79c5, 0x6380, 0xb98a, 0x0, 0x0);
        gbc.writeMem(0xb98a, { 0xd6 });
        gbc.writeMem(0xbc9a, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xddf5, gbc.sp());
        EXPECT(0xbc9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xb98a));
        EXPECT(0xcb, gbc.readMem(0xbc9a));
        EXPECT(0x8e, gbc.readMem(0xbc9b));
        // CB 8E 0338
        gbc.setState(0x8f55, 0x5873, 0xacd0, 0x795b, 0x56ba, 0xa38f, 0x0, 0x0);
        gbc.writeMem(0x8f55, { 0xcb, 0x8e });
        gbc.writeMem(0xa38f, { 0xa1 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x5873, gbc.sp());
        EXPECT(0x8f57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f55));
        EXPECT(0x8e, gbc.readMem(0x8f56));
        EXPECT(0xa1, gbc.readMem(0xa38f));
        // CB 8E 033A
        gbc.setState(0x6347, 0xc672, 0xb330, 0xb1b5, 0x383a, 0x147f, 0x1, 0x1);
        gbc.writeMem(0x147f, { 0x9 });
        gbc.writeMem(0x6347, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xc672, gbc.sp());
        EXPECT(0x6349, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8E 033C
        gbc.setState(0x2464, 0x1765, 0x6610, 0x418e, 0xdee2, 0xa580, 0x0, 0x0);
        gbc.writeMem(0x2464, { 0xcb, 0x8e });
        gbc.writeMem(0xa580, { 0xc1 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x1765, gbc.sp());
        EXPECT(0x2466, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xa580));
        // CB 8E 033D
        gbc.setState(0x770b, 0xde9, 0x2760, 0xa37e, 0xf6b0, 0xdad8, 0x1, 0x1);
        gbc.writeMem(0x770b, { 0xcb, 0x8e });
        gbc.writeMem(0xdad8, { 0xc5 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xde9, gbc.sp());
        EXPECT(0x770d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xdad8));
        // CB 8E 033E
        gbc.setState(0x61e0, 0xf920, 0x3190, 0x38b8, 0xd661, 0xe797, 0x0, 0x0);
        gbc.writeMem(0x61e0, { 0xcb, 0x8e });
        gbc.writeMem(0xe797, { 0xa9 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xf920, gbc.sp());
        EXPECT(0x61e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa9, gbc.readMem(0xe797));
        // CB 8E 033F
        gbc.setState(0xca36, 0x123a, 0x8320, 0xbf8b, 0xbfc3, 0x3233, 0x0, 0x1);
        gbc.writeMem(0x3233, { 0x80 });
        gbc.writeMem(0xca36, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x123a, gbc.sp());
        EXPECT(0xca38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca36));
        EXPECT(0x8e, gbc.readMem(0xca37));
        // CB 8E 0340
        gbc.setState(0x2999, 0xe83d, 0xbb20, 0x1a0, 0xd9d8, 0xb216, 0x0, 0x1);
        gbc.writeMem(0x2999, { 0xcb, 0x8e });
        gbc.writeMem(0xb216, { 0xc3 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xe83d, gbc.sp());
        EXPECT(0x299b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xb216));
        // CB 8E 0341
        gbc.setState(0x2029, 0x74d8, 0x6170, 0xc66c, 0x42ee, 0xde64, 0x0, 0x0);
        gbc.writeMem(0x2029, { 0xcb, 0x8e });
        gbc.writeMem(0xde64, { 0xd6 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x74d8, gbc.sp());
        EXPECT(0x202b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xde64));
        // CB 8E 0342
        gbc.setState(0xdbd3, 0xee01, 0x37a0, 0x7ca3, 0x41b9, 0xf15d, 0x0, 0x0);
        gbc.writeMem(0xdbd3, { 0xcb, 0x8e });
        gbc.writeMem(0xf15d, { 0xa9 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xee01, gbc.sp());
        EXPECT(0xdbd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbd3));
        EXPECT(0x8e, gbc.readMem(0xdbd4));
        EXPECT(0xa9, gbc.readMem(0xf15d));
        // CB 8E 0344
        gbc.setState(0x61fa, 0x819, 0x4110, 0x5d7a, 0xdbc8, 0xedab, 0x1, 0x1);
        gbc.writeMem(0x61fa, { 0xcb, 0x8e });
        gbc.writeMem(0xedab, { 0xd3 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x819, gbc.sp());
        EXPECT(0x61fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0xedab));
        // CB 8E 0345
        gbc.setState(0x7b3d, 0x3875, 0x2e00, 0xf933, 0xe8f, 0xa6b3, 0x0, 0x0);
        gbc.writeMem(0x7b3d, { 0xcb, 0x8e });
        gbc.writeMem(0xa6b3, { 0x3a });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x3875, gbc.sp());
        EXPECT(0x7b3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xa6b3));
        // CB 8E 0347
        gbc.setState(0x4280, 0x3b33, 0x7bb0, 0x4ecf, 0x3c96, 0xd76e, 0x0, 0x0);
        gbc.writeMem(0x4280, { 0xcb, 0x8e });
        gbc.writeMem(0xd76e, { 0xf8 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x3b33, gbc.sp());
        EXPECT(0x4282, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xd76e));
        // CB 8E 0348
        gbc.setState(0x6f14, 0x1186, 0xa170, 0x25ff, 0xf9da, 0xd0f1, 0x0, 0x0);
        gbc.writeMem(0x6f14, { 0xcb, 0x8e });
        gbc.writeMem(0xd0f1, { 0x2d });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x1186, gbc.sp());
        EXPECT(0x6f16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xd0f1));
        // CB 8E 034A
        gbc.setState(0xc880, 0x83ff, 0x8490, 0x15bb, 0x302e, 0x6336, 0x1, 0x0);
        gbc.writeMem(0x6336, { 0xf9 });
        gbc.writeMem(0xc880, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x83ff, gbc.sp());
        EXPECT(0xc882, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc880));
        EXPECT(0x8e, gbc.readMem(0xc881));
        // CB 8E 034C
        gbc.setState(0x273d, 0x7d66, 0x4e80, 0x2e85, 0x8f53, 0x4e7, 0x0, 0x1);
        gbc.writeMem(0x4e7, { 0xf4 });
        gbc.writeMem(0x273d, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x7d66, gbc.sp());
        EXPECT(0x273f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8E 034D
        gbc.setState(0xe555, 0x2385, 0x6760, 0xa8ba, 0xd119, 0x7593, 0x1, 0x0);
        gbc.writeMem(0x7593, { 0xb5 });
        gbc.writeMem(0xe555, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x2385, gbc.sp());
        EXPECT(0xe557, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe555));
        EXPECT(0x8e, gbc.readMem(0xe556));
        // CB 8E 034F
        gbc.setState(0x8d79, 0x981a, 0x47d0, 0xcff1, 0x6650, 0xdbaa, 0x1, 0x0);
        gbc.writeMem(0x8d79, { 0xcb, 0x8e });
        gbc.writeMem(0xdbaa, { 0x3c });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x981a, gbc.sp());
        EXPECT(0x8d7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d79));
        EXPECT(0x8e, gbc.readMem(0x8d7a));
        EXPECT(0x3c, gbc.readMem(0xdbaa));
        // CB 8E 0353
        gbc.setState(0x6846, 0xe51c, 0x2b30, 0xbdd4, 0xd540, 0xb9fd, 0x1, 0x1);
        gbc.writeMem(0x6846, { 0xcb, 0x8e });
        gbc.writeMem(0xb9fd, { 0x89 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xe51c, gbc.sp());
        EXPECT(0x6848, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xb9fd));
        // CB 8E 0356
        gbc.setState(0x6695, 0x2e7e, 0x44f0, 0x51a, 0x4537, 0x2670, 0x0, 0x0);
        gbc.writeMem(0x2670, { 0xcc });
        gbc.writeMem(0x6695, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x2e7e, gbc.sp());
        EXPECT(0x6697, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8E 0359
        gbc.setState(0x9ff7, 0x2b4d, 0xd050, 0x1584, 0x196, 0x4351, 0x1, 0x0);
        gbc.writeMem(0x4351, { 0x91 });
        gbc.writeMem(0x9ff7, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x2b4d, gbc.sp());
        EXPECT(0x9ff9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ff7));
        EXPECT(0x8e, gbc.readMem(0x9ff8));
        // CB 8E 035A
        gbc.setState(0xc82c, 0x3050, 0x13d0, 0x8e61, 0xdd71, 0xaa10, 0x1, 0x0);
        gbc.writeMem(0xaa10, { 0x5 });
        gbc.writeMem(0xc82c, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x3050, gbc.sp());
        EXPECT(0xc82e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xaa10));
        EXPECT(0xcb, gbc.readMem(0xc82c));
        EXPECT(0x8e, gbc.readMem(0xc82d));
        // CB 8E 035E
        gbc.setState(0xecc3, 0x885a, 0x94c0, 0x2765, 0x3499, 0xcff2, 0x0, 0x1);
        gbc.writeMem(0xcff2, { 0xd6 });
        gbc.writeMem(0xecc3, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x885a, gbc.sp());
        EXPECT(0xecc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xcff2));
        EXPECT(0xcb, gbc.readMem(0xecc3));
        EXPECT(0x8e, gbc.readMem(0xecc4));
        // CB 8E 035F
        gbc.setState(0xbd16, 0x5cb0, 0xac00, 0xdad0, 0xc67c, 0x8a86, 0x0, 0x0);
        gbc.writeMem(0x8a86, { 0x43 });
        gbc.writeMem(0xbd16, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x5cb0, gbc.sp());
        EXPECT(0xbd18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x41, gbc.readMem(0x8a86));
        EXPECT(0xcb, gbc.readMem(0xbd16));
        EXPECT(0x8e, gbc.readMem(0xbd17));
        // CB 8E 0360
        gbc.setState(0x1da9, 0xbee9, 0xf4f0, 0x4b35, 0x8ab4, 0x85ea, 0x1, 0x0);
        gbc.writeMem(0x1da9, { 0xcb, 0x8e });
        gbc.writeMem(0x85ea, { 0xe0 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xbee9, gbc.sp());
        EXPECT(0x1dab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0x85ea));
        // CB 8E 0362
        gbc.setState(0xb00f, 0xd9d8, 0x2900, 0xb241, 0xbc5f, 0x2991, 0x1, 0x1);
        gbc.writeMem(0x2991, { 0x4d });
        gbc.writeMem(0xb00f, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xd9d8, gbc.sp());
        EXPECT(0xb011, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb00f));
        EXPECT(0x8e, gbc.readMem(0xb010));
        // CB 8E 0363
        gbc.setState(0x6ab5, 0xf761, 0xb2a0, 0x4d01, 0x820b, 0x939e, 0x1, 0x1);
        gbc.writeMem(0x6ab5, { 0xcb, 0x8e });
        gbc.writeMem(0x939e, { 0x92 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xf761, gbc.sp());
        EXPECT(0x6ab7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0x939e));
        // CB 8E 0365
        gbc.setState(0xadf6, 0x99a7, 0x2650, 0x9fe2, 0xad94, 0x2fb3, 0x0, 0x1);
        gbc.writeMem(0x2fb3, { 0xa9 });
        gbc.writeMem(0xadf6, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x99a7, gbc.sp());
        EXPECT(0xadf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadf6));
        EXPECT(0x8e, gbc.readMem(0xadf7));
        // CB 8E 0367
        gbc.setState(0x65c1, 0x4946, 0x9c10, 0xeba6, 0x4986, 0xf874, 0x1, 0x1);
        gbc.writeMem(0x65c1, { 0xcb, 0x8e });
        gbc.writeMem(0xf874, { 0x44 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x4946, gbc.sp());
        EXPECT(0x65c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xf874));
        // CB 8E 0369
        gbc.setState(0xada2, 0xf3aa, 0x1870, 0x1a4e, 0xe74e, 0xe068, 0x1, 0x1);
        gbc.writeMem(0xada2, { 0xcb, 0x8e });
        gbc.writeMem(0xe068, { 0x0 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xf3aa, gbc.sp());
        EXPECT(0xada4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xada2));
        EXPECT(0x8e, gbc.readMem(0xada3));
        EXPECT(0x0, gbc.readMem(0xe068));
        // CB 8E 036A
        gbc.setState(0xc026, 0xa1dd, 0x5b0, 0x731c, 0x15e1, 0x794d, 0x0, 0x0);
        gbc.writeMem(0x794d, { 0x89 });
        gbc.writeMem(0xc026, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xa1dd, gbc.sp());
        EXPECT(0xc028, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc026));
        EXPECT(0x8e, gbc.readMem(0xc027));
        // CB 8E 036B
        gbc.setState(0x4fc8, 0x79af, 0xea30, 0x4c5d, 0x8b95, 0x96b4, 0x1, 0x1);
        gbc.writeMem(0x4fc8, { 0xcb, 0x8e });
        gbc.writeMem(0x96b4, { 0x38 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x79af, gbc.sp());
        EXPECT(0x4fca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x96b4));
        // CB 8E 036C
        gbc.setState(0xcd1, 0x98a8, 0x41f0, 0x24d0, 0x6f00, 0xa06f, 0x1, 0x1);
        gbc.writeMem(0xcd1, { 0xcb, 0x8e });
        gbc.writeMem(0xa06f, { 0x3e });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x98a8, gbc.sp());
        EXPECT(0xcd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xa06f));
        // CB 8E 036F
        gbc.setState(0x1484, 0x4c92, 0xc610, 0xceab, 0x3f4e, 0xe2a6, 0x0, 0x0);
        gbc.writeMem(0x1484, { 0xcb, 0x8e });
        gbc.writeMem(0xe2a6, { 0xb9 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x4c92, gbc.sp());
        EXPECT(0x1486, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xe2a6));
        // CB 8E 0370
        gbc.setState(0x4b8f, 0x5e41, 0x87e0, 0xff31, 0x8e15, 0xd703, 0x0, 0x1);
        gbc.writeMem(0x4b8f, { 0xcb, 0x8e });
        gbc.writeMem(0xd703, { 0xa2 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x5e41, gbc.sp());
        EXPECT(0x4b91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xd703));
        // CB 8E 0371
        gbc.setState(0xb679, 0x205, 0xed50, 0x47ec, 0x844c, 0x7001, 0x1, 0x0);
        gbc.writeMem(0x7001, { 0xa0 });
        gbc.writeMem(0xb679, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x205, gbc.sp());
        EXPECT(0xb67b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb679));
        EXPECT(0x8e, gbc.readMem(0xb67a));
        // CB 8E 0373
        gbc.setState(0xe71b, 0xcc4d, 0x1df0, 0x7b79, 0xd1ed, 0xd36, 0x1, 0x1);
        gbc.writeMem(0xd36, { 0x24 });
        gbc.writeMem(0xe71b, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xcc4d, gbc.sp());
        EXPECT(0xe71d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe71b));
        EXPECT(0x8e, gbc.readMem(0xe71c));
        // CB 8E 0374
        gbc.setState(0xe1e7, 0xb3e0, 0xb800, 0x7f2e, 0xbad0, 0xe6e9, 0x0, 0x1);
        gbc.writeMem(0xe1e7, { 0xcb, 0x8e });
        gbc.writeMem(0xe6e9, { 0x80 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xb3e0, gbc.sp());
        EXPECT(0xe1e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1e7));
        EXPECT(0x8e, gbc.readMem(0xe1e8));
        EXPECT(0x80, gbc.readMem(0xe6e9));
        // CB 8E 0375
        gbc.setState(0xc3a2, 0xd9d8, 0x65e0, 0xdba2, 0x514a, 0x50, 0x1, 0x1);
        gbc.writeMem(0x50, { 0x55 });
        gbc.writeMem(0xc3a2, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xd9d8, gbc.sp());
        EXPECT(0xc3a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3a2));
        EXPECT(0x8e, gbc.readMem(0xc3a3));
        // CB 8E 0376
        gbc.setState(0x1e9, 0x9cfb, 0x7ff0, 0xb41e, 0xbc3f, 0x31d4, 0x1, 0x1);
        gbc.writeMem(0x1e9, { 0xcb, 0x8e });
        gbc.writeMem(0x31d4, { 0x59 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x9cfb, gbc.sp());
        EXPECT(0x1eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8E 0377
        gbc.setState(0x4aa2, 0xb1f9, 0xbfd0, 0x3f6c, 0x22e, 0x15c0, 0x1, 0x0);
        gbc.writeMem(0x15c0, { 0xf8 });
        gbc.writeMem(0x4aa2, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xb1f9, gbc.sp());
        EXPECT(0x4aa4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8E 0378
        gbc.setState(0x5448, 0x132, 0x81b0, 0x5479, 0xbd63, 0x9249, 0x1, 0x0);
        gbc.writeMem(0x5448, { 0xcb, 0x8e });
        gbc.writeMem(0x9249, { 0x83 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x132, gbc.sp());
        EXPECT(0x544a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x9249));
        // CB 8E 0379
        gbc.setState(0x3af5, 0x6d12, 0x5ba0, 0xd883, 0xcc32, 0x6597, 0x1, 0x0);
        gbc.writeMem(0x3af5, { 0xcb, 0x8e });
        gbc.writeMem(0x6597, { 0xd4 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x6d12, gbc.sp());
        EXPECT(0x3af7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8E 037A
        gbc.setState(0x46d8, 0x3764, 0x84d0, 0xe352, 0x939c, 0x1036, 0x1, 0x0);
        gbc.writeMem(0x1036, { 0x28 });
        gbc.writeMem(0x46d8, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x3764, gbc.sp());
        EXPECT(0x46da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8E 037B
        gbc.setState(0x686b, 0xc6c9, 0x9670, 0xb6aa, 0xd2de, 0x969c, 0x1, 0x0);
        gbc.writeMem(0x686b, { 0xcb, 0x8e });
        gbc.writeMem(0x969c, { 0x60 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xc6c9, gbc.sp());
        EXPECT(0x686d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0x969c));
        // CB 8E 037C
        gbc.setState(0x1f54, 0xc024, 0x3060, 0x1a57, 0x8d12, 0x5307, 0x0, 0x1);
        gbc.writeMem(0x1f54, { 0xcb, 0x8e });
        gbc.writeMem(0x5307, { 0x51 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xc024, gbc.sp());
        EXPECT(0x1f56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8E 037D
        gbc.setState(0x9fec, 0x849, 0x3460, 0x4dbd, 0xbed9, 0x50bd, 0x0, 0x1);
        gbc.writeMem(0x50bd, { 0xf4 });
        gbc.writeMem(0x9fec, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x849, gbc.sp());
        EXPECT(0x9fee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fec));
        EXPECT(0x8e, gbc.readMem(0x9fed));
        // CB 8E 037F
        gbc.setState(0x98b5, 0x63a5, 0x9820, 0x4de4, 0x96ee, 0xbae9, 0x0, 0x1);
        gbc.writeMem(0x98b5, { 0xcb, 0x8e });
        gbc.writeMem(0xbae9, { 0x99 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x63a5, gbc.sp());
        EXPECT(0x98b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98b5));
        EXPECT(0x8e, gbc.readMem(0x98b6));
        EXPECT(0x99, gbc.readMem(0xbae9));
        // CB 8E 0381
        gbc.setState(0x5320, 0x6eab, 0xbe00, 0x3b17, 0x3b7d, 0xd99c, 0x1, 0x0);
        gbc.writeMem(0x5320, { 0xcb, 0x8e });
        gbc.writeMem(0xd99c, { 0x46 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x6eab, gbc.sp());
        EXPECT(0x5322, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xd99c));
        // CB 8E 0382
        gbc.setState(0x89e7, 0xb359, 0x24b0, 0x21d5, 0xd1df, 0xccfe, 0x0, 0x1);
        gbc.writeMem(0x89e7, { 0xcb, 0x8e });
        gbc.writeMem(0xccfe, { 0x39 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xb359, gbc.sp());
        EXPECT(0x89e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89e7));
        EXPECT(0x8e, gbc.readMem(0x89e8));
        EXPECT(0x39, gbc.readMem(0xccfe));
        // CB 8E 0383
        gbc.setState(0x8f, 0x9790, 0xe2a0, 0x1697, 0x4533, 0xd7c9, 0x1, 0x0);
        gbc.writeMem(0x8f, { 0xcb, 0x8e });
        gbc.writeMem(0xd7c9, { 0x53 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x9790, gbc.sp());
        EXPECT(0x91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xd7c9));
        // CB 8E 0384
        gbc.setState(0x3858, 0xde3d, 0x85e0, 0x85d1, 0x2cbf, 0x130, 0x1, 0x0);
        gbc.writeMem(0x130, { 0x7d });
        gbc.writeMem(0x3858, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xde3d, gbc.sp());
        EXPECT(0x385a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8E 0385
        gbc.setState(0x5f2, 0x6bf8, 0x5ea0, 0xb701, 0xa509, 0x20c0, 0x0, 0x0);
        gbc.writeMem(0x5f2, { 0xcb, 0x8e });
        gbc.writeMem(0x20c0, { 0x11 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x6bf8, gbc.sp());
        EXPECT(0x5f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8E 0386
        gbc.setState(0xcb4d, 0x108e, 0x6730, 0xd105, 0xecdc, 0x7e01, 0x1, 0x0);
        gbc.writeMem(0x7e01, { 0xe9 });
        gbc.writeMem(0xcb4d, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x108e, gbc.sp());
        EXPECT(0xcb4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb4d));
        EXPECT(0x8e, gbc.readMem(0xcb4e));
        // CB 8E 0388
        gbc.setState(0xebc4, 0x1cd4, 0xbc70, 0x5415, 0xc8d9, 0xa877, 0x1, 0x1);
        gbc.writeMem(0xa877, { 0x61 });
        gbc.writeMem(0xebc4, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x1cd4, gbc.sp());
        EXPECT(0xebc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xa877));
        EXPECT(0xcb, gbc.readMem(0xebc4));
        EXPECT(0x8e, gbc.readMem(0xebc5));
        // CB 8E 038A
        gbc.setState(0x6097, 0x5d28, 0xa6e0, 0x4c10, 0xb6d9, 0x9fa8, 0x0, 0x1);
        gbc.writeMem(0x6097, { 0xcb, 0x8e });
        gbc.writeMem(0x9fa8, { 0xc3 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x5d28, gbc.sp());
        EXPECT(0x6099, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x9fa8));
        // CB 8E 038B
        gbc.setState(0xaf79, 0xb2ad, 0x7080, 0xa4a9, 0x9f4b, 0xa763, 0x0, 0x0);
        gbc.writeMem(0xa763, { 0x1d });
        gbc.writeMem(0xaf79, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xb2ad, gbc.sp());
        EXPECT(0xaf7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xa763));
        EXPECT(0xcb, gbc.readMem(0xaf79));
        EXPECT(0x8e, gbc.readMem(0xaf7a));
        // CB 8E 038E
        gbc.setState(0x9c51, 0x559d, 0x3d0, 0xc6f9, 0x4c4d, 0x44aa, 0x0, 0x1);
        gbc.writeMem(0x44aa, { 0x68 });
        gbc.writeMem(0x9c51, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x559d, gbc.sp());
        EXPECT(0x9c53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c51));
        EXPECT(0x8e, gbc.readMem(0x9c52));
        // CB 8E 038F
        gbc.setState(0x6d3a, 0xaa5e, 0xb30, 0x726, 0x878a, 0x2781, 0x0, 0x1);
        gbc.writeMem(0x2781, { 0xec });
        gbc.writeMem(0x6d3a, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xaa5e, gbc.sp());
        EXPECT(0x6d3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8E 0391
        gbc.setState(0xebe4, 0x39dd, 0x9090, 0x9529, 0x8f5c, 0xbafa, 0x1, 0x1);
        gbc.writeMem(0xbafa, { 0x6d });
        gbc.writeMem(0xebe4, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x39dd, gbc.sp());
        EXPECT(0xebe6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xbafa));
        EXPECT(0xcb, gbc.readMem(0xebe4));
        EXPECT(0x8e, gbc.readMem(0xebe5));
        // CB 8E 0392
        gbc.setState(0xcfd8, 0xc25b, 0x24a0, 0x7462, 0x6396, 0x1377, 0x0, 0x0);
        gbc.writeMem(0x1377, { 0x35 });
        gbc.writeMem(0xcfd8, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xc25b, gbc.sp());
        EXPECT(0xcfda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfd8));
        EXPECT(0x8e, gbc.readMem(0xcfd9));
        // CB 8E 0395
        gbc.setState(0x3d3b, 0xadf0, 0xf450, 0x1e61, 0xd9e9, 0xf752, 0x1, 0x0);
        gbc.writeMem(0x3d3b, { 0xcb, 0x8e });
        gbc.writeMem(0xf752, { 0x87 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xadf0, gbc.sp());
        EXPECT(0x3d3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xf752));
        // CB 8E 0396
        gbc.setState(0xa8d6, 0xda2, 0x490, 0xfc5, 0xf8c3, 0xb1d9, 0x1, 0x0);
        gbc.writeMem(0xa8d6, { 0xcb, 0x8e });
        gbc.writeMem(0xb1d9, { 0x2d });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xda2, gbc.sp());
        EXPECT(0xa8d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8d6));
        EXPECT(0x8e, gbc.readMem(0xa8d7));
        EXPECT(0x2d, gbc.readMem(0xb1d9));
        // CB 8E 0397
        gbc.setState(0x8fc0, 0x9c9e, 0xed60, 0x467b, 0x898c, 0xfb7e, 0x1, 0x1);
        gbc.writeMem(0x8fc0, { 0xcb, 0x8e });
        gbc.writeMem(0xfb7e, { 0xad });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x9c9e, gbc.sp());
        EXPECT(0x8fc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fc0));
        EXPECT(0x8e, gbc.readMem(0x8fc1));
        EXPECT(0xad, gbc.readMem(0xfb7e));
        // CB 8E 0398
        gbc.setState(0xc3fd, 0x15d7, 0x8700, 0x28aa, 0x31b9, 0xa248, 0x1, 0x1);
        gbc.writeMem(0xa248, { 0xbd });
        gbc.writeMem(0xc3fd, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x15d7, gbc.sp());
        EXPECT(0xc3ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xa248));
        EXPECT(0xcb, gbc.readMem(0xc3fd));
        EXPECT(0x8e, gbc.readMem(0xc3fe));
        // CB 8E 039A
        gbc.setState(0xe861, 0xd4b2, 0xff40, 0x52a3, 0x205e, 0x2a64, 0x1, 0x0);
        gbc.writeMem(0x2a64, { 0xa5 });
        gbc.writeMem(0xe861, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xd4b2, gbc.sp());
        EXPECT(0xe863, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe861));
        EXPECT(0x8e, gbc.readMem(0xe862));
        // CB 8E 039D
        gbc.setState(0x886b, 0x4b96, 0xf910, 0xfa26, 0xa68a, 0x43a8, 0x1, 0x0);
        gbc.writeMem(0x43a8, { 0x34 });
        gbc.writeMem(0x886b, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x4b96, gbc.sp());
        EXPECT(0x886d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x886b));
        EXPECT(0x8e, gbc.readMem(0x886c));
        // CB 8E 039E
        gbc.setState(0x8dc7, 0x93d8, 0x2620, 0xacfc, 0x93a9, 0x67da, 0x0, 0x0);
        gbc.writeMem(0x67da, { 0xed });
        gbc.writeMem(0x8dc7, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x93d8, gbc.sp());
        EXPECT(0x8dc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dc7));
        EXPECT(0x8e, gbc.readMem(0x8dc8));
        // CB 8E 039F
        gbc.setState(0x6d5c, 0xd9ce, 0x9f40, 0x1bf6, 0xcbb7, 0x834, 0x1, 0x0);
        gbc.writeMem(0x834, { 0x45 });
        gbc.writeMem(0x6d5c, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xd9ce, gbc.sp());
        EXPECT(0x6d5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8E 03A0
        gbc.setState(0x84bd, 0x88b2, 0x9740, 0x45f9, 0xb54a, 0x854, 0x0, 0x0);
        gbc.writeMem(0x854, { 0x58 });
        gbc.writeMem(0x84bd, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x88b2, gbc.sp());
        EXPECT(0x84bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84bd));
        EXPECT(0x8e, gbc.readMem(0x84be));
        // CB 8E 03A1
        gbc.setState(0x7623, 0xabf1, 0xfb40, 0x45b1, 0xad05, 0xcb92, 0x1, 0x0);
        gbc.writeMem(0x7623, { 0xcb, 0x8e });
        gbc.writeMem(0xcb92, { 0x9a });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xabf1, gbc.sp());
        EXPECT(0x7625, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xcb92));
        // CB 8E 03A2
        gbc.setState(0xb084, 0xe595, 0xf330, 0xd25b, 0x8949, 0xe58a, 0x1, 0x1);
        gbc.writeMem(0xb084, { 0xcb, 0x8e });
        gbc.writeMem(0xe58a, { 0x73 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xe595, gbc.sp());
        EXPECT(0xb086, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb084));
        EXPECT(0x8e, gbc.readMem(0xb085));
        EXPECT(0x71, gbc.readMem(0xe58a));
        // CB 8E 03A3
        gbc.setState(0x783a, 0x11b2, 0x9670, 0x8e7a, 0x7ece, 0xca44, 0x0, 0x0);
        gbc.writeMem(0x783a, { 0xcb, 0x8e });
        gbc.writeMem(0xca44, { 0xa5 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x11b2, gbc.sp());
        EXPECT(0x783c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa5, gbc.readMem(0xca44));
        // CB 8E 03A5
        gbc.setState(0x37b8, 0xa83d, 0x8e50, 0x80e2, 0x637f, 0x88ea, 0x1, 0x0);
        gbc.writeMem(0x37b8, { 0xcb, 0x8e });
        gbc.writeMem(0x88ea, { 0xcf });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xa83d, gbc.sp());
        EXPECT(0x37ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0x88ea));
        // CB 8E 03A6
        gbc.setState(0xd2b0, 0x5f2d, 0xaca0, 0x5747, 0xfa58, 0x285, 0x0, 0x1);
        gbc.writeMem(0x285, { 0x2d });
        gbc.writeMem(0xd2b0, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x5f2d, gbc.sp());
        EXPECT(0xd2b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2b0));
        EXPECT(0x8e, gbc.readMem(0xd2b1));
        // CB 8E 03A7
        gbc.setState(0xe21c, 0x1a66, 0xc4c0, 0x5127, 0x9cc8, 0x29cf, 0x0, 0x0);
        gbc.writeMem(0x29cf, { 0x2d });
        gbc.writeMem(0xe21c, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x1a66, gbc.sp());
        EXPECT(0xe21e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe21c));
        EXPECT(0x8e, gbc.readMem(0xe21d));
        // CB 8E 03A8
        gbc.setState(0x6da5, 0xc61e, 0x14d0, 0xe1cb, 0x5e8, 0xa801, 0x0, 0x0);
        gbc.writeMem(0x6da5, { 0xcb, 0x8e });
        gbc.writeMem(0xa801, { 0x84 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xc61e, gbc.sp());
        EXPECT(0x6da7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0xa801));
        // CB 8E 03A9
        gbc.setState(0x88c1, 0xd593, 0xe290, 0x2c82, 0x113b, 0x5be6, 0x0, 0x1);
        gbc.writeMem(0x5be6, { 0x9c });
        gbc.writeMem(0x88c1, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xd593, gbc.sp());
        EXPECT(0x88c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88c1));
        EXPECT(0x8e, gbc.readMem(0x88c2));
        // CB 8E 03AA
        gbc.setState(0xd5b1, 0x2930, 0x7900, 0xf8e8, 0x5003, 0x8faa, 0x1, 0x0);
        gbc.writeMem(0x8faa, { 0x22 });
        gbc.writeMem(0xd5b1, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x2930, gbc.sp());
        EXPECT(0xd5b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x8faa));
        EXPECT(0xcb, gbc.readMem(0xd5b1));
        EXPECT(0x8e, gbc.readMem(0xd5b2));
        // CB 8E 03AB
        gbc.setState(0x1f4c, 0x1e5d, 0xc9a0, 0xc4c9, 0x91e, 0x86ff, 0x0, 0x0);
        gbc.writeMem(0x1f4c, { 0xcb, 0x8e });
        gbc.writeMem(0x86ff, { 0x4 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x1e5d, gbc.sp());
        EXPECT(0x1f4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x86ff));
        // CB 8E 03AC
        gbc.setState(0xa599, 0x41e8, 0xc6e0, 0x51db, 0x8170, 0xa96b, 0x0, 0x1);
        gbc.writeMem(0xa599, { 0xcb, 0x8e });
        gbc.writeMem(0xa96b, { 0x61 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x41e8, gbc.sp());
        EXPECT(0xa59b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa599));
        EXPECT(0x8e, gbc.readMem(0xa59a));
        EXPECT(0x61, gbc.readMem(0xa96b));
        // CB 8E 03AD
        gbc.setState(0x4bba, 0xb7b6, 0x6690, 0xb558, 0xd38f, 0x8a62, 0x1, 0x1);
        gbc.writeMem(0x4bba, { 0xcb, 0x8e });
        gbc.writeMem(0x8a62, { 0x7a });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xb7b6, gbc.sp());
        EXPECT(0x4bbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x8a62));
        // CB 8E 03AE
        gbc.setState(0xb97c, 0x4e12, 0x3010, 0x68b8, 0x898c, 0x7e4, 0x1, 0x0);
        gbc.writeMem(0x7e4, { 0x64 });
        gbc.writeMem(0xb97c, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x4e12, gbc.sp());
        EXPECT(0xb97e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb97c));
        EXPECT(0x8e, gbc.readMem(0xb97d));
        // CB 8E 03AF
        gbc.setState(0xc0c2, 0x7db6, 0xc2b0, 0x87e6, 0xb348, 0x74a6, 0x1, 0x1);
        gbc.writeMem(0x74a6, { 0x65 });
        gbc.writeMem(0xc0c2, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x7db6, gbc.sp());
        EXPECT(0xc0c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0c2));
        EXPECT(0x8e, gbc.readMem(0xc0c3));
        // CB 8E 03B3
        gbc.setState(0x15e4, 0xe016, 0x9450, 0x3f44, 0x8170, 0x8983, 0x0, 0x1);
        gbc.writeMem(0x15e4, { 0xcb, 0x8e });
        gbc.writeMem(0x8983, { 0x84 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xe016, gbc.sp());
        EXPECT(0x15e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0x8983));
        // CB 8E 03B5
        gbc.setState(0x6e3d, 0xfe3a, 0x7440, 0x5514, 0x6afc, 0xa606, 0x1, 0x0);
        gbc.writeMem(0x6e3d, { 0xcb, 0x8e });
        gbc.writeMem(0xa606, { 0x2c });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xfe3a, gbc.sp());
        EXPECT(0x6e3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xa606));
        // CB 8E 03B8
        gbc.setState(0xba27, 0xdce1, 0x1ef0, 0xa732, 0xa27c, 0x7131, 0x0, 0x0);
        gbc.writeMem(0x7131, { 0x20 });
        gbc.writeMem(0xba27, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xdce1, gbc.sp());
        EXPECT(0xba29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba27));
        EXPECT(0x8e, gbc.readMem(0xba28));
        // CB 8E 03B9
        gbc.setState(0xf57, 0xafe3, 0xe790, 0x5c62, 0x3714, 0xc561, 0x0, 0x0);
        gbc.writeMem(0xf57, { 0xcb, 0x8e });
        gbc.writeMem(0xc561, { 0xd2 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xafe3, gbc.sp());
        EXPECT(0xf59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xc561));
        // CB 8E 03BA
        gbc.setState(0xe0a9, 0xe7ac, 0x4600, 0xa2f6, 0xd4fe, 0x82a8, 0x1, 0x1);
        gbc.writeMem(0x82a8, { 0x3e });
        gbc.writeMem(0xe0a9, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xe7ac, gbc.sp());
        EXPECT(0xe0ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x82a8));
        EXPECT(0xcb, gbc.readMem(0xe0a9));
        EXPECT(0x8e, gbc.readMem(0xe0aa));
        // CB 8E 03BB
        gbc.setState(0x4c1a, 0xc4de, 0x7680, 0x3f7d, 0x3e92, 0xdd63, 0x0, 0x0);
        gbc.writeMem(0x4c1a, { 0xcb, 0x8e });
        gbc.writeMem(0xdd63, { 0x55 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xc4de, gbc.sp());
        EXPECT(0x4c1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xdd63));
        // CB 8E 03BE
        gbc.setState(0x9a20, 0xb7be, 0x3630, 0x908f, 0x81a9, 0xdd8d, 0x1, 0x1);
        gbc.writeMem(0x9a20, { 0xcb, 0x8e });
        gbc.writeMem(0xdd8d, { 0x4b });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xb7be, gbc.sp());
        EXPECT(0x9a22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a20));
        EXPECT(0x8e, gbc.readMem(0x9a21));
        EXPECT(0x49, gbc.readMem(0xdd8d));
        // CB 8E 03BF
        gbc.setState(0xd84c, 0x8a13, 0x5180, 0x156f, 0x3b2d, 0xa677, 0x1, 0x0);
        gbc.writeMem(0xa677, { 0x85 });
        gbc.writeMem(0xd84c, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x8a13, gbc.sp());
        EXPECT(0xd84e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xa677));
        EXPECT(0xcb, gbc.readMem(0xd84c));
        EXPECT(0x8e, gbc.readMem(0xd84d));
        // CB 8E 03C0
        gbc.setState(0x5f0, 0xe63a, 0xbb0, 0x63fd, 0xa418, 0x9a1a, 0x0, 0x1);
        gbc.writeMem(0x5f0, { 0xcb, 0x8e });
        gbc.writeMem(0x9a1a, { 0xb9 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xe63a, gbc.sp());
        EXPECT(0x5f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x9a1a));
        // CB 8E 03C2
        gbc.setState(0xdaef, 0xa9dd, 0xfdb0, 0xb283, 0xd04f, 0xe18a, 0x1, 0x0);
        gbc.writeMem(0xdaef, { 0xcb, 0x8e });
        gbc.writeMem(0xe18a, { 0x51 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xa9dd, gbc.sp());
        EXPECT(0xdaf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdaef));
        EXPECT(0x8e, gbc.readMem(0xdaf0));
        EXPECT(0x51, gbc.readMem(0xe18a));
        // CB 8E 03C3
        gbc.setState(0x5484, 0xa259, 0x9700, 0x1828, 0xe464, 0x979f, 0x1, 0x0);
        gbc.writeMem(0x5484, { 0xcb, 0x8e });
        gbc.writeMem(0x979f, { 0xbb });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xa259, gbc.sp());
        EXPECT(0x5486, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x979f));
        // CB 8E 03C4
        gbc.setState(0x8f3, 0xacbe, 0x640, 0xc5ba, 0xd298, 0x994b, 0x0, 0x1);
        gbc.writeMem(0x8f3, { 0xcb, 0x8e });
        gbc.writeMem(0x994b, { 0xe9 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xacbe, gbc.sp());
        EXPECT(0x8f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x994b));
        // CB 8E 03C5
        gbc.setState(0x463e, 0x9304, 0xcac0, 0xb2cc, 0x7dd2, 0x8f73, 0x1, 0x0);
        gbc.writeMem(0x463e, { 0xcb, 0x8e });
        gbc.writeMem(0x8f73, { 0xdd });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x9304, gbc.sp());
        EXPECT(0x4640, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0x8f73));
        // CB 8E 03C7
        gbc.setState(0x8ec, 0xf3e9, 0x20, 0x215d, 0x178, 0x700b, 0x1, 0x0);
        gbc.writeMem(0x8ec, { 0xcb, 0x8e });
        gbc.writeMem(0x700b, { 0xb5 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xf3e9, gbc.sp());
        EXPECT(0x8ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8E 03C8
        gbc.setState(0x2568, 0xb82e, 0x6570, 0x3355, 0xecbd, 0x983e, 0x1, 0x1);
        gbc.writeMem(0x2568, { 0xcb, 0x8e });
        gbc.writeMem(0x983e, { 0xd8 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xb82e, gbc.sp());
        EXPECT(0x256a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0x983e));
        // CB 8E 03C9
        gbc.setState(0x4436, 0xc0a9, 0xa330, 0x9dc4, 0x20b4, 0x2c15, 0x1, 0x1);
        gbc.writeMem(0x2c15, { 0x40 });
        gbc.writeMem(0x4436, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xc0a9, gbc.sp());
        EXPECT(0x4438, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8E 03CB
        gbc.setState(0xb8f4, 0xa022, 0xa560, 0x7fe2, 0x3b9e, 0x595d, 0x0, 0x1);
        gbc.writeMem(0x595d, { 0x28 });
        gbc.writeMem(0xb8f4, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xa022, gbc.sp());
        EXPECT(0xb8f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8f4));
        EXPECT(0x8e, gbc.readMem(0xb8f5));
        // CB 8E 03CD
        gbc.setState(0xa8de, 0x6c9e, 0x2060, 0x94d0, 0xa70f, 0x687c, 0x0, 0x0);
        gbc.writeMem(0x687c, { 0x84 });
        gbc.writeMem(0xa8de, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x6c9e, gbc.sp());
        EXPECT(0xa8e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8de));
        EXPECT(0x8e, gbc.readMem(0xa8df));
        // CB 8E 03CE
        gbc.setState(0x62d1, 0x4e9f, 0xf170, 0xa40f, 0xd539, 0x9c81, 0x0, 0x0);
        gbc.writeMem(0x62d1, { 0xcb, 0x8e });
        gbc.writeMem(0x9c81, { 0x74 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x4e9f, gbc.sp());
        EXPECT(0x62d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0x9c81));
        // CB 8E 03CF
        gbc.setState(0x69d0, 0x4c32, 0x3f40, 0xbd71, 0x2277, 0x2996, 0x0, 0x1);
        gbc.writeMem(0x2996, { 0x6c });
        gbc.writeMem(0x69d0, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x4c32, gbc.sp());
        EXPECT(0x69d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8E 03D1
        gbc.setState(0x6ae8, 0x4507, 0x2430, 0x4f8, 0x77e0, 0x98fe, 0x1, 0x0);
        gbc.writeMem(0x6ae8, { 0xcb, 0x8e });
        gbc.writeMem(0x98fe, { 0x3e });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x4507, gbc.sp());
        EXPECT(0x6aea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x98fe));
        // CB 8E 03D4
        gbc.setState(0xe917, 0x7b44, 0x8d10, 0x17c0, 0x98dc, 0x2a70, 0x1, 0x0);
        gbc.writeMem(0x2a70, { 0x28 });
        gbc.writeMem(0xe917, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x7b44, gbc.sp());
        EXPECT(0xe919, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe917));
        EXPECT(0x8e, gbc.readMem(0xe918));
        // CB 8E 03D5
        gbc.setState(0x595e, 0xb2f6, 0x5580, 0xb3eb, 0x4aab, 0x643e, 0x0, 0x1);
        gbc.writeMem(0x595e, { 0xcb, 0x8e });
        gbc.writeMem(0x643e, { 0x4d });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xb2f6, gbc.sp());
        EXPECT(0x5960, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8E 03D6
        gbc.setState(0x9117, 0x30c, 0x4a40, 0xb5e0, 0x9e24, 0x413d, 0x0, 0x1);
        gbc.writeMem(0x413d, { 0x60 });
        gbc.writeMem(0x9117, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x30c, gbc.sp());
        EXPECT(0x9119, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9117));
        EXPECT(0x8e, gbc.readMem(0x9118));
        // CB 8E 03D9
        gbc.setState(0xdd2f, 0xa7e4, 0x1f50, 0x89a8, 0x10b9, 0x9357, 0x0, 0x1);
        gbc.writeMem(0x9357, { 0x52 });
        gbc.writeMem(0xdd2f, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xa7e4, gbc.sp());
        EXPECT(0xdd31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x9357));
        EXPECT(0xcb, gbc.readMem(0xdd2f));
        EXPECT(0x8e, gbc.readMem(0xdd30));
        // CB 8E 03DA
        gbc.setState(0x7324, 0xe09d, 0x3200, 0x5f15, 0x3c08, 0xfbbd, 0x1, 0x0);
        gbc.writeMem(0x7324, { 0xcb, 0x8e });
        gbc.writeMem(0xfbbd, { 0x55 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xe09d, gbc.sp());
        EXPECT(0x7326, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xfbbd));
        // CB 8E 03DB
        gbc.setState(0x3dc2, 0xcc10, 0x8d60, 0xc441, 0xef96, 0x868c, 0x1, 0x1);
        gbc.writeMem(0x3dc2, { 0xcb, 0x8e });
        gbc.writeMem(0x868c, { 0xde });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xcc10, gbc.sp());
        EXPECT(0x3dc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0x868c));
        // CB 8E 03DC
        gbc.setState(0x5b9f, 0xcce6, 0xd1b0, 0xa061, 0xf22c, 0x7e27, 0x1, 0x0);
        gbc.writeMem(0x5b9f, { 0xcb, 0x8e });
        gbc.writeMem(0x7e27, { 0x41 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xcce6, gbc.sp());
        EXPECT(0x5ba1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 8E 03E0
        gbc.setState(0xc3a3, 0x9c74, 0x5dc0, 0x409c, 0x21df, 0x2f1a, 0x1, 0x0);
        gbc.writeMem(0x2f1a, { 0x1d });
        gbc.writeMem(0xc3a3, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x9c74, gbc.sp());
        EXPECT(0xc3a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3a3));
        EXPECT(0x8e, gbc.readMem(0xc3a4));
        // CB 8E 03E1
        gbc.setState(0xbb53, 0x6c19, 0x50a0, 0xba69, 0x5ad1, 0x748b, 0x0, 0x1);
        gbc.writeMem(0x748b, { 0xd8 });
        gbc.writeMem(0xbb53, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x6c19, gbc.sp());
        EXPECT(0xbb55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb53));
        EXPECT(0x8e, gbc.readMem(0xbb54));
        // CB 8E 03E3
        gbc.setState(0xd2bd, 0x9785, 0x62a0, 0xfeee, 0xe00d, 0xae50, 0x1, 0x0);
        gbc.writeMem(0xae50, { 0x37 });
        gbc.writeMem(0xd2bd, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x9785, gbc.sp());
        EXPECT(0xd2bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xae50));
        EXPECT(0xcb, gbc.readMem(0xd2bd));
        EXPECT(0x8e, gbc.readMem(0xd2be));
        // CB 8E 03E4
        gbc.setState(0x5cf5, 0x4192, 0x1b60, 0x7630, 0x6b68, 0x2800, 0x1, 0x1);
        gbc.writeMem(0x2800, { 0xf8 });
        gbc.writeMem(0x5cf5, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x4192, gbc.sp());
        EXPECT(0x5cf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 8E 03E5
        gbc.setState(0xc8c0, 0x646d, 0xe260, 0x1488, 0x8307, 0xb654, 0x0, 0x0);
        gbc.writeMem(0xb654, { 0x5f });
        gbc.writeMem(0xc8c0, { 0xcb, 0x8e });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x646d, gbc.sp());
        EXPECT(0xc8c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xb654));
        EXPECT(0xcb, gbc.readMem(0xc8c0));
        EXPECT(0x8e, gbc.readMem(0xc8c1));
    }
