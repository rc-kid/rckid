    TEST(gbcemu, opcode_25) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 25 0000
        gbc.setState(0xe936, 0xccb1, 0x6930, 0xc71a, 0x5b58, 0xcf8, 0x0, 0x0);
        gbc.writeMem(0xe936, { 0x25 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xccb1, gbc.sp());
        EXPECT(0xe937, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xe936));
        // 25 0002
        gbc.setState(0x7e09, 0x9597, 0x7830, 0xca7a, 0xd6ca, 0x80ce, 0x0, 0x0);
        gbc.writeMem(0x7e09, { 0x25 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x9597, gbc.sp());
        EXPECT(0x7e0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0003
        gbc.setState(0xb950, 0x9942, 0xb6b0, 0xc615, 0xbf2b, 0xe38f, 0x0, 0x0);
        gbc.writeMem(0xb950, { 0x25 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x9942, gbc.sp());
        EXPECT(0xb951, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xb950));
        // 25 0004
        gbc.setState(0x5d18, 0x551, 0xd2b0, 0xc3a2, 0xc2bb, 0xc98f, 0x0, 0x1);
        gbc.writeMem(0x5d18, { 0x25 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x551, gbc.sp());
        EXPECT(0x5d19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0006
        gbc.setState(0x896, 0x673c, 0x5560, 0x66a1, 0x5dc3, 0xee4e, 0x1, 0x1);
        gbc.writeMem(0x896, { 0x25 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x673c, gbc.sp());
        EXPECT(0x897, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0007
        gbc.setState(0x9121, 0xaf23, 0x1f30, 0x1bc3, 0xea39, 0xb28c, 0x0, 0x1);
        gbc.writeMem(0x9121, { 0x25 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xaf23, gbc.sp());
        EXPECT(0x9122, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x9121));
        // 25 0008
        gbc.setState(0xd83e, 0xefd3, 0x3150, 0xff1c, 0xff75, 0xac8f, 0x0, 0x0);
        gbc.writeMem(0xd83e, { 0x25 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xefd3, gbc.sp());
        EXPECT(0xd83f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xd83e));
        // 25 0009
        gbc.setState(0x2bb9, 0xb5c4, 0xa30, 0xd59d, 0xe0b3, 0xbeb8, 0x0, 0x1);
        gbc.writeMem(0x2bb9, { 0x25 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xb5c4, gbc.sp());
        EXPECT(0x2bba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 000A
        gbc.setState(0xe831, 0x62f5, 0xec70, 0xce8b, 0xf370, 0xcc15, 0x0, 0x0);
        gbc.writeMem(0xe831, { 0x25 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x62f5, gbc.sp());
        EXPECT(0xe832, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xe831));
        // 25 000B
        gbc.setState(0x2076, 0x9c5, 0x3c10, 0x3e25, 0x7bc5, 0x40cf, 0x0, 0x1);
        gbc.writeMem(0x2076, { 0x25 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x9c5, gbc.sp());
        EXPECT(0x2077, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 000C
        gbc.setState(0x24fe, 0x1b6c, 0x2260, 0x9f45, 0x13fc, 0x8207, 0x0, 0x1);
        gbc.writeMem(0x24fe, { 0x25 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x1b6c, gbc.sp());
        EXPECT(0x24ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 000D
        gbc.setState(0x39b3, 0xc70, 0xf2e0, 0x1926, 0x3327, 0x59b3, 0x1, 0x0);
        gbc.writeMem(0x39b3, { 0x25 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xc70, gbc.sp());
        EXPECT(0x39b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 000E
        gbc.setState(0xd6f2, 0xd52c, 0x6e20, 0xdffe, 0xec8d, 0x907f, 0x0, 0x0);
        gbc.writeMem(0xd6f2, { 0x25 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xd52c, gbc.sp());
        EXPECT(0xd6f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xd6f2));
        // 25 000F
        gbc.setState(0x8110, 0x2f53, 0xc000, 0x5a1f, 0x4da3, 0x96f, 0x0, 0x1);
        gbc.writeMem(0x8110, { 0x25 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x2f53, gbc.sp());
        EXPECT(0x8111, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x8110));
        // 25 0010
        gbc.setState(0x535f, 0x69ea, 0x1110, 0x4152, 0xf95, 0x7f8b, 0x1, 0x1);
        gbc.writeMem(0x535f, { 0x25 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x69ea, gbc.sp());
        EXPECT(0x5360, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0011
        gbc.setState(0x9260, 0x65ac, 0x5560, 0x1615, 0x7ad0, 0x7f4c, 0x1, 0x0);
        gbc.writeMem(0x9260, { 0x25 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x65ac, gbc.sp());
        EXPECT(0x9261, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x9260));
        // 25 0012
        gbc.setState(0xe2a, 0x593, 0x2130, 0xe6, 0x3b1f, 0x6865, 0x1, 0x1);
        gbc.writeMem(0xe2a, { 0x25 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x593, gbc.sp());
        EXPECT(0xe2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0013
        gbc.setState(0x77fd, 0xfc80, 0x7cb0, 0x80bf, 0xb12c, 0x1e0a, 0x0, 0x1);
        gbc.writeMem(0x77fd, { 0x25 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xfc80, gbc.sp());
        EXPECT(0x77fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0015
        gbc.setState(0x9b20, 0xcab3, 0x1550, 0x490b, 0x2fa0, 0xd70, 0x1, 0x1);
        gbc.writeMem(0x9b20, { 0x25 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xcab3, gbc.sp());
        EXPECT(0x9b21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x9b20));
        // 25 0016
        gbc.setState(0x1567, 0x3e20, 0xb250, 0xa58a, 0x1c21, 0xa839, 0x0, 0x0);
        gbc.writeMem(0x1567, { 0x25 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x3e20, gbc.sp());
        EXPECT(0x1568, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0017
        gbc.setState(0x9443, 0x55e, 0xb0a0, 0x17ed, 0xea80, 0x541a, 0x1, 0x1);
        gbc.writeMem(0x9443, { 0x25 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x55e, gbc.sp());
        EXPECT(0x9444, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x9443));
        // 25 0018
        gbc.setState(0xe3dd, 0x1b81, 0x9d40, 0x81e0, 0xefd8, 0xf81d, 0x1, 0x1);
        gbc.writeMem(0xe3dd, { 0x25 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x1b81, gbc.sp());
        EXPECT(0xe3de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xe3dd));
        // 25 0019
        gbc.setState(0x2161, 0x67e6, 0x3710, 0x242, 0x44d3, 0x541e, 0x0, 0x0);
        gbc.writeMem(0x2161, { 0x25 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x67e6, gbc.sp());
        EXPECT(0x2162, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 001A
        gbc.setState(0x6426, 0xda90, 0x880, 0x7639, 0x9a07, 0xeac7, 0x1, 0x1);
        gbc.writeMem(0x6426, { 0x25 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xda90, gbc.sp());
        EXPECT(0x6427, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 001B
        gbc.setState(0x8673, 0x3927, 0x5d90, 0xb11e, 0x4792, 0xf61b, 0x0, 0x0);
        gbc.writeMem(0x8673, { 0x25 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x3927, gbc.sp());
        EXPECT(0x8674, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x8673));
        // 25 001C
        gbc.setState(0x1430, 0x113, 0xaca0, 0x26d1, 0xefa1, 0x8c28, 0x0, 0x0);
        gbc.writeMem(0x1430, { 0x25 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x113, gbc.sp());
        EXPECT(0x1431, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 001D
        gbc.setState(0xe7e8, 0xe1e8, 0x2e60, 0x941f, 0x8289, 0x2e54, 0x0, 0x1);
        gbc.writeMem(0xe7e8, { 0x25 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xe1e8, gbc.sp());
        EXPECT(0xe7e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xe7e8));
        // 25 001E
        gbc.setState(0x6ff, 0xa619, 0xc3e0, 0x17ac, 0xa21e, 0x8194, 0x1, 0x1);
        gbc.writeMem(0x6ff, { 0x25 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xa619, gbc.sp());
        EXPECT(0x700, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 001F
        gbc.setState(0x40fd, 0xfdf6, 0x97c0, 0xc6b7, 0xb604, 0x7c77, 0x0, 0x0);
        gbc.writeMem(0x40fd, { 0x25 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xfdf6, gbc.sp());
        EXPECT(0x40fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0020
        gbc.setState(0x4125, 0x3f20, 0x4c80, 0xd70a, 0xf267, 0xbfa3, 0x1, 0x1);
        gbc.writeMem(0x4125, { 0x25 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x3f20, gbc.sp());
        EXPECT(0x4126, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0021
        gbc.setState(0x4efe, 0x2105, 0x52c0, 0x2bea, 0xda35, 0xa493, 0x0, 0x0);
        gbc.writeMem(0x4efe, { 0x25 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x2105, gbc.sp());
        EXPECT(0x4eff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0022
        gbc.setState(0xb066, 0x67bf, 0x6410, 0x372c, 0xab19, 0xb17e, 0x0, 0x0);
        gbc.writeMem(0xb066, { 0x25 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x67bf, gbc.sp());
        EXPECT(0xb067, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xb066));
        // 25 0023
        gbc.setState(0xe616, 0x848e, 0x7cb0, 0x805e, 0x618, 0x3182, 0x0, 0x1);
        gbc.writeMem(0xe616, { 0x25 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x848e, gbc.sp());
        EXPECT(0xe617, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xe616));
        // 25 0024
        gbc.setState(0xe872, 0x8ae1, 0xa00, 0xf01d, 0x63f, 0x7931, 0x0, 0x1);
        gbc.writeMem(0xe872, { 0x25 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x8ae1, gbc.sp());
        EXPECT(0xe873, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xe872));
        // 25 0025
        gbc.setState(0x2b31, 0x6f54, 0x2410, 0x6fd7, 0xd005, 0xd2be, 0x0, 0x1);
        gbc.writeMem(0x2b31, { 0x25 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x6f54, gbc.sp());
        EXPECT(0x2b32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0026
        gbc.setState(0x1149, 0x5b3e, 0xa930, 0x9ae0, 0xf61, 0x1fc0, 0x0, 0x1);
        gbc.writeMem(0x1149, { 0x25 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x5b3e, gbc.sp());
        EXPECT(0x114a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0027
        gbc.setState(0xd07c, 0xef43, 0x6330, 0x9347, 0x8843, 0x14ec, 0x1, 0x1);
        gbc.writeMem(0xd07c, { 0x25 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xef43, gbc.sp());
        EXPECT(0xd07d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xd07c));
        // 25 0028
        gbc.setState(0xb7e3, 0xfc60, 0x4220, 0xe37f, 0xe3a0, 0xe869, 0x0, 0x1);
        gbc.writeMem(0xb7e3, { 0x25 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xfc60, gbc.sp());
        EXPECT(0xb7e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xb7e3));
        // 25 0029
        gbc.setState(0x7bd4, 0xcf16, 0x3180, 0xb9ae, 0xb9b0, 0x7243, 0x1, 0x0);
        gbc.writeMem(0x7bd4, { 0x25 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xcf16, gbc.sp());
        EXPECT(0x7bd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 002B
        gbc.setState(0xb9f0, 0x98e6, 0x6690, 0xd568, 0xcdd7, 0xa16f, 0x1, 0x1);
        gbc.writeMem(0xb9f0, { 0x25 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x98e6, gbc.sp());
        EXPECT(0xb9f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xb9f0));
        // 25 002C
        gbc.setState(0x47b8, 0xfb11, 0x6be0, 0x361a, 0xb1ee, 0x7779, 0x0, 0x1);
        gbc.writeMem(0x47b8, { 0x25 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xfb11, gbc.sp());
        EXPECT(0x47b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 002D
        gbc.setState(0xabe0, 0x5e8e, 0x6b0, 0x6512, 0xa555, 0x5423, 0x0, 0x0);
        gbc.writeMem(0xabe0, { 0x25 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x5e8e, gbc.sp());
        EXPECT(0xabe1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xabe0));
        // 25 002E
        gbc.setState(0xb5c0, 0xf3f, 0x78c0, 0x856b, 0xe57e, 0x4631, 0x0, 0x0);
        gbc.writeMem(0xb5c0, { 0x25 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xf3f, gbc.sp());
        EXPECT(0xb5c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xb5c0));
        // 25 002F
        gbc.setState(0x5bb7, 0x9f1e, 0x7c40, 0x1297, 0x4d25, 0x6238, 0x0, 0x0);
        gbc.writeMem(0x5bb7, { 0x25 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x9f1e, gbc.sp());
        EXPECT(0x5bb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0030
        gbc.setState(0x1e8c, 0x4c86, 0x1980, 0x6f1f, 0xac78, 0x853f, 0x1, 0x0);
        gbc.writeMem(0x1e8c, { 0x25 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x4c86, gbc.sp());
        EXPECT(0x1e8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0031
        gbc.setState(0xf54, 0xcb65, 0x99e0, 0x48a3, 0xc67e, 0xfd2e, 0x0, 0x0);
        gbc.writeMem(0xf54, { 0x25 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xcb65, gbc.sp());
        EXPECT(0xf55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0032
        gbc.setState(0x1513, 0x57d0, 0x1800, 0x62e8, 0xb7f1, 0xc881, 0x0, 0x1);
        gbc.writeMem(0x1513, { 0x25 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x57d0, gbc.sp());
        EXPECT(0x1514, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0033
        gbc.setState(0xad5c, 0x9fdd, 0xd200, 0xb21a, 0x1f03, 0x99dc, 0x1, 0x0);
        gbc.writeMem(0xad5c, { 0x25 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x9fdd, gbc.sp());
        EXPECT(0xad5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xad5c));
        // 25 0034
        gbc.setState(0xc3cc, 0x20b9, 0xa380, 0xabf0, 0x5ade, 0x5698, 0x0, 0x1);
        gbc.writeMem(0xc3cc, { 0x25 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x20b9, gbc.sp());
        EXPECT(0xc3cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xc3cc));
        // 25 0035
        gbc.setState(0x75f, 0x5eef, 0xfe60, 0x8f0a, 0x9b6a, 0x62d8, 0x1, 0x1);
        gbc.writeMem(0x75f, { 0x25 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x5eef, gbc.sp());
        EXPECT(0x760, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0036
        gbc.setState(0x26ff, 0x69b0, 0x7ac0, 0xa942, 0x5c4e, 0x707b, 0x0, 0x0);
        gbc.writeMem(0x26ff, { 0x25 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x69b0, gbc.sp());
        EXPECT(0x2700, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0037
        gbc.setState(0x700e, 0x4826, 0x9b0, 0x50ff, 0x5010, 0x479c, 0x0, 0x0);
        gbc.writeMem(0x700e, { 0x25 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x4826, gbc.sp());
        EXPECT(0x700f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0038
        gbc.setState(0x8ac6, 0xcc9, 0xe990, 0xec48, 0xb0f3, 0x5ed0, 0x1, 0x1);
        gbc.writeMem(0x8ac6, { 0x25 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xcc9, gbc.sp());
        EXPECT(0x8ac7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x8ac6));
        // 25 0039
        gbc.setState(0x3434, 0x89dc, 0x2b0, 0xea91, 0x31f9, 0x7e65, 0x0, 0x1);
        gbc.writeMem(0x3434, { 0x25 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x89dc, gbc.sp());
        EXPECT(0x3435, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 003A
        gbc.setState(0xc167, 0x4847, 0x49e0, 0x7b6, 0x16f9, 0xaf57, 0x1, 0x1);
        gbc.writeMem(0xc167, { 0x25 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x4847, gbc.sp());
        EXPECT(0xc168, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xc167));
        // 25 003B
        gbc.setState(0xb57, 0x5827, 0x45f0, 0x34fc, 0x7aba, 0x9ed, 0x0, 0x0);
        gbc.writeMem(0xb57, { 0x25 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x5827, gbc.sp());
        EXPECT(0xb58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 003C
        gbc.setState(0x2997, 0x3f40, 0x6bf0, 0x3ec6, 0x3d13, 0x1d73, 0x1, 0x0);
        gbc.writeMem(0x2997, { 0x25 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x3f40, gbc.sp());
        EXPECT(0x2998, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 003D
        gbc.setState(0x8a9c, 0x2bc7, 0xdaf0, 0xd3e7, 0xc80a, 0x453b, 0x0, 0x0);
        gbc.writeMem(0x8a9c, { 0x25 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x2bc7, gbc.sp());
        EXPECT(0x8a9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x8a9c));
        // 25 003E
        gbc.setState(0x90f4, 0x1b81, 0x4f30, 0x1504, 0xeeb4, 0x218a, 0x0, 0x1);
        gbc.writeMem(0x90f4, { 0x25 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x1b81, gbc.sp());
        EXPECT(0x90f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x90f4));
        // 25 003F
        gbc.setState(0x8960, 0xd557, 0x2a90, 0x955b, 0xa443, 0xd26f, 0x1, 0x0);
        gbc.writeMem(0x8960, { 0x25 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xd557, gbc.sp());
        EXPECT(0x8961, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x8960));
        // 25 0040
        gbc.setState(0xc909, 0x5cbe, 0xade0, 0x5253, 0xbcf0, 0xf097, 0x1, 0x0);
        gbc.writeMem(0xc909, { 0x25 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x5cbe, gbc.sp());
        EXPECT(0xc90a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xc909));
        // 25 0041
        gbc.setState(0xc2f4, 0xb834, 0xb2a0, 0x7acc, 0xacca, 0x6aa8, 0x0, 0x0);
        gbc.writeMem(0xc2f4, { 0x25 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xb834, gbc.sp());
        EXPECT(0xc2f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xc2f4));
        // 25 0042
        gbc.setState(0xa662, 0xdf3b, 0xd990, 0x7536, 0x2097, 0x6677, 0x0, 0x1);
        gbc.writeMem(0xa662, { 0x25 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xdf3b, gbc.sp());
        EXPECT(0xa663, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xa662));
        // 25 0043
        gbc.setState(0x1301, 0x1926, 0x3cf0, 0xa9c8, 0x67a1, 0xb209, 0x1, 0x1);
        gbc.writeMem(0x1301, { 0x25 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x1926, gbc.sp());
        EXPECT(0x1302, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0044
        gbc.setState(0x7d35, 0x423f, 0x82d0, 0x71d6, 0x1eca, 0x90c7, 0x1, 0x0);
        gbc.writeMem(0x7d35, { 0x25 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x423f, gbc.sp());
        EXPECT(0x7d36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0045
        gbc.setState(0x10, 0x203f, 0xbb0, 0xc042, 0x11fb, 0xe398, 0x0, 0x0);
        gbc.writeMem(0x10, { 0x25 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x203f, gbc.sp());
        EXPECT(0x11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0046
        gbc.setState(0x8e9d, 0x1838, 0x73e0, 0x23cd, 0x23ec, 0xc954, 0x1, 0x1);
        gbc.writeMem(0x8e9d, { 0x25 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x1838, gbc.sp());
        EXPECT(0x8e9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x8e9d));
        // 25 0047
        gbc.setState(0xa938, 0xe437, 0xbf70, 0xab4, 0x5f79, 0x9db4, 0x1, 0x1);
        gbc.writeMem(0xa938, { 0x25 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xe437, gbc.sp());
        EXPECT(0xa939, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xa938));
        // 25 0048
        gbc.setState(0xd6ca, 0x6b08, 0x5690, 0xe5ba, 0x35d0, 0xe80d, 0x1, 0x1);
        gbc.writeMem(0xd6ca, { 0x25 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x6b08, gbc.sp());
        EXPECT(0xd6cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xd6ca));
        // 25 0049
        gbc.setState(0x2f23, 0x5a4c, 0xb000, 0xabd6, 0xb322, 0xbb7b, 0x1, 0x0);
        gbc.writeMem(0x2f23, { 0x25 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x5a4c, gbc.sp());
        EXPECT(0x2f24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 004A
        gbc.setState(0x1261, 0x4aef, 0xab80, 0x3d88, 0x54b5, 0x7303, 0x0, 0x0);
        gbc.writeMem(0x1261, { 0x25 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x4aef, gbc.sp());
        EXPECT(0x1262, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 004B
        gbc.setState(0xc4d, 0x9fda, 0x98d0, 0x9e8b, 0x4c74, 0x417c, 0x0, 0x0);
        gbc.writeMem(0xc4d, { 0x25 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x9fda, gbc.sp());
        EXPECT(0xc4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 004C
        gbc.setState(0x5f68, 0x9044, 0x1880, 0x7e7c, 0xbb57, 0xcd2f, 0x1, 0x1);
        gbc.writeMem(0x5f68, { 0x25 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x9044, gbc.sp());
        EXPECT(0x5f69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 004D
        gbc.setState(0x85c7, 0x798b, 0x6410, 0x618f, 0x32fe, 0xc722, 0x0, 0x1);
        gbc.writeMem(0x85c7, { 0x25 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x798b, gbc.sp());
        EXPECT(0x85c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x85c7));
        // 25 004E
        gbc.setState(0xef57, 0x734b, 0xc0e0, 0x7c97, 0x5d26, 0xd324, 0x0, 0x1);
        gbc.writeMem(0xef57, { 0x25 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x734b, gbc.sp());
        EXPECT(0xef58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xef57));
        // 25 004F
        gbc.setState(0x5166, 0xab0c, 0x3c50, 0x5c77, 0x760a, 0x72ba, 0x1, 0x1);
        gbc.writeMem(0x5166, { 0x25 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xab0c, gbc.sp());
        EXPECT(0x5167, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0050
        gbc.setState(0x504b, 0x904e, 0x8930, 0x3b6, 0x95ce, 0x7fe1, 0x1, 0x0);
        gbc.writeMem(0x504b, { 0x25 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x904e, gbc.sp());
        EXPECT(0x504c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0051
        gbc.setState(0x9d6e, 0xd3d9, 0x4320, 0xc024, 0x5d7a, 0x1272, 0x0, 0x0);
        gbc.writeMem(0x9d6e, { 0x25 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xd3d9, gbc.sp());
        EXPECT(0x9d6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x9d6e));
        // 25 0053
        gbc.setState(0xb9fc, 0x3876, 0xdab0, 0x805f, 0x50e2, 0x5d7e, 0x0, 0x1);
        gbc.writeMem(0xb9fc, { 0x25 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x3876, gbc.sp());
        EXPECT(0xb9fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xb9fc));
        // 25 0054
        gbc.setState(0x3554, 0xd448, 0xe6f0, 0xa031, 0xf383, 0x7182, 0x1, 0x0);
        gbc.writeMem(0x3554, { 0x25 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xd448, gbc.sp());
        EXPECT(0x3555, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0055
        gbc.setState(0x60c7, 0xdc31, 0xfad0, 0xc5d6, 0x6ab9, 0x402e, 0x1, 0x0);
        gbc.writeMem(0x60c7, { 0x25 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xdc31, gbc.sp());
        EXPECT(0x60c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0056
        gbc.setState(0xec5c, 0xae81, 0x3bd0, 0xe43, 0xd63, 0x93a6, 0x0, 0x0);
        gbc.writeMem(0xec5c, { 0x25 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xae81, gbc.sp());
        EXPECT(0xec5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xec5c));
        // 25 0057
        gbc.setState(0xad25, 0x7b63, 0x6cb0, 0xf6d1, 0x4861, 0x6cfd, 0x1, 0x1);
        gbc.writeMem(0xad25, { 0x25 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x7b63, gbc.sp());
        EXPECT(0xad26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xad25));
        // 25 0058
        gbc.setState(0x7708, 0x446b, 0x4fe0, 0xe974, 0x72ea, 0x6424, 0x1, 0x0);
        gbc.writeMem(0x7708, { 0x25 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x446b, gbc.sp());
        EXPECT(0x7709, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0059
        gbc.setState(0x27df, 0x57c0, 0x1750, 0x7704, 0x7605, 0x68ef, 0x0, 0x1);
        gbc.writeMem(0x27df, { 0x25 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x57c0, gbc.sp());
        EXPECT(0x27e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 005B
        gbc.setState(0x1bc8, 0x4f4, 0xabb0, 0x441, 0xf638, 0xf9ec, 0x1, 0x0);
        gbc.writeMem(0x1bc8, { 0x25 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x4f4, gbc.sp());
        EXPECT(0x1bc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 005C
        gbc.setState(0xcf72, 0x9fd1, 0xac70, 0xe88d, 0xcd1e, 0xa5b0, 0x0, 0x0);
        gbc.writeMem(0xcf72, { 0x25 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x9fd1, gbc.sp());
        EXPECT(0xcf73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xcf72));
        // 25 005D
        gbc.setState(0xa0f3, 0x47a7, 0x84a0, 0xf5c3, 0xd1b3, 0x6103, 0x1, 0x1);
        gbc.writeMem(0xa0f3, { 0x25 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x47a7, gbc.sp());
        EXPECT(0xa0f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xa0f3));
        // 25 005E
        gbc.setState(0x40cb, 0xc08b, 0xa210, 0xc8d9, 0x1fc3, 0xe3b5, 0x0, 0x0);
        gbc.writeMem(0x40cb, { 0x25 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xc08b, gbc.sp());
        EXPECT(0x40cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0060
        gbc.setState(0x61a3, 0xb483, 0x85d0, 0xbe40, 0xb787, 0x84cc, 0x1, 0x0);
        gbc.writeMem(0x61a3, { 0x25 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xb483, gbc.sp());
        EXPECT(0x61a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0061
        gbc.setState(0x4bf8, 0xfb1a, 0x4c40, 0xc5c, 0xcd58, 0x6f77, 0x0, 0x1);
        gbc.writeMem(0x4bf8, { 0x25 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xfb1a, gbc.sp());
        EXPECT(0x4bf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0062
        gbc.setState(0x765, 0x74e9, 0xbf70, 0x185c, 0x11c3, 0xb52a, 0x0, 0x1);
        gbc.writeMem(0x765, { 0x25 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x74e9, gbc.sp());
        EXPECT(0x766, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0063
        gbc.setState(0x6629, 0x1a21, 0x43d0, 0xcf12, 0x83e4, 0x84be, 0x1, 0x0);
        gbc.writeMem(0x6629, { 0x25 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x1a21, gbc.sp());
        EXPECT(0x662a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0064
        gbc.setState(0xea00, 0xbe48, 0xeaa0, 0xffc, 0x24c, 0x2f47, 0x1, 0x1);
        gbc.writeMem(0xea00, { 0x25 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xbe48, gbc.sp());
        EXPECT(0xea01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xea00));
        // 25 0065
        gbc.setState(0xa977, 0xa1c9, 0xe240, 0x3850, 0x1495, 0x22ed, 0x0, 0x1);
        gbc.writeMem(0xa977, { 0x25 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xa1c9, gbc.sp());
        EXPECT(0xa978, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xa977));
        // 25 0066
        gbc.setState(0x6fee, 0x816d, 0x87c0, 0x9b84, 0x1919, 0xd1fd, 0x1, 0x1);
        gbc.writeMem(0x6fee, { 0x25 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x816d, gbc.sp());
        EXPECT(0x6fef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0067
        gbc.setState(0x160d, 0xbe7, 0x3eb0, 0x15f8, 0x557e, 0xc85f, 0x0, 0x1);
        gbc.writeMem(0x160d, { 0x25 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xbe7, gbc.sp());
        EXPECT(0x160e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0068
        gbc.setState(0xbd6c, 0xf1ed, 0xf40, 0xf474, 0x6711, 0x8fe9, 0x0, 0x1);
        gbc.writeMem(0xbd6c, { 0x25 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xf1ed, gbc.sp());
        EXPECT(0xbd6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xbd6c));
        // 25 006A
        gbc.setState(0xb1fd, 0x9370, 0x2530, 0x5bc, 0xf2f7, 0x7235, 0x1, 0x1);
        gbc.writeMem(0xb1fd, { 0x25 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x9370, gbc.sp());
        EXPECT(0xb1fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xb1fd));
        // 25 006B
        gbc.setState(0xa8ca, 0x884e, 0xbfa0, 0x16a4, 0xade5, 0xabb8, 0x1, 0x0);
        gbc.writeMem(0xa8ca, { 0x25 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x884e, gbc.sp());
        EXPECT(0xa8cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xa8ca));
        // 25 006C
        gbc.setState(0x6bbc, 0x3bbf, 0x1860, 0x3847, 0x45eb, 0x5dfc, 0x1, 0x0);
        gbc.writeMem(0x6bbc, { 0x25 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x3bbf, gbc.sp());
        EXPECT(0x6bbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 006D
        gbc.setState(0xaad5, 0xa711, 0x6c80, 0xae30, 0x7615, 0xb312, 0x0, 0x0);
        gbc.writeMem(0xaad5, { 0x25 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xa711, gbc.sp());
        EXPECT(0xaad6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xaad5));
        // 25 006E
        gbc.setState(0x385f, 0x9a95, 0xab00, 0xa9e4, 0xca02, 0x3720, 0x0, 0x0);
        gbc.writeMem(0x385f, { 0x25 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x9a95, gbc.sp());
        EXPECT(0x3860, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 006F
        gbc.setState(0x53a, 0x1b38, 0xc7d0, 0x4185, 0xa256, 0x2ec9, 0x0, 0x0);
        gbc.writeMem(0x53a, { 0x25 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x1b38, gbc.sp());
        EXPECT(0x53b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0070
        gbc.setState(0x3cd0, 0xa3c, 0x5d20, 0x812e, 0xe2d8, 0xbc77, 0x1, 0x1);
        gbc.writeMem(0x3cd0, { 0x25 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xa3c, gbc.sp());
        EXPECT(0x3cd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0072
        gbc.setState(0x8695, 0xe0bd, 0x7ad0, 0xb543, 0x1b44, 0x43b, 0x1, 0x1);
        gbc.writeMem(0x8695, { 0x25 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xe0bd, gbc.sp());
        EXPECT(0x8696, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x8695));
        // 25 0073
        gbc.setState(0x9531, 0xd89b, 0xf0a0, 0x6e, 0x1366, 0x321d, 0x0, 0x1);
        gbc.writeMem(0x9531, { 0x25 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xd89b, gbc.sp());
        EXPECT(0x9532, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x9531));
        // 25 0074
        gbc.setState(0xee8b, 0xf75, 0x2d20, 0x2c3, 0xfd08, 0x272e, 0x1, 0x0);
        gbc.writeMem(0xee8b, { 0x25 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xf75, gbc.sp());
        EXPECT(0xee8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xee8b));
        // 25 0075
        gbc.setState(0x70c6, 0x429b, 0xc410, 0xe2dc, 0xa45a, 0x18a8, 0x0, 0x0);
        gbc.writeMem(0x70c6, { 0x25 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x429b, gbc.sp());
        EXPECT(0x70c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0076
        gbc.setState(0x463, 0x2d42, 0xe140, 0x21d2, 0x46d7, 0xebe4, 0x0, 0x0);
        gbc.writeMem(0x463, { 0x25 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x2d42, gbc.sp());
        EXPECT(0x464, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0077
        gbc.setState(0x3aaa, 0x561f, 0x71b0, 0x1172, 0xc926, 0x36d1, 0x0, 0x0);
        gbc.writeMem(0x3aaa, { 0x25 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x561f, gbc.sp());
        EXPECT(0x3aab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0078
        gbc.setState(0x67e6, 0xe4db, 0x69b0, 0xf899, 0xd83f, 0x7e23, 0x1, 0x1);
        gbc.writeMem(0x67e6, { 0x25 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xe4db, gbc.sp());
        EXPECT(0x67e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0079
        gbc.setState(0x91f4, 0xb3f5, 0x5d80, 0x2f44, 0x8044, 0x7bee, 0x1, 0x1);
        gbc.writeMem(0x91f4, { 0x25 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xb3f5, gbc.sp());
        EXPECT(0x91f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x91f4));
        // 25 007A
        gbc.setState(0xddad, 0xf24f, 0x6fe0, 0x172b, 0xee7d, 0xa2fb, 0x1, 0x0);
        gbc.writeMem(0xddad, { 0x25 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xf24f, gbc.sp());
        EXPECT(0xddae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xddad));
        // 25 007C
        gbc.setState(0x6e4b, 0xda53, 0xf4f0, 0xcf89, 0x4a94, 0x4ca6, 0x0, 0x0);
        gbc.writeMem(0x6e4b, { 0x25 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xda53, gbc.sp());
        EXPECT(0x6e4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 007D
        gbc.setState(0xc1b3, 0x708e, 0x800, 0x890c, 0x51b1, 0x705, 0x0, 0x0);
        gbc.writeMem(0xc1b3, { 0x25 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x708e, gbc.sp());
        EXPECT(0xc1b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xc1b3));
        // 25 007E
        gbc.setState(0x89ab, 0x5ea5, 0x88e0, 0x5c59, 0x6af1, 0x374f, 0x0, 0x0);
        gbc.writeMem(0x89ab, { 0x25 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x5ea5, gbc.sp());
        EXPECT(0x89ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x89ab));
        // 25 007F
        gbc.setState(0x6639, 0xc66f, 0xdf20, 0xabbc, 0xead9, 0xce47, 0x1, 0x1);
        gbc.writeMem(0x6639, { 0x25 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xc66f, gbc.sp());
        EXPECT(0x663a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0080
        gbc.setState(0x7868, 0x1223, 0x4f20, 0xfa46, 0xf795, 0x9da5, 0x1, 0x1);
        gbc.writeMem(0x7868, { 0x25 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x1223, gbc.sp());
        EXPECT(0x7869, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0081
        gbc.setState(0xbc53, 0x7e44, 0x1c00, 0x7705, 0x323f, 0x1823, 0x1, 0x1);
        gbc.writeMem(0xbc53, { 0x25 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x7e44, gbc.sp());
        EXPECT(0xbc54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xbc53));
        // 25 0082
        gbc.setState(0xab19, 0x5b83, 0xaa40, 0xc6f6, 0x9bb8, 0x7a8, 0x1, 0x0);
        gbc.writeMem(0xab19, { 0x25 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x5b83, gbc.sp());
        EXPECT(0xab1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xab19));
        // 25 0083
        gbc.setState(0x97d3, 0x50b9, 0xbc80, 0x64, 0xd278, 0x63d9, 0x1, 0x0);
        gbc.writeMem(0x97d3, { 0x25 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x50b9, gbc.sp());
        EXPECT(0x97d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x97d3));
        // 25 0084
        gbc.setState(0x9374, 0x5bb1, 0x6e0, 0x898d, 0x1b0d, 0x7970, 0x1, 0x1);
        gbc.writeMem(0x9374, { 0x25 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x5bb1, gbc.sp());
        EXPECT(0x9375, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x9374));
        // 25 0085
        gbc.setState(0xa5f0, 0x8be2, 0xc430, 0x170f, 0xd60, 0xb589, 0x1, 0x1);
        gbc.writeMem(0xa5f0, { 0x25 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x8be2, gbc.sp());
        EXPECT(0xa5f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xa5f0));
        // 25 0086
        gbc.setState(0x3633, 0x9b11, 0xd70, 0x9653, 0x10ba, 0x28fa, 0x1, 0x0);
        gbc.writeMem(0x3633, { 0x25 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x9b11, gbc.sp());
        EXPECT(0x3634, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0087
        gbc.setState(0x4116, 0xfb7c, 0xfa30, 0x82fc, 0x7cd7, 0xf55e, 0x0, 0x0);
        gbc.writeMem(0x4116, { 0x25 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xfb7c, gbc.sp());
        EXPECT(0x4117, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0088
        gbc.setState(0xef76, 0x7dfb, 0xcb0, 0x86fb, 0xa3ea, 0xe583, 0x0, 0x0);
        gbc.writeMem(0xef76, { 0x25 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x7dfb, gbc.sp());
        EXPECT(0xef77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xef76));
        // 25 0089
        gbc.setState(0x93e1, 0x39f9, 0x6b10, 0xb26d, 0x7734, 0x21c0, 0x0, 0x1);
        gbc.writeMem(0x93e1, { 0x25 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x39f9, gbc.sp());
        EXPECT(0x93e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x93e1));
        // 25 008B
        gbc.setState(0xecbb, 0xddbe, 0x1a60, 0xe2fb, 0x6049, 0xc577, 0x1, 0x0);
        gbc.writeMem(0xecbb, { 0x25 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xddbe, gbc.sp());
        EXPECT(0xecbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xecbb));
        // 25 008C
        gbc.setState(0x752f, 0x9231, 0x8670, 0xdcd7, 0x8af0, 0x4647, 0x0, 0x1);
        gbc.writeMem(0x752f, { 0x25 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x9231, gbc.sp());
        EXPECT(0x7530, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 008D
        gbc.setState(0x2b2f, 0xe95d, 0x8a60, 0x2d82, 0xce1b, 0x6b9b, 0x1, 0x0);
        gbc.writeMem(0x2b2f, { 0x25 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xe95d, gbc.sp());
        EXPECT(0x2b30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 008E
        gbc.setState(0x74ea, 0x9622, 0x7660, 0x9941, 0xf615, 0x4319, 0x1, 0x0);
        gbc.writeMem(0x74ea, { 0x25 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x9622, gbc.sp());
        EXPECT(0x74eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 008F
        gbc.setState(0x21cb, 0xbedb, 0x8440, 0x5e1, 0xc7b6, 0xbe13, 0x0, 0x1);
        gbc.writeMem(0x21cb, { 0x25 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xbedb, gbc.sp());
        EXPECT(0x21cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0090
        gbc.setState(0x6373, 0xed71, 0x4dd0, 0x881b, 0xa213, 0xcfdd, 0x1, 0x0);
        gbc.writeMem(0x6373, { 0x25 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xed71, gbc.sp());
        EXPECT(0x6374, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0091
        gbc.setState(0x298e, 0x367d, 0x5e70, 0xe4a4, 0x22d, 0x374a, 0x0, 0x1);
        gbc.writeMem(0x298e, { 0x25 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x367d, gbc.sp());
        EXPECT(0x298f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0092
        gbc.setState(0xadd6, 0x535c, 0xf540, 0xf6c9, 0x2f9a, 0x5bce, 0x0, 0x1);
        gbc.writeMem(0xadd6, { 0x25 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x535c, gbc.sp());
        EXPECT(0xadd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xadd6));
        // 25 0093
        gbc.setState(0x1ce5, 0x508e, 0xebf0, 0xeca, 0x8e06, 0x8fe4, 0x0, 0x1);
        gbc.writeMem(0x1ce5, { 0x25 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x508e, gbc.sp());
        EXPECT(0x1ce6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0094
        gbc.setState(0x215b, 0x888e, 0xcdd0, 0xda10, 0x2850, 0x5eb0, 0x1, 0x0);
        gbc.writeMem(0x215b, { 0x25 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x888e, gbc.sp());
        EXPECT(0x215c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0095
        gbc.setState(0x24f8, 0x4797, 0x2f80, 0x47a6, 0x741a, 0x53c3, 0x1, 0x1);
        gbc.writeMem(0x24f8, { 0x25 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x4797, gbc.sp());
        EXPECT(0x24f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0096
        gbc.setState(0x425f, 0x5498, 0xde20, 0x5227, 0xf997, 0xbee8, 0x0, 0x1);
        gbc.writeMem(0x425f, { 0x25 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x5498, gbc.sp());
        EXPECT(0x4260, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0097
        gbc.setState(0x2e87, 0x72ee, 0x3b10, 0x7f00, 0x73db, 0xc92, 0x0, 0x0);
        gbc.writeMem(0x2e87, { 0x25 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x72ee, gbc.sp());
        EXPECT(0x2e88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0098
        gbc.setState(0x9a99, 0x3863, 0xd340, 0x5d30, 0xcbf8, 0xb267, 0x1, 0x1);
        gbc.writeMem(0x9a99, { 0x25 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x3863, gbc.sp());
        EXPECT(0x9a9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x9a99));
        // 25 0099
        gbc.setState(0xa585, 0xd30, 0x4040, 0x8874, 0x41f5, 0x8b6a, 0x1, 0x1);
        gbc.writeMem(0xa585, { 0x25 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xd30, gbc.sp());
        EXPECT(0xa586, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xa585));
        // 25 009A
        gbc.setState(0x988, 0xde28, 0x80b0, 0xac4c, 0x3650, 0xa557, 0x1, 0x1);
        gbc.writeMem(0x988, { 0x25 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xde28, gbc.sp());
        EXPECT(0x989, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 009B
        gbc.setState(0x8175, 0xe41b, 0xe710, 0x3ba4, 0x33b7, 0xad3, 0x1, 0x1);
        gbc.writeMem(0x8175, { 0x25 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xe41b, gbc.sp());
        EXPECT(0x8176, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x8175));
        // 25 009D
        gbc.setState(0x1920, 0x3dfb, 0x8c60, 0x34dc, 0x6bfa, 0xa79c, 0x1, 0x1);
        gbc.writeMem(0x1920, { 0x25 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x3dfb, gbc.sp());
        EXPECT(0x1921, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 009E
        gbc.setState(0x60eb, 0x5763, 0x610, 0x8829, 0x5038, 0x1630, 0x0, 0x1);
        gbc.writeMem(0x60eb, { 0x25 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x5763, gbc.sp());
        EXPECT(0x60ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 009F
        gbc.setState(0xccba, 0x8f32, 0xf350, 0x215d, 0x9652, 0xbb12, 0x0, 0x1);
        gbc.writeMem(0xccba, { 0x25 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x8f32, gbc.sp());
        EXPECT(0xccbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xccba));
        // 25 00A0
        gbc.setState(0xbcb7, 0xed5a, 0xeae0, 0xa979, 0xf062, 0x4659, 0x0, 0x1);
        gbc.writeMem(0xbcb7, { 0x25 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xed5a, gbc.sp());
        EXPECT(0xbcb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xbcb7));
        // 25 00A1
        gbc.setState(0x956e, 0xea47, 0x800, 0x30c1, 0xf857, 0xf15a, 0x1, 0x0);
        gbc.writeMem(0x956e, { 0x25 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xea47, gbc.sp());
        EXPECT(0x956f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x956e));
        // 25 00A2
        gbc.setState(0xeed6, 0x76fa, 0xa540, 0xac13, 0x46b1, 0x6a8c, 0x1, 0x0);
        gbc.writeMem(0xeed6, { 0x25 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x76fa, gbc.sp());
        EXPECT(0xeed7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xeed6));
        // 25 00A3
        gbc.setState(0x649d, 0xf250, 0xa940, 0x6819, 0xa9e6, 0x5f6c, 0x1, 0x0);
        gbc.writeMem(0x649d, { 0x25 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xf250, gbc.sp());
        EXPECT(0x649e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 00A4
        gbc.setState(0x74ec, 0xe41e, 0xf490, 0x2228, 0xa451, 0xc5de, 0x0, 0x1);
        gbc.writeMem(0x74ec, { 0x25 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xe41e, gbc.sp());
        EXPECT(0x74ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 00A5
        gbc.setState(0x9625, 0x8721, 0x860, 0x1c84, 0x5c0a, 0xb555, 0x1, 0x0);
        gbc.writeMem(0x9625, { 0x25 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x8721, gbc.sp());
        EXPECT(0x9626, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x9625));
        // 25 00A6
        gbc.setState(0x946e, 0x5aab, 0xab50, 0xa59c, 0x9dca, 0x6997, 0x0, 0x0);
        gbc.writeMem(0x946e, { 0x25 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x5aab, gbc.sp());
        EXPECT(0x946f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x946e));
        // 25 00A7
        gbc.setState(0x600a, 0x202e, 0x1f70, 0xc8fc, 0xcbe8, 0x9b60, 0x0, 0x1);
        gbc.writeMem(0x600a, { 0x25 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x202e, gbc.sp());
        EXPECT(0x600b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 00A8
        gbc.setState(0xb2fc, 0x1c2f, 0xad0, 0x7d96, 0xf0b6, 0x8962, 0x0, 0x0);
        gbc.writeMem(0xb2fc, { 0x25 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x1c2f, gbc.sp());
        EXPECT(0xb2fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xb2fc));
        // 25 00A9
        gbc.setState(0x75c1, 0x2da8, 0x8780, 0x2f23, 0x93a0, 0x8a44, 0x0, 0x1);
        gbc.writeMem(0x75c1, { 0x25 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x2da8, gbc.sp());
        EXPECT(0x75c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 00AB
        gbc.setState(0xb44e, 0xd4a6, 0x7790, 0x6ded, 0xc946, 0xf811, 0x1, 0x0);
        gbc.writeMem(0xb44e, { 0x25 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xd4a6, gbc.sp());
        EXPECT(0xb44f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xb44e));
        // 25 00AC
        gbc.setState(0x78a7, 0xf18d, 0xcbf0, 0xb52d, 0xa2e3, 0x9c8a, 0x1, 0x1);
        gbc.writeMem(0x78a7, { 0x25 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xf18d, gbc.sp());
        EXPECT(0x78a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 00AD
        gbc.setState(0xe7f3, 0xae8d, 0xe1f0, 0xd21f, 0xc36, 0x963f, 0x0, 0x0);
        gbc.writeMem(0xe7f3, { 0x25 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xae8d, gbc.sp());
        EXPECT(0xe7f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xe7f3));
        // 25 00AE
        gbc.setState(0xd0d0, 0x6955, 0x3b60, 0x1718, 0xbda4, 0x3659, 0x0, 0x0);
        gbc.writeMem(0xd0d0, { 0x25 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x6955, gbc.sp());
        EXPECT(0xd0d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xd0d0));
        // 25 00AF
        gbc.setState(0xc965, 0xb046, 0x2020, 0x19ef, 0xc496, 0xaf6, 0x1, 0x0);
        gbc.writeMem(0xc965, { 0x25 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xb046, gbc.sp());
        EXPECT(0xc966, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xc965));
        // 25 00B0
        gbc.setState(0x71e1, 0xaae0, 0x7d00, 0xfbca, 0x4c1b, 0xabd0, 0x1, 0x1);
        gbc.writeMem(0x71e1, { 0x25 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xaae0, gbc.sp());
        EXPECT(0x71e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 00B1
        gbc.setState(0x98d1, 0xd47, 0x5c40, 0x2d4c, 0xdcc6, 0x39cf, 0x0, 0x0);
        gbc.writeMem(0x98d1, { 0x25 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xd47, gbc.sp());
        EXPECT(0x98d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x98d1));
        // 25 00B2
        gbc.setState(0x78ac, 0x9278, 0x36c0, 0x8319, 0x642, 0x1ef3, 0x0, 0x0);
        gbc.writeMem(0x78ac, { 0x25 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x9278, gbc.sp());
        EXPECT(0x78ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 00B3
        gbc.setState(0x6c20, 0x39d8, 0xb410, 0xb078, 0xf2be, 0xd928, 0x1, 0x0);
        gbc.writeMem(0x6c20, { 0x25 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x39d8, gbc.sp());
        EXPECT(0x6c21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 00B4
        gbc.setState(0x2872, 0x6e16, 0x38b0, 0x4db3, 0xc43b, 0x8550, 0x1, 0x0);
        gbc.writeMem(0x2872, { 0x25 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x6e16, gbc.sp());
        EXPECT(0x2873, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 00B5
        gbc.setState(0xd815, 0xd8e8, 0xb530, 0x3f65, 0xdae2, 0x3ba0, 0x1, 0x0);
        gbc.writeMem(0xd815, { 0x25 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xd8e8, gbc.sp());
        EXPECT(0xd816, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xd815));
        // 25 00B6
        gbc.setState(0xb24, 0xbe1, 0x460, 0x7187, 0x5ea4, 0xf417, 0x0, 0x1);
        gbc.writeMem(0xb24, { 0x25 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xbe1, gbc.sp());
        EXPECT(0xb25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 00B7
        gbc.setState(0x8bbc, 0x30a8, 0xd130, 0xd1e5, 0xef67, 0xcabf, 0x1, 0x0);
        gbc.writeMem(0x8bbc, { 0x25 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x30a8, gbc.sp());
        EXPECT(0x8bbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x8bbc));
        // 25 00B8
        gbc.setState(0xa07e, 0x8ae7, 0x7450, 0xad90, 0x2ab1, 0x76ec, 0x0, 0x1);
        gbc.writeMem(0xa07e, { 0x25 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x8ae7, gbc.sp());
        EXPECT(0xa07f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xa07e));
        // 25 00BA
        gbc.setState(0x87f, 0xcb44, 0x9a50, 0xdf40, 0x54b8, 0x6086, 0x0, 0x0);
        gbc.writeMem(0x87f, { 0x25 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xcb44, gbc.sp());
        EXPECT(0x880, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 00BB
        gbc.setState(0xd5b6, 0x3222, 0x36f0, 0xdd79, 0xe9de, 0xea52, 0x1, 0x1);
        gbc.writeMem(0xd5b6, { 0x25 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x3222, gbc.sp());
        EXPECT(0xd5b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xd5b6));
        // 25 00BC
        gbc.setState(0xb042, 0xb0c7, 0xf440, 0x9d91, 0xf8d4, 0x572f, 0x1, 0x1);
        gbc.writeMem(0xb042, { 0x25 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xb0c7, gbc.sp());
        EXPECT(0xb043, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xb042));
        // 25 00BD
        gbc.setState(0xa611, 0x1c96, 0xa9e0, 0xaea1, 0xd345, 0x2e26, 0x0, 0x0);
        gbc.writeMem(0xa611, { 0x25 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x1c96, gbc.sp());
        EXPECT(0xa612, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xa611));
        // 25 00BE
        gbc.setState(0x502f, 0x79d, 0xb000, 0xca70, 0x3931, 0x69ca, 0x0, 0x1);
        gbc.writeMem(0x502f, { 0x25 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x79d, gbc.sp());
        EXPECT(0x5030, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 00BF
        gbc.setState(0xe2c3, 0x7a35, 0x7d0, 0xf81f, 0xa60, 0xd5f4, 0x0, 0x1);
        gbc.writeMem(0xe2c3, { 0x25 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x7a35, gbc.sp());
        EXPECT(0xe2c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xe2c3));
        // 25 00C0
        gbc.setState(0x7bac, 0x2e5c, 0x7880, 0x91bd, 0xdfa4, 0x2dd4, 0x0, 0x1);
        gbc.writeMem(0x7bac, { 0x25 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x2e5c, gbc.sp());
        EXPECT(0x7bad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 00C1
        gbc.setState(0x1f88, 0xd310, 0x8540, 0x276d, 0xd035, 0xdc36, 0x1, 0x0);
        gbc.writeMem(0x1f88, { 0x25 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xd310, gbc.sp());
        EXPECT(0x1f89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 00C2
        gbc.setState(0x5602, 0x5b30, 0xf1d0, 0x6cd6, 0x3c8d, 0x87e1, 0x1, 0x1);
        gbc.writeMem(0x5602, { 0x25 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x5b30, gbc.sp());
        EXPECT(0x5603, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 00C4
        gbc.setState(0x25bd, 0x166e, 0x4d80, 0xcb89, 0xb4be, 0xe354, 0x1, 0x1);
        gbc.writeMem(0x25bd, { 0x25 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x166e, gbc.sp());
        EXPECT(0x25be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 00C5
        gbc.setState(0xca2d, 0x8412, 0xb320, 0x6685, 0x2ff4, 0xaaf9, 0x0, 0x1);
        gbc.writeMem(0xca2d, { 0x25 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x8412, gbc.sp());
        EXPECT(0xca2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xca2d));
        // 25 00C6
        gbc.setState(0x9fe1, 0x341, 0x3830, 0x8837, 0x257, 0x2e56, 0x1, 0x1);
        gbc.writeMem(0x9fe1, { 0x25 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x341, gbc.sp());
        EXPECT(0x9fe2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x9fe1));
        // 25 00C7
        gbc.setState(0x802, 0xab75, 0xcaf0, 0xa2bf, 0x21ed, 0x7832, 0x1, 0x1);
        gbc.writeMem(0x802, { 0x25 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xab75, gbc.sp());
        EXPECT(0x803, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 00C8
        gbc.setState(0x7726, 0xc647, 0xd480, 0x4a15, 0xa333, 0x6b3b, 0x0, 0x1);
        gbc.writeMem(0x7726, { 0x25 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xc647, gbc.sp());
        EXPECT(0x7727, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 00C9
        gbc.setState(0x9f1b, 0x751e, 0x7e20, 0x799b, 0xeca5, 0x636c, 0x0, 0x1);
        gbc.writeMem(0x9f1b, { 0x25 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x751e, gbc.sp());
        EXPECT(0x9f1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x9f1b));
        // 25 00CA
        gbc.setState(0x96e2, 0x5b45, 0xd900, 0x1c0e, 0x34c6, 0x42d7, 0x1, 0x1);
        gbc.writeMem(0x96e2, { 0x25 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x5b45, gbc.sp());
        EXPECT(0x96e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x96e2));
        // 25 00CB
        gbc.setState(0x8012, 0xcfa0, 0x3f00, 0xa7b4, 0xd85a, 0x6b87, 0x0, 0x0);
        gbc.writeMem(0x8012, { 0x25 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xcfa0, gbc.sp());
        EXPECT(0x8013, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x8012));
        // 25 00CC
        gbc.setState(0xd0a3, 0x12db, 0x4670, 0x1a74, 0x1ce6, 0xdacf, 0x1, 0x0);
        gbc.writeMem(0xd0a3, { 0x25 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x12db, gbc.sp());
        EXPECT(0xd0a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xd0a3));
        // 25 00CD
        gbc.setState(0x5647, 0xb27e, 0x2b0, 0x8ef7, 0x9daa, 0xe7b2, 0x1, 0x0);
        gbc.writeMem(0x5647, { 0x25 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xb27e, gbc.sp());
        EXPECT(0x5648, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 00CE
        gbc.setState(0x5cee, 0xea56, 0x8870, 0xcab4, 0x4690, 0x80f0, 0x0, 0x0);
        gbc.writeMem(0x5cee, { 0x25 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xea56, gbc.sp());
        EXPECT(0x5cef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 00CF
        gbc.setState(0x295d, 0x5921, 0x6c70, 0xa008, 0x23d0, 0x6e62, 0x1, 0x1);
        gbc.writeMem(0x295d, { 0x25 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x5921, gbc.sp());
        EXPECT(0x295e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 00D1
        gbc.setState(0xbacc, 0x9652, 0x9c30, 0xacf6, 0x3ad2, 0x3840, 0x1, 0x0);
        gbc.writeMem(0xbacc, { 0x25 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x9652, gbc.sp());
        EXPECT(0xbacd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xbacc));
        // 25 00D2
        gbc.setState(0xe881, 0x1fa3, 0xe800, 0xe89e, 0xdf4c, 0xa862, 0x1, 0x0);
        gbc.writeMem(0xe881, { 0x25 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x1fa3, gbc.sp());
        EXPECT(0xe882, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xe881));
        // 25 00D3
        gbc.setState(0x7fc2, 0x36a6, 0xd380, 0xe495, 0xc522, 0x214b, 0x1, 0x1);
        gbc.writeMem(0x7fc2, { 0x25 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x36a6, gbc.sp());
        EXPECT(0x7fc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 00D4
        gbc.setState(0x36b8, 0xdd1f, 0xb7a0, 0x5760, 0xff59, 0x9bc5, 0x0, 0x0);
        gbc.writeMem(0x36b8, { 0x25 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xdd1f, gbc.sp());
        EXPECT(0x36b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 00D5
        gbc.setState(0x6021, 0x4d7b, 0xd1c0, 0xd2c2, 0x80a7, 0x899c, 0x0, 0x0);
        gbc.writeMem(0x6021, { 0x25 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x4d7b, gbc.sp());
        EXPECT(0x6022, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 00D6
        gbc.setState(0x1f3e, 0x73ed, 0x48f0, 0xc077, 0xa586, 0x8a39, 0x1, 0x0);
        gbc.writeMem(0x1f3e, { 0x25 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x73ed, gbc.sp());
        EXPECT(0x1f3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 00D7
        gbc.setState(0x1bc3, 0x6b98, 0x6510, 0xfc8f, 0xdad2, 0x21ae, 0x0, 0x0);
        gbc.writeMem(0x1bc3, { 0x25 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x6b98, gbc.sp());
        EXPECT(0x1bc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 00D8
        gbc.setState(0x63bf, 0xdef9, 0xafe0, 0xaafa, 0x2a56, 0xd9da, 0x1, 0x0);
        gbc.writeMem(0x63bf, { 0x25 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xdef9, gbc.sp());
        EXPECT(0x63c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 00D9
        gbc.setState(0x8003, 0x3bf4, 0xe4c0, 0xdce8, 0x7f6c, 0xf6ed, 0x0, 0x0);
        gbc.writeMem(0x8003, { 0x25 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x3bf4, gbc.sp());
        EXPECT(0x8004, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x8003));
        // 25 00DA
        gbc.setState(0x557a, 0xe8e5, 0x2b0, 0x9485, 0xd2c7, 0x2863, 0x1, 0x0);
        gbc.writeMem(0x557a, { 0x25 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xe8e5, gbc.sp());
        EXPECT(0x557b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 00DB
        gbc.setState(0x9b4a, 0x8387, 0x1f90, 0x3f58, 0xc79e, 0x2856, 0x0, 0x0);
        gbc.writeMem(0x9b4a, { 0x25 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x8387, gbc.sp());
        EXPECT(0x9b4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x9b4a));
        // 25 00DC
        gbc.setState(0x2bd9, 0x2efe, 0xd260, 0x6851, 0x548f, 0x577b, 0x1, 0x0);
        gbc.writeMem(0x2bd9, { 0x25 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x2efe, gbc.sp());
        EXPECT(0x2bda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 00DD
        gbc.setState(0xd640, 0x87ce, 0x5cf0, 0xd26, 0x175, 0x6500, 0x1, 0x1);
        gbc.writeMem(0xd640, { 0x25 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x87ce, gbc.sp());
        EXPECT(0xd641, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xd640));
        // 25 00DE
        gbc.setState(0x1a2c, 0x4f57, 0x620, 0xabfd, 0xb191, 0x563a, 0x0, 0x1);
        gbc.writeMem(0x1a2c, { 0x25 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x4f57, gbc.sp());
        EXPECT(0x1a2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 00DF
        gbc.setState(0x34a9, 0x1d0, 0x8a60, 0x28f7, 0xaa6, 0xb1da, 0x1, 0x0);
        gbc.writeMem(0x34a9, { 0x25 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x1d0, gbc.sp());
        EXPECT(0x34aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 00E0
        gbc.setState(0x5b7a, 0x7dbb, 0x68c0, 0xa24, 0x434, 0x3518, 0x1, 0x1);
        gbc.writeMem(0x5b7a, { 0x25 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x7dbb, gbc.sp());
        EXPECT(0x5b7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 00E1
        gbc.setState(0x8e83, 0xef6b, 0xf00, 0xb8b3, 0x4c0e, 0xeec3, 0x1, 0x0);
        gbc.writeMem(0x8e83, { 0x25 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xef6b, gbc.sp());
        EXPECT(0x8e84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x8e83));
        // 25 00E2
        gbc.setState(0xe9be, 0xcafd, 0xbd10, 0x5ee6, 0xa183, 0xc4d5, 0x0, 0x1);
        gbc.writeMem(0xe9be, { 0x25 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xcafd, gbc.sp());
        EXPECT(0xe9bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xe9be));
        // 25 00E3
        gbc.setState(0x261e, 0x5e80, 0xc1f0, 0x83b1, 0x8abc, 0x6ab1, 0x1, 0x0);
        gbc.writeMem(0x261e, { 0x25 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x5e80, gbc.sp());
        EXPECT(0x261f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 00E4
        gbc.setState(0x8a8b, 0x77bc, 0x6710, 0x4cd1, 0x6141, 0xd36d, 0x0, 0x1);
        gbc.writeMem(0x8a8b, { 0x25 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x77bc, gbc.sp());
        EXPECT(0x8a8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x8a8b));
        // 25 00E5
        gbc.setState(0x5143, 0x5796, 0x5cf0, 0xfdfd, 0x6439, 0x4463, 0x1, 0x0);
        gbc.writeMem(0x5143, { 0x25 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x5796, gbc.sp());
        EXPECT(0x5144, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 00E6
        gbc.setState(0xc58b, 0x334a, 0xaf20, 0x9e93, 0xe33c, 0x3d6b, 0x1, 0x1);
        gbc.writeMem(0xc58b, { 0x25 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x334a, gbc.sp());
        EXPECT(0xc58c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xc58b));
        // 25 00E7
        gbc.setState(0x63aa, 0x16cb, 0xb630, 0x5e48, 0x4fa9, 0xca34, 0x0, 0x0);
        gbc.writeMem(0x63aa, { 0x25 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x16cb, gbc.sp());
        EXPECT(0x63ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 00E8
        gbc.setState(0x6b86, 0x4a37, 0xd180, 0xaf71, 0x9c54, 0x5245, 0x0, 0x1);
        gbc.writeMem(0x6b86, { 0x25 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x4a37, gbc.sp());
        EXPECT(0x6b87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 00E9
        gbc.setState(0x507a, 0x3e6b, 0x4500, 0xcfc5, 0x79f4, 0xe38f, 0x0, 0x1);
        gbc.writeMem(0x507a, { 0x25 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x3e6b, gbc.sp());
        EXPECT(0x507b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 00EA
        gbc.setState(0x303a, 0x1ac7, 0x8cd0, 0x7a34, 0xf4a0, 0x8fb7, 0x1, 0x0);
        gbc.writeMem(0x303a, { 0x25 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x1ac7, gbc.sp());
        EXPECT(0x303b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 00EC
        gbc.setState(0xb1e9, 0xedc6, 0x57a0, 0xf682, 0xd04f, 0x9129, 0x0, 0x1);
        gbc.writeMem(0xb1e9, { 0x25 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xedc6, gbc.sp());
        EXPECT(0xb1ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xb1e9));
        // 25 00ED
        gbc.setState(0xe93d, 0xcbbc, 0x8d50, 0x3a68, 0x8eb2, 0x9124, 0x1, 0x0);
        gbc.writeMem(0xe93d, { 0x25 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xcbbc, gbc.sp());
        EXPECT(0xe93e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xe93d));
        // 25 00EE
        gbc.setState(0x864d, 0x50f8, 0x8400, 0x9e16, 0x3926, 0xafde, 0x0, 0x1);
        gbc.writeMem(0x864d, { 0x25 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x50f8, gbc.sp());
        EXPECT(0x864e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x864d));
        // 25 00EF
        gbc.setState(0xa701, 0xc4b2, 0x2040, 0x49ff, 0xb74c, 0xc866, 0x0, 0x0);
        gbc.writeMem(0xa701, { 0x25 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xc4b2, gbc.sp());
        EXPECT(0xa702, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xa701));
        // 25 00F0
        gbc.setState(0xb925, 0xa6b0, 0xdb80, 0xbf30, 0xea5d, 0xbd4b, 0x0, 0x1);
        gbc.writeMem(0xb925, { 0x25 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xa6b0, gbc.sp());
        EXPECT(0xb926, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xb925));
        // 25 00F1
        gbc.setState(0x6307, 0xa1d0, 0xac40, 0x8f04, 0x1a67, 0xb4e2, 0x1, 0x0);
        gbc.writeMem(0x6307, { 0x25 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xa1d0, gbc.sp());
        EXPECT(0x6308, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 00F2
        gbc.setState(0x2ed9, 0xdf6a, 0x60, 0xac5e, 0x80e3, 0x44ca, 0x1, 0x1);
        gbc.writeMem(0x2ed9, { 0x25 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xdf6a, gbc.sp());
        EXPECT(0x2eda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 00F3
        gbc.setState(0x770d, 0xd5c, 0x4060, 0xd84e, 0x2c92, 0x887d, 0x1, 0x0);
        gbc.writeMem(0x770d, { 0x25 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xd5c, gbc.sp());
        EXPECT(0x770e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 00F4
        gbc.setState(0x6ec5, 0xa3d4, 0x45d0, 0xf541, 0x697a, 0xfe17, 0x1, 0x0);
        gbc.writeMem(0x6ec5, { 0x25 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xa3d4, gbc.sp());
        EXPECT(0x6ec6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 00F5
        gbc.setState(0xa444, 0xbc0a, 0x5680, 0x20d1, 0x934b, 0xdd21, 0x0, 0x0);
        gbc.writeMem(0xa444, { 0x25 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xbc0a, gbc.sp());
        EXPECT(0xa445, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xa444));
        // 25 00F6
        gbc.setState(0x507a, 0x3ab6, 0x59b0, 0xf4db, 0x335a, 0x4a1a, 0x1, 0x1);
        gbc.writeMem(0x507a, { 0x25 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x3ab6, gbc.sp());
        EXPECT(0x507b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 00F7
        gbc.setState(0x5956, 0xd566, 0x74c0, 0xc06e, 0x57d2, 0x5adf, 0x0, 0x0);
        gbc.writeMem(0x5956, { 0x25 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xd566, gbc.sp());
        EXPECT(0x5957, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 00F8
        gbc.setState(0x3ab6, 0x488b, 0xe270, 0x9080, 0x50b1, 0x9d04, 0x1, 0x1);
        gbc.writeMem(0x3ab6, { 0x25 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x488b, gbc.sp());
        EXPECT(0x3ab7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 00F9
        gbc.setState(0x11ba, 0xe556, 0x5990, 0xaa32, 0x69a5, 0x8933, 0x1, 0x0);
        gbc.writeMem(0x11ba, { 0x25 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xe556, gbc.sp());
        EXPECT(0x11bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 00FA
        gbc.setState(0x638c, 0x1d58, 0xd750, 0x3938, 0x9f07, 0xa8ce, 0x1, 0x1);
        gbc.writeMem(0x638c, { 0x25 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x1d58, gbc.sp());
        EXPECT(0x638d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 00FB
        gbc.setState(0x9d5b, 0xc77, 0xe710, 0x9375, 0x28fc, 0xb16, 0x1, 0x1);
        gbc.writeMem(0x9d5b, { 0x25 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xc77, gbc.sp());
        EXPECT(0x9d5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x9d5b));
        // 25 00FC
        gbc.setState(0x5eb1, 0x3b10, 0xe520, 0xc2a2, 0x397, 0xa60, 0x1, 0x0);
        gbc.writeMem(0x5eb1, { 0x25 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x3b10, gbc.sp());
        EXPECT(0x5eb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 00FD
        gbc.setState(0xa5f0, 0xe51e, 0x50e0, 0xdcb9, 0x8707, 0xaee9, 0x1, 0x0);
        gbc.writeMem(0xa5f0, { 0x25 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xe51e, gbc.sp());
        EXPECT(0xa5f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xa5f0));
        // 25 00FE
        gbc.setState(0x84ca, 0xe49f, 0x92c0, 0x1742, 0x4aec, 0xfaef, 0x0, 0x1);
        gbc.writeMem(0x84ca, { 0x25 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xe49f, gbc.sp());
        EXPECT(0x84cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x84ca));
        // 25 00FF
        gbc.setState(0x5561, 0xaf0d, 0x1430, 0x57c7, 0x7f1f, 0x85c2, 0x1, 0x0);
        gbc.writeMem(0x5561, { 0x25 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xaf0d, gbc.sp());
        EXPECT(0x5562, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0100
        gbc.setState(0xc203, 0x715b, 0xe010, 0xa98e, 0x2743, 0x22aa, 0x1, 0x0);
        gbc.writeMem(0xc203, { 0x25 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x715b, gbc.sp());
        EXPECT(0xc204, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xc203));
        // 25 0101
        gbc.setState(0x5a77, 0x2712, 0x9080, 0xe61, 0x3f8f, 0x43e8, 0x0, 0x1);
        gbc.writeMem(0x5a77, { 0x25 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x2712, gbc.sp());
        EXPECT(0x5a78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0102
        gbc.setState(0xd52a, 0x1a82, 0x75c0, 0xa4fc, 0x53f6, 0xea08, 0x0, 0x1);
        gbc.writeMem(0xd52a, { 0x25 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x1a82, gbc.sp());
        EXPECT(0xd52b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xd52a));
        // 25 0103
        gbc.setState(0xc77f, 0x45d1, 0x3aa0, 0x2ec, 0x5416, 0x129, 0x1, 0x1);
        gbc.writeMem(0xc77f, { 0x25 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x45d1, gbc.sp());
        EXPECT(0xc780, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xc77f));
        // 25 0104
        gbc.setState(0x8f05, 0xab78, 0x6bc0, 0xcda0, 0x54e5, 0xd3e4, 0x0, 0x0);
        gbc.writeMem(0x8f05, { 0x25 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xab78, gbc.sp());
        EXPECT(0x8f06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x8f05));
        // 25 0105
        gbc.setState(0x5456, 0xb0ed, 0x79e0, 0x158, 0x4210, 0x5662, 0x1, 0x0);
        gbc.writeMem(0x5456, { 0x25 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xb0ed, gbc.sp());
        EXPECT(0x5457, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0106
        gbc.setState(0x9962, 0xbd33, 0xa870, 0xb0ef, 0xf3eb, 0x2c3f, 0x0, 0x1);
        gbc.writeMem(0x9962, { 0x25 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xbd33, gbc.sp());
        EXPECT(0x9963, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x9962));
        // 25 0107
        gbc.setState(0x9d35, 0x35a7, 0xf5e0, 0x5bee, 0x2a07, 0x11f6, 0x0, 0x1);
        gbc.writeMem(0x9d35, { 0x25 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x35a7, gbc.sp());
        EXPECT(0x9d36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x9d35));
        // 25 0108
        gbc.setState(0xb2c0, 0xf921, 0x9fc0, 0x80f2, 0x1927, 0x859b, 0x1, 0x0);
        gbc.writeMem(0xb2c0, { 0x25 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xf921, gbc.sp());
        EXPECT(0xb2c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xb2c0));
        // 25 0109
        gbc.setState(0x2ec3, 0xcc88, 0x97d0, 0x1e3b, 0x78a9, 0xa303, 0x0, 0x1);
        gbc.writeMem(0x2ec3, { 0x25 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xcc88, gbc.sp());
        EXPECT(0x2ec4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 010A
        gbc.setState(0xc167, 0xfd0f, 0x4200, 0x97b9, 0x6c9c, 0x7af2, 0x1, 0x0);
        gbc.writeMem(0xc167, { 0x25 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xfd0f, gbc.sp());
        EXPECT(0xc168, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xc167));
        // 25 010B
        gbc.setState(0x23f7, 0xf6f3, 0x6cc0, 0x5688, 0xc29c, 0x8f64, 0x0, 0x1);
        gbc.writeMem(0x23f7, { 0x25 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xf6f3, gbc.sp());
        EXPECT(0x23f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 010C
        gbc.setState(0x67d0, 0x7f08, 0x9e10, 0x8308, 0x8e57, 0xbb0a, 0x0, 0x1);
        gbc.writeMem(0x67d0, { 0x25 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x7f08, gbc.sp());
        EXPECT(0x67d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 010D
        gbc.setState(0x79a1, 0xbc22, 0x3b20, 0x6282, 0x6e20, 0x54fa, 0x0, 0x0);
        gbc.writeMem(0x79a1, { 0x25 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xbc22, gbc.sp());
        EXPECT(0x79a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 010E
        gbc.setState(0x7e4a, 0xabbe, 0xe400, 0x86c7, 0x2f8a, 0x88d5, 0x1, 0x1);
        gbc.writeMem(0x7e4a, { 0x25 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xabbe, gbc.sp());
        EXPECT(0x7e4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 010F
        gbc.setState(0x72b8, 0x282e, 0xe8a0, 0x77e6, 0xa8a7, 0x702a, 0x1, 0x0);
        gbc.writeMem(0x72b8, { 0x25 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x282e, gbc.sp());
        EXPECT(0x72b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0110
        gbc.setState(0xaf60, 0x7430, 0xd930, 0xa3e, 0xcffe, 0x6a1, 0x0, 0x0);
        gbc.writeMem(0xaf60, { 0x25 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x7430, gbc.sp());
        EXPECT(0xaf61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xaf60));
        // 25 0111
        gbc.setState(0x3864, 0xeaf6, 0xdd80, 0xfbf1, 0x4abb, 0x193, 0x0, 0x1);
        gbc.writeMem(0x3864, { 0x25 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xeaf6, gbc.sp());
        EXPECT(0x3865, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0112
        gbc.setState(0x2528, 0x9718, 0x68b0, 0x125, 0xe0d8, 0x19f2, 0x1, 0x0);
        gbc.writeMem(0x2528, { 0x25 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x9718, gbc.sp());
        EXPECT(0x2529, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0113
        gbc.setState(0xcd18, 0x2fb, 0x8b30, 0xb5d2, 0x9a07, 0x13b4, 0x0, 0x0);
        gbc.writeMem(0xcd18, { 0x25 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x2fb, gbc.sp());
        EXPECT(0xcd19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xcd18));
        // 25 0114
        gbc.setState(0x753d, 0x3785, 0x9b50, 0xf1d, 0xf9ba, 0xa278, 0x1, 0x1);
        gbc.writeMem(0x753d, { 0x25 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x3785, gbc.sp());
        EXPECT(0x753e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0115
        gbc.setState(0xe64c, 0x3854, 0xbd70, 0x42fe, 0xb762, 0x675c, 0x0, 0x0);
        gbc.writeMem(0xe64c, { 0x25 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x3854, gbc.sp());
        EXPECT(0xe64d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xe64c));
        // 25 0116
        gbc.setState(0x3f95, 0x8776, 0xd050, 0x444f, 0x6e63, 0xbbd7, 0x1, 0x1);
        gbc.writeMem(0x3f95, { 0x25 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x8776, gbc.sp());
        EXPECT(0x3f96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0117
        gbc.setState(0x5a8a, 0x70be, 0x18c0, 0x6a6c, 0xd51f, 0x2836, 0x0, 0x0);
        gbc.writeMem(0x5a8a, { 0x25 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x70be, gbc.sp());
        EXPECT(0x5a8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0118
        gbc.setState(0xe234, 0x7482, 0x5930, 0xc3ec, 0x2ddc, 0x84, 0x0, 0x1);
        gbc.writeMem(0xe234, { 0x25 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x7482, gbc.sp());
        EXPECT(0xe235, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xe234));
        // 25 0119
        gbc.setState(0x11aa, 0x2f28, 0xfe00, 0xbacd, 0xb28f, 0x1dd1, 0x0, 0x0);
        gbc.writeMem(0x11aa, { 0x25 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x2f28, gbc.sp());
        EXPECT(0x11ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 011A
        gbc.setState(0xdb84, 0x1e51, 0xab70, 0xbac2, 0x2f84, 0xaf9b, 0x0, 0x0);
        gbc.writeMem(0xdb84, { 0x25 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x1e51, gbc.sp());
        EXPECT(0xdb85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xdb84));
        // 25 011B
        gbc.setState(0xc33a, 0x5c3f, 0x3f10, 0x3172, 0x6a63, 0x32fa, 0x0, 0x1);
        gbc.writeMem(0xc33a, { 0x25 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x5c3f, gbc.sp());
        EXPECT(0xc33b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xc33a));
        // 25 011C
        gbc.setState(0x44f9, 0x63b8, 0x3f0, 0x1c99, 0xb05a, 0x22bd, 0x1, 0x0);
        gbc.writeMem(0x44f9, { 0x25 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x63b8, gbc.sp());
        EXPECT(0x44fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 011D
        gbc.setState(0xd96b, 0x7ae0, 0xf8a0, 0x819b, 0xb6d2, 0x7b13, 0x0, 0x0);
        gbc.writeMem(0xd96b, { 0x25 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x7ae0, gbc.sp());
        EXPECT(0xd96c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xd96b));
        // 25 011E
        gbc.setState(0x8781, 0x9ea1, 0x87f0, 0x7805, 0x8fc, 0xd080, 0x1, 0x0);
        gbc.writeMem(0x8781, { 0x25 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x9ea1, gbc.sp());
        EXPECT(0x8782, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x8781));
        // 25 011F
        gbc.setState(0x66de, 0x9bc7, 0xfb50, 0xa8a, 0x250c, 0xd690, 0x0, 0x0);
        gbc.writeMem(0x66de, { 0x25 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x9bc7, gbc.sp());
        EXPECT(0x66df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0120
        gbc.setState(0xdbc9, 0xebae, 0xaa90, 0x1cd5, 0x226a, 0x8d8e, 0x1, 0x1);
        gbc.writeMem(0xdbc9, { 0x25 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xebae, gbc.sp());
        EXPECT(0xdbca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xdbc9));
        // 25 0121
        gbc.setState(0x14f, 0xb69f, 0x3080, 0x5eec, 0x2493, 0x21b4, 0x0, 0x0);
        gbc.writeMem(0x14f, { 0x25 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xb69f, gbc.sp());
        EXPECT(0x150, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0122
        gbc.setState(0xbf10, 0xc0fd, 0xa9a0, 0xa474, 0xb54e, 0xa383, 0x1, 0x1);
        gbc.writeMem(0xbf10, { 0x25 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xc0fd, gbc.sp());
        EXPECT(0xbf11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xbf10));
        // 25 0123
        gbc.setState(0x6667, 0xd35e, 0x1c10, 0x328, 0x54e2, 0xc45d, 0x0, 0x1);
        gbc.writeMem(0x6667, { 0x25 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xd35e, gbc.sp());
        EXPECT(0x6668, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0124
        gbc.setState(0xd0a4, 0xc067, 0x6310, 0x718c, 0x1ee9, 0xcc, 0x0, 0x0);
        gbc.writeMem(0xd0a4, { 0x25 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xc067, gbc.sp());
        EXPECT(0xd0a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xd0a4));
        // 25 0125
        gbc.setState(0x1d2c, 0x4c4d, 0x1040, 0x244e, 0xfeb0, 0xd01f, 0x1, 0x1);
        gbc.writeMem(0x1d2c, { 0x25 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x4c4d, gbc.sp());
        EXPECT(0x1d2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0126
        gbc.setState(0xc305, 0x2962, 0x5220, 0x3d87, 0x5bd, 0xfb7c, 0x0, 0x1);
        gbc.writeMem(0xc305, { 0x25 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x2962, gbc.sp());
        EXPECT(0xc306, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xc305));
        // 25 0127
        gbc.setState(0xdb83, 0x42bf, 0x4e70, 0xcfc7, 0x2107, 0x9e1d, 0x1, 0x0);
        gbc.writeMem(0xdb83, { 0x25 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x42bf, gbc.sp());
        EXPECT(0xdb84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xdb83));
        // 25 0128
        gbc.setState(0xbc6f, 0x2b3b, 0x5460, 0xcbd0, 0x54da, 0xe4ed, 0x1, 0x0);
        gbc.writeMem(0xbc6f, { 0x25 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x2b3b, gbc.sp());
        EXPECT(0xbc70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xbc6f));
        // 25 0129
        gbc.setState(0x724d, 0xaf07, 0x9bf0, 0xaeb8, 0xb2dd, 0xc00b, 0x0, 0x1);
        gbc.writeMem(0x724d, { 0x25 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xaf07, gbc.sp());
        EXPECT(0x724e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 012A
        gbc.setState(0xcd5c, 0x891c, 0x3d90, 0x7e00, 0x127b, 0xd5fa, 0x0, 0x0);
        gbc.writeMem(0xcd5c, { 0x25 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x891c, gbc.sp());
        EXPECT(0xcd5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xcd5c));
        // 25 012B
        gbc.setState(0xd717, 0x2afe, 0xfa10, 0x73b1, 0xa98f, 0x77e9, 0x1, 0x0);
        gbc.writeMem(0xd717, { 0x25 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x2afe, gbc.sp());
        EXPECT(0xd718, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xd717));
        // 25 012C
        gbc.setState(0xa251, 0xf2d4, 0x9140, 0x2322, 0x5d78, 0x2946, 0x1, 0x1);
        gbc.writeMem(0xa251, { 0x25 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xf2d4, gbc.sp());
        EXPECT(0xa252, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xa251));
        // 25 012D
        gbc.setState(0xe2b9, 0x2337, 0x700, 0x1527, 0xbac6, 0x71ea, 0x0, 0x0);
        gbc.writeMem(0xe2b9, { 0x25 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x2337, gbc.sp());
        EXPECT(0xe2ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xe2b9));
        // 25 012E
        gbc.setState(0x61ff, 0x4f6b, 0xbc20, 0x3583, 0xf835, 0x478c, 0x1, 0x0);
        gbc.writeMem(0x61ff, { 0x25 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x4f6b, gbc.sp());
        EXPECT(0x6200, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 012F
        gbc.setState(0xa9d8, 0xcca2, 0xd860, 0x5239, 0xdc0c, 0x9bf1, 0x0, 0x0);
        gbc.writeMem(0xa9d8, { 0x25 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xcca2, gbc.sp());
        EXPECT(0xa9d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xa9d8));
        // 25 0130
        gbc.setState(0x7f53, 0x5b13, 0xb420, 0x176a, 0x6005, 0xb43c, 0x0, 0x1);
        gbc.writeMem(0x7f53, { 0x25 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x5b13, gbc.sp());
        EXPECT(0x7f54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0131
        gbc.setState(0x85ef, 0x7f05, 0x8260, 0x8020, 0xc659, 0x1ef1, 0x0, 0x1);
        gbc.writeMem(0x85ef, { 0x25 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x7f05, gbc.sp());
        EXPECT(0x85f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x85ef));
        // 25 0132
        gbc.setState(0xdd42, 0x2711, 0x3b80, 0x6fd3, 0x4b20, 0x9815, 0x0, 0x0);
        gbc.writeMem(0xdd42, { 0x25 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x2711, gbc.sp());
        EXPECT(0xdd43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xdd42));
        // 25 0133
        gbc.setState(0x14e9, 0xf3e9, 0x7df0, 0xe3d8, 0x191e, 0xc294, 0x0, 0x1);
        gbc.writeMem(0x14e9, { 0x25 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xf3e9, gbc.sp());
        EXPECT(0x14ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0134
        gbc.setState(0xc142, 0xa506, 0x97e0, 0x4907, 0xf267, 0xdc59, 0x1, 0x1);
        gbc.writeMem(0xc142, { 0x25 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xa506, gbc.sp());
        EXPECT(0xc143, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xc142));
        // 25 0135
        gbc.setState(0xaaef, 0x4750, 0xe470, 0x2c14, 0xcdc9, 0x62d1, 0x1, 0x1);
        gbc.writeMem(0xaaef, { 0x25 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x4750, gbc.sp());
        EXPECT(0xaaf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xaaef));
        // 25 0136
        gbc.setState(0xb61d, 0x9f49, 0xc90, 0x9457, 0x159d, 0xcb16, 0x1, 0x1);
        gbc.writeMem(0xb61d, { 0x25 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x9f49, gbc.sp());
        EXPECT(0xb61e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xb61d));
        // 25 0138
        gbc.setState(0x7b40, 0x314b, 0x6390, 0x2f2b, 0xef99, 0x9e1d, 0x1, 0x1);
        gbc.writeMem(0x7b40, { 0x25 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x314b, gbc.sp());
        EXPECT(0x7b41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0139
        gbc.setState(0x22f, 0x67c6, 0xddb0, 0x842c, 0xe1d1, 0xf50c, 0x1, 0x0);
        gbc.writeMem(0x22f, { 0x25 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x67c6, gbc.sp());
        EXPECT(0x230, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 013C
        gbc.setState(0x58bf, 0xbf3, 0x5900, 0x27cc, 0x93cc, 0x43ab, 0x0, 0x1);
        gbc.writeMem(0x58bf, { 0x25 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xbf3, gbc.sp());
        EXPECT(0x58c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 013D
        gbc.setState(0xe8b0, 0xcff5, 0xbf00, 0xd0e4, 0x83d0, 0x3188, 0x1, 0x1);
        gbc.writeMem(0xe8b0, { 0x25 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xcff5, gbc.sp());
        EXPECT(0xe8b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xe8b0));
        // 25 013E
        gbc.setState(0xb243, 0x2d12, 0xaa90, 0x9383, 0x22ff, 0xede3, 0x1, 0x0);
        gbc.writeMem(0xb243, { 0x25 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x2d12, gbc.sp());
        EXPECT(0xb244, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xb243));
        // 25 013F
        gbc.setState(0xefdd, 0xd03f, 0x6180, 0x1dbc, 0x69ba, 0xcb62, 0x1, 0x1);
        gbc.writeMem(0xefdd, { 0x25 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xd03f, gbc.sp());
        EXPECT(0xefde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xefdd));
        // 25 0140
        gbc.setState(0xf59, 0x7b43, 0xccf0, 0xf305, 0x648, 0xe061, 0x1, 0x0);
        gbc.writeMem(0xf59, { 0x25 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x7b43, gbc.sp());
        EXPECT(0xf5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0141
        gbc.setState(0x8c38, 0xf26d, 0x59e0, 0xabc2, 0x5740, 0xdb9a, 0x1, 0x1);
        gbc.writeMem(0x8c38, { 0x25 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xf26d, gbc.sp());
        EXPECT(0x8c39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x8c38));
        // 25 0142
        gbc.setState(0xa777, 0xeb7c, 0x9020, 0x5c78, 0x9505, 0x3015, 0x0, 0x1);
        gbc.writeMem(0xa777, { 0x25 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xeb7c, gbc.sp());
        EXPECT(0xa778, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xa777));
        // 25 0143
        gbc.setState(0x9ef9, 0xa7a8, 0x9180, 0x4b23, 0xeb6b, 0xab69, 0x1, 0x0);
        gbc.writeMem(0x9ef9, { 0x25 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xa7a8, gbc.sp());
        EXPECT(0x9efa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x9ef9));
        // 25 0144
        gbc.setState(0x5a, 0x674, 0x66a0, 0x8089, 0x6713, 0xbd3c, 0x0, 0x1);
        gbc.writeMem(0x5a, { 0x25 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x674, gbc.sp());
        EXPECT(0x5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0145
        gbc.setState(0x71be, 0x68e7, 0x5770, 0x4c4b, 0x2b90, 0xbf3e, 0x1, 0x0);
        gbc.writeMem(0x71be, { 0x25 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x68e7, gbc.sp());
        EXPECT(0x71bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0146
        gbc.setState(0xe993, 0xd664, 0x8310, 0x7e8f, 0x87de, 0x27db, 0x0, 0x1);
        gbc.writeMem(0xe993, { 0x25 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xd664, gbc.sp());
        EXPECT(0xe994, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xe993));
        // 25 0147
        gbc.setState(0xb051, 0x8953, 0x53a0, 0x4082, 0x787d, 0xc1d5, 0x0, 0x1);
        gbc.writeMem(0xb051, { 0x25 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x8953, gbc.sp());
        EXPECT(0xb052, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xb051));
        // 25 0149
        gbc.setState(0xd9fd, 0x28, 0xaa70, 0x32f4, 0xc6c9, 0x294b, 0x0, 0x1);
        gbc.writeMem(0xd9fd, { 0x25 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x28, gbc.sp());
        EXPECT(0xd9fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xd9fd));
        // 25 014A
        gbc.setState(0x9681, 0xbd5e, 0xb9f0, 0x517b, 0xc201, 0x4897, 0x1, 0x0);
        gbc.writeMem(0x9681, { 0x25 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xbd5e, gbc.sp());
        EXPECT(0x9682, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x9681));
        // 25 014B
        gbc.setState(0x86eb, 0x7b30, 0xe510, 0x74ec, 0x5314, 0xf79, 0x0, 0x1);
        gbc.writeMem(0x86eb, { 0x25 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x7b30, gbc.sp());
        EXPECT(0x86ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x86eb));
        // 25 014C
        gbc.setState(0x778f, 0x5fbf, 0x1760, 0x49b6, 0xd1fc, 0xd78b, 0x1, 0x1);
        gbc.writeMem(0x778f, { 0x25 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x5fbf, gbc.sp());
        EXPECT(0x7790, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 014D
        gbc.setState(0x3692, 0x4967, 0x7aa0, 0x87ff, 0x5e40, 0x1901, 0x0, 0x1);
        gbc.writeMem(0x3692, { 0x25 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x4967, gbc.sp());
        EXPECT(0x3693, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 014F
        gbc.setState(0x8d1e, 0xed36, 0xd390, 0x1d10, 0xf19b, 0x3e76, 0x1, 0x0);
        gbc.writeMem(0x8d1e, { 0x25 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xed36, gbc.sp());
        EXPECT(0x8d1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x8d1e));
        // 25 0150
        gbc.setState(0x3902, 0x7a9e, 0x22f0, 0x72e7, 0x81d7, 0x61eb, 0x1, 0x0);
        gbc.writeMem(0x3902, { 0x25 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x7a9e, gbc.sp());
        EXPECT(0x3903, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0151
        gbc.setState(0xb415, 0xad76, 0x4a20, 0x8ac1, 0xf7ba, 0x7881, 0x1, 0x1);
        gbc.writeMem(0xb415, { 0x25 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xad76, gbc.sp());
        EXPECT(0xb416, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xb415));
        // 25 0153
        gbc.setState(0xdc5d, 0xe4cf, 0x8ab0, 0x4666, 0x80c1, 0xcbb, 0x1, 0x0);
        gbc.writeMem(0xdc5d, { 0x25 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xe4cf, gbc.sp());
        EXPECT(0xdc5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xdc5d));
        // 25 0154
        gbc.setState(0x6766, 0x1058, 0xa010, 0xb894, 0x3459, 0x881, 0x1, 0x0);
        gbc.writeMem(0x6766, { 0x25 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x1058, gbc.sp());
        EXPECT(0x6767, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0155
        gbc.setState(0x6e5c, 0x6557, 0x6df0, 0xa65f, 0xd, 0x1845, 0x0, 0x1);
        gbc.writeMem(0x6e5c, { 0x25 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x6557, gbc.sp());
        EXPECT(0x6e5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0156
        gbc.setState(0xe297, 0x2058, 0xb5e0, 0x1be1, 0x7da9, 0xb9db, 0x0, 0x1);
        gbc.writeMem(0xe297, { 0x25 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x2058, gbc.sp());
        EXPECT(0xe298, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xe297));
        // 25 0157
        gbc.setState(0xc5e7, 0xafba, 0x51e0, 0x2e9d, 0xa567, 0x2ef9, 0x0, 0x1);
        gbc.writeMem(0xc5e7, { 0x25 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xafba, gbc.sp());
        EXPECT(0xc5e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xc5e7));
        // 25 0158
        gbc.setState(0x1a8d, 0x2698, 0x8ea0, 0x5ed3, 0x52ea, 0x285b, 0x1, 0x1);
        gbc.writeMem(0x1a8d, { 0x25 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x2698, gbc.sp());
        EXPECT(0x1a8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0159
        gbc.setState(0xd05a, 0x62bc, 0xc5a0, 0xdab4, 0x9701, 0x512e, 0x0, 0x0);
        gbc.writeMem(0xd05a, { 0x25 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x62bc, gbc.sp());
        EXPECT(0xd05b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xd05a));
        // 25 015A
        gbc.setState(0x5efe, 0xd2f9, 0x5860, 0x6324, 0xaca1, 0xd4ba, 0x1, 0x1);
        gbc.writeMem(0x5efe, { 0x25 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xd2f9, gbc.sp());
        EXPECT(0x5eff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 015B
        gbc.setState(0x3c38, 0x2d57, 0x9240, 0x5a8c, 0xdfef, 0x49d2, 0x1, 0x0);
        gbc.writeMem(0x3c38, { 0x25 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x2d57, gbc.sp());
        EXPECT(0x3c39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 015C
        gbc.setState(0xc252, 0x7cca, 0x58d0, 0xfb42, 0x227b, 0x3cd5, 0x1, 0x0);
        gbc.writeMem(0xc252, { 0x25 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x7cca, gbc.sp());
        EXPECT(0xc253, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xc252));
        // 25 015E
        gbc.setState(0x2635, 0x7eb7, 0xb590, 0x67b2, 0xcf99, 0x8fc2, 0x1, 0x1);
        gbc.writeMem(0x2635, { 0x25 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x7eb7, gbc.sp());
        EXPECT(0x2636, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 015F
        gbc.setState(0x5511, 0x4ad5, 0xd7d0, 0x40d4, 0x23a8, 0x1d3f, 0x1, 0x0);
        gbc.writeMem(0x5511, { 0x25 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x4ad5, gbc.sp());
        EXPECT(0x5512, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0160
        gbc.setState(0xdc4a, 0xfb4, 0x85a0, 0x18a2, 0x5489, 0xa68f, 0x0, 0x1);
        gbc.writeMem(0xdc4a, { 0x25 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xfb4, gbc.sp());
        EXPECT(0xdc4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xdc4a));
        // 25 0161
        gbc.setState(0xc677, 0x3370, 0x4e30, 0x6006, 0x2fa0, 0x5566, 0x0, 0x1);
        gbc.writeMem(0xc677, { 0x25 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x3370, gbc.sp());
        EXPECT(0xc678, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xc677));
        // 25 0162
        gbc.setState(0x4ccd, 0x956e, 0xb770, 0x4b7b, 0x8146, 0x8ea4, 0x0, 0x0);
        gbc.writeMem(0x4ccd, { 0x25 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x956e, gbc.sp());
        EXPECT(0x4cce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0163
        gbc.setState(0x99c8, 0x1fda, 0x65f0, 0x5824, 0x4407, 0x4980, 0x1, 0x1);
        gbc.writeMem(0x99c8, { 0x25 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x1fda, gbc.sp());
        EXPECT(0x99c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x99c8));
        // 25 0164
        gbc.setState(0x635d, 0xc1ff, 0xc440, 0xfe14, 0x1d7f, 0x237a, 0x0, 0x0);
        gbc.writeMem(0x635d, { 0x25 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xc1ff, gbc.sp());
        EXPECT(0x635e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0165
        gbc.setState(0x7a3e, 0xe614, 0xcc20, 0x150d, 0x67ac, 0x2dd2, 0x0, 0x0);
        gbc.writeMem(0x7a3e, { 0x25 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xe614, gbc.sp());
        EXPECT(0x7a3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0166
        gbc.setState(0xd72a, 0x60cb, 0x7710, 0xcc48, 0x7455, 0x477e, 0x1, 0x1);
        gbc.writeMem(0xd72a, { 0x25 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x60cb, gbc.sp());
        EXPECT(0xd72b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xd72a));
        // 25 0167
        gbc.setState(0xccca, 0x54d0, 0x2500, 0xb2ba, 0x53e2, 0x1ee9, 0x0, 0x0);
        gbc.writeMem(0xccca, { 0x25 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x54d0, gbc.sp());
        EXPECT(0xcccb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xccca));
        // 25 0168
        gbc.setState(0x355e, 0x31d8, 0x49b0, 0x5ef6, 0x3150, 0xe66, 0x0, 0x0);
        gbc.writeMem(0x355e, { 0x25 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x31d8, gbc.sp());
        EXPECT(0x355f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0169
        gbc.setState(0xd3f, 0x54dd, 0xc240, 0xc14d, 0x418f, 0x3927, 0x0, 0x0);
        gbc.writeMem(0xd3f, { 0x25 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x54dd, gbc.sp());
        EXPECT(0xd40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 016A
        gbc.setState(0x6e77, 0xec6d, 0x6d0, 0x2c4e, 0x19a0, 0x2ae6, 0x0, 0x1);
        gbc.writeMem(0x6e77, { 0x25 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xec6d, gbc.sp());
        EXPECT(0x6e78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 016B
        gbc.setState(0xd5bb, 0x2ce9, 0x7650, 0x2b39, 0xfa4, 0x1fd9, 0x0, 0x1);
        gbc.writeMem(0xd5bb, { 0x25 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x2ce9, gbc.sp());
        EXPECT(0xd5bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xd5bb));
        // 25 016C
        gbc.setState(0x145a, 0xd041, 0xa040, 0x143, 0xe2fd, 0x110c, 0x1, 0x1);
        gbc.writeMem(0x145a, { 0x25 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xd041, gbc.sp());
        EXPECT(0x145b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 016D
        gbc.setState(0x2dae, 0x28f2, 0xf380, 0x7b47, 0xef8f, 0xafcd, 0x0, 0x1);
        gbc.writeMem(0x2dae, { 0x25 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x28f2, gbc.sp());
        EXPECT(0x2daf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 016E
        gbc.setState(0x4a44, 0xd724, 0xe970, 0xb62c, 0xe206, 0x5ae3, 0x0, 0x1);
        gbc.writeMem(0x4a44, { 0x25 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xd724, gbc.sp());
        EXPECT(0x4a45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 016F
        gbc.setState(0xb949, 0x6373, 0xf3d0, 0xf126, 0xa90e, 0x2c53, 0x0, 0x0);
        gbc.writeMem(0xb949, { 0x25 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x6373, gbc.sp());
        EXPECT(0xb94a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xb949));
        // 25 0170
        gbc.setState(0x65b9, 0xd7e4, 0xefc0, 0x4dc0, 0x3a44, 0x9fb2, 0x0, 0x1);
        gbc.writeMem(0x65b9, { 0x25 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xd7e4, gbc.sp());
        EXPECT(0x65ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0171
        gbc.setState(0x2e8, 0xc44f, 0x3da0, 0x55f8, 0x5c04, 0xe163, 0x0, 0x1);
        gbc.writeMem(0x2e8, { 0x25 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xc44f, gbc.sp());
        EXPECT(0x2e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0173
        gbc.setState(0x47ab, 0xc33a, 0x5de0, 0xb348, 0xb2e7, 0x7189, 0x0, 0x0);
        gbc.writeMem(0x47ab, { 0x25 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xc33a, gbc.sp());
        EXPECT(0x47ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0175
        gbc.setState(0x5a7d, 0x1571, 0x5280, 0xebec, 0xbae2, 0x931d, 0x0, 0x0);
        gbc.writeMem(0x5a7d, { 0x25 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x1571, gbc.sp());
        EXPECT(0x5a7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0176
        gbc.setState(0x563e, 0xa7b4, 0x67c0, 0xd504, 0x13f9, 0xee00, 0x0, 0x1);
        gbc.writeMem(0x563e, { 0x25 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xa7b4, gbc.sp());
        EXPECT(0x563f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0177
        gbc.setState(0xebe3, 0x9ba3, 0x46c0, 0x6dd2, 0xcbcd, 0x5d40, 0x0, 0x1);
        gbc.writeMem(0xebe3, { 0x25 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x9ba3, gbc.sp());
        EXPECT(0xebe4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xebe3));
        // 25 0178
        gbc.setState(0xe2f3, 0x2680, 0x820, 0x8e7a, 0x6e76, 0xc39c, 0x0, 0x0);
        gbc.writeMem(0xe2f3, { 0x25 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x2680, gbc.sp());
        EXPECT(0xe2f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xe2f3));
        // 25 0179
        gbc.setState(0x3a35, 0xbfc8, 0x3ca0, 0xb846, 0x8c90, 0x22e1, 0x0, 0x1);
        gbc.writeMem(0x3a35, { 0x25 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xbfc8, gbc.sp());
        EXPECT(0x3a36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 017A
        gbc.setState(0xce2c, 0x7ee5, 0x51e0, 0x9c54, 0xcbf6, 0xb513, 0x1, 0x1);
        gbc.writeMem(0xce2c, { 0x25 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x7ee5, gbc.sp());
        EXPECT(0xce2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xce2c));
        // 25 017B
        gbc.setState(0xaceb, 0xc8ab, 0xdc90, 0xe112, 0x9554, 0x272, 0x0, 0x0);
        gbc.writeMem(0xaceb, { 0x25 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xc8ab, gbc.sp());
        EXPECT(0xacec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xaceb));
        // 25 017C
        gbc.setState(0x146f, 0xb2d2, 0x8ef0, 0xf4af, 0x734a, 0x3c90, 0x1, 0x0);
        gbc.writeMem(0x146f, { 0x25 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xb2d2, gbc.sp());
        EXPECT(0x1470, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 017D
        gbc.setState(0x752b, 0x887e, 0x3cb0, 0xb19, 0xa03a, 0x4a0e, 0x0, 0x0);
        gbc.writeMem(0x752b, { 0x25 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x887e, gbc.sp());
        EXPECT(0x752c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 017E
        gbc.setState(0xb895, 0x2325, 0x9610, 0x68c0, 0xdd49, 0x20cb, 0x0, 0x0);
        gbc.writeMem(0xb895, { 0x25 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x2325, gbc.sp());
        EXPECT(0xb896, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xb895));
        // 25 017F
        gbc.setState(0x7e13, 0x60bf, 0x4800, 0x9d23, 0xf361, 0x6186, 0x0, 0x0);
        gbc.writeMem(0x7e13, { 0x25 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x60bf, gbc.sp());
        EXPECT(0x7e14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0180
        gbc.setState(0x6bd5, 0xa62, 0x1030, 0x535, 0xe16d, 0xeef8, 0x1, 0x0);
        gbc.writeMem(0x6bd5, { 0x25 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xa62, gbc.sp());
        EXPECT(0x6bd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0181
        gbc.setState(0xc5f1, 0x915f, 0xa890, 0xfe5b, 0xedfc, 0x485e, 0x0, 0x0);
        gbc.writeMem(0xc5f1, { 0x25 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x915f, gbc.sp());
        EXPECT(0xc5f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xc5f1));
        // 25 0182
        gbc.setState(0x7a, 0xe610, 0x8130, 0x5b3f, 0xff58, 0xab74, 0x0, 0x1);
        gbc.writeMem(0x7a, { 0x25 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xe610, gbc.sp());
        EXPECT(0x7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0183
        gbc.setState(0x84cd, 0xe1f3, 0x47a0, 0xd4aa, 0x5ef, 0x8771, 0x1, 0x1);
        gbc.writeMem(0x84cd, { 0x25 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xe1f3, gbc.sp());
        EXPECT(0x84ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x84cd));
        // 25 0184
        gbc.setState(0x5f67, 0x13b0, 0x2530, 0x5f05, 0x1627, 0x2a81, 0x1, 0x0);
        gbc.writeMem(0x5f67, { 0x25 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x13b0, gbc.sp());
        EXPECT(0x5f68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0185
        gbc.setState(0x379f, 0x44ed, 0xf720, 0xe609, 0xd1f9, 0x6161, 0x1, 0x1);
        gbc.writeMem(0x379f, { 0x25 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x44ed, gbc.sp());
        EXPECT(0x37a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0186
        gbc.setState(0x24b1, 0x6c91, 0xe130, 0x31f5, 0x9314, 0xb87e, 0x1, 0x0);
        gbc.writeMem(0x24b1, { 0x25 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x6c91, gbc.sp());
        EXPECT(0x24b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0187
        gbc.setState(0xcdd3, 0x74df, 0x3400, 0xc3a5, 0x561b, 0x7a52, 0x0, 0x1);
        gbc.writeMem(0xcdd3, { 0x25 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x74df, gbc.sp());
        EXPECT(0xcdd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xcdd3));
        // 25 0188
        gbc.setState(0x69bc, 0x5061, 0xbdb0, 0xb2f4, 0x8af1, 0x96d1, 0x0, 0x0);
        gbc.writeMem(0x69bc, { 0x25 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x5061, gbc.sp());
        EXPECT(0x69bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0189
        gbc.setState(0x578c, 0xdb5c, 0xc100, 0x23f4, 0xa5e3, 0xccf3, 0x1, 0x1);
        gbc.writeMem(0x578c, { 0x25 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xdb5c, gbc.sp());
        EXPECT(0x578d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 018A
        gbc.setState(0x26ae, 0x8a24, 0xa410, 0x2d76, 0x3a01, 0x424d, 0x1, 0x0);
        gbc.writeMem(0x26ae, { 0x25 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x8a24, gbc.sp());
        EXPECT(0x26af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 018B
        gbc.setState(0x8690, 0xc853, 0xaf60, 0x8de2, 0x8772, 0xc0d0, 0x1, 0x1);
        gbc.writeMem(0x8690, { 0x25 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xc853, gbc.sp());
        EXPECT(0x8691, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x8690));
        // 25 018C
        gbc.setState(0x5352, 0xd2dc, 0x84f0, 0x9591, 0xbddb, 0xd7ec, 0x0, 0x1);
        gbc.writeMem(0x5352, { 0x25 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xd2dc, gbc.sp());
        EXPECT(0x5353, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 018D
        gbc.setState(0xe73d, 0x268f, 0x56b0, 0x9269, 0xa210, 0x7c2, 0x1, 0x1);
        gbc.writeMem(0xe73d, { 0x25 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x268f, gbc.sp());
        EXPECT(0xe73e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xe73d));
        // 25 018E
        gbc.setState(0x68f9, 0x39b3, 0xdee0, 0x7925, 0xe071, 0x6885, 0x1, 0x1);
        gbc.writeMem(0x68f9, { 0x25 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x39b3, gbc.sp());
        EXPECT(0x68fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 018F
        gbc.setState(0x865e, 0xf920, 0x6bf0, 0x3120, 0xf8a2, 0x7129, 0x1, 0x0);
        gbc.writeMem(0x865e, { 0x25 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xf920, gbc.sp());
        EXPECT(0x865f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x865e));
        // 25 0190
        gbc.setState(0x5c31, 0x280c, 0xd380, 0x4c5, 0x8122, 0xd66e, 0x1, 0x1);
        gbc.writeMem(0x5c31, { 0x25 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x280c, gbc.sp());
        EXPECT(0x5c32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0191
        gbc.setState(0xe96d, 0x79c7, 0x4c0, 0xf994, 0x3bf8, 0x6411, 0x0, 0x1);
        gbc.writeMem(0xe96d, { 0x25 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x79c7, gbc.sp());
        EXPECT(0xe96e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xe96d));
        // 25 0192
        gbc.setState(0x60a7, 0x51cf, 0x6e70, 0xac83, 0x1647, 0xfa3a, 0x1, 0x0);
        gbc.writeMem(0x60a7, { 0x25 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x51cf, gbc.sp());
        EXPECT(0x60a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0193
        gbc.setState(0x616d, 0x2457, 0x7a90, 0x1dd5, 0xd1fd, 0xdca8, 0x1, 0x0);
        gbc.writeMem(0x616d, { 0x25 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x2457, gbc.sp());
        EXPECT(0x616e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0194
        gbc.setState(0xcc5f, 0xed53, 0xad0, 0x683c, 0x8083, 0xcf2a, 0x1, 0x0);
        gbc.writeMem(0xcc5f, { 0x25 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xed53, gbc.sp());
        EXPECT(0xcc60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xcc5f));
        // 25 0195
        gbc.setState(0x6c95, 0xa536, 0x6e10, 0x9dee, 0x66a0, 0x22be, 0x0, 0x1);
        gbc.writeMem(0x6c95, { 0x25 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xa536, gbc.sp());
        EXPECT(0x6c96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0196
        gbc.setState(0xe27d, 0x215c, 0x6740, 0x2095, 0xaf70, 0x7a2a, 0x0, 0x0);
        gbc.writeMem(0xe27d, { 0x25 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x215c, gbc.sp());
        EXPECT(0xe27e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xe27d));
        // 25 0197
        gbc.setState(0x8b1, 0xa53a, 0xf230, 0x307e, 0xe651, 0xd23f, 0x1, 0x1);
        gbc.writeMem(0x8b1, { 0x25 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xa53a, gbc.sp());
        EXPECT(0x8b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0198
        gbc.setState(0x332a, 0x254c, 0x4480, 0xb784, 0xe7ab, 0x39ca, 0x0, 0x0);
        gbc.writeMem(0x332a, { 0x25 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x254c, gbc.sp());
        EXPECT(0x332b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0199
        gbc.setState(0x8c64, 0x1d06, 0x6910, 0xdff2, 0x60fe, 0xba92, 0x1, 0x1);
        gbc.writeMem(0x8c64, { 0x25 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x1d06, gbc.sp());
        EXPECT(0x8c65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x8c64));
        // 25 019A
        gbc.setState(0x86ed, 0x50ea, 0x40, 0xc678, 0x4794, 0x4a94, 0x0, 0x1);
        gbc.writeMem(0x86ed, { 0x25 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x50ea, gbc.sp());
        EXPECT(0x86ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x86ed));
        // 25 019B
        gbc.setState(0xa582, 0xc51d, 0xbd50, 0xb1bd, 0xfd6f, 0xdd4c, 0x0, 0x0);
        gbc.writeMem(0xa582, { 0x25 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xc51d, gbc.sp());
        EXPECT(0xa583, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xa582));
        // 25 019C
        gbc.setState(0x1e20, 0x5758, 0xda10, 0xfca4, 0x8297, 0x74b7, 0x1, 0x0);
        gbc.writeMem(0x1e20, { 0x25 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x5758, gbc.sp());
        EXPECT(0x1e21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 019D
        gbc.setState(0x65ca, 0xdb37, 0x2160, 0x5b8b, 0x39e7, 0x1fc7, 0x1, 0x0);
        gbc.writeMem(0x65ca, { 0x25 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xdb37, gbc.sp());
        EXPECT(0x65cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 019E
        gbc.setState(0xaa4b, 0x78c3, 0x1db0, 0xeca7, 0x9a8c, 0x3420, 0x0, 0x0);
        gbc.writeMem(0xaa4b, { 0x25 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x78c3, gbc.sp());
        EXPECT(0xaa4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xaa4b));
        // 25 01A0
        gbc.setState(0xd3d3, 0x95f4, 0x8ed0, 0xa497, 0x224d, 0xf40e, 0x1, 0x1);
        gbc.writeMem(0xd3d3, { 0x25 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x95f4, gbc.sp());
        EXPECT(0xd3d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xd3d3));
        // 25 01A1
        gbc.setState(0x72a, 0x934f, 0xf530, 0x7b9c, 0x477b, 0xc869, 0x1, 0x0);
        gbc.writeMem(0x72a, { 0x25 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x934f, gbc.sp());
        EXPECT(0x72b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 01A2
        gbc.setState(0xcb9, 0xc568, 0x83e0, 0x5a7d, 0xb864, 0x7cfb, 0x1, 0x0);
        gbc.writeMem(0xcb9, { 0x25 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xc568, gbc.sp());
        EXPECT(0xcba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 01A3
        gbc.setState(0x9fc6, 0xd4d6, 0x6a90, 0x9cfc, 0x4f1f, 0x502a, 0x1, 0x1);
        gbc.writeMem(0x9fc6, { 0x25 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xd4d6, gbc.sp());
        EXPECT(0x9fc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x9fc6));
        // 25 01A4
        gbc.setState(0x3819, 0x9b9f, 0xc200, 0xfb85, 0xc33c, 0xb6d5, 0x1, 0x0);
        gbc.writeMem(0x3819, { 0x25 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x9b9f, gbc.sp());
        EXPECT(0x381a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 01A5
        gbc.setState(0x99e, 0xb93e, 0x9fa0, 0x91ed, 0x5127, 0xcfc5, 0x0, 0x0);
        gbc.writeMem(0x99e, { 0x25 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xb93e, gbc.sp());
        EXPECT(0x99f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 01A6
        gbc.setState(0xb70a, 0x5be, 0x1c30, 0x281b, 0xc4c4, 0xbc63, 0x0, 0x0);
        gbc.writeMem(0xb70a, { 0x25 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x5be, gbc.sp());
        EXPECT(0xb70b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xb70a));
        // 25 01A7
        gbc.setState(0xbc3a, 0xef50, 0x12d0, 0x19ad, 0xc52b, 0xe56f, 0x0, 0x1);
        gbc.writeMem(0xbc3a, { 0x25 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xef50, gbc.sp());
        EXPECT(0xbc3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xbc3a));
        // 25 01A8
        gbc.setState(0xc0d3, 0x1aa1, 0x4150, 0xb8ec, 0x243b, 0x4afa, 0x0, 0x0);
        gbc.writeMem(0xc0d3, { 0x25 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x1aa1, gbc.sp());
        EXPECT(0xc0d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xc0d3));
        // 25 01A9
        gbc.setState(0x918d, 0xa501, 0x9bb0, 0x7b65, 0xb0a0, 0x4d18, 0x1, 0x1);
        gbc.writeMem(0x918d, { 0x25 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xa501, gbc.sp());
        EXPECT(0x918e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x918d));
        // 25 01AA
        gbc.setState(0xaf31, 0x1a97, 0x2ac0, 0x58d7, 0xe97a, 0x52b7, 0x0, 0x0);
        gbc.writeMem(0xaf31, { 0x25 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x1a97, gbc.sp());
        EXPECT(0xaf32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xaf31));
        // 25 01AB
        gbc.setState(0x135f, 0xf1d4, 0x6300, 0xe98e, 0xcdbd, 0xa64b, 0x1, 0x0);
        gbc.writeMem(0x135f, { 0x25 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xf1d4, gbc.sp());
        EXPECT(0x1360, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 01AC
        gbc.setState(0x68a9, 0x2eb0, 0xb3b0, 0x5387, 0xdb2c, 0x90e, 0x0, 0x1);
        gbc.writeMem(0x68a9, { 0x25 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x2eb0, gbc.sp());
        EXPECT(0x68aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 01AD
        gbc.setState(0x1796, 0xbaed, 0x27e0, 0x3dd8, 0xb16c, 0xbdd6, 0x0, 0x1);
        gbc.writeMem(0x1796, { 0x25 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xbaed, gbc.sp());
        EXPECT(0x1797, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 01AE
        gbc.setState(0xb971, 0xb53c, 0xc120, 0x1b8, 0x7d1b, 0xe17e, 0x1, 0x1);
        gbc.writeMem(0xb971, { 0x25 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xb53c, gbc.sp());
        EXPECT(0xb972, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xb971));
        // 25 01AF
        gbc.setState(0xd63a, 0x8b6d, 0x9110, 0x1f97, 0xf277, 0xdda4, 0x0, 0x1);
        gbc.writeMem(0xd63a, { 0x25 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x8b6d, gbc.sp());
        EXPECT(0xd63b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xd63a));
        // 25 01B0
        gbc.setState(0x3255, 0x78ba, 0xdb10, 0xcd, 0x55c2, 0x58d4, 0x0, 0x1);
        gbc.writeMem(0x3255, { 0x25 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x78ba, gbc.sp());
        EXPECT(0x3256, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 01B1
        gbc.setState(0x1d10, 0x7118, 0x4a10, 0xb98f, 0x286d, 0x82f2, 0x0, 0x1);
        gbc.writeMem(0x1d10, { 0x25 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x7118, gbc.sp());
        EXPECT(0x1d11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 01B2
        gbc.setState(0xa2b3, 0xf244, 0x9230, 0x4a50, 0xec3d, 0xed14, 0x1, 0x1);
        gbc.writeMem(0xa2b3, { 0x25 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xf244, gbc.sp());
        EXPECT(0xa2b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xa2b3));
        // 25 01B3
        gbc.setState(0xc7d0, 0xd1ff, 0xd380, 0x4213, 0x6e, 0x1780, 0x1, 0x0);
        gbc.writeMem(0xc7d0, { 0x25 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xd1ff, gbc.sp());
        EXPECT(0xc7d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xc7d0));
        // 25 01B4
        gbc.setState(0x1d61, 0xcef, 0x2a40, 0xde6c, 0xbe23, 0x277c, 0x1, 0x0);
        gbc.writeMem(0x1d61, { 0x25 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xcef, gbc.sp());
        EXPECT(0x1d62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 01B5
        gbc.setState(0x195d, 0xba4b, 0x6220, 0xa8c5, 0x750c, 0x9d81, 0x1, 0x1);
        gbc.writeMem(0x195d, { 0x25 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xba4b, gbc.sp());
        EXPECT(0x195e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 01B6
        gbc.setState(0x68e0, 0x603a, 0x6310, 0x6f18, 0x9339, 0xe5cb, 0x1, 0x0);
        gbc.writeMem(0x68e0, { 0x25 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x603a, gbc.sp());
        EXPECT(0x68e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 01B7
        gbc.setState(0x583c, 0x79a, 0xf490, 0xa0fa, 0x2325, 0x79da, 0x0, 0x1);
        gbc.writeMem(0x583c, { 0x25 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x79a, gbc.sp());
        EXPECT(0x583d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 01B8
        gbc.setState(0x209b, 0x7409, 0x9f40, 0xff8d, 0x4652, 0x9aa2, 0x1, 0x1);
        gbc.writeMem(0x209b, { 0x25 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x7409, gbc.sp());
        EXPECT(0x209c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 01B9
        gbc.setState(0xd811, 0x6d4, 0x7ab0, 0xeb89, 0x8274, 0xd5a1, 0x1, 0x0);
        gbc.writeMem(0xd811, { 0x25 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x6d4, gbc.sp());
        EXPECT(0xd812, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xd811));
        // 25 01BA
        gbc.setState(0xb367, 0x8251, 0x8d90, 0x43ed, 0x70ee, 0xe550, 0x1, 0x0);
        gbc.writeMem(0xb367, { 0x25 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x8251, gbc.sp());
        EXPECT(0xb368, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xb367));
        // 25 01BB
        gbc.setState(0x599b, 0x2ff7, 0x88d0, 0x111d, 0xd99, 0xd643, 0x0, 0x1);
        gbc.writeMem(0x599b, { 0x25 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x2ff7, gbc.sp());
        EXPECT(0x599c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 01BC
        gbc.setState(0xe879, 0xd6c4, 0x4750, 0xbe3a, 0x83c4, 0x5284, 0x1, 0x1);
        gbc.writeMem(0xe879, { 0x25 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xd6c4, gbc.sp());
        EXPECT(0xe87a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xe879));
        // 25 01BD
        gbc.setState(0xc0ab, 0xa241, 0x8a50, 0x7229, 0x2c60, 0xe3b5, 0x1, 0x0);
        gbc.writeMem(0xc0ab, { 0x25 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xa241, gbc.sp());
        EXPECT(0xc0ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xc0ab));
        // 25 01BE
        gbc.setState(0x8bcb, 0x9aa4, 0xe900, 0x8176, 0x518c, 0x7d3, 0x1, 0x1);
        gbc.writeMem(0x8bcb, { 0x25 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x9aa4, gbc.sp());
        EXPECT(0x8bcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x8bcb));
        // 25 01BF
        gbc.setState(0xa0ae, 0x67c3, 0xdd0, 0x9a9c, 0x993b, 0x6673, 0x0, 0x0);
        gbc.writeMem(0xa0ae, { 0x25 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x67c3, gbc.sp());
        EXPECT(0xa0af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xa0ae));
        // 25 01C0
        gbc.setState(0x9c3a, 0x3d5f, 0xcba0, 0xd11a, 0xbe19, 0xd0d5, 0x1, 0x1);
        gbc.writeMem(0x9c3a, { 0x25 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x3d5f, gbc.sp());
        EXPECT(0x9c3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x9c3a));
        // 25 01C1
        gbc.setState(0x493c, 0xa6a7, 0x4230, 0x68b, 0x7a04, 0xda90, 0x0, 0x0);
        gbc.writeMem(0x493c, { 0x25 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xa6a7, gbc.sp());
        EXPECT(0x493d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 01C2
        gbc.setState(0xb19d, 0x3fb4, 0x6040, 0xf296, 0x49c8, 0xeb3f, 0x0, 0x0);
        gbc.writeMem(0xb19d, { 0x25 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x3fb4, gbc.sp());
        EXPECT(0xb19e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xb19d));
        // 25 01C3
        gbc.setState(0x1e24, 0x87d3, 0xd910, 0x4aea, 0xf461, 0x5ee, 0x0, 0x0);
        gbc.writeMem(0x1e24, { 0x25 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x87d3, gbc.sp());
        EXPECT(0x1e25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 01C4
        gbc.setState(0xa93b, 0x94b2, 0x90, 0x9de, 0x30ef, 0x1e8c, 0x1, 0x1);
        gbc.writeMem(0xa93b, { 0x25 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x94b2, gbc.sp());
        EXPECT(0xa93c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xa93b));
        // 25 01C5
        gbc.setState(0xee0d, 0xb39b, 0x5d70, 0x32a3, 0xe66a, 0xe8f1, 0x1, 0x0);
        gbc.writeMem(0xee0d, { 0x25 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xb39b, gbc.sp());
        EXPECT(0xee0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xee0d));
        // 25 01C6
        gbc.setState(0x44f0, 0x434, 0x1420, 0xda13, 0x829d, 0x8ed9, 0x1, 0x0);
        gbc.writeMem(0x44f0, { 0x25 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x434, gbc.sp());
        EXPECT(0x44f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 01C7
        gbc.setState(0x5dfb, 0xf3ef, 0x91a0, 0xc027, 0x1ffd, 0x2e9, 0x0, 0x1);
        gbc.writeMem(0x5dfb, { 0x25 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xf3ef, gbc.sp());
        EXPECT(0x5dfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 01C8
        gbc.setState(0x9fdb, 0xc18e, 0xf660, 0x28f9, 0xda2f, 0xeca7, 0x1, 0x0);
        gbc.writeMem(0x9fdb, { 0x25 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xc18e, gbc.sp());
        EXPECT(0x9fdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x9fdb));
        // 25 01C9
        gbc.setState(0x96e7, 0x8565, 0xd090, 0xda36, 0xf5e5, 0x2270, 0x1, 0x1);
        gbc.writeMem(0x96e7, { 0x25 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x8565, gbc.sp());
        EXPECT(0x96e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x96e7));
        // 25 01CA
        gbc.setState(0x63ae, 0x5ef2, 0x63f0, 0xa586, 0x13c8, 0x1292, 0x0, 0x0);
        gbc.writeMem(0x63ae, { 0x25 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x5ef2, gbc.sp());
        EXPECT(0x63af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 01CB
        gbc.setState(0xe7cb, 0x6bdb, 0x4000, 0xca3d, 0x75f5, 0x4634, 0x0, 0x1);
        gbc.writeMem(0xe7cb, { 0x25 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x6bdb, gbc.sp());
        EXPECT(0xe7cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xe7cb));
        // 25 01CC
        gbc.setState(0xa722, 0x5d33, 0xfbf0, 0x7b0a, 0x6315, 0x1c53, 0x0, 0x1);
        gbc.writeMem(0xa722, { 0x25 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x5d33, gbc.sp());
        EXPECT(0xa723, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xa722));
        // 25 01CD
        gbc.setState(0xb4df, 0xcdba, 0x8d70, 0xd459, 0xcd62, 0x37fb, 0x1, 0x0);
        gbc.writeMem(0xb4df, { 0x25 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xcdba, gbc.sp());
        EXPECT(0xb4e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xb4df));
        // 25 01CE
        gbc.setState(0x37ca, 0xb27a, 0x3aa0, 0x1a76, 0x3de3, 0xd7ae, 0x0, 0x1);
        gbc.writeMem(0x37ca, { 0x25 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xb27a, gbc.sp());
        EXPECT(0x37cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 01CF
        gbc.setState(0x1c55, 0xda2c, 0x14c0, 0x9bb1, 0xa07a, 0x3f68, 0x0, 0x0);
        gbc.writeMem(0x1c55, { 0x25 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xda2c, gbc.sp());
        EXPECT(0x1c56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 01D0
        gbc.setState(0xe43f, 0xcb2d, 0x4e40, 0xd2ab, 0xeb43, 0x2271, 0x0, 0x1);
        gbc.writeMem(0xe43f, { 0x25 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xcb2d, gbc.sp());
        EXPECT(0xe440, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xe43f));
        // 25 01D1
        gbc.setState(0x5aa2, 0xe4df, 0xed40, 0xca5c, 0x74d8, 0xfc4c, 0x1, 0x0);
        gbc.writeMem(0x5aa2, { 0x25 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xe4df, gbc.sp());
        EXPECT(0x5aa3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 01D2
        gbc.setState(0x5bae, 0xc0e, 0x39f0, 0x41fd, 0x98e8, 0x313, 0x1, 0x0);
        gbc.writeMem(0x5bae, { 0x25 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xc0e, gbc.sp());
        EXPECT(0x5baf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 01D3
        gbc.setState(0xc7d2, 0x692f, 0xd860, 0xda87, 0x9dcc, 0xe7c1, 0x1, 0x0);
        gbc.writeMem(0xc7d2, { 0x25 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x692f, gbc.sp());
        EXPECT(0xc7d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xc7d2));
        // 25 01D4
        gbc.setState(0x2ea5, 0x51be, 0xac60, 0xc061, 0x9418, 0xa6fc, 0x0, 0x0);
        gbc.writeMem(0x2ea5, { 0x25 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x51be, gbc.sp());
        EXPECT(0x2ea6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 01D5
        gbc.setState(0xb73e, 0xdc3c, 0x78b0, 0x584e, 0x3245, 0xfdf9, 0x0, 0x1);
        gbc.writeMem(0xb73e, { 0x25 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xdc3c, gbc.sp());
        EXPECT(0xb73f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xb73e));
        // 25 01D7
        gbc.setState(0x513a, 0x5063, 0xac0, 0x2602, 0x9b78, 0x543e, 0x1, 0x0);
        gbc.writeMem(0x513a, { 0x25 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x5063, gbc.sp());
        EXPECT(0x513b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 01D9
        gbc.setState(0x3127, 0xb577, 0xa4a0, 0x66e9, 0x2f85, 0x8c6, 0x0, 0x0);
        gbc.writeMem(0x3127, { 0x25 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xb577, gbc.sp());
        EXPECT(0x3128, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 01DA
        gbc.setState(0x13ea, 0x7117, 0x96a0, 0x4e16, 0x973, 0x4882, 0x1, 0x0);
        gbc.writeMem(0x13ea, { 0x25 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x7117, gbc.sp());
        EXPECT(0x13eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 01DB
        gbc.setState(0x6060, 0xf9e5, 0x38d0, 0xacc4, 0x7c1b, 0x8968, 0x0, 0x1);
        gbc.writeMem(0x6060, { 0x25 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xf9e5, gbc.sp());
        EXPECT(0x6061, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 01DC
        gbc.setState(0x6244, 0x1a8c, 0x910, 0x2ef5, 0xb58a, 0xcb9e, 0x0, 0x0);
        gbc.writeMem(0x6244, { 0x25 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x1a8c, gbc.sp());
        EXPECT(0x6245, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 01DD
        gbc.setState(0x36a0, 0x1690, 0x56b0, 0xda1f, 0xb22e, 0x88dc, 0x0, 0x0);
        gbc.writeMem(0x36a0, { 0x25 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x1690, gbc.sp());
        EXPECT(0x36a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 01DE
        gbc.setState(0xa07f, 0xdb52, 0xa830, 0x3fa, 0xbc1, 0x9cc6, 0x1, 0x0);
        gbc.writeMem(0xa07f, { 0x25 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xdb52, gbc.sp());
        EXPECT(0xa080, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xa07f));
        // 25 01DF
        gbc.setState(0xc38, 0x88d7, 0xd150, 0xdd10, 0x3579, 0xd822, 0x1, 0x1);
        gbc.writeMem(0xc38, { 0x25 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x88d7, gbc.sp());
        EXPECT(0xc39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 01E0
        gbc.setState(0xc21a, 0x806c, 0x55a0, 0x9388, 0x280e, 0x59b, 0x1, 0x1);
        gbc.writeMem(0xc21a, { 0x25 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x806c, gbc.sp());
        EXPECT(0xc21b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xc21a));
        // 25 01E1
        gbc.setState(0x86f9, 0x3035, 0x6000, 0x6721, 0x110b, 0x575e, 0x1, 0x0);
        gbc.writeMem(0x86f9, { 0x25 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x3035, gbc.sp());
        EXPECT(0x86fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x86f9));
        // 25 01E2
        gbc.setState(0xda59, 0xf7f2, 0xbb60, 0x22d8, 0xe8d4, 0xa747, 0x1, 0x1);
        gbc.writeMem(0xda59, { 0x25 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xf7f2, gbc.sp());
        EXPECT(0xda5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xda59));
        // 25 01E3
        gbc.setState(0xe415, 0x8f50, 0x7c50, 0xdfe6, 0x91a9, 0xc1c3, 0x0, 0x1);
        gbc.writeMem(0xe415, { 0x25 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x8f50, gbc.sp());
        EXPECT(0xe416, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xe415));
        // 25 01E4
        gbc.setState(0xe6ec, 0x8313, 0xd260, 0x6e54, 0x78c1, 0xace2, 0x1, 0x0);
        gbc.writeMem(0xe6ec, { 0x25 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x8313, gbc.sp());
        EXPECT(0xe6ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xe6ec));
        // 25 01E5
        gbc.setState(0x8b94, 0x2d5a, 0xedf0, 0x3de9, 0x2e16, 0xf617, 0x0, 0x0);
        gbc.writeMem(0x8b94, { 0x25 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x2d5a, gbc.sp());
        EXPECT(0x8b95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x8b94));
        // 25 01E6
        gbc.setState(0xd8f3, 0xc413, 0x6c10, 0x6aea, 0xee8f, 0xa123, 0x0, 0x0);
        gbc.writeMem(0xd8f3, { 0x25 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xc413, gbc.sp());
        EXPECT(0xd8f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xd8f3));
        // 25 01E7
        gbc.setState(0xbc9, 0x67f4, 0x7c20, 0xdd8a, 0xf1a0, 0x1cc0, 0x0, 0x1);
        gbc.writeMem(0xbc9, { 0x25 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x67f4, gbc.sp());
        EXPECT(0xbca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 01E8
        gbc.setState(0x1af3, 0xf27e, 0xb6d0, 0xc3bf, 0xcd91, 0x1bb6, 0x1, 0x1);
        gbc.writeMem(0x1af3, { 0x25 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xf27e, gbc.sp());
        EXPECT(0x1af4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 01E9
        gbc.setState(0x575a, 0x8d2d, 0xd380, 0x413f, 0x5a87, 0xc8c, 0x0, 0x0);
        gbc.writeMem(0x575a, { 0x25 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x8d2d, gbc.sp());
        EXPECT(0x575b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 01EA
        gbc.setState(0x77bd, 0xbdd3, 0xcd40, 0xb8be, 0x381a, 0xef62, 0x0, 0x1);
        gbc.writeMem(0x77bd, { 0x25 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xbdd3, gbc.sp());
        EXPECT(0x77be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 01EB
        gbc.setState(0xcd31, 0x28bc, 0xea80, 0xd426, 0x469b, 0x160d, 0x0, 0x1);
        gbc.writeMem(0xcd31, { 0x25 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x28bc, gbc.sp());
        EXPECT(0xcd32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xcd31));
        // 25 01EC
        gbc.setState(0x9037, 0x1521, 0xfb40, 0x76cf, 0x74f5, 0x99ed, 0x0, 0x1);
        gbc.writeMem(0x9037, { 0x25 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x1521, gbc.sp());
        EXPECT(0x9038, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x9037));
        // 25 01ED
        gbc.setState(0x71b4, 0x2f74, 0xa710, 0x5df1, 0x1752, 0xca92, 0x1, 0x1);
        gbc.writeMem(0x71b4, { 0x25 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x2f74, gbc.sp());
        EXPECT(0x71b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 01EE
        gbc.setState(0x7a3a, 0xa023, 0xe450, 0xd9ab, 0x8c63, 0x7cf0, 0x0, 0x1);
        gbc.writeMem(0x7a3a, { 0x25 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xa023, gbc.sp());
        EXPECT(0x7a3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 01EF
        gbc.setState(0x90f8, 0xc658, 0xd2c0, 0x1447, 0xebcb, 0x9524, 0x0, 0x0);
        gbc.writeMem(0x90f8, { 0x25 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xc658, gbc.sp());
        EXPECT(0x90f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x90f8));
        // 25 01F0
        gbc.setState(0x445d, 0x8d12, 0x3400, 0x800a, 0xd36e, 0x53c0, 0x1, 0x0);
        gbc.writeMem(0x445d, { 0x25 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x8d12, gbc.sp());
        EXPECT(0x445e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 01F1
        gbc.setState(0xe10b, 0xa547, 0x3220, 0x8038, 0x34dc, 0x2ffb, 0x1, 0x0);
        gbc.writeMem(0xe10b, { 0x25 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xa547, gbc.sp());
        EXPECT(0xe10c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xe10b));
        // 25 01F2
        gbc.setState(0xd8dd, 0xed56, 0x7b00, 0x2d33, 0x8485, 0x6abe, 0x0, 0x0);
        gbc.writeMem(0xd8dd, { 0x25 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xed56, gbc.sp());
        EXPECT(0xd8de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xd8dd));
        // 25 01F3
        gbc.setState(0x9086, 0xfbbb, 0x6200, 0xb1c4, 0xf10c, 0x4542, 0x1, 0x0);
        gbc.writeMem(0x9086, { 0x25 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xfbbb, gbc.sp());
        EXPECT(0x9087, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x9086));
        // 25 01F4
        gbc.setState(0x7532, 0x9ddf, 0xbed0, 0xe6b7, 0x97f3, 0x67e6, 0x0, 0x1);
        gbc.writeMem(0x7532, { 0x25 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x9ddf, gbc.sp());
        EXPECT(0x7533, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 01F5
        gbc.setState(0x7c20, 0x1154, 0x3f20, 0xb729, 0xabee, 0x3474, 0x1, 0x1);
        gbc.writeMem(0x7c20, { 0x25 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x1154, gbc.sp());
        EXPECT(0x7c21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 01F6
        gbc.setState(0xe351, 0xd201, 0xfdf0, 0xc5b9, 0x8ed3, 0x5634, 0x1, 0x1);
        gbc.writeMem(0xe351, { 0x25 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xd201, gbc.sp());
        EXPECT(0xe352, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xe351));
        // 25 01F7
        gbc.setState(0xd31e, 0x73d0, 0xab20, 0xddf0, 0x5281, 0x8608, 0x1, 0x0);
        gbc.writeMem(0xd31e, { 0x25 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x73d0, gbc.sp());
        EXPECT(0xd31f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xd31e));
        // 25 01F8
        gbc.setState(0xd78e, 0x2fa8, 0x4a40, 0x5e52, 0x9730, 0x834b, 0x0, 0x1);
        gbc.writeMem(0xd78e, { 0x25 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x2fa8, gbc.sp());
        EXPECT(0xd78f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xd78e));
        // 25 01F9
        gbc.setState(0x6473, 0x3598, 0x6d80, 0x8b49, 0x81b9, 0x2bb0, 0x1, 0x0);
        gbc.writeMem(0x6473, { 0x25 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x3598, gbc.sp());
        EXPECT(0x6474, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 01FA
        gbc.setState(0xe94b, 0x35da, 0x3160, 0xfdfb, 0xdb29, 0x9596, 0x0, 0x1);
        gbc.writeMem(0xe94b, { 0x25 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x35da, gbc.sp());
        EXPECT(0xe94c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xe94b));
        // 25 01FB
        gbc.setState(0x83d, 0x5d84, 0x9780, 0x1e3a, 0x427f, 0x5b4a, 0x1, 0x1);
        gbc.writeMem(0x83d, { 0x25 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x5d84, gbc.sp());
        EXPECT(0x83e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 01FD
        gbc.setState(0x6a2d, 0xd3e3, 0x77c0, 0x76c8, 0x4c1d, 0xc2df, 0x0, 0x1);
        gbc.writeMem(0x6a2d, { 0x25 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xd3e3, gbc.sp());
        EXPECT(0x6a2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 01FE
        gbc.setState(0xcf78, 0x440d, 0x5ab0, 0xb2fe, 0x7501, 0x16e, 0x0, 0x0);
        gbc.writeMem(0xcf78, { 0x25 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x440d, gbc.sp());
        EXPECT(0xcf79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xcf78));
        // 25 01FF
        gbc.setState(0x9e8a, 0xfcfe, 0x6340, 0x861, 0x98a6, 0xc192, 0x1, 0x1);
        gbc.writeMem(0x9e8a, { 0x25 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xfcfe, gbc.sp());
        EXPECT(0x9e8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x9e8a));
        // 25 0200
        gbc.setState(0x875b, 0xb4f8, 0x8a30, 0x5928, 0xe48a, 0xa2de, 0x0, 0x1);
        gbc.writeMem(0x875b, { 0x25 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xb4f8, gbc.sp());
        EXPECT(0x875c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x875b));
        // 25 0201
        gbc.setState(0x9883, 0x1854, 0x50b0, 0x993, 0x99b8, 0x338f, 0x1, 0x0);
        gbc.writeMem(0x9883, { 0x25 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x1854, gbc.sp());
        EXPECT(0x9884, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x9883));
        // 25 0202
        gbc.setState(0x8ef1, 0x6cf2, 0x35f0, 0x23de, 0x9f20, 0x5676, 0x1, 0x0);
        gbc.writeMem(0x8ef1, { 0x25 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x6cf2, gbc.sp());
        EXPECT(0x8ef2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x8ef1));
        // 25 0203
        gbc.setState(0xc3f6, 0xc535, 0xe4f0, 0x4a21, 0x15ae, 0x4f5b, 0x0, 0x0);
        gbc.writeMem(0xc3f6, { 0x25 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xc535, gbc.sp());
        EXPECT(0xc3f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xc3f6));
        // 25 0204
        gbc.setState(0xcee3, 0x3005, 0x5970, 0x53ef, 0x5cde, 0x68a9, 0x0, 0x0);
        gbc.writeMem(0xcee3, { 0x25 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x3005, gbc.sp());
        EXPECT(0xcee4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xcee3));
        // 25 0205
        gbc.setState(0xcced, 0xa86d, 0x7600, 0x52ed, 0x7be1, 0xb198, 0x1, 0x0);
        gbc.writeMem(0xcced, { 0x25 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xa86d, gbc.sp());
        EXPECT(0xccee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xcced));
        // 25 0206
        gbc.setState(0x352c, 0x8225, 0x60c0, 0x9abc, 0x36cf, 0x4aae, 0x0, 0x1);
        gbc.writeMem(0x352c, { 0x25 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x8225, gbc.sp());
        EXPECT(0x352d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0208
        gbc.setState(0x45b, 0xe0cb, 0xd090, 0x3f92, 0xf255, 0x2cf2, 0x1, 0x1);
        gbc.writeMem(0x45b, { 0x25 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xe0cb, gbc.sp());
        EXPECT(0x45c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0209
        gbc.setState(0xd22f, 0x9f79, 0x2a30, 0x907b, 0xe9, 0x5219, 0x0, 0x1);
        gbc.writeMem(0xd22f, { 0x25 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x9f79, gbc.sp());
        EXPECT(0xd230, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xd22f));
        // 25 020A
        gbc.setState(0x3055, 0xe55c, 0xc1f0, 0x9645, 0x2004, 0x1d93, 0x0, 0x1);
        gbc.writeMem(0x3055, { 0x25 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xe55c, gbc.sp());
        EXPECT(0x3056, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 020B
        gbc.setState(0x86d8, 0xaed, 0xcf00, 0x19a9, 0xfa3b, 0x630f, 0x0, 0x1);
        gbc.writeMem(0x86d8, { 0x25 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xaed, gbc.sp());
        EXPECT(0x86d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x86d8));
        // 25 020C
        gbc.setState(0xc9f4, 0xb699, 0x7720, 0x8c19, 0xeab8, 0x7bf2, 0x1, 0x0);
        gbc.writeMem(0xc9f4, { 0x25 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xb699, gbc.sp());
        EXPECT(0xc9f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xc9f4));
        // 25 020D
        gbc.setState(0x64c4, 0xb2bd, 0x74f0, 0xab44, 0xc47b, 0x251b, 0x0, 0x1);
        gbc.writeMem(0x64c4, { 0x25 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xb2bd, gbc.sp());
        EXPECT(0x64c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 020E
        gbc.setState(0x92f5, 0xe250, 0x5910, 0xab6d, 0x5831, 0x9aa1, 0x0, 0x0);
        gbc.writeMem(0x92f5, { 0x25 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xe250, gbc.sp());
        EXPECT(0x92f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x92f5));
        // 25 020F
        gbc.setState(0x409b, 0xd19a, 0x9930, 0x9890, 0x351d, 0x8147, 0x0, 0x1);
        gbc.writeMem(0x409b, { 0x25 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xd19a, gbc.sp());
        EXPECT(0x409c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0210
        gbc.setState(0x9901, 0x5c26, 0x79c0, 0xadb3, 0x244, 0x7b94, 0x0, 0x0);
        gbc.writeMem(0x9901, { 0x25 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x5c26, gbc.sp());
        EXPECT(0x9902, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x9901));
        // 25 0211
        gbc.setState(0x8a5b, 0xf724, 0xd090, 0xcbc2, 0xcb85, 0x6316, 0x0, 0x1);
        gbc.writeMem(0x8a5b, { 0x25 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xf724, gbc.sp());
        EXPECT(0x8a5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x8a5b));
        // 25 0212
        gbc.setState(0x21d, 0xc15c, 0xd7e0, 0x21b7, 0x1ce2, 0xf06f, 0x1, 0x0);
        gbc.writeMem(0x21d, { 0x25 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xc15c, gbc.sp());
        EXPECT(0x21e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0213
        gbc.setState(0x382, 0xeb4e, 0x33e0, 0xf4d4, 0x8542, 0x975e, 0x1, 0x0);
        gbc.writeMem(0x382, { 0x25 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xeb4e, gbc.sp());
        EXPECT(0x383, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0214
        gbc.setState(0x7b2b, 0x3c7b, 0x8e60, 0x6c7b, 0x783d, 0xa5a3, 0x0, 0x0);
        gbc.writeMem(0x7b2b, { 0x25 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x3c7b, gbc.sp());
        EXPECT(0x7b2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0215
        gbc.setState(0x4a0f, 0xbf7d, 0xbc0, 0xd97e, 0xcc64, 0x514b, 0x1, 0x0);
        gbc.writeMem(0x4a0f, { 0x25 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xbf7d, gbc.sp());
        EXPECT(0x4a10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0216
        gbc.setState(0xb9f8, 0x1aae, 0x50f0, 0xf379, 0x2f75, 0x1fc4, 0x0, 0x1);
        gbc.writeMem(0xb9f8, { 0x25 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x1aae, gbc.sp());
        EXPECT(0xb9f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xb9f8));
        // 25 0217
        gbc.setState(0x3de0, 0x6e1b, 0x2ad0, 0x4f61, 0x2723, 0x882f, 0x1, 0x0);
        gbc.writeMem(0x3de0, { 0x25 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x6e1b, gbc.sp());
        EXPECT(0x3de1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0218
        gbc.setState(0x87d6, 0x73ec, 0xe740, 0x3a3, 0x3a89, 0x2de7, 0x0, 0x1);
        gbc.writeMem(0x87d6, { 0x25 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x73ec, gbc.sp());
        EXPECT(0x87d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x87d6));
        // 25 0219
        gbc.setState(0xe7e, 0xac54, 0xdbb0, 0xef25, 0xb3e0, 0x75a, 0x1, 0x1);
        gbc.writeMem(0xe7e, { 0x25 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xac54, gbc.sp());
        EXPECT(0xe7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 021A
        gbc.setState(0xad17, 0x2c99, 0x2930, 0x3e37, 0x654b, 0x1c13, 0x1, 0x1);
        gbc.writeMem(0xad17, { 0x25 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x2c99, gbc.sp());
        EXPECT(0xad18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xad17));
        // 25 021B
        gbc.setState(0x73ad, 0x5db3, 0x53e0, 0xc513, 0xf4d2, 0x822e, 0x1, 0x1);
        gbc.writeMem(0x73ad, { 0x25 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x5db3, gbc.sp());
        EXPECT(0x73ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 021C
        gbc.setState(0xc83d, 0xd958, 0xe560, 0x1423, 0x9706, 0x1579, 0x1, 0x0);
        gbc.writeMem(0xc83d, { 0x25 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xd958, gbc.sp());
        EXPECT(0xc83e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xc83d));
        // 25 021D
        gbc.setState(0xdf7a, 0xf990, 0xf180, 0x8b57, 0x9739, 0x404d, 0x0, 0x0);
        gbc.writeMem(0xdf7a, { 0x25 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xf990, gbc.sp());
        EXPECT(0xdf7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xdf7a));
        // 25 021E
        gbc.setState(0xb3e3, 0x8e71, 0x7830, 0x5f0a, 0xca9b, 0x3555, 0x1, 0x1);
        gbc.writeMem(0xb3e3, { 0x25 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x8e71, gbc.sp());
        EXPECT(0xb3e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xb3e3));
        // 25 021F
        gbc.setState(0x4a16, 0xae8c, 0xf3f0, 0xb146, 0x6782, 0xca98, 0x1, 0x0);
        gbc.writeMem(0x4a16, { 0x25 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xae8c, gbc.sp());
        EXPECT(0x4a17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0221
        gbc.setState(0x9cca, 0xf66c, 0x4770, 0xd73d, 0xda2a, 0x833f, 0x1, 0x1);
        gbc.writeMem(0x9cca, { 0x25 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xf66c, gbc.sp());
        EXPECT(0x9ccb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x9cca));
        // 25 0222
        gbc.setState(0x5332, 0xfcd7, 0x50a0, 0xc3d, 0x65aa, 0x18d0, 0x1, 0x1);
        gbc.writeMem(0x5332, { 0x25 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xfcd7, gbc.sp());
        EXPECT(0x5333, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0223
        gbc.setState(0xadae, 0x2e8, 0xb620, 0xdc0c, 0xc19e, 0x324e, 0x0, 0x1);
        gbc.writeMem(0xadae, { 0x25 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x2e8, gbc.sp());
        EXPECT(0xadaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xadae));
        // 25 0224
        gbc.setState(0x21c1, 0xe12e, 0x5210, 0x260a, 0x947c, 0x64c8, 0x1, 0x1);
        gbc.writeMem(0x21c1, { 0x25 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xe12e, gbc.sp());
        EXPECT(0x21c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0225
        gbc.setState(0x1b5c, 0x3c10, 0x3020, 0x6e24, 0x7d7, 0xc5f3, 0x0, 0x1);
        gbc.writeMem(0x1b5c, { 0x25 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x3c10, gbc.sp());
        EXPECT(0x1b5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0226
        gbc.setState(0x1893, 0x5cad, 0x8930, 0xbc92, 0x483f, 0x29a4, 0x0, 0x0);
        gbc.writeMem(0x1893, { 0x25 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x5cad, gbc.sp());
        EXPECT(0x1894, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0228
        gbc.setState(0x9d54, 0xf979, 0x3b30, 0xd395, 0xe1c4, 0xafa7, 0x1, 0x0);
        gbc.writeMem(0x9d54, { 0x25 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xf979, gbc.sp());
        EXPECT(0x9d55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x9d54));
        // 25 0229
        gbc.setState(0xd636, 0xe29b, 0x1cd0, 0xee5e, 0xdf65, 0xb034, 0x1, 0x1);
        gbc.writeMem(0xd636, { 0x25 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xe29b, gbc.sp());
        EXPECT(0xd637, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xd636));
        // 25 022A
        gbc.setState(0x4041, 0x3990, 0x15e0, 0xcfac, 0xc35, 0x44c1, 0x0, 0x0);
        gbc.writeMem(0x4041, { 0x25 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x3990, gbc.sp());
        EXPECT(0x4042, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 022B
        gbc.setState(0x1971, 0x50d6, 0xf110, 0xdd06, 0xadc0, 0xbf25, 0x1, 0x0);
        gbc.writeMem(0x1971, { 0x25 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x50d6, gbc.sp());
        EXPECT(0x1972, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 022C
        gbc.setState(0xc53e, 0xaf89, 0xe450, 0xbde, 0x5b84, 0x78f6, 0x0, 0x1);
        gbc.writeMem(0xc53e, { 0x25 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xaf89, gbc.sp());
        EXPECT(0xc53f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xc53e));
        // 25 022D
        gbc.setState(0x4b79, 0xb909, 0xe00, 0xc63, 0x3e79, 0x5df, 0x1, 0x0);
        gbc.writeMem(0x4b79, { 0x25 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xb909, gbc.sp());
        EXPECT(0x4b7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 022E
        gbc.setState(0x152e, 0x5f69, 0xc0f0, 0x5497, 0xe804, 0x1e0c, 0x1, 0x0);
        gbc.writeMem(0x152e, { 0x25 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x5f69, gbc.sp());
        EXPECT(0x152f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 022F
        gbc.setState(0x1c0b, 0x62fa, 0x41d0, 0x3515, 0x16e3, 0x1e26, 0x0, 0x0);
        gbc.writeMem(0x1c0b, { 0x25 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x62fa, gbc.sp());
        EXPECT(0x1c0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0230
        gbc.setState(0x4d73, 0xdd6a, 0x240, 0x6af8, 0x6ce1, 0xcd24, 0x1, 0x0);
        gbc.writeMem(0x4d73, { 0x25 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xdd6a, gbc.sp());
        EXPECT(0x4d74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0231
        gbc.setState(0x4116, 0xf031, 0x7a20, 0x6dc0, 0x3e3d, 0x6a95, 0x0, 0x1);
        gbc.writeMem(0x4116, { 0x25 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xf031, gbc.sp());
        EXPECT(0x4117, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0232
        gbc.setState(0x31e6, 0x7854, 0xfe80, 0x1b31, 0x1a7e, 0x8b4b, 0x1, 0x0);
        gbc.writeMem(0x31e6, { 0x25 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x7854, gbc.sp());
        EXPECT(0x31e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0233
        gbc.setState(0xa9ef, 0x1bdc, 0x6e0, 0xf39, 0x90ad, 0x1e8e, 0x0, 0x0);
        gbc.writeMem(0xa9ef, { 0x25 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x1bdc, gbc.sp());
        EXPECT(0xa9f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xa9ef));
        // 25 0234
        gbc.setState(0xdcf2, 0x5049, 0xb7b0, 0x37f5, 0x389f, 0xf6d1, 0x1, 0x1);
        gbc.writeMem(0xdcf2, { 0x25 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x5049, gbc.sp());
        EXPECT(0xdcf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xdcf2));
        // 25 0235
        gbc.setState(0xa647, 0xfa5e, 0x88f0, 0x3a9f, 0x90b6, 0xa34, 0x0, 0x0);
        gbc.writeMem(0xa647, { 0x25 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xfa5e, gbc.sp());
        EXPECT(0xa648, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xa647));
        // 25 0236
        gbc.setState(0x628f, 0xee, 0x1900, 0x44d2, 0xa3c2, 0xe7b, 0x1, 0x0);
        gbc.writeMem(0x628f, { 0x25 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xee, gbc.sp());
        EXPECT(0x6290, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0238
        gbc.setState(0x3163, 0x8eff, 0x7ab0, 0xfd63, 0x8242, 0x1a4d, 0x0, 0x1);
        gbc.writeMem(0x3163, { 0x25 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x8eff, gbc.sp());
        EXPECT(0x3164, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0239
        gbc.setState(0x8224, 0xac0a, 0x7940, 0xe742, 0x1064, 0xd90d, 0x1, 0x1);
        gbc.writeMem(0x8224, { 0x25 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xac0a, gbc.sp());
        EXPECT(0x8225, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x8224));
        // 25 023A
        gbc.setState(0xc1f3, 0xaee3, 0x7ca0, 0x1c89, 0x37a4, 0x1fe3, 0x1, 0x0);
        gbc.writeMem(0xc1f3, { 0x25 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xaee3, gbc.sp());
        EXPECT(0xc1f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xc1f3));
        // 25 023B
        gbc.setState(0x79af, 0xddc3, 0xe120, 0xbdc0, 0xec45, 0x66b0, 0x1, 0x1);
        gbc.writeMem(0x79af, { 0x25 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xddc3, gbc.sp());
        EXPECT(0x79b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 023C
        gbc.setState(0xbaae, 0x497, 0x4200, 0x474, 0x27d0, 0x422, 0x1, 0x0);
        gbc.writeMem(0xbaae, { 0x25 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x497, gbc.sp());
        EXPECT(0xbaaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xbaae));
        // 25 023D
        gbc.setState(0xc223, 0xf994, 0xd8a0, 0x268, 0x464e, 0x7aaa, 0x0, 0x1);
        gbc.writeMem(0xc223, { 0x25 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xf994, gbc.sp());
        EXPECT(0xc224, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xc223));
        // 25 023F
        gbc.setState(0x7ba6, 0x6ebd, 0x6600, 0xc21c, 0xcce6, 0x436a, 0x1, 0x1);
        gbc.writeMem(0x7ba6, { 0x25 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x6ebd, gbc.sp());
        EXPECT(0x7ba7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0240
        gbc.setState(0x553d, 0xbfa7, 0x18b0, 0x30b0, 0x9495, 0x25ea, 0x1, 0x1);
        gbc.writeMem(0x553d, { 0x25 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xbfa7, gbc.sp());
        EXPECT(0x553e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0241
        gbc.setState(0x1f12, 0xd7b9, 0x4020, 0x8e33, 0x6b5d, 0x4f47, 0x0, 0x0);
        gbc.writeMem(0x1f12, { 0x25 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xd7b9, gbc.sp());
        EXPECT(0x1f13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0242
        gbc.setState(0x7823, 0xfda6, 0x2110, 0xfcce, 0x5b60, 0x147b, 0x0, 0x0);
        gbc.writeMem(0x7823, { 0x25 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xfda6, gbc.sp());
        EXPECT(0x7824, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0243
        gbc.setState(0x92c5, 0x442d, 0x9ef0, 0x879c, 0x8c9, 0xe5b2, 0x0, 0x1);
        gbc.writeMem(0x92c5, { 0x25 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x442d, gbc.sp());
        EXPECT(0x92c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x92c5));
        // 25 0244
        gbc.setState(0x7c85, 0xb330, 0x8f50, 0xdf61, 0xdd20, 0x362, 0x1, 0x0);
        gbc.writeMem(0x7c85, { 0x25 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xb330, gbc.sp());
        EXPECT(0x7c86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0245
        gbc.setState(0x43eb, 0x4bdb, 0x4a80, 0x389f, 0xb5e3, 0x7503, 0x0, 0x0);
        gbc.writeMem(0x43eb, { 0x25 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x4bdb, gbc.sp());
        EXPECT(0x43ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0246
        gbc.setState(0xd6d0, 0xf862, 0x4ce0, 0x8ff0, 0x3c5, 0x86be, 0x1, 0x1);
        gbc.writeMem(0xd6d0, { 0x25 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xf862, gbc.sp());
        EXPECT(0xd6d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xd6d0));
        // 25 0247
        gbc.setState(0xa121, 0x547b, 0x18f0, 0xee4a, 0x5b80, 0x2dc0, 0x1, 0x1);
        gbc.writeMem(0xa121, { 0x25 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x547b, gbc.sp());
        EXPECT(0xa122, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xa121));
        // 25 0248
        gbc.setState(0x6e9f, 0x285, 0xcf0, 0x449f, 0xa576, 0x6d77, 0x0, 0x0);
        gbc.writeMem(0x6e9f, { 0x25 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x285, gbc.sp());
        EXPECT(0x6ea0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0249
        gbc.setState(0xd542, 0x46f1, 0x1020, 0x6074, 0xbe7b, 0xdf5c, 0x1, 0x0);
        gbc.writeMem(0xd542, { 0x25 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x46f1, gbc.sp());
        EXPECT(0xd543, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xd542));
        // 25 024A
        gbc.setState(0x1b44, 0x6787, 0xf30, 0x8cf, 0x1b6, 0xe499, 0x0, 0x1);
        gbc.writeMem(0x1b44, { 0x25 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x6787, gbc.sp());
        EXPECT(0x1b45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 024B
        gbc.setState(0x8194, 0x2a1, 0xf830, 0x8408, 0x6bf7, 0x37f1, 0x0, 0x1);
        gbc.writeMem(0x8194, { 0x25 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x2a1, gbc.sp());
        EXPECT(0x8195, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x8194));
        // 25 024C
        gbc.setState(0x692b, 0x7dca, 0x99a0, 0x1127, 0xd4b1, 0xa6c0, 0x0, 0x1);
        gbc.writeMem(0x692b, { 0x25 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x7dca, gbc.sp());
        EXPECT(0x692c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 024D
        gbc.setState(0x662e, 0x58a3, 0x44f0, 0xe057, 0x20b5, 0x7273, 0x0, 0x0);
        gbc.writeMem(0x662e, { 0x25 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x58a3, gbc.sp());
        EXPECT(0x662f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 024E
        gbc.setState(0x60d0, 0x699f, 0x9e70, 0x8d05, 0xace1, 0x1633, 0x0, 0x0);
        gbc.writeMem(0x60d0, { 0x25 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x699f, gbc.sp());
        EXPECT(0x60d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 024F
        gbc.setState(0x4d3c, 0x5a34, 0x5980, 0xc330, 0x632c, 0xe17d, 0x1, 0x1);
        gbc.writeMem(0x4d3c, { 0x25 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x5a34, gbc.sp());
        EXPECT(0x4d3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0250
        gbc.setState(0x3fd5, 0xd817, 0xd5c0, 0x273f, 0x4495, 0x6c5c, 0x1, 0x1);
        gbc.writeMem(0x3fd5, { 0x25 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xd817, gbc.sp());
        EXPECT(0x3fd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0251
        gbc.setState(0x394f, 0xa305, 0x6460, 0x864a, 0xf16, 0x6031, 0x0, 0x0);
        gbc.writeMem(0x394f, { 0x25 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xa305, gbc.sp());
        EXPECT(0x3950, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0252
        gbc.setState(0x560b, 0xf07d, 0x6850, 0xebbc, 0x557d, 0x762e, 0x1, 0x0);
        gbc.writeMem(0x560b, { 0x25 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xf07d, gbc.sp());
        EXPECT(0x560c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0253
        gbc.setState(0xe09c, 0xcfc, 0x21c0, 0xd883, 0x2bcd, 0xdb84, 0x0, 0x1);
        gbc.writeMem(0xe09c, { 0x25 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xcfc, gbc.sp());
        EXPECT(0xe09d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xe09c));
        // 25 0254
        gbc.setState(0xcc02, 0xe845, 0x380, 0x8704, 0xecc7, 0x56dd, 0x0, 0x1);
        gbc.writeMem(0xcc02, { 0x25 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xe845, gbc.sp());
        EXPECT(0xcc03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xcc02));
        // 25 0255
        gbc.setState(0xbd8c, 0xe6ee, 0x12e0, 0x8988, 0xbbf0, 0x8705, 0x1, 0x0);
        gbc.writeMem(0xbd8c, { 0x25 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xe6ee, gbc.sp());
        EXPECT(0xbd8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xbd8c));
        // 25 0256
        gbc.setState(0xd421, 0xeefb, 0x72a0, 0xdfd6, 0xa874, 0xbcd4, 0x0, 0x1);
        gbc.writeMem(0xd421, { 0x25 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xeefb, gbc.sp());
        EXPECT(0xd422, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xd421));
        // 25 0257
        gbc.setState(0xc978, 0x5f93, 0x5830, 0x91c6, 0xbb35, 0x814b, 0x0, 0x0);
        gbc.writeMem(0xc978, { 0x25 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x5f93, gbc.sp());
        EXPECT(0xc979, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xc978));
        // 25 0258
        gbc.setState(0x8a49, 0x1012, 0xcec0, 0xda6c, 0x42ec, 0x252c, 0x1, 0x0);
        gbc.writeMem(0x8a49, { 0x25 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x1012, gbc.sp());
        EXPECT(0x8a4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x8a49));
        // 25 0259
        gbc.setState(0xceb2, 0xed3b, 0x9560, 0xc9f0, 0x4152, 0xa8f8, 0x0, 0x1);
        gbc.writeMem(0xceb2, { 0x25 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xed3b, gbc.sp());
        EXPECT(0xceb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xceb2));
        // 25 025A
        gbc.setState(0x7044, 0x2135, 0xdee0, 0x33a0, 0x6a0c, 0xb2db, 0x0, 0x1);
        gbc.writeMem(0x7044, { 0x25 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x2135, gbc.sp());
        EXPECT(0x7045, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 025B
        gbc.setState(0x9cb, 0x651c, 0xe4f0, 0x5d09, 0x6f54, 0x28a1, 0x0, 0x0);
        gbc.writeMem(0x9cb, { 0x25 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x651c, gbc.sp());
        EXPECT(0x9cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 025C
        gbc.setState(0x39d8, 0x8cc8, 0x4240, 0xb220, 0x14e4, 0xc301, 0x1, 0x0);
        gbc.writeMem(0x39d8, { 0x25 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x8cc8, gbc.sp());
        EXPECT(0x39d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 025D
        gbc.setState(0xb906, 0x31aa, 0xc0c0, 0xbc1f, 0x2b66, 0xaf03, 0x1, 0x1);
        gbc.writeMem(0xb906, { 0x25 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x31aa, gbc.sp());
        EXPECT(0xb907, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xb906));
        // 25 0260
        gbc.setState(0x9e2b, 0xcc92, 0x3a80, 0x4fd5, 0x1c50, 0xadc0, 0x1, 0x1);
        gbc.writeMem(0x9e2b, { 0x25 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xcc92, gbc.sp());
        EXPECT(0x9e2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x9e2b));
        // 25 0261
        gbc.setState(0xab02, 0x5560, 0x3710, 0xd6a7, 0xe042, 0x32e8, 0x1, 0x0);
        gbc.writeMem(0xab02, { 0x25 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x5560, gbc.sp());
        EXPECT(0xab03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xab02));
        // 25 0262
        gbc.setState(0x5bfa, 0xad65, 0xbc70, 0xf028, 0xd10, 0x78bf, 0x0, 0x0);
        gbc.writeMem(0x5bfa, { 0x25 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xad65, gbc.sp());
        EXPECT(0x5bfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0263
        gbc.setState(0xcb3b, 0x578a, 0xf8b0, 0x555c, 0x4356, 0xfe59, 0x1, 0x1);
        gbc.writeMem(0xcb3b, { 0x25 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x578a, gbc.sp());
        EXPECT(0xcb3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xcb3b));
        // 25 0264
        gbc.setState(0x262e, 0x1150, 0xb760, 0x1cdc, 0x7b62, 0x8ed4, 0x1, 0x0);
        gbc.writeMem(0x262e, { 0x25 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x1150, gbc.sp());
        EXPECT(0x262f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0265
        gbc.setState(0x1896, 0x1bcb, 0x3480, 0x95b, 0x11b1, 0x90f5, 0x0, 0x1);
        gbc.writeMem(0x1896, { 0x25 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x1bcb, gbc.sp());
        EXPECT(0x1897, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0266
        gbc.setState(0x3892, 0x882c, 0x4a00, 0x3c34, 0x201b, 0x928f, 0x1, 0x0);
        gbc.writeMem(0x3892, { 0x25 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x882c, gbc.sp());
        EXPECT(0x3893, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0267
        gbc.setState(0x93d4, 0x8dff, 0x1620, 0xa55, 0xa86a, 0x6513, 0x0, 0x0);
        gbc.writeMem(0x93d4, { 0x25 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x8dff, gbc.sp());
        EXPECT(0x93d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x93d4));
        // 25 0268
        gbc.setState(0xb5f5, 0x1868, 0xca50, 0xfe07, 0x7f9a, 0xe859, 0x0, 0x0);
        gbc.writeMem(0xb5f5, { 0x25 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x1868, gbc.sp());
        EXPECT(0xb5f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xb5f5));
        // 25 0269
        gbc.setState(0xdab3, 0x6ce, 0xb080, 0xcb91, 0x6bd7, 0x7e2d, 0x0, 0x1);
        gbc.writeMem(0xdab3, { 0x25 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x6ce, gbc.sp());
        EXPECT(0xdab4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xdab3));
        // 25 026A
        gbc.setState(0xcad9, 0x73c0, 0xe300, 0xac46, 0x1ae2, 0x7903, 0x0, 0x1);
        gbc.writeMem(0xcad9, { 0x25 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x73c0, gbc.sp());
        EXPECT(0xcada, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xcad9));
        // 25 026B
        gbc.setState(0xd3c9, 0xc52e, 0x8580, 0xece6, 0x3bf7, 0x8287, 0x1, 0x0);
        gbc.writeMem(0xd3c9, { 0x25 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xc52e, gbc.sp());
        EXPECT(0xd3ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xd3c9));
        // 25 026C
        gbc.setState(0x4425, 0x5e9f, 0xe810, 0x459c, 0xc534, 0x7db1, 0x1, 0x0);
        gbc.writeMem(0x4425, { 0x25 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x5e9f, gbc.sp());
        EXPECT(0x4426, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 026D
        gbc.setState(0x1479, 0x3477, 0x200, 0x2dbf, 0x6451, 0x7781, 0x1, 0x1);
        gbc.writeMem(0x1479, { 0x25 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x3477, gbc.sp());
        EXPECT(0x147a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 026E
        gbc.setState(0x6278, 0x325b, 0x4e30, 0xc16e, 0x628, 0x61b, 0x0, 0x0);
        gbc.writeMem(0x6278, { 0x25 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x325b, gbc.sp());
        EXPECT(0x6279, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 026F
        gbc.setState(0x79a8, 0xe28c, 0x2050, 0x4037, 0xf4a0, 0xcbd0, 0x0, 0x0);
        gbc.writeMem(0x79a8, { 0x25 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xe28c, gbc.sp());
        EXPECT(0x79a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0270
        gbc.setState(0x7416, 0xce98, 0x8b50, 0xc8a1, 0x8498, 0xdafb, 0x0, 0x0);
        gbc.writeMem(0x7416, { 0x25 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xce98, gbc.sp());
        EXPECT(0x7417, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0271
        gbc.setState(0x392a, 0x1e89, 0x6230, 0xaf0d, 0x7f8d, 0x9e11, 0x0, 0x1);
        gbc.writeMem(0x392a, { 0x25 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x1e89, gbc.sp());
        EXPECT(0x392b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0272
        gbc.setState(0x1a28, 0x2df0, 0xbbe0, 0x5a44, 0xb6e7, 0xfe82, 0x1, 0x0);
        gbc.writeMem(0x1a28, { 0x25 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x2df0, gbc.sp());
        EXPECT(0x1a29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0273
        gbc.setState(0x8ba0, 0xa0d3, 0x1070, 0x8af, 0xbcd8, 0xab5f, 0x0, 0x1);
        gbc.writeMem(0x8ba0, { 0x25 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xa0d3, gbc.sp());
        EXPECT(0x8ba1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x8ba0));
        // 25 0274
        gbc.setState(0x2f87, 0xc45, 0xe620, 0x250a, 0x32e8, 0x48bd, 0x1, 0x0);
        gbc.writeMem(0x2f87, { 0x25 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xc45, gbc.sp());
        EXPECT(0x2f88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0275
        gbc.setState(0xc01f, 0xa06d, 0xf900, 0x9cfd, 0xba5a, 0x7ed0, 0x1, 0x0);
        gbc.writeMem(0xc01f, { 0x25 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xa06d, gbc.sp());
        EXPECT(0xc020, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xc01f));
        // 25 0276
        gbc.setState(0xa0d, 0x22a9, 0x7340, 0x4bd9, 0xe582, 0x606a, 0x1, 0x1);
        gbc.writeMem(0xa0d, { 0x25 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x22a9, gbc.sp());
        EXPECT(0xa0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0277
        gbc.setState(0x33d8, 0x4b30, 0x3f50, 0x3203, 0x208b, 0xe16f, 0x1, 0x1);
        gbc.writeMem(0x33d8, { 0x25 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x4b30, gbc.sp());
        EXPECT(0x33d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0278
        gbc.setState(0x106f, 0x1fd5, 0xf7b0, 0x405c, 0x883f, 0x9121, 0x1, 0x1);
        gbc.writeMem(0x106f, { 0x25 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x1fd5, gbc.sp());
        EXPECT(0x1070, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0279
        gbc.setState(0x9f5d, 0x5916, 0x1240, 0x97e4, 0xbb00, 0x59da, 0x1, 0x1);
        gbc.writeMem(0x9f5d, { 0x25 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x5916, gbc.sp());
        EXPECT(0x9f5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x9f5d));
        // 25 027A
        gbc.setState(0x674b, 0x77a8, 0x46c0, 0xfda6, 0x6a1e, 0xa8e2, 0x0, 0x1);
        gbc.writeMem(0x674b, { 0x25 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x77a8, gbc.sp());
        EXPECT(0x674c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 027B
        gbc.setState(0xb961, 0x4ef4, 0xef40, 0x3038, 0x337a, 0xcb92, 0x0, 0x1);
        gbc.writeMem(0xb961, { 0x25 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x4ef4, gbc.sp());
        EXPECT(0xb962, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xb961));
        // 25 027C
        gbc.setState(0x2a9c, 0x746c, 0x140, 0xb74f, 0xb4c1, 0x1366, 0x0, 0x1);
        gbc.writeMem(0x2a9c, { 0x25 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x746c, gbc.sp());
        EXPECT(0x2a9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 027D
        gbc.setState(0xad89, 0xfe43, 0xc120, 0xd3c6, 0x2a6e, 0x400b, 0x0, 0x0);
        gbc.writeMem(0xad89, { 0x25 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xfe43, gbc.sp());
        EXPECT(0xad8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xad89));
        // 25 027E
        gbc.setState(0xfab, 0x96c9, 0x7010, 0x15ac, 0x4f4b, 0xb862, 0x0, 0x0);
        gbc.writeMem(0xfab, { 0x25 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x96c9, gbc.sp());
        EXPECT(0xfac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 027F
        gbc.setState(0x5e0b, 0x6c22, 0x1dd0, 0x464e, 0xbf54, 0xcdf, 0x1, 0x0);
        gbc.writeMem(0x5e0b, { 0x25 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x6c22, gbc.sp());
        EXPECT(0x5e0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0281
        gbc.setState(0x4d1, 0xc631, 0x8d00, 0x9b62, 0xf7c0, 0x2b24, 0x0, 0x1);
        gbc.writeMem(0x4d1, { 0x25 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xc631, gbc.sp());
        EXPECT(0x4d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0283
        gbc.setState(0x761a, 0xc8d3, 0x12a0, 0x11da, 0xa63b, 0x475b, 0x1, 0x1);
        gbc.writeMem(0x761a, { 0x25 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xc8d3, gbc.sp());
        EXPECT(0x761b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0284
        gbc.setState(0x7aef, 0x3e0a, 0xe060, 0x10de, 0xf4c0, 0x7d6a, 0x0, 0x1);
        gbc.writeMem(0x7aef, { 0x25 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x3e0a, gbc.sp());
        EXPECT(0x7af0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0285
        gbc.setState(0x90e8, 0x8a13, 0x8240, 0x753c, 0xf771, 0xebf9, 0x1, 0x0);
        gbc.writeMem(0x90e8, { 0x25 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x8a13, gbc.sp());
        EXPECT(0x90e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x90e8));
        // 25 0286
        gbc.setState(0x1f3a, 0xf9d0, 0x59e0, 0xb4a3, 0x668b, 0xbea7, 0x0, 0x0);
        gbc.writeMem(0x1f3a, { 0x25 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xf9d0, gbc.sp());
        EXPECT(0x1f3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0287
        gbc.setState(0xa7f8, 0x63e5, 0x6b40, 0x11cd, 0xade5, 0x2643, 0x0, 0x0);
        gbc.writeMem(0xa7f8, { 0x25 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x63e5, gbc.sp());
        EXPECT(0xa7f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xa7f8));
        // 25 0288
        gbc.setState(0xb2af, 0x7922, 0x4300, 0xdfd9, 0xd691, 0xf00e, 0x1, 0x1);
        gbc.writeMem(0xb2af, { 0x25 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x7922, gbc.sp());
        EXPECT(0xb2b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xb2af));
        // 25 028A
        gbc.setState(0x56f1, 0xacd4, 0x8360, 0xd9c2, 0xc9ad, 0xb40f, 0x0, 0x1);
        gbc.writeMem(0x56f1, { 0x25 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xacd4, gbc.sp());
        EXPECT(0x56f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 028B
        gbc.setState(0x6f59, 0xf174, 0xa590, 0x40f8, 0xebe7, 0x6502, 0x1, 0x1);
        gbc.writeMem(0x6f59, { 0x25 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xf174, gbc.sp());
        EXPECT(0x6f5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 028C
        gbc.setState(0x7b38, 0x4228, 0x5920, 0xba35, 0x1164, 0xf33e, 0x0, 0x1);
        gbc.writeMem(0x7b38, { 0x25 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x4228, gbc.sp());
        EXPECT(0x7b39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 028E
        gbc.setState(0xcb7f, 0x6377, 0x7a60, 0x8421, 0x981e, 0xc778, 0x0, 0x0);
        gbc.writeMem(0xcb7f, { 0x25 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x6377, gbc.sp());
        EXPECT(0xcb80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xcb7f));
        // 25 028F
        gbc.setState(0x34c3, 0xe949, 0x3080, 0x6e45, 0xc187, 0x4ca5, 0x0, 0x1);
        gbc.writeMem(0x34c3, { 0x25 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xe949, gbc.sp());
        EXPECT(0x34c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0290
        gbc.setState(0x1550, 0x869f, 0xa510, 0x8ebf, 0x7985, 0x82c4, 0x0, 0x0);
        gbc.writeMem(0x1550, { 0x25 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x869f, gbc.sp());
        EXPECT(0x1551, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0291
        gbc.setState(0x8b23, 0x8f0, 0xdaf0, 0x3763, 0x6e2c, 0x36cf, 0x0, 0x1);
        gbc.writeMem(0x8b23, { 0x25 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x8f0, gbc.sp());
        EXPECT(0x8b24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x8b23));
        // 25 0292
        gbc.setState(0x7e61, 0xca93, 0xbf60, 0x789b, 0x522d, 0x8356, 0x1, 0x0);
        gbc.writeMem(0x7e61, { 0x25 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xca93, gbc.sp());
        EXPECT(0x7e62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0293
        gbc.setState(0x62c7, 0xbe54, 0xdb40, 0xadab, 0xd00, 0xe46a, 0x0, 0x1);
        gbc.writeMem(0x62c7, { 0x25 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xbe54, gbc.sp());
        EXPECT(0x62c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0294
        gbc.setState(0x619a, 0x5aed, 0xbe10, 0x5a48, 0xfc9d, 0x3f28, 0x1, 0x0);
        gbc.writeMem(0x619a, { 0x25 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x5aed, gbc.sp());
        EXPECT(0x619b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0297
        gbc.setState(0x6e14, 0xc4e3, 0x6280, 0x7d7a, 0x2b9, 0x7292, 0x1, 0x1);
        gbc.writeMem(0x6e14, { 0x25 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xc4e3, gbc.sp());
        EXPECT(0x6e15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0298
        gbc.setState(0x68c2, 0x3ab9, 0x8710, 0xd750, 0x45ad, 0xdc68, 0x1, 0x0);
        gbc.writeMem(0x68c2, { 0x25 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x3ab9, gbc.sp());
        EXPECT(0x68c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0299
        gbc.setState(0xa17c, 0xacfd, 0x98c0, 0xbe9a, 0x7e43, 0xcb1a, 0x0, 0x0);
        gbc.writeMem(0xa17c, { 0x25 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xacfd, gbc.sp());
        EXPECT(0xa17d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xa17c));
        // 25 029A
        gbc.setState(0x2b89, 0xc4d4, 0xd450, 0x42f5, 0xfcc3, 0xc91e, 0x1, 0x0);
        gbc.writeMem(0x2b89, { 0x25 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xc4d4, gbc.sp());
        EXPECT(0x2b8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 029B
        gbc.setState(0x631d, 0x2b57, 0xcd30, 0xa47b, 0xad96, 0xa91d, 0x0, 0x0);
        gbc.writeMem(0x631d, { 0x25 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x2b57, gbc.sp());
        EXPECT(0x631e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 029C
        gbc.setState(0x8ef3, 0xcab8, 0x8850, 0xa16, 0x3, 0x34f0, 0x1, 0x0);
        gbc.writeMem(0x8ef3, { 0x25 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xcab8, gbc.sp());
        EXPECT(0x8ef4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x8ef3));
        // 25 029D
        gbc.setState(0x4abe, 0x6f7f, 0x1770, 0x6ec8, 0x57bc, 0x9139, 0x0, 0x1);
        gbc.writeMem(0x4abe, { 0x25 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x6f7f, gbc.sp());
        EXPECT(0x4abf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 029E
        gbc.setState(0xb8fa, 0x440d, 0xa180, 0x9429, 0x8238, 0x197b, 0x0, 0x1);
        gbc.writeMem(0xb8fa, { 0x25 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x440d, gbc.sp());
        EXPECT(0xb8fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xb8fa));
        // 25 029F
        gbc.setState(0x597b, 0x1706, 0x4640, 0x9548, 0x372a, 0xc3e7, 0x0, 0x0);
        gbc.writeMem(0x597b, { 0x25 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x1706, gbc.sp());
        EXPECT(0x597c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 02A0
        gbc.setState(0x9337, 0x2640, 0x4640, 0x5906, 0x3ca0, 0x5b83, 0x0, 0x0);
        gbc.writeMem(0x9337, { 0x25 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x2640, gbc.sp());
        EXPECT(0x9338, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x9337));
        // 25 02A1
        gbc.setState(0x99d5, 0x192b, 0xf1f0, 0xf36f, 0xfefc, 0xf47b, 0x0, 0x0);
        gbc.writeMem(0x99d5, { 0x25 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x192b, gbc.sp());
        EXPECT(0x99d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x99d5));
        // 25 02A2
        gbc.setState(0x963d, 0x864e, 0x19b0, 0xc52c, 0x5b2f, 0x72b0, 0x1, 0x0);
        gbc.writeMem(0x963d, { 0x25 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x864e, gbc.sp());
        EXPECT(0x963e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x963d));
        // 25 02A3
        gbc.setState(0xe331, 0x65ad, 0xbe60, 0x1076, 0xf463, 0xb05f, 0x0, 0x0);
        gbc.writeMem(0xe331, { 0x25 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x65ad, gbc.sp());
        EXPECT(0xe332, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xe331));
        // 25 02A5
        gbc.setState(0x69f7, 0xf523, 0xc9c0, 0x7495, 0x59db, 0x1675, 0x0, 0x0);
        gbc.writeMem(0x69f7, { 0x25 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xf523, gbc.sp());
        EXPECT(0x69f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 02A6
        gbc.setState(0xd4ae, 0xe4a0, 0xe0b0, 0x30, 0xd32f, 0x8a5e, 0x1, 0x0);
        gbc.writeMem(0xd4ae, { 0x25 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xe4a0, gbc.sp());
        EXPECT(0xd4af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xd4ae));
        // 25 02A7
        gbc.setState(0x7ed2, 0x8bb3, 0xb840, 0x4290, 0x40e7, 0xb8d8, 0x0, 0x1);
        gbc.writeMem(0x7ed2, { 0x25 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x8bb3, gbc.sp());
        EXPECT(0x7ed3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 02A8
        gbc.setState(0x87c, 0x806, 0x48a0, 0xaece, 0xc939, 0xc6c5, 0x1, 0x0);
        gbc.writeMem(0x87c, { 0x25 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x806, gbc.sp());
        EXPECT(0x87d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 02A9
        gbc.setState(0x2f52, 0x5fc9, 0x1e0, 0x2fa5, 0xc10e, 0xc80b, 0x1, 0x1);
        gbc.writeMem(0x2f52, { 0x25 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x5fc9, gbc.sp());
        EXPECT(0x2f53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 02AA
        gbc.setState(0x9c0c, 0x19ad, 0xe200, 0xb199, 0xff6a, 0x9dc, 0x1, 0x0);
        gbc.writeMem(0x9c0c, { 0x25 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x19ad, gbc.sp());
        EXPECT(0x9c0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x9c0c));
        // 25 02AB
        gbc.setState(0xeccf, 0x8c64, 0x82b0, 0xb765, 0x7481, 0xd136, 0x1, 0x0);
        gbc.writeMem(0xeccf, { 0x25 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x8c64, gbc.sp());
        EXPECT(0xecd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xeccf));
        // 25 02AC
        gbc.setState(0x914e, 0xfe2d, 0xcf80, 0xd90a, 0x7d7, 0xf6b2, 0x1, 0x1);
        gbc.writeMem(0x914e, { 0x25 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xfe2d, gbc.sp());
        EXPECT(0x914f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x914e));
        // 25 02AD
        gbc.setState(0x18e8, 0x4f70, 0xfd40, 0x740c, 0xea33, 0xe56f, 0x1, 0x1);
        gbc.writeMem(0x18e8, { 0x25 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x4f70, gbc.sp());
        EXPECT(0x18e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 02AE
        gbc.setState(0x91b5, 0x3f37, 0x6a40, 0x6050, 0xf892, 0x5c12, 0x1, 0x1);
        gbc.writeMem(0x91b5, { 0x25 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x3f37, gbc.sp());
        EXPECT(0x91b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x91b5));
        // 25 02AF
        gbc.setState(0x989c, 0xb415, 0x62a0, 0x6e11, 0x72cd, 0x2148, 0x1, 0x0);
        gbc.writeMem(0x989c, { 0x25 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xb415, gbc.sp());
        EXPECT(0x989d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x989c));
        // 25 02B0
        gbc.setState(0x59e6, 0x1b6, 0x32d0, 0xab30, 0x7304, 0x6dd8, 0x1, 0x0);
        gbc.writeMem(0x59e6, { 0x25 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x1b6, gbc.sp());
        EXPECT(0x59e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 02B1
        gbc.setState(0xafa2, 0xf95, 0x78a0, 0x10d3, 0xf9bf, 0x3178, 0x1, 0x0);
        gbc.writeMem(0xafa2, { 0x25 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xf95, gbc.sp());
        EXPECT(0xafa3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xafa2));
        // 25 02B2
        gbc.setState(0x99b3, 0x22b5, 0x8e90, 0xff94, 0xd27c, 0x2684, 0x1, 0x0);
        gbc.writeMem(0x99b3, { 0x25 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x22b5, gbc.sp());
        EXPECT(0x99b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x99b3));
        // 25 02B3
        gbc.setState(0xeaad, 0x2ea1, 0x1610, 0xe04c, 0x6a5d, 0xc880, 0x0, 0x0);
        gbc.writeMem(0xeaad, { 0x25 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x2ea1, gbc.sp());
        EXPECT(0xeaae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xeaad));
        // 25 02B5
        gbc.setState(0x38e5, 0x4de4, 0x8c90, 0xc429, 0x6d00, 0xc69d, 0x1, 0x1);
        gbc.writeMem(0x38e5, { 0x25 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x4de4, gbc.sp());
        EXPECT(0x38e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 02B6
        gbc.setState(0x2cf8, 0x163, 0xc1b0, 0x9b06, 0x972b, 0xafcd, 0x1, 0x0);
        gbc.writeMem(0x2cf8, { 0x25 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x163, gbc.sp());
        EXPECT(0x2cf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 02B7
        gbc.setState(0x232b, 0x5f09, 0xe180, 0x690f, 0x44a9, 0x1d20, 0x1, 0x0);
        gbc.writeMem(0x232b, { 0x25 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x5f09, gbc.sp());
        EXPECT(0x232c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 02B8
        gbc.setState(0x2b29, 0xf3ac, 0xacb0, 0xcf8d, 0x7425, 0x7eb0, 0x1, 0x1);
        gbc.writeMem(0x2b29, { 0x25 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xf3ac, gbc.sp());
        EXPECT(0x2b2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 02B9
        gbc.setState(0xbbb, 0xef92, 0x3ee0, 0x48c8, 0xe117, 0xa95d, 0x0, 0x1);
        gbc.writeMem(0xbbb, { 0x25 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xef92, gbc.sp());
        EXPECT(0xbbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 02BA
        gbc.setState(0x48c1, 0x5927, 0x6af0, 0x7e6f, 0x903, 0x5238, 0x0, 0x1);
        gbc.writeMem(0x48c1, { 0x25 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x5927, gbc.sp());
        EXPECT(0x48c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 02BB
        gbc.setState(0x29fe, 0xf8aa, 0xa890, 0x6ad4, 0xacf3, 0x5d42, 0x0, 0x1);
        gbc.writeMem(0x29fe, { 0x25 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xf8aa, gbc.sp());
        EXPECT(0x29ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 02BC
        gbc.setState(0x2f25, 0xab1f, 0x9ad0, 0x9d9d, 0x5945, 0x1622, 0x1, 0x1);
        gbc.writeMem(0x2f25, { 0x25 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xab1f, gbc.sp());
        EXPECT(0x2f26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 02BD
        gbc.setState(0x6527, 0xd60f, 0x53a0, 0x4094, 0x449f, 0x308a, 0x0, 0x0);
        gbc.writeMem(0x6527, { 0x25 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xd60f, gbc.sp());
        EXPECT(0x6528, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 02BE
        gbc.setState(0x6240, 0x53f7, 0x6b90, 0x42d3, 0xbf52, 0x8c8f, 0x0, 0x0);
        gbc.writeMem(0x6240, { 0x25 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x53f7, gbc.sp());
        EXPECT(0x6241, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 02BF
        gbc.setState(0x2b56, 0xb584, 0xac20, 0x3073, 0x343b, 0x10ea, 0x1, 0x1);
        gbc.writeMem(0x2b56, { 0x25 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xb584, gbc.sp());
        EXPECT(0x2b57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 02C0
        gbc.setState(0xee9e, 0xf72, 0x55d0, 0x1cec, 0xc06b, 0x2f5a, 0x1, 0x0);
        gbc.writeMem(0xee9e, { 0x25 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xf72, gbc.sp());
        EXPECT(0xee9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xee9e));
        // 25 02C1
        gbc.setState(0x8cb9, 0xecd0, 0x5770, 0xb781, 0x12e2, 0xa6ee, 0x0, 0x0);
        gbc.writeMem(0x8cb9, { 0x25 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xecd0, gbc.sp());
        EXPECT(0x8cba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x8cb9));
        // 25 02C2
        gbc.setState(0x5a1d, 0xebac, 0xb40, 0x220e, 0xcb93, 0xdfac, 0x1, 0x0);
        gbc.writeMem(0x5a1d, { 0x25 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xebac, gbc.sp());
        EXPECT(0x5a1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 02C3
        gbc.setState(0x10ee, 0x8453, 0x5a70, 0xf623, 0x8000, 0x59b5, 0x1, 0x0);
        gbc.writeMem(0x10ee, { 0x25 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x8453, gbc.sp());
        EXPECT(0x10ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 02C4
        gbc.setState(0x77ca, 0x5bb6, 0xb690, 0x71ec, 0xcc46, 0x83f4, 0x0, 0x1);
        gbc.writeMem(0x77ca, { 0x25 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x5bb6, gbc.sp());
        EXPECT(0x77cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 02C5
        gbc.setState(0x653a, 0x62d1, 0xed40, 0x8aa1, 0x5216, 0x2d09, 0x0, 0x1);
        gbc.writeMem(0x653a, { 0x25 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x62d1, gbc.sp());
        EXPECT(0x653b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 02C6
        gbc.setState(0x4d5c, 0xf11d, 0x2530, 0xd38b, 0x6f73, 0xfdbc, 0x0, 0x1);
        gbc.writeMem(0x4d5c, { 0x25 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xf11d, gbc.sp());
        EXPECT(0x4d5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 02C7
        gbc.setState(0xb2e8, 0xf6ed, 0x5230, 0x3ae0, 0x879f, 0x340d, 0x1, 0x1);
        gbc.writeMem(0xb2e8, { 0x25 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xf6ed, gbc.sp());
        EXPECT(0xb2e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xb2e8));
        // 25 02C8
        gbc.setState(0x7c1c, 0x36fd, 0xcc60, 0x6d4, 0x146c, 0x2cfb, 0x0, 0x0);
        gbc.writeMem(0x7c1c, { 0x25 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x36fd, gbc.sp());
        EXPECT(0x7c1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 02CA
        gbc.setState(0x5559, 0x8b68, 0xa980, 0x2d9, 0xbbb6, 0x73d3, 0x0, 0x1);
        gbc.writeMem(0x5559, { 0x25 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x8b68, gbc.sp());
        EXPECT(0x555a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 02CB
        gbc.setState(0xe0b8, 0x63de, 0xe4a0, 0x8520, 0x4aee, 0xd1ff, 0x1, 0x0);
        gbc.writeMem(0xe0b8, { 0x25 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x63de, gbc.sp());
        EXPECT(0xe0b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xe0b8));
        // 25 02CD
        gbc.setState(0x5a81, 0x200f, 0x330, 0xafb0, 0xe567, 0x9eeb, 0x1, 0x0);
        gbc.writeMem(0x5a81, { 0x25 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x200f, gbc.sp());
        EXPECT(0x5a82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 02CE
        gbc.setState(0xdd95, 0xf4b9, 0xc5d0, 0x667f, 0x74c, 0x2d4e, 0x1, 0x0);
        gbc.writeMem(0xdd95, { 0x25 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xf4b9, gbc.sp());
        EXPECT(0xdd96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xdd95));
        // 25 02D0
        gbc.setState(0xb937, 0xea5d, 0x5700, 0x3c32, 0xd186, 0x2cad, 0x1, 0x1);
        gbc.writeMem(0xb937, { 0x25 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xea5d, gbc.sp());
        EXPECT(0xb938, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xb937));
        // 25 02D1
        gbc.setState(0xd617, 0x8b67, 0xd5c0, 0x6b27, 0x2527, 0x8a90, 0x0, 0x1);
        gbc.writeMem(0xd617, { 0x25 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x8b67, gbc.sp());
        EXPECT(0xd618, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xd617));
        // 25 02D2
        gbc.setState(0xb4ee, 0xb70d, 0xf910, 0x77d8, 0x407e, 0x3838, 0x1, 0x0);
        gbc.writeMem(0xb4ee, { 0x25 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xb70d, gbc.sp());
        EXPECT(0xb4ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xb4ee));
        // 25 02D3
        gbc.setState(0x69c4, 0x7408, 0xfa0, 0x88f8, 0x406d, 0x28d0, 0x0, 0x0);
        gbc.writeMem(0x69c4, { 0x25 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x7408, gbc.sp());
        EXPECT(0x69c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 02D4
        gbc.setState(0x7a91, 0x226f, 0x11d0, 0x2a9, 0xe1e0, 0xef3b, 0x1, 0x1);
        gbc.writeMem(0x7a91, { 0x25 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x226f, gbc.sp());
        EXPECT(0x7a92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 02D5
        gbc.setState(0x3aa2, 0x756f, 0xacb0, 0x69e2, 0x9bf4, 0x3efe, 0x0, 0x1);
        gbc.writeMem(0x3aa2, { 0x25 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x756f, gbc.sp());
        EXPECT(0x3aa3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 02D6
        gbc.setState(0xcf8c, 0x90d3, 0xe970, 0xb966, 0x98c, 0xf141, 0x0, 0x1);
        gbc.writeMem(0xcf8c, { 0x25 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x90d3, gbc.sp());
        EXPECT(0xcf8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xcf8c));
        // 25 02D7
        gbc.setState(0x526f, 0x5e1a, 0x6900, 0x5973, 0x5858, 0x466a, 0x0, 0x0);
        gbc.writeMem(0x526f, { 0x25 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x5e1a, gbc.sp());
        EXPECT(0x5270, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 02D8
        gbc.setState(0x2207, 0x1d59, 0xb3e0, 0xe2dc, 0x3d0f, 0x3169, 0x1, 0x0);
        gbc.writeMem(0x2207, { 0x25 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x1d59, gbc.sp());
        EXPECT(0x2208, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 02D9
        gbc.setState(0xb4c1, 0x1ba8, 0xcc0, 0x334e, 0xe681, 0x16df, 0x1, 0x1);
        gbc.writeMem(0xb4c1, { 0x25 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x1ba8, gbc.sp());
        EXPECT(0xb4c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xb4c1));
        // 25 02DA
        gbc.setState(0x2e40, 0xa488, 0x9650, 0xd4c5, 0xe10, 0xd3b7, 0x1, 0x0);
        gbc.writeMem(0x2e40, { 0x25 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xa488, gbc.sp());
        EXPECT(0x2e41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 02DB
        gbc.setState(0xd2ad, 0xb020, 0xf3f0, 0x2e4f, 0xb2ab, 0xe121, 0x0, 0x0);
        gbc.writeMem(0xd2ad, { 0x25 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xb020, gbc.sp());
        EXPECT(0xd2ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xd2ad));
        // 25 02DC
        gbc.setState(0x7f94, 0x7d8f, 0xbcc0, 0xf119, 0x9a5e, 0x8658, 0x0, 0x0);
        gbc.writeMem(0x7f94, { 0x25 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x7d8f, gbc.sp());
        EXPECT(0x7f95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 02DD
        gbc.setState(0x5d0c, 0xca54, 0x1e40, 0x6cc0, 0xa7f4, 0x6b8e, 0x0, 0x0);
        gbc.writeMem(0x5d0c, { 0x25 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xca54, gbc.sp());
        EXPECT(0x5d0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 02DE
        gbc.setState(0x1015, 0x43d2, 0xba90, 0x5c30, 0xfee3, 0x91fd, 0x0, 0x0);
        gbc.writeMem(0x1015, { 0x25 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x43d2, gbc.sp());
        EXPECT(0x1016, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 02DF
        gbc.setState(0x5750, 0x634f, 0x8360, 0xb639, 0xa4ae, 0x5a21, 0x0, 0x1);
        gbc.writeMem(0x5750, { 0x25 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x634f, gbc.sp());
        EXPECT(0x5751, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 02E0
        gbc.setState(0x9ed, 0x9156, 0x1bc0, 0xd3a0, 0x8570, 0xe3e1, 0x0, 0x1);
        gbc.writeMem(0x9ed, { 0x25 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x9156, gbc.sp());
        EXPECT(0x9ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 02E1
        gbc.setState(0x15e6, 0x855f, 0x71c0, 0x3d26, 0xdfd7, 0x215f, 0x0, 0x0);
        gbc.writeMem(0x15e6, { 0x25 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x855f, gbc.sp());
        EXPECT(0x15e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 02E2
        gbc.setState(0xc180, 0xf706, 0x3740, 0x6f53, 0x8d8d, 0x91c9, 0x1, 0x0);
        gbc.writeMem(0xc180, { 0x25 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xf706, gbc.sp());
        EXPECT(0xc181, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xc180));
        // 25 02E3
        gbc.setState(0x9de6, 0xe9ac, 0xce0, 0xae9a, 0x7bf2, 0x3829, 0x1, 0x1);
        gbc.writeMem(0x9de6, { 0x25 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xe9ac, gbc.sp());
        EXPECT(0x9de7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x9de6));
        // 25 02E4
        gbc.setState(0x38f6, 0xa4b1, 0xfa10, 0x4471, 0xcf2d, 0x75fb, 0x0, 0x1);
        gbc.writeMem(0x38f6, { 0x25 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xa4b1, gbc.sp());
        EXPECT(0x38f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 02E5
        gbc.setState(0x74bc, 0x28f0, 0x63b0, 0xe48c, 0x5f75, 0x99dc, 0x0, 0x1);
        gbc.writeMem(0x74bc, { 0x25 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x28f0, gbc.sp());
        EXPECT(0x74bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 02E6
        gbc.setState(0x1bc7, 0x287a, 0x2240, 0xc4f9, 0xe83d, 0xbd59, 0x1, 0x0);
        gbc.writeMem(0x1bc7, { 0x25 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x287a, gbc.sp());
        EXPECT(0x1bc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 02E7
        gbc.setState(0x70df, 0xe2e0, 0x6140, 0x1c13, 0x119, 0x547b, 0x1, 0x1);
        gbc.writeMem(0x70df, { 0x25 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xe2e0, gbc.sp());
        EXPECT(0x70e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 02E8
        gbc.setState(0xbc09, 0x2c07, 0xa530, 0x992f, 0x5d2e, 0x45fd, 0x1, 0x1);
        gbc.writeMem(0xbc09, { 0x25 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x2c07, gbc.sp());
        EXPECT(0xbc0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xbc09));
        // 25 02E9
        gbc.setState(0x6edf, 0x6a95, 0xa8a0, 0x8a3f, 0x279f, 0x8b71, 0x0, 0x1);
        gbc.writeMem(0x6edf, { 0x25 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x6a95, gbc.sp());
        EXPECT(0x6ee0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 02EA
        gbc.setState(0x1656, 0xef41, 0x6a10, 0xfcb1, 0x33b6, 0xe022, 0x0, 0x0);
        gbc.writeMem(0x1656, { 0x25 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xef41, gbc.sp());
        EXPECT(0x1657, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 02EB
        gbc.setState(0x45d7, 0xb1d0, 0x92d0, 0xc696, 0xeef6, 0x305c, 0x0, 0x1);
        gbc.writeMem(0x45d7, { 0x25 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xb1d0, gbc.sp());
        EXPECT(0x45d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 02EC
        gbc.setState(0xda89, 0xd11e, 0xcb20, 0x540f, 0xc6bf, 0x3b77, 0x0, 0x1);
        gbc.writeMem(0xda89, { 0x25 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xd11e, gbc.sp());
        EXPECT(0xda8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xda89));
        // 25 02ED
        gbc.setState(0x8962, 0x70c3, 0xcec0, 0xdf84, 0x41b4, 0x2b00, 0x0, 0x0);
        gbc.writeMem(0x8962, { 0x25 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x70c3, gbc.sp());
        EXPECT(0x8963, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x8962));
        // 25 02EF
        gbc.setState(0x9888, 0x376a, 0x2cb0, 0x2730, 0xa713, 0xa33f, 0x0, 0x0);
        gbc.writeMem(0x9888, { 0x25 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x376a, gbc.sp());
        EXPECT(0x9889, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x9888));
        // 25 02F0
        gbc.setState(0x9706, 0xd93c, 0xe860, 0xc304, 0x2aa7, 0xdc6b, 0x0, 0x1);
        gbc.writeMem(0x9706, { 0x25 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xd93c, gbc.sp());
        EXPECT(0x9707, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x9706));
        // 25 02F1
        gbc.setState(0x2192, 0xc90d, 0x1ef0, 0xf01f, 0x533d, 0x85ec, 0x0, 0x0);
        gbc.writeMem(0x2192, { 0x25 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xc90d, gbc.sp());
        EXPECT(0x2193, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 02F2
        gbc.setState(0x3b1d, 0x4c5d, 0xc8c0, 0x3968, 0x9184, 0x2c90, 0x0, 0x0);
        gbc.writeMem(0x3b1d, { 0x25 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x4c5d, gbc.sp());
        EXPECT(0x3b1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 02F3
        gbc.setState(0x647f, 0x36cb, 0x2620, 0xd943, 0x1ab5, 0x4f74, 0x0, 0x1);
        gbc.writeMem(0x647f, { 0x25 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x36cb, gbc.sp());
        EXPECT(0x6480, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 02F4
        gbc.setState(0x4620, 0xec06, 0x14d0, 0x222e, 0xec02, 0x2c97, 0x0, 0x0);
        gbc.writeMem(0x4620, { 0x25 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xec06, gbc.sp());
        EXPECT(0x4621, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 02F5
        gbc.setState(0x3c03, 0xa12c, 0x13e0, 0xb6c, 0x34ad, 0xa34e, 0x0, 0x1);
        gbc.writeMem(0x3c03, { 0x25 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xa12c, gbc.sp());
        EXPECT(0x3c04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 02F6
        gbc.setState(0xc968, 0x9970, 0x9cc0, 0x97cf, 0xfea1, 0x7eef, 0x0, 0x1);
        gbc.writeMem(0xc968, { 0x25 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x9970, gbc.sp());
        EXPECT(0xc969, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xc968));
        // 25 02F7
        gbc.setState(0x571a, 0x6225, 0x3f00, 0x1323, 0x97e0, 0xdaf8, 0x1, 0x0);
        gbc.writeMem(0x571a, { 0x25 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x6225, gbc.sp());
        EXPECT(0x571b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 02F8
        gbc.setState(0x13e3, 0x273b, 0x8ee0, 0x9c7f, 0xf0a3, 0xa5ea, 0x1, 0x1);
        gbc.writeMem(0x13e3, { 0x25 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x273b, gbc.sp());
        EXPECT(0x13e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 02F9
        gbc.setState(0xcaaf, 0xcd43, 0xb320, 0xcec6, 0xd4fd, 0x3fc1, 0x1, 0x0);
        gbc.writeMem(0xcaaf, { 0x25 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xcd43, gbc.sp());
        EXPECT(0xcab0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xcaaf));
        // 25 02FA
        gbc.setState(0x82c, 0x1804, 0x6640, 0x548d, 0x4361, 0x1912, 0x0, 0x1);
        gbc.writeMem(0x82c, { 0x25 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x1804, gbc.sp());
        EXPECT(0x82d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 02FB
        gbc.setState(0x4de2, 0x585c, 0xcf10, 0xfdce, 0x5460, 0x95dc, 0x1, 0x0);
        gbc.writeMem(0x4de2, { 0x25 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x585c, gbc.sp());
        EXPECT(0x4de3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 02FC
        gbc.setState(0x5035, 0xb901, 0x7110, 0x6ab9, 0xc363, 0x4598, 0x0, 0x1);
        gbc.writeMem(0x5035, { 0x25 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xb901, gbc.sp());
        EXPECT(0x5036, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 02FE
        gbc.setState(0x7966, 0x65f0, 0x2030, 0xb17d, 0x9c75, 0xc390, 0x0, 0x1);
        gbc.writeMem(0x7966, { 0x25 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x65f0, gbc.sp());
        EXPECT(0x7967, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 02FF
        gbc.setState(0x4a9b, 0x4482, 0x3960, 0xcd16, 0x1c08, 0xb76a, 0x1, 0x0);
        gbc.writeMem(0x4a9b, { 0x25 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x4482, gbc.sp());
        EXPECT(0x4a9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0300
        gbc.setState(0x802e, 0xa285, 0xba60, 0x9f76, 0xf43a, 0xd3e3, 0x0, 0x1);
        gbc.writeMem(0x802e, { 0x25 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xa285, gbc.sp());
        EXPECT(0x802f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x802e));
        // 25 0301
        gbc.setState(0xe39b, 0x9031, 0xe9a0, 0x5415, 0x6c36, 0xf5af, 0x0, 0x1);
        gbc.writeMem(0xe39b, { 0x25 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x9031, gbc.sp());
        EXPECT(0xe39c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xe39b));
        // 25 0302
        gbc.setState(0x637b, 0xe8e9, 0x59b0, 0xfdec, 0xa2af, 0xd9b, 0x0, 0x0);
        gbc.writeMem(0x637b, { 0x25 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xe8e9, gbc.sp());
        EXPECT(0x637c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0303
        gbc.setState(0x4efb, 0x7860, 0x17a0, 0x13f3, 0x8443, 0x321d, 0x0, 0x0);
        gbc.writeMem(0x4efb, { 0x25 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x7860, gbc.sp());
        EXPECT(0x4efc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0304
        gbc.setState(0xecc5, 0x865a, 0x7450, 0xb62, 0x81cf, 0xa16f, 0x1, 0x1);
        gbc.writeMem(0xecc5, { 0x25 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x865a, gbc.sp());
        EXPECT(0xecc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xecc5));
        // 25 0305
        gbc.setState(0xe3c1, 0xd706, 0x1750, 0xacc5, 0x6663, 0x70b4, 0x1, 0x0);
        gbc.writeMem(0xe3c1, { 0x25 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xd706, gbc.sp());
        EXPECT(0xe3c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xe3c1));
        // 25 0307
        gbc.setState(0x69f6, 0x303, 0x3af0, 0x8708, 0x4276, 0xc6b1, 0x1, 0x0);
        gbc.writeMem(0x69f6, { 0x25 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x303, gbc.sp());
        EXPECT(0x69f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0308
        gbc.setState(0x85e8, 0xc61f, 0xe490, 0xbe10, 0xe03d, 0xd600, 0x0, 0x1);
        gbc.writeMem(0x85e8, { 0x25 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xc61f, gbc.sp());
        EXPECT(0x85e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x85e8));
        // 25 0309
        gbc.setState(0xecae, 0x5fea, 0x6550, 0x71c1, 0x9be3, 0x5a97, 0x1, 0x0);
        gbc.writeMem(0xecae, { 0x25 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x5fea, gbc.sp());
        EXPECT(0xecaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xecae));
        // 25 030A
        gbc.setState(0x7c55, 0x73f5, 0x7fa0, 0x7084, 0x612f, 0xccf2, 0x1, 0x1);
        gbc.writeMem(0x7c55, { 0x25 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x73f5, gbc.sp());
        EXPECT(0x7c56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 030B
        gbc.setState(0xbfe3, 0x5156, 0xdf00, 0xddef, 0xddfc, 0x654e, 0x0, 0x0);
        gbc.writeMem(0xbfe3, { 0x25 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x5156, gbc.sp());
        EXPECT(0xbfe4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xbfe3));
        // 25 030C
        gbc.setState(0x9a85, 0x5548, 0x37d0, 0x6d22, 0x78a9, 0x7b49, 0x1, 0x1);
        gbc.writeMem(0x9a85, { 0x25 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x5548, gbc.sp());
        EXPECT(0x9a86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x9a85));
        // 25 030D
        gbc.setState(0x3eee, 0xd93b, 0xd360, 0xee31, 0x183b, 0x9c5c, 0x1, 0x0);
        gbc.writeMem(0x3eee, { 0x25 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xd93b, gbc.sp());
        EXPECT(0x3eef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 030E
        gbc.setState(0x13f4, 0xf3dc, 0x64a0, 0x25b3, 0x3103, 0xf316, 0x0, 0x1);
        gbc.writeMem(0x13f4, { 0x25 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xf3dc, gbc.sp());
        EXPECT(0x13f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 030F
        gbc.setState(0xbec7, 0xe94b, 0xa0d0, 0xb4d, 0xb927, 0x5f78, 0x0, 0x1);
        gbc.writeMem(0xbec7, { 0x25 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xe94b, gbc.sp());
        EXPECT(0xbec8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xbec7));
        // 25 0310
        gbc.setState(0x92aa, 0x819e, 0x4e20, 0x8cc5, 0xf6c7, 0x442d, 0x0, 0x0);
        gbc.writeMem(0x92aa, { 0x25 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x819e, gbc.sp());
        EXPECT(0x92ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x92aa));
        // 25 0311
        gbc.setState(0x2931, 0x6fd6, 0xbec0, 0x7299, 0x5303, 0xf61b, 0x0, 0x0);
        gbc.writeMem(0x2931, { 0x25 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x6fd6, gbc.sp());
        EXPECT(0x2932, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0314
        gbc.setState(0xb3c6, 0xfdaa, 0xf460, 0xfee4, 0xad63, 0x7ea7, 0x0, 0x0);
        gbc.writeMem(0xb3c6, { 0x25 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xfdaa, gbc.sp());
        EXPECT(0xb3c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xb3c6));
        // 25 0315
        gbc.setState(0x8fae, 0xd732, 0x86a0, 0x35c4, 0xcffa, 0x40c9, 0x1, 0x1);
        gbc.writeMem(0x8fae, { 0x25 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xd732, gbc.sp());
        EXPECT(0x8faf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x8fae));
        // 25 0316
        gbc.setState(0x829e, 0x738f, 0x7820, 0x4cf2, 0x302d, 0x49b3, 0x1, 0x0);
        gbc.writeMem(0x829e, { 0x25 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x738f, gbc.sp());
        EXPECT(0x829f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x829e));
        // 25 0317
        gbc.setState(0x1fb0, 0xe2c2, 0x59a0, 0xd9f7, 0xfe08, 0x8ec6, 0x1, 0x1);
        gbc.writeMem(0x1fb0, { 0x25 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xe2c2, gbc.sp());
        EXPECT(0x1fb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0318
        gbc.setState(0xef9d, 0x4308, 0x4e60, 0x4cbe, 0xa6bb, 0xa4c6, 0x1, 0x0);
        gbc.writeMem(0xef9d, { 0x25 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x4308, gbc.sp());
        EXPECT(0xef9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xef9d));
        // 25 0319
        gbc.setState(0x8afe, 0x5019, 0xf010, 0xd3e, 0xbe74, 0xc6bb, 0x0, 0x0);
        gbc.writeMem(0x8afe, { 0x25 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x5019, gbc.sp());
        EXPECT(0x8aff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x8afe));
        // 25 031A
        gbc.setState(0xa08c, 0xb78a, 0x4920, 0xe427, 0x803a, 0x2c8d, 0x0, 0x0);
        gbc.writeMem(0xa08c, { 0x25 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xb78a, gbc.sp());
        EXPECT(0xa08d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xa08c));
        // 25 031B
        gbc.setState(0xb023, 0xb293, 0x7340, 0x9ae0, 0x21fa, 0xe4af, 0x1, 0x0);
        gbc.writeMem(0xb023, { 0x25 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xb293, gbc.sp());
        EXPECT(0xb024, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xb023));
        // 25 031C
        gbc.setState(0x6797, 0x2d6, 0x69c0, 0x4274, 0xd781, 0xb671, 0x0, 0x1);
        gbc.writeMem(0x6797, { 0x25 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x2d6, gbc.sp());
        EXPECT(0x6798, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 031E
        gbc.setState(0x75c7, 0x7fde, 0x76e0, 0x27a2, 0xb2e8, 0x6d9e, 0x0, 0x1);
        gbc.writeMem(0x75c7, { 0x25 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x7fde, gbc.sp());
        EXPECT(0x75c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 031F
        gbc.setState(0x1855, 0xd475, 0xe750, 0x995f, 0x744d, 0x395f, 0x1, 0x0);
        gbc.writeMem(0x1855, { 0x25 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xd475, gbc.sp());
        EXPECT(0x1856, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0321
        gbc.setState(0x77de, 0x305e, 0x3240, 0x496, 0xb7a4, 0x3b62, 0x1, 0x1);
        gbc.writeMem(0x77de, { 0x25 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x305e, gbc.sp());
        EXPECT(0x77df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0322
        gbc.setState(0x3d44, 0xcb2, 0x2b50, 0xe18f, 0x2f73, 0x253c, 0x0, 0x0);
        gbc.writeMem(0x3d44, { 0x25 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xcb2, gbc.sp());
        EXPECT(0x3d45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0323
        gbc.setState(0x1f7e, 0xff6f, 0xfc00, 0xdb5c, 0xab3b, 0x19af, 0x1, 0x0);
        gbc.writeMem(0x1f7e, { 0x25 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xff6f, gbc.sp());
        EXPECT(0x1f7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0324
        gbc.setState(0x7386, 0x1fe6, 0xb610, 0x3651, 0xaef, 0x6b4e, 0x1, 0x1);
        gbc.writeMem(0x7386, { 0x25 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x1fe6, gbc.sp());
        EXPECT(0x7387, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0325
        gbc.setState(0xae75, 0xb21a, 0xe50, 0x1dda, 0x1325, 0x9ea9, 0x1, 0x1);
        gbc.writeMem(0xae75, { 0x25 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xb21a, gbc.sp());
        EXPECT(0xae76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xae75));
        // 25 0326
        gbc.setState(0x5b74, 0xb3cf, 0xc9a0, 0xd964, 0x6bf8, 0x5a7e, 0x1, 0x1);
        gbc.writeMem(0x5b74, { 0x25 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xb3cf, gbc.sp());
        EXPECT(0x5b75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0327
        gbc.setState(0x48ea, 0xcf03, 0x82b0, 0x7577, 0x4f96, 0x41d0, 0x0, 0x0);
        gbc.writeMem(0x48ea, { 0x25 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xcf03, gbc.sp());
        EXPECT(0x48eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0328
        gbc.setState(0x2cf4, 0x5518, 0xbd80, 0xc5ae, 0xaf86, 0x789d, 0x0, 0x1);
        gbc.writeMem(0x2cf4, { 0x25 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x5518, gbc.sp());
        EXPECT(0x2cf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 032A
        gbc.setState(0xb601, 0x19a8, 0x5e80, 0x8648, 0x294e, 0xf79a, 0x1, 0x1);
        gbc.writeMem(0xb601, { 0x25 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x19a8, gbc.sp());
        EXPECT(0xb602, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xb601));
        // 25 032B
        gbc.setState(0x60a3, 0x1d19, 0x3750, 0x700d, 0xaddf, 0x8fdd, 0x1, 0x1);
        gbc.writeMem(0x60a3, { 0x25 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x1d19, gbc.sp());
        EXPECT(0x60a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 032C
        gbc.setState(0x977c, 0x9ad, 0x9f40, 0xafc5, 0xea10, 0xed37, 0x1, 0x1);
        gbc.writeMem(0x977c, { 0x25 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x9ad, gbc.sp());
        EXPECT(0x977d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x977c));
        // 25 032D
        gbc.setState(0x7750, 0xbeb2, 0xbca0, 0xcce9, 0x841, 0x5d2d, 0x0, 0x1);
        gbc.writeMem(0x7750, { 0x25 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xbeb2, gbc.sp());
        EXPECT(0x7751, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 032E
        gbc.setState(0xe0ab, 0x33da, 0x73d0, 0xf79e, 0xb33f, 0x8e05, 0x1, 0x1);
        gbc.writeMem(0xe0ab, { 0x25 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x33da, gbc.sp());
        EXPECT(0xe0ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xe0ab));
        // 25 032F
        gbc.setState(0x47d6, 0x55e4, 0x40e0, 0x5d31, 0xd7ef, 0xc0a0, 0x0, 0x0);
        gbc.writeMem(0x47d6, { 0x25 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x55e4, gbc.sp());
        EXPECT(0x47d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0330
        gbc.setState(0x2a26, 0x4246, 0x5e60, 0x163b, 0x50a9, 0xeb5e, 0x0, 0x0);
        gbc.writeMem(0x2a26, { 0x25 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x4246, gbc.sp());
        EXPECT(0x2a27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0332
        gbc.setState(0x8198, 0xdfcf, 0x1750, 0x6f3c, 0xed40, 0x1a53, 0x0, 0x1);
        gbc.writeMem(0x8198, { 0x25 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xdfcf, gbc.sp());
        EXPECT(0x8199, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x8198));
        // 25 0333
        gbc.setState(0x792b, 0x7a33, 0xb300, 0xc02b, 0xd027, 0xad78, 0x0, 0x0);
        gbc.writeMem(0x792b, { 0x25 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x7a33, gbc.sp());
        EXPECT(0x792c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0334
        gbc.setState(0xe65d, 0xaa0f, 0x3330, 0x8b21, 0x3a44, 0x4c0f, 0x0, 0x0);
        gbc.writeMem(0xe65d, { 0x25 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xaa0f, gbc.sp());
        EXPECT(0xe65e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xe65d));
        // 25 0335
        gbc.setState(0x95bd, 0xc741, 0x5350, 0x3a34, 0x557, 0x6a73, 0x1, 0x1);
        gbc.writeMem(0x95bd, { 0x25 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xc741, gbc.sp());
        EXPECT(0x95be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x95bd));
        // 25 0336
        gbc.setState(0x3bdc, 0xa559, 0x6eb0, 0x2614, 0x9a55, 0x1556, 0x0, 0x0);
        gbc.writeMem(0x3bdc, { 0x25 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xa559, gbc.sp());
        EXPECT(0x3bdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0337
        gbc.setState(0x134c, 0x869c, 0x3f10, 0x5ed9, 0x8172, 0x91b7, 0x0, 0x0);
        gbc.writeMem(0x134c, { 0x25 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x869c, gbc.sp());
        EXPECT(0x134d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0338
        gbc.setState(0xd4f3, 0xb393, 0xe700, 0xdecf, 0x63e3, 0x13da, 0x1, 0x1);
        gbc.writeMem(0xd4f3, { 0x25 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xb393, gbc.sp());
        EXPECT(0xd4f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xd4f3));
        // 25 0339
        gbc.setState(0x7bc3, 0x2521, 0x6650, 0x128a, 0xb513, 0x3cfb, 0x0, 0x0);
        gbc.writeMem(0x7bc3, { 0x25 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x2521, gbc.sp());
        EXPECT(0x7bc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 033A
        gbc.setState(0xeb4, 0x4712, 0x33a0, 0x3d47, 0x42dd, 0x6cae, 0x1, 0x1);
        gbc.writeMem(0xeb4, { 0x25 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x4712, gbc.sp());
        EXPECT(0xeb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 033B
        gbc.setState(0xb70b, 0xff38, 0xa2f0, 0xac9d, 0x9fb4, 0x870e, 0x0, 0x0);
        gbc.writeMem(0xb70b, { 0x25 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xff38, gbc.sp());
        EXPECT(0xb70c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xb70b));
        // 25 033C
        gbc.setState(0x4358, 0x812b, 0x8d60, 0x1c84, 0x88ff, 0xee7b, 0x0, 0x1);
        gbc.writeMem(0x4358, { 0x25 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x812b, gbc.sp());
        EXPECT(0x4359, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 033D
        gbc.setState(0xe117, 0xf260, 0x1660, 0xb956, 0x7fd9, 0x9fa3, 0x0, 0x1);
        gbc.writeMem(0xe117, { 0x25 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xf260, gbc.sp());
        EXPECT(0xe118, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xe117));
        // 25 033E
        gbc.setState(0xd58, 0x3f54, 0x31d0, 0xd858, 0xc446, 0x80e5, 0x0, 0x0);
        gbc.writeMem(0xd58, { 0x25 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x3f54, gbc.sp());
        EXPECT(0xd59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 033F
        gbc.setState(0xa63e, 0xbf13, 0xe700, 0xda05, 0x7441, 0xfa3a, 0x0, 0x0);
        gbc.writeMem(0xa63e, { 0x25 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xbf13, gbc.sp());
        EXPECT(0xa63f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xa63e));
        // 25 0341
        gbc.setState(0x2640, 0xbc75, 0x66d0, 0xe53d, 0x2080, 0x392e, 0x0, 0x1);
        gbc.writeMem(0x2640, { 0x25 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xbc75, gbc.sp());
        EXPECT(0x2641, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0342
        gbc.setState(0xbfaf, 0x6b56, 0xa860, 0x5d45, 0xd4ba, 0x1dfb, 0x0, 0x1);
        gbc.writeMem(0xbfaf, { 0x25 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x6b56, gbc.sp());
        EXPECT(0xbfb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xbfaf));
        // 25 0343
        gbc.setState(0x92de, 0xf7c0, 0xa660, 0xcad7, 0xd6da, 0x973f, 0x1, 0x1);
        gbc.writeMem(0x92de, { 0x25 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xf7c0, gbc.sp());
        EXPECT(0x92df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x92de));
        // 25 0344
        gbc.setState(0x556f, 0x41b2, 0x5a10, 0x9ee6, 0x9d46, 0x9ccb, 0x0, 0x1);
        gbc.writeMem(0x556f, { 0x25 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x41b2, gbc.sp());
        EXPECT(0x5570, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0345
        gbc.setState(0xcd7f, 0xa08d, 0xbf00, 0x9fa0, 0x2cbc, 0xe093, 0x1, 0x1);
        gbc.writeMem(0xcd7f, { 0x25 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xa08d, gbc.sp());
        EXPECT(0xcd80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xcd7f));
        // 25 0346
        gbc.setState(0x9d55, 0xd876, 0x1a60, 0xbde1, 0x2698, 0x8e69, 0x1, 0x1);
        gbc.writeMem(0x9d55, { 0x25 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xd876, gbc.sp());
        EXPECT(0x9d56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x9d55));
        // 25 0347
        gbc.setState(0xa157, 0xf9a5, 0x3e20, 0x6a85, 0x61c1, 0x79ed, 0x1, 0x0);
        gbc.writeMem(0xa157, { 0x25 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xf9a5, gbc.sp());
        EXPECT(0xa158, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xa157));
        // 25 0348
        gbc.setState(0xe6ce, 0xd792, 0xd840, 0x906c, 0x4c7a, 0xc83b, 0x1, 0x0);
        gbc.writeMem(0xe6ce, { 0x25 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xd792, gbc.sp());
        EXPECT(0xe6cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xe6ce));
        // 25 0349
        gbc.setState(0x44c3, 0xd3de, 0x40d0, 0xaf25, 0x5225, 0x87a0, 0x1, 0x1);
        gbc.writeMem(0x44c3, { 0x25 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xd3de, gbc.sp());
        EXPECT(0x44c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 034A
        gbc.setState(0xc8a2, 0x1202, 0x5ec0, 0x91e1, 0xa88a, 0x7ecf, 0x1, 0x1);
        gbc.writeMem(0xc8a2, { 0x25 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x1202, gbc.sp());
        EXPECT(0xc8a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xc8a2));
        // 25 034B
        gbc.setState(0x9bbf, 0xd447, 0x3b10, 0xe4c8, 0xf465, 0xb45c, 0x1, 0x0);
        gbc.writeMem(0x9bbf, { 0x25 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xd447, gbc.sp());
        EXPECT(0x9bc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x9bbf));
        // 25 034C
        gbc.setState(0x6708, 0x7201, 0x9160, 0xcaf6, 0xbdcf, 0x15d8, 0x0, 0x1);
        gbc.writeMem(0x6708, { 0x25 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x7201, gbc.sp());
        EXPECT(0x6709, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 034D
        gbc.setState(0x5881, 0x20e4, 0xbd20, 0x4fd1, 0xea29, 0xd004, 0x0, 0x0);
        gbc.writeMem(0x5881, { 0x25 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x20e4, gbc.sp());
        EXPECT(0x5882, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 034F
        gbc.setState(0x4b46, 0xf30, 0xd8f0, 0xb72c, 0x8d9, 0xd499, 0x0, 0x1);
        gbc.writeMem(0x4b46, { 0x25 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xf30, gbc.sp());
        EXPECT(0x4b47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0350
        gbc.setState(0x7c4d, 0x48a0, 0xdc20, 0x49a6, 0x153a, 0x1264, 0x1, 0x1);
        gbc.writeMem(0x7c4d, { 0x25 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x48a0, gbc.sp());
        EXPECT(0x7c4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0351
        gbc.setState(0x3fe, 0xc640, 0x3e80, 0x849f, 0xb35f, 0x800f, 0x0, 0x0);
        gbc.writeMem(0x3fe, { 0x25 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xc640, gbc.sp());
        EXPECT(0x3ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0352
        gbc.setState(0x45d1, 0x60bd, 0x4200, 0xa350, 0xcf6a, 0x4c7d, 0x1, 0x1);
        gbc.writeMem(0x45d1, { 0x25 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x60bd, gbc.sp());
        EXPECT(0x45d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0353
        gbc.setState(0xad8c, 0xa336, 0x2fe0, 0x835e, 0x3b, 0xedbc, 0x1, 0x1);
        gbc.writeMem(0xad8c, { 0x25 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xa336, gbc.sp());
        EXPECT(0xad8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xad8c));
        // 25 0354
        gbc.setState(0xd569, 0xdba2, 0xc8f0, 0x1813, 0x5c69, 0x22bb, 0x1, 0x1);
        gbc.writeMem(0xd569, { 0x25 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xdba2, gbc.sp());
        EXPECT(0xd56a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xd569));
        // 25 0355
        gbc.setState(0x747e, 0x868f, 0x5600, 0xb1e9, 0x4df2, 0xa199, 0x1, 0x1);
        gbc.writeMem(0x747e, { 0x25 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x868f, gbc.sp());
        EXPECT(0x747f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0356
        gbc.setState(0x704f, 0xaa82, 0xa860, 0x2d6d, 0x2bdd, 0x517f, 0x1, 0x1);
        gbc.writeMem(0x704f, { 0x25 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xaa82, gbc.sp());
        EXPECT(0x7050, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0357
        gbc.setState(0xa40, 0x5c68, 0xfc40, 0x295f, 0xa17c, 0x326b, 0x0, 0x0);
        gbc.writeMem(0xa40, { 0x25 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x5c68, gbc.sp());
        EXPECT(0xa41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0358
        gbc.setState(0x895a, 0xd3de, 0x2a00, 0x1399, 0x1105, 0x3df5, 0x1, 0x1);
        gbc.writeMem(0x895a, { 0x25 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xd3de, gbc.sp());
        EXPECT(0x895b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x895a));
        // 25 0359
        gbc.setState(0x46fc, 0xbe36, 0xae30, 0x981c, 0x912c, 0x23d2, 0x1, 0x1);
        gbc.writeMem(0x46fc, { 0x25 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xbe36, gbc.sp());
        EXPECT(0x46fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 035A
        gbc.setState(0xee26, 0xc096, 0xb3f0, 0x810c, 0xa97f, 0x1458, 0x0, 0x1);
        gbc.writeMem(0xee26, { 0x25 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xc096, gbc.sp());
        EXPECT(0xee27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xee26));
        // 25 035B
        gbc.setState(0xb776, 0xacb9, 0xcf00, 0x2102, 0x9880, 0xfa27, 0x0, 0x1);
        gbc.writeMem(0xb776, { 0x25 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xacb9, gbc.sp());
        EXPECT(0xb777, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xb776));
        // 25 035C
        gbc.setState(0xbfdc, 0x7af1, 0x6c00, 0x4c0a, 0x5a4e, 0x34a7, 0x0, 0x1);
        gbc.writeMem(0xbfdc, { 0x25 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x7af1, gbc.sp());
        EXPECT(0xbfdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xbfdc));
        // 25 035D
        gbc.setState(0xe60a, 0xbcfc, 0x6110, 0xf433, 0xeb2c, 0x7079, 0x1, 0x0);
        gbc.writeMem(0xe60a, { 0x25 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xbcfc, gbc.sp());
        EXPECT(0xe60b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xe60a));
        // 25 035E
        gbc.setState(0xdda8, 0x2944, 0xb3f0, 0xe815, 0xa9a6, 0x197b, 0x0, 0x0);
        gbc.writeMem(0xdda8, { 0x25 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x2944, gbc.sp());
        EXPECT(0xdda9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xdda8));
        // 25 035F
        gbc.setState(0x8a85, 0x244b, 0xd780, 0xa8ef, 0x8ec4, 0x9908, 0x0, 0x0);
        gbc.writeMem(0x8a85, { 0x25 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x244b, gbc.sp());
        EXPECT(0x8a86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x8a85));
        // 25 0360
        gbc.setState(0x575a, 0x99d, 0x1e20, 0x5ed9, 0x104, 0xfd99, 0x1, 0x1);
        gbc.writeMem(0x575a, { 0x25 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x99d, gbc.sp());
        EXPECT(0x575b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0361
        gbc.setState(0x87db, 0xc865, 0x1c00, 0x6e2, 0xa067, 0x2e1e, 0x1, 0x1);
        gbc.writeMem(0x87db, { 0x25 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xc865, gbc.sp());
        EXPECT(0x87dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x87db));
        // 25 0362
        gbc.setState(0xc0b3, 0xe1ac, 0xeb60, 0x39da, 0x8441, 0x2ca5, 0x0, 0x1);
        gbc.writeMem(0xc0b3, { 0x25 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xe1ac, gbc.sp());
        EXPECT(0xc0b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xc0b3));
        // 25 0363
        gbc.setState(0x1ed5, 0xa852, 0x7da0, 0xb8e6, 0xdcbd, 0x318c, 0x0, 0x1);
        gbc.writeMem(0x1ed5, { 0x25 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xa852, gbc.sp());
        EXPECT(0x1ed6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0364
        gbc.setState(0x642e, 0x91d7, 0xd730, 0xf1e6, 0xd2dc, 0x52c3, 0x0, 0x0);
        gbc.writeMem(0x642e, { 0x25 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x91d7, gbc.sp());
        EXPECT(0x642f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0365
        gbc.setState(0xe09f, 0x23ef, 0x13c0, 0x445e, 0x565d, 0x6236, 0x1, 0x0);
        gbc.writeMem(0xe09f, { 0x25 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x23ef, gbc.sp());
        EXPECT(0xe0a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xe09f));
        // 25 0366
        gbc.setState(0x57f0, 0x5a30, 0xd860, 0x9032, 0xbd80, 0xa737, 0x0, 0x0);
        gbc.writeMem(0x57f0, { 0x25 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x5a30, gbc.sp());
        EXPECT(0x57f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0367
        gbc.setState(0x3a3d, 0xf5d6, 0x7940, 0x4d89, 0xdec5, 0x3cb1, 0x1, 0x1);
        gbc.writeMem(0x3a3d, { 0x25 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xf5d6, gbc.sp());
        EXPECT(0x3a3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0368
        gbc.setState(0xdc5a, 0x7ec4, 0x6270, 0x181c, 0xa224, 0x7093, 0x1, 0x0);
        gbc.writeMem(0xdc5a, { 0x25 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x7ec4, gbc.sp());
        EXPECT(0xdc5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xdc5a));
        // 25 0369
        gbc.setState(0xe297, 0xd9c, 0x7a40, 0xf4b1, 0x6861, 0x724d, 0x0, 0x1);
        gbc.writeMem(0xe297, { 0x25 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xd9c, gbc.sp());
        EXPECT(0xe298, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xe297));
        // 25 036A
        gbc.setState(0xc93b, 0xbf, 0x79e0, 0x3fb6, 0xed8e, 0xee6c, 0x1, 0x1);
        gbc.writeMem(0xc93b, { 0x25 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xbf, gbc.sp());
        EXPECT(0xc93c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xc93b));
        // 25 036B
        gbc.setState(0x37ba, 0x9a60, 0xcef0, 0xd711, 0x9fe1, 0x578c, 0x1, 0x1);
        gbc.writeMem(0x37ba, { 0x25 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x9a60, gbc.sp());
        EXPECT(0x37bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 036C
        gbc.setState(0x54f6, 0x97b2, 0x6f20, 0xf0b4, 0x89aa, 0x8f7b, 0x1, 0x0);
        gbc.writeMem(0x54f6, { 0x25 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x97b2, gbc.sp());
        EXPECT(0x54f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 036D
        gbc.setState(0xce1d, 0xa2db, 0x8230, 0xa909, 0x3ee6, 0x3199, 0x1, 0x1);
        gbc.writeMem(0xce1d, { 0x25 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xa2db, gbc.sp());
        EXPECT(0xce1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xce1d));
        // 25 036E
        gbc.setState(0x7e21, 0x26be, 0x15f0, 0xce38, 0x4637, 0x7f1a, 0x1, 0x1);
        gbc.writeMem(0x7e21, { 0x25 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x26be, gbc.sp());
        EXPECT(0x7e22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 036F
        gbc.setState(0x28a5, 0x8519, 0x900, 0xc905, 0xe5b2, 0x4dcf, 0x1, 0x0);
        gbc.writeMem(0x28a5, { 0x25 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x8519, gbc.sp());
        EXPECT(0x28a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0370
        gbc.setState(0x2846, 0xfb43, 0x5470, 0x74e1, 0xf1f0, 0x8a47, 0x1, 0x0);
        gbc.writeMem(0x2846, { 0x25 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xfb43, gbc.sp());
        EXPECT(0x2847, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0371
        gbc.setState(0x3fcd, 0x452, 0x5960, 0x9d1a, 0x819e, 0x6023, 0x1, 0x0);
        gbc.writeMem(0x3fcd, { 0x25 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x452, gbc.sp());
        EXPECT(0x3fce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0372
        gbc.setState(0x75b6, 0xf3e8, 0x3da0, 0x74b, 0xdfed, 0x40ab, 0x0, 0x0);
        gbc.writeMem(0x75b6, { 0x25 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xf3e8, gbc.sp());
        EXPECT(0x75b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0373
        gbc.setState(0x4752, 0x68de, 0xd8e0, 0x9828, 0xd70f, 0xf53a, 0x0, 0x0);
        gbc.writeMem(0x4752, { 0x25 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x68de, gbc.sp());
        EXPECT(0x4753, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0374
        gbc.setState(0xb00c, 0xf511, 0x4cb0, 0xf2bf, 0x7943, 0x9201, 0x0, 0x0);
        gbc.writeMem(0xb00c, { 0x25 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xf511, gbc.sp());
        EXPECT(0xb00d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xb00c));
        // 25 0375
        gbc.setState(0x9b66, 0xd970, 0x8cc0, 0x8793, 0xdb74, 0x5dcb, 0x1, 0x0);
        gbc.writeMem(0x9b66, { 0x25 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xd970, gbc.sp());
        EXPECT(0x9b67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x9b66));
        // 25 0376
        gbc.setState(0x369e, 0x3a30, 0xf630, 0x18df, 0xca80, 0xeee6, 0x0, 0x0);
        gbc.writeMem(0x369e, { 0x25 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x3a30, gbc.sp());
        EXPECT(0x369f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0378
        gbc.setState(0x3b6f, 0xd81d, 0xd600, 0x1240, 0x9fbd, 0x9895, 0x0, 0x1);
        gbc.writeMem(0x3b6f, { 0x25 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xd81d, gbc.sp());
        EXPECT(0x3b70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0379
        gbc.setState(0xc60e, 0x81a8, 0x2190, 0xb440, 0x7426, 0xdd2f, 0x1, 0x1);
        gbc.writeMem(0xc60e, { 0x25 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x81a8, gbc.sp());
        EXPECT(0xc60f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xc60e));
        // 25 037A
        gbc.setState(0xcd3b, 0x367a, 0x4c30, 0x7bff, 0x244c, 0x940e, 0x1, 0x0);
        gbc.writeMem(0xcd3b, { 0x25 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x367a, gbc.sp());
        EXPECT(0xcd3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xcd3b));
        // 25 037B
        gbc.setState(0x5a40, 0x1adc, 0x76b0, 0xdfab, 0x9308, 0xb4a6, 0x1, 0x1);
        gbc.writeMem(0x5a40, { 0x25 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x1adc, gbc.sp());
        EXPECT(0x5a41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 037C
        gbc.setState(0xc3d4, 0x1a81, 0x66e0, 0x844b, 0xdca8, 0x5fb8, 0x0, 0x0);
        gbc.writeMem(0xc3d4, { 0x25 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x1a81, gbc.sp());
        EXPECT(0xc3d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xc3d4));
        // 25 037D
        gbc.setState(0xfc5, 0x6985, 0xa070, 0xfd, 0xb0c8, 0x7360, 0x1, 0x0);
        gbc.writeMem(0xfc5, { 0x25 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x6985, gbc.sp());
        EXPECT(0xfc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 037E
        gbc.setState(0x75b0, 0x7e4, 0x700, 0x9eca, 0x2cd5, 0xcd0f, 0x0, 0x0);
        gbc.writeMem(0x75b0, { 0x25 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x7e4, gbc.sp());
        EXPECT(0x75b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 037F
        gbc.setState(0xa73b, 0x1748, 0x9e00, 0x7cdb, 0x7d2, 0xd086, 0x1, 0x1);
        gbc.writeMem(0xa73b, { 0x25 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x1748, gbc.sp());
        EXPECT(0xa73c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xa73b));
        // 25 0380
        gbc.setState(0x87d2, 0x4b57, 0x75a0, 0xa4ba, 0x3b23, 0x6358, 0x1, 0x0);
        gbc.writeMem(0x87d2, { 0x25 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x4b57, gbc.sp());
        EXPECT(0x87d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x87d2));
        // 25 0381
        gbc.setState(0x2e5c, 0x95e7, 0x97f0, 0x4ae1, 0x801f, 0xb8d3, 0x1, 0x1);
        gbc.writeMem(0x2e5c, { 0x25 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x95e7, gbc.sp());
        EXPECT(0x2e5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0382
        gbc.setState(0x1d53, 0x7023, 0xbb90, 0x234a, 0xbf6f, 0xf3ec, 0x1, 0x1);
        gbc.writeMem(0x1d53, { 0x25 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x7023, gbc.sp());
        EXPECT(0x1d54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0383
        gbc.setState(0x61b4, 0xa4d3, 0x1a10, 0x289f, 0x38e5, 0x986e, 0x0, 0x0);
        gbc.writeMem(0x61b4, { 0x25 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xa4d3, gbc.sp());
        EXPECT(0x61b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0384
        gbc.setState(0xd2d2, 0x7374, 0xdeb0, 0xcff1, 0x6de5, 0x5c7b, 0x0, 0x0);
        gbc.writeMem(0xd2d2, { 0x25 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x7374, gbc.sp());
        EXPECT(0xd2d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xd2d2));
        // 25 0385
        gbc.setState(0x96a8, 0x2302, 0x9330, 0x6f43, 0x780b, 0xf883, 0x0, 0x0);
        gbc.writeMem(0x96a8, { 0x25 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x2302, gbc.sp());
        EXPECT(0x96a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x96a8));
        // 25 0386
        gbc.setState(0x739c, 0x190f, 0x3170, 0x5a9d, 0x29d2, 0x2299, 0x0, 0x1);
        gbc.writeMem(0x739c, { 0x25 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x190f, gbc.sp());
        EXPECT(0x739d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0387
        gbc.setState(0xa20f, 0x7aa5, 0xcbb0, 0x2c16, 0xf7e6, 0x6bbe, 0x1, 0x1);
        gbc.writeMem(0xa20f, { 0x25 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x7aa5, gbc.sp());
        EXPECT(0xa210, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xa20f));
        // 25 0388
        gbc.setState(0x638, 0x33da, 0xec00, 0xcc12, 0x1a32, 0x889d, 0x1, 0x0);
        gbc.writeMem(0x638, { 0x25 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x33da, gbc.sp());
        EXPECT(0x639, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 0389
        gbc.setState(0x4f42, 0xab59, 0x6f40, 0x13d5, 0xf0e7, 0x52f, 0x1, 0x1);
        gbc.writeMem(0x4f42, { 0x25 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xab59, gbc.sp());
        EXPECT(0x4f43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 038B
        gbc.setState(0xe808, 0x51ed, 0xf400, 0x2c2f, 0x60b7, 0xe172, 0x0, 0x1);
        gbc.writeMem(0xe808, { 0x25 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x51ed, gbc.sp());
        EXPECT(0xe809, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xe808));
        // 25 038C
        gbc.setState(0x15a9, 0xa789, 0x95f0, 0x2a42, 0x1707, 0x9405, 0x0, 0x1);
        gbc.writeMem(0x15a9, { 0x25 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xa789, gbc.sp());
        EXPECT(0x15aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 038D
        gbc.setState(0x12c9, 0x6e70, 0x9af0, 0xb1c8, 0xc82b, 0x7934, 0x1, 0x0);
        gbc.writeMem(0x12c9, { 0x25 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x6e70, gbc.sp());
        EXPECT(0x12ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 038E
        gbc.setState(0x9454, 0x9094, 0x6ec0, 0xaadc, 0xc73d, 0x9da1, 0x1, 0x0);
        gbc.writeMem(0x9454, { 0x25 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x9094, gbc.sp());
        EXPECT(0x9455, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x9454));
        // 25 038F
        gbc.setState(0xb070, 0x7b75, 0x1b40, 0x20cc, 0x2d64, 0xc505, 0x1, 0x1);
        gbc.writeMem(0xb070, { 0x25 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x7b75, gbc.sp());
        EXPECT(0xb071, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xb070));
        // 25 0390
        gbc.setState(0x38d6, 0x6b0f, 0xd190, 0xf74b, 0x705d, 0xfd91, 0x0, 0x1);
        gbc.writeMem(0x38d6, { 0x25 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x6b0f, gbc.sp());
        EXPECT(0x38d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0391
        gbc.setState(0x9c01, 0x734e, 0x1b40, 0xbe05, 0x4ef9, 0x1434, 0x0, 0x0);
        gbc.writeMem(0x9c01, { 0x25 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x734e, gbc.sp());
        EXPECT(0x9c02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x9c01));
        // 25 0392
        gbc.setState(0x164, 0xc35c, 0xc0f0, 0xfec4, 0x8ee1, 0x193d, 0x0, 0x1);
        gbc.writeMem(0x164, { 0x25 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xc35c, gbc.sp());
        EXPECT(0x165, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0393
        gbc.setState(0x72db, 0x327f, 0x21d0, 0x6e8d, 0xa45d, 0x90d5, 0x0, 0x1);
        gbc.writeMem(0x72db, { 0x25 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x327f, gbc.sp());
        EXPECT(0x72dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0394
        gbc.setState(0x1f1d, 0xb8fc, 0x3c30, 0x10c3, 0x7191, 0xccfc, 0x1, 0x1);
        gbc.writeMem(0x1f1d, { 0x25 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xb8fc, gbc.sp());
        EXPECT(0x1f1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0395
        gbc.setState(0xaf66, 0xb3f7, 0x3000, 0x192f, 0xdb6d, 0xc26c, 0x1, 0x1);
        gbc.writeMem(0xaf66, { 0x25 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xb3f7, gbc.sp());
        EXPECT(0xaf67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xaf66));
        // 25 0396
        gbc.setState(0x37f2, 0xb1de, 0x1330, 0xb389, 0xc58b, 0xfb82, 0x1, 0x0);
        gbc.writeMem(0x37f2, { 0x25 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xb1de, gbc.sp());
        EXPECT(0x37f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0397
        gbc.setState(0x2065, 0xa7b3, 0xb10, 0x262f, 0x7f, 0x8324, 0x0, 0x1);
        gbc.writeMem(0x2065, { 0x25 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xa7b3, gbc.sp());
        EXPECT(0x2066, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0398
        gbc.setState(0x3293, 0xd762, 0xccb0, 0x1de9, 0x82f, 0x2ee7, 0x0, 0x1);
        gbc.writeMem(0x3293, { 0x25 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xd762, gbc.sp());
        EXPECT(0x3294, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 0399
        gbc.setState(0xefd1, 0x4883, 0x5480, 0xe82b, 0xd3ca, 0x80d4, 0x1, 0x1);
        gbc.writeMem(0xefd1, { 0x25 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x4883, gbc.sp());
        EXPECT(0xefd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xefd1));
        // 25 039A
        gbc.setState(0x2183, 0x9bee, 0x7310, 0x3321, 0xd270, 0xac04, 0x1, 0x0);
        gbc.writeMem(0x2183, { 0x25 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x9bee, gbc.sp());
        EXPECT(0x2184, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 039B
        gbc.setState(0xe7f1, 0xd31d, 0x83d0, 0x21b0, 0x5da, 0x997c, 0x1, 0x1);
        gbc.writeMem(0xe7f1, { 0x25 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xd31d, gbc.sp());
        EXPECT(0xe7f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xe7f1));
        // 25 039C
        gbc.setState(0x6171, 0xf92c, 0x7480, 0x688c, 0xdd9e, 0xbf5a, 0x0, 0x0);
        gbc.writeMem(0x6171, { 0x25 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xf92c, gbc.sp());
        EXPECT(0x6172, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 039D
        gbc.setState(0x864a, 0xb974, 0x9ed0, 0x37b4, 0x1c20, 0x2e29, 0x1, 0x1);
        gbc.writeMem(0x864a, { 0x25 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xb974, gbc.sp());
        EXPECT(0x864b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x864a));
        // 25 039E
        gbc.setState(0x2eb1, 0x34a4, 0xf500, 0xb979, 0xdf44, 0x17db, 0x1, 0x1);
        gbc.writeMem(0x2eb1, { 0x25 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x34a4, gbc.sp());
        EXPECT(0x2eb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 039F
        gbc.setState(0xeee2, 0x945a, 0x5120, 0xe916, 0xeb9f, 0x432e, 0x1, 0x0);
        gbc.writeMem(0xeee2, { 0x25 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x945a, gbc.sp());
        EXPECT(0xeee3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xeee2));
        // 25 03A0
        gbc.setState(0x5841, 0x273b, 0x5ad0, 0x6434, 0x6d03, 0x2bf6, 0x1, 0x1);
        gbc.writeMem(0x5841, { 0x25 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x273b, gbc.sp());
        EXPECT(0x5842, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 03A1
        gbc.setState(0xa8df, 0xdcfc, 0xeaa0, 0xc880, 0x36a7, 0x3190, 0x0, 0x0);
        gbc.writeMem(0xa8df, { 0x25 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xdcfc, gbc.sp());
        EXPECT(0xa8e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xa8df));
        // 25 03A2
        gbc.setState(0x62bc, 0xa7d4, 0xd530, 0x5071, 0xee1a, 0x37f9, 0x1, 0x0);
        gbc.writeMem(0x62bc, { 0x25 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xa7d4, gbc.sp());
        EXPECT(0x62bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 03A3
        gbc.setState(0xea05, 0xb378, 0xcc00, 0x7958, 0x39d, 0x3a11, 0x1, 0x0);
        gbc.writeMem(0xea05, { 0x25 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xb378, gbc.sp());
        EXPECT(0xea06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xea05));
        // 25 03A4
        gbc.setState(0x52fd, 0x901e, 0x7190, 0xb8b7, 0xd4c4, 0x3427, 0x1, 0x0);
        gbc.writeMem(0x52fd, { 0x25 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x901e, gbc.sp());
        EXPECT(0x52fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 03A5
        gbc.setState(0x14d5, 0xf464, 0xb670, 0xb16b, 0x18d5, 0xb913, 0x1, 0x0);
        gbc.writeMem(0x14d5, { 0x25 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xf464, gbc.sp());
        EXPECT(0x14d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 03A6
        gbc.setState(0xbd2d, 0x8950, 0x4200, 0x6fe2, 0xa96c, 0xec2b, 0x1, 0x1);
        gbc.writeMem(0xbd2d, { 0x25 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x8950, gbc.sp());
        EXPECT(0xbd2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xbd2d));
        // 25 03A7
        gbc.setState(0x4598, 0x7946, 0xd0f0, 0xb826, 0xf8fc, 0x80b4, 0x0, 0x0);
        gbc.writeMem(0x4598, { 0x25 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x7946, gbc.sp());
        EXPECT(0x4599, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 03A8
        gbc.setState(0xb386, 0xc1f7, 0x9cd0, 0xddd5, 0x60c1, 0xaaa1, 0x0, 0x0);
        gbc.writeMem(0xb386, { 0x25 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xc1f7, gbc.sp());
        EXPECT(0xb387, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xb386));
        // 25 03A9
        gbc.setState(0xf60, 0xc0aa, 0xc090, 0x6a19, 0x4484, 0xc023, 0x1, 0x1);
        gbc.writeMem(0xf60, { 0x25 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xc0aa, gbc.sp());
        EXPECT(0xf61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 03AA
        gbc.setState(0x4cd5, 0x22a6, 0xc160, 0xb1a9, 0x7c41, 0xf235, 0x0, 0x0);
        gbc.writeMem(0x4cd5, { 0x25 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x22a6, gbc.sp());
        EXPECT(0x4cd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 03AB
        gbc.setState(0x8768, 0x2b7f, 0x5550, 0x14f1, 0xb53, 0x1c93, 0x0, 0x0);
        gbc.writeMem(0x8768, { 0x25 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x2b7f, gbc.sp());
        EXPECT(0x8769, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x8768));
        // 25 03AC
        gbc.setState(0xe73e, 0x5b62, 0xda20, 0x209a, 0xb1b9, 0xd79e, 0x0, 0x0);
        gbc.writeMem(0xe73e, { 0x25 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x5b62, gbc.sp());
        EXPECT(0xe73f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xe73e));
        // 25 03AE
        gbc.setState(0xc126, 0xbba3, 0xbed0, 0xc044, 0x9a9e, 0x8d19, 0x0, 0x0);
        gbc.writeMem(0xc126, { 0x25 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xbba3, gbc.sp());
        EXPECT(0xc127, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xc126));
        // 25 03AF
        gbc.setState(0x278d, 0xefb5, 0x6d40, 0xdcc9, 0xff8b, 0xb872, 0x1, 0x1);
        gbc.writeMem(0x278d, { 0x25 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xefb5, gbc.sp());
        EXPECT(0x278e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 03B0
        gbc.setState(0x2ba, 0x70d4, 0xa340, 0x2e0e, 0x5633, 0x9882, 0x0, 0x1);
        gbc.writeMem(0x2ba, { 0x25 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x70d4, gbc.sp());
        EXPECT(0x2bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 03B1
        gbc.setState(0x9fa7, 0x342e, 0xa400, 0xe9a, 0xc22, 0x999e, 0x0, 0x1);
        gbc.writeMem(0x9fa7, { 0x25 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x342e, gbc.sp());
        EXPECT(0x9fa8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x9fa7));
        // 25 03B2
        gbc.setState(0x1399, 0x3127, 0xae80, 0x214d, 0x2ac0, 0x24f, 0x1, 0x1);
        gbc.writeMem(0x1399, { 0x25 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x3127, gbc.sp());
        EXPECT(0x139a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 03B3
        gbc.setState(0x3a73, 0x77f8, 0x3dd0, 0xd230, 0x14c7, 0x3104, 0x1, 0x1);
        gbc.writeMem(0x3a73, { 0x25 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x77f8, gbc.sp());
        EXPECT(0x3a74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 03B4
        gbc.setState(0x745f, 0x46ab, 0x8e0, 0x6f8c, 0x3c6, 0x8fe3, 0x1, 0x0);
        gbc.writeMem(0x745f, { 0x25 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x46ab, gbc.sp());
        EXPECT(0x7460, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 03B5
        gbc.setState(0xca0d, 0xc532, 0x1e00, 0x1340, 0xa56, 0x844b, 0x1, 0x1);
        gbc.writeMem(0xca0d, { 0x25 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xc532, gbc.sp());
        EXPECT(0xca0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xca0d));
        // 25 03B6
        gbc.setState(0xb00e, 0xf30e, 0xcd00, 0x54b9, 0x863a, 0x1084, 0x0, 0x1);
        gbc.writeMem(0xb00e, { 0x25 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xf30e, gbc.sp());
        EXPECT(0xb00f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xb00e));
        // 25 03B7
        gbc.setState(0xfc3, 0x57b7, 0xde10, 0xf1a4, 0xc83d, 0x7a76, 0x0, 0x0);
        gbc.writeMem(0xfc3, { 0x25 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x57b7, gbc.sp());
        EXPECT(0xfc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 03B8
        gbc.setState(0xee90, 0x1761, 0xea30, 0x5364, 0xe3ff, 0x8a2f, 0x1, 0x1);
        gbc.writeMem(0xee90, { 0x25 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x1761, gbc.sp());
        EXPECT(0xee91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xee90));
        // 25 03B9
        gbc.setState(0x95fa, 0x37d, 0x2360, 0xe4ed, 0xb6f0, 0xb580, 0x1, 0x0);
        gbc.writeMem(0x95fa, { 0x25 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x37d, gbc.sp());
        EXPECT(0x95fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x95fa));
        // 25 03BA
        gbc.setState(0xb11a, 0x4e5a, 0xb280, 0x708d, 0x6cc2, 0xdce2, 0x0, 0x1);
        gbc.writeMem(0xb11a, { 0x25 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x4e5a, gbc.sp());
        EXPECT(0xb11b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xb11a));
        // 25 03BB
        gbc.setState(0x351b, 0xe1eb, 0xe380, 0xde2, 0x28e3, 0x83c6, 0x1, 0x0);
        gbc.writeMem(0x351b, { 0x25 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xe1eb, gbc.sp());
        EXPECT(0x351c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 03BC
        gbc.setState(0x108, 0xcf8f, 0x8440, 0x2c5, 0x8eb5, 0x590, 0x1, 0x1);
        gbc.writeMem(0x108, { 0x25 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xcf8f, gbc.sp());
        EXPECT(0x109, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 03BD
        gbc.setState(0x95ec, 0x42b3, 0x1e80, 0x56f0, 0xff6a, 0x1479, 0x1, 0x1);
        gbc.writeMem(0x95ec, { 0x25 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x42b3, gbc.sp());
        EXPECT(0x95ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x95ec));
        // 25 03BE
        gbc.setState(0xedf3, 0x8866, 0x5d90, 0x7054, 0xc4df, 0x1b9c, 0x1, 0x0);
        gbc.writeMem(0xedf3, { 0x25 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x8866, gbc.sp());
        EXPECT(0xedf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xedf3));
        // 25 03BF
        gbc.setState(0xbbf, 0x669b, 0xef90, 0x4b85, 0x53b0, 0xd98d, 0x1, 0x1);
        gbc.writeMem(0xbbf, { 0x25 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x669b, gbc.sp());
        EXPECT(0xbc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 03C1
        gbc.setState(0x2ab4, 0xdd58, 0xb4a0, 0x71ef, 0xb103, 0x4479, 0x0, 0x1);
        gbc.writeMem(0x2ab4, { 0x25 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xdd58, gbc.sp());
        EXPECT(0x2ab5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 03C2
        gbc.setState(0x3c5e, 0xd8d, 0xf720, 0x8f11, 0x5c45, 0x4b9c, 0x1, 0x1);
        gbc.writeMem(0x3c5e, { 0x25 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xd8d, gbc.sp());
        EXPECT(0x3c5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 03C3
        gbc.setState(0xc3c9, 0xa0b8, 0x9300, 0x7fee, 0xe5a5, 0x9df2, 0x1, 0x0);
        gbc.writeMem(0xc3c9, { 0x25 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xa0b8, gbc.sp());
        EXPECT(0xc3ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xc3c9));
        // 25 03C4
        gbc.setState(0x5a1c, 0xfcb1, 0x18f0, 0x71e3, 0x79d9, 0xe2a9, 0x0, 0x1);
        gbc.writeMem(0x5a1c, { 0x25 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xfcb1, gbc.sp());
        EXPECT(0x5a1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 03C5
        gbc.setState(0x74b2, 0xd1f9, 0x4d20, 0x7fe9, 0xf9bd, 0xe218, 0x0, 0x1);
        gbc.writeMem(0x74b2, { 0x25 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xd1f9, gbc.sp());
        EXPECT(0x74b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 03C6
        gbc.setState(0xb0b0, 0x103b, 0xd920, 0xee35, 0xfc5f, 0x6f87, 0x1, 0x0);
        gbc.writeMem(0xb0b0, { 0x25 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x103b, gbc.sp());
        EXPECT(0xb0b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xb0b0));
        // 25 03C7
        gbc.setState(0xab5c, 0xbfa7, 0xc810, 0x4165, 0x47ed, 0x7bc1, 0x1, 0x0);
        gbc.writeMem(0xab5c, { 0x25 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xbfa7, gbc.sp());
        EXPECT(0xab5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xab5c));
        // 25 03C8
        gbc.setState(0x9def, 0xd6d9, 0xde50, 0x82f4, 0x7993, 0x413c, 0x0, 0x0);
        gbc.writeMem(0x9def, { 0x25 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xd6d9, gbc.sp());
        EXPECT(0x9df0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x9def));
        // 25 03C9
        gbc.setState(0x7833, 0x76a1, 0x2d40, 0xc3d1, 0x257b, 0x74bd, 0x1, 0x0);
        gbc.writeMem(0x7833, { 0x25 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x76a1, gbc.sp());
        EXPECT(0x7834, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 03CA
        gbc.setState(0x3d63, 0xc561, 0x2210, 0xba52, 0xe311, 0x3902, 0x1, 0x1);
        gbc.writeMem(0x3d63, { 0x25 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xc561, gbc.sp());
        EXPECT(0x3d64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 03CB
        gbc.setState(0xee74, 0xe337, 0xf070, 0x7c76, 0x137c, 0x79b5, 0x1, 0x1);
        gbc.writeMem(0xee74, { 0x25 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xe337, gbc.sp());
        EXPECT(0xee75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xee74));
        // 25 03CC
        gbc.setState(0x5c3f, 0xa517, 0x680, 0x9f75, 0x5179, 0x3cee, 0x0, 0x1);
        gbc.writeMem(0x5c3f, { 0x25 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xa517, gbc.sp());
        EXPECT(0x5c40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 03CE
        gbc.setState(0x2383, 0x17b8, 0x8270, 0x4112, 0x9194, 0x5662, 0x1, 0x1);
        gbc.writeMem(0x2383, { 0x25 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x17b8, gbc.sp());
        EXPECT(0x2384, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 03CF
        gbc.setState(0xa9c5, 0x3df3, 0x7850, 0xe647, 0x4e27, 0xb3b6, 0x1, 0x1);
        gbc.writeMem(0xa9c5, { 0x25 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x3df3, gbc.sp());
        EXPECT(0xa9c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xa9c5));
        // 25 03D1
        gbc.setState(0xda5, 0x40ab, 0x6ea0, 0x9667, 0xa0e8, 0x52a4, 0x0, 0x1);
        gbc.writeMem(0xda5, { 0x25 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x40ab, gbc.sp());
        EXPECT(0xda6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 03D2
        gbc.setState(0xa967, 0xde2, 0xf280, 0x6cc1, 0x648c, 0xba43, 0x1, 0x1);
        gbc.writeMem(0xa967, { 0x25 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xde2, gbc.sp());
        EXPECT(0xa968, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xa967));
        // 25 03D3
        gbc.setState(0xc78b, 0x83d9, 0xcc90, 0xe917, 0xe1a9, 0xe672, 0x1, 0x1);
        gbc.writeMem(0xc78b, { 0x25 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x83d9, gbc.sp());
        EXPECT(0xc78c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xc78b));
        // 25 03D4
        gbc.setState(0x7f11, 0x3cdc, 0x60b0, 0xa8bd, 0x5070, 0x3d09, 0x1, 0x1);
        gbc.writeMem(0x7f11, { 0x25 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x3cdc, gbc.sp());
        EXPECT(0x7f12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 03D5
        gbc.setState(0x41a5, 0x5fd3, 0xb8d0, 0x2da4, 0x7065, 0xa292, 0x1, 0x0);
        gbc.writeMem(0x41a5, { 0x25 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x5fd3, gbc.sp());
        EXPECT(0x41a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 03D6
        gbc.setState(0x222, 0x4c4b, 0xe090, 0xb6bf, 0x9089, 0x58eb, 0x0, 0x0);
        gbc.writeMem(0x222, { 0x25 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x4c4b, gbc.sp());
        EXPECT(0x223, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 03D7
        gbc.setState(0x7613, 0x343b, 0x7ee0, 0xde66, 0xb97b, 0x7519, 0x0, 0x1);
        gbc.writeMem(0x7613, { 0x25 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x343b, gbc.sp());
        EXPECT(0x7614, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 03D8
        gbc.setState(0x5546, 0xe0e, 0x4610, 0x4242, 0x1f3e, 0x470f, 0x1, 0x0);
        gbc.writeMem(0x5546, { 0x25 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xe0e, gbc.sp());
        EXPECT(0x5547, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 03D9
        gbc.setState(0x2493, 0xe39f, 0x10f0, 0xdc2f, 0xb5f2, 0x4907, 0x1, 0x0);
        gbc.writeMem(0x2493, { 0x25 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xe39f, gbc.sp());
        EXPECT(0x2494, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 03DB
        gbc.setState(0x3c22, 0xa3a2, 0x1130, 0x565e, 0x2956, 0x1da3, 0x1, 0x0);
        gbc.writeMem(0x3c22, { 0x25 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xa3a2, gbc.sp());
        EXPECT(0x3c23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 03DC
        gbc.setState(0xadec, 0x2a6f, 0xa4c0, 0x1a04, 0xbec8, 0x5cfb, 0x1, 0x1);
        gbc.writeMem(0xadec, { 0x25 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x2a6f, gbc.sp());
        EXPECT(0xaded, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xadec));
        // 25 03DD
        gbc.setState(0x2cb0, 0x1994, 0xf240, 0x5a50, 0xcf2, 0x608e, 0x1, 0x0);
        gbc.writeMem(0x2cb0, { 0x25 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x1994, gbc.sp());
        EXPECT(0x2cb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 03DE
        gbc.setState(0x47ec, 0x799a, 0x3f30, 0xb53e, 0xe256, 0x6dfc, 0x0, 0x0);
        gbc.writeMem(0x47ec, { 0x25 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x799a, gbc.sp());
        EXPECT(0x47ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 03DF
        gbc.setState(0xd88c, 0xaee, 0xca30, 0x2644, 0xf01b, 0x8f6b, 0x0, 0x1);
        gbc.writeMem(0xd88c, { 0x25 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xaee, gbc.sp());
        EXPECT(0xd88d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xd88c));
        // 25 03E0
        gbc.setState(0xc310, 0xb09b, 0xa350, 0x978e, 0x6256, 0xa4df, 0x0, 0x1);
        gbc.writeMem(0xc310, { 0x25 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xb09b, gbc.sp());
        EXPECT(0xc311, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xc310));
        // 25 03E1
        gbc.setState(0x994c, 0xa48e, 0x11e0, 0x20ad, 0x8287, 0x785b, 0x0, 0x1);
        gbc.writeMem(0x994c, { 0x25 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xa48e, gbc.sp());
        EXPECT(0x994d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x994c));
        // 25 03E2
        gbc.setState(0x4ee0, 0x7897, 0xe580, 0x1a07, 0x8558, 0x3bd, 0x0, 0x0);
        gbc.writeMem(0x4ee0, { 0x25 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x7897, gbc.sp());
        EXPECT(0x4ee1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 03E3
        gbc.setState(0x47d5, 0x8e12, 0x5120, 0x8a8, 0xe862, 0xc903, 0x0, 0x0);
        gbc.writeMem(0x47d5, { 0x25 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x8e12, gbc.sp());
        EXPECT(0x47d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 25 03E4
        gbc.setState(0x2b5, 0xf89f, 0xbd90, 0x4e66, 0xe14f, 0x1967, 0x1, 0x0);
        gbc.writeMem(0x2b5, { 0x25 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xf89f, gbc.sp());
        EXPECT(0x2b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 25 03E5
        gbc.setState(0x9c07, 0xad75, 0xdcb0, 0xc004, 0x7c4e, 0xabf, 0x1, 0x1);
        gbc.writeMem(0x9c07, { 0x25 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xad75, gbc.sp());
        EXPECT(0x9c08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x9c07));
        // 25 03E6
        gbc.setState(0x9c5f, 0xb473, 0x1840, 0xf15a, 0xc581, 0x4252, 0x1, 0x1);
        gbc.writeMem(0x9c5f, { 0x25 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xb473, gbc.sp());
        EXPECT(0x9c60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x9c5f));
        // 25 03E7
        gbc.setState(0x4e02, 0x9bb8, 0x35c0, 0xf458, 0xb6b0, 0x4abb, 0x1, 0x1);
        gbc.writeMem(0x4e02, { 0x25 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x9bb8, gbc.sp());
        EXPECT(0x4e03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
    }
