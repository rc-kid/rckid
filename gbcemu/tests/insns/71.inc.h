    TEST(gbcemu, opcode_71) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 71 0001
        gbc.setState(0x566b, 0xd566, 0x3110, 0xdf90, 0x8757, 0xb221, 0x0, 0x1);
        gbc.writeMem(0x566b, { 0x71 });
        gbc.writeMem(0xb221, { 0x0 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xd566, gbc.sp());
        EXPECT(0x566c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0xb221));
        // 71 0002
        gbc.setState(0x88c2, 0xe0fa, 0x65e0, 0x8d57, 0x7bc0, 0xad3b, 0x0, 0x0);
        gbc.writeMem(0x88c2, { 0x71 });
        gbc.writeMem(0xad3b, { 0x0 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xe0fa, gbc.sp());
        EXPECT(0x88c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0x88c2));
        EXPECT(0x57, gbc.readMem(0xad3b));
        // 71 0003
        gbc.setState(0xa92d, 0xa3e2, 0xd170, 0x9a05, 0x52ce, 0x8fac, 0x1, 0x1);
        gbc.writeMem(0x8fac, { 0x0 });
        gbc.writeMem(0xa92d, { 0x71 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xa3e2, gbc.sp());
        EXPECT(0xa92e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x8fac));
        EXPECT(0x71, gbc.readMem(0xa92d));
        // 71 0004
        gbc.setState(0x1da4, 0xb253, 0xf640, 0xf512, 0x919, 0xecb3, 0x0, 0x1);
        gbc.writeMem(0x1da4, { 0x71 });
        gbc.writeMem(0xecb3, { 0x0 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xb253, gbc.sp());
        EXPECT(0x1da5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xecb3));
        // 71 0005
        gbc.setState(0x2c4e, 0x6284, 0x4fc0, 0xf9a, 0xc406, 0xde6f, 0x1, 0x0);
        gbc.writeMem(0x2c4e, { 0x71 });
        gbc.writeMem(0xde6f, { 0x0 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x6284, gbc.sp());
        EXPECT(0x2c4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xde6f));
        // 71 0007
        gbc.setState(0xd918, 0x7576, 0x4cf0, 0x3599, 0x838a, 0xcb21, 0x0, 0x0);
        gbc.writeMem(0xcb21, { 0x0 });
        gbc.writeMem(0xd918, { 0x71 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x7576, gbc.sp());
        EXPECT(0xd919, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xcb21));
        EXPECT(0x71, gbc.readMem(0xd918));
        // 71 000A
        gbc.setState(0x461e, 0xaef1, 0xa930, 0x2187, 0xcde1, 0xf0ca, 0x0, 0x1);
        gbc.writeMem(0x461e, { 0x71 });
        gbc.writeMem(0xf0ca, { 0x0 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xaef1, gbc.sp());
        EXPECT(0x461f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xf0ca));
        // 71 000B
        gbc.setState(0x5cf7, 0x6b8a, 0xa010, 0x43ff, 0x652e, 0xcf35, 0x1, 0x1);
        gbc.writeMem(0x5cf7, { 0x71 });
        gbc.writeMem(0xcf35, { 0x0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x6b8a, gbc.sp());
        EXPECT(0x5cf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xcf35));
        // 71 000D
        gbc.setState(0xb36c, 0xf8e1, 0x4ce0, 0x1fc, 0x802a, 0x88bc, 0x1, 0x0);
        gbc.writeMem(0x88bc, { 0x0 });
        gbc.writeMem(0xb36c, { 0x71 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xf8e1, gbc.sp());
        EXPECT(0xb36d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfc, gbc.readMem(0x88bc));
        EXPECT(0x71, gbc.readMem(0xb36c));
        // 71 0010
        gbc.setState(0xc967, 0xc52e, 0x6650, 0xa517, 0x2e84, 0xee47, 0x1, 0x0);
        gbc.writeMem(0xc967, { 0x71 });
        gbc.writeMem(0xee47, { 0x0 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xc52e, gbc.sp());
        EXPECT(0xc968, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xc967));
        EXPECT(0x17, gbc.readMem(0xee47));
        // 71 0011
        gbc.setState(0x1ad7, 0x123b, 0x2630, 0x7be6, 0x4c8a, 0xd410, 0x0, 0x1);
        gbc.writeMem(0x1ad7, { 0x71 });
        gbc.writeMem(0xd410, { 0x0 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x123b, gbc.sp());
        EXPECT(0x1ad8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xd410));
        // 71 0012
        gbc.setState(0x976b, 0x128c, 0xd4c0, 0x898a, 0x6ce3, 0x8bbc, 0x1, 0x0);
        gbc.writeMem(0x8bbc, { 0x0 });
        gbc.writeMem(0x976b, { 0x71 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x128c, gbc.sp());
        EXPECT(0x976c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x8bbc));
        EXPECT(0x71, gbc.readMem(0x976b));
        // 71 0015
        gbc.setState(0x37ac, 0xb1a0, 0x40a0, 0xffd7, 0xfcf8, 0xb3d1, 0x1, 0x1);
        gbc.writeMem(0x37ac, { 0x71 });
        gbc.writeMem(0xb3d1, { 0x0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xb1a0, gbc.sp());
        EXPECT(0x37ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0xb3d1));
        // 71 0018
        gbc.setState(0x80e9, 0x2b87, 0xc7c0, 0xc214, 0x2dc, 0xb066, 0x1, 0x0);
        gbc.writeMem(0x80e9, { 0x71 });
        gbc.writeMem(0xb066, { 0x0 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x2b87, gbc.sp());
        EXPECT(0x80ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0x80e9));
        EXPECT(0x14, gbc.readMem(0xb066));
        // 71 0019
        gbc.setState(0xbdc5, 0xf0dd, 0x1140, 0x2801, 0xe5dc, 0xde26, 0x0, 0x0);
        gbc.writeMem(0xbdc5, { 0x71 });
        gbc.writeMem(0xde26, { 0x0 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xf0dd, gbc.sp());
        EXPECT(0xbdc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xbdc5));
        EXPECT(0x1, gbc.readMem(0xde26));
        // 71 001A
        gbc.setState(0x95f, 0xad4a, 0x44c0, 0xf877, 0x7f4d, 0x8754, 0x1, 0x0);
        gbc.writeMem(0x95f, { 0x71 });
        gbc.writeMem(0x8754, { 0x0 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xad4a, gbc.sp());
        EXPECT(0x960, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x8754));
        // 71 001C
        gbc.setState(0x215b, 0x1418, 0x9ee0, 0xf814, 0x49ed, 0x9428, 0x1, 0x0);
        gbc.writeMem(0x215b, { 0x71 });
        gbc.writeMem(0x9428, { 0x0 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x1418, gbc.sp());
        EXPECT(0x215c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x9428));
        // 71 001E
        gbc.setState(0x4e5f, 0x7c36, 0x3940, 0x7b64, 0x75ec, 0xd6fc, 0x1, 0x1);
        gbc.writeMem(0x4e5f, { 0x71 });
        gbc.writeMem(0xd6fc, { 0x0 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x7c36, gbc.sp());
        EXPECT(0x4e60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xd6fc));
        // 71 0021
        gbc.setState(0x1861, 0xf9e7, 0xbe00, 0xb1f3, 0xa18e, 0xd4a9, 0x1, 0x1);
        gbc.writeMem(0x1861, { 0x71 });
        gbc.writeMem(0xd4a9, { 0x0 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xf9e7, gbc.sp());
        EXPECT(0x1862, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0xd4a9));
        // 71 0023
        gbc.setState(0xb7ce, 0x96cc, 0x2f40, 0xc27a, 0x36fc, 0xdea6, 0x0, 0x0);
        gbc.writeMem(0xb7ce, { 0x71 });
        gbc.writeMem(0xdea6, { 0x0 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x96cc, gbc.sp());
        EXPECT(0xb7cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xb7ce));
        EXPECT(0x7a, gbc.readMem(0xdea6));
        // 71 0025
        gbc.setState(0xeaf7, 0xc0f2, 0x4980, 0x2198, 0x5c97, 0xb788, 0x1, 0x0);
        gbc.writeMem(0xb788, { 0x0 });
        gbc.writeMem(0xeaf7, { 0x71 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xc0f2, gbc.sp());
        EXPECT(0xeaf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xb788));
        EXPECT(0x71, gbc.readMem(0xeaf7));
        // 71 0026
        gbc.setState(0x185d, 0xc25b, 0x9860, 0x7e6f, 0xfe33, 0x8288, 0x0, 0x1);
        gbc.writeMem(0x185d, { 0x71 });
        gbc.writeMem(0x8288, { 0x0 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xc25b, gbc.sp());
        EXPECT(0x185e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6f, gbc.readMem(0x8288));
        // 71 0027
        gbc.setState(0x64c1, 0xa801, 0xb240, 0x3714, 0x9854, 0xacea, 0x0, 0x1);
        gbc.writeMem(0x64c1, { 0x71 });
        gbc.writeMem(0xacea, { 0x0 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xa801, gbc.sp());
        EXPECT(0x64c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xacea));
        // 71 0028
        gbc.setState(0x7c75, 0xf32b, 0x70b0, 0xdefc, 0xbd9b, 0xfbdf, 0x0, 0x0);
        gbc.writeMem(0x7c75, { 0x71 });
        gbc.writeMem(0xfbdf, { 0x0 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xf32b, gbc.sp());
        EXPECT(0x7c76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfc, gbc.readMem(0xfbdf));
        // 71 0029
        gbc.setState(0x7642, 0xb75b, 0xa6d0, 0x129, 0xdfd8, 0xdc59, 0x1, 0x1);
        gbc.writeMem(0x7642, { 0x71 });
        gbc.writeMem(0xdc59, { 0x0 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xb75b, gbc.sp());
        EXPECT(0x7643, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xdc59));
        // 71 002A
        gbc.setState(0x259, 0x4e1c, 0xa4f0, 0x6f52, 0x78c3, 0xa6c6, 0x0, 0x1);
        gbc.writeMem(0x259, { 0x71 });
        gbc.writeMem(0xa6c6, { 0x0 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x4e1c, gbc.sp());
        EXPECT(0x25a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xa6c6));
        // 71 002E
        gbc.setState(0xeb95, 0xb187, 0xa900, 0xd539, 0x7dd9, 0xb105, 0x1, 0x1);
        gbc.writeMem(0xb105, { 0x0 });
        gbc.writeMem(0xeb95, { 0x71 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xb187, gbc.sp());
        EXPECT(0xeb96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0xb105));
        EXPECT(0x71, gbc.readMem(0xeb95));
        // 71 002F
        gbc.setState(0x920d, 0x3b37, 0x1030, 0xf483, 0x5cdd, 0xc56e, 0x1, 0x1);
        gbc.writeMem(0x920d, { 0x71 });
        gbc.writeMem(0xc56e, { 0x0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x3b37, gbc.sp());
        EXPECT(0x920e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0x920d));
        EXPECT(0x83, gbc.readMem(0xc56e));
        // 71 0033
        gbc.setState(0xb91d, 0xe66f, 0xccd0, 0xd7ff, 0xbce9, 0xabd4, 0x1, 0x0);
        gbc.writeMem(0xabd4, { 0x0 });
        gbc.writeMem(0xb91d, { 0x71 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xe66f, gbc.sp());
        EXPECT(0xb91e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xabd4));
        EXPECT(0x71, gbc.readMem(0xb91d));
        // 71 0034
        gbc.setState(0xd8ee, 0x676, 0x9e50, 0xc28a, 0xe984, 0x9cfa, 0x1, 0x1);
        gbc.writeMem(0x9cfa, { 0x0 });
        gbc.writeMem(0xd8ee, { 0x71 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x676, gbc.sp());
        EXPECT(0xd8ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x9cfa));
        EXPECT(0x71, gbc.readMem(0xd8ee));
        // 71 0038
        gbc.setState(0x111e, 0x9278, 0x7d90, 0xeb7, 0x6b93, 0xe552, 0x0, 0x0);
        gbc.writeMem(0x111e, { 0x71 });
        gbc.writeMem(0xe552, { 0x0 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x9278, gbc.sp());
        EXPECT(0x111f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xe552));
        // 71 003A
        gbc.setState(0x69d8, 0xda4e, 0xf2d0, 0xaf54, 0x4876, 0x9b75, 0x1, 0x1);
        gbc.writeMem(0x69d8, { 0x71 });
        gbc.writeMem(0x9b75, { 0x0 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xda4e, gbc.sp());
        EXPECT(0x69d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x54, gbc.readMem(0x9b75));
        // 71 003D
        gbc.setState(0x596c, 0x6fa5, 0x4ff0, 0xa22c, 0x8711, 0xbbb4, 0x1, 0x0);
        gbc.writeMem(0x596c, { 0x71 });
        gbc.writeMem(0xbbb4, { 0x0 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x6fa5, gbc.sp());
        EXPECT(0x596d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xbbb4));
        // 71 003E
        gbc.setState(0x7a23, 0xe518, 0xd000, 0x22b8, 0xbb11, 0xf7b1, 0x0, 0x0);
        gbc.writeMem(0x7a23, { 0x71 });
        gbc.writeMem(0xf7b1, { 0x0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xe518, gbc.sp());
        EXPECT(0x7a24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0xf7b1));
        // 71 0040
        gbc.setState(0x7946, 0xce0b, 0xe000, 0xe52b, 0x1058, 0xc63d, 0x1, 0x1);
        gbc.writeMem(0x7946, { 0x71 });
        gbc.writeMem(0xc63d, { 0x0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xce0b, gbc.sp());
        EXPECT(0x7947, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xc63d));
        // 71 0044
        gbc.setState(0x4e6f, 0x2ad9, 0x4fb0, 0x404d, 0x1a77, 0xd38c, 0x1, 0x0);
        gbc.writeMem(0x4e6f, { 0x71 });
        gbc.writeMem(0xd38c, { 0x0 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x2ad9, gbc.sp());
        EXPECT(0x4e70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xd38c));
        // 71 0047
        gbc.setState(0xd47, 0x5cf5, 0xa400, 0xc0f2, 0x84fd, 0xe0e9, 0x0, 0x0);
        gbc.writeMem(0xd47, { 0x71 });
        gbc.writeMem(0xe0e9, { 0x0 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x5cf5, gbc.sp());
        EXPECT(0xd48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0xe0e9));
        // 71 004A
        gbc.setState(0x572, 0x3741, 0x5830, 0x36fb, 0x808, 0xa4d6, 0x1, 0x1);
        gbc.writeMem(0x572, { 0x71 });
        gbc.writeMem(0xa4d6, { 0x0 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x3741, gbc.sp());
        EXPECT(0x573, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfb, gbc.readMem(0xa4d6));
        // 71 0050
        gbc.setState(0xea98, 0x93af, 0x2b70, 0xea84, 0x3adc, 0xbacb, 0x1, 0x0);
        gbc.writeMem(0xbacb, { 0x0 });
        gbc.writeMem(0xea98, { 0x71 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x93af, gbc.sp());
        EXPECT(0xea99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0xbacb));
        EXPECT(0x71, gbc.readMem(0xea98));
        // 71 0052
        gbc.setState(0x4c5d, 0x7b74, 0x8740, 0x1453, 0xcb21, 0xa27f, 0x1, 0x1);
        gbc.writeMem(0x4c5d, { 0x71 });
        gbc.writeMem(0xa27f, { 0x0 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x7b74, gbc.sp());
        EXPECT(0x4c5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xa27f));
        // 71 0053
        gbc.setState(0x190e, 0xf879, 0x62f0, 0xc5b3, 0x6e2b, 0x85d8, 0x0, 0x0);
        gbc.writeMem(0x190e, { 0x71 });
        gbc.writeMem(0x85d8, { 0x0 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xf879, gbc.sp());
        EXPECT(0x190f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x85d8));
        // 71 0054
        gbc.setState(0xe83a, 0xcd7b, 0x6620, 0x9ce4, 0x39c8, 0xf8bf, 0x1, 0x1);
        gbc.writeMem(0xe83a, { 0x71 });
        gbc.writeMem(0xf8bf, { 0x0 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xcd7b, gbc.sp());
        EXPECT(0xe83b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xe83a));
        EXPECT(0xe4, gbc.readMem(0xf8bf));
        // 71 0058
        gbc.setState(0xb9a, 0x55f5, 0x2490, 0x6dac, 0x5c0, 0xa807, 0x1, 0x0);
        gbc.writeMem(0xb9a, { 0x71 });
        gbc.writeMem(0xa807, { 0x0 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x55f5, gbc.sp());
        EXPECT(0xb9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xa807));
        // 71 0059
        gbc.setState(0x863e, 0x5ad6, 0xf580, 0xc21c, 0xb74b, 0xdbbe, 0x1, 0x0);
        gbc.writeMem(0x863e, { 0x71 });
        gbc.writeMem(0xdbbe, { 0x0 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x5ad6, gbc.sp());
        EXPECT(0x863f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0x863e));
        EXPECT(0x1c, gbc.readMem(0xdbbe));
        // 71 005A
        gbc.setState(0xe370, 0xc653, 0xb620, 0xbbd1, 0x129c, 0xd4fd, 0x0, 0x1);
        gbc.writeMem(0xd4fd, { 0x0 });
        gbc.writeMem(0xe370, { 0x71 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xc653, gbc.sp());
        EXPECT(0xe371, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0xd4fd));
        EXPECT(0x71, gbc.readMem(0xe370));
        // 71 0060
        gbc.setState(0x71db, 0x3959, 0x2d70, 0xa14f, 0x2a14, 0x9b1a, 0x0, 0x0);
        gbc.writeMem(0x71db, { 0x71 });
        gbc.writeMem(0x9b1a, { 0x0 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x3959, gbc.sp());
        EXPECT(0x71dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4f, gbc.readMem(0x9b1a));
        // 71 0062
        gbc.setState(0x61e3, 0xccd5, 0xbe0, 0xc216, 0x2ea7, 0xb96e, 0x0, 0x0);
        gbc.writeMem(0x61e3, { 0x71 });
        gbc.writeMem(0xb96e, { 0x0 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xccd5, gbc.sp());
        EXPECT(0x61e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xb96e));
        // 71 0063
        gbc.setState(0x665b, 0x250e, 0x7080, 0x2f3e, 0x36f8, 0xcb0b, 0x0, 0x1);
        gbc.writeMem(0x665b, { 0x71 });
        gbc.writeMem(0xcb0b, { 0x0 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x250e, gbc.sp());
        EXPECT(0x665c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xcb0b));
        // 71 0064
        gbc.setState(0xa10a, 0xcc6, 0xc990, 0x3ca3, 0x25d6, 0xfc08, 0x0, 0x1);
        gbc.writeMem(0xa10a, { 0x71 });
        gbc.writeMem(0xfc08, { 0x0 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xcc6, gbc.sp());
        EXPECT(0xa10b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xa10a));
        EXPECT(0xa3, gbc.readMem(0xfc08));
        // 71 0067
        gbc.setState(0xf9e, 0x4090, 0x9800, 0x1d4d, 0x8397, 0xdea6, 0x0, 0x1);
        gbc.writeMem(0xf9e, { 0x71 });
        gbc.writeMem(0xdea6, { 0x0 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x4090, gbc.sp());
        EXPECT(0xf9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xdea6));
        // 71 0068
        gbc.setState(0xce3, 0x2775, 0x8950, 0x1761, 0x54bd, 0xaec3, 0x0, 0x0);
        gbc.writeMem(0xce3, { 0x71 });
        gbc.writeMem(0xaec3, { 0x0 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x2775, gbc.sp());
        EXPECT(0xce4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xaec3));
        // 71 0069
        gbc.setState(0xc75d, 0x77d2, 0x1e30, 0x3f07, 0xfce8, 0x9a07, 0x1, 0x1);
        gbc.writeMem(0x9a07, { 0x0 });
        gbc.writeMem(0xc75d, { 0x71 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x77d2, gbc.sp());
        EXPECT(0xc75e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x9a07));
        EXPECT(0x71, gbc.readMem(0xc75d));
        // 71 006A
        gbc.setState(0x1ff4, 0x95ac, 0x9a90, 0x5844, 0x3732, 0xc425, 0x1, 0x0);
        gbc.writeMem(0x1ff4, { 0x71 });
        gbc.writeMem(0xc425, { 0x0 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x95ac, gbc.sp());
        EXPECT(0x1ff5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xc425));
        // 71 006C
        gbc.setState(0x94e8, 0x2945, 0x4a60, 0x792d, 0x2ec, 0xec8d, 0x0, 0x0);
        gbc.writeMem(0x94e8, { 0x71 });
        gbc.writeMem(0xec8d, { 0x0 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x2945, gbc.sp());
        EXPECT(0x94e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0x94e8));
        EXPECT(0x2d, gbc.readMem(0xec8d));
        // 71 006F
        gbc.setState(0xa42b, 0xc682, 0xa360, 0x17f4, 0xfef, 0xdc0e, 0x0, 0x1);
        gbc.writeMem(0xa42b, { 0x71 });
        gbc.writeMem(0xdc0e, { 0x0 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xc682, gbc.sp());
        EXPECT(0xa42c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xa42b));
        EXPECT(0xf4, gbc.readMem(0xdc0e));
        // 71 0071
        gbc.setState(0x76c1, 0x4d65, 0x1900, 0x36b, 0xc150, 0x9428, 0x0, 0x0);
        gbc.writeMem(0x76c1, { 0x71 });
        gbc.writeMem(0x9428, { 0x0 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x4d65, gbc.sp());
        EXPECT(0x76c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6b, gbc.readMem(0x9428));
        // 71 0073
        gbc.setState(0x9c35, 0xf3e1, 0x8740, 0x6614, 0x51d4, 0x9be0, 0x1, 0x1);
        gbc.writeMem(0x9be0, { 0x0 });
        gbc.writeMem(0x9c35, { 0x71 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xf3e1, gbc.sp());
        EXPECT(0x9c36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x9be0));
        EXPECT(0x71, gbc.readMem(0x9c35));
        // 71 0074
        gbc.setState(0x40c2, 0x1d11, 0xaf30, 0x9382, 0x94f9, 0xf186, 0x0, 0x1);
        gbc.writeMem(0x40c2, { 0x71 });
        gbc.writeMem(0xf186, { 0x0 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x1d11, gbc.sp());
        EXPECT(0x40c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xf186));
        // 71 0076
        gbc.setState(0xcae5, 0xb151, 0x5470, 0x5876, 0xa8eb, 0xa089, 0x0, 0x1);
        gbc.writeMem(0xa089, { 0x0 });
        gbc.writeMem(0xcae5, { 0x71 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xb151, gbc.sp());
        EXPECT(0xcae6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xa089));
        EXPECT(0x71, gbc.readMem(0xcae5));
        // 71 007A
        gbc.setState(0x8a9b, 0x4d96, 0xede0, 0x1ee2, 0xaaa6, 0xb390, 0x0, 0x0);
        gbc.writeMem(0x8a9b, { 0x71 });
        gbc.writeMem(0xb390, { 0x0 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x4d96, gbc.sp());
        EXPECT(0x8a9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0x8a9b));
        EXPECT(0xe2, gbc.readMem(0xb390));
        // 71 0081
        gbc.setState(0x18a5, 0xf569, 0xfcc0, 0xc9ec, 0xc695, 0xdf9b, 0x1, 0x0);
        gbc.writeMem(0x18a5, { 0x71 });
        gbc.writeMem(0xdf9b, { 0x0 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xf569, gbc.sp());
        EXPECT(0x18a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0xdf9b));
        // 71 0084
        gbc.setState(0x9ded, 0xa686, 0xa070, 0xd954, 0xcba8, 0xec28, 0x0, 0x0);
        gbc.writeMem(0x9ded, { 0x71 });
        gbc.writeMem(0xec28, { 0x0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xa686, gbc.sp());
        EXPECT(0x9dee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0x9ded));
        EXPECT(0x54, gbc.readMem(0xec28));
        // 71 0089
        gbc.setState(0xcb91, 0xf776, 0x85d0, 0x5ca7, 0x215c, 0xd174, 0x1, 0x1);
        gbc.writeMem(0xcb91, { 0x71 });
        gbc.writeMem(0xd174, { 0x0 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xf776, gbc.sp());
        EXPECT(0xcb92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xcb91));
        EXPECT(0xa7, gbc.readMem(0xd174));
        // 71 008B
        gbc.setState(0xe835, 0x9fef, 0xc9e0, 0xbdd8, 0x573e, 0x9c97, 0x0, 0x1);
        gbc.writeMem(0x9c97, { 0x0 });
        gbc.writeMem(0xe835, { 0x71 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x9fef, gbc.sp());
        EXPECT(0xe836, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0x9c97));
        EXPECT(0x71, gbc.readMem(0xe835));
        // 71 008C
        gbc.setState(0x112f, 0x7c7c, 0xa810, 0x3a1a, 0x4027, 0xc4f6, 0x0, 0x1);
        gbc.writeMem(0x112f, { 0x71 });
        gbc.writeMem(0xc4f6, { 0x0 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x7c7c, gbc.sp());
        EXPECT(0x1130, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xc4f6));
        // 71 0090
        gbc.setState(0x88bb, 0x634c, 0x4d70, 0x85f, 0x4ce8, 0x9a84, 0x0, 0x1);
        gbc.writeMem(0x88bb, { 0x71 });
        gbc.writeMem(0x9a84, { 0x0 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x634c, gbc.sp());
        EXPECT(0x88bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0x88bb));
        EXPECT(0x5f, gbc.readMem(0x9a84));
        // 71 0094
        gbc.setState(0x2880, 0x3536, 0x23f0, 0xefa, 0x6ec7, 0xdef3, 0x1, 0x1);
        gbc.writeMem(0x2880, { 0x71 });
        gbc.writeMem(0xdef3, { 0x0 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x3536, gbc.sp());
        EXPECT(0x2881, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xdef3));
        // 71 0095
        gbc.setState(0x6cb8, 0x189d, 0xd2c0, 0xbffc, 0x7cbf, 0xe261, 0x0, 0x1);
        gbc.writeMem(0x6cb8, { 0x71 });
        gbc.writeMem(0xe261, { 0x0 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x189d, gbc.sp());
        EXPECT(0x6cb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfc, gbc.readMem(0xe261));
        // 71 0099
        gbc.setState(0x4d68, 0x4ad, 0xf380, 0x7b7d, 0xbdd9, 0xf5b3, 0x1, 0x0);
        gbc.writeMem(0x4d68, { 0x71 });
        gbc.writeMem(0xf5b3, { 0x0 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x4ad, gbc.sp());
        EXPECT(0x4d69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xf5b3));
        // 71 009A
        gbc.setState(0x4cc9, 0x9a26, 0x42e0, 0xadf9, 0xd2e4, 0xfdbb, 0x1, 0x1);
        gbc.writeMem(0x4cc9, { 0x71 });
        gbc.writeMem(0xfdbb, { 0x0 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x9a26, gbc.sp());
        EXPECT(0x4cca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf9, gbc.readMem(0xfdbb));
        // 71 009B
        gbc.setState(0xd9ec, 0x3a29, 0x7e10, 0x6894, 0x8ce7, 0xb1cd, 0x1, 0x0);
        gbc.writeMem(0xb1cd, { 0x0 });
        gbc.writeMem(0xd9ec, { 0x71 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x3a29, gbc.sp());
        EXPECT(0xd9ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xb1cd));
        EXPECT(0x71, gbc.readMem(0xd9ec));
        // 71 009D
        gbc.setState(0xcd43, 0x9b0e, 0xa000, 0xdfe9, 0x1666, 0x9d2d, 0x0, 0x1);
        gbc.writeMem(0x9d2d, { 0x0 });
        gbc.writeMem(0xcd43, { 0x71 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x9b0e, gbc.sp());
        EXPECT(0xcd44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x9d2d));
        EXPECT(0x71, gbc.readMem(0xcd43));
        // 71 009E
        gbc.setState(0x3efe, 0x5d6c, 0x4ab0, 0x7d28, 0xbfcb, 0xd0a7, 0x0, 0x1);
        gbc.writeMem(0x3efe, { 0x71 });
        gbc.writeMem(0xd0a7, { 0x0 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x5d6c, gbc.sp());
        EXPECT(0x3eff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x28, gbc.readMem(0xd0a7));
        // 71 00A2
        gbc.setState(0x1e9c, 0xef5, 0x6060, 0xaad9, 0x1735, 0x8fb0, 0x0, 0x0);
        gbc.writeMem(0x1e9c, { 0x71 });
        gbc.writeMem(0x8fb0, { 0x0 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xef5, gbc.sp());
        EXPECT(0x1e9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x8fb0));
        // 71 00A4
        gbc.setState(0xe9be, 0x4ade, 0x2ab0, 0xdbf8, 0xd33f, 0xecfc, 0x0, 0x0);
        gbc.writeMem(0xe9be, { 0x71 });
        gbc.writeMem(0xecfc, { 0x0 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x4ade, gbc.sp());
        EXPECT(0xe9bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xe9be));
        EXPECT(0xf8, gbc.readMem(0xecfc));
        // 71 00A5
        gbc.setState(0x1ac8, 0x80f5, 0xc640, 0x7aca, 0xb1cc, 0x87eb, 0x1, 0x1);
        gbc.writeMem(0x1ac8, { 0x71 });
        gbc.writeMem(0x87eb, { 0x0 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x80f5, gbc.sp());
        EXPECT(0x1ac9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0x87eb));
        // 71 00A6
        gbc.setState(0xddcd, 0x6b82, 0x3b40, 0x2eb5, 0x3b20, 0x91ca, 0x1, 0x0);
        gbc.writeMem(0x91ca, { 0x0 });
        gbc.writeMem(0xddcd, { 0x71 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x6b82, gbc.sp());
        EXPECT(0xddce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x91ca));
        EXPECT(0x71, gbc.readMem(0xddcd));
        // 71 00A9
        gbc.setState(0xd621, 0x9f0c, 0xa6c0, 0x17d4, 0x51bf, 0x9c73, 0x0, 0x1);
        gbc.writeMem(0x9c73, { 0x0 });
        gbc.writeMem(0xd621, { 0x71 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x9f0c, gbc.sp());
        EXPECT(0xd622, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x9c73));
        EXPECT(0x71, gbc.readMem(0xd621));
        // 71 00AD
        gbc.setState(0x39b2, 0x5d9e, 0xd060, 0x9c32, 0xa56, 0x9c55, 0x0, 0x1);
        gbc.writeMem(0x39b2, { 0x71 });
        gbc.writeMem(0x9c55, { 0x0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x5d9e, gbc.sp());
        EXPECT(0x39b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0x9c55));
        // 71 00B0
        gbc.setState(0x806, 0x4557, 0xdf80, 0x2d2, 0xbf0e, 0xfbb0, 0x0, 0x1);
        gbc.writeMem(0x806, { 0x71 });
        gbc.writeMem(0xfbb0, { 0x0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x4557, gbc.sp());
        EXPECT(0x807, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0xfbb0));
        // 71 00B1
        gbc.setState(0x49c2, 0xfb6f, 0x1000, 0x1226, 0xc02e, 0xe5ca, 0x1, 0x0);
        gbc.writeMem(0x49c2, { 0x71 });
        gbc.writeMem(0xe5ca, { 0x0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xfb6f, gbc.sp());
        EXPECT(0x49c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xe5ca));
        // 71 00B3
        gbc.setState(0x3401, 0xba64, 0x7a70, 0x383b, 0xa62c, 0xd426, 0x1, 0x0);
        gbc.writeMem(0x3401, { 0x71 });
        gbc.writeMem(0xd426, { 0x0 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xba64, gbc.sp());
        EXPECT(0x3402, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xd426));
        // 71 00B4
        gbc.setState(0x7d35, 0xded1, 0x2ef0, 0x79de, 0xf471, 0xdf3e, 0x0, 0x1);
        gbc.writeMem(0x7d35, { 0x71 });
        gbc.writeMem(0xdf3e, { 0x0 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xded1, gbc.sp());
        EXPECT(0x7d36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0xdf3e));
        // 71 00B5
        gbc.setState(0x8189, 0x2a2a, 0x80c0, 0xf6ac, 0x709, 0xd25d, 0x0, 0x0);
        gbc.writeMem(0x8189, { 0x71 });
        gbc.writeMem(0xd25d, { 0x0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x2a2a, gbc.sp());
        EXPECT(0x818a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0x8189));
        EXPECT(0xac, gbc.readMem(0xd25d));
        // 71 00B7
        gbc.setState(0xb28e, 0xb5d4, 0x59a0, 0x9bdb, 0xf5e4, 0xade1, 0x1, 0x1);
        gbc.writeMem(0xade1, { 0x0 });
        gbc.writeMem(0xb28e, { 0x71 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xb5d4, gbc.sp());
        EXPECT(0xb28f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0xade1));
        EXPECT(0x71, gbc.readMem(0xb28e));
        // 71 00B8
        gbc.setState(0xb02e, 0xf060, 0x53d0, 0xca93, 0x8043, 0xadaf, 0x1, 0x1);
        gbc.writeMem(0xadaf, { 0x0 });
        gbc.writeMem(0xb02e, { 0x71 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xf060, gbc.sp());
        EXPECT(0xb02f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xadaf));
        EXPECT(0x71, gbc.readMem(0xb02e));
        // 71 00BD
        gbc.setState(0xe25e, 0x2dcf, 0xb250, 0x3b53, 0x4789, 0x804b, 0x1, 0x1);
        gbc.writeMem(0x804b, { 0x0 });
        gbc.writeMem(0xe25e, { 0x71 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x2dcf, gbc.sp());
        EXPECT(0xe25f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x804b));
        EXPECT(0x71, gbc.readMem(0xe25e));
        // 71 00BE
        gbc.setState(0xacfa, 0xfa77, 0xb60, 0x3f9d, 0x424, 0x8ef9, 0x1, 0x0);
        gbc.writeMem(0x8ef9, { 0x0 });
        gbc.writeMem(0xacfa, { 0x71 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xfa77, gbc.sp());
        EXPECT(0xacfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x8ef9));
        EXPECT(0x71, gbc.readMem(0xacfa));
        // 71 00C2
        gbc.setState(0xa9e6, 0xbb63, 0x6140, 0xfc8e, 0x1206, 0xf7b5, 0x1, 0x1);
        gbc.writeMem(0xa9e6, { 0x71 });
        gbc.writeMem(0xf7b5, { 0x0 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xbb63, gbc.sp());
        EXPECT(0xa9e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xa9e6));
        EXPECT(0x8e, gbc.readMem(0xf7b5));
        // 71 00C3
        gbc.setState(0x554e, 0x16ae, 0xd4d0, 0x7300, 0x799c, 0xe950, 0x0, 0x0);
        gbc.writeMem(0x554e, { 0x71 });
        gbc.writeMem(0xe950, { 0x0 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x16ae, gbc.sp());
        EXPECT(0x554f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xe950));
        // 71 00C8
        gbc.setState(0xe65b, 0x6d87, 0x9500, 0x22a1, 0xed44, 0xbca1, 0x1, 0x1);
        gbc.writeMem(0xbca1, { 0x0 });
        gbc.writeMem(0xe65b, { 0x71 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x6d87, gbc.sp());
        EXPECT(0xe65c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xbca1));
        EXPECT(0x71, gbc.readMem(0xe65b));
        // 71 00CA
        gbc.setState(0x91bc, 0x10c0, 0x83b0, 0x6f88, 0xe53c, 0xda79, 0x1, 0x1);
        gbc.writeMem(0x91bc, { 0x71 });
        gbc.writeMem(0xda79, { 0x0 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x10c0, gbc.sp());
        EXPECT(0x91bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0x91bc));
        EXPECT(0x88, gbc.readMem(0xda79));
        // 71 00CD
        gbc.setState(0x7a8e, 0x19ca, 0x9ca0, 0x6758, 0xab4, 0xca63, 0x0, 0x0);
        gbc.writeMem(0x7a8e, { 0x71 });
        gbc.writeMem(0xca63, { 0x0 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x19ca, gbc.sp());
        EXPECT(0x7a8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xca63));
        // 71 00CE
        gbc.setState(0x4648, 0x85d, 0x9ac0, 0x50a4, 0xe6cf, 0xe15f, 0x0, 0x0);
        gbc.writeMem(0x4648, { 0x71 });
        gbc.writeMem(0xe15f, { 0x0 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x85d, gbc.sp());
        EXPECT(0x4649, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xe15f));
        // 71 00CF
        gbc.setState(0x6172, 0xd0fe, 0xab10, 0x1b1a, 0x9419, 0x978e, 0x1, 0x0);
        gbc.writeMem(0x6172, { 0x71 });
        gbc.writeMem(0x978e, { 0x0 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xd0fe, gbc.sp());
        EXPECT(0x6173, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x978e));
        // 71 00D1
        gbc.setState(0xbb5c, 0xe546, 0x41b0, 0x552d, 0x2765, 0xe16c, 0x1, 0x1);
        gbc.writeMem(0xbb5c, { 0x71 });
        gbc.writeMem(0xe16c, { 0x0 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xe546, gbc.sp());
        EXPECT(0xbb5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xbb5c));
        EXPECT(0x2d, gbc.readMem(0xe16c));
        // 71 00D2
        gbc.setState(0xe3ff, 0xfa8e, 0xec90, 0x8b94, 0xb03, 0x85bf, 0x1, 0x0);
        gbc.writeMem(0x85bf, { 0x0 });
        gbc.writeMem(0xe3ff, { 0x71 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xfa8e, gbc.sp());
        EXPECT(0xe400, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x85bf));
        EXPECT(0x71, gbc.readMem(0xe3ff));
        // 71 00D3
        gbc.setState(0xe366, 0x3e40, 0x9110, 0xeadf, 0xfbe4, 0xbaa3, 0x1, 0x1);
        gbc.writeMem(0xbaa3, { 0x0 });
        gbc.writeMem(0xe366, { 0x71 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x3e40, gbc.sp());
        EXPECT(0xe367, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0xbaa3));
        EXPECT(0x71, gbc.readMem(0xe366));
        // 71 00D4
        gbc.setState(0xa827, 0x5af8, 0x5240, 0x50f, 0x6cb0, 0xf2b8, 0x1, 0x0);
        gbc.writeMem(0xa827, { 0x71 });
        gbc.writeMem(0xf2b8, { 0x0 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x5af8, gbc.sp());
        EXPECT(0xa828, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xa827));
        EXPECT(0xf, gbc.readMem(0xf2b8));
        // 71 00D7
        gbc.setState(0xd5ea, 0xe5ca, 0x19b0, 0xa73, 0x4a5d, 0xd942, 0x1, 0x0);
        gbc.writeMem(0xd5ea, { 0x71 });
        gbc.writeMem(0xd942, { 0x0 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xe5ca, gbc.sp());
        EXPECT(0xd5eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xd5ea));
        EXPECT(0x73, gbc.readMem(0xd942));
        // 71 00DA
        gbc.setState(0xa430, 0xfe4f, 0xb7f0, 0xb14, 0x7750, 0x8367, 0x0, 0x0);
        gbc.writeMem(0x8367, { 0x0 });
        gbc.writeMem(0xa430, { 0x71 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xfe4f, gbc.sp());
        EXPECT(0xa431, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x8367));
        EXPECT(0x71, gbc.readMem(0xa430));
        // 71 00DC
        gbc.setState(0x8e3c, 0x16ad, 0x7890, 0x448c, 0x9e1c, 0xcacf, 0x0, 0x0);
        gbc.writeMem(0x8e3c, { 0x71 });
        gbc.writeMem(0xcacf, { 0x0 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x16ad, gbc.sp());
        EXPECT(0x8e3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0x8e3c));
        EXPECT(0x8c, gbc.readMem(0xcacf));
        // 71 00E1
        gbc.setState(0x8612, 0x4f27, 0x7830, 0x21ce, 0x312, 0xeda6, 0x1, 0x1);
        gbc.writeMem(0x8612, { 0x71 });
        gbc.writeMem(0xeda6, { 0x0 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x4f27, gbc.sp());
        EXPECT(0x8613, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0x8612));
        EXPECT(0xce, gbc.readMem(0xeda6));
        // 71 00E2
        gbc.setState(0xcb17, 0x6e8a, 0x2c00, 0x8673, 0xcc03, 0xd04a, 0x0, 0x0);
        gbc.writeMem(0xcb17, { 0x71 });
        gbc.writeMem(0xd04a, { 0x0 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x6e8a, gbc.sp());
        EXPECT(0xcb18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xcb17));
        EXPECT(0x73, gbc.readMem(0xd04a));
        // 71 00E4
        gbc.setState(0x69a3, 0xe12b, 0x6680, 0x6d08, 0x49f8, 0xc0dd, 0x1, 0x0);
        gbc.writeMem(0x69a3, { 0x71 });
        gbc.writeMem(0xc0dd, { 0x0 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xe12b, gbc.sp());
        EXPECT(0x69a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0xc0dd));
        // 71 00E5
        gbc.setState(0x5ca9, 0xf1a8, 0xab70, 0xde5b, 0x51fa, 0xf846, 0x0, 0x0);
        gbc.writeMem(0x5ca9, { 0x71 });
        gbc.writeMem(0xf846, { 0x0 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xf1a8, gbc.sp());
        EXPECT(0x5caa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xf846));
        // 71 00E8
        gbc.setState(0x8844, 0xb30e, 0x2f10, 0x12e1, 0xc517, 0x81e9, 0x1, 0x1);
        gbc.writeMem(0x81e9, { 0x0 });
        gbc.writeMem(0x8844, { 0x71 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xb30e, gbc.sp());
        EXPECT(0x8845, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x81e9));
        EXPECT(0x71, gbc.readMem(0x8844));
        // 71 00EA
        gbc.setState(0x647b, 0x9ebd, 0x6aa0, 0x6829, 0xf036, 0xe386, 0x0, 0x1);
        gbc.writeMem(0x647b, { 0x71 });
        gbc.writeMem(0xe386, { 0x0 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x9ebd, gbc.sp());
        EXPECT(0x647c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xe386));
        // 71 00EC
        gbc.setState(0x68d, 0xfb7c, 0xd930, 0x2b3c, 0x68be, 0xd0bb, 0x0, 0x0);
        gbc.writeMem(0x68d, { 0x71 });
        gbc.writeMem(0xd0bb, { 0x0 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xfb7c, gbc.sp());
        EXPECT(0x68e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xd0bb));
        // 71 00EE
        gbc.setState(0xdc42, 0x9dda, 0x6c00, 0xb424, 0x5d40, 0x9307, 0x1, 0x0);
        gbc.writeMem(0x9307, { 0x0 });
        gbc.writeMem(0xdc42, { 0x71 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x9dda, gbc.sp());
        EXPECT(0xdc43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0x9307));
        EXPECT(0x71, gbc.readMem(0xdc42));
        // 71 00F1
        gbc.setState(0xa09d, 0xd43e, 0xfd40, 0x739e, 0x8fb2, 0xbf87, 0x1, 0x0);
        gbc.writeMem(0xa09d, { 0x71 });
        gbc.writeMem(0xbf87, { 0x0 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xd43e, gbc.sp());
        EXPECT(0xa09e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xa09d));
        EXPECT(0x9e, gbc.readMem(0xbf87));
        // 71 00F2
        gbc.setState(0x9caa, 0xb0f8, 0x1350, 0x5931, 0xe52c, 0xa2fa, 0x0, 0x1);
        gbc.writeMem(0x9caa, { 0x71 });
        gbc.writeMem(0xa2fa, { 0x0 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xb0f8, gbc.sp());
        EXPECT(0x9cab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0x9caa));
        EXPECT(0x31, gbc.readMem(0xa2fa));
        // 71 00F3
        gbc.setState(0xaf24, 0x3388, 0x4340, 0x446b, 0x7deb, 0xde23, 0x0, 0x1);
        gbc.writeMem(0xaf24, { 0x71 });
        gbc.writeMem(0xde23, { 0x0 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x3388, gbc.sp());
        EXPECT(0xaf25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xaf24));
        EXPECT(0x6b, gbc.readMem(0xde23));
        // 71 00F4
        gbc.setState(0x6cb8, 0x6cd0, 0x7b50, 0x4012, 0xb494, 0xf123, 0x1, 0x0);
        gbc.writeMem(0x6cb8, { 0x71 });
        gbc.writeMem(0xf123, { 0x0 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x6cd0, gbc.sp());
        EXPECT(0x6cb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xf123));
        // 71 00F5
        gbc.setState(0x327c, 0xd68a, 0x2b90, 0x5fb4, 0x3be5, 0xb77b, 0x0, 0x0);
        gbc.writeMem(0x327c, { 0x71 });
        gbc.writeMem(0xb77b, { 0x0 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xd68a, gbc.sp());
        EXPECT(0x327d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0xb77b));
        // 71 00F6
        gbc.setState(0x44ee, 0xcd3e, 0x5290, 0xfdd3, 0xd60c, 0xf294, 0x0, 0x1);
        gbc.writeMem(0x44ee, { 0x71 });
        gbc.writeMem(0xf294, { 0x0 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xcd3e, gbc.sp());
        EXPECT(0x44ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd3, gbc.readMem(0xf294));
        // 71 00FD
        gbc.setState(0xdf42, 0x277e, 0x5460, 0xcbb8, 0xe963, 0x996a, 0x0, 0x0);
        gbc.writeMem(0x996a, { 0x0 });
        gbc.writeMem(0xdf42, { 0x71 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x277e, gbc.sp());
        EXPECT(0xdf43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0x996a));
        EXPECT(0x71, gbc.readMem(0xdf42));
        // 71 00FF
        gbc.setState(0x7694, 0x9e52, 0xe2b0, 0x7b50, 0xe833, 0xeb16, 0x0, 0x0);
        gbc.writeMem(0x7694, { 0x71 });
        gbc.writeMem(0xeb16, { 0x0 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x9e52, gbc.sp());
        EXPECT(0x7695, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xeb16));
        // 71 0100
        gbc.setState(0x1203, 0x5a78, 0xc150, 0xcbbf, 0x7119, 0xad33, 0x0, 0x1);
        gbc.writeMem(0x1203, { 0x71 });
        gbc.writeMem(0xad33, { 0x0 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x5a78, gbc.sp());
        EXPECT(0x1204, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xad33));
        // 71 0102
        gbc.setState(0xaf0f, 0xf6a9, 0x7aa0, 0x3227, 0x1487, 0xd7e9, 0x1, 0x0);
        gbc.writeMem(0xaf0f, { 0x71 });
        gbc.writeMem(0xd7e9, { 0x0 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xf6a9, gbc.sp());
        EXPECT(0xaf10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xaf0f));
        EXPECT(0x27, gbc.readMem(0xd7e9));
        // 71 0103
        gbc.setState(0x7964, 0xbc91, 0xbcc0, 0x6b30, 0xb5a6, 0xcd9b, 0x1, 0x1);
        gbc.writeMem(0x7964, { 0x71 });
        gbc.writeMem(0xcd9b, { 0x0 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xbc91, gbc.sp());
        EXPECT(0x7965, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0xcd9b));
        // 71 010A
        gbc.setState(0x7141, 0xab9d, 0x2d0, 0xc589, 0x56fd, 0xf3c3, 0x0, 0x0);
        gbc.writeMem(0x7141, { 0x71 });
        gbc.writeMem(0xf3c3, { 0x0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xab9d, gbc.sp());
        EXPECT(0x7142, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xf3c3));
        // 71 010B
        gbc.setState(0x8741, 0xe21d, 0xb530, 0x3bc5, 0x40bc, 0xa36a, 0x0, 0x0);
        gbc.writeMem(0x8741, { 0x71 });
        gbc.writeMem(0xa36a, { 0x0 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xe21d, gbc.sp());
        EXPECT(0x8742, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0x8741));
        EXPECT(0xc5, gbc.readMem(0xa36a));
        // 71 010E
        gbc.setState(0x4ed7, 0xcf2b, 0x6810, 0xc38f, 0xb5d5, 0x8bec, 0x1, 0x0);
        gbc.writeMem(0x4ed7, { 0x71 });
        gbc.writeMem(0x8bec, { 0x0 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xcf2b, gbc.sp());
        EXPECT(0x4ed8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x8bec));
        // 71 0112
        gbc.setState(0x9f1a, 0xe8ef, 0xd500, 0xd9a2, 0x90aa, 0xe8a3, 0x0, 0x1);
        gbc.writeMem(0x9f1a, { 0x71 });
        gbc.writeMem(0xe8a3, { 0x0 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xe8ef, gbc.sp());
        EXPECT(0x9f1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0x9f1a));
        EXPECT(0xa2, gbc.readMem(0xe8a3));
        // 71 0113
        gbc.setState(0xef80, 0xa2c1, 0x9020, 0x477b, 0x22da, 0xabf5, 0x1, 0x1);
        gbc.writeMem(0xabf5, { 0x0 });
        gbc.writeMem(0xef80, { 0x71 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xa2c1, gbc.sp());
        EXPECT(0xef81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xabf5));
        EXPECT(0x71, gbc.readMem(0xef80));
        // 71 0114
        gbc.setState(0x93a1, 0xdad9, 0xf840, 0xcf2a, 0x101d, 0xc9e4, 0x0, 0x1);
        gbc.writeMem(0x93a1, { 0x71 });
        gbc.writeMem(0xc9e4, { 0x0 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xdad9, gbc.sp());
        EXPECT(0x93a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0x93a1));
        EXPECT(0x2a, gbc.readMem(0xc9e4));
        // 71 0116
        gbc.setState(0xc562, 0xed3f, 0x7250, 0x67ee, 0x9d1d, 0xc950, 0x1, 0x1);
        gbc.writeMem(0xc562, { 0x71 });
        gbc.writeMem(0xc950, { 0x0 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xed3f, gbc.sp());
        EXPECT(0xc563, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xc562));
        EXPECT(0xee, gbc.readMem(0xc950));
        // 71 0118
        gbc.setState(0x1977, 0x6781, 0xa470, 0x70d0, 0x66e0, 0xa81a, 0x1, 0x0);
        gbc.writeMem(0x1977, { 0x71 });
        gbc.writeMem(0xa81a, { 0x0 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x6781, gbc.sp());
        EXPECT(0x1978, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xa81a));
        // 71 0119
        gbc.setState(0x56b8, 0x5a7a, 0x6160, 0xea83, 0x538b, 0x80da, 0x0, 0x1);
        gbc.writeMem(0x56b8, { 0x71 });
        gbc.writeMem(0x80da, { 0x0 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x5a7a, gbc.sp());
        EXPECT(0x56b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0x80da));
        // 71 011B
        gbc.setState(0x5dad, 0x1138, 0x220, 0xd89e, 0x14cb, 0xb4b4, 0x1, 0x1);
        gbc.writeMem(0x5dad, { 0x71 });
        gbc.writeMem(0xb4b4, { 0x0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x1138, gbc.sp());
        EXPECT(0x5dae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xb4b4));
        // 71 011C
        gbc.setState(0x2bd3, 0xf0dd, 0xe7b0, 0xe40e, 0x3df7, 0xb1bf, 0x1, 0x1);
        gbc.writeMem(0x2bd3, { 0x71 });
        gbc.writeMem(0xb1bf, { 0x0 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xf0dd, gbc.sp());
        EXPECT(0x2bd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xb1bf));
        // 71 0122
        gbc.setState(0xbc7, 0x8d5a, 0xf9f0, 0xb02a, 0xb8d4, 0xba91, 0x0, 0x1);
        gbc.writeMem(0xbc7, { 0x71 });
        gbc.writeMem(0xba91, { 0x0 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x8d5a, gbc.sp());
        EXPECT(0xbc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0xba91));
        // 71 0124
        gbc.setState(0xe8ef, 0xaa33, 0x61d0, 0x6019, 0x5f4b, 0xf83b, 0x0, 0x1);
        gbc.writeMem(0xe8ef, { 0x71 });
        gbc.writeMem(0xf83b, { 0x0 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xaa33, gbc.sp());
        EXPECT(0xe8f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xe8ef));
        EXPECT(0x19, gbc.readMem(0xf83b));
        // 71 0128
        gbc.setState(0x6f42, 0x2e7c, 0x1840, 0x2406, 0xd4e6, 0x8a4a, 0x0, 0x1);
        gbc.writeMem(0x6f42, { 0x71 });
        gbc.writeMem(0x8a4a, { 0x0 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x2e7c, gbc.sp());
        EXPECT(0x6f43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x8a4a));
        // 71 012A
        gbc.setState(0xe60, 0xc8a1, 0x940, 0xddb9, 0xb89e, 0xd421, 0x0, 0x1);
        gbc.writeMem(0xe60, { 0x71 });
        gbc.writeMem(0xd421, { 0x0 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xc8a1, gbc.sp());
        EXPECT(0xe61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xd421));
        // 71 012C
        gbc.setState(0x7c6b, 0xcfc0, 0x83a0, 0x3b9a, 0x3c28, 0xf37e, 0x0, 0x1);
        gbc.writeMem(0x7c6b, { 0x71 });
        gbc.writeMem(0xf37e, { 0x0 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xcfc0, gbc.sp());
        EXPECT(0x7c6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xf37e));
        // 71 0134
        gbc.setState(0x1edc, 0x3a84, 0xf770, 0x25ff, 0x2b00, 0x8bfd, 0x1, 0x1);
        gbc.writeMem(0x1edc, { 0x71 });
        gbc.writeMem(0x8bfd, { 0x0 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x3a84, gbc.sp());
        EXPECT(0x1edd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x8bfd));
        // 71 0135
        gbc.setState(0xe057, 0xe09c, 0x6ae0, 0x4ecd, 0x56fc, 0xa21b, 0x1, 0x0);
        gbc.writeMem(0xa21b, { 0x0 });
        gbc.writeMem(0xe057, { 0x71 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xe09c, gbc.sp());
        EXPECT(0xe058, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0xa21b));
        EXPECT(0x71, gbc.readMem(0xe057));
        // 71 0138
        gbc.setState(0xef67, 0x9057, 0x7930, 0x4610, 0x88d, 0xbc1b, 0x0, 0x0);
        gbc.writeMem(0xbc1b, { 0x0 });
        gbc.writeMem(0xef67, { 0x71 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x9057, gbc.sp());
        EXPECT(0xef68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xbc1b));
        EXPECT(0x71, gbc.readMem(0xef67));
        // 71 0139
        gbc.setState(0xaf36, 0x263c, 0x3f80, 0x739c, 0x951, 0xc2e8, 0x0, 0x1);
        gbc.writeMem(0xaf36, { 0x71 });
        gbc.writeMem(0xc2e8, { 0x0 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x263c, gbc.sp());
        EXPECT(0xaf37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xaf36));
        EXPECT(0x9c, gbc.readMem(0xc2e8));
        // 71 013A
        gbc.setState(0xe003, 0x4bd7, 0x3fe0, 0xba06, 0x4237, 0xb7f2, 0x1, 0x0);
        gbc.writeMem(0xb7f2, { 0x0 });
        gbc.writeMem(0xe003, { 0x71 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x4bd7, gbc.sp());
        EXPECT(0xe004, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xb7f2));
        EXPECT(0x71, gbc.readMem(0xe003));
        // 71 013C
        gbc.setState(0xccaf, 0x261b, 0x8bb0, 0x348e, 0xc6e4, 0xc83a, 0x1, 0x1);
        gbc.writeMem(0xc83a, { 0x0 });
        gbc.writeMem(0xccaf, { 0x71 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x261b, gbc.sp());
        EXPECT(0xccb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0xc83a));
        EXPECT(0x71, gbc.readMem(0xccaf));
        // 71 013D
        gbc.setState(0xd949, 0xd4c9, 0x5340, 0x20b0, 0xbffc, 0x9dd7, 0x1, 0x1);
        gbc.writeMem(0x9dd7, { 0x0 });
        gbc.writeMem(0xd949, { 0x71 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xd4c9, gbc.sp());
        EXPECT(0xd94a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x9dd7));
        EXPECT(0x71, gbc.readMem(0xd949));
        // 71 013E
        gbc.setState(0x9e3b, 0x9e8c, 0x4300, 0xf72e, 0xd5fd, 0xc982, 0x1, 0x0);
        gbc.writeMem(0x9e3b, { 0x71 });
        gbc.writeMem(0xc982, { 0x0 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x9e8c, gbc.sp());
        EXPECT(0x9e3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0x9e3b));
        EXPECT(0x2e, gbc.readMem(0xc982));
        // 71 013F
        gbc.setState(0xc62e, 0xca1b, 0x2a90, 0xd19d, 0xba39, 0xd177, 0x0, 0x1);
        gbc.writeMem(0xc62e, { 0x71 });
        gbc.writeMem(0xd177, { 0x0 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xca1b, gbc.sp());
        EXPECT(0xc62f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xc62e));
        EXPECT(0x9d, gbc.readMem(0xd177));
        // 71 0142
        gbc.setState(0xe464, 0x3b23, 0x1380, 0x42ce, 0x1b7f, 0xb582, 0x0, 0x0);
        gbc.writeMem(0xb582, { 0x0 });
        gbc.writeMem(0xe464, { 0x71 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x3b23, gbc.sp());
        EXPECT(0xe465, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0xb582));
        EXPECT(0x71, gbc.readMem(0xe464));
        // 71 0143
        gbc.setState(0x842, 0x4949, 0xad80, 0x9663, 0x1d3c, 0xe914, 0x0, 0x1);
        gbc.writeMem(0x842, { 0x71 });
        gbc.writeMem(0xe914, { 0x0 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x4949, gbc.sp());
        EXPECT(0x843, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0xe914));
        // 71 0144
        gbc.setState(0x9cb9, 0x5ed3, 0x9560, 0x2c41, 0xe912, 0xb612, 0x1, 0x0);
        gbc.writeMem(0x9cb9, { 0x71 });
        gbc.writeMem(0xb612, { 0x0 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x5ed3, gbc.sp());
        EXPECT(0x9cba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0x9cb9));
        EXPECT(0x41, gbc.readMem(0xb612));
        // 71 0146
        gbc.setState(0x4887, 0xd128, 0xa0, 0x74bb, 0x8483, 0xe0f7, 0x1, 0x1);
        gbc.writeMem(0x4887, { 0x71 });
        gbc.writeMem(0xe0f7, { 0x0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xd128, gbc.sp());
        EXPECT(0x4888, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xe0f7));
        // 71 0148
        gbc.setState(0x9d, 0x9ceb, 0x2890, 0x5b81, 0x7363, 0xbd2d, 0x0, 0x1);
        gbc.writeMem(0x9d, { 0x71 });
        gbc.writeMem(0xbd2d, { 0x0 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x9ceb, gbc.sp());
        EXPECT(0x9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xbd2d));
        // 71 014B
        gbc.setState(0x9e80, 0x5c47, 0x7db0, 0x1b8, 0x9a64, 0xefa5, 0x1, 0x1);
        gbc.writeMem(0x9e80, { 0x71 });
        gbc.writeMem(0xefa5, { 0x0 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x5c47, gbc.sp());
        EXPECT(0x9e81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0x9e80));
        EXPECT(0xb8, gbc.readMem(0xefa5));
        // 71 014C
        gbc.setState(0xd021, 0x7eb4, 0xa0, 0xf22d, 0xed4c, 0x8b04, 0x0, 0x1);
        gbc.writeMem(0x8b04, { 0x0 });
        gbc.writeMem(0xd021, { 0x71 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x7eb4, gbc.sp());
        EXPECT(0xd022, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x8b04));
        EXPECT(0x71, gbc.readMem(0xd021));
        // 71 014E
        gbc.setState(0x8330, 0x4f9f, 0x1140, 0xe712, 0x9dd6, 0xd809, 0x0, 0x1);
        gbc.writeMem(0x8330, { 0x71 });
        gbc.writeMem(0xd809, { 0x0 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x4f9f, gbc.sp());
        EXPECT(0x8331, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0x8330));
        EXPECT(0x12, gbc.readMem(0xd809));
        // 71 0150
        gbc.setState(0xc971, 0x1f0c, 0x2d90, 0x9354, 0x80c0, 0xa258, 0x0, 0x0);
        gbc.writeMem(0xa258, { 0x0 });
        gbc.writeMem(0xc971, { 0x71 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x1f0c, gbc.sp());
        EXPECT(0xc972, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x54, gbc.readMem(0xa258));
        EXPECT(0x71, gbc.readMem(0xc971));
        // 71 0153
        gbc.setState(0xc957, 0xa6d5, 0xcb70, 0x4d51, 0xddc0, 0x8784, 0x1, 0x0);
        gbc.writeMem(0x8784, { 0x0 });
        gbc.writeMem(0xc957, { 0x71 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xa6d5, gbc.sp());
        EXPECT(0xc958, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x8784));
        EXPECT(0x71, gbc.readMem(0xc957));
        // 71 0155
        gbc.setState(0xdec2, 0x429a, 0x5850, 0xf791, 0xebbd, 0xd079, 0x0, 0x1);
        gbc.writeMem(0xd079, { 0x0 });
        gbc.writeMem(0xdec2, { 0x71 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x429a, gbc.sp());
        EXPECT(0xdec3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xd079));
        EXPECT(0x71, gbc.readMem(0xdec2));
        // 71 0156
        gbc.setState(0xbe0, 0x1a41, 0x3c0, 0x438, 0xa677, 0x8779, 0x0, 0x0);
        gbc.writeMem(0xbe0, { 0x71 });
        gbc.writeMem(0x8779, { 0x0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x1a41, gbc.sp());
        EXPECT(0xbe1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x8779));
        // 71 0157
        gbc.setState(0x7ee7, 0x5819, 0x220, 0xa808, 0xbfd9, 0xe5db, 0x0, 0x0);
        gbc.writeMem(0x7ee7, { 0x71 });
        gbc.writeMem(0xe5db, { 0x0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x5819, gbc.sp());
        EXPECT(0x7ee8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0xe5db));
        // 71 0158
        gbc.setState(0xb72f, 0x1c0b, 0xc200, 0x75ee, 0xa3e7, 0xbc5c, 0x1, 0x1);
        gbc.writeMem(0xb72f, { 0x71 });
        gbc.writeMem(0xbc5c, { 0x0 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x1c0b, gbc.sp());
        EXPECT(0xb730, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xb72f));
        EXPECT(0xee, gbc.readMem(0xbc5c));
        // 71 0162
        gbc.setState(0x973e, 0x4fe3, 0xb080, 0xee5a, 0xd12e, 0xfb81, 0x0, 0x0);
        gbc.writeMem(0x973e, { 0x71 });
        gbc.writeMem(0xfb81, { 0x0 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x4fe3, gbc.sp());
        EXPECT(0x973f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0x973e));
        EXPECT(0x5a, gbc.readMem(0xfb81));
        // 71 0163
        gbc.setState(0xb83c, 0xf8c2, 0x7980, 0x6830, 0x176f, 0xb3cf, 0x1, 0x0);
        gbc.writeMem(0xb3cf, { 0x0 });
        gbc.writeMem(0xb83c, { 0x71 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xf8c2, gbc.sp());
        EXPECT(0xb83d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0xb3cf));
        EXPECT(0x71, gbc.readMem(0xb83c));
        // 71 0165
        gbc.setState(0x609e, 0xb4ac, 0xa00, 0xd66a, 0xde8e, 0xf514, 0x1, 0x1);
        gbc.writeMem(0x609e, { 0x71 });
        gbc.writeMem(0xf514, { 0x0 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xb4ac, gbc.sp());
        EXPECT(0x609f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xf514));
        // 71 016B
        gbc.setState(0x58da, 0xd5cf, 0x6ff0, 0xcb39, 0x924b, 0xa84e, 0x1, 0x0);
        gbc.writeMem(0x58da, { 0x71 });
        gbc.writeMem(0xa84e, { 0x0 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xd5cf, gbc.sp());
        EXPECT(0x58db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0xa84e));
        // 71 016D
        gbc.setState(0x997e, 0x12cb, 0xd800, 0x554b, 0x2467, 0xc293, 0x1, 0x1);
        gbc.writeMem(0x997e, { 0x71 });
        gbc.writeMem(0xc293, { 0x0 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x12cb, gbc.sp());
        EXPECT(0x997f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0x997e));
        EXPECT(0x4b, gbc.readMem(0xc293));
        // 71 0170
        gbc.setState(0x2f1d, 0xdb6e, 0x6730, 0x2759, 0x5f28, 0xaf89, 0x0, 0x1);
        gbc.writeMem(0x2f1d, { 0x71 });
        gbc.writeMem(0xaf89, { 0x0 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xdb6e, gbc.sp());
        EXPECT(0x2f1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x59, gbc.readMem(0xaf89));
        // 71 0171
        gbc.setState(0xeecb, 0x628c, 0xfdd0, 0x857b, 0xf8cf, 0xe4ee, 0x0, 0x0);
        gbc.writeMem(0xe4ee, { 0x0 });
        gbc.writeMem(0xeecb, { 0x71 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x628c, gbc.sp());
        EXPECT(0xeecc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xe4ee));
        EXPECT(0x71, gbc.readMem(0xeecb));
        // 71 0173
        gbc.setState(0xe86a, 0xf5be, 0xf840, 0xdeac, 0xf167, 0xefce, 0x1, 0x0);
        gbc.writeMem(0xe86a, { 0x71 });
        gbc.writeMem(0xefce, { 0x0 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xf5be, gbc.sp());
        EXPECT(0xe86b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xe86a));
        EXPECT(0xac, gbc.readMem(0xefce));
        // 71 0176
        gbc.setState(0x57d9, 0x241b, 0x7920, 0x5b4, 0x523d, 0xa518, 0x0, 0x1);
        gbc.writeMem(0x57d9, { 0x71 });
        gbc.writeMem(0xa518, { 0x0 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x241b, gbc.sp());
        EXPECT(0x57da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0xa518));
        // 71 017A
        gbc.setState(0x8c1e, 0x21b1, 0x3c30, 0xfd30, 0x9ede, 0xa1c5, 0x0, 0x0);
        gbc.writeMem(0x8c1e, { 0x71 });
        gbc.writeMem(0xa1c5, { 0x0 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x21b1, gbc.sp());
        EXPECT(0x8c1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0x8c1e));
        EXPECT(0x30, gbc.readMem(0xa1c5));
        // 71 017C
        gbc.setState(0xaf28, 0x5acc, 0xc10, 0x42e4, 0x6c61, 0x99b7, 0x1, 0x1);
        gbc.writeMem(0x99b7, { 0x0 });
        gbc.writeMem(0xaf28, { 0x71 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x5acc, gbc.sp());
        EXPECT(0xaf29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe4, gbc.readMem(0x99b7));
        EXPECT(0x71, gbc.readMem(0xaf28));
        // 71 017D
        gbc.setState(0xb8e7, 0x193c, 0x3a80, 0xcd9e, 0x6a99, 0x8fab, 0x0, 0x0);
        gbc.writeMem(0x8fab, { 0x0 });
        gbc.writeMem(0xb8e7, { 0x71 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x193c, gbc.sp());
        EXPECT(0xb8e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x8fab));
        EXPECT(0x71, gbc.readMem(0xb8e7));
        // 71 017E
        gbc.setState(0x7596, 0xb94b, 0x2100, 0x96fe, 0x9783, 0xee99, 0x0, 0x0);
        gbc.writeMem(0x7596, { 0x71 });
        gbc.writeMem(0xee99, { 0x0 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xb94b, gbc.sp());
        EXPECT(0x7597, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xee99));
        // 71 0180
        gbc.setState(0xa85, 0x32d7, 0x64a0, 0x2639, 0x3025, 0xb30a, 0x0, 0x0);
        gbc.writeMem(0xa85, { 0x71 });
        gbc.writeMem(0xb30a, { 0x0 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x32d7, gbc.sp());
        EXPECT(0xa86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0xb30a));
        // 71 0182
        gbc.setState(0x6bab, 0x3f21, 0xb330, 0x9396, 0x49b6, 0x8833, 0x1, 0x0);
        gbc.writeMem(0x6bab, { 0x71 });
        gbc.writeMem(0x8833, { 0x0 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x3f21, gbc.sp());
        EXPECT(0x6bac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0x8833));
        // 71 0184
        gbc.setState(0xc819, 0x9149, 0x3a00, 0xf70b, 0x8bfd, 0xecad, 0x0, 0x0);
        gbc.writeMem(0xc819, { 0x71 });
        gbc.writeMem(0xecad, { 0x0 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x9149, gbc.sp());
        EXPECT(0xc81a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xc819));
        EXPECT(0xb, gbc.readMem(0xecad));
        // 71 0190
        gbc.setState(0x702b, 0xd2b9, 0xe8a0, 0xc0a, 0x103a, 0xd272, 0x0, 0x1);
        gbc.writeMem(0x702b, { 0x71 });
        gbc.writeMem(0xd272, { 0x0 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xd2b9, gbc.sp());
        EXPECT(0x702c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xd272));
        // 71 0191
        gbc.setState(0x9141, 0xbc9c, 0x4710, 0x10b, 0xc3c1, 0xa650, 0x1, 0x0);
        gbc.writeMem(0x9141, { 0x71 });
        gbc.writeMem(0xa650, { 0x0 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xbc9c, gbc.sp());
        EXPECT(0x9142, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0x9141));
        EXPECT(0xb, gbc.readMem(0xa650));
        // 71 0193
        gbc.setState(0x9931, 0xff58, 0x5e10, 0xedb0, 0xdec3, 0xd516, 0x0, 0x0);
        gbc.writeMem(0x9931, { 0x71 });
        gbc.writeMem(0xd516, { 0x0 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xff58, gbc.sp());
        EXPECT(0x9932, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0x9931));
        EXPECT(0xb0, gbc.readMem(0xd516));
        // 71 0195
        gbc.setState(0x9f27, 0x15f7, 0x4fa0, 0x76e6, 0x9e75, 0xb31d, 0x1, 0x1);
        gbc.writeMem(0x9f27, { 0x71 });
        gbc.writeMem(0xb31d, { 0x0 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x15f7, gbc.sp());
        EXPECT(0x9f28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0x9f27));
        EXPECT(0xe6, gbc.readMem(0xb31d));
        // 71 0198
        gbc.setState(0x5965, 0x6d4d, 0x66c0, 0xc034, 0x36d0, 0xffe8, 0x0, 0x1);
        gbc.writeMem(0x5965, { 0x71 });
        gbc.writeMem(0xffe8, { 0x0 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x6d4d, gbc.sp());
        EXPECT(0x5966, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xffe8));
        // 71 019C
        gbc.setState(0x6565, 0x1a4f, 0x27b0, 0xfec0, 0x8025, 0xc752, 0x1, 0x0);
        gbc.writeMem(0x6565, { 0x71 });
        gbc.writeMem(0xc752, { 0x0 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x1a4f, gbc.sp());
        EXPECT(0x6566, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0xc752));
        // 71 01A1
        gbc.setState(0xc393, 0xf47a, 0xb5c0, 0xa5f9, 0xec04, 0x849d, 0x0, 0x0);
        gbc.writeMem(0x849d, { 0x0 });
        gbc.writeMem(0xc393, { 0x71 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xf47a, gbc.sp());
        EXPECT(0xc394, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf9, gbc.readMem(0x849d));
        EXPECT(0x71, gbc.readMem(0xc393));
        // 71 01A2
        gbc.setState(0x7762, 0x8e49, 0x3790, 0x3d41, 0xdd44, 0xacef, 0x0, 0x1);
        gbc.writeMem(0x7762, { 0x71 });
        gbc.writeMem(0xacef, { 0x0 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x8e49, gbc.sp());
        EXPECT(0x7763, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x41, gbc.readMem(0xacef));
        // 71 01A4
        gbc.setState(0x54cb, 0xe8bd, 0x8db0, 0xd1a2, 0x8ed7, 0xec51, 0x1, 0x0);
        gbc.writeMem(0x54cb, { 0x71 });
        gbc.writeMem(0xec51, { 0x0 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xe8bd, gbc.sp());
        EXPECT(0x54cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xec51));
        // 71 01A7
        gbc.setState(0x8d7d, 0x3a8c, 0x3c60, 0xd73d, 0xc76f, 0xcd5b, 0x0, 0x1);
        gbc.writeMem(0x8d7d, { 0x71 });
        gbc.writeMem(0xcd5b, { 0x0 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x3a8c, gbc.sp());
        EXPECT(0x8d7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0x8d7d));
        EXPECT(0x3d, gbc.readMem(0xcd5b));
        // 71 01A8
        gbc.setState(0x567e, 0x9f3e, 0xda30, 0xea0c, 0x56eb, 0xd196, 0x0, 0x1);
        gbc.writeMem(0x567e, { 0x71 });
        gbc.writeMem(0xd196, { 0x0 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x9f3e, gbc.sp());
        EXPECT(0x567f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xd196));
        // 71 01AA
        gbc.setState(0xb44b, 0xf47b, 0x1440, 0xf6b0, 0xb4eb, 0xa9dc, 0x0, 0x0);
        gbc.writeMem(0xa9dc, { 0x0 });
        gbc.writeMem(0xb44b, { 0x71 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xf47b, gbc.sp());
        EXPECT(0xb44c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xa9dc));
        EXPECT(0x71, gbc.readMem(0xb44b));
        // 71 01AB
        gbc.setState(0x5aa9, 0x6f2b, 0x5b0, 0xed4d, 0x381, 0x92fc, 0x1, 0x0);
        gbc.writeMem(0x5aa9, { 0x71 });
        gbc.writeMem(0x92fc, { 0x0 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x6f2b, gbc.sp());
        EXPECT(0x5aaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x92fc));
        // 71 01AC
        gbc.setState(0x88a7, 0x814e, 0xe6f0, 0xa028, 0x3b20, 0xe6af, 0x0, 0x0);
        gbc.writeMem(0x88a7, { 0x71 });
        gbc.writeMem(0xe6af, { 0x0 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x814e, gbc.sp());
        EXPECT(0x88a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0x88a7));
        EXPECT(0x28, gbc.readMem(0xe6af));
        // 71 01AD
        gbc.setState(0x84f8, 0x15d9, 0x2e70, 0x346d, 0x89ad, 0xc1c7, 0x1, 0x0);
        gbc.writeMem(0x84f8, { 0x71 });
        gbc.writeMem(0xc1c7, { 0x0 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x15d9, gbc.sp());
        EXPECT(0x84f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0x84f8));
        EXPECT(0x6d, gbc.readMem(0xc1c7));
        // 71 01AF
        gbc.setState(0x908a, 0xd1a5, 0xee80, 0xf109, 0xa3f9, 0x8788, 0x1, 0x1);
        gbc.writeMem(0x8788, { 0x0 });
        gbc.writeMem(0x908a, { 0x71 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xd1a5, gbc.sp());
        EXPECT(0x908b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x8788));
        EXPECT(0x71, gbc.readMem(0x908a));
        // 71 01B0
        gbc.setState(0xa0a9, 0xa0d8, 0x4300, 0xe3cc, 0x36bb, 0xc790, 0x0, 0x1);
        gbc.writeMem(0xa0a9, { 0x71 });
        gbc.writeMem(0xc790, { 0x0 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xa0d8, gbc.sp());
        EXPECT(0xa0aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xa0a9));
        EXPECT(0xcc, gbc.readMem(0xc790));
        // 71 01B4
        gbc.setState(0x875d, 0x623c, 0xa3f0, 0xedd4, 0x3ae2, 0xf87a, 0x0, 0x1);
        gbc.writeMem(0x875d, { 0x71 });
        gbc.writeMem(0xf87a, { 0x0 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x623c, gbc.sp());
        EXPECT(0x875e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0x875d));
        EXPECT(0xd4, gbc.readMem(0xf87a));
        // 71 01B8
        gbc.setState(0xa790, 0x51a4, 0x5070, 0x8581, 0x1e0c, 0xf695, 0x1, 0x1);
        gbc.writeMem(0xa790, { 0x71 });
        gbc.writeMem(0xf695, { 0x0 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x51a4, gbc.sp());
        EXPECT(0xa791, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xa790));
        EXPECT(0x81, gbc.readMem(0xf695));
        // 71 01B9
        gbc.setState(0x9833, 0xcab9, 0x8f80, 0xd2af, 0x963a, 0xfa86, 0x1, 0x0);
        gbc.writeMem(0x9833, { 0x71 });
        gbc.writeMem(0xfa86, { 0x0 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xcab9, gbc.sp());
        EXPECT(0x9834, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0x9833));
        EXPECT(0xaf, gbc.readMem(0xfa86));
        // 71 01BA
        gbc.setState(0x5590, 0x65fe, 0xa590, 0xd2ad, 0x733b, 0xb8db, 0x1, 0x1);
        gbc.writeMem(0x5590, { 0x71 });
        gbc.writeMem(0xb8db, { 0x0 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x65fe, gbc.sp());
        EXPECT(0x5591, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0xb8db));
        // 71 01BB
        gbc.setState(0x2e97, 0x9091, 0x3d00, 0x73c0, 0x9d8f, 0xbfb7, 0x0, 0x1);
        gbc.writeMem(0x2e97, { 0x71 });
        gbc.writeMem(0xbfb7, { 0x0 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x9091, gbc.sp());
        EXPECT(0x2e98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0xbfb7));
        // 71 01BF
        gbc.setState(0x1ed3, 0x6a99, 0x680, 0xed48, 0xc3ab, 0xc85d, 0x1, 0x0);
        gbc.writeMem(0x1ed3, { 0x71 });
        gbc.writeMem(0xc85d, { 0x0 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x6a99, gbc.sp());
        EXPECT(0x1ed4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xc85d));
        // 71 01C0
        gbc.setState(0x24dc, 0xd414, 0x9670, 0x7cee, 0xa08a, 0xf3b6, 0x1, 0x0);
        gbc.writeMem(0x24dc, { 0x71 });
        gbc.writeMem(0xf3b6, { 0x0 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xd414, gbc.sp());
        EXPECT(0x24dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0xf3b6));
        // 71 01C2
        gbc.setState(0xbe43, 0xb9d7, 0xb180, 0xeb2a, 0x77ae, 0xd4b9, 0x1, 0x0);
        gbc.writeMem(0xbe43, { 0x71 });
        gbc.writeMem(0xd4b9, { 0x0 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xb9d7, gbc.sp());
        EXPECT(0xbe44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xbe43));
        EXPECT(0x2a, gbc.readMem(0xd4b9));
        // 71 01C4
        gbc.setState(0x2e92, 0x2119, 0x4730, 0x897a, 0x7b36, 0xe8df, 0x1, 0x1);
        gbc.writeMem(0x2e92, { 0x71 });
        gbc.writeMem(0xe8df, { 0x0 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x2119, gbc.sp());
        EXPECT(0x2e93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xe8df));
        // 71 01C8
        gbc.setState(0x5160, 0x9c40, 0xbe00, 0x2ac4, 0x10f1, 0x8ebc, 0x1, 0x0);
        gbc.writeMem(0x5160, { 0x71 });
        gbc.writeMem(0x8ebc, { 0x0 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x9c40, gbc.sp());
        EXPECT(0x5161, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc4, gbc.readMem(0x8ebc));
        // 71 01D5
        gbc.setState(0xcfde, 0x8ecd, 0x2010, 0xbb6b, 0x4f9, 0xe7bf, 0x1, 0x1);
        gbc.writeMem(0xcfde, { 0x71 });
        gbc.writeMem(0xe7bf, { 0x0 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x8ecd, gbc.sp());
        EXPECT(0xcfdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xcfde));
        EXPECT(0x6b, gbc.readMem(0xe7bf));
        // 71 01DB
        gbc.setState(0xd13, 0x423d, 0x60a0, 0xefdd, 0x7b7, 0xd208, 0x1, 0x1);
        gbc.writeMem(0xd13, { 0x71 });
        gbc.writeMem(0xd208, { 0x0 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x423d, gbc.sp());
        EXPECT(0xd14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0xd208));
        // 71 01DD
        gbc.setState(0x101f, 0x9bb9, 0xaff0, 0xb89a, 0x757e, 0xb3b1, 0x0, 0x1);
        gbc.writeMem(0x101f, { 0x71 });
        gbc.writeMem(0xb3b1, { 0x0 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x9bb9, gbc.sp());
        EXPECT(0x1020, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xb3b1));
        // 71 01DF
        gbc.setState(0x69f0, 0x5018, 0xe190, 0x5d4e, 0xd23a, 0xe452, 0x0, 0x0);
        gbc.writeMem(0x69f0, { 0x71 });
        gbc.writeMem(0xe452, { 0x0 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x5018, gbc.sp());
        EXPECT(0x69f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xe452));
        // 71 01E1
        gbc.setState(0x4084, 0x10a4, 0xc060, 0xf318, 0x56be, 0xfa6f, 0x1, 0x1);
        gbc.writeMem(0x4084, { 0x71 });
        gbc.writeMem(0xfa6f, { 0x0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x10a4, gbc.sp());
        EXPECT(0x4085, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0xfa6f));
        // 71 01E2
        gbc.setState(0xdfdb, 0x843b, 0x87b0, 0xe375, 0x9cef, 0x9bd8, 0x0, 0x1);
        gbc.writeMem(0x9bd8, { 0x0 });
        gbc.writeMem(0xdfdb, { 0x71 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x843b, gbc.sp());
        EXPECT(0xdfdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x9bd8));
        EXPECT(0x71, gbc.readMem(0xdfdb));
        // 71 01E3
        gbc.setState(0xe881, 0xc81c, 0x2390, 0xc0db, 0xc34e, 0x9392, 0x1, 0x0);
        gbc.writeMem(0x9392, { 0x0 });
        gbc.writeMem(0xe881, { 0x71 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xc81c, gbc.sp());
        EXPECT(0xe882, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0x9392));
        EXPECT(0x71, gbc.readMem(0xe881));
        // 71 01E4
        gbc.setState(0x3f01, 0xd79c, 0x7af0, 0x75a1, 0x9358, 0xde63, 0x1, 0x0);
        gbc.writeMem(0x3f01, { 0x71 });
        gbc.writeMem(0xde63, { 0x0 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xd79c, gbc.sp());
        EXPECT(0x3f02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xde63));
        // 71 01E8
        gbc.setState(0x5983, 0xd88a, 0xea80, 0x52c6, 0xc1fe, 0xd436, 0x0, 0x0);
        gbc.writeMem(0x5983, { 0x71 });
        gbc.writeMem(0xd436, { 0x0 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xd88a, gbc.sp());
        EXPECT(0x5984, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xd436));
        // 71 01E9
        gbc.setState(0xaf63, 0x1492, 0xa030, 0xa44c, 0x839e, 0xf2af, 0x1, 0x0);
        gbc.writeMem(0xaf63, { 0x71 });
        gbc.writeMem(0xf2af, { 0x0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x1492, gbc.sp());
        EXPECT(0xaf64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xaf63));
        EXPECT(0x4c, gbc.readMem(0xf2af));
        // 71 01EA
        gbc.setState(0xc277, 0x91b5, 0xd910, 0xa302, 0x2e07, 0xb3f0, 0x0, 0x0);
        gbc.writeMem(0xb3f0, { 0x0 });
        gbc.writeMem(0xc277, { 0x71 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x91b5, gbc.sp());
        EXPECT(0xc278, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0xb3f0));
        EXPECT(0x71, gbc.readMem(0xc277));
        // 71 01EB
        gbc.setState(0x9415, 0x55b4, 0x2180, 0xebeb, 0x8246, 0xd4d2, 0x1, 0x0);
        gbc.writeMem(0x9415, { 0x71 });
        gbc.writeMem(0xd4d2, { 0x0 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x55b4, gbc.sp());
        EXPECT(0x9416, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0x9415));
        EXPECT(0xeb, gbc.readMem(0xd4d2));
        // 71 01ED
        gbc.setState(0x112c, 0xb26a, 0x1320, 0x5800, 0x2ff0, 0x5223, 0x1, 0x1);
        gbc.writeMem(0x112c, { 0x71 });
        gbc.writeMem(0x5223, { 0x0 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xb26a, gbc.sp());
        EXPECT(0x112d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 71 01F3
        gbc.setState(0x52ee, 0x25f4, 0xb140, 0x2702, 0x4eba, 0xce60, 0x1, 0x0);
        gbc.writeMem(0x52ee, { 0x71 });
        gbc.writeMem(0xce60, { 0x0 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x25f4, gbc.sp());
        EXPECT(0x52ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0xce60));
        // 71 01F4
        gbc.setState(0x7881, 0x25de, 0x67a0, 0x64d9, 0x196c, 0x88f8, 0x1, 0x1);
        gbc.writeMem(0x7881, { 0x71 });
        gbc.writeMem(0x88f8, { 0x0 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x25de, gbc.sp());
        EXPECT(0x7882, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x88f8));
        // 71 01F5
        gbc.setState(0x3345, 0x256b, 0xf980, 0xafd9, 0xef1a, 0xa86b, 0x0, 0x0);
        gbc.writeMem(0x3345, { 0x71 });
        gbc.writeMem(0xa86b, { 0x0 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x256b, gbc.sp());
        EXPECT(0x3346, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xa86b));
        // 71 01F8
        gbc.setState(0x8961, 0x34df, 0x6070, 0x4cdf, 0xba6d, 0xf626, 0x0, 0x0);
        gbc.writeMem(0x8961, { 0x71 });
        gbc.writeMem(0xf626, { 0x0 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x34df, gbc.sp());
        EXPECT(0x8962, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0x8961));
        EXPECT(0xdf, gbc.readMem(0xf626));
        // 71 01F9
        gbc.setState(0x85a7, 0x7e4b, 0x0, 0xdae4, 0xb7da, 0xb3c4, 0x1, 0x1);
        gbc.writeMem(0x85a7, { 0x71 });
        gbc.writeMem(0xb3c4, { 0x0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x7e4b, gbc.sp());
        EXPECT(0x85a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0x85a7));
        EXPECT(0xe4, gbc.readMem(0xb3c4));
        // 71 01FA
        gbc.setState(0x704, 0xde7d, 0xad50, 0xd1e5, 0x32b, 0xb07b, 0x0, 0x1);
        gbc.writeMem(0x704, { 0x71 });
        gbc.writeMem(0xb07b, { 0x0 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xde7d, gbc.sp());
        EXPECT(0x705, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xb07b));
        // 71 01FB
        gbc.setState(0x96ef, 0xbe5b, 0x57a0, 0x32e8, 0x14f1, 0xe541, 0x0, 0x0);
        gbc.writeMem(0x96ef, { 0x71 });
        gbc.writeMem(0xe541, { 0x0 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xbe5b, gbc.sp());
        EXPECT(0x96f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0x96ef));
        EXPECT(0xe8, gbc.readMem(0xe541));
        // 71 01FC
        gbc.setState(0x629a, 0x419a, 0x3930, 0x83a8, 0x94b7, 0xfeef, 0x0, 0x1);
        gbc.writeMem(0x629a, { 0x71 });
        gbc.writeMem(0xfeef, { 0x0 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x419a, gbc.sp());
        EXPECT(0x629b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa8, gbc.readMem(0xfeef));
        // 71 01FD
        gbc.setState(0x3cd6, 0x3412, 0xe0f0, 0x3874, 0xdd36, 0xe4b6, 0x1, 0x0);
        gbc.writeMem(0x3cd6, { 0x71 });
        gbc.writeMem(0xe4b6, { 0x0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x3412, gbc.sp());
        EXPECT(0x3cd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xe4b6));
        // 71 0200
        gbc.setState(0x5356, 0xc5b2, 0xacb0, 0x3949, 0xd5ad, 0xdfae, 0x0, 0x0);
        gbc.writeMem(0x5356, { 0x71 });
        gbc.writeMem(0xdfae, { 0x0 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xc5b2, gbc.sp());
        EXPECT(0x5357, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xdfae));
        // 71 0201
        gbc.setState(0x3d7f, 0x8905, 0xb800, 0x3c2a, 0x672, 0x9791, 0x1, 0x1);
        gbc.writeMem(0x3d7f, { 0x71 });
        gbc.writeMem(0x9791, { 0x0 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x8905, gbc.sp());
        EXPECT(0x3d80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0x9791));
        // 71 0202
        gbc.setState(0xb063, 0x511d, 0xdd50, 0xc3b0, 0x42f6, 0xd5c2, 0x0, 0x1);
        gbc.writeMem(0xb063, { 0x71 });
        gbc.writeMem(0xd5c2, { 0x0 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x511d, gbc.sp());
        EXPECT(0xb064, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xb063));
        EXPECT(0xb0, gbc.readMem(0xd5c2));
        // 71 0205
        gbc.setState(0xc43a, 0x7825, 0xda50, 0x2c60, 0x906, 0xb251, 0x0, 0x1);
        gbc.writeMem(0xb251, { 0x0 });
        gbc.writeMem(0xc43a, { 0x71 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x7825, gbc.sp());
        EXPECT(0xc43b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0xb251));
        EXPECT(0x71, gbc.readMem(0xc43a));
        // 71 0206
        gbc.setState(0xb587, 0xf66a, 0x6150, 0x4167, 0x5ff6, 0x88d2, 0x0, 0x0);
        gbc.writeMem(0x88d2, { 0x0 });
        gbc.writeMem(0xb587, { 0x71 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xf66a, gbc.sp());
        EXPECT(0xb588, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x67, gbc.readMem(0x88d2));
        EXPECT(0x71, gbc.readMem(0xb587));
        // 71 0207
        gbc.setState(0x372e, 0x541f, 0x4f50, 0x5d63, 0x138d, 0x9055, 0x1, 0x0);
        gbc.writeMem(0x372e, { 0x71 });
        gbc.writeMem(0x9055, { 0x0 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x541f, gbc.sp());
        EXPECT(0x372f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0x9055));
        // 71 0209
        gbc.setState(0x4bc5, 0x473b, 0x58e0, 0x5a75, 0xe25f, 0xf3b0, 0x0, 0x0);
        gbc.writeMem(0x4bc5, { 0x71 });
        gbc.writeMem(0xf3b0, { 0x0 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x473b, gbc.sp());
        EXPECT(0x4bc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xf3b0));
        // 71 020B
        gbc.setState(0xe5dc, 0x7914, 0xc870, 0xbef1, 0x7742, 0x85c7, 0x0, 0x1);
        gbc.writeMem(0x85c7, { 0x0 });
        gbc.writeMem(0xe5dc, { 0x71 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x7914, gbc.sp());
        EXPECT(0xe5dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0x85c7));
        EXPECT(0x71, gbc.readMem(0xe5dc));
        // 71 020C
        gbc.setState(0x8255, 0xc0c2, 0x9270, 0x248c, 0x7e00, 0xa4af, 0x1, 0x1);
        gbc.writeMem(0x8255, { 0x71 });
        gbc.writeMem(0xa4af, { 0x0 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xc0c2, gbc.sp());
        EXPECT(0x8256, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0x8255));
        EXPECT(0x8c, gbc.readMem(0xa4af));
        // 71 020D
        gbc.setState(0x4c66, 0xcd24, 0x33a0, 0x7cb3, 0x8678, 0x94e4, 0x0, 0x0);
        gbc.writeMem(0x4c66, { 0x71 });
        gbc.writeMem(0x94e4, { 0x0 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xcd24, gbc.sp());
        EXPECT(0x4c67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x94e4));
        // 71 020E
        gbc.setState(0x7811, 0xcb5d, 0x4f70, 0x888e, 0xe078, 0x935c, 0x1, 0x0);
        gbc.writeMem(0x7811, { 0x71 });
        gbc.writeMem(0x935c, { 0x0 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xcb5d, gbc.sp());
        EXPECT(0x7812, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0x935c));
        // 71 0210
        gbc.setState(0xb410, 0xe4db, 0x2d0, 0x2cc7, 0xc74, 0xa926, 0x0, 0x1);
        gbc.writeMem(0xa926, { 0x0 });
        gbc.writeMem(0xb410, { 0x71 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xe4db, gbc.sp());
        EXPECT(0xb411, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xa926));
        EXPECT(0x71, gbc.readMem(0xb410));
        // 71 0211
        gbc.setState(0xdf64, 0xef83, 0xd20, 0xa177, 0x4b5a, 0x9521, 0x1, 0x0);
        gbc.writeMem(0x9521, { 0x0 });
        gbc.writeMem(0xdf64, { 0x71 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xef83, gbc.sp());
        EXPECT(0xdf65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x9521));
        EXPECT(0x71, gbc.readMem(0xdf64));
        // 71 0212
        gbc.setState(0xc116, 0x6fec, 0x27e0, 0x93f7, 0x8a19, 0xe783, 0x1, 0x0);
        gbc.writeMem(0xc116, { 0x71 });
        gbc.writeMem(0xe783, { 0x0 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x6fec, gbc.sp());
        EXPECT(0xc117, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xc116));
        EXPECT(0xf7, gbc.readMem(0xe783));
        // 71 0213
        gbc.setState(0xdad, 0xe3eb, 0x6260, 0xe938, 0x316, 0x819b, 0x1, 0x1);
        gbc.writeMem(0xdad, { 0x71 });
        gbc.writeMem(0x819b, { 0x0 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xe3eb, gbc.sp());
        EXPECT(0xdae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x819b));
        // 71 0214
        gbc.setState(0x7bd0, 0xde80, 0x7cc0, 0x4847, 0xcea2, 0xfd06, 0x1, 0x1);
        gbc.writeMem(0x7bd0, { 0x71 });
        gbc.writeMem(0xfd06, { 0x0 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xde80, gbc.sp());
        EXPECT(0x7bd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xfd06));
        // 71 0215
        gbc.setState(0xbbb6, 0x8b9b, 0x55f0, 0x10e8, 0x1d09, 0xc348, 0x1, 0x1);
        gbc.writeMem(0xbbb6, { 0x71 });
        gbc.writeMem(0xc348, { 0x0 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x8b9b, gbc.sp());
        EXPECT(0xbbb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xbbb6));
        EXPECT(0xe8, gbc.readMem(0xc348));
        // 71 0217
        gbc.setState(0xcdd4, 0x1a75, 0xb7c0, 0x2061, 0x7ae7, 0xe82e, 0x0, 0x1);
        gbc.writeMem(0xcdd4, { 0x71 });
        gbc.writeMem(0xe82e, { 0x0 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x1a75, gbc.sp());
        EXPECT(0xcdd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xcdd4));
        EXPECT(0x61, gbc.readMem(0xe82e));
        // 71 021B
        gbc.setState(0xd78b, 0xd004, 0xacc0, 0x69d, 0x88f4, 0xae8e, 0x1, 0x1);
        gbc.writeMem(0xae8e, { 0x0 });
        gbc.writeMem(0xd78b, { 0x71 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xd004, gbc.sp());
        EXPECT(0xd78c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xae8e));
        EXPECT(0x71, gbc.readMem(0xd78b));
        // 71 021D
        gbc.setState(0x8839, 0xbd57, 0xec30, 0x4af1, 0xf45, 0xc6db, 0x0, 0x1);
        gbc.writeMem(0x8839, { 0x71 });
        gbc.writeMem(0xc6db, { 0x0 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xbd57, gbc.sp());
        EXPECT(0x883a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0x8839));
        EXPECT(0xf1, gbc.readMem(0xc6db));
        // 71 021F
        gbc.setState(0x70d7, 0xc37b, 0x1010, 0x341f, 0xcc3a, 0x95ca, 0x0, 0x1);
        gbc.writeMem(0x70d7, { 0x71 });
        gbc.writeMem(0x95ca, { 0x0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xc37b, gbc.sp());
        EXPECT(0x70d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1f, gbc.readMem(0x95ca));
        // 71 0220
        gbc.setState(0xb7f2, 0x6e79, 0x37f0, 0xfb0c, 0x3e2f, 0xfee2, 0x1, 0x1);
        gbc.writeMem(0xb7f2, { 0x71 });
        gbc.writeMem(0xfee2, { 0x0 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x6e79, gbc.sp());
        EXPECT(0xb7f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xb7f2));
        EXPECT(0xc, gbc.readMem(0xfee2));
        // 71 0223
        gbc.setState(0x418d, 0x1233, 0x6da0, 0xadf4, 0x4a90, 0xe7a1, 0x1, 0x0);
        gbc.writeMem(0x418d, { 0x71 });
        gbc.writeMem(0xe7a1, { 0x0 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x1233, gbc.sp());
        EXPECT(0x418e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0xe7a1));
        // 71 0224
        gbc.setState(0x2f63, 0xe272, 0x8690, 0xc3a2, 0x33d1, 0xc032, 0x1, 0x0);
        gbc.writeMem(0x2f63, { 0x71 });
        gbc.writeMem(0xc032, { 0x0 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xe272, gbc.sp());
        EXPECT(0x2f64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xc032));
        // 71 0225
        gbc.setState(0xe46b, 0x764b, 0xead0, 0x6628, 0x2601, 0xb139, 0x1, 0x1);
        gbc.writeMem(0xb139, { 0x0 });
        gbc.writeMem(0xe46b, { 0x71 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x764b, gbc.sp());
        EXPECT(0xe46c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x28, gbc.readMem(0xb139));
        EXPECT(0x71, gbc.readMem(0xe46b));
        // 71 022C
        gbc.setState(0x651b, 0x21aa, 0x8ff0, 0x7779, 0x454e, 0xd09e, 0x1, 0x0);
        gbc.writeMem(0x651b, { 0x71 });
        gbc.writeMem(0xd09e, { 0x0 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x21aa, gbc.sp());
        EXPECT(0x651c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xd09e));
        // 71 022D
        gbc.setState(0xc2d8, 0x9a6b, 0x4490, 0x2fc4, 0x9e78, 0xf0fd, 0x0, 0x1);
        gbc.writeMem(0xc2d8, { 0x71 });
        gbc.writeMem(0xf0fd, { 0x0 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x9a6b, gbc.sp());
        EXPECT(0xc2d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xc2d8));
        EXPECT(0xc4, gbc.readMem(0xf0fd));
        // 71 022E
        gbc.setState(0xd4bc, 0xb6d9, 0x6c20, 0x9909, 0x5fe4, 0x8b87, 0x1, 0x0);
        gbc.writeMem(0x8b87, { 0x0 });
        gbc.writeMem(0xd4bc, { 0x71 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xb6d9, gbc.sp());
        EXPECT(0xd4bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x8b87));
        EXPECT(0x71, gbc.readMem(0xd4bc));
        // 71 0232
        gbc.setState(0x1ae8, 0xfbbe, 0xd2b0, 0xed4f, 0xeb43, 0xcc49, 0x1, 0x0);
        gbc.writeMem(0x1ae8, { 0x71 });
        gbc.writeMem(0xcc49, { 0x0 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xfbbe, gbc.sp());
        EXPECT(0x1ae9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4f, gbc.readMem(0xcc49));
        // 71 0233
        gbc.setState(0xccf5, 0x332a, 0xff40, 0x24c5, 0x9ef8, 0xb33f, 0x1, 0x0);
        gbc.writeMem(0xb33f, { 0x0 });
        gbc.writeMem(0xccf5, { 0x71 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x332a, gbc.sp());
        EXPECT(0xccf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xb33f));
        EXPECT(0x71, gbc.readMem(0xccf5));
        // 71 0234
        gbc.setState(0x44db, 0x322d, 0x7ba0, 0x701f, 0xe4c4, 0x8ea8, 0x1, 0x0);
        gbc.writeMem(0x44db, { 0x71 });
        gbc.writeMem(0x8ea8, { 0x0 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x322d, gbc.sp());
        EXPECT(0x44dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1f, gbc.readMem(0x8ea8));
        // 71 0239
        gbc.setState(0xa1b6, 0x3c1b, 0x8960, 0x7ffa, 0x7d35, 0xa419, 0x1, 0x0);
        gbc.writeMem(0xa1b6, { 0x71 });
        gbc.writeMem(0xa419, { 0x0 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x3c1b, gbc.sp());
        EXPECT(0xa1b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xa1b6));
        EXPECT(0xfa, gbc.readMem(0xa419));
        // 71 023B
        gbc.setState(0x3f05, 0x251, 0xa820, 0x79ab, 0x6b5a, 0xf1ae, 0x0, 0x1);
        gbc.writeMem(0x3f05, { 0x71 });
        gbc.writeMem(0xf1ae, { 0x0 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x251, gbc.sp());
        EXPECT(0x3f06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xab, gbc.readMem(0xf1ae));
        // 71 023C
        gbc.setState(0x18d3, 0x5bdf, 0xfc80, 0xfce6, 0xece3, 0xa2ab, 0x1, 0x1);
        gbc.writeMem(0x18d3, { 0x71 });
        gbc.writeMem(0xa2ab, { 0x0 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x5bdf, gbc.sp());
        EXPECT(0x18d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xa2ab));
        // 71 023F
        gbc.setState(0x7c8c, 0x3e06, 0xc130, 0x7f7c, 0x3dc3, 0xf21b, 0x0, 0x0);
        gbc.writeMem(0x7c8c, { 0x71 });
        gbc.writeMem(0xf21b, { 0x0 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x3e06, gbc.sp());
        EXPECT(0x7c8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0xf21b));
        // 71 0240
        gbc.setState(0x573b, 0x6480, 0xcc00, 0x6657, 0x4556, 0xae45, 0x0, 0x0);
        gbc.writeMem(0x573b, { 0x71 });
        gbc.writeMem(0xae45, { 0x0 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x6480, gbc.sp());
        EXPECT(0x573c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xae45));
        // 71 0243
        gbc.setState(0x42dd, 0x536e, 0xba30, 0xb656, 0x81c1, 0xfb63, 0x1, 0x0);
        gbc.writeMem(0x42dd, { 0x71 });
        gbc.writeMem(0xfb63, { 0x0 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x536e, gbc.sp());
        EXPECT(0x42de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xfb63));
        // 71 0244
        gbc.setState(0x3ddf, 0x7062, 0x4fc0, 0xe003, 0x8060, 0x9523, 0x0, 0x1);
        gbc.writeMem(0x3ddf, { 0x71 });
        gbc.writeMem(0x9523, { 0x0 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x7062, gbc.sp());
        EXPECT(0x3de0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x9523));
        // 71 0245
        gbc.setState(0xd8fc, 0xf57a, 0xbc50, 0x9cda, 0x8751, 0xca53, 0x0, 0x0);
        gbc.writeMem(0xca53, { 0x0 });
        gbc.writeMem(0xd8fc, { 0x71 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xf57a, gbc.sp());
        EXPECT(0xd8fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xca53));
        EXPECT(0x71, gbc.readMem(0xd8fc));
        // 71 0248
        gbc.setState(0xe62c, 0x1aaf, 0x38c0, 0xe3ef, 0x716b, 0x8ec9, 0x0, 0x1);
        gbc.writeMem(0x8ec9, { 0x0 });
        gbc.writeMem(0xe62c, { 0x71 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x1aaf, gbc.sp());
        EXPECT(0xe62d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0x8ec9));
        EXPECT(0x71, gbc.readMem(0xe62c));
        // 71 024A
        gbc.setState(0x4bcb, 0xdec5, 0xf8e0, 0x48a7, 0x1f89, 0xa038, 0x1, 0x0);
        gbc.writeMem(0x4bcb, { 0x71 });
        gbc.writeMem(0xa038, { 0x0 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xdec5, gbc.sp());
        EXPECT(0x4bcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xa038));
        // 71 024B
        gbc.setState(0x2ad5, 0xcfa9, 0xcaa0, 0x60d8, 0xc19a, 0xaa1a, 0x0, 0x1);
        gbc.writeMem(0x2ad5, { 0x71 });
        gbc.writeMem(0xaa1a, { 0x0 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xcfa9, gbc.sp());
        EXPECT(0x2ad6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0xaa1a));
        // 71 024C
        gbc.setState(0x9f94, 0x9e83, 0x4db0, 0x514f, 0x267, 0xd7a1, 0x0, 0x1);
        gbc.writeMem(0x9f94, { 0x71 });
        gbc.writeMem(0xd7a1, { 0x0 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x9e83, gbc.sp());
        EXPECT(0x9f95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0x9f94));
        EXPECT(0x4f, gbc.readMem(0xd7a1));
        // 71 024E
        gbc.setState(0x29a2, 0x5477, 0x9c60, 0x728c, 0x641c, 0xd4e9, 0x1, 0x0);
        gbc.writeMem(0x29a2, { 0x71 });
        gbc.writeMem(0xd4e9, { 0x0 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x5477, gbc.sp());
        EXPECT(0x29a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xd4e9));
        // 71 0250
        gbc.setState(0xcb6e, 0xee4e, 0x1400, 0x7cd9, 0xfc05, 0xf0c8, 0x0, 0x1);
        gbc.writeMem(0xcb6e, { 0x71 });
        gbc.writeMem(0xf0c8, { 0x0 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xee4e, gbc.sp());
        EXPECT(0xcb6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xcb6e));
        EXPECT(0xd9, gbc.readMem(0xf0c8));
        // 71 0252
        gbc.setState(0xd802, 0xa83, 0x9d60, 0x7f37, 0x5c17, 0x8c00, 0x0, 0x0);
        gbc.writeMem(0x8c00, { 0x0 });
        gbc.writeMem(0xd802, { 0x71 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xa83, gbc.sp());
        EXPECT(0xd803, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x8c00));
        EXPECT(0x71, gbc.readMem(0xd802));
        // 71 0256
        gbc.setState(0xe1f7, 0xe7, 0x4420, 0x22a, 0xc2a3, 0xc8ca, 0x0, 0x1);
        gbc.writeMem(0xc8ca, { 0x0 });
        gbc.writeMem(0xe1f7, { 0x71 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xe7, gbc.sp());
        EXPECT(0xe1f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0xc8ca));
        EXPECT(0x71, gbc.readMem(0xe1f7));
        // 71 025C
        gbc.setState(0x1f4e, 0xe6d1, 0xbf30, 0x79c0, 0x2c00, 0xe595, 0x0, 0x0);
        gbc.writeMem(0x1f4e, { 0x71 });
        gbc.writeMem(0xe595, { 0x0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xe6d1, gbc.sp());
        EXPECT(0x1f4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0xe595));
        // 71 025E
        gbc.setState(0x9664, 0x51cb, 0x8e50, 0x564, 0x1a1b, 0xa88d, 0x0, 0x1);
        gbc.writeMem(0x9664, { 0x71 });
        gbc.writeMem(0xa88d, { 0x0 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x51cb, gbc.sp());
        EXPECT(0x9665, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0x9664));
        EXPECT(0x64, gbc.readMem(0xa88d));
        // 71 025F
        gbc.setState(0xa635, 0x7ca9, 0x9e10, 0xbd55, 0xc9e, 0xfb5d, 0x1, 0x0);
        gbc.writeMem(0xa635, { 0x71 });
        gbc.writeMem(0xfb5d, { 0x0 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x7ca9, gbc.sp());
        EXPECT(0xa636, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xa635));
        EXPECT(0x55, gbc.readMem(0xfb5d));
        // 71 0262
        gbc.setState(0xc35c, 0x4782, 0xf080, 0xe04d, 0x3459, 0xcb7f, 0x1, 0x1);
        gbc.writeMem(0xc35c, { 0x71 });
        gbc.writeMem(0xcb7f, { 0x0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x4782, gbc.sp());
        EXPECT(0xc35d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xc35c));
        EXPECT(0x4d, gbc.readMem(0xcb7f));
        // 71 0265
        gbc.setState(0x482c, 0x526d, 0xfdb0, 0xb661, 0xa4ab, 0xd367, 0x1, 0x1);
        gbc.writeMem(0x482c, { 0x71 });
        gbc.writeMem(0xd367, { 0x0 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x526d, gbc.sp());
        EXPECT(0x482d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xd367));
        // 71 0266
        gbc.setState(0x23ea, 0x1100, 0x2280, 0xb750, 0xba3a, 0xff9b, 0x1, 0x0);
        gbc.writeMem(0x23ea, { 0x71 });
        gbc.writeMem(0xff9b, { 0x0 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x1100, gbc.sp());
        EXPECT(0x23eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xff9b));
        // 71 0269
        gbc.setState(0xb3c1, 0xc798, 0x8580, 0x8edb, 0xfbb4, 0xd1df, 0x1, 0x0);
        gbc.writeMem(0xb3c1, { 0x71 });
        gbc.writeMem(0xd1df, { 0x0 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xc798, gbc.sp());
        EXPECT(0xb3c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xb3c1));
        EXPECT(0xdb, gbc.readMem(0xd1df));
        // 71 026A
        gbc.setState(0x4847, 0xb858, 0x3210, 0x3ac, 0xb5c2, 0xe23c, 0x0, 0x1);
        gbc.writeMem(0x4847, { 0x71 });
        gbc.writeMem(0xe23c, { 0x0 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xb858, gbc.sp());
        EXPECT(0x4848, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xe23c));
        // 71 026C
        gbc.setState(0xbb2e, 0xc0da, 0xa840, 0x78be, 0x5829, 0xd887, 0x0, 0x0);
        gbc.writeMem(0xbb2e, { 0x71 });
        gbc.writeMem(0xd887, { 0x0 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xc0da, gbc.sp());
        EXPECT(0xbb2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xbb2e));
        EXPECT(0xbe, gbc.readMem(0xd887));
        // 71 026D
        gbc.setState(0xb6a7, 0x76b3, 0x6a80, 0x75f, 0x4c2d, 0xda34, 0x0, 0x0);
        gbc.writeMem(0xb6a7, { 0x71 });
        gbc.writeMem(0xda34, { 0x0 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x76b3, gbc.sp());
        EXPECT(0xb6a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xb6a7));
        EXPECT(0x5f, gbc.readMem(0xda34));
        // 71 0273
        gbc.setState(0x1ffd, 0xfc41, 0x6280, 0x69e3, 0xb7e7, 0xbe8b, 0x1, 0x1);
        gbc.writeMem(0x1ffd, { 0x71 });
        gbc.writeMem(0xbe8b, { 0x0 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xfc41, gbc.sp());
        EXPECT(0x1ffe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0xbe8b));
        // 71 0276
        gbc.setState(0xc8d2, 0x2cd5, 0x8a30, 0xd316, 0x66b6, 0xb1b0, 0x0, 0x0);
        gbc.writeMem(0xb1b0, { 0x0 });
        gbc.writeMem(0xc8d2, { 0x71 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x2cd5, gbc.sp());
        EXPECT(0xc8d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xb1b0));
        EXPECT(0x71, gbc.readMem(0xc8d2));
        // 71 027C
        gbc.setState(0x41f0, 0x6f37, 0x5320, 0xe9a1, 0x4f, 0x9533, 0x1, 0x1);
        gbc.writeMem(0x41f0, { 0x71 });
        gbc.writeMem(0x9533, { 0x0 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x6f37, gbc.sp());
        EXPECT(0x41f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x9533));
        // 71 027E
        gbc.setState(0xa45a, 0x927e, 0x3140, 0xf11a, 0xb015, 0xf9f9, 0x1, 0x0);
        gbc.writeMem(0xa45a, { 0x71 });
        gbc.writeMem(0xf9f9, { 0x0 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x927e, gbc.sp());
        EXPECT(0xa45b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xa45a));
        EXPECT(0x1a, gbc.readMem(0xf9f9));
        // 71 027F
        gbc.setState(0x4647, 0xf02c, 0xf750, 0xdfdc, 0xe818, 0xcb17, 0x1, 0x0);
        gbc.writeMem(0x4647, { 0x71 });
        gbc.writeMem(0xcb17, { 0x0 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xf02c, gbc.sp());
        EXPECT(0x4648, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0xcb17));
        // 71 0282
        gbc.setState(0xd47f, 0x77d, 0x6a90, 0x4773, 0xf869, 0xb9d7, 0x1, 0x0);
        gbc.writeMem(0xb9d7, { 0x0 });
        gbc.writeMem(0xd47f, { 0x71 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x77d, gbc.sp());
        EXPECT(0xd480, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xb9d7));
        EXPECT(0x71, gbc.readMem(0xd47f));
        // 71 0286
        gbc.setState(0x1b2b, 0xd065, 0xc260, 0x8f82, 0xd5e5, 0x9805, 0x1, 0x1);
        gbc.writeMem(0x1b2b, { 0x71 });
        gbc.writeMem(0x9805, { 0x0 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xd065, gbc.sp());
        EXPECT(0x1b2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x9805));
        // 71 028B
        gbc.setState(0x365, 0x6fcf, 0x3b00, 0x3fb, 0xefb7, 0xe081, 0x0, 0x1);
        gbc.writeMem(0x365, { 0x71 });
        gbc.writeMem(0xe081, { 0x0 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x6fcf, gbc.sp());
        EXPECT(0x366, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfb, gbc.readMem(0xe081));
        // 71 028F
        gbc.setState(0x8854, 0xb245, 0x2f60, 0xc90c, 0x3573, 0xcbbc, 0x1, 0x1);
        gbc.writeMem(0x8854, { 0x71 });
        gbc.writeMem(0xcbbc, { 0x0 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xb245, gbc.sp());
        EXPECT(0x8855, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0x8854));
        EXPECT(0xc, gbc.readMem(0xcbbc));
        // 71 0290
        gbc.setState(0x7b11, 0x7028, 0x1970, 0xc551, 0x4570, 0x99d9, 0x0, 0x1);
        gbc.writeMem(0x7b11, { 0x71 });
        gbc.writeMem(0x99d9, { 0x0 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x7028, gbc.sp());
        EXPECT(0x7b12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x99d9));
        // 71 0293
        gbc.setState(0x8d11, 0xfa7b, 0x7100, 0x82cd, 0xe88a, 0x9f8e, 0x0, 0x0);
        gbc.writeMem(0x8d11, { 0x71 });
        gbc.writeMem(0x9f8e, { 0x0 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xfa7b, gbc.sp());
        EXPECT(0x8d12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0x8d11));
        EXPECT(0xcd, gbc.readMem(0x9f8e));
        // 71 0294
        gbc.setState(0x48b1, 0xd16f, 0xf820, 0x7b0b, 0x8899, 0x8ba4, 0x1, 0x1);
        gbc.writeMem(0x48b1, { 0x71 });
        gbc.writeMem(0x8ba4, { 0x0 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xd16f, gbc.sp());
        EXPECT(0x48b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x8ba4));
        // 71 0295
        gbc.setState(0x773a, 0x6d34, 0x8570, 0xaeb5, 0x3d2c, 0xb50d, 0x1, 0x1);
        gbc.writeMem(0x773a, { 0x71 });
        gbc.writeMem(0xb50d, { 0x0 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x6d34, gbc.sp());
        EXPECT(0x773b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xb50d));
        // 71 0297
        gbc.setState(0xe0f3, 0xb00f, 0x3d60, 0x4085, 0xceab, 0xfd2f, 0x0, 0x1);
        gbc.writeMem(0xe0f3, { 0x71 });
        gbc.writeMem(0xfd2f, { 0x0 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xb00f, gbc.sp());
        EXPECT(0xe0f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xe0f3));
        EXPECT(0x85, gbc.readMem(0xfd2f));
        // 71 029A
        gbc.setState(0x6da1, 0x8fb, 0xb790, 0x2994, 0x3c57, 0x88ca, 0x1, 0x1);
        gbc.writeMem(0x6da1, { 0x71 });
        gbc.writeMem(0x88ca, { 0x0 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x8fb, gbc.sp());
        EXPECT(0x6da2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x88ca));
        // 71 029E
        gbc.setState(0x9777, 0xd2e6, 0x8fe0, 0xe463, 0x336, 0x97dd, 0x1, 0x0);
        gbc.writeMem(0x9777, { 0x71 });
        gbc.writeMem(0x97dd, { 0x0 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xd2e6, gbc.sp());
        EXPECT(0x9778, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0x9777));
        EXPECT(0x63, gbc.readMem(0x97dd));
        // 71 02A2
        gbc.setState(0xd81c, 0x1187, 0xd350, 0x7506, 0x5e2e, 0xbbd9, 0x0, 0x1);
        gbc.writeMem(0xbbd9, { 0x0 });
        gbc.writeMem(0xd81c, { 0x71 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x1187, gbc.sp());
        EXPECT(0xd81d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xbbd9));
        EXPECT(0x71, gbc.readMem(0xd81c));
        // 71 02A8
        gbc.setState(0x1dfa, 0x1178, 0xa4e0, 0xcb5f, 0xe109, 0x8ffb, 0x0, 0x0);
        gbc.writeMem(0x1dfa, { 0x71 });
        gbc.writeMem(0x8ffb, { 0x0 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x1178, gbc.sp());
        EXPECT(0x1dfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0x8ffb));
        // 71 02A9
        gbc.setState(0x1491, 0x5a37, 0xf1f0, 0x721c, 0x8402, 0xdf76, 0x0, 0x0);
        gbc.writeMem(0x1491, { 0x71 });
        gbc.writeMem(0xdf76, { 0x0 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x5a37, gbc.sp());
        EXPECT(0x1492, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0xdf76));
        // 71 02AA
        gbc.setState(0xdd2d, 0xe783, 0x3d00, 0x259b, 0xc184, 0xab1c, 0x0, 0x1);
        gbc.writeMem(0xab1c, { 0x0 });
        gbc.writeMem(0xdd2d, { 0x71 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xe783, gbc.sp());
        EXPECT(0xdd2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xab1c));
        EXPECT(0x71, gbc.readMem(0xdd2d));
        // 71 02AB
        gbc.setState(0x2390, 0x8ee3, 0x54b0, 0xa725, 0xbcde, 0xcb12, 0x1, 0x0);
        gbc.writeMem(0x2390, { 0x71 });
        gbc.writeMem(0xcb12, { 0x0 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x8ee3, gbc.sp());
        EXPECT(0x2391, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xcb12));
        // 71 02B0
        gbc.setState(0x2abf, 0xa977, 0x6630, 0xb3e5, 0xba59, 0xd6a3, 0x1, 0x1);
        gbc.writeMem(0x2abf, { 0x71 });
        gbc.writeMem(0xd6a3, { 0x0 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xa977, gbc.sp());
        EXPECT(0x2ac0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xd6a3));
        // 71 02B6
        gbc.setState(0x2b89, 0x10eb, 0xccf0, 0xbe5d, 0x50ff, 0xa56e, 0x1, 0x1);
        gbc.writeMem(0x2b89, { 0x71 });
        gbc.writeMem(0xa56e, { 0x0 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x10eb, gbc.sp());
        EXPECT(0x2b8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xa56e));
        // 71 02B7
        gbc.setState(0x3e4a, 0x1649, 0x240, 0x949e, 0x6a33, 0xa88d, 0x0, 0x0);
        gbc.writeMem(0x3e4a, { 0x71 });
        gbc.writeMem(0xa88d, { 0x0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x1649, gbc.sp());
        EXPECT(0x3e4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xa88d));
        // 71 02B8
        gbc.setState(0x3023, 0x1d2c, 0x33d0, 0x9975, 0xde04, 0x9d1e, 0x1, 0x0);
        gbc.writeMem(0x3023, { 0x71 });
        gbc.writeMem(0x9d1e, { 0x0 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x1d2c, gbc.sp());
        EXPECT(0x3024, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x9d1e));
        // 71 02C0
        gbc.setState(0x6605, 0xf99b, 0x4e80, 0x47f, 0x7506, 0x9345, 0x0, 0x0);
        gbc.writeMem(0x6605, { 0x71 });
        gbc.writeMem(0x9345, { 0x0 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xf99b, gbc.sp());
        EXPECT(0x6606, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0x9345));
        // 71 02C1
        gbc.setState(0x33be, 0x534b, 0xdb80, 0x8463, 0xc33e, 0x8b55, 0x0, 0x0);
        gbc.writeMem(0x33be, { 0x71 });
        gbc.writeMem(0x8b55, { 0x0 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x534b, gbc.sp());
        EXPECT(0x33bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0x8b55));
        // 71 02C6
        gbc.setState(0xd254, 0x95f, 0xd750, 0xe29, 0x293, 0xa5d2, 0x1, 0x0);
        gbc.writeMem(0xa5d2, { 0x0 });
        gbc.writeMem(0xd254, { 0x71 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x95f, gbc.sp());
        EXPECT(0xd255, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xa5d2));
        EXPECT(0x71, gbc.readMem(0xd254));
        // 71 02C7
        gbc.setState(0xb99f, 0x2cd1, 0x8b40, 0x68a1, 0x8174, 0xfa5d, 0x1, 0x0);
        gbc.writeMem(0xb99f, { 0x71 });
        gbc.writeMem(0xfa5d, { 0x0 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x2cd1, gbc.sp());
        EXPECT(0xb9a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xb99f));
        EXPECT(0xa1, gbc.readMem(0xfa5d));
        // 71 02C8
        gbc.setState(0x51b1, 0x7fb9, 0x1360, 0xf767, 0x48f6, 0x8686, 0x0, 0x1);
        gbc.writeMem(0x51b1, { 0x71 });
        gbc.writeMem(0x8686, { 0x0 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x7fb9, gbc.sp());
        EXPECT(0x51b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x67, gbc.readMem(0x8686));
        // 71 02C9
        gbc.setState(0x46c9, 0x8832, 0x1a80, 0xd2bf, 0xbe3d, 0xab53, 0x0, 0x0);
        gbc.writeMem(0x46c9, { 0x71 });
        gbc.writeMem(0xab53, { 0x0 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x8832, gbc.sp());
        EXPECT(0x46ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xab53));
        // 71 02CB
        gbc.setState(0x4c1, 0xe794, 0xd680, 0x7b9f, 0x9947, 0x9dfe, 0x1, 0x1);
        gbc.writeMem(0x4c1, { 0x71 });
        gbc.writeMem(0x9dfe, { 0x0 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xe794, gbc.sp());
        EXPECT(0x4c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x9dfe));
        // 71 02CE
        gbc.setState(0x8504, 0x9c19, 0x7d30, 0x9a09, 0x15cb, 0xf83c, 0x1, 0x1);
        gbc.writeMem(0x8504, { 0x71 });
        gbc.writeMem(0xf83c, { 0x0 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x9c19, gbc.sp());
        EXPECT(0x8505, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0x8504));
        EXPECT(0x9, gbc.readMem(0xf83c));
        // 71 02CF
        gbc.setState(0xbe53, 0x2a5c, 0x9440, 0x28, 0xf337, 0xf632, 0x0, 0x1);
        gbc.writeMem(0xbe53, { 0x71 });
        gbc.writeMem(0xf632, { 0x0 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x2a5c, gbc.sp());
        EXPECT(0xbe54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xbe53));
        EXPECT(0x28, gbc.readMem(0xf632));
        // 71 02D6
        gbc.setState(0x1ce7, 0xf4da, 0xf530, 0xd5ec, 0x3940, 0xcd9d, 0x1, 0x0);
        gbc.writeMem(0x1ce7, { 0x71 });
        gbc.writeMem(0xcd9d, { 0x0 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xf4da, gbc.sp());
        EXPECT(0x1ce8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0xcd9d));
        // 71 02DA
        gbc.setState(0x3d7c, 0x207b, 0x7720, 0xe56, 0x7487, 0x9af2, 0x1, 0x1);
        gbc.writeMem(0x3d7c, { 0x71 });
        gbc.writeMem(0x9af2, { 0x0 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x207b, gbc.sp());
        EXPECT(0x3d7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x9af2));
        // 71 02E0
        gbc.setState(0x6263, 0xd87a, 0x6390, 0x392e, 0xa160, 0xb95e, 0x1, 0x0);
        gbc.writeMem(0x6263, { 0x71 });
        gbc.writeMem(0xb95e, { 0x0 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xd87a, gbc.sp());
        EXPECT(0x6264, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xb95e));
        // 71 02E3
        gbc.setState(0x7d67, 0x25fe, 0x1bd0, 0xb382, 0xcc98, 0x9fbf, 0x1, 0x0);
        gbc.writeMem(0x7d67, { 0x71 });
        gbc.writeMem(0x9fbf, { 0x0 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x25fe, gbc.sp());
        EXPECT(0x7d68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x9fbf));
        // 71 02E4
        gbc.setState(0xab9f, 0xd48c, 0xd940, 0x420a, 0x885b, 0x878b, 0x1, 0x1);
        gbc.writeMem(0x878b, { 0x0 });
        gbc.writeMem(0xab9f, { 0x71 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xd48c, gbc.sp());
        EXPECT(0xaba0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x878b));
        EXPECT(0x71, gbc.readMem(0xab9f));
        // 71 02E5
        gbc.setState(0xb305, 0x78e1, 0xe920, 0xb384, 0xf2ea, 0xf563, 0x1, 0x0);
        gbc.writeMem(0xb305, { 0x71 });
        gbc.writeMem(0xf563, { 0x0 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x78e1, gbc.sp());
        EXPECT(0xb306, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xb305));
        EXPECT(0x84, gbc.readMem(0xf563));
        // 71 02E6
        gbc.setState(0x1f21, 0xb83, 0x8d10, 0xec86, 0x8d5b, 0xa420, 0x0, 0x0);
        gbc.writeMem(0x1f21, { 0x71 });
        gbc.writeMem(0xa420, { 0x0 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xb83, gbc.sp());
        EXPECT(0x1f22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xa420));
        // 71 02E7
        gbc.setState(0xc630, 0x195d, 0xe2b0, 0x6a3c, 0x91c1, 0xa8db, 0x1, 0x1);
        gbc.writeMem(0xa8db, { 0x0 });
        gbc.writeMem(0xc630, { 0x71 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x195d, gbc.sp());
        EXPECT(0xc631, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xa8db));
        EXPECT(0x71, gbc.readMem(0xc630));
        // 71 02E8
        gbc.setState(0x18ae, 0xe4ea, 0xd680, 0x95e5, 0xeb18, 0x9f6a, 0x0, 0x1);
        gbc.writeMem(0x18ae, { 0x71 });
        gbc.writeMem(0x9f6a, { 0x0 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xe4ea, gbc.sp());
        EXPECT(0x18af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0x9f6a));
        // 71 02EB
        gbc.setState(0x5567, 0x5979, 0x2b80, 0x4d6d, 0x3433, 0xc770, 0x0, 0x1);
        gbc.writeMem(0x5567, { 0x71 });
        gbc.writeMem(0xc770, { 0x0 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x5979, gbc.sp());
        EXPECT(0x5568, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xc770));
        // 71 02ED
        gbc.setState(0x5723, 0x1f39, 0xea30, 0xf73a, 0x129d, 0xca99, 0x1, 0x0);
        gbc.writeMem(0x5723, { 0x71 });
        gbc.writeMem(0xca99, { 0x0 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x1f39, gbc.sp());
        EXPECT(0x5724, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3a, gbc.readMem(0xca99));
        // 71 02EE
        gbc.setState(0x1b0, 0xf617, 0x1c20, 0x2fde, 0xbd34, 0xb2c5, 0x1, 0x0);
        gbc.writeMem(0x1b0, { 0x71 });
        gbc.writeMem(0xb2c5, { 0x0 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xf617, gbc.sp());
        EXPECT(0x1b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0xb2c5));
        // 71 02EF
        gbc.setState(0x8cf8, 0xc5fb, 0x3a10, 0xc24, 0x3ae4, 0x9564, 0x1, 0x0);
        gbc.writeMem(0x8cf8, { 0x71 });
        gbc.writeMem(0x9564, { 0x0 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xc5fb, gbc.sp());
        EXPECT(0x8cf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0x8cf8));
        EXPECT(0x24, gbc.readMem(0x9564));
        // 71 02F7
        gbc.setState(0xe894, 0xafc8, 0xdc20, 0x8327, 0xd6c3, 0x91ea, 0x0, 0x0);
        gbc.writeMem(0x91ea, { 0x0 });
        gbc.writeMem(0xe894, { 0x71 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xafc8, gbc.sp());
        EXPECT(0xe895, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x91ea));
        EXPECT(0x71, gbc.readMem(0xe894));
        // 71 02FA
        gbc.setState(0xe94f, 0x8f20, 0x3a20, 0x8b10, 0x1b44, 0xe11c, 0x0, 0x0);
        gbc.writeMem(0xe11c, { 0x0 });
        gbc.writeMem(0xe94f, { 0x71 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x8f20, gbc.sp());
        EXPECT(0xe950, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xe11c));
        EXPECT(0x71, gbc.readMem(0xe94f));
        // 71 02FB
        gbc.setState(0xa061, 0x77e, 0x8910, 0xefb4, 0xbdb2, 0x923c, 0x0, 0x1);
        gbc.writeMem(0x923c, { 0x0 });
        gbc.writeMem(0xa061, { 0x71 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x77e, gbc.sp());
        EXPECT(0xa062, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0x923c));
        EXPECT(0x71, gbc.readMem(0xa061));
        // 71 02FE
        gbc.setState(0xebb8, 0xa190, 0x25d0, 0x6723, 0x361, 0x844c, 0x0, 0x0);
        gbc.writeMem(0x844c, { 0x0 });
        gbc.writeMem(0xebb8, { 0x71 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xa190, gbc.sp());
        EXPECT(0xebb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x23, gbc.readMem(0x844c));
        EXPECT(0x71, gbc.readMem(0xebb8));
        // 71 0300
        gbc.setState(0xbb8e, 0x79f4, 0x95e0, 0x8692, 0xd24d, 0xb783, 0x0, 0x0);
        gbc.writeMem(0xb783, { 0x0 });
        gbc.writeMem(0xbb8e, { 0x71 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x79f4, gbc.sp());
        EXPECT(0xbb8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xb783));
        EXPECT(0x71, gbc.readMem(0xbb8e));
        // 71 0301
        gbc.setState(0x456, 0x6dca, 0x59c0, 0xfb16, 0x794f, 0xcefb, 0x0, 0x0);
        gbc.writeMem(0x456, { 0x71 });
        gbc.writeMem(0xcefb, { 0x0 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x6dca, gbc.sp());
        EXPECT(0x457, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xcefb));
        // 71 0303
        gbc.setState(0x9ba7, 0xead4, 0xdf50, 0x7ba7, 0xe1d, 0xb567, 0x0, 0x0);
        gbc.writeMem(0x9ba7, { 0x71 });
        gbc.writeMem(0xb567, { 0x0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xead4, gbc.sp());
        EXPECT(0x9ba8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0x9ba7));
        EXPECT(0xa7, gbc.readMem(0xb567));
        // 71 0304
        gbc.setState(0x6436, 0x984, 0x4670, 0xe0bd, 0xa3b, 0x85d5, 0x1, 0x1);
        gbc.writeMem(0x6436, { 0x71 });
        gbc.writeMem(0x85d5, { 0x0 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x984, gbc.sp());
        EXPECT(0x6437, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x85d5));
        // 71 0305
        gbc.setState(0x73f3, 0x82cf, 0xe3f0, 0x2e0c, 0x7dae, 0x90eb, 0x0, 0x0);
        gbc.writeMem(0x73f3, { 0x71 });
        gbc.writeMem(0x90eb, { 0x0 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x82cf, gbc.sp());
        EXPECT(0x73f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x90eb));
        // 71 0306
        gbc.setState(0xac30, 0x64ff, 0xe1e0, 0x656e, 0x2e3c, 0xf74f, 0x0, 0x1);
        gbc.writeMem(0xac30, { 0x71 });
        gbc.writeMem(0xf74f, { 0x0 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x64ff, gbc.sp());
        EXPECT(0xac31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xac30));
        EXPECT(0x6e, gbc.readMem(0xf74f));
        // 71 0307
        gbc.setState(0xa68, 0x6c36, 0x11c0, 0xbc62, 0xa0e6, 0xf6d5, 0x0, 0x0);
        gbc.writeMem(0xa68, { 0x71 });
        gbc.writeMem(0xf6d5, { 0x0 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x6c36, gbc.sp());
        EXPECT(0xa69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0xf6d5));
        // 71 0308
        gbc.setState(0x311f, 0x9346, 0xc220, 0xcdc9, 0x6279, 0x9eae, 0x1, 0x0);
        gbc.writeMem(0x311f, { 0x71 });
        gbc.writeMem(0x9eae, { 0x0 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x9346, gbc.sp());
        EXPECT(0x3120, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x9eae));
        // 71 0309
        gbc.setState(0x5ac9, 0x9e76, 0x67d0, 0x80d7, 0x1d31, 0xca80, 0x0, 0x1);
        gbc.writeMem(0x5ac9, { 0x71 });
        gbc.writeMem(0xca80, { 0x0 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x9e76, gbc.sp());
        EXPECT(0x5aca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0xca80));
        // 71 030A
        gbc.setState(0xb043, 0xca3f, 0xdbf0, 0x9ab, 0x5097, 0xa305, 0x1, 0x0);
        gbc.writeMem(0xa305, { 0x0 });
        gbc.writeMem(0xb043, { 0x71 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xca3f, gbc.sp());
        EXPECT(0xb044, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xab, gbc.readMem(0xa305));
        EXPECT(0x71, gbc.readMem(0xb043));
        // 71 030B
        gbc.setState(0x14c3, 0x3201, 0x5940, 0xa84f, 0x90b7, 0x9c53, 0x1, 0x1);
        gbc.writeMem(0x14c3, { 0x71 });
        gbc.writeMem(0x9c53, { 0x0 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x3201, gbc.sp());
        EXPECT(0x14c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4f, gbc.readMem(0x9c53));
        // 71 030E
        gbc.setState(0x1548, 0xf217, 0xcb30, 0xb70d, 0xe04, 0x88c1, 0x1, 0x0);
        gbc.writeMem(0x1548, { 0x71 });
        gbc.writeMem(0x88c1, { 0x0 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xf217, gbc.sp());
        EXPECT(0x1549, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0x88c1));
        // 71 030F
        gbc.setState(0x26c4, 0x4128, 0x4bb0, 0x9f15, 0x9e36, 0x9735, 0x1, 0x0);
        gbc.writeMem(0x26c4, { 0x71 });
        gbc.writeMem(0x9735, { 0x0 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x4128, gbc.sp());
        EXPECT(0x26c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x9735));
        // 71 0313
        gbc.setState(0x88d2, 0x6d41, 0x1370, 0xcc6b, 0x52ea, 0xe364, 0x0, 0x1);
        gbc.writeMem(0x88d2, { 0x71 });
        gbc.writeMem(0xe364, { 0x0 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x6d41, gbc.sp());
        EXPECT(0x88d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0x88d2));
        EXPECT(0x6b, gbc.readMem(0xe364));
        // 71 0319
        gbc.setState(0xa46e, 0xdc6, 0x2240, 0x81bf, 0xb321, 0xe04a, 0x1, 0x1);
        gbc.writeMem(0xa46e, { 0x71 });
        gbc.writeMem(0xe04a, { 0x0 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xdc6, gbc.sp());
        EXPECT(0xa46f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xa46e));
        EXPECT(0xbf, gbc.readMem(0xe04a));
        // 71 031A
        gbc.setState(0x7f2e, 0x143b, 0x3440, 0x8f63, 0xca37, 0xdde4, 0x0, 0x1);
        gbc.writeMem(0x7f2e, { 0x71 });
        gbc.writeMem(0xdde4, { 0x0 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x143b, gbc.sp());
        EXPECT(0x7f2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0xdde4));
        // 71 031B
        gbc.setState(0x9b80, 0x43e9, 0x2470, 0x7e05, 0x9eb4, 0xdedf, 0x1, 0x1);
        gbc.writeMem(0x9b80, { 0x71 });
        gbc.writeMem(0xdedf, { 0x0 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x43e9, gbc.sp());
        EXPECT(0x9b81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0x9b80));
        EXPECT(0x5, gbc.readMem(0xdedf));
        // 71 0320
        gbc.setState(0xaac3, 0xc473, 0xa950, 0xb6fc, 0xdd10, 0xa0e5, 0x1, 0x0);
        gbc.writeMem(0xa0e5, { 0x0 });
        gbc.writeMem(0xaac3, { 0x71 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xc473, gbc.sp());
        EXPECT(0xaac4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfc, gbc.readMem(0xa0e5));
        EXPECT(0x71, gbc.readMem(0xaac3));
        // 71 0322
        gbc.setState(0x5d73, 0x6148, 0x3bb0, 0xd84b, 0xc20f, 0x819b, 0x1, 0x0);
        gbc.writeMem(0x5d73, { 0x71 });
        gbc.writeMem(0x819b, { 0x0 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x6148, gbc.sp());
        EXPECT(0x5d74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x819b));
        // 71 0323
        gbc.setState(0x1b39, 0x19b5, 0x3240, 0x59b5, 0x5019, 0xb297, 0x1, 0x1);
        gbc.writeMem(0x1b39, { 0x71 });
        gbc.writeMem(0xb297, { 0x0 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x19b5, gbc.sp());
        EXPECT(0x1b3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xb297));
        // 71 0326
        gbc.setState(0x7355, 0x2136, 0x1510, 0x7c5f, 0xc691, 0xc04e, 0x1, 0x0);
        gbc.writeMem(0x7355, { 0x71 });
        gbc.writeMem(0xc04e, { 0x0 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x2136, gbc.sp());
        EXPECT(0x7356, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0xc04e));
        // 71 0328
        gbc.setState(0xb902, 0xc794, 0x6f0, 0xe2b6, 0x23d6, 0xcd2d, 0x1, 0x0);
        gbc.writeMem(0xb902, { 0x71 });
        gbc.writeMem(0xcd2d, { 0x0 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xc794, gbc.sp());
        EXPECT(0xb903, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xb902));
        EXPECT(0xb6, gbc.readMem(0xcd2d));
        // 71 032A
        gbc.setState(0x2961, 0x6c9f, 0x8e70, 0xc157, 0x5ca7, 0xc5b1, 0x1, 0x1);
        gbc.writeMem(0x2961, { 0x71 });
        gbc.writeMem(0xc5b1, { 0x0 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x6c9f, gbc.sp());
        EXPECT(0x2962, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xc5b1));
        // 71 032E
        gbc.setState(0x56d2, 0x4aa3, 0xef70, 0xa8fa, 0x4596, 0xd871, 0x1, 0x1);
        gbc.writeMem(0x56d2, { 0x71 });
        gbc.writeMem(0xd871, { 0x0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x4aa3, gbc.sp());
        EXPECT(0x56d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xd871));
        // 71 0330
        gbc.setState(0xe446, 0x38b1, 0xdd30, 0xb0fa, 0x58, 0xf68c, 0x1, 0x0);
        gbc.writeMem(0xe446, { 0x71 });
        gbc.writeMem(0xf68c, { 0x0 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x38b1, gbc.sp());
        EXPECT(0xe447, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xe446));
        EXPECT(0xfa, gbc.readMem(0xf68c));
        // 71 0331
        gbc.setState(0x21e6, 0x7d05, 0x7930, 0xaed4, 0x12e3, 0xe206, 0x1, 0x1);
        gbc.writeMem(0x21e6, { 0x71 });
        gbc.writeMem(0xe206, { 0x0 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x7d05, gbc.sp());
        EXPECT(0x21e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xe206));
        // 71 0334
        gbc.setState(0xaae5, 0xbb92, 0xacc0, 0xd10f, 0xd068, 0xb0a9, 0x1, 0x0);
        gbc.writeMem(0xaae5, { 0x71 });
        gbc.writeMem(0xb0a9, { 0x0 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xbb92, gbc.sp());
        EXPECT(0xaae6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xaae5));
        EXPECT(0xf, gbc.readMem(0xb0a9));
        // 71 0335
        gbc.setState(0x7ff5, 0x2472, 0xb470, 0x25a9, 0x9e14, 0xb54b, 0x0, 0x0);
        gbc.writeMem(0x7ff5, { 0x71 });
        gbc.writeMem(0xb54b, { 0x0 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x2472, gbc.sp());
        EXPECT(0x7ff6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa9, gbc.readMem(0xb54b));
        // 71 033C
        gbc.setState(0x4f20, 0x183b, 0xc950, 0xa25c, 0xb3d6, 0xa686, 0x1, 0x0);
        gbc.writeMem(0x4f20, { 0x71 });
        gbc.writeMem(0xa686, { 0x0 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x183b, gbc.sp());
        EXPECT(0x4f21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0xa686));
        // 71 033D
        gbc.setState(0xc2fb, 0x95d3, 0xc840, 0x1068, 0x2870, 0xeaff, 0x0, 0x0);
        gbc.writeMem(0xc2fb, { 0x71 });
        gbc.writeMem(0xeaff, { 0x0 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x95d3, gbc.sp());
        EXPECT(0xc2fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xc2fb));
        EXPECT(0x68, gbc.readMem(0xeaff));
        // 71 033F
        gbc.setState(0xbbc9, 0xdd25, 0xdcd0, 0x7a1d, 0xd3ba, 0x9e8d, 0x0, 0x0);
        gbc.writeMem(0x9e8d, { 0x0 });
        gbc.writeMem(0xbbc9, { 0x71 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xdd25, gbc.sp());
        EXPECT(0xbbca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x9e8d));
        EXPECT(0x71, gbc.readMem(0xbbc9));
        // 71 0341
        gbc.setState(0xdd37, 0x7e01, 0x7b40, 0xc64d, 0x679f, 0x85bc, 0x1, 0x1);
        gbc.writeMem(0x85bc, { 0x0 });
        gbc.writeMem(0xdd37, { 0x71 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x7e01, gbc.sp());
        EXPECT(0xdd38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x85bc));
        EXPECT(0x71, gbc.readMem(0xdd37));
        // 71 0347
        gbc.setState(0xc4fa, 0xc744, 0x2470, 0x20ad, 0x723d, 0x9a6f, 0x1, 0x1);
        gbc.writeMem(0x9a6f, { 0x0 });
        gbc.writeMem(0xc4fa, { 0x71 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xc744, gbc.sp());
        EXPECT(0xc4fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0x9a6f));
        EXPECT(0x71, gbc.readMem(0xc4fa));
        // 71 034A
        gbc.setState(0x2b59, 0x4ef8, 0x8e50, 0x41c7, 0xfd3d, 0xe39c, 0x0, 0x0);
        gbc.writeMem(0x2b59, { 0x71 });
        gbc.writeMem(0xe39c, { 0x0 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x4ef8, gbc.sp());
        EXPECT(0x2b5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xe39c));
        // 71 034F
        gbc.setState(0x5f17, 0xa2bf, 0xbcf0, 0x88aa, 0x755f, 0x9c04, 0x1, 0x1);
        gbc.writeMem(0x5f17, { 0x71 });
        gbc.writeMem(0x9c04, { 0x0 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xa2bf, gbc.sp());
        EXPECT(0x5f18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x9c04));
        // 71 0350
        gbc.setState(0x69cb, 0x482d, 0x89d0, 0x6b30, 0x634b, 0xd07d, 0x0, 0x0);
        gbc.writeMem(0x69cb, { 0x71 });
        gbc.writeMem(0xd07d, { 0x0 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x482d, gbc.sp());
        EXPECT(0x69cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0xd07d));
        // 71 0351
        gbc.setState(0xb690, 0x2d52, 0x61b0, 0xce54, 0xc732, 0xca50, 0x0, 0x0);
        gbc.writeMem(0xb690, { 0x71 });
        gbc.writeMem(0xca50, { 0x0 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x2d52, gbc.sp());
        EXPECT(0xb691, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xb690));
        EXPECT(0x54, gbc.readMem(0xca50));
        // 71 0356
        gbc.setState(0x8eba, 0x42e0, 0x7cf0, 0x8d6d, 0xe33d, 0xb335, 0x0, 0x0);
        gbc.writeMem(0x8eba, { 0x71 });
        gbc.writeMem(0xb335, { 0x0 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x42e0, gbc.sp());
        EXPECT(0x8ebb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0x8eba));
        EXPECT(0x6d, gbc.readMem(0xb335));
        // 71 0357
        gbc.setState(0x6e6e, 0xc301, 0x21a0, 0x1b61, 0xb97f, 0xeb5e, 0x1, 0x0);
        gbc.writeMem(0x6e6e, { 0x71 });
        gbc.writeMem(0xeb5e, { 0x0 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xc301, gbc.sp());
        EXPECT(0x6e6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xeb5e));
        // 71 0358
        gbc.setState(0x6222, 0x35c6, 0xbc10, 0x103f, 0xc789, 0xa8b8, 0x0, 0x0);
        gbc.writeMem(0x6222, { 0x71 });
        gbc.writeMem(0xa8b8, { 0x0 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x35c6, gbc.sp());
        EXPECT(0x6223, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xa8b8));
        // 71 0359
        gbc.setState(0xdd10, 0x779a, 0xcb00, 0xd70e, 0xf41d, 0xe4d2, 0x0, 0x1);
        gbc.writeMem(0xdd10, { 0x71 });
        gbc.writeMem(0xe4d2, { 0x0 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x779a, gbc.sp());
        EXPECT(0xdd11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xdd10));
        EXPECT(0xe, gbc.readMem(0xe4d2));
        // 71 035E
        gbc.setState(0xb35c, 0x1022, 0xf100, 0x5f6, 0x3d7a, 0xc598, 0x0, 0x0);
        gbc.writeMem(0xb35c, { 0x71 });
        gbc.writeMem(0xc598, { 0x0 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x1022, gbc.sp());
        EXPECT(0xb35d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xb35c));
        EXPECT(0xf6, gbc.readMem(0xc598));
        // 71 0364
        gbc.setState(0xbe88, 0xb4b7, 0xb410, 0xcb7, 0x6d4, 0x8625, 0x1, 0x1);
        gbc.writeMem(0x8625, { 0x0 });
        gbc.writeMem(0xbe88, { 0x71 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xb4b7, gbc.sp());
        EXPECT(0xbe89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x8625));
        EXPECT(0x71, gbc.readMem(0xbe88));
        // 71 0365
        gbc.setState(0x8a4c, 0xc85c, 0xc1f0, 0xa7c9, 0xc, 0xa911, 0x1, 0x0);
        gbc.writeMem(0x8a4c, { 0x71 });
        gbc.writeMem(0xa911, { 0x0 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xc85c, gbc.sp());
        EXPECT(0x8a4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0x8a4c));
        EXPECT(0xc9, gbc.readMem(0xa911));
        // 71 036B
        gbc.setState(0x2add, 0xe85e, 0xa1a0, 0xc1e8, 0x4430, 0x9fe7, 0x1, 0x1);
        gbc.writeMem(0x2add, { 0x71 });
        gbc.writeMem(0x9fe7, { 0x0 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xe85e, gbc.sp());
        EXPECT(0x2ade, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0x9fe7));
        // 71 036C
        gbc.setState(0xe03d, 0xb991, 0x4a60, 0x4429, 0x9757, 0x9ebf, 0x1, 0x1);
        gbc.writeMem(0x9ebf, { 0x0 });
        gbc.writeMem(0xe03d, { 0x71 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xb991, gbc.sp());
        EXPECT(0xe03e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x9ebf));
        EXPECT(0x71, gbc.readMem(0xe03d));
        // 71 036E
        gbc.setState(0x92a2, 0x2de8, 0x6230, 0xa2d5, 0xe86, 0xbdbc, 0x1, 0x1);
        gbc.writeMem(0x92a2, { 0x71 });
        gbc.writeMem(0xbdbc, { 0x0 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x2de8, gbc.sp());
        EXPECT(0x92a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0x92a2));
        EXPECT(0xd5, gbc.readMem(0xbdbc));
        // 71 036F
        gbc.setState(0x9e73, 0x5b40, 0xf2a0, 0x3d5b, 0xfc74, 0xdddd, 0x1, 0x1);
        gbc.writeMem(0x9e73, { 0x71 });
        gbc.writeMem(0xdddd, { 0x0 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x5b40, gbc.sp());
        EXPECT(0x9e74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0x9e73));
        EXPECT(0x5b, gbc.readMem(0xdddd));
        // 71 0372
        gbc.setState(0x34a2, 0x9f24, 0xb1f0, 0xf6eb, 0x82d8, 0xda98, 0x0, 0x1);
        gbc.writeMem(0x34a2, { 0x71 });
        gbc.writeMem(0xda98, { 0x0 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x9f24, gbc.sp());
        EXPECT(0x34a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xeb, gbc.readMem(0xda98));
        // 71 0376
        gbc.setState(0x13c8, 0x88c2, 0xce90, 0x8e95, 0x657b, 0xb363, 0x0, 0x1);
        gbc.writeMem(0x13c8, { 0x71 });
        gbc.writeMem(0xb363, { 0x0 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x88c2, gbc.sp());
        EXPECT(0x13c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xb363));
        // 71 0377
        gbc.setState(0x5086, 0x9e29, 0x6740, 0x4cf7, 0x1cb4, 0x9146, 0x0, 0x0);
        gbc.writeMem(0x5086, { 0x71 });
        gbc.writeMem(0x9146, { 0x0 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x9e29, gbc.sp());
        EXPECT(0x5087, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0x9146));
        // 71 037A
        gbc.setState(0xd480, 0x3c6c, 0xfe50, 0xd946, 0x9fdc, 0x9b7a, 0x1, 0x1);
        gbc.writeMem(0x9b7a, { 0x0 });
        gbc.writeMem(0xd480, { 0x71 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x3c6c, gbc.sp());
        EXPECT(0xd481, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0x9b7a));
        EXPECT(0x71, gbc.readMem(0xd480));
        // 71 037D
        gbc.setState(0x8a06, 0x5cda, 0xa7a0, 0x28cb, 0x5cff, 0xde1f, 0x1, 0x1);
        gbc.writeMem(0x8a06, { 0x71 });
        gbc.writeMem(0xde1f, { 0x0 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x5cda, gbc.sp());
        EXPECT(0x8a07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0x8a06));
        EXPECT(0xcb, gbc.readMem(0xde1f));
        // 71 037E
        gbc.setState(0x2cf3, 0x2c20, 0xe0, 0x847d, 0xca9c, 0xec48, 0x0, 0x0);
        gbc.writeMem(0x2cf3, { 0x71 });
        gbc.writeMem(0xec48, { 0x0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x2c20, gbc.sp());
        EXPECT(0x2cf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xec48));
        // 71 0380
        gbc.setState(0x1892, 0x4de9, 0x8dd0, 0x6623, 0x54da, 0xc8e0, 0x0, 0x1);
        gbc.writeMem(0x1892, { 0x71 });
        gbc.writeMem(0xc8e0, { 0x0 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x4de9, gbc.sp());
        EXPECT(0x1893, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x23, gbc.readMem(0xc8e0));
        // 71 0382
        gbc.setState(0x9c81, 0x934c, 0xd1c0, 0x9c6f, 0x44ba, 0xf2ae, 0x0, 0x1);
        gbc.writeMem(0x9c81, { 0x71 });
        gbc.writeMem(0xf2ae, { 0x0 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x934c, gbc.sp());
        EXPECT(0x9c82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0x9c81));
        EXPECT(0x6f, gbc.readMem(0xf2ae));
        // 71 0383
        gbc.setState(0xecbf, 0x4758, 0x540, 0x1c8c, 0xf4db, 0xcaf0, 0x0, 0x1);
        gbc.writeMem(0xcaf0, { 0x0 });
        gbc.writeMem(0xecbf, { 0x71 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x4758, gbc.sp());
        EXPECT(0xecc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xcaf0));
        EXPECT(0x71, gbc.readMem(0xecbf));
        // 71 0384
        gbc.setState(0x1ec0, 0xaad8, 0x6a50, 0x2292, 0x846, 0xa266, 0x0, 0x0);
        gbc.writeMem(0x1ec0, { 0x71 });
        gbc.writeMem(0xa266, { 0x0 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xaad8, gbc.sp());
        EXPECT(0x1ec1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xa266));
        // 71 0388
        gbc.setState(0xdec0, 0xe0f3, 0x6b10, 0x5870, 0xae3b, 0xac68, 0x0, 0x0);
        gbc.writeMem(0xac68, { 0x0 });
        gbc.writeMem(0xdec0, { 0x71 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xe0f3, gbc.sp());
        EXPECT(0xdec1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0xac68));
        EXPECT(0x71, gbc.readMem(0xdec0));
        // 71 038A
        gbc.setState(0xd7a2, 0xbd91, 0x2af0, 0x3791, 0x9651, 0xf668, 0x1, 0x0);
        gbc.writeMem(0xd7a2, { 0x71 });
        gbc.writeMem(0xf668, { 0x0 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xbd91, gbc.sp());
        EXPECT(0xd7a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xd7a2));
        EXPECT(0x91, gbc.readMem(0xf668));
        // 71 038B
        gbc.setState(0x843d, 0x9496, 0xff30, 0x97a8, 0x6948, 0x9af1, 0x0, 0x0);
        gbc.writeMem(0x843d, { 0x71 });
        gbc.writeMem(0x9af1, { 0x0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x9496, gbc.sp());
        EXPECT(0x843e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0x843d));
        EXPECT(0xa8, gbc.readMem(0x9af1));
        // 71 038C
        gbc.setState(0xeda, 0x2b8d, 0x690, 0xb27a, 0xf288, 0xda4a, 0x1, 0x1);
        gbc.writeMem(0xeda, { 0x71 });
        gbc.writeMem(0xda4a, { 0x0 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x2b8d, gbc.sp());
        EXPECT(0xedb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xda4a));
        // 71 038F
        gbc.setState(0xaa9d, 0x573b, 0xa50, 0x4929, 0xc1d, 0xf9ad, 0x0, 0x0);
        gbc.writeMem(0xaa9d, { 0x71 });
        gbc.writeMem(0xf9ad, { 0x0 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x573b, gbc.sp());
        EXPECT(0xaa9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xaa9d));
        EXPECT(0x29, gbc.readMem(0xf9ad));
        // 71 0392
        gbc.setState(0x23, 0x5372, 0xfbb0, 0x903c, 0x2961, 0xdfd8, 0x1, 0x1);
        gbc.writeMem(0x23, { 0x71 });
        gbc.writeMem(0xdfd8, { 0x0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x5372, gbc.sp());
        EXPECT(0x24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xdfd8));
        // 71 0393
        gbc.setState(0x7077, 0x3b41, 0xa870, 0x11c6, 0xa84e, 0xf9cc, 0x0, 0x1);
        gbc.writeMem(0x7077, { 0x71 });
        gbc.writeMem(0xf9cc, { 0x0 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x3b41, gbc.sp());
        EXPECT(0x7078, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xf9cc));
        // 71 0395
        gbc.setState(0x5cb1, 0x5840, 0x7d80, 0xc9a6, 0xf29f, 0xd1de, 0x0, 0x1);
        gbc.writeMem(0x5cb1, { 0x71 });
        gbc.writeMem(0xd1de, { 0x0 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x5840, gbc.sp());
        EXPECT(0x5cb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xd1de));
        // 71 0398
        gbc.setState(0x3e88, 0xafee, 0xc7a0, 0xbff0, 0x3d94, 0xeee6, 0x0, 0x0);
        gbc.writeMem(0x3e88, { 0x71 });
        gbc.writeMem(0xeee6, { 0x0 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xafee, gbc.sp());
        EXPECT(0x3e89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xeee6));
        // 71 0399
        gbc.setState(0xbba0, 0xadef, 0xf6e0, 0xd825, 0xbe88, 0xc60a, 0x0, 0x1);
        gbc.writeMem(0xbba0, { 0x71 });
        gbc.writeMem(0xc60a, { 0x0 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xadef, gbc.sp());
        EXPECT(0xbba1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xbba0));
        EXPECT(0x25, gbc.readMem(0xc60a));
        // 71 039D
        gbc.setState(0x2f56, 0x18ef, 0xeb60, 0xeb35, 0xeef5, 0xd75e, 0x1, 0x1);
        gbc.writeMem(0x2f56, { 0x71 });
        gbc.writeMem(0xd75e, { 0x0 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x18ef, gbc.sp());
        EXPECT(0x2f57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xd75e));
        // 71 039E
        gbc.setState(0xba1d, 0x32f3, 0x6c20, 0x10e6, 0x38db, 0x9034, 0x0, 0x1);
        gbc.writeMem(0x9034, { 0x0 });
        gbc.writeMem(0xba1d, { 0x71 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x32f3, gbc.sp());
        EXPECT(0xba1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x9034));
        EXPECT(0x71, gbc.readMem(0xba1d));
        // 71 039F
        gbc.setState(0x3434, 0x1b1f, 0xbf60, 0xa5b9, 0x45cd, 0xe493, 0x1, 0x0);
        gbc.writeMem(0x3434, { 0x71 });
        gbc.writeMem(0xe493, { 0x0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x1b1f, gbc.sp());
        EXPECT(0x3435, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xe493));
        // 71 03A4
        gbc.setState(0x36ee, 0x4faa, 0x8d60, 0xdd5a, 0xbfde, 0xe0a1, 0x1, 0x0);
        gbc.writeMem(0x36ee, { 0x71 });
        gbc.writeMem(0xe0a1, { 0x0 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x4faa, gbc.sp());
        EXPECT(0x36ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5a, gbc.readMem(0xe0a1));
        // 71 03AA
        gbc.setState(0x4ddc, 0xd5f2, 0x25e0, 0x3293, 0x8e43, 0xe378, 0x1, 0x0);
        gbc.writeMem(0x4ddc, { 0x71 });
        gbc.writeMem(0xe378, { 0x0 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xd5f2, gbc.sp());
        EXPECT(0x4ddd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xe378));
        // 71 03AC
        gbc.setState(0x7cc2, 0xe54a, 0x8650, 0xdfd2, 0x748a, 0xafb4, 0x0, 0x1);
        gbc.writeMem(0x7cc2, { 0x71 });
        gbc.writeMem(0xafb4, { 0x0 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xe54a, gbc.sp());
        EXPECT(0x7cc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0xafb4));
        // 71 03AD
        gbc.setState(0xa6f4, 0x699a, 0x87e0, 0x4b66, 0x4469, 0xcec4, 0x0, 0x1);
        gbc.writeMem(0xa6f4, { 0x71 });
        gbc.writeMem(0xcec4, { 0x0 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x699a, gbc.sp());
        EXPECT(0xa6f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xa6f4));
        EXPECT(0x66, gbc.readMem(0xcec4));
        // 71 03AE
        gbc.setState(0x37a1, 0x9ff5, 0x83c0, 0x5b8b, 0x1ad4, 0xcafe, 0x0, 0x1);
        gbc.writeMem(0x37a1, { 0x71 });
        gbc.writeMem(0xcafe, { 0x0 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x9ff5, gbc.sp());
        EXPECT(0x37a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0xcafe));
        // 71 03B1
        gbc.setState(0x65b5, 0xb6cc, 0x3c90, 0xb356, 0xeb6e, 0xf809, 0x0, 0x0);
        gbc.writeMem(0x65b5, { 0x71 });
        gbc.writeMem(0xf809, { 0x0 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xb6cc, gbc.sp());
        EXPECT(0x65b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xf809));
        // 71 03B3
        gbc.setState(0xe92b, 0xaec3, 0x6a90, 0xdbfd, 0x445e, 0xec49, 0x0, 0x0);
        gbc.writeMem(0xe92b, { 0x71 });
        gbc.writeMem(0xec49, { 0x0 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xaec3, gbc.sp());
        EXPECT(0xe92c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xe92b));
        EXPECT(0xfd, gbc.readMem(0xec49));
        // 71 03B5
        gbc.setState(0x135c, 0x30c, 0xa670, 0x18f6, 0xafc3, 0x8071, 0x0, 0x1);
        gbc.writeMem(0x135c, { 0x71 });
        gbc.writeMem(0x8071, { 0x0 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x30c, gbc.sp());
        EXPECT(0x135d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf6, gbc.readMem(0x8071));
        // 71 03B7
        gbc.setState(0x69c2, 0xc236, 0xf980, 0x6bd0, 0xe8b6, 0x9729, 0x0, 0x1);
        gbc.writeMem(0x69c2, { 0x71 });
        gbc.writeMem(0x9729, { 0x0 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xc236, gbc.sp());
        EXPECT(0x69c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0x9729));
        // 71 03BA
        gbc.setState(0x73e7, 0x679e, 0x5d90, 0xcb3c, 0xba2f, 0xc563, 0x1, 0x0);
        gbc.writeMem(0x73e7, { 0x71 });
        gbc.writeMem(0xc563, { 0x0 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x679e, gbc.sp());
        EXPECT(0x73e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xc563));
        // 71 03BD
        gbc.setState(0xb070, 0x97f3, 0xd00, 0xe19c, 0x77ac, 0xc32a, 0x1, 0x1);
        gbc.writeMem(0xb070, { 0x71 });
        gbc.writeMem(0xc32a, { 0x0 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x97f3, gbc.sp());
        EXPECT(0xb071, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xb070));
        EXPECT(0x9c, gbc.readMem(0xc32a));
        // 71 03C1
        gbc.setState(0xb68c, 0x6bca, 0x82c0, 0x37f, 0xa5f9, 0xdca5, 0x1, 0x0);
        gbc.writeMem(0xb68c, { 0x71 });
        gbc.writeMem(0xdca5, { 0x0 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x6bca, gbc.sp());
        EXPECT(0xb68d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xb68c));
        EXPECT(0x7f, gbc.readMem(0xdca5));
        // 71 03C3
        gbc.setState(0x7f1a, 0x4fce, 0xeae0, 0xd3ef, 0xbd8e, 0xa0fe, 0x0, 0x1);
        gbc.writeMem(0x7f1a, { 0x71 });
        gbc.writeMem(0xa0fe, { 0x0 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x4fce, gbc.sp());
        EXPECT(0x7f1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0xa0fe));
        // 71 03C6
        gbc.setState(0x34a, 0x3f52, 0x640, 0xc8fa, 0x9251, 0x9424, 0x1, 0x0);
        gbc.writeMem(0x34a, { 0x71 });
        gbc.writeMem(0x9424, { 0x0 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x3f52, gbc.sp());
        EXPECT(0x34b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x9424));
        // 71 03CC
        gbc.setState(0x2366, 0x104d, 0x2c90, 0x743f, 0xa6a, 0xe7a0, 0x1, 0x0);
        gbc.writeMem(0x2366, { 0x71 });
        gbc.writeMem(0xe7a0, { 0x0 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x104d, gbc.sp());
        EXPECT(0x2367, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xe7a0));
        // 71 03CD
        gbc.setState(0x106e, 0x245a, 0x2c00, 0x9253, 0x622, 0xcb73, 0x0, 0x0);
        gbc.writeMem(0x106e, { 0x71 });
        gbc.writeMem(0xcb73, { 0x0 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x245a, gbc.sp());
        EXPECT(0x106f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xcb73));
        // 71 03CF
        gbc.setState(0x96a8, 0xbd02, 0x1ce0, 0x9fff, 0xa4a8, 0x93d1, 0x0, 0x1);
        gbc.writeMem(0x93d1, { 0x0 });
        gbc.writeMem(0x96a8, { 0x71 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xbd02, gbc.sp());
        EXPECT(0x96a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x93d1));
        EXPECT(0x71, gbc.readMem(0x96a8));
        // 71 03D2
        gbc.setState(0xe418, 0x2111, 0x1bd0, 0xe05f, 0xd538, 0xbbd8, 0x1, 0x0);
        gbc.writeMem(0xbbd8, { 0x0 });
        gbc.writeMem(0xe418, { 0x71 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x2111, gbc.sp());
        EXPECT(0xe419, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0xbbd8));
        EXPECT(0x71, gbc.readMem(0xe418));
        // 71 03D3
        gbc.setState(0x6ab3, 0x9a01, 0x17d0, 0x2b4d, 0xb269, 0xc169, 0x1, 0x0);
        gbc.writeMem(0x6ab3, { 0x71 });
        gbc.writeMem(0xc169, { 0x0 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x9a01, gbc.sp());
        EXPECT(0x6ab4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xc169));
        // 71 03D5
        gbc.setState(0x650c, 0x2384, 0x3940, 0xb843, 0xc6fc, 0xe4f5, 0x0, 0x1);
        gbc.writeMem(0x650c, { 0x71 });
        gbc.writeMem(0xe4f5, { 0x0 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x2384, gbc.sp());
        EXPECT(0x650d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xe4f5));
        // 71 03D7
        gbc.setState(0x3509, 0x9cef, 0x1e20, 0xd5ea, 0xe07b, 0xf104, 0x1, 0x1);
        gbc.writeMem(0x3509, { 0x71 });
        gbc.writeMem(0xf104, { 0x0 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x9cef, gbc.sp());
        EXPECT(0x350a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0xf104));
        // 71 03D9
        gbc.setState(0x6efc, 0x4008, 0x6bf0, 0xc09, 0x3c6e, 0xf7ca, 0x0, 0x1);
        gbc.writeMem(0x6efc, { 0x71 });
        gbc.writeMem(0xf7ca, { 0x0 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x4008, gbc.sp());
        EXPECT(0x6efd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xf7ca));
        // 71 03DA
        gbc.setState(0xa1a2, 0x2d21, 0x3b20, 0x86, 0x673d, 0xdee6, 0x0, 0x1);
        gbc.writeMem(0xa1a2, { 0x71 });
        gbc.writeMem(0xdee6, { 0x0 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x2d21, gbc.sp());
        EXPECT(0xa1a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xa1a2));
        EXPECT(0x86, gbc.readMem(0xdee6));
        // 71 03DD
        gbc.setState(0xb0a3, 0xc2fe, 0x6e20, 0x518d, 0x47b0, 0x86c9, 0x1, 0x0);
        gbc.writeMem(0x86c9, { 0x0 });
        gbc.writeMem(0xb0a3, { 0x71 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xc2fe, gbc.sp());
        EXPECT(0xb0a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x86c9));
        EXPECT(0x71, gbc.readMem(0xb0a3));
        // 71 03DE
        gbc.setState(0xd0a6, 0xa674, 0x9b0, 0xae31, 0x302e, 0x9408, 0x1, 0x1);
        gbc.writeMem(0x9408, { 0x0 });
        gbc.writeMem(0xd0a6, { 0x71 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xa674, gbc.sp());
        EXPECT(0xd0a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x9408));
        EXPECT(0x71, gbc.readMem(0xd0a6));
        // 71 03DF
        gbc.setState(0xebfb, 0x8832, 0xf0e0, 0xd063, 0x6279, 0xcfcf, 0x0, 0x0);
        gbc.writeMem(0xcfcf, { 0x0 });
        gbc.writeMem(0xebfb, { 0x71 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x8832, gbc.sp());
        EXPECT(0xebfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0xcfcf));
        EXPECT(0x71, gbc.readMem(0xebfb));
        // 71 03E0
        gbc.setState(0xbf76, 0x17c4, 0x9120, 0x3bdc, 0x81e2, 0xa799, 0x1, 0x1);
        gbc.writeMem(0xa799, { 0x0 });
        gbc.writeMem(0xbf76, { 0x71 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x17c4, gbc.sp());
        EXPECT(0xbf77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0xa799));
        EXPECT(0x71, gbc.readMem(0xbf76));
        // 71 03E2
        gbc.setState(0x5d4e, 0x80c9, 0x4010, 0x8354, 0x1e0f, 0xc441, 0x1, 0x0);
        gbc.writeMem(0x5d4e, { 0x71 });
        gbc.writeMem(0xc441, { 0x0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x80c9, gbc.sp());
        EXPECT(0x5d4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x54, gbc.readMem(0xc441));
        // 71 03E3
        gbc.setState(0x9f5f, 0xe629, 0x7d20, 0x11a0, 0x562a, 0xc06a, 0x0, 0x0);
        gbc.writeMem(0x9f5f, { 0x71 });
        gbc.writeMem(0xc06a, { 0x0 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xe629, gbc.sp());
        EXPECT(0x9f60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0x9f5f));
        EXPECT(0xa0, gbc.readMem(0xc06a));
        // 71 03E5
        gbc.setState(0x1518, 0x6373, 0xa030, 0x19b5, 0x1e62, 0xfcf0, 0x1, 0x1);
        gbc.writeMem(0x1518, { 0x71 });
        gbc.writeMem(0xfcf0, { 0x0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x6373, gbc.sp());
        EXPECT(0x1519, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xfcf0));
    }
