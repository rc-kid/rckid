#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_cb_bf)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_cb_bf) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB BF 0000
        gbc.setState(0x5e5e, 0xe790, 0x2190, 0xb796, 0x657a, 0xb050, 0x1, 0x0);
        gbc.writeMem(0x5e5e, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xe790);
        EXPECT(gbc.pc(), 0x5e60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0001
        gbc.setState(0x9ee2, 0x88a1, 0xb000, 0xc1c0, 0x9426, 0x71f4, 0x1, 0x0);
        gbc.writeMem(0x9ee2, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x88a1);
        EXPECT(gbc.pc(), 0x9ee4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ee2), 0xcb);
        EXPECT(gbc.readMem(0x9ee3), 0xbf);
        // CB BF 0002
        gbc.setState(0x56b9, 0x6925, 0x16d0, 0x66fd, 0xe433, 0xe17e, 0x0, 0x1);
        gbc.writeMem(0x56b9, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x6925);
        EXPECT(gbc.pc(), 0x56bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0003
        gbc.setState(0x190, 0x1fa6, 0x1aa0, 0xd372, 0x82ab, 0x6d69, 0x0, 0x1);
        gbc.writeMem(0x190, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x1fa6);
        EXPECT(gbc.pc(), 0x192);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0004
        gbc.setState(0x6246, 0x6d56, 0x2880, 0xa8a3, 0xa8b7, 0xaac9, 0x1, 0x0);
        gbc.writeMem(0x6246, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x6d56);
        EXPECT(gbc.pc(), 0x6248);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0005
        gbc.setState(0x9020, 0xe3b8, 0x3f40, 0xa9d1, 0x877f, 0x1197, 0x0, 0x0);
        gbc.writeMem(0x9020, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xe3b8);
        EXPECT(gbc.pc(), 0x9022);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9020), 0xcb);
        EXPECT(gbc.readMem(0x9021), 0xbf);
        // CB BF 0006
        gbc.setState(0xc835, 0x5d30, 0x1550, 0xfc56, 0x4068, 0x49e1, 0x0, 0x0);
        gbc.writeMem(0xc835, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x5d30);
        EXPECT(gbc.pc(), 0xc837);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc835), 0xcb);
        EXPECT(gbc.readMem(0xc836), 0xbf);
        // CB BF 0007
        gbc.setState(0x81f6, 0xfd6a, 0x6e30, 0x4014, 0xbd0d, 0xcb6f, 0x1, 0x0);
        gbc.writeMem(0x81f6, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xfd6a);
        EXPECT(gbc.pc(), 0x81f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81f6), 0xcb);
        EXPECT(gbc.readMem(0x81f7), 0xbf);
        // CB BF 0008
        gbc.setState(0x45d4, 0x3184, 0x2b0, 0xa11, 0xb5e4, 0x8ba3, 0x0, 0x0);
        gbc.writeMem(0x45d4, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x3184);
        EXPECT(gbc.pc(), 0x45d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0009
        gbc.setState(0xa1a6, 0x6b38, 0xa490, 0x8475, 0x9891, 0xaf87, 0x1, 0x1);
        gbc.writeMem(0xa1a6, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x6b38);
        EXPECT(gbc.pc(), 0xa1a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1a6), 0xcb);
        EXPECT(gbc.readMem(0xa1a7), 0xbf);
        // CB BF 000A
        gbc.setState(0x1529, 0x999e, 0xdd00, 0xbb6d, 0xccb3, 0xe1c2, 0x1, 0x0);
        gbc.writeMem(0x1529, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x999e);
        EXPECT(gbc.pc(), 0x152b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 000B
        gbc.setState(0x9f50, 0x2364, 0xb1e0, 0x755b, 0x35f7, 0x5148, 0x1, 0x1);
        gbc.writeMem(0x9f50, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x2364);
        EXPECT(gbc.pc(), 0x9f52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f50), 0xcb);
        EXPECT(gbc.readMem(0x9f51), 0xbf);
        // CB BF 000C
        gbc.setState(0x29ba, 0xaf05, 0x41b0, 0xaa30, 0x87b0, 0x9d7b, 0x0, 0x0);
        gbc.writeMem(0x29ba, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xaf05);
        EXPECT(gbc.pc(), 0x29bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 000D
        gbc.setState(0x4890, 0xd65c, 0x5330, 0xd8f7, 0x5217, 0xbbf3, 0x1, 0x1);
        gbc.writeMem(0x4890, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xd65c);
        EXPECT(gbc.pc(), 0x4892);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 000E
        gbc.setState(0x788d, 0xf788, 0x3790, 0x1629, 0xc203, 0x8b62, 0x0, 0x1);
        gbc.writeMem(0x788d, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xf788);
        EXPECT(gbc.pc(), 0x788f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 000F
        gbc.setState(0x52c4, 0xdba5, 0xe430, 0xdc74, 0x1351, 0x42b7, 0x0, 0x1);
        gbc.writeMem(0x52c4, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xdba5);
        EXPECT(gbc.pc(), 0x52c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0010
        gbc.setState(0x2882, 0x3d41, 0xfe60, 0x11f8, 0x3733, 0xd4d8, 0x0, 0x0);
        gbc.writeMem(0x2882, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x3d41);
        EXPECT(gbc.pc(), 0x2884);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0011
        gbc.setState(0x9639, 0x369b, 0x7030, 0x8e3d, 0x9af6, 0x66e6, 0x1, 0x0);
        gbc.writeMem(0x9639, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x369b);
        EXPECT(gbc.pc(), 0x963b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9639), 0xcb);
        EXPECT(gbc.readMem(0x963a), 0xbf);
        // CB BF 0012
        gbc.setState(0x29c5, 0xb8b6, 0x1f40, 0x5358, 0xf26c, 0xb394, 0x0, 0x0);
        gbc.writeMem(0x29c5, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xb8b6);
        EXPECT(gbc.pc(), 0x29c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0013
        gbc.setState(0x43d2, 0xca15, 0xb8d0, 0x3dad, 0xa3da, 0x762e, 0x1, 0x1);
        gbc.writeMem(0x43d2, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xca15);
        EXPECT(gbc.pc(), 0x43d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0014
        gbc.setState(0x6efe, 0x7a5d, 0xffb0, 0x47e4, 0xd12e, 0xfd5a, 0x0, 0x0);
        gbc.writeMem(0x6efe, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x7a5d);
        EXPECT(gbc.pc(), 0x6f00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0015
        gbc.setState(0xd707, 0x460f, 0x8670, 0xfee8, 0x85d2, 0x6ddc, 0x0, 0x0);
        gbc.writeMem(0xd707, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x460f);
        EXPECT(gbc.pc(), 0xd709);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd707), 0xcb);
        EXPECT(gbc.readMem(0xd708), 0xbf);
        // CB BF 0016
        gbc.setState(0x1ded, 0xf163, 0xcb30, 0x1c4f, 0x1cf3, 0x58e4, 0x0, 0x0);
        gbc.writeMem(0x1ded, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xf163);
        EXPECT(gbc.pc(), 0x1def);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0017
        gbc.setState(0x4e1e, 0xf7dc, 0xd190, 0xdece, 0xb496, 0x632e, 0x0, 0x1);
        gbc.writeMem(0x4e1e, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xf7dc);
        EXPECT(gbc.pc(), 0x4e20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0018
        gbc.setState(0x69fd, 0x4197, 0x1cb0, 0xe0a4, 0x1557, 0xebef, 0x0, 0x1);
        gbc.writeMem(0x69fd, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x4197);
        EXPECT(gbc.pc(), 0x69ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0019
        gbc.setState(0x1b8a, 0x3d81, 0x2ab0, 0xb47e, 0x86a7, 0x8675, 0x1, 0x0);
        gbc.writeMem(0x1b8a, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x3d81);
        EXPECT(gbc.pc(), 0x1b8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 001A
        gbc.setState(0xe4, 0xccb7, 0xbb90, 0x4841, 0x53f5, 0x7273, 0x0, 0x1);
        gbc.writeMem(0xe4, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xccb7);
        EXPECT(gbc.pc(), 0xe6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 001B
        gbc.setState(0x79f8, 0xb4f0, 0x8420, 0xa58b, 0xa812, 0x2416, 0x0, 0x1);
        gbc.writeMem(0x79f8, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xb4f0);
        EXPECT(gbc.pc(), 0x79fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 001C
        gbc.setState(0xc898, 0x2a59, 0x30b0, 0x6831, 0x79b5, 0x68f0, 0x0, 0x0);
        gbc.writeMem(0xc898, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x2a59);
        EXPECT(gbc.pc(), 0xc89a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc898), 0xcb);
        EXPECT(gbc.readMem(0xc899), 0xbf);
        // CB BF 001D
        gbc.setState(0x221f, 0x83e, 0x1cd0, 0x13a8, 0xc6a8, 0x1413, 0x0, 0x0);
        gbc.writeMem(0x221f, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x83e);
        EXPECT(gbc.pc(), 0x2221);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 001E
        gbc.setState(0x2a81, 0x4d76, 0xef30, 0xc831, 0x388b, 0x33c5, 0x0, 0x1);
        gbc.writeMem(0x2a81, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x4d76);
        EXPECT(gbc.pc(), 0x2a83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 001F
        gbc.setState(0x9f92, 0x6ffb, 0xc0e0, 0xae2c, 0x720b, 0x7ac, 0x1, 0x0);
        gbc.writeMem(0x9f92, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x6ffb);
        EXPECT(gbc.pc(), 0x9f94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f92), 0xcb);
        EXPECT(gbc.readMem(0x9f93), 0xbf);
        // CB BF 0020
        gbc.setState(0xe7ea, 0xe3cd, 0xfc50, 0xc29a, 0x5a51, 0xc45c, 0x0, 0x0);
        gbc.writeMem(0xe7ea, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xe3cd);
        EXPECT(gbc.pc(), 0xe7ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7ea), 0xcb);
        EXPECT(gbc.readMem(0xe7eb), 0xbf);
        // CB BF 0022
        gbc.setState(0x201, 0xfc2e, 0x5fd0, 0x602f, 0xdc30, 0xe4a4, 0x0, 0x1);
        gbc.writeMem(0x201, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xfc2e);
        EXPECT(gbc.pc(), 0x203);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0023
        gbc.setState(0x749d, 0x8d8e, 0x6a70, 0x38a8, 0xf1ae, 0x636a, 0x1, 0x1);
        gbc.writeMem(0x749d, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x8d8e);
        EXPECT(gbc.pc(), 0x749f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0024
        gbc.setState(0xbc01, 0x7ead, 0xed90, 0x6c4d, 0xa900, 0x1d24, 0x1, 0x1);
        gbc.writeMem(0xbc01, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x7ead);
        EXPECT(gbc.pc(), 0xbc03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc01), 0xcb);
        EXPECT(gbc.readMem(0xbc02), 0xbf);
        // CB BF 0025
        gbc.setState(0x86f9, 0xe05a, 0xfdb0, 0xc037, 0x55ff, 0xb1f2, 0x0, 0x1);
        gbc.writeMem(0x86f9, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xe05a);
        EXPECT(gbc.pc(), 0x86fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86f9), 0xcb);
        EXPECT(gbc.readMem(0x86fa), 0xbf);
        // CB BF 0026
        gbc.setState(0x622f, 0x1217, 0xfd40, 0x74bd, 0xa3ff, 0x3e1c, 0x1, 0x0);
        gbc.writeMem(0x622f, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x1217);
        EXPECT(gbc.pc(), 0x6231);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0027
        gbc.setState(0xbac9, 0x91c, 0x18e0, 0x9b83, 0x2722, 0xe04c, 0x0, 0x1);
        gbc.writeMem(0xbac9, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x91c);
        EXPECT(gbc.pc(), 0xbacb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbac9), 0xcb);
        EXPECT(gbc.readMem(0xbaca), 0xbf);
        // CB BF 0028
        gbc.setState(0xcc70, 0xdf92, 0xb0e0, 0xd0cc, 0xe029, 0xab3f, 0x1, 0x1);
        gbc.writeMem(0xcc70, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xdf92);
        EXPECT(gbc.pc(), 0xcc72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc70), 0xcb);
        EXPECT(gbc.readMem(0xcc71), 0xbf);
        // CB BF 0029
        gbc.setState(0xa40c, 0x9637, 0xf1e0, 0xc650, 0x558, 0x303a, 0x0, 0x0);
        gbc.writeMem(0xa40c, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x9637);
        EXPECT(gbc.pc(), 0xa40e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa40c), 0xcb);
        EXPECT(gbc.readMem(0xa40d), 0xbf);
        // CB BF 002A
        gbc.setState(0xd2f7, 0x5269, 0xc820, 0x425d, 0xd937, 0xb8a9, 0x0, 0x1);
        gbc.writeMem(0xd2f7, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x5269);
        EXPECT(gbc.pc(), 0xd2f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2f7), 0xcb);
        EXPECT(gbc.readMem(0xd2f8), 0xbf);
        // CB BF 002B
        gbc.setState(0xc956, 0x6d0, 0xca30, 0xcb3d, 0x8de6, 0xe894, 0x0, 0x0);
        gbc.writeMem(0xc956, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x6d0);
        EXPECT(gbc.pc(), 0xc958);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc956), 0xcb);
        EXPECT(gbc.readMem(0xc957), 0xbf);
        // CB BF 002C
        gbc.setState(0x5f2c, 0x428c, 0x7590, 0xf506, 0xb60d, 0x7eb7, 0x0, 0x1);
        gbc.writeMem(0x5f2c, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x428c);
        EXPECT(gbc.pc(), 0x5f2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 002E
        gbc.setState(0xbf1b, 0x541c, 0xa370, 0xb0ab, 0x6994, 0xfd0d, 0x1, 0x1);
        gbc.writeMem(0xbf1b, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x541c);
        EXPECT(gbc.pc(), 0xbf1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf1b), 0xcb);
        EXPECT(gbc.readMem(0xbf1c), 0xbf);
        // CB BF 002F
        gbc.setState(0x72af, 0x14e4, 0x7410, 0xfd64, 0x3912, 0xeac6, 0x0, 0x1);
        gbc.writeMem(0x72af, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x14e4);
        EXPECT(gbc.pc(), 0x72b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0030
        gbc.setState(0x2d85, 0x267e, 0x84a0, 0x9277, 0xcead, 0x5f0e, 0x1, 0x1);
        gbc.writeMem(0x2d85, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x267e);
        EXPECT(gbc.pc(), 0x2d87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0031
        gbc.setState(0xa606, 0xb084, 0x1ac0, 0x9e9f, 0x2914, 0x6f65, 0x1, 0x1);
        gbc.writeMem(0xa606, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xb084);
        EXPECT(gbc.pc(), 0xa608);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa606), 0xcb);
        EXPECT(gbc.readMem(0xa607), 0xbf);
        // CB BF 0032
        gbc.setState(0x7563, 0x2111, 0x8820, 0x66fe, 0x4a3e, 0x904e, 0x1, 0x0);
        gbc.writeMem(0x7563, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x2111);
        EXPECT(gbc.pc(), 0x7565);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0033
        gbc.setState(0x54c4, 0xf032, 0xc470, 0xa890, 0x752a, 0x6683, 0x0, 0x1);
        gbc.writeMem(0x54c4, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xf032);
        EXPECT(gbc.pc(), 0x54c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0034
        gbc.setState(0x6213, 0xdcb6, 0x8b60, 0xb6e3, 0x8ae6, 0xa76f, 0x1, 0x0);
        gbc.writeMem(0x6213, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xdcb6);
        EXPECT(gbc.pc(), 0x6215);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0035
        gbc.setState(0x6355, 0xa797, 0x350, 0xd4c9, 0xbf9f, 0x4fec, 0x1, 0x1);
        gbc.writeMem(0x6355, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xa797);
        EXPECT(gbc.pc(), 0x6357);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0036
        gbc.setState(0x42ba, 0x140, 0x1ff0, 0x7471, 0x5410, 0x46ef, 0x1, 0x0);
        gbc.writeMem(0x42ba, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x140);
        EXPECT(gbc.pc(), 0x42bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0037
        gbc.setState(0x1a06, 0x5cc8, 0x4380, 0x3051, 0xb3bc, 0xbfa8, 0x1, 0x1);
        gbc.writeMem(0x1a06, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x5cc8);
        EXPECT(gbc.pc(), 0x1a08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0038
        gbc.setState(0xaa6, 0xbae6, 0x57d0, 0xea6c, 0xcd2b, 0x72d9, 0x0, 0x0);
        gbc.writeMem(0xaa6, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xbae6);
        EXPECT(gbc.pc(), 0xaa8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0039
        gbc.setState(0xaed5, 0x79ef, 0x7040, 0x125d, 0x19f6, 0xd3d1, 0x1, 0x1);
        gbc.writeMem(0xaed5, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x79ef);
        EXPECT(gbc.pc(), 0xaed7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaed5), 0xcb);
        EXPECT(gbc.readMem(0xaed6), 0xbf);
        // CB BF 003A
        gbc.setState(0x7bc4, 0x3816, 0xdd70, 0x1c9b, 0x1549, 0x1568, 0x0, 0x1);
        gbc.writeMem(0x7bc4, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x3816);
        EXPECT(gbc.pc(), 0x7bc6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 003B
        gbc.setState(0x3a8, 0x52e7, 0x14f0, 0x6490, 0x3009, 0x7c4e, 0x1, 0x1);
        gbc.writeMem(0x3a8, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x52e7);
        EXPECT(gbc.pc(), 0x3aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 003C
        gbc.setState(0x7996, 0x4ece, 0xedc0, 0xa063, 0x3e43, 0x6855, 0x0, 0x0);
        gbc.writeMem(0x7996, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x4ece);
        EXPECT(gbc.pc(), 0x7998);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 003D
        gbc.setState(0x9777, 0x957a, 0x7730, 0xbde3, 0xc8a3, 0x4644, 0x1, 0x1);
        gbc.writeMem(0x9777, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x957a);
        EXPECT(gbc.pc(), 0x9779);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9777), 0xcb);
        EXPECT(gbc.readMem(0x9778), 0xbf);
        // CB BF 003E
        gbc.setState(0xd8ad, 0x6d4d, 0x5e60, 0xfb0a, 0xf9ec, 0x4997, 0x1, 0x0);
        gbc.writeMem(0xd8ad, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x6d4d);
        EXPECT(gbc.pc(), 0xd8af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8ad), 0xcb);
        EXPECT(gbc.readMem(0xd8ae), 0xbf);
        // CB BF 003F
        gbc.setState(0xd6b4, 0xad02, 0xdde0, 0x2e93, 0x7b94, 0x38ea, 0x0, 0x1);
        gbc.writeMem(0xd6b4, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xad02);
        EXPECT(gbc.pc(), 0xd6b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6b4), 0xcb);
        EXPECT(gbc.readMem(0xd6b5), 0xbf);
        // CB BF 0040
        gbc.setState(0x6cb, 0x15d8, 0x5ac0, 0xb3e7, 0x9f29, 0xc8d0, 0x1, 0x1);
        gbc.writeMem(0x6cb, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x15d8);
        EXPECT(gbc.pc(), 0x6cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0041
        gbc.setState(0x4e4b, 0x3d38, 0x28c0, 0x6273, 0xd761, 0x3b2e, 0x1, 0x0);
        gbc.writeMem(0x4e4b, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x3d38);
        EXPECT(gbc.pc(), 0x4e4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0042
        gbc.setState(0x31e1, 0x90f9, 0xaab0, 0xa0dd, 0xaeb7, 0xf9d5, 0x0, 0x0);
        gbc.writeMem(0x31e1, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x90f9);
        EXPECT(gbc.pc(), 0x31e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0043
        gbc.setState(0x22a1, 0x7cb2, 0xfc20, 0xac89, 0x181d, 0xbb04, 0x1, 0x0);
        gbc.writeMem(0x22a1, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x7cb2);
        EXPECT(gbc.pc(), 0x22a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0044
        gbc.setState(0x7f4c, 0x49e1, 0x69f0, 0x483f, 0xc336, 0xbaa9, 0x1, 0x0);
        gbc.writeMem(0x7f4c, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x49e1);
        EXPECT(gbc.pc(), 0x7f4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0045
        gbc.setState(0x403f, 0xcc9d, 0x4de0, 0xd9a6, 0x89a2, 0x7277, 0x0, 0x1);
        gbc.writeMem(0x403f, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xcc9d);
        EXPECT(gbc.pc(), 0x4041);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0046
        gbc.setState(0x4bec, 0xe04d, 0x11e0, 0x9f6b, 0x4530, 0x5efd, 0x0, 0x0);
        gbc.writeMem(0x4bec, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xe04d);
        EXPECT(gbc.pc(), 0x4bee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0047
        gbc.setState(0xd9e5, 0x2bf0, 0x2d30, 0x930b, 0x57fa, 0xf264, 0x0, 0x0);
        gbc.writeMem(0xd9e5, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x2bf0);
        EXPECT(gbc.pc(), 0xd9e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9e5), 0xcb);
        EXPECT(gbc.readMem(0xd9e6), 0xbf);
        // CB BF 0048
        gbc.setState(0xa3ff, 0x7852, 0x3b40, 0xa813, 0xe510, 0x1782, 0x1, 0x1);
        gbc.writeMem(0xa3ff, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x7852);
        EXPECT(gbc.pc(), 0xa401);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3ff), 0xcb);
        EXPECT(gbc.readMem(0xa400), 0xbf);
        // CB BF 0049
        gbc.setState(0xc342, 0xebe3, 0xaf0, 0xedc, 0xf48f, 0x146f, 0x0, 0x1);
        gbc.writeMem(0xc342, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xebe3);
        EXPECT(gbc.pc(), 0xc344);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc342), 0xcb);
        EXPECT(gbc.readMem(0xc343), 0xbf);
        // CB BF 004A
        gbc.setState(0x57d0, 0xd02, 0x5490, 0xf68c, 0x64ff, 0x79a4, 0x1, 0x1);
        gbc.writeMem(0x57d0, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xd02);
        EXPECT(gbc.pc(), 0x57d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 004B
        gbc.setState(0x4b9e, 0xffae, 0x620, 0xee8c, 0x8bfb, 0x9d21, 0x0, 0x0);
        gbc.writeMem(0x4b9e, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xffae);
        EXPECT(gbc.pc(), 0x4ba0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 004C
        gbc.setState(0x5404, 0x1913, 0x13b0, 0x2d0e, 0x7f1f, 0xca62, 0x0, 0x0);
        gbc.writeMem(0x5404, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x1913);
        EXPECT(gbc.pc(), 0x5406);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 004D
        gbc.setState(0xbb2, 0xf5aa, 0xb960, 0xc7a7, 0xc666, 0x2085, 0x1, 0x1);
        gbc.writeMem(0xbb2, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xf5aa);
        EXPECT(gbc.pc(), 0xbb4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 004E
        gbc.setState(0x5285, 0x14f9, 0xcd50, 0x223, 0x44cb, 0xca41, 0x0, 0x1);
        gbc.writeMem(0x5285, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x14f9);
        EXPECT(gbc.pc(), 0x5287);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 004F
        gbc.setState(0x3152, 0xb7d9, 0xeea0, 0xb360, 0xbbe2, 0xda7b, 0x1, 0x0);
        gbc.writeMem(0x3152, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xb7d9);
        EXPECT(gbc.pc(), 0x3154);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0050
        gbc.setState(0x105b, 0x2ac1, 0xbfc0, 0x4490, 0xb805, 0x60a1, 0x0, 0x0);
        gbc.writeMem(0x105b, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x2ac1);
        EXPECT(gbc.pc(), 0x105d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0051
        gbc.setState(0x5600, 0x2083, 0xb4f0, 0x115e, 0xcc90, 0x1067, 0x1, 0x1);
        gbc.writeMem(0x5600, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x2083);
        EXPECT(gbc.pc(), 0x5602);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0052
        gbc.setState(0x88f, 0x348c, 0x5360, 0x2447, 0xbd12, 0x563a, 0x1, 0x1);
        gbc.writeMem(0x88f, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x348c);
        EXPECT(gbc.pc(), 0x891);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0053
        gbc.setState(0x6f86, 0x4cf3, 0xa900, 0xbe3a, 0xc1c, 0xc33a, 0x1, 0x0);
        gbc.writeMem(0x6f86, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x4cf3);
        EXPECT(gbc.pc(), 0x6f88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0054
        gbc.setState(0xcd09, 0xbbf8, 0x2340, 0xf0f2, 0x3618, 0x1610, 0x0, 0x0);
        gbc.writeMem(0xcd09, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xbbf8);
        EXPECT(gbc.pc(), 0xcd0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd09), 0xcb);
        EXPECT(gbc.readMem(0xcd0a), 0xbf);
        // CB BF 0055
        gbc.setState(0x102c, 0xb66c, 0xcf00, 0x6aac, 0x2fdd, 0xe517, 0x0, 0x1);
        gbc.writeMem(0x102c, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xb66c);
        EXPECT(gbc.pc(), 0x102e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0056
        gbc.setState(0xa88b, 0xa307, 0xa160, 0xdffa, 0x3343, 0x710b, 0x1, 0x1);
        gbc.writeMem(0xa88b, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xa307);
        EXPECT(gbc.pc(), 0xa88d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa88b), 0xcb);
        EXPECT(gbc.readMem(0xa88c), 0xbf);
        // CB BF 0057
        gbc.setState(0x4709, 0x3d78, 0xdaa0, 0x4e12, 0x58d2, 0xda29, 0x1, 0x1);
        gbc.writeMem(0x4709, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x3d78);
        EXPECT(gbc.pc(), 0x470b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0058
        gbc.setState(0x9d26, 0xeca3, 0x56c0, 0x9dab, 0xed1d, 0xa48, 0x0, 0x1);
        gbc.writeMem(0x9d26, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xeca3);
        EXPECT(gbc.pc(), 0x9d28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d26), 0xcb);
        EXPECT(gbc.readMem(0x9d27), 0xbf);
        // CB BF 0059
        gbc.setState(0x7efd, 0xfb7a, 0x62a0, 0x78fb, 0x6293, 0x7c7, 0x1, 0x1);
        gbc.writeMem(0x7efd, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xfb7a);
        EXPECT(gbc.pc(), 0x7eff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 005A
        gbc.setState(0x606b, 0x40d, 0x270, 0x5b3c, 0x55a7, 0xb3ba, 0x1, 0x0);
        gbc.writeMem(0x606b, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x40d);
        EXPECT(gbc.pc(), 0x606d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 005B
        gbc.setState(0x274c, 0xddf3, 0x4b0, 0xc92f, 0xa8d2, 0x1827, 0x0, 0x0);
        gbc.writeMem(0x274c, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xddf3);
        EXPECT(gbc.pc(), 0x274e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 005D
        gbc.setState(0xe22d, 0xfd3d, 0xdff0, 0xa0f7, 0xfd31, 0x23c1, 0x0, 0x0);
        gbc.writeMem(0xe22d, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xfd3d);
        EXPECT(gbc.pc(), 0xe22f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe22d), 0xcb);
        EXPECT(gbc.readMem(0xe22e), 0xbf);
        // CB BF 005E
        gbc.setState(0xc92d, 0xb117, 0x21a0, 0x3576, 0xb7aa, 0xaa6c, 0x0, 0x1);
        gbc.writeMem(0xc92d, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xb117);
        EXPECT(gbc.pc(), 0xc92f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc92d), 0xcb);
        EXPECT(gbc.readMem(0xc92e), 0xbf);
        // CB BF 005F
        gbc.setState(0x8e8f, 0xfd3, 0x9220, 0xf0ee, 0x8cc7, 0x1771, 0x0, 0x0);
        gbc.writeMem(0x8e8f, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xfd3);
        EXPECT(gbc.pc(), 0x8e91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e8f), 0xcb);
        EXPECT(gbc.readMem(0x8e90), 0xbf);
        // CB BF 0060
        gbc.setState(0x3697, 0xaf63, 0xbb20, 0xfddb, 0x84ed, 0xf87c, 0x1, 0x1);
        gbc.writeMem(0x3697, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xaf63);
        EXPECT(gbc.pc(), 0x3699);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0061
        gbc.setState(0xa4ce, 0x2b8f, 0xac50, 0x1a11, 0xef7f, 0xdebc, 0x1, 0x1);
        gbc.writeMem(0xa4ce, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x2b8f);
        EXPECT(gbc.pc(), 0xa4d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4ce), 0xcb);
        EXPECT(gbc.readMem(0xa4cf), 0xbf);
        // CB BF 0062
        gbc.setState(0xe414, 0x3872, 0x8ea0, 0x9253, 0xccb7, 0x20a6, 0x0, 0x1);
        gbc.writeMem(0xe414, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x3872);
        EXPECT(gbc.pc(), 0xe416);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe414), 0xcb);
        EXPECT(gbc.readMem(0xe415), 0xbf);
        // CB BF 0063
        gbc.setState(0xb09a, 0x5aa1, 0xe100, 0x6cbc, 0xe02d, 0x1f58, 0x1, 0x0);
        gbc.writeMem(0xb09a, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x5aa1);
        EXPECT(gbc.pc(), 0xb09c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb09a), 0xcb);
        EXPECT(gbc.readMem(0xb09b), 0xbf);
        // CB BF 0064
        gbc.setState(0xbf99, 0x5f69, 0x4af0, 0x9127, 0x842e, 0xa74, 0x0, 0x1);
        gbc.writeMem(0xbf99, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x5f69);
        EXPECT(gbc.pc(), 0xbf9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf99), 0xcb);
        EXPECT(gbc.readMem(0xbf9a), 0xbf);
        // CB BF 0065
        gbc.setState(0x338d, 0x21a1, 0x8f10, 0xb500, 0x38d4, 0x4589, 0x0, 0x1);
        gbc.writeMem(0x338d, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x21a1);
        EXPECT(gbc.pc(), 0x338f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0066
        gbc.setState(0x8efa, 0xeadc, 0x28a0, 0x61b9, 0xb6d3, 0xf780, 0x1, 0x0);
        gbc.writeMem(0x8efa, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xeadc);
        EXPECT(gbc.pc(), 0x8efc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8efa), 0xcb);
        EXPECT(gbc.readMem(0x8efb), 0xbf);
        // CB BF 0067
        gbc.setState(0x1d6, 0x6de1, 0x6c30, 0x3d75, 0x27e2, 0x2c24, 0x0, 0x0);
        gbc.writeMem(0x1d6, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x6de1);
        EXPECT(gbc.pc(), 0x1d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0068
        gbc.setState(0xa9f9, 0xcfce, 0xd4c0, 0xf0b6, 0xa6a9, 0x8b75, 0x1, 0x0);
        gbc.writeMem(0xa9f9, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xcfce);
        EXPECT(gbc.pc(), 0xa9fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9f9), 0xcb);
        EXPECT(gbc.readMem(0xa9fa), 0xbf);
        // CB BF 0069
        gbc.setState(0x41ff, 0x881b, 0xc500, 0x5d2e, 0x787b, 0xedac, 0x1, 0x1);
        gbc.writeMem(0x41ff, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x881b);
        EXPECT(gbc.pc(), 0x4201);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 006A
        gbc.setState(0xe0f1, 0x3433, 0x2300, 0x106c, 0x3428, 0xc292, 0x0, 0x1);
        gbc.writeMem(0xe0f1, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x3433);
        EXPECT(gbc.pc(), 0xe0f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0f1), 0xcb);
        EXPECT(gbc.readMem(0xe0f2), 0xbf);
        // CB BF 006B
        gbc.setState(0x5fe1, 0x7437, 0xdb0, 0x626a, 0x6cf3, 0x129e, 0x0, 0x1);
        gbc.writeMem(0x5fe1, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x7437);
        EXPECT(gbc.pc(), 0x5fe3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 006D
        gbc.setState(0xd57e, 0x4622, 0x860, 0x7ee, 0x8e5, 0x1ca1, 0x1, 0x1);
        gbc.writeMem(0xd57e, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x4622);
        EXPECT(gbc.pc(), 0xd580);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd57e), 0xcb);
        EXPECT(gbc.readMem(0xd57f), 0xbf);
        // CB BF 006E
        gbc.setState(0xe077, 0xfab0, 0x62f0, 0xa3e, 0x201, 0x92a4, 0x1, 0x1);
        gbc.writeMem(0xe077, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xfab0);
        EXPECT(gbc.pc(), 0xe079);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe077), 0xcb);
        EXPECT(gbc.readMem(0xe078), 0xbf);
        // CB BF 006F
        gbc.setState(0x2e2d, 0x1b9e, 0x7800, 0x3b27, 0xab8b, 0x7ac3, 0x1, 0x0);
        gbc.writeMem(0x2e2d, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x1b9e);
        EXPECT(gbc.pc(), 0x2e2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0070
        gbc.setState(0x8dd2, 0xc25b, 0xe380, 0x9131, 0x9a91, 0xfb9b, 0x0, 0x1);
        gbc.writeMem(0x8dd2, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xc25b);
        EXPECT(gbc.pc(), 0x8dd4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8dd2), 0xcb);
        EXPECT(gbc.readMem(0x8dd3), 0xbf);
        // CB BF 0071
        gbc.setState(0x79a5, 0x804, 0xe340, 0x80a9, 0x2c96, 0x284d, 0x1, 0x0);
        gbc.writeMem(0x79a5, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x804);
        EXPECT(gbc.pc(), 0x79a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0072
        gbc.setState(0x1b1d, 0x3f30, 0x1ab0, 0x5dee, 0xb49d, 0x3d0e, 0x1, 0x0);
        gbc.writeMem(0x1b1d, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x3f30);
        EXPECT(gbc.pc(), 0x1b1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0073
        gbc.setState(0xa8fa, 0x4f77, 0xad80, 0xe866, 0x29aa, 0x7782, 0x1, 0x0);
        gbc.writeMem(0xa8fa, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x4f77);
        EXPECT(gbc.pc(), 0xa8fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8fa), 0xcb);
        EXPECT(gbc.readMem(0xa8fb), 0xbf);
        // CB BF 0074
        gbc.setState(0xab0c, 0x1ab, 0x6860, 0x67dd, 0x853b, 0x47d3, 0x0, 0x0);
        gbc.writeMem(0xab0c, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x1ab);
        EXPECT(gbc.pc(), 0xab0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab0c), 0xcb);
        EXPECT(gbc.readMem(0xab0d), 0xbf);
        // CB BF 0075
        gbc.setState(0x148, 0xc4c1, 0xa650, 0x2db2, 0x32cb, 0xf46a, 0x1, 0x0);
        gbc.writeMem(0x148, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xc4c1);
        EXPECT(gbc.pc(), 0x14a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0076
        gbc.setState(0x23d7, 0x298d, 0xdbd0, 0x3b65, 0x823f, 0x6868, 0x0, 0x0);
        gbc.writeMem(0x23d7, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x298d);
        EXPECT(gbc.pc(), 0x23d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0077
        gbc.setState(0x233b, 0x3bd6, 0xfd50, 0xeb85, 0xe4a4, 0x2298, 0x0, 0x1);
        gbc.writeMem(0x233b, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x3bd6);
        EXPECT(gbc.pc(), 0x233d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0078
        gbc.setState(0x4f, 0xe64e, 0x8380, 0x56e8, 0x230e, 0x71d5, 0x1, 0x1);
        gbc.writeMem(0x4f, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xe64e);
        EXPECT(gbc.pc(), 0x51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0079
        gbc.setState(0xd7a3, 0x4bbd, 0x81f0, 0xcaf, 0x8667, 0xb2cb, 0x0, 0x0);
        gbc.writeMem(0xd7a3, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x4bbd);
        EXPECT(gbc.pc(), 0xd7a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7a3), 0xcb);
        EXPECT(gbc.readMem(0xd7a4), 0xbf);
        // CB BF 007A
        gbc.setState(0x8ba9, 0x29da, 0x1530, 0x7b72, 0x1d15, 0x94d8, 0x1, 0x1);
        gbc.writeMem(0x8ba9, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x29da);
        EXPECT(gbc.pc(), 0x8bab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ba9), 0xcb);
        EXPECT(gbc.readMem(0x8baa), 0xbf);
        // CB BF 007B
        gbc.setState(0xbf7, 0x5ca5, 0x2c0, 0xd902, 0x3d6b, 0x6359, 0x0, 0x1);
        gbc.writeMem(0xbf7, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x5ca5);
        EXPECT(gbc.pc(), 0xbf9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 007C
        gbc.setState(0x4fdc, 0x162c, 0xa870, 0xbec8, 0x616c, 0x140, 0x1, 0x1);
        gbc.writeMem(0x4fdc, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x162c);
        EXPECT(gbc.pc(), 0x4fde);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 007D
        gbc.setState(0xabfe, 0x86db, 0x69d0, 0x3d63, 0x229d, 0x4a4, 0x1, 0x0);
        gbc.writeMem(0xabfe, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x86db);
        EXPECT(gbc.pc(), 0xac00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabfe), 0xcb);
        EXPECT(gbc.readMem(0xabff), 0xbf);
        // CB BF 007E
        gbc.setState(0x6b41, 0xdd6, 0xd00, 0xfce3, 0xa44b, 0x3d01, 0x0, 0x1);
        gbc.writeMem(0x6b41, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xdd6);
        EXPECT(gbc.pc(), 0x6b43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 007F
        gbc.setState(0x5d43, 0xd383, 0x45f0, 0x2754, 0x7ddf, 0x5e05, 0x0, 0x0);
        gbc.writeMem(0x5d43, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xd383);
        EXPECT(gbc.pc(), 0x5d45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0081
        gbc.setState(0x8b47, 0x8e27, 0x1810, 0x64de, 0xcaeb, 0xf7bc, 0x0, 0x1);
        gbc.writeMem(0x8b47, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x8e27);
        EXPECT(gbc.pc(), 0x8b49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b47), 0xcb);
        EXPECT(gbc.readMem(0x8b48), 0xbf);
        // CB BF 0082
        gbc.setState(0x2e21, 0xfd8b, 0x9ba0, 0x3dfe, 0x8b38, 0x3fac, 0x0, 0x1);
        gbc.writeMem(0x2e21, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xfd8b);
        EXPECT(gbc.pc(), 0x2e23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0083
        gbc.setState(0xb42a, 0xfe09, 0xe7b0, 0xec5d, 0x9426, 0x41f9, 0x0, 0x0);
        gbc.writeMem(0xb42a, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xfe09);
        EXPECT(gbc.pc(), 0xb42c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb42a), 0xcb);
        EXPECT(gbc.readMem(0xb42b), 0xbf);
        // CB BF 0084
        gbc.setState(0xf12, 0xb642, 0x2820, 0x93a8, 0x2509, 0x5248, 0x0, 0x0);
        gbc.writeMem(0xf12, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xb642);
        EXPECT(gbc.pc(), 0xf14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0085
        gbc.setState(0xa4b5, 0x542d, 0x6830, 0x70b8, 0xe2f3, 0x1b01, 0x0, 0x1);
        gbc.writeMem(0xa4b5, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x542d);
        EXPECT(gbc.pc(), 0xa4b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4b5), 0xcb);
        EXPECT(gbc.readMem(0xa4b6), 0xbf);
        // CB BF 0086
        gbc.setState(0x9857, 0xd413, 0xe8f0, 0x9de0, 0xcc7f, 0x6345, 0x1, 0x0);
        gbc.writeMem(0x9857, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xd413);
        EXPECT(gbc.pc(), 0x9859);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9857), 0xcb);
        EXPECT(gbc.readMem(0x9858), 0xbf);
        // CB BF 0087
        gbc.setState(0xc75f, 0xa18a, 0xcef0, 0x2dcf, 0xe74b, 0x6ed0, 0x1, 0x1);
        gbc.writeMem(0xc75f, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xa18a);
        EXPECT(gbc.pc(), 0xc761);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc75f), 0xcb);
        EXPECT(gbc.readMem(0xc760), 0xbf);
        // CB BF 0088
        gbc.setState(0x374c, 0x5c45, 0x2fd0, 0x320a, 0xcea8, 0x61db, 0x1, 0x1);
        gbc.writeMem(0x374c, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x5c45);
        EXPECT(gbc.pc(), 0x374e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0089
        gbc.setState(0x970, 0x7b85, 0x6450, 0xe7a4, 0x46f4, 0xc04b, 0x1, 0x0);
        gbc.writeMem(0x970, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x7b85);
        EXPECT(gbc.pc(), 0x972);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 008A
        gbc.setState(0x6fa, 0xa0fe, 0x2f40, 0xe249, 0x3a02, 0xd9d8, 0x0, 0x0);
        gbc.writeMem(0x6fa, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xa0fe);
        EXPECT(gbc.pc(), 0x6fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 008B
        gbc.setState(0x2f18, 0xf0b5, 0x5230, 0xb532, 0x6056, 0x464a, 0x1, 0x1);
        gbc.writeMem(0x2f18, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xf0b5);
        EXPECT(gbc.pc(), 0x2f1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 008C
        gbc.setState(0x3961, 0xb87, 0x5a70, 0x4a98, 0x6907, 0x6033, 0x1, 0x0);
        gbc.writeMem(0x3961, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xb87);
        EXPECT(gbc.pc(), 0x3963);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 008E
        gbc.setState(0x71cf, 0xa087, 0xd440, 0x7794, 0xd1e8, 0x396f, 0x1, 0x1);
        gbc.writeMem(0x71cf, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xa087);
        EXPECT(gbc.pc(), 0x71d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 008F
        gbc.setState(0x4659, 0x7e05, 0x6ff0, 0x7f10, 0x4aea, 0xaf06, 0x1, 0x0);
        gbc.writeMem(0x4659, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x7e05);
        EXPECT(gbc.pc(), 0x465b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0090
        gbc.setState(0x7012, 0x1151, 0x20d0, 0x2555, 0x7946, 0xb69f, 0x1, 0x0);
        gbc.writeMem(0x7012, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x1151);
        EXPECT(gbc.pc(), 0x7014);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0091
        gbc.setState(0xe925, 0x7e72, 0x5fa0, 0xace8, 0xb516, 0xe026, 0x1, 0x1);
        gbc.writeMem(0xe925, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x7e72);
        EXPECT(gbc.pc(), 0xe927);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe925), 0xcb);
        EXPECT(gbc.readMem(0xe926), 0xbf);
        // CB BF 0092
        gbc.setState(0x7de9, 0x3697, 0xa4f0, 0x94cc, 0x7c4e, 0xac12, 0x1, 0x1);
        gbc.writeMem(0x7de9, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x3697);
        EXPECT(gbc.pc(), 0x7deb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0094
        gbc.setState(0x55ea, 0xd32c, 0xc5e0, 0x3cde, 0x81ff, 0xe572, 0x0, 0x0);
        gbc.writeMem(0x55ea, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xd32c);
        EXPECT(gbc.pc(), 0x55ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0096
        gbc.setState(0x339a, 0x132, 0x3410, 0xb1ab, 0xcbbd, 0x3391, 0x1, 0x0);
        gbc.writeMem(0x339a, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x132);
        EXPECT(gbc.pc(), 0x339c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0097
        gbc.setState(0x4abe, 0x694, 0xcff0, 0x2b41, 0x23b2, 0xaf5c, 0x1, 0x1);
        gbc.writeMem(0x4abe, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x694);
        EXPECT(gbc.pc(), 0x4ac0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0098
        gbc.setState(0x9603, 0x3532, 0xf2c0, 0x7f3a, 0x68db, 0x3c15, 0x1, 0x0);
        gbc.writeMem(0x9603, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x3532);
        EXPECT(gbc.pc(), 0x9605);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9603), 0xcb);
        EXPECT(gbc.readMem(0x9604), 0xbf);
        // CB BF 0099
        gbc.setState(0x6d0e, 0xffc5, 0xb200, 0xc917, 0xa494, 0x733d, 0x0, 0x0);
        gbc.writeMem(0x6d0e, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xffc5);
        EXPECT(gbc.pc(), 0x6d10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 009A
        gbc.setState(0x8aef, 0x7950, 0xfea0, 0x3dcc, 0xb57c, 0x5d36, 0x0, 0x0);
        gbc.writeMem(0x8aef, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x7950);
        EXPECT(gbc.pc(), 0x8af1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8aef), 0xcb);
        EXPECT(gbc.readMem(0x8af0), 0xbf);
        // CB BF 009B
        gbc.setState(0x8918, 0xc914, 0x2990, 0x8800, 0xc2f9, 0x415b, 0x0, 0x0);
        gbc.writeMem(0x8918, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xc914);
        EXPECT(gbc.pc(), 0x891a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8918), 0xcb);
        EXPECT(gbc.readMem(0x8919), 0xbf);
        // CB BF 009C
        gbc.setState(0x6aef, 0xd217, 0xee20, 0x36bb, 0xbb41, 0x4592, 0x1, 0x1);
        gbc.writeMem(0x6aef, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xd217);
        EXPECT(gbc.pc(), 0x6af1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 009D
        gbc.setState(0x43a, 0x52ba, 0xb4a0, 0x5cda, 0x6843, 0xb810, 0x0, 0x1);
        gbc.writeMem(0x43a, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x52ba);
        EXPECT(gbc.pc(), 0x43c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 009E
        gbc.setState(0x14a8, 0x61a, 0x6670, 0x921e, 0x9a84, 0x13a1, 0x0, 0x0);
        gbc.writeMem(0x14a8, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x61a);
        EXPECT(gbc.pc(), 0x14aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 009F
        gbc.setState(0x26b1, 0x407, 0x9e30, 0x641d, 0xec4f, 0xd7a4, 0x1, 0x0);
        gbc.writeMem(0x26b1, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x407);
        EXPECT(gbc.pc(), 0x26b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 00A0
        gbc.setState(0xee5f, 0x96c4, 0x7b40, 0x5b1f, 0x5c48, 0x3b96, 0x1, 0x0);
        gbc.writeMem(0xee5f, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x96c4);
        EXPECT(gbc.pc(), 0xee61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee5f), 0xcb);
        EXPECT(gbc.readMem(0xee60), 0xbf);
        // CB BF 00A1
        gbc.setState(0x9d34, 0xe79e, 0xc800, 0x2ccb, 0x120e, 0x4088, 0x0, 0x1);
        gbc.writeMem(0x9d34, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xe79e);
        EXPECT(gbc.pc(), 0x9d36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d34), 0xcb);
        EXPECT(gbc.readMem(0x9d35), 0xbf);
        // CB BF 00A2
        gbc.setState(0xeab0, 0x5b04, 0xc240, 0x1c35, 0x11ab, 0xa8f, 0x1, 0x0);
        gbc.writeMem(0xeab0, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x5b04);
        EXPECT(gbc.pc(), 0xeab2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeab0), 0xcb);
        EXPECT(gbc.readMem(0xeab1), 0xbf);
        // CB BF 00A3
        gbc.setState(0x2b79, 0x7383, 0x7290, 0x14a4, 0x1289, 0xd576, 0x0, 0x0);
        gbc.writeMem(0x2b79, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x7383);
        EXPECT(gbc.pc(), 0x2b7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 00A4
        gbc.setState(0x47a2, 0x89ce, 0x9e60, 0xa373, 0x5b43, 0xee8e, 0x1, 0x0);
        gbc.writeMem(0x47a2, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x89ce);
        EXPECT(gbc.pc(), 0x47a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 00A5
        gbc.setState(0x646f, 0x5fc9, 0xbe60, 0xa9d5, 0xd947, 0x12f7, 0x0, 0x0);
        gbc.writeMem(0x646f, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x5fc9);
        EXPECT(gbc.pc(), 0x6471);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 00A6
        gbc.setState(0x7cc8, 0x8bef, 0x9460, 0x2afa, 0x7e2, 0x47ac, 0x1, 0x0);
        gbc.writeMem(0x7cc8, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x8bef);
        EXPECT(gbc.pc(), 0x7cca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 00A7
        gbc.setState(0xd317, 0x764f, 0xc040, 0x914e, 0x232e, 0x5757, 0x0, 0x1);
        gbc.writeMem(0xd317, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x764f);
        EXPECT(gbc.pc(), 0xd319);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd317), 0xcb);
        EXPECT(gbc.readMem(0xd318), 0xbf);
        // CB BF 00AA
        gbc.setState(0xc169, 0xbce6, 0xf5f0, 0x8026, 0x5d53, 0x8401, 0x1, 0x1);
        gbc.writeMem(0xc169, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xbce6);
        EXPECT(gbc.pc(), 0xc16b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc169), 0xcb);
        EXPECT(gbc.readMem(0xc16a), 0xbf);
        // CB BF 00AB
        gbc.setState(0x1901, 0x3d1c, 0xe760, 0x7247, 0xabce, 0x88d4, 0x1, 0x0);
        gbc.writeMem(0x1901, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x3d1c);
        EXPECT(gbc.pc(), 0x1903);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 00AC
        gbc.setState(0x8eb1, 0x888c, 0xc50, 0x2fd4, 0x6728, 0x64c7, 0x1, 0x0);
        gbc.writeMem(0x8eb1, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x888c);
        EXPECT(gbc.pc(), 0x8eb3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8eb1), 0xcb);
        EXPECT(gbc.readMem(0x8eb2), 0xbf);
        // CB BF 00AD
        gbc.setState(0x880f, 0xde08, 0x2480, 0x7e26, 0x30d3, 0xc1fd, 0x1, 0x0);
        gbc.writeMem(0x880f, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xde08);
        EXPECT(gbc.pc(), 0x8811);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x880f), 0xcb);
        EXPECT(gbc.readMem(0x8810), 0xbf);
        // CB BF 00AE
        gbc.setState(0x34b7, 0xeb8e, 0x39c0, 0x7cf, 0xaddf, 0xb326, 0x1, 0x0);
        gbc.writeMem(0x34b7, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xeb8e);
        EXPECT(gbc.pc(), 0x34b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 00AF
        gbc.setState(0xbd2c, 0x36cb, 0xb9a0, 0xb9ef, 0x82c, 0xe336, 0x1, 0x0);
        gbc.writeMem(0xbd2c, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x36cb);
        EXPECT(gbc.pc(), 0xbd2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd2c), 0xcb);
        EXPECT(gbc.readMem(0xbd2d), 0xbf);
        // CB BF 00B0
        gbc.setState(0x6a51, 0x88fe, 0x1590, 0xeb01, 0x641d, 0x7a20, 0x1, 0x0);
        gbc.writeMem(0x6a51, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x88fe);
        EXPECT(gbc.pc(), 0x6a53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 00B1
        gbc.setState(0x44a1, 0x95b4, 0xd290, 0xd4d0, 0xb8f7, 0xfa2b, 0x0, 0x1);
        gbc.writeMem(0x44a1, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x95b4);
        EXPECT(gbc.pc(), 0x44a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 00B2
        gbc.setState(0x76a5, 0xdc81, 0x9950, 0x55a5, 0x8348, 0x8110, 0x1, 0x1);
        gbc.writeMem(0x76a5, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xdc81);
        EXPECT(gbc.pc(), 0x76a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 00B3
        gbc.setState(0x909c, 0xbe87, 0x5570, 0x7d02, 0x511e, 0x9833, 0x1, 0x0);
        gbc.writeMem(0x909c, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xbe87);
        EXPECT(gbc.pc(), 0x909e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x909c), 0xcb);
        EXPECT(gbc.readMem(0x909d), 0xbf);
        // CB BF 00B4
        gbc.setState(0xab6f, 0xd44b, 0x6c0, 0xe3a1, 0x3020, 0xcd96, 0x0, 0x1);
        gbc.writeMem(0xab6f, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xd44b);
        EXPECT(gbc.pc(), 0xab71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab6f), 0xcb);
        EXPECT(gbc.readMem(0xab70), 0xbf);
        // CB BF 00B5
        gbc.setState(0x212a, 0x2a22, 0xf880, 0x4c53, 0x7119, 0xdb18, 0x1, 0x1);
        gbc.writeMem(0x212a, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x2a22);
        EXPECT(gbc.pc(), 0x212c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 00B6
        gbc.setState(0x1207, 0xc3f, 0x8b60, 0x185b, 0x4118, 0x5ab8, 0x0, 0x0);
        gbc.writeMem(0x1207, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xc3f);
        EXPECT(gbc.pc(), 0x1209);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 00B7
        gbc.setState(0xd1e6, 0x6a24, 0x5fa0, 0xc9fd, 0xbe29, 0x219b, 0x0, 0x0);
        gbc.writeMem(0xd1e6, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x6a24);
        EXPECT(gbc.pc(), 0xd1e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1e6), 0xcb);
        EXPECT(gbc.readMem(0xd1e7), 0xbf);
        // CB BF 00B8
        gbc.setState(0xe592, 0x3061, 0x9ef0, 0x627f, 0x2112, 0xaa43, 0x0, 0x0);
        gbc.writeMem(0xe592, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x3061);
        EXPECT(gbc.pc(), 0xe594);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe592), 0xcb);
        EXPECT(gbc.readMem(0xe593), 0xbf);
        // CB BF 00B9
        gbc.setState(0x395d, 0x855, 0xc170, 0x1c21, 0xe12d, 0xaf0, 0x1, 0x0);
        gbc.writeMem(0x395d, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x855);
        EXPECT(gbc.pc(), 0x395f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 00BA
        gbc.setState(0x241e, 0xd8fd, 0x6d0, 0x8606, 0x8272, 0xdea0, 0x1, 0x1);
        gbc.writeMem(0x241e, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xd8fd);
        EXPECT(gbc.pc(), 0x2420);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 00BB
        gbc.setState(0xb621, 0xdda1, 0xaef0, 0xf510, 0x6fb1, 0x3913, 0x1, 0x1);
        gbc.writeMem(0xb621, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xdda1);
        EXPECT(gbc.pc(), 0xb623);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb621), 0xcb);
        EXPECT(gbc.readMem(0xb622), 0xbf);
        // CB BF 00BC
        gbc.setState(0x99d0, 0xd9b4, 0xd3a0, 0x1bea, 0x8ea6, 0x4cb5, 0x0, 0x1);
        gbc.writeMem(0x99d0, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xd9b4);
        EXPECT(gbc.pc(), 0x99d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99d0), 0xcb);
        EXPECT(gbc.readMem(0x99d1), 0xbf);
        // CB BF 00BD
        gbc.setState(0xef5b, 0x211a, 0x78d0, 0xbedb, 0x9f3a, 0x6fd4, 0x0, 0x1);
        gbc.writeMem(0xef5b, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x211a);
        EXPECT(gbc.pc(), 0xef5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef5b), 0xcb);
        EXPECT(gbc.readMem(0xef5c), 0xbf);
        // CB BF 00BE
        gbc.setState(0x6d3e, 0x3fe0, 0xa230, 0x639d, 0xee96, 0x99a4, 0x1, 0x0);
        gbc.writeMem(0x6d3e, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x3fe0);
        EXPECT(gbc.pc(), 0x6d40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 00BF
        gbc.setState(0x219e, 0x6a14, 0x5de0, 0x4ba4, 0xd075, 0x78d7, 0x0, 0x1);
        gbc.writeMem(0x219e, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x6a14);
        EXPECT(gbc.pc(), 0x21a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 00C0
        gbc.setState(0xa6d6, 0x241e, 0xf820, 0xb715, 0x7a83, 0xa864, 0x0, 0x1);
        gbc.writeMem(0xa6d6, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x241e);
        EXPECT(gbc.pc(), 0xa6d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6d6), 0xcb);
        EXPECT(gbc.readMem(0xa6d7), 0xbf);
        // CB BF 00C1
        gbc.setState(0x3a33, 0x57be, 0x50c0, 0x7d9e, 0xbdb9, 0x67df, 0x1, 0x0);
        gbc.writeMem(0x3a33, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x57be);
        EXPECT(gbc.pc(), 0x3a35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 00C2
        gbc.setState(0xa543, 0x9a6f, 0x68d0, 0x6b3b, 0xc69c, 0x2d5e, 0x0, 0x0);
        gbc.writeMem(0xa543, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x9a6f);
        EXPECT(gbc.pc(), 0xa545);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa543), 0xcb);
        EXPECT(gbc.readMem(0xa544), 0xbf);
        // CB BF 00C3
        gbc.setState(0xe218, 0xe7c7, 0x2840, 0xda2d, 0x66a9, 0x8da6, 0x1, 0x1);
        gbc.writeMem(0xe218, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xe7c7);
        EXPECT(gbc.pc(), 0xe21a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe218), 0xcb);
        EXPECT(gbc.readMem(0xe219), 0xbf);
        // CB BF 00C4
        gbc.setState(0x50b9, 0xb528, 0x8020, 0x3d72, 0xa264, 0x8944, 0x1, 0x1);
        gbc.writeMem(0x50b9, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xb528);
        EXPECT(gbc.pc(), 0x50bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 00C5
        gbc.setState(0xecee, 0x56c, 0xb170, 0xdb12, 0xe2e7, 0xcf0b, 0x1, 0x0);
        gbc.writeMem(0xecee, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x56c);
        EXPECT(gbc.pc(), 0xecf0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecee), 0xcb);
        EXPECT(gbc.readMem(0xecef), 0xbf);
        // CB BF 00C6
        gbc.setState(0x69c2, 0xc6fc, 0xb8f0, 0x2171, 0x9331, 0x3fb4, 0x0, 0x1);
        gbc.writeMem(0x69c2, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xc6fc);
        EXPECT(gbc.pc(), 0x69c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 00C7
        gbc.setState(0x3a33, 0xa25b, 0x9ff0, 0xbabf, 0x3e2a, 0x54b9, 0x0, 0x0);
        gbc.writeMem(0x3a33, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xa25b);
        EXPECT(gbc.pc(), 0x3a35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 00C8
        gbc.setState(0xd0d1, 0x667d, 0x95c0, 0x73c6, 0x7ba6, 0xf67c, 0x1, 0x1);
        gbc.writeMem(0xd0d1, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x667d);
        EXPECT(gbc.pc(), 0xd0d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0d1), 0xcb);
        EXPECT(gbc.readMem(0xd0d2), 0xbf);
        // CB BF 00C9
        gbc.setState(0x7818, 0xc714, 0x65b0, 0xc5fb, 0xa743, 0x969c, 0x0, 0x1);
        gbc.writeMem(0x7818, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xc714);
        EXPECT(gbc.pc(), 0x781a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 00CA
        gbc.setState(0xd502, 0x55b9, 0x1cd0, 0xbdd7, 0xad7, 0xbd3b, 0x1, 0x0);
        gbc.writeMem(0xd502, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x55b9);
        EXPECT(gbc.pc(), 0xd504);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd502), 0xcb);
        EXPECT(gbc.readMem(0xd503), 0xbf);
        // CB BF 00CB
        gbc.setState(0xb538, 0x3083, 0x44e0, 0xe5d1, 0x44a0, 0x3650, 0x1, 0x0);
        gbc.writeMem(0xb538, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x3083);
        EXPECT(gbc.pc(), 0xb53a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb538), 0xcb);
        EXPECT(gbc.readMem(0xb539), 0xbf);
        // CB BF 00CC
        gbc.setState(0x57ed, 0x9154, 0xf910, 0xf3fe, 0xc90d, 0xa925, 0x1, 0x1);
        gbc.writeMem(0x57ed, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x9154);
        EXPECT(gbc.pc(), 0x57ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 00CD
        gbc.setState(0xdc5a, 0x6361, 0x7910, 0xfd34, 0x4d43, 0xc25b, 0x1, 0x1);
        gbc.writeMem(0xdc5a, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x6361);
        EXPECT(gbc.pc(), 0xdc5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc5a), 0xcb);
        EXPECT(gbc.readMem(0xdc5b), 0xbf);
        // CB BF 00CE
        gbc.setState(0x92e2, 0x270e, 0x3f30, 0xd526, 0x6909, 0xad52, 0x0, 0x1);
        gbc.writeMem(0x92e2, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x270e);
        EXPECT(gbc.pc(), 0x92e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92e2), 0xcb);
        EXPECT(gbc.readMem(0x92e3), 0xbf);
        // CB BF 00CF
        gbc.setState(0x4142, 0x7f4c, 0x6690, 0x7b6b, 0x7ddd, 0xbb97, 0x0, 0x1);
        gbc.writeMem(0x4142, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x7f4c);
        EXPECT(gbc.pc(), 0x4144);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 00D0
        gbc.setState(0x58ef, 0xc1cc, 0xfd30, 0xca8f, 0xe573, 0x10e4, 0x1, 0x0);
        gbc.writeMem(0x58ef, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xc1cc);
        EXPECT(gbc.pc(), 0x58f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 00D2
        gbc.setState(0x38d, 0x9744, 0xaee0, 0x7368, 0xe638, 0x50d2, 0x0, 0x0);
        gbc.writeMem(0x38d, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x9744);
        EXPECT(gbc.pc(), 0x38f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 00D3
        gbc.setState(0xd0b1, 0x8f98, 0xcc90, 0x3a23, 0xcc56, 0xce63, 0x0, 0x0);
        gbc.writeMem(0xd0b1, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x8f98);
        EXPECT(gbc.pc(), 0xd0b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0b1), 0xcb);
        EXPECT(gbc.readMem(0xd0b2), 0xbf);
        // CB BF 00D4
        gbc.setState(0xe167, 0x1a20, 0xa4e0, 0xe5b5, 0xd700, 0xbc66, 0x1, 0x1);
        gbc.writeMem(0xe167, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x1a20);
        EXPECT(gbc.pc(), 0xe169);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe167), 0xcb);
        EXPECT(gbc.readMem(0xe168), 0xbf);
        // CB BF 00D5
        gbc.setState(0xabab, 0xdc24, 0xc020, 0xedd3, 0x5117, 0xb43, 0x0, 0x0);
        gbc.writeMem(0xabab, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xdc24);
        EXPECT(gbc.pc(), 0xabad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabab), 0xcb);
        EXPECT(gbc.readMem(0xabac), 0xbf);
        // CB BF 00D6
        gbc.setState(0xa4d7, 0xabf3, 0x93f0, 0x7093, 0x572b, 0x3e92, 0x1, 0x0);
        gbc.writeMem(0xa4d7, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xabf3);
        EXPECT(gbc.pc(), 0xa4d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4d7), 0xcb);
        EXPECT(gbc.readMem(0xa4d8), 0xbf);
        // CB BF 00D7
        gbc.setState(0x55f0, 0x3d33, 0xd220, 0x7c9a, 0x5760, 0xd998, 0x0, 0x1);
        gbc.writeMem(0x55f0, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x3d33);
        EXPECT(gbc.pc(), 0x55f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 00D8
        gbc.setState(0xed02, 0x4771, 0x1e50, 0xca2d, 0xe05, 0x75, 0x1, 0x1);
        gbc.writeMem(0xed02, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x4771);
        EXPECT(gbc.pc(), 0xed04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed02), 0xcb);
        EXPECT(gbc.readMem(0xed03), 0xbf);
        // CB BF 00D9
        gbc.setState(0x27ba, 0x9b1f, 0xc530, 0x9d53, 0xa9bb, 0xf50e, 0x1, 0x1);
        gbc.writeMem(0x27ba, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x9b1f);
        EXPECT(gbc.pc(), 0x27bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 00DA
        gbc.setState(0x650c, 0xf1bd, 0x88c0, 0x2db4, 0x8b4e, 0x97ea, 0x0, 0x0);
        gbc.writeMem(0x650c, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xf1bd);
        EXPECT(gbc.pc(), 0x650e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 00DB
        gbc.setState(0xb220, 0xd280, 0xe0c0, 0xf317, 0xcb72, 0x63dd, 0x0, 0x1);
        gbc.writeMem(0xb220, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xd280);
        EXPECT(gbc.pc(), 0xb222);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb220), 0xcb);
        EXPECT(gbc.readMem(0xb221), 0xbf);
        // CB BF 00DC
        gbc.setState(0xec53, 0x788b, 0xd8f0, 0x2206, 0x5e7, 0x1e48, 0x1, 0x0);
        gbc.writeMem(0xec53, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x788b);
        EXPECT(gbc.pc(), 0xec55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec53), 0xcb);
        EXPECT(gbc.readMem(0xec54), 0xbf);
        // CB BF 00DD
        gbc.setState(0x3a27, 0x1166, 0xcac0, 0x5418, 0x7a48, 0x69c, 0x0, 0x0);
        gbc.writeMem(0x3a27, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x1166);
        EXPECT(gbc.pc(), 0x3a29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 00DE
        gbc.setState(0xd27a, 0x4750, 0xae00, 0x2166, 0xfa49, 0x1660, 0x0, 0x1);
        gbc.writeMem(0xd27a, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x4750);
        EXPECT(gbc.pc(), 0xd27c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd27a), 0xcb);
        EXPECT(gbc.readMem(0xd27b), 0xbf);
        // CB BF 00DF
        gbc.setState(0xadfb, 0x53d6, 0x33f0, 0x3473, 0x6259, 0xfe96, 0x1, 0x1);
        gbc.writeMem(0xadfb, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x53d6);
        EXPECT(gbc.pc(), 0xadfd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadfb), 0xcb);
        EXPECT(gbc.readMem(0xadfc), 0xbf);
        // CB BF 00E1
        gbc.setState(0x7d04, 0xa182, 0xc5f0, 0x42a2, 0xa5bf, 0x64dd, 0x0, 0x0);
        gbc.writeMem(0x7d04, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xa182);
        EXPECT(gbc.pc(), 0x7d06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 00E2
        gbc.setState(0x4c6d, 0xd69b, 0xfbd0, 0xb2e8, 0x162d, 0x7443, 0x1, 0x0);
        gbc.writeMem(0x4c6d, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xd69b);
        EXPECT(gbc.pc(), 0x4c6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 00E3
        gbc.setState(0xcf23, 0xc78, 0xaa00, 0x414b, 0xe4aa, 0xe085, 0x0, 0x0);
        gbc.writeMem(0xcf23, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xc78);
        EXPECT(gbc.pc(), 0xcf25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf23), 0xcb);
        EXPECT(gbc.readMem(0xcf24), 0xbf);
        // CB BF 00E4
        gbc.setState(0x9d87, 0xafd9, 0x8480, 0xef4a, 0x9b10, 0x5bb6, 0x1, 0x1);
        gbc.writeMem(0x9d87, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xafd9);
        EXPECT(gbc.pc(), 0x9d89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d87), 0xcb);
        EXPECT(gbc.readMem(0x9d88), 0xbf);
        // CB BF 00E6
        gbc.setState(0xd4ac, 0x4c85, 0x98a0, 0x16c3, 0x74ca, 0x1b4b, 0x0, 0x0);
        gbc.writeMem(0xd4ac, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x4c85);
        EXPECT(gbc.pc(), 0xd4ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4ac), 0xcb);
        EXPECT(gbc.readMem(0xd4ad), 0xbf);
        // CB BF 00E7
        gbc.setState(0xd28d, 0xd06f, 0x9a80, 0x544b, 0xc37d, 0x6c9d, 0x1, 0x1);
        gbc.writeMem(0xd28d, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xd06f);
        EXPECT(gbc.pc(), 0xd28f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd28d), 0xcb);
        EXPECT(gbc.readMem(0xd28e), 0xbf);
        // CB BF 00E8
        gbc.setState(0xb9a2, 0xd716, 0x2630, 0xcec8, 0x8cb5, 0x534b, 0x0, 0x0);
        gbc.writeMem(0xb9a2, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xd716);
        EXPECT(gbc.pc(), 0xb9a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9a2), 0xcb);
        EXPECT(gbc.readMem(0xb9a3), 0xbf);
        // CB BF 00E9
        gbc.setState(0x85f0, 0x9933, 0xaa80, 0x2c99, 0xb8a, 0x5e27, 0x1, 0x1);
        gbc.writeMem(0x85f0, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x9933);
        EXPECT(gbc.pc(), 0x85f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85f0), 0xcb);
        EXPECT(gbc.readMem(0x85f1), 0xbf);
        // CB BF 00EA
        gbc.setState(0xdf29, 0x127a, 0xa3d0, 0x5262, 0x57c8, 0x914, 0x1, 0x0);
        gbc.writeMem(0xdf29, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x127a);
        EXPECT(gbc.pc(), 0xdf2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf29), 0xcb);
        EXPECT(gbc.readMem(0xdf2a), 0xbf);
        // CB BF 00EB
        gbc.setState(0x5107, 0x4979, 0x3700, 0x88de, 0xbb5f, 0x55c1, 0x1, 0x0);
        gbc.writeMem(0x5107, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x4979);
        EXPECT(gbc.pc(), 0x5109);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 00EC
        gbc.setState(0x151e, 0xcd6c, 0x8270, 0xe085, 0x71d5, 0x7d9a, 0x1, 0x1);
        gbc.writeMem(0x151e, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xcd6c);
        EXPECT(gbc.pc(), 0x1520);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 00ED
        gbc.setState(0x9122, 0xa272, 0xbe60, 0xaf8b, 0x943d, 0xcb85, 0x0, 0x1);
        gbc.writeMem(0x9122, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xa272);
        EXPECT(gbc.pc(), 0x9124);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9122), 0xcb);
        EXPECT(gbc.readMem(0x9123), 0xbf);
        // CB BF 00EE
        gbc.setState(0x7bef, 0x8a02, 0xa180, 0x7fda, 0xa8f1, 0x729b, 0x1, 0x1);
        gbc.writeMem(0x7bef, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x8a02);
        EXPECT(gbc.pc(), 0x7bf1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 00EF
        gbc.setState(0x9e6d, 0xd3e9, 0x1960, 0x93e5, 0xede2, 0x3fe1, 0x1, 0x0);
        gbc.writeMem(0x9e6d, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xd3e9);
        EXPECT(gbc.pc(), 0x9e6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e6d), 0xcb);
        EXPECT(gbc.readMem(0x9e6e), 0xbf);
        // CB BF 00F0
        gbc.setState(0x80d9, 0x691c, 0x1040, 0x92d5, 0x2551, 0xd842, 0x0, 0x1);
        gbc.writeMem(0x80d9, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x691c);
        EXPECT(gbc.pc(), 0x80db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80d9), 0xcb);
        EXPECT(gbc.readMem(0x80da), 0xbf);
        // CB BF 00F1
        gbc.setState(0x942d, 0xbaa5, 0xf30, 0x94cb, 0x451b, 0x912e, 0x1, 0x1);
        gbc.writeMem(0x942d, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xbaa5);
        EXPECT(gbc.pc(), 0x942f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x942d), 0xcb);
        EXPECT(gbc.readMem(0x942e), 0xbf);
        // CB BF 00F2
        gbc.setState(0xafa4, 0x719f, 0x26c0, 0x4fe8, 0xb885, 0x9dea, 0x1, 0x0);
        gbc.writeMem(0xafa4, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x719f);
        EXPECT(gbc.pc(), 0xafa6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafa4), 0xcb);
        EXPECT(gbc.readMem(0xafa5), 0xbf);
        // CB BF 00F3
        gbc.setState(0xa73, 0x6be3, 0x1700, 0xeaa5, 0xf296, 0xad43, 0x0, 0x1);
        gbc.writeMem(0xa73, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x6be3);
        EXPECT(gbc.pc(), 0xa75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 00F4
        gbc.setState(0x92a1, 0xb3f9, 0x36c0, 0xfb07, 0x5455, 0x5a29, 0x1, 0x0);
        gbc.writeMem(0x92a1, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xb3f9);
        EXPECT(gbc.pc(), 0x92a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92a1), 0xcb);
        EXPECT(gbc.readMem(0x92a2), 0xbf);
        // CB BF 00F5
        gbc.setState(0x5090, 0xbffa, 0x8b50, 0xfceb, 0x8200, 0xd638, 0x1, 0x0);
        gbc.writeMem(0x5090, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xbffa);
        EXPECT(gbc.pc(), 0x5092);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 00F6
        gbc.setState(0x8038, 0xf6f3, 0xb890, 0xf946, 0x80b8, 0xb834, 0x0, 0x1);
        gbc.writeMem(0x8038, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xf6f3);
        EXPECT(gbc.pc(), 0x803a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8038), 0xcb);
        EXPECT(gbc.readMem(0x8039), 0xbf);
        // CB BF 00F7
        gbc.setState(0x9ab5, 0xbda9, 0x980, 0xbb18, 0x4fcc, 0x9135, 0x0, 0x0);
        gbc.writeMem(0x9ab5, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xbda9);
        EXPECT(gbc.pc(), 0x9ab7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ab5), 0xcb);
        EXPECT(gbc.readMem(0x9ab6), 0xbf);
        // CB BF 00F8
        gbc.setState(0x63c6, 0xe4b8, 0x5ff0, 0x57f7, 0xfd7b, 0x1849, 0x0, 0x1);
        gbc.writeMem(0x63c6, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xe4b8);
        EXPECT(gbc.pc(), 0x63c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 00F9
        gbc.setState(0x2006, 0xed53, 0xd5f0, 0xf85f, 0x386f, 0x528d, 0x1, 0x0);
        gbc.writeMem(0x2006, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xed53);
        EXPECT(gbc.pc(), 0x2008);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 00FA
        gbc.setState(0x3a59, 0x3a87, 0x21d0, 0x41f1, 0xcabd, 0x916e, 0x1, 0x0);
        gbc.writeMem(0x3a59, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x3a87);
        EXPECT(gbc.pc(), 0x3a5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 00FB
        gbc.setState(0x4f79, 0x57f6, 0x17c0, 0x2aa1, 0x2107, 0x6541, 0x1, 0x1);
        gbc.writeMem(0x4f79, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x57f6);
        EXPECT(gbc.pc(), 0x4f7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 00FC
        gbc.setState(0xcc1c, 0xf3d8, 0x5ac0, 0x48dc, 0x30ef, 0x6017, 0x0, 0x0);
        gbc.writeMem(0xcc1c, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xf3d8);
        EXPECT(gbc.pc(), 0xcc1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc1c), 0xcb);
        EXPECT(gbc.readMem(0xcc1d), 0xbf);
        // CB BF 00FD
        gbc.setState(0x3209, 0x804b, 0x3c0, 0xa8eb, 0x82d1, 0xd367, 0x1, 0x0);
        gbc.writeMem(0x3209, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x804b);
        EXPECT(gbc.pc(), 0x320b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 00FE
        gbc.setState(0x132e, 0x1b71, 0x8880, 0xd84a, 0x95bb, 0x8e25, 0x1, 0x1);
        gbc.writeMem(0x132e, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x1b71);
        EXPECT(gbc.pc(), 0x1330);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 00FF
        gbc.setState(0xc74f, 0xafff, 0x56e0, 0x660d, 0xace2, 0x3c31, 0x1, 0x1);
        gbc.writeMem(0xc74f, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xafff);
        EXPECT(gbc.pc(), 0xc751);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc74f), 0xcb);
        EXPECT(gbc.readMem(0xc750), 0xbf);
        // CB BF 0100
        gbc.setState(0x9276, 0x6f7c, 0x89b0, 0x4a33, 0xe54d, 0xfab8, 0x1, 0x0);
        gbc.writeMem(0x9276, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x6f7c);
        EXPECT(gbc.pc(), 0x9278);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9276), 0xcb);
        EXPECT(gbc.readMem(0x9277), 0xbf);
        // CB BF 0101
        gbc.setState(0x5edb, 0x32f6, 0xe3c0, 0xb985, 0xdedd, 0x8efd, 0x1, 0x0);
        gbc.writeMem(0x5edb, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x32f6);
        EXPECT(gbc.pc(), 0x5edd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0102
        gbc.setState(0x8458, 0x630e, 0xcc60, 0x871c, 0xbf87, 0x5c, 0x0, 0x1);
        gbc.writeMem(0x8458, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x630e);
        EXPECT(gbc.pc(), 0x845a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8458), 0xcb);
        EXPECT(gbc.readMem(0x8459), 0xbf);
        // CB BF 0103
        gbc.setState(0x6058, 0x2e4, 0xf550, 0xef, 0x5c46, 0x543f, 0x1, 0x0);
        gbc.writeMem(0x6058, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x2e4);
        EXPECT(gbc.pc(), 0x605a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0104
        gbc.setState(0x1adf, 0x7ee6, 0xe670, 0xfe9, 0x4112, 0xd125, 0x1, 0x1);
        gbc.writeMem(0x1adf, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x7ee6);
        EXPECT(gbc.pc(), 0x1ae1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0105
        gbc.setState(0xb753, 0x4b09, 0x6d00, 0x4d6a, 0x6c65, 0xf2b8, 0x1, 0x0);
        gbc.writeMem(0xb753, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x4b09);
        EXPECT(gbc.pc(), 0xb755);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb753), 0xcb);
        EXPECT(gbc.readMem(0xb754), 0xbf);
        // CB BF 0106
        gbc.setState(0x1a63, 0x1c4d, 0x9350, 0x1a4, 0xb916, 0x6ac8, 0x0, 0x0);
        gbc.writeMem(0x1a63, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x1c4d);
        EXPECT(gbc.pc(), 0x1a65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0107
        gbc.setState(0x7e07, 0xb20b, 0x7a80, 0x6c67, 0xeee, 0x1606, 0x0, 0x1);
        gbc.writeMem(0x7e07, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xb20b);
        EXPECT(gbc.pc(), 0x7e09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0108
        gbc.setState(0x345a, 0x6f6f, 0xcc0, 0xae34, 0xa320, 0xa94d, 0x1, 0x0);
        gbc.writeMem(0x345a, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x6f6f);
        EXPECT(gbc.pc(), 0x345c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0109
        gbc.setState(0x3bc6, 0x207a, 0xde40, 0xb788, 0x6a5d, 0xb186, 0x1, 0x1);
        gbc.writeMem(0x3bc6, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x207a);
        EXPECT(gbc.pc(), 0x3bc8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 010A
        gbc.setState(0xe3f1, 0x631b, 0x23b0, 0xa08, 0xc896, 0x8361, 0x0, 0x1);
        gbc.writeMem(0xe3f1, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x631b);
        EXPECT(gbc.pc(), 0xe3f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3f1), 0xcb);
        EXPECT(gbc.readMem(0xe3f2), 0xbf);
        // CB BF 010B
        gbc.setState(0xab05, 0x208e, 0xc8e0, 0xd0ce, 0xf603, 0xfada, 0x1, 0x1);
        gbc.writeMem(0xab05, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x208e);
        EXPECT(gbc.pc(), 0xab07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab05), 0xcb);
        EXPECT(gbc.readMem(0xab06), 0xbf);
        // CB BF 010C
        gbc.setState(0xef4, 0x4003, 0x3870, 0xe3f3, 0x2de1, 0x6b73, 0x1, 0x0);
        gbc.writeMem(0xef4, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x4003);
        EXPECT(gbc.pc(), 0xef6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 010D
        gbc.setState(0xdf76, 0x426b, 0x7ab0, 0xb166, 0xd39a, 0x3012, 0x0, 0x1);
        gbc.writeMem(0xdf76, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x426b);
        EXPECT(gbc.pc(), 0xdf78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf76), 0xcb);
        EXPECT(gbc.readMem(0xdf77), 0xbf);
        // CB BF 010E
        gbc.setState(0x897f, 0xf370, 0x7580, 0x7f4d, 0x349e, 0x7fd9, 0x0, 0x1);
        gbc.writeMem(0x897f, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xf370);
        EXPECT(gbc.pc(), 0x8981);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x897f), 0xcb);
        EXPECT(gbc.readMem(0x8980), 0xbf);
        // CB BF 010F
        gbc.setState(0x30d4, 0x7350, 0x7dd0, 0xf80d, 0x7f63, 0x6468, 0x0, 0x0);
        gbc.writeMem(0x30d4, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x7350);
        EXPECT(gbc.pc(), 0x30d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0110
        gbc.setState(0xf97, 0xdb68, 0x8690, 0xd3e4, 0x3b17, 0xb83, 0x0, 0x0);
        gbc.writeMem(0xf97, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xdb68);
        EXPECT(gbc.pc(), 0xf99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0112
        gbc.setState(0x59cd, 0x308c, 0x830, 0x8f02, 0x71ea, 0xbd3d, 0x1, 0x1);
        gbc.writeMem(0x59cd, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x308c);
        EXPECT(gbc.pc(), 0x59cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0113
        gbc.setState(0x4401, 0xdbe6, 0x8bc0, 0x9cbe, 0xe00d, 0x831b, 0x0, 0x0);
        gbc.writeMem(0x4401, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xdbe6);
        EXPECT(gbc.pc(), 0x4403);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0114
        gbc.setState(0x4bc, 0xc2bc, 0x76f0, 0x761b, 0xd7e6, 0x6cdd, 0x0, 0x0);
        gbc.writeMem(0x4bc, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xc2bc);
        EXPECT(gbc.pc(), 0x4be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0115
        gbc.setState(0x8762, 0xce88, 0x57e0, 0x5ba9, 0xacc5, 0xa85e, 0x0, 0x0);
        gbc.writeMem(0x8762, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xce88);
        EXPECT(gbc.pc(), 0x8764);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8762), 0xcb);
        EXPECT(gbc.readMem(0x8763), 0xbf);
        // CB BF 0116
        gbc.setState(0x4097, 0x766c, 0xc50, 0xdb5b, 0xed65, 0xe999, 0x1, 0x1);
        gbc.writeMem(0x4097, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x766c);
        EXPECT(gbc.pc(), 0x4099);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0117
        gbc.setState(0xd2ad, 0x4ad9, 0xbb50, 0x8ab3, 0xe365, 0x3416, 0x0, 0x0);
        gbc.writeMem(0xd2ad, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x4ad9);
        EXPECT(gbc.pc(), 0xd2af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2ad), 0xcb);
        EXPECT(gbc.readMem(0xd2ae), 0xbf);
        // CB BF 0118
        gbc.setState(0xefc5, 0x7c4f, 0x9280, 0xeca, 0xc68a, 0x7059, 0x1, 0x0);
        gbc.writeMem(0xefc5, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x7c4f);
        EXPECT(gbc.pc(), 0xefc7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefc5), 0xcb);
        EXPECT(gbc.readMem(0xefc6), 0xbf);
        // CB BF 0119
        gbc.setState(0x6fd2, 0x542f, 0x6be0, 0x84cf, 0xc7cb, 0x6415, 0x0, 0x1);
        gbc.writeMem(0x6fd2, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x542f);
        EXPECT(gbc.pc(), 0x6fd4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 011A
        gbc.setState(0x8639, 0x5858, 0xd330, 0x2b56, 0xd611, 0xe0cc, 0x0, 0x1);
        gbc.writeMem(0x8639, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x5858);
        EXPECT(gbc.pc(), 0x863b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8639), 0xcb);
        EXPECT(gbc.readMem(0x863a), 0xbf);
        // CB BF 011B
        gbc.setState(0x7161, 0x903f, 0xb980, 0xa7b1, 0x2727, 0x264d, 0x1, 0x0);
        gbc.writeMem(0x7161, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x903f);
        EXPECT(gbc.pc(), 0x7163);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 011C
        gbc.setState(0xbc7f, 0x9381, 0x4170, 0xc2fe, 0xda9f, 0x12ad, 0x0, 0x0);
        gbc.writeMem(0xbc7f, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x9381);
        EXPECT(gbc.pc(), 0xbc81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc7f), 0xcb);
        EXPECT(gbc.readMem(0xbc80), 0xbf);
        // CB BF 011D
        gbc.setState(0x31f5, 0x57dc, 0x8a40, 0x124a, 0x5ba2, 0x6610, 0x1, 0x1);
        gbc.writeMem(0x31f5, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x57dc);
        EXPECT(gbc.pc(), 0x31f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 011E
        gbc.setState(0xd158, 0x658, 0x3080, 0xb2a4, 0x2fd9, 0xa96d, 0x1, 0x0);
        gbc.writeMem(0xd158, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x658);
        EXPECT(gbc.pc(), 0xd15a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd158), 0xcb);
        EXPECT(gbc.readMem(0xd159), 0xbf);
        // CB BF 011F
        gbc.setState(0x54cd, 0xffc, 0x2aa0, 0xc8fe, 0x7f8d, 0x5712, 0x0, 0x1);
        gbc.writeMem(0x54cd, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xffc);
        EXPECT(gbc.pc(), 0x54cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0121
        gbc.setState(0xddf, 0x60b8, 0xd5d0, 0xc24a, 0x6659, 0xe020, 0x0, 0x0);
        gbc.writeMem(0xddf, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x60b8);
        EXPECT(gbc.pc(), 0xde1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0122
        gbc.setState(0xbb7a, 0xeb3e, 0x4ef0, 0x65ee, 0xfc8d, 0x7624, 0x1, 0x0);
        gbc.writeMem(0xbb7a, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xeb3e);
        EXPECT(gbc.pc(), 0xbb7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb7a), 0xcb);
        EXPECT(gbc.readMem(0xbb7b), 0xbf);
        // CB BF 0123
        gbc.setState(0xcdce, 0x9c87, 0xfa60, 0xd15c, 0x455b, 0x276, 0x0, 0x1);
        gbc.writeMem(0xcdce, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x9c87);
        EXPECT(gbc.pc(), 0xcdd0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdce), 0xcb);
        EXPECT(gbc.readMem(0xcdcf), 0xbf);
        // CB BF 0124
        gbc.setState(0xcff4, 0xff7b, 0xdfe0, 0x227e, 0x80e, 0x533, 0x1, 0x1);
        gbc.writeMem(0xcff4, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xff7b);
        EXPECT(gbc.pc(), 0xcff6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcff4), 0xcb);
        EXPECT(gbc.readMem(0xcff5), 0xbf);
        // CB BF 0125
        gbc.setState(0x4c44, 0xe570, 0x3030, 0xd8bd, 0xa461, 0x2a75, 0x0, 0x0);
        gbc.writeMem(0x4c44, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xe570);
        EXPECT(gbc.pc(), 0x4c46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0126
        gbc.setState(0x152e, 0x8576, 0x9bc0, 0xee4d, 0xa956, 0x456f, 0x0, 0x0);
        gbc.writeMem(0x152e, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x8576);
        EXPECT(gbc.pc(), 0x1530);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0127
        gbc.setState(0x596d, 0xa3e9, 0x8b00, 0x3868, 0x2e3c, 0xe7cc, 0x1, 0x0);
        gbc.writeMem(0x596d, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xa3e9);
        EXPECT(gbc.pc(), 0x596f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0128
        gbc.setState(0x1731, 0xb195, 0xf120, 0xd3f7, 0x2c4b, 0xd2ef, 0x0, 0x1);
        gbc.writeMem(0x1731, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xb195);
        EXPECT(gbc.pc(), 0x1733);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0129
        gbc.setState(0xd09f, 0xe322, 0x9e00, 0xd232, 0x4384, 0x2362, 0x1, 0x1);
        gbc.writeMem(0xd09f, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xe322);
        EXPECT(gbc.pc(), 0xd0a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd09f), 0xcb);
        EXPECT(gbc.readMem(0xd0a0), 0xbf);
        // CB BF 012A
        gbc.setState(0x670b, 0x6b97, 0x7290, 0x4347, 0x753b, 0x81c3, 0x1, 0x0);
        gbc.writeMem(0x670b, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x6b97);
        EXPECT(gbc.pc(), 0x670d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 012C
        gbc.setState(0x3d81, 0xaeb3, 0x62d0, 0x4648, 0x2dc8, 0xbc02, 0x1, 0x1);
        gbc.writeMem(0x3d81, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xaeb3);
        EXPECT(gbc.pc(), 0x3d83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 012D
        gbc.setState(0x7447, 0xb72d, 0x47a0, 0xcd14, 0xe47e, 0x5302, 0x0, 0x1);
        gbc.writeMem(0x7447, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xb72d);
        EXPECT(gbc.pc(), 0x7449);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 012E
        gbc.setState(0x8bba, 0x31d5, 0xf8a0, 0x453d, 0x6735, 0xcaec, 0x1, 0x1);
        gbc.writeMem(0x8bba, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x31d5);
        EXPECT(gbc.pc(), 0x8bbc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bba), 0xcb);
        EXPECT(gbc.readMem(0x8bbb), 0xbf);
        // CB BF 012F
        gbc.setState(0x9e6c, 0x61e7, 0xeca0, 0x27d, 0x1343, 0xacca, 0x0, 0x0);
        gbc.writeMem(0x9e6c, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x61e7);
        EXPECT(gbc.pc(), 0x9e6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e6c), 0xcb);
        EXPECT(gbc.readMem(0x9e6d), 0xbf);
        // CB BF 0130
        gbc.setState(0x4fc1, 0xb138, 0x4c80, 0x2a3c, 0x498b, 0x5faf, 0x0, 0x1);
        gbc.writeMem(0x4fc1, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xb138);
        EXPECT(gbc.pc(), 0x4fc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0131
        gbc.setState(0xa6ed, 0xdf4b, 0x6840, 0x662f, 0x7402, 0xfd8, 0x1, 0x1);
        gbc.writeMem(0xa6ed, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xdf4b);
        EXPECT(gbc.pc(), 0xa6ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6ed), 0xcb);
        EXPECT(gbc.readMem(0xa6ee), 0xbf);
        // CB BF 0132
        gbc.setState(0x9a86, 0x5d57, 0x9b50, 0x59b3, 0xfc4a, 0x725e, 0x1, 0x0);
        gbc.writeMem(0x9a86, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x5d57);
        EXPECT(gbc.pc(), 0x9a88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a86), 0xcb);
        EXPECT(gbc.readMem(0x9a87), 0xbf);
        // CB BF 0133
        gbc.setState(0x2aa9, 0xde65, 0x6120, 0x906d, 0x29ea, 0x5dfd, 0x0, 0x1);
        gbc.writeMem(0x2aa9, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xde65);
        EXPECT(gbc.pc(), 0x2aab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0134
        gbc.setState(0x1a39, 0x6c24, 0xe6c0, 0x7145, 0xc43c, 0x842d, 0x0, 0x0);
        gbc.writeMem(0x1a39, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x6c24);
        EXPECT(gbc.pc(), 0x1a3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0135
        gbc.setState(0x6f1f, 0x3274, 0x78e0, 0xb726, 0x2f21, 0x1899, 0x0, 0x1);
        gbc.writeMem(0x6f1f, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x3274);
        EXPECT(gbc.pc(), 0x6f21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0136
        gbc.setState(0xab5c, 0x8350, 0x9260, 0x327f, 0xe0c9, 0x74bf, 0x1, 0x1);
        gbc.writeMem(0xab5c, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x8350);
        EXPECT(gbc.pc(), 0xab5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab5c), 0xcb);
        EXPECT(gbc.readMem(0xab5d), 0xbf);
        // CB BF 0137
        gbc.setState(0x9591, 0xee3f, 0x1550, 0xbf03, 0xcc7b, 0xaef7, 0x0, 0x1);
        gbc.writeMem(0x9591, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xee3f);
        EXPECT(gbc.pc(), 0x9593);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9591), 0xcb);
        EXPECT(gbc.readMem(0x9592), 0xbf);
        // CB BF 0138
        gbc.setState(0x83bd, 0x3b41, 0xe6f0, 0x17a7, 0xa541, 0x7087, 0x1, 0x1);
        gbc.writeMem(0x83bd, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x3b41);
        EXPECT(gbc.pc(), 0x83bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83bd), 0xcb);
        EXPECT(gbc.readMem(0x83be), 0xbf);
        // CB BF 0139
        gbc.setState(0x37d3, 0x573c, 0x9350, 0x5df6, 0x7bca, 0x2c67, 0x1, 0x0);
        gbc.writeMem(0x37d3, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x573c);
        EXPECT(gbc.pc(), 0x37d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 013A
        gbc.setState(0xa54, 0xa3e8, 0xbce0, 0xb39c, 0xfe93, 0xbc84, 0x1, 0x0);
        gbc.writeMem(0xa54, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xa3e8);
        EXPECT(gbc.pc(), 0xa56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 013B
        gbc.setState(0xaba6, 0x9cbe, 0x9b0, 0xc657, 0xd91, 0xc317, 0x0, 0x0);
        gbc.writeMem(0xaba6, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x9cbe);
        EXPECT(gbc.pc(), 0xaba8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaba6), 0xcb);
        EXPECT(gbc.readMem(0xaba7), 0xbf);
        // CB BF 013C
        gbc.setState(0xc1b4, 0xa875, 0xb6c0, 0x2625, 0xfe71, 0xe3cb, 0x1, 0x1);
        gbc.writeMem(0xc1b4, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xa875);
        EXPECT(gbc.pc(), 0xc1b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1b4), 0xcb);
        EXPECT(gbc.readMem(0xc1b5), 0xbf);
        // CB BF 013D
        gbc.setState(0xe04e, 0x173, 0xdc0, 0xf397, 0x5b74, 0xd1e3, 0x1, 0x1);
        gbc.writeMem(0xe04e, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x173);
        EXPECT(gbc.pc(), 0xe050);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe04e), 0xcb);
        EXPECT(gbc.readMem(0xe04f), 0xbf);
        // CB BF 013E
        gbc.setState(0x6e67, 0xd571, 0x8860, 0x50c, 0xfed8, 0x5bc7, 0x0, 0x1);
        gbc.writeMem(0x6e67, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xd571);
        EXPECT(gbc.pc(), 0x6e69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 013F
        gbc.setState(0x7d41, 0x3bc0, 0x18e0, 0x6c11, 0xad5b, 0xef5c, 0x0, 0x1);
        gbc.writeMem(0x7d41, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x3bc0);
        EXPECT(gbc.pc(), 0x7d43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0140
        gbc.setState(0x7367, 0x4ede, 0x9d70, 0x2754, 0x593a, 0x4000, 0x1, 0x1);
        gbc.writeMem(0x7367, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x4ede);
        EXPECT(gbc.pc(), 0x7369);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0141
        gbc.setState(0xea38, 0x4752, 0x7020, 0xf19e, 0xb10b, 0xcbfe, 0x1, 0x0);
        gbc.writeMem(0xea38, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x4752);
        EXPECT(gbc.pc(), 0xea3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea38), 0xcb);
        EXPECT(gbc.readMem(0xea39), 0xbf);
        // CB BF 0142
        gbc.setState(0xed81, 0xabc5, 0x3190, 0x872b, 0xd1fd, 0x7f05, 0x0, 0x1);
        gbc.writeMem(0xed81, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xabc5);
        EXPECT(gbc.pc(), 0xed83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed81), 0xcb);
        EXPECT(gbc.readMem(0xed82), 0xbf);
        // CB BF 0144
        gbc.setState(0x1f49, 0xd0b1, 0x790, 0x9c62, 0x8381, 0x3df0, 0x1, 0x1);
        gbc.writeMem(0x1f49, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xd0b1);
        EXPECT(gbc.pc(), 0x1f4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0145
        gbc.setState(0x7b57, 0xb272, 0xef40, 0xc179, 0x7250, 0xb9b2, 0x1, 0x1);
        gbc.writeMem(0x7b57, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xb272);
        EXPECT(gbc.pc(), 0x7b59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0146
        gbc.setState(0xb163, 0xac1c, 0xd8a0, 0xf535, 0x35da, 0x35c8, 0x0, 0x0);
        gbc.writeMem(0xb163, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xac1c);
        EXPECT(gbc.pc(), 0xb165);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb163), 0xcb);
        EXPECT(gbc.readMem(0xb164), 0xbf);
        // CB BF 0147
        gbc.setState(0x292c, 0x5cad, 0x3400, 0xdef, 0xb68e, 0x9738, 0x1, 0x1);
        gbc.writeMem(0x292c, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x5cad);
        EXPECT(gbc.pc(), 0x292e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0148
        gbc.setState(0x680, 0xff03, 0x4930, 0x3482, 0xefe5, 0x469b, 0x1, 0x0);
        gbc.writeMem(0x680, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xff03);
        EXPECT(gbc.pc(), 0x682);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0149
        gbc.setState(0xe4cd, 0xb3e7, 0x4420, 0xead1, 0x2949, 0xd40c, 0x1, 0x0);
        gbc.writeMem(0xe4cd, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xb3e7);
        EXPECT(gbc.pc(), 0xe4cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4cd), 0xcb);
        EXPECT(gbc.readMem(0xe4ce), 0xbf);
        // CB BF 014A
        gbc.setState(0x22e2, 0xb761, 0x6cd0, 0xb17b, 0xfcbf, 0xdf65, 0x0, 0x0);
        gbc.writeMem(0x22e2, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xb761);
        EXPECT(gbc.pc(), 0x22e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 014B
        gbc.setState(0xd8db, 0x101b, 0xb810, 0xd79f, 0x3f12, 0x3e8e, 0x0, 0x1);
        gbc.writeMem(0xd8db, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x101b);
        EXPECT(gbc.pc(), 0xd8dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8db), 0xcb);
        EXPECT(gbc.readMem(0xd8dc), 0xbf);
        // CB BF 014C
        gbc.setState(0x30e6, 0x8fe6, 0x4850, 0x3991, 0x3e83, 0xc9c7, 0x1, 0x1);
        gbc.writeMem(0x30e6, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x8fe6);
        EXPECT(gbc.pc(), 0x30e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 014D
        gbc.setState(0x16ea, 0x63e1, 0x18d0, 0xd972, 0xd728, 0x4277, 0x1, 0x1);
        gbc.writeMem(0x16ea, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x63e1);
        EXPECT(gbc.pc(), 0x16ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 014E
        gbc.setState(0x5af8, 0xae1e, 0x4250, 0xb037, 0x4ee1, 0x58bc, 0x0, 0x1);
        gbc.writeMem(0x5af8, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xae1e);
        EXPECT(gbc.pc(), 0x5afa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 014F
        gbc.setState(0x8d64, 0x196f, 0xae10, 0x3c88, 0x5489, 0x7ffc, 0x0, 0x0);
        gbc.writeMem(0x8d64, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x196f);
        EXPECT(gbc.pc(), 0x8d66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d64), 0xcb);
        EXPECT(gbc.readMem(0x8d65), 0xbf);
        // CB BF 0150
        gbc.setState(0xe437, 0x1c1b, 0x5b50, 0x14bd, 0xc320, 0xd6df, 0x1, 0x1);
        gbc.writeMem(0xe437, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x1c1b);
        EXPECT(gbc.pc(), 0xe439);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe437), 0xcb);
        EXPECT(gbc.readMem(0xe438), 0xbf);
        // CB BF 0151
        gbc.setState(0x58b3, 0x889b, 0x35b0, 0xbb57, 0xe843, 0xe0cf, 0x1, 0x0);
        gbc.writeMem(0x58b3, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x889b);
        EXPECT(gbc.pc(), 0x58b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0152
        gbc.setState(0xe269, 0xb080, 0x32a0, 0x84d5, 0x722b, 0x81a4, 0x0, 0x1);
        gbc.writeMem(0xe269, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xb080);
        EXPECT(gbc.pc(), 0xe26b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe269), 0xcb);
        EXPECT(gbc.readMem(0xe26a), 0xbf);
        // CB BF 0153
        gbc.setState(0x75b3, 0x6a45, 0x1170, 0x4a4b, 0x3f19, 0xa8a7, 0x1, 0x1);
        gbc.writeMem(0x75b3, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x6a45);
        EXPECT(gbc.pc(), 0x75b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0154
        gbc.setState(0xc993, 0xc185, 0x50a0, 0xc940, 0xdfe9, 0x221b, 0x1, 0x1);
        gbc.writeMem(0xc993, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xc185);
        EXPECT(gbc.pc(), 0xc995);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc993), 0xcb);
        EXPECT(gbc.readMem(0xc994), 0xbf);
        // CB BF 0155
        gbc.setState(0xcb72, 0x7967, 0x8400, 0x328b, 0x7870, 0xc8e9, 0x1, 0x0);
        gbc.writeMem(0xcb72, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x7967);
        EXPECT(gbc.pc(), 0xcb74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb72), 0xcb);
        EXPECT(gbc.readMem(0xcb73), 0xbf);
        // CB BF 0156
        gbc.setState(0xb2a4, 0xdff4, 0xde20, 0x1d95, 0xf014, 0xc083, 0x1, 0x1);
        gbc.writeMem(0xb2a4, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xdff4);
        EXPECT(gbc.pc(), 0xb2a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2a4), 0xcb);
        EXPECT(gbc.readMem(0xb2a5), 0xbf);
        // CB BF 0157
        gbc.setState(0x2888, 0xf323, 0xba40, 0xbcbe, 0xcb59, 0x83cd, 0x1, 0x1);
        gbc.writeMem(0x2888, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xf323);
        EXPECT(gbc.pc(), 0x288a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0158
        gbc.setState(0xeef9, 0xc9e2, 0x9d90, 0xe57b, 0x971c, 0x8022, 0x0, 0x0);
        gbc.writeMem(0xeef9, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xc9e2);
        EXPECT(gbc.pc(), 0xeefb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeef9), 0xcb);
        EXPECT(gbc.readMem(0xeefa), 0xbf);
        // CB BF 0159
        gbc.setState(0xb9f3, 0xa566, 0x20a0, 0xbdd4, 0x739d, 0x87bc, 0x0, 0x0);
        gbc.writeMem(0xb9f3, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xa566);
        EXPECT(gbc.pc(), 0xb9f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9f3), 0xcb);
        EXPECT(gbc.readMem(0xb9f4), 0xbf);
        // CB BF 015A
        gbc.setState(0x43ae, 0xbc61, 0xe360, 0x6136, 0xa8f1, 0xee8a, 0x0, 0x1);
        gbc.writeMem(0x43ae, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xbc61);
        EXPECT(gbc.pc(), 0x43b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 015B
        gbc.setState(0x3e2a, 0x8cee, 0x490, 0xb1fa, 0x4f7, 0x8921, 0x1, 0x0);
        gbc.writeMem(0x3e2a, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x8cee);
        EXPECT(gbc.pc(), 0x3e2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 015C
        gbc.setState(0x6a97, 0x9979, 0xe7a0, 0xf09b, 0x9bc0, 0x6034, 0x1, 0x0);
        gbc.writeMem(0x6a97, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x9979);
        EXPECT(gbc.pc(), 0x6a99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 015E
        gbc.setState(0x427d, 0x14dd, 0x2160, 0xb484, 0x703a, 0x2046, 0x0, 0x1);
        gbc.writeMem(0x427d, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x14dd);
        EXPECT(gbc.pc(), 0x427f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 015F
        gbc.setState(0x51a, 0x73be, 0x9150, 0xd791, 0xff64, 0xa46a, 0x1, 0x0);
        gbc.writeMem(0x51a, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x73be);
        EXPECT(gbc.pc(), 0x51c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0160
        gbc.setState(0xb85d, 0x33b5, 0x6eb0, 0x2727, 0x4076, 0x2b6f, 0x1, 0x1);
        gbc.writeMem(0xb85d, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x33b5);
        EXPECT(gbc.pc(), 0xb85f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb85d), 0xcb);
        EXPECT(gbc.readMem(0xb85e), 0xbf);
        // CB BF 0162
        gbc.setState(0xac2b, 0xbcec, 0xfcb0, 0x2c77, 0xbcc3, 0xa36e, 0x1, 0x1);
        gbc.writeMem(0xac2b, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xbcec);
        EXPECT(gbc.pc(), 0xac2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac2b), 0xcb);
        EXPECT(gbc.readMem(0xac2c), 0xbf);
        // CB BF 0163
        gbc.setState(0x2df4, 0xa42e, 0x85b0, 0xb991, 0x827f, 0xb4ba, 0x1, 0x0);
        gbc.writeMem(0x2df4, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xa42e);
        EXPECT(gbc.pc(), 0x2df6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0164
        gbc.setState(0x2019, 0x797, 0x41d0, 0xd806, 0x9040, 0xaff8, 0x0, 0x0);
        gbc.writeMem(0x2019, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x797);
        EXPECT(gbc.pc(), 0x201b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0165
        gbc.setState(0x9723, 0xb93a, 0xce50, 0xc9e5, 0xfc41, 0xe46b, 0x0, 0x0);
        gbc.writeMem(0x9723, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xb93a);
        EXPECT(gbc.pc(), 0x9725);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9723), 0xcb);
        EXPECT(gbc.readMem(0x9724), 0xbf);
        // CB BF 0166
        gbc.setState(0x347e, 0xe349, 0x38f0, 0xcf07, 0xe78e, 0x754b, 0x0, 0x0);
        gbc.writeMem(0x347e, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xe349);
        EXPECT(gbc.pc(), 0x3480);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0167
        gbc.setState(0x6a11, 0x22bd, 0xc50, 0x498b, 0x95c2, 0x6e29, 0x1, 0x0);
        gbc.writeMem(0x6a11, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x22bd);
        EXPECT(gbc.pc(), 0x6a13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0168
        gbc.setState(0x3f13, 0xec28, 0x5300, 0xb63d, 0xcca4, 0x29b0, 0x1, 0x1);
        gbc.writeMem(0x3f13, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xec28);
        EXPECT(gbc.pc(), 0x3f15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0169
        gbc.setState(0x325d, 0x1c86, 0x5530, 0xc065, 0x938d, 0x6238, 0x0, 0x1);
        gbc.writeMem(0x325d, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x1c86);
        EXPECT(gbc.pc(), 0x325f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 016A
        gbc.setState(0x1ce0, 0x217c, 0x150, 0x2426, 0x2004, 0x3aae, 0x1, 0x0);
        gbc.writeMem(0x1ce0, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x217c);
        EXPECT(gbc.pc(), 0x1ce2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 016B
        gbc.setState(0x3390, 0xac1e, 0x12a0, 0xb2ca, 0x3f56, 0x7ba5, 0x1, 0x1);
        gbc.writeMem(0x3390, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xac1e);
        EXPECT(gbc.pc(), 0x3392);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 016C
        gbc.setState(0x9572, 0x3c41, 0x1420, 0x21ea, 0x1fbd, 0x93d3, 0x0, 0x1);
        gbc.writeMem(0x9572, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x3c41);
        EXPECT(gbc.pc(), 0x9574);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9572), 0xcb);
        EXPECT(gbc.readMem(0x9573), 0xbf);
        // CB BF 016D
        gbc.setState(0x3dd5, 0x5a32, 0xe7c0, 0x8b2e, 0xb3f0, 0x6174, 0x1, 0x1);
        gbc.writeMem(0x3dd5, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x5a32);
        EXPECT(gbc.pc(), 0x3dd7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 016E
        gbc.setState(0xb091, 0x5c54, 0x27a0, 0xfc62, 0x3a6d, 0xb308, 0x1, 0x1);
        gbc.writeMem(0xb091, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x5c54);
        EXPECT(gbc.pc(), 0xb093);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb091), 0xcb);
        EXPECT(gbc.readMem(0xb092), 0xbf);
        // CB BF 016F
        gbc.setState(0x41a2, 0x8706, 0x6dd0, 0x82e2, 0x15e5, 0x902d, 0x1, 0x0);
        gbc.writeMem(0x41a2, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x8706);
        EXPECT(gbc.pc(), 0x41a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0170
        gbc.setState(0x390, 0x5f0, 0x3700, 0x4266, 0xa70a, 0xdc9e, 0x1, 0x0);
        gbc.writeMem(0x390, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x5f0);
        EXPECT(gbc.pc(), 0x392);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0171
        gbc.setState(0x10b, 0x95da, 0xfdc0, 0x1313, 0xc6e7, 0x8f18, 0x0, 0x1);
        gbc.writeMem(0x10b, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x95da);
        EXPECT(gbc.pc(), 0x10d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0172
        gbc.setState(0x6d82, 0x9a8f, 0xade0, 0x5f96, 0x56d9, 0x60ee, 0x0, 0x1);
        gbc.writeMem(0x6d82, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x9a8f);
        EXPECT(gbc.pc(), 0x6d84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0173
        gbc.setState(0x6787, 0x2dc4, 0xb630, 0x2179, 0xa321, 0x545e, 0x0, 0x1);
        gbc.writeMem(0x6787, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x2dc4);
        EXPECT(gbc.pc(), 0x6789);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0175
        gbc.setState(0x33af, 0x77a0, 0x470, 0x9167, 0xf807, 0x2947, 0x1, 0x0);
        gbc.writeMem(0x33af, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x77a0);
        EXPECT(gbc.pc(), 0x33b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0176
        gbc.setState(0xe93, 0xe1a4, 0xba70, 0xa7db, 0xdc67, 0x1daa, 0x0, 0x0);
        gbc.writeMem(0xe93, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xe1a4);
        EXPECT(gbc.pc(), 0xe95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0177
        gbc.setState(0x6768, 0x388, 0x1a90, 0xfef7, 0xde0, 0x5f76, 0x1, 0x1);
        gbc.writeMem(0x6768, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x388);
        EXPECT(gbc.pc(), 0x676a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0178
        gbc.setState(0x6286, 0x829, 0xd20, 0x110, 0xb4c, 0xfe66, 0x1, 0x0);
        gbc.writeMem(0x6286, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x829);
        EXPECT(gbc.pc(), 0x6288);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0179
        gbc.setState(0x113e, 0xeb81, 0x7920, 0x646, 0xa3ab, 0xfe4e, 0x1, 0x1);
        gbc.writeMem(0x113e, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xeb81);
        EXPECT(gbc.pc(), 0x1140);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 017A
        gbc.setState(0xdef3, 0x4ac3, 0x58d0, 0xb5fc, 0x27d5, 0xee25, 0x0, 0x1);
        gbc.writeMem(0xdef3, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x4ac3);
        EXPECT(gbc.pc(), 0xdef5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdef3), 0xcb);
        EXPECT(gbc.readMem(0xdef4), 0xbf);
        // CB BF 017B
        gbc.setState(0xd3a7, 0x5986, 0xe140, 0x50e5, 0xd290, 0x7005, 0x0, 0x1);
        gbc.writeMem(0xd3a7, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x5986);
        EXPECT(gbc.pc(), 0xd3a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3a7), 0xcb);
        EXPECT(gbc.readMem(0xd3a8), 0xbf);
        // CB BF 017C
        gbc.setState(0x5994, 0xbf54, 0xe5e0, 0x6027, 0x30e2, 0x39fa, 0x0, 0x0);
        gbc.writeMem(0x5994, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xbf54);
        EXPECT(gbc.pc(), 0x5996);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 017D
        gbc.setState(0x11f9, 0x2f7d, 0xe570, 0xc252, 0x1040, 0x648e, 0x1, 0x0);
        gbc.writeMem(0x11f9, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x2f7d);
        EXPECT(gbc.pc(), 0x11fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 017F
        gbc.setState(0x452f, 0x50e1, 0x8f30, 0x4612, 0xd617, 0x177, 0x1, 0x1);
        gbc.writeMem(0x452f, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x50e1);
        EXPECT(gbc.pc(), 0x4531);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0180
        gbc.setState(0x5db2, 0x482f, 0x28a0, 0xabb5, 0x5e70, 0xfcdc, 0x1, 0x0);
        gbc.writeMem(0x5db2, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x482f);
        EXPECT(gbc.pc(), 0x5db4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0181
        gbc.setState(0x5f49, 0xd9ff, 0x1420, 0x7e69, 0x5bdc, 0xa3fa, 0x1, 0x1);
        gbc.writeMem(0x5f49, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xd9ff);
        EXPECT(gbc.pc(), 0x5f4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0182
        gbc.setState(0xee66, 0x8b65, 0x64f0, 0xdb32, 0xaf7b, 0xdbcf, 0x0, 0x0);
        gbc.writeMem(0xee66, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x8b65);
        EXPECT(gbc.pc(), 0xee68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee66), 0xcb);
        EXPECT(gbc.readMem(0xee67), 0xbf);
        // CB BF 0183
        gbc.setState(0x8b1a, 0x191c, 0x1640, 0x3eb8, 0xf2ea, 0x91c6, 0x0, 0x0);
        gbc.writeMem(0x8b1a, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x191c);
        EXPECT(gbc.pc(), 0x8b1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b1a), 0xcb);
        EXPECT(gbc.readMem(0x8b1b), 0xbf);
        // CB BF 0184
        gbc.setState(0x3f0f, 0xd5a0, 0xe5d0, 0x1a87, 0x9c88, 0x1b3c, 0x0, 0x0);
        gbc.writeMem(0x3f0f, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xd5a0);
        EXPECT(gbc.pc(), 0x3f11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0185
        gbc.setState(0xcff8, 0xc0f, 0xba10, 0x5bd7, 0x5c39, 0xdde1, 0x0, 0x0);
        gbc.writeMem(0xcff8, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xc0f);
        EXPECT(gbc.pc(), 0xcffa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcff8), 0xcb);
        EXPECT(gbc.readMem(0xcff9), 0xbf);
        // CB BF 0186
        gbc.setState(0x78d6, 0xab22, 0xa0d0, 0x83d, 0xadb, 0xd0e1, 0x1, 0x1);
        gbc.writeMem(0x78d6, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xab22);
        EXPECT(gbc.pc(), 0x78d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0187
        gbc.setState(0xdca, 0xac3e, 0x8ed0, 0xc13d, 0x3f03, 0x25, 0x1, 0x0);
        gbc.writeMem(0xdca, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xac3e);
        EXPECT(gbc.pc(), 0xdcc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0188
        gbc.setState(0xe4e1, 0x3566, 0xd7a0, 0x5498, 0xc41b, 0x7bf4, 0x1, 0x0);
        gbc.writeMem(0xe4e1, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x3566);
        EXPECT(gbc.pc(), 0xe4e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4e1), 0xcb);
        EXPECT(gbc.readMem(0xe4e2), 0xbf);
        // CB BF 0189
        gbc.setState(0x734c, 0xd25d, 0x3dc0, 0xe548, 0xbc43, 0x6bfa, 0x0, 0x0);
        gbc.writeMem(0x734c, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xd25d);
        EXPECT(gbc.pc(), 0x734e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 018B
        gbc.setState(0xde02, 0xcda, 0x98a0, 0xfb98, 0xa0d4, 0xd2a0, 0x1, 0x0);
        gbc.writeMem(0xde02, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xcda);
        EXPECT(gbc.pc(), 0xde04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde02), 0xcb);
        EXPECT(gbc.readMem(0xde03), 0xbf);
        // CB BF 018C
        gbc.setState(0x7d4, 0x417a, 0x3f60, 0x4814, 0xb2d1, 0xa8b5, 0x1, 0x0);
        gbc.writeMem(0x7d4, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x417a);
        EXPECT(gbc.pc(), 0x7d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 018D
        gbc.setState(0x2d7, 0xda7d, 0x6eb0, 0x3034, 0xaaf5, 0x2f37, 0x1, 0x1);
        gbc.writeMem(0x2d7, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xda7d);
        EXPECT(gbc.pc(), 0x2d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 018E
        gbc.setState(0xe1b2, 0xc3b2, 0xfcf0, 0x898c, 0x6329, 0x5e46, 0x1, 0x1);
        gbc.writeMem(0xe1b2, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xc3b2);
        EXPECT(gbc.pc(), 0xe1b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1b2), 0xcb);
        EXPECT(gbc.readMem(0xe1b3), 0xbf);
        // CB BF 018F
        gbc.setState(0x2e77, 0x90ab, 0xf960, 0x6045, 0xbe83, 0xb369, 0x0, 0x1);
        gbc.writeMem(0x2e77, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x90ab);
        EXPECT(gbc.pc(), 0x2e79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0190
        gbc.setState(0x9b3e, 0x572a, 0xbd30, 0x356f, 0xd3f4, 0xa98, 0x0, 0x0);
        gbc.writeMem(0x9b3e, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x572a);
        EXPECT(gbc.pc(), 0x9b40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b3e), 0xcb);
        EXPECT(gbc.readMem(0x9b3f), 0xbf);
        // CB BF 0191
        gbc.setState(0xd2b6, 0x5c7b, 0x9ec0, 0x3d9d, 0x9f9f, 0x7b3b, 0x0, 0x1);
        gbc.writeMem(0xd2b6, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x5c7b);
        EXPECT(gbc.pc(), 0xd2b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2b6), 0xcb);
        EXPECT(gbc.readMem(0xd2b7), 0xbf);
        // CB BF 0192
        gbc.setState(0xaa3a, 0xf277, 0x8c30, 0xc867, 0xf000, 0xf564, 0x0, 0x0);
        gbc.writeMem(0xaa3a, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xf277);
        EXPECT(gbc.pc(), 0xaa3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa3a), 0xcb);
        EXPECT(gbc.readMem(0xaa3b), 0xbf);
        // CB BF 0193
        gbc.setState(0xeb17, 0x3b01, 0x34d0, 0x8b5b, 0x4477, 0x4fce, 0x0, 0x1);
        gbc.writeMem(0xeb17, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x3b01);
        EXPECT(gbc.pc(), 0xeb19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb17), 0xcb);
        EXPECT(gbc.readMem(0xeb18), 0xbf);
        // CB BF 0194
        gbc.setState(0x6b02, 0x39ae, 0x33a0, 0x6538, 0xfc0c, 0x5069, 0x0, 0x0);
        gbc.writeMem(0x6b02, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x39ae);
        EXPECT(gbc.pc(), 0x6b04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0195
        gbc.setState(0x502b, 0xcdaf, 0x8450, 0xab2d, 0xbdd2, 0x398d, 0x0, 0x1);
        gbc.writeMem(0x502b, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xcdaf);
        EXPECT(gbc.pc(), 0x502d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0196
        gbc.setState(0x417b, 0x277f, 0x6ce0, 0x23cf, 0x66d9, 0x5720, 0x1, 0x0);
        gbc.writeMem(0x417b, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x277f);
        EXPECT(gbc.pc(), 0x417d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0197
        gbc.setState(0xefeb, 0x2a38, 0xa890, 0xa332, 0x1d60, 0x7513, 0x1, 0x0);
        gbc.writeMem(0xefeb, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x2a38);
        EXPECT(gbc.pc(), 0xefed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefeb), 0xcb);
        EXPECT(gbc.readMem(0xefec), 0xbf);
        // CB BF 0198
        gbc.setState(0x18c6, 0xc906, 0xe520, 0x28c3, 0x8421, 0xfd7d, 0x0, 0x0);
        gbc.writeMem(0x18c6, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xc906);
        EXPECT(gbc.pc(), 0x18c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0199
        gbc.setState(0x35, 0xdc42, 0xd430, 0x78b4, 0xd0e9, 0x663a, 0x1, 0x1);
        gbc.writeMem(0x35, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xdc42);
        EXPECT(gbc.pc(), 0x37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 019A
        gbc.setState(0x7e18, 0x5386, 0xe3b0, 0x5586, 0x664d, 0xc0ba, 0x1, 0x1);
        gbc.writeMem(0x7e18, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x5386);
        EXPECT(gbc.pc(), 0x7e1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 019B
        gbc.setState(0x8b54, 0xf287, 0x55b0, 0xc207, 0x1872, 0x1c23, 0x0, 0x0);
        gbc.writeMem(0x8b54, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xf287);
        EXPECT(gbc.pc(), 0x8b56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b54), 0xcb);
        EXPECT(gbc.readMem(0x8b55), 0xbf);
        // CB BF 019D
        gbc.setState(0x3386, 0x8b41, 0xf450, 0xb468, 0x3654, 0xb42a, 0x0, 0x1);
        gbc.writeMem(0x3386, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x8b41);
        EXPECT(gbc.pc(), 0x3388);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 019E
        gbc.setState(0x530d, 0xb729, 0xa7c0, 0x920, 0xba7f, 0x213f, 0x1, 0x1);
        gbc.writeMem(0x530d, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xb729);
        EXPECT(gbc.pc(), 0x530f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 019F
        gbc.setState(0xe53e, 0x3af, 0x7630, 0x9b4b, 0x819, 0x745e, 0x1, 0x0);
        gbc.writeMem(0xe53e, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x3af);
        EXPECT(gbc.pc(), 0xe540);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe53e), 0xcb);
        EXPECT(gbc.readMem(0xe53f), 0xbf);
        // CB BF 01A0
        gbc.setState(0x6253, 0x5bc3, 0xa360, 0xb27e, 0x6444, 0x2ef7, 0x1, 0x0);
        gbc.writeMem(0x6253, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x5bc3);
        EXPECT(gbc.pc(), 0x6255);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 01A1
        gbc.setState(0x8f38, 0x4c9, 0xcba0, 0x2b81, 0x1e27, 0xe2c1, 0x1, 0x0);
        gbc.writeMem(0x8f38, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x4c9);
        EXPECT(gbc.pc(), 0x8f3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f38), 0xcb);
        EXPECT(gbc.readMem(0x8f39), 0xbf);
        // CB BF 01A2
        gbc.setState(0x3704, 0xba8b, 0x2d70, 0xe8b, 0xc587, 0xfa45, 0x0, 0x0);
        gbc.writeMem(0x3704, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xba8b);
        EXPECT(gbc.pc(), 0x3706);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 01A3
        gbc.setState(0x7c30, 0xe03, 0x3140, 0x33f7, 0x51f8, 0x7be5, 0x1, 0x0);
        gbc.writeMem(0x7c30, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xe03);
        EXPECT(gbc.pc(), 0x7c32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 01A4
        gbc.setState(0x6e03, 0xff9b, 0x2710, 0x4f14, 0xba1c, 0xb279, 0x1, 0x0);
        gbc.writeMem(0x6e03, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xff9b);
        EXPECT(gbc.pc(), 0x6e05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 01A5
        gbc.setState(0x6a59, 0xda18, 0x2fc0, 0xc9af, 0xe82e, 0x5334, 0x1, 0x1);
        gbc.writeMem(0x6a59, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xda18);
        EXPECT(gbc.pc(), 0x6a5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 01A6
        gbc.setState(0x527f, 0xa73e, 0x6380, 0x3e6d, 0x9cb7, 0xf69b, 0x0, 0x0);
        gbc.writeMem(0x527f, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xa73e);
        EXPECT(gbc.pc(), 0x5281);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 01A7
        gbc.setState(0xa20e, 0x4ecc, 0x3520, 0x4d, 0x91c5, 0x32d7, 0x0, 0x1);
        gbc.writeMem(0xa20e, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x4ecc);
        EXPECT(gbc.pc(), 0xa210);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa20e), 0xcb);
        EXPECT(gbc.readMem(0xa20f), 0xbf);
        // CB BF 01A8
        gbc.setState(0xc496, 0x49f1, 0xef00, 0x8bc3, 0xc28c, 0x31f9, 0x0, 0x0);
        gbc.writeMem(0xc496, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x49f1);
        EXPECT(gbc.pc(), 0xc498);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc496), 0xcb);
        EXPECT(gbc.readMem(0xc497), 0xbf);
        // CB BF 01A9
        gbc.setState(0x796e, 0x87a6, 0xcd50, 0xfd77, 0x8a3a, 0xcc09, 0x1, 0x1);
        gbc.writeMem(0x796e, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x87a6);
        EXPECT(gbc.pc(), 0x7970);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 01AA
        gbc.setState(0x2801, 0x9921, 0x1670, 0x7051, 0xb8be, 0xbe50, 0x1, 0x0);
        gbc.writeMem(0x2801, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x9921);
        EXPECT(gbc.pc(), 0x2803);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 01AC
        gbc.setState(0xd49a, 0x717f, 0x3200, 0x6bc, 0x4ec9, 0xb41e, 0x0, 0x1);
        gbc.writeMem(0xd49a, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x717f);
        EXPECT(gbc.pc(), 0xd49c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd49a), 0xcb);
        EXPECT(gbc.readMem(0xd49b), 0xbf);
        // CB BF 01AD
        gbc.setState(0x8d7, 0x51ea, 0xead0, 0xaf16, 0x1974, 0x9a55, 0x1, 0x1);
        gbc.writeMem(0x8d7, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x51ea);
        EXPECT(gbc.pc(), 0x8d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 01AE
        gbc.setState(0xfd9, 0xbce7, 0xad60, 0x6b40, 0xf468, 0x8f3e, 0x1, 0x1);
        gbc.writeMem(0xfd9, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xbce7);
        EXPECT(gbc.pc(), 0xfdb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 01AF
        gbc.setState(0xda6a, 0xebbc, 0xf7e0, 0x72f7, 0x569c, 0x5dc6, 0x1, 0x1);
        gbc.writeMem(0xda6a, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xebbc);
        EXPECT(gbc.pc(), 0xda6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda6a), 0xcb);
        EXPECT(gbc.readMem(0xda6b), 0xbf);
        // CB BF 01B0
        gbc.setState(0xd2b0, 0xe3f0, 0xe390, 0x6d7, 0x755c, 0xd9ba, 0x1, 0x1);
        gbc.writeMem(0xd2b0, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xe3f0);
        EXPECT(gbc.pc(), 0xd2b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2b0), 0xcb);
        EXPECT(gbc.readMem(0xd2b1), 0xbf);
        // CB BF 01B1
        gbc.setState(0xb8c3, 0xf107, 0x4d0, 0x8bd1, 0x29c4, 0x575e, 0x0, 0x0);
        gbc.writeMem(0xb8c3, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xf107);
        EXPECT(gbc.pc(), 0xb8c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8c3), 0xcb);
        EXPECT(gbc.readMem(0xb8c4), 0xbf);
        // CB BF 01B2
        gbc.setState(0x1d, 0xfc2d, 0x88c0, 0x4614, 0x117a, 0x263, 0x0, 0x0);
        gbc.writeMem(0x1d, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xfc2d);
        EXPECT(gbc.pc(), 0x1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 01B3
        gbc.setState(0x7ad9, 0x1a54, 0xffb0, 0x6d3, 0xf8d3, 0x61e3, 0x1, 0x0);
        gbc.writeMem(0x7ad9, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x1a54);
        EXPECT(gbc.pc(), 0x7adb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 01B4
        gbc.setState(0xa703, 0x9858, 0xd250, 0x320f, 0xf059, 0xf8d5, 0x0, 0x0);
        gbc.writeMem(0xa703, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x9858);
        EXPECT(gbc.pc(), 0xa705);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa703), 0xcb);
        EXPECT(gbc.readMem(0xa704), 0xbf);
        // CB BF 01B5
        gbc.setState(0x2b43, 0xb8ac, 0x6b20, 0xfac7, 0x98bc, 0x8a5a, 0x0, 0x1);
        gbc.writeMem(0x2b43, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xb8ac);
        EXPECT(gbc.pc(), 0x2b45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 01B6
        gbc.setState(0x3348, 0xf08a, 0x5690, 0xae1a, 0x7109, 0x9717, 0x0, 0x1);
        gbc.writeMem(0x3348, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xf08a);
        EXPECT(gbc.pc(), 0x334a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 01B7
        gbc.setState(0x6239, 0x2ea1, 0xbda0, 0xe106, 0x8c4d, 0x3a27, 0x0, 0x0);
        gbc.writeMem(0x6239, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x2ea1);
        EXPECT(gbc.pc(), 0x623b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 01B8
        gbc.setState(0x836b, 0xee9c, 0x3040, 0xdb0b, 0x3c74, 0x5ab6, 0x0, 0x1);
        gbc.writeMem(0x836b, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xee9c);
        EXPECT(gbc.pc(), 0x836d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x836b), 0xcb);
        EXPECT(gbc.readMem(0x836c), 0xbf);
        // CB BF 01B9
        gbc.setState(0x41a5, 0x76bf, 0xd270, 0x9f32, 0x4edd, 0x4f94, 0x1, 0x0);
        gbc.writeMem(0x41a5, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x76bf);
        EXPECT(gbc.pc(), 0x41a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 01BA
        gbc.setState(0x3cd9, 0xb0e6, 0x9c60, 0x6327, 0xc85d, 0x5c25, 0x0, 0x0);
        gbc.writeMem(0x3cd9, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xb0e6);
        EXPECT(gbc.pc(), 0x3cdb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 01BB
        gbc.setState(0xdc73, 0x27ac, 0xa440, 0x1b2a, 0xef0e, 0x9d69, 0x1, 0x0);
        gbc.writeMem(0xdc73, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x27ac);
        EXPECT(gbc.pc(), 0xdc75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc73), 0xcb);
        EXPECT(gbc.readMem(0xdc74), 0xbf);
        // CB BF 01BC
        gbc.setState(0x605f, 0xd57, 0x17f0, 0xbb9a, 0xdbaa, 0x65ac, 0x1, 0x0);
        gbc.writeMem(0x605f, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xd57);
        EXPECT(gbc.pc(), 0x6061);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 01BD
        gbc.setState(0xc516, 0x264e, 0x9990, 0x2701, 0x44c9, 0xa7fb, 0x1, 0x0);
        gbc.writeMem(0xc516, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x264e);
        EXPECT(gbc.pc(), 0xc518);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc516), 0xcb);
        EXPECT(gbc.readMem(0xc517), 0xbf);
        // CB BF 01BE
        gbc.setState(0xb1b6, 0xa0d2, 0x9490, 0x962c, 0x4c02, 0xbef1, 0x0, 0x0);
        gbc.writeMem(0xb1b6, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xa0d2);
        EXPECT(gbc.pc(), 0xb1b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1b6), 0xcb);
        EXPECT(gbc.readMem(0xb1b7), 0xbf);
        // CB BF 01BF
        gbc.setState(0xd4cd, 0xe0be, 0xdff0, 0x3cb2, 0x5122, 0x9761, 0x0, 0x0);
        gbc.writeMem(0xd4cd, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xe0be);
        EXPECT(gbc.pc(), 0xd4cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4cd), 0xcb);
        EXPECT(gbc.readMem(0xd4ce), 0xbf);
        // CB BF 01C0
        gbc.setState(0x1bc0, 0xf451, 0x37a0, 0x561f, 0xa52c, 0x6e5, 0x1, 0x0);
        gbc.writeMem(0x1bc0, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xf451);
        EXPECT(gbc.pc(), 0x1bc2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 01C1
        gbc.setState(0x48a7, 0x90dc, 0x7fa0, 0xab20, 0xa56f, 0x91d4, 0x1, 0x0);
        gbc.writeMem(0x48a7, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x90dc);
        EXPECT(gbc.pc(), 0x48a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 01C2
        gbc.setState(0x882b, 0x5d6b, 0x6560, 0xc025, 0x28bf, 0x8394, 0x0, 0x1);
        gbc.writeMem(0x882b, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x5d6b);
        EXPECT(gbc.pc(), 0x882d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x882b), 0xcb);
        EXPECT(gbc.readMem(0x882c), 0xbf);
        // CB BF 01C3
        gbc.setState(0x61d, 0xc840, 0xee20, 0xad27, 0xebc8, 0xa238, 0x0, 0x0);
        gbc.writeMem(0x61d, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xc840);
        EXPECT(gbc.pc(), 0x61f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 01C4
        gbc.setState(0x3415, 0xdde7, 0x790, 0xcb8b, 0x3fb7, 0xfb66, 0x0, 0x1);
        gbc.writeMem(0x3415, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xdde7);
        EXPECT(gbc.pc(), 0x3417);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 01C5
        gbc.setState(0x2587, 0x52c8, 0xd240, 0xd4f5, 0x57b, 0x202b, 0x1, 0x1);
        gbc.writeMem(0x2587, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x52c8);
        EXPECT(gbc.pc(), 0x2589);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 01C6
        gbc.setState(0x41ef, 0x2295, 0x2ff0, 0x2486, 0xd72e, 0xbcf6, 0x1, 0x1);
        gbc.writeMem(0x41ef, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x2295);
        EXPECT(gbc.pc(), 0x41f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 01C7
        gbc.setState(0x3543, 0xc98e, 0x55f0, 0xf9d1, 0xab10, 0x5b59, 0x1, 0x1);
        gbc.writeMem(0x3543, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xc98e);
        EXPECT(gbc.pc(), 0x3545);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 01C8
        gbc.setState(0xbff, 0xe80a, 0x3e80, 0xc9bc, 0x870d, 0x17a5, 0x1, 0x1);
        gbc.writeMem(0xbff, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xe80a);
        EXPECT(gbc.pc(), 0xc01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 01C9
        gbc.setState(0x4597, 0x8605, 0xd880, 0x402b, 0xd328, 0x84dc, 0x0, 0x0);
        gbc.writeMem(0x4597, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x8605);
        EXPECT(gbc.pc(), 0x4599);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 01CA
        gbc.setState(0x7c06, 0x49fa, 0x2010, 0x8158, 0xe69d, 0x2faf, 0x1, 0x1);
        gbc.writeMem(0x7c06, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x49fa);
        EXPECT(gbc.pc(), 0x7c08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 01CB
        gbc.setState(0x6b31, 0x6aa3, 0x8050, 0xf0e5, 0x12d7, 0xa8c6, 0x0, 0x0);
        gbc.writeMem(0x6b31, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x6aa3);
        EXPECT(gbc.pc(), 0x6b33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 01CC
        gbc.setState(0x8267, 0xe861, 0x4530, 0xf6a5, 0xc176, 0xc515, 0x1, 0x1);
        gbc.writeMem(0x8267, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xe861);
        EXPECT(gbc.pc(), 0x8269);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8267), 0xcb);
        EXPECT(gbc.readMem(0x8268), 0xbf);
        // CB BF 01CD
        gbc.setState(0x8643, 0xd518, 0x9c80, 0xaa5a, 0x624c, 0x5543, 0x0, 0x0);
        gbc.writeMem(0x8643, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xd518);
        EXPECT(gbc.pc(), 0x8645);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8643), 0xcb);
        EXPECT(gbc.readMem(0x8644), 0xbf);
        // CB BF 01CE
        gbc.setState(0x482, 0x84b0, 0x5a80, 0xc310, 0xc2f2, 0xd39e, 0x0, 0x1);
        gbc.writeMem(0x482, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x84b0);
        EXPECT(gbc.pc(), 0x484);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 01CF
        gbc.setState(0xb131, 0xbb43, 0x7a60, 0x63d8, 0x7e84, 0xb92a, 0x1, 0x1);
        gbc.writeMem(0xb131, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xbb43);
        EXPECT(gbc.pc(), 0xb133);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb131), 0xcb);
        EXPECT(gbc.readMem(0xb132), 0xbf);
        // CB BF 01D0
        gbc.setState(0x4f65, 0x9a58, 0x54f0, 0xdb59, 0xa8a6, 0xb0e4, 0x0, 0x1);
        gbc.writeMem(0x4f65, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x9a58);
        EXPECT(gbc.pc(), 0x4f67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 01D1
        gbc.setState(0x199d, 0xc5d2, 0x9100, 0xd53b, 0xe757, 0x3dff, 0x1, 0x0);
        gbc.writeMem(0x199d, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xc5d2);
        EXPECT(gbc.pc(), 0x199f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 01D2
        gbc.setState(0x55fa, 0xbccc, 0xb270, 0x7f10, 0x8c69, 0x354f, 0x0, 0x1);
        gbc.writeMem(0x55fa, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xbccc);
        EXPECT(gbc.pc(), 0x55fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 01D3
        gbc.setState(0xadbe, 0x51e0, 0xc0d0, 0xd43f, 0xb432, 0x720, 0x1, 0x1);
        gbc.writeMem(0xadbe, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x51e0);
        EXPECT(gbc.pc(), 0xadc0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadbe), 0xcb);
        EXPECT(gbc.readMem(0xadbf), 0xbf);
        // CB BF 01D4
        gbc.setState(0x2632, 0xea32, 0xb780, 0xb030, 0x611c, 0x20f1, 0x0, 0x1);
        gbc.writeMem(0x2632, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xea32);
        EXPECT(gbc.pc(), 0x2634);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 01D5
        gbc.setState(0xd084, 0x109e, 0xefe0, 0xa2f8, 0xe3d1, 0x6f17, 0x1, 0x1);
        gbc.writeMem(0xd084, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x109e);
        EXPECT(gbc.pc(), 0xd086);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd084), 0xcb);
        EXPECT(gbc.readMem(0xd085), 0xbf);
        // CB BF 01D6
        gbc.setState(0xaa72, 0x30fe, 0xe5e0, 0x7269, 0xcea9, 0xc191, 0x0, 0x0);
        gbc.writeMem(0xaa72, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x30fe);
        EXPECT(gbc.pc(), 0xaa74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa72), 0xcb);
        EXPECT(gbc.readMem(0xaa73), 0xbf);
        // CB BF 01D7
        gbc.setState(0x7430, 0x9569, 0x820, 0xd9f4, 0x9876, 0xd32f, 0x0, 0x0);
        gbc.writeMem(0x7430, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x9569);
        EXPECT(gbc.pc(), 0x7432);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 01D8
        gbc.setState(0x18eb, 0xab8f, 0x3100, 0xc49f, 0x95ae, 0xab5f, 0x1, 0x1);
        gbc.writeMem(0x18eb, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xab8f);
        EXPECT(gbc.pc(), 0x18ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 01D9
        gbc.setState(0x525, 0x6221, 0x5fb0, 0xb3ae, 0xbe39, 0x8eec, 0x1, 0x1);
        gbc.writeMem(0x525, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x6221);
        EXPECT(gbc.pc(), 0x527);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 01DA
        gbc.setState(0xcdb9, 0x9ee0, 0xbaf0, 0xf09c, 0x4961, 0x3efa, 0x1, 0x0);
        gbc.writeMem(0xcdb9, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x9ee0);
        EXPECT(gbc.pc(), 0xcdbb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcdb9), 0xcb);
        EXPECT(gbc.readMem(0xcdba), 0xbf);
        // CB BF 01DB
        gbc.setState(0x1278, 0xed51, 0x6e60, 0x445a, 0x3e10, 0xc693, 0x1, 0x0);
        gbc.writeMem(0x1278, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xed51);
        EXPECT(gbc.pc(), 0x127a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 01DC
        gbc.setState(0x8c55, 0x1d83, 0x99d0, 0x6754, 0x8042, 0x2d33, 0x1, 0x1);
        gbc.writeMem(0x8c55, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x1d83);
        EXPECT(gbc.pc(), 0x8c57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c55), 0xcb);
        EXPECT(gbc.readMem(0x8c56), 0xbf);
        // CB BF 01DD
        gbc.setState(0x2e4f, 0xf6b8, 0x9a50, 0x55d3, 0xc484, 0x301d, 0x1, 0x0);
        gbc.writeMem(0x2e4f, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xf6b8);
        EXPECT(gbc.pc(), 0x2e51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 01DE
        gbc.setState(0x9c99, 0x9fc3, 0xb1a0, 0x645d, 0x3cd3, 0xd26f, 0x1, 0x0);
        gbc.writeMem(0x9c99, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x9fc3);
        EXPECT(gbc.pc(), 0x9c9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c99), 0xcb);
        EXPECT(gbc.readMem(0x9c9a), 0xbf);
        // CB BF 01DF
        gbc.setState(0x19b5, 0x7e28, 0x2130, 0xfbb8, 0x15bb, 0xec9f, 0x0, 0x1);
        gbc.writeMem(0x19b5, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x7e28);
        EXPECT(gbc.pc(), 0x19b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 01E0
        gbc.setState(0x27eb, 0xbe24, 0xdf30, 0xa58d, 0x323f, 0x1632, 0x1, 0x0);
        gbc.writeMem(0x27eb, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xbe24);
        EXPECT(gbc.pc(), 0x27ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 01E1
        gbc.setState(0xa9bb, 0x52b8, 0xa8e0, 0x97e7, 0x50e6, 0xba29, 0x0, 0x1);
        gbc.writeMem(0xa9bb, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x52b8);
        EXPECT(gbc.pc(), 0xa9bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9bb), 0xcb);
        EXPECT(gbc.readMem(0xa9bc), 0xbf);
        // CB BF 01E2
        gbc.setState(0xc897, 0x2e8a, 0x78f0, 0x69db, 0x50fe, 0x6327, 0x0, 0x1);
        gbc.writeMem(0xc897, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x2e8a);
        EXPECT(gbc.pc(), 0xc899);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc897), 0xcb);
        EXPECT(gbc.readMem(0xc898), 0xbf);
        // CB BF 01E3
        gbc.setState(0x9cf0, 0x6f6, 0x1270, 0x11a3, 0xdb4d, 0x6f28, 0x1, 0x0);
        gbc.writeMem(0x9cf0, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x6f6);
        EXPECT(gbc.pc(), 0x9cf2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cf0), 0xcb);
        EXPECT(gbc.readMem(0x9cf1), 0xbf);
        // CB BF 01E4
        gbc.setState(0x671e, 0x2e68, 0x9110, 0x3c31, 0xa6bc, 0x3ee5, 0x0, 0x0);
        gbc.writeMem(0x671e, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x2e68);
        EXPECT(gbc.pc(), 0x6720);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 01E6
        gbc.setState(0x441d, 0x7a1c, 0xf390, 0x800d, 0x7f0, 0x115c, 0x1, 0x1);
        gbc.writeMem(0x441d, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x7a1c);
        EXPECT(gbc.pc(), 0x441f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 01E8
        gbc.setState(0xe183, 0x542b, 0xd140, 0x5417, 0xefb9, 0xc764, 0x1, 0x0);
        gbc.writeMem(0xe183, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x542b);
        EXPECT(gbc.pc(), 0xe185);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe183), 0xcb);
        EXPECT(gbc.readMem(0xe184), 0xbf);
        // CB BF 01E9
        gbc.setState(0xb84b, 0x593, 0xc70, 0xa06e, 0xa9e8, 0x6639, 0x1, 0x0);
        gbc.writeMem(0xb84b, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x593);
        EXPECT(gbc.pc(), 0xb84d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb84b), 0xcb);
        EXPECT(gbc.readMem(0xb84c), 0xbf);
        // CB BF 01EA
        gbc.setState(0x8b64, 0xf077, 0xb280, 0xaa5c, 0x1911, 0x3a18, 0x0, 0x1);
        gbc.writeMem(0x8b64, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xf077);
        EXPECT(gbc.pc(), 0x8b66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b64), 0xcb);
        EXPECT(gbc.readMem(0x8b65), 0xbf);
        // CB BF 01EB
        gbc.setState(0xed49, 0xb6c6, 0x2130, 0x1a6b, 0xefed, 0x6893, 0x0, 0x0);
        gbc.writeMem(0xed49, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xb6c6);
        EXPECT(gbc.pc(), 0xed4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed49), 0xcb);
        EXPECT(gbc.readMem(0xed4a), 0xbf);
        // CB BF 01EC
        gbc.setState(0x8b05, 0xe436, 0xbfd0, 0xd5d2, 0x8217, 0xd4a2, 0x0, 0x1);
        gbc.writeMem(0x8b05, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xe436);
        EXPECT(gbc.pc(), 0x8b07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b05), 0xcb);
        EXPECT(gbc.readMem(0x8b06), 0xbf);
        // CB BF 01ED
        gbc.setState(0x32e6, 0x3364, 0xbf00, 0x5de2, 0x2834, 0x8173, 0x1, 0x0);
        gbc.writeMem(0x32e6, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x3364);
        EXPECT(gbc.pc(), 0x32e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 01EE
        gbc.setState(0x1aa7, 0x484b, 0x2650, 0xfd02, 0x9fe4, 0xa966, 0x1, 0x1);
        gbc.writeMem(0x1aa7, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x484b);
        EXPECT(gbc.pc(), 0x1aa9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 01EF
        gbc.setState(0xb274, 0x3c4d, 0x1850, 0xc35d, 0xc7c3, 0x1c3, 0x1, 0x0);
        gbc.writeMem(0xb274, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x3c4d);
        EXPECT(gbc.pc(), 0xb276);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb274), 0xcb);
        EXPECT(gbc.readMem(0xb275), 0xbf);
        // CB BF 01F0
        gbc.setState(0x8ea6, 0xd821, 0x3b10, 0x7e3c, 0xb72e, 0xca19, 0x1, 0x0);
        gbc.writeMem(0x8ea6, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xd821);
        EXPECT(gbc.pc(), 0x8ea8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ea6), 0xcb);
        EXPECT(gbc.readMem(0x8ea7), 0xbf);
        // CB BF 01F1
        gbc.setState(0x2695, 0x2695, 0x4cf0, 0xa885, 0x657e, 0x8a5d, 0x1, 0x0);
        gbc.writeMem(0x2695, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x2695);
        EXPECT(gbc.pc(), 0x2697);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 01F2
        gbc.setState(0x6c00, 0xa554, 0x4800, 0x144b, 0x9713, 0x4250, 0x1, 0x0);
        gbc.writeMem(0x6c00, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xa554);
        EXPECT(gbc.pc(), 0x6c02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 01F3
        gbc.setState(0x549e, 0x55c2, 0x45a0, 0xa4dc, 0x2c73, 0xd8c2, 0x1, 0x1);
        gbc.writeMem(0x549e, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x55c2);
        EXPECT(gbc.pc(), 0x54a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 01F4
        gbc.setState(0x6ab8, 0x3e5, 0x5840, 0xa01d, 0xc382, 0x7599, 0x0, 0x1);
        gbc.writeMem(0x6ab8, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x3e5);
        EXPECT(gbc.pc(), 0x6aba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 01F5
        gbc.setState(0x3f52, 0x5ad0, 0x6970, 0x595, 0x6006, 0xb3eb, 0x1, 0x0);
        gbc.writeMem(0x3f52, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x5ad0);
        EXPECT(gbc.pc(), 0x3f54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 01F6
        gbc.setState(0xd948, 0x6a4f, 0x88e0, 0xc6a, 0x5050, 0x123d, 0x1, 0x0);
        gbc.writeMem(0xd948, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x6a4f);
        EXPECT(gbc.pc(), 0xd94a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd948), 0xcb);
        EXPECT(gbc.readMem(0xd949), 0xbf);
        // CB BF 01F7
        gbc.setState(0x1392, 0xdd89, 0xc0e0, 0xef1c, 0x3fa9, 0xda0f, 0x0, 0x1);
        gbc.writeMem(0x1392, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xdd89);
        EXPECT(gbc.pc(), 0x1394);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 01F8
        gbc.setState(0xba8e, 0x4a6c, 0x3a00, 0x34fa, 0x3d9d, 0xd16d, 0x1, 0x1);
        gbc.writeMem(0xba8e, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x4a6c);
        EXPECT(gbc.pc(), 0xba90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba8e), 0xcb);
        EXPECT(gbc.readMem(0xba8f), 0xbf);
        // CB BF 01F9
        gbc.setState(0x13b5, 0x329e, 0xfa20, 0x3761, 0x46c3, 0x3652, 0x0, 0x1);
        gbc.writeMem(0x13b5, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x329e);
        EXPECT(gbc.pc(), 0x13b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 01FA
        gbc.setState(0x63fa, 0xbb42, 0x7ec0, 0xc58e, 0xcf09, 0x30ea, 0x1, 0x1);
        gbc.writeMem(0x63fa, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xbb42);
        EXPECT(gbc.pc(), 0x63fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 01FB
        gbc.setState(0x277a, 0xf8d5, 0xde90, 0xf224, 0x9a8e, 0x1ede, 0x1, 0x0);
        gbc.writeMem(0x277a, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xf8d5);
        EXPECT(gbc.pc(), 0x277c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 01FC
        gbc.setState(0x20ea, 0xe176, 0xf9c0, 0x523b, 0xba88, 0x8903, 0x0, 0x0);
        gbc.writeMem(0x20ea, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xe176);
        EXPECT(gbc.pc(), 0x20ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 01FD
        gbc.setState(0x2e0b, 0x8d18, 0x1220, 0x5a74, 0x7025, 0xfd7f, 0x1, 0x1);
        gbc.writeMem(0x2e0b, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x8d18);
        EXPECT(gbc.pc(), 0x2e0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 01FE
        gbc.setState(0x8742, 0xe175, 0x1570, 0xe74b, 0xca75, 0x86e5, 0x0, 0x0);
        gbc.writeMem(0x8742, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xe175);
        EXPECT(gbc.pc(), 0x8744);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8742), 0xcb);
        EXPECT(gbc.readMem(0x8743), 0xbf);
        // CB BF 01FF
        gbc.setState(0xee9c, 0x7f02, 0x6f50, 0xc13, 0x8327, 0xd25b, 0x0, 0x1);
        gbc.writeMem(0xee9c, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x7f02);
        EXPECT(gbc.pc(), 0xee9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee9c), 0xcb);
        EXPECT(gbc.readMem(0xee9d), 0xbf);
        // CB BF 0200
        gbc.setState(0x827b, 0x1c60, 0x6a40, 0xcc32, 0x90b1, 0xbef0, 0x1, 0x0);
        gbc.writeMem(0x827b, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x1c60);
        EXPECT(gbc.pc(), 0x827d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x827b), 0xcb);
        EXPECT(gbc.readMem(0x827c), 0xbf);
        // CB BF 0201
        gbc.setState(0x189b, 0x2e02, 0x9950, 0x8a57, 0x1414, 0x2d6d, 0x0, 0x1);
        gbc.writeMem(0x189b, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x2e02);
        EXPECT(gbc.pc(), 0x189d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0202
        gbc.setState(0xb93a, 0x7124, 0x8090, 0x888b, 0xae1, 0x9b49, 0x0, 0x1);
        gbc.writeMem(0xb93a, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x7124);
        EXPECT(gbc.pc(), 0xb93c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb93a), 0xcb);
        EXPECT(gbc.readMem(0xb93b), 0xbf);
        // CB BF 0203
        gbc.setState(0x81cb, 0x7395, 0xf620, 0x7575, 0xc864, 0xbf8b, 0x0, 0x0);
        gbc.writeMem(0x81cb, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x7395);
        EXPECT(gbc.pc(), 0x81cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81cb), 0xcb);
        EXPECT(gbc.readMem(0x81cc), 0xbf);
        // CB BF 0204
        gbc.setState(0xb45e, 0xb248, 0x56d0, 0x8011, 0xb8c, 0x5dd4, 0x0, 0x1);
        gbc.writeMem(0xb45e, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xb248);
        EXPECT(gbc.pc(), 0xb460);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb45e), 0xcb);
        EXPECT(gbc.readMem(0xb45f), 0xbf);
        // CB BF 0205
        gbc.setState(0xa8c8, 0xed01, 0xf600, 0x549c, 0x1b6, 0x54fd, 0x1, 0x0);
        gbc.writeMem(0xa8c8, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xed01);
        EXPECT(gbc.pc(), 0xa8ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8c8), 0xcb);
        EXPECT(gbc.readMem(0xa8c9), 0xbf);
        // CB BF 0206
        gbc.setState(0x7df5, 0x4c64, 0x53f0, 0x7355, 0xc941, 0xebe6, 0x1, 0x0);
        gbc.writeMem(0x7df5, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x4c64);
        EXPECT(gbc.pc(), 0x7df7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0207
        gbc.setState(0xc83c, 0x559f, 0xf800, 0x53c8, 0x4d4a, 0x3a30, 0x0, 0x0);
        gbc.writeMem(0xc83c, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x559f);
        EXPECT(gbc.pc(), 0xc83e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc83c), 0xcb);
        EXPECT(gbc.readMem(0xc83d), 0xbf);
        // CB BF 0208
        gbc.setState(0x975e, 0x300d, 0x3d40, 0xc944, 0x953e, 0xbd0a, 0x0, 0x0);
        gbc.writeMem(0x975e, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x300d);
        EXPECT(gbc.pc(), 0x9760);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x975e), 0xcb);
        EXPECT(gbc.readMem(0x975f), 0xbf);
        // CB BF 0209
        gbc.setState(0xc090, 0xc87b, 0x32e0, 0xefc8, 0x46f1, 0xf030, 0x0, 0x1);
        gbc.writeMem(0xc090, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xc87b);
        EXPECT(gbc.pc(), 0xc092);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc090), 0xcb);
        EXPECT(gbc.readMem(0xc091), 0xbf);
        // CB BF 020A
        gbc.setState(0xaffd, 0x3ff0, 0xbb40, 0xd321, 0xf2f1, 0x1967, 0x1, 0x1);
        gbc.writeMem(0xaffd, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x3ff0);
        EXPECT(gbc.pc(), 0xafff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaffd), 0xcb);
        EXPECT(gbc.readMem(0xaffe), 0xbf);
        // CB BF 020B
        gbc.setState(0x1805, 0xc7ac, 0x8bb0, 0xa422, 0x4cd2, 0x1673, 0x0, 0x0);
        gbc.writeMem(0x1805, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xc7ac);
        EXPECT(gbc.pc(), 0x1807);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 020C
        gbc.setState(0xdbf9, 0x5105, 0xd5f0, 0x8483, 0xb82d, 0x4537, 0x0, 0x0);
        gbc.writeMem(0xdbf9, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x5105);
        EXPECT(gbc.pc(), 0xdbfb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbf9), 0xcb);
        EXPECT(gbc.readMem(0xdbfa), 0xbf);
        // CB BF 020D
        gbc.setState(0x5b72, 0x547e, 0x14a0, 0xce48, 0xe856, 0x7091, 0x1, 0x0);
        gbc.writeMem(0x5b72, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x547e);
        EXPECT(gbc.pc(), 0x5b74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 020E
        gbc.setState(0xb8fe, 0x5739, 0x30e0, 0x9cd, 0x8245, 0x3f23, 0x1, 0x1);
        gbc.writeMem(0xb8fe, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x5739);
        EXPECT(gbc.pc(), 0xb900);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8fe), 0xcb);
        EXPECT(gbc.readMem(0xb8ff), 0xbf);
        // CB BF 020F
        gbc.setState(0x38ca, 0x485f, 0x8df0, 0x8737, 0xc0f4, 0xa1f3, 0x0, 0x1);
        gbc.writeMem(0x38ca, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x485f);
        EXPECT(gbc.pc(), 0x38cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0210
        gbc.setState(0x2070, 0x313, 0xc7c0, 0xcb9b, 0x34ac, 0xbf3c, 0x1, 0x1);
        gbc.writeMem(0x2070, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x313);
        EXPECT(gbc.pc(), 0x2072);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0211
        gbc.setState(0xc066, 0x4f16, 0x7e30, 0x42c2, 0x86a4, 0x910a, 0x0, 0x0);
        gbc.writeMem(0xc066, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x4f16);
        EXPECT(gbc.pc(), 0xc068);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc066), 0xcb);
        EXPECT(gbc.readMem(0xc067), 0xbf);
        // CB BF 0212
        gbc.setState(0x7f4b, 0xb3fd, 0x1cd0, 0xd855, 0x2ece, 0xe5cf, 0x1, 0x0);
        gbc.writeMem(0x7f4b, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xb3fd);
        EXPECT(gbc.pc(), 0x7f4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0213
        gbc.setState(0x9e6a, 0x365d, 0x460, 0xc934, 0xac9b, 0xd1a5, 0x0, 0x1);
        gbc.writeMem(0x9e6a, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x365d);
        EXPECT(gbc.pc(), 0x9e6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e6a), 0xcb);
        EXPECT(gbc.readMem(0x9e6b), 0xbf);
        // CB BF 0214
        gbc.setState(0xca21, 0x7ca1, 0xc160, 0x18d7, 0x54, 0xc43b, 0x1, 0x1);
        gbc.writeMem(0xca21, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x7ca1);
        EXPECT(gbc.pc(), 0xca23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca21), 0xcb);
        EXPECT(gbc.readMem(0xca22), 0xbf);
        // CB BF 0215
        gbc.setState(0x24b, 0x1e03, 0xc9f0, 0xd732, 0xda16, 0xed2, 0x1, 0x0);
        gbc.writeMem(0x24b, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x1e03);
        EXPECT(gbc.pc(), 0x24d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0216
        gbc.setState(0xc763, 0x986c, 0xa700, 0x9607, 0xa2bf, 0x168e, 0x1, 0x0);
        gbc.writeMem(0xc763, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x986c);
        EXPECT(gbc.pc(), 0xc765);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc763), 0xcb);
        EXPECT(gbc.readMem(0xc764), 0xbf);
        // CB BF 0217
        gbc.setState(0x40a6, 0x888f, 0xb430, 0x9c03, 0xd9eb, 0x5f87, 0x0, 0x0);
        gbc.writeMem(0x40a6, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x888f);
        EXPECT(gbc.pc(), 0x40a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0218
        gbc.setState(0x1de3, 0x186b, 0x6070, 0x6e35, 0x8fb0, 0x7a69, 0x1, 0x0);
        gbc.writeMem(0x1de3, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x186b);
        EXPECT(gbc.pc(), 0x1de5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0219
        gbc.setState(0xd8bf, 0x2a66, 0x9800, 0xe6c3, 0xf14f, 0x405, 0x0, 0x1);
        gbc.writeMem(0xd8bf, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x2a66);
        EXPECT(gbc.pc(), 0xd8c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8bf), 0xcb);
        EXPECT(gbc.readMem(0xd8c0), 0xbf);
        // CB BF 021A
        gbc.setState(0xab57, 0x113e, 0x2e0, 0xfde4, 0x7be1, 0x8346, 0x1, 0x1);
        gbc.writeMem(0xab57, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x113e);
        EXPECT(gbc.pc(), 0xab59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab57), 0xcb);
        EXPECT(gbc.readMem(0xab58), 0xbf);
        // CB BF 021B
        gbc.setState(0xd3a, 0xff5d, 0x44a0, 0xa69b, 0x6623, 0x333a, 0x1, 0x1);
        gbc.writeMem(0xd3a, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xff5d);
        EXPECT(gbc.pc(), 0xd3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 021C
        gbc.setState(0xe9cf, 0x733c, 0xc20, 0x8fd0, 0x5f61, 0xa7e7, 0x1, 0x0);
        gbc.writeMem(0xe9cf, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x733c);
        EXPECT(gbc.pc(), 0xe9d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9cf), 0xcb);
        EXPECT(gbc.readMem(0xe9d0), 0xbf);
        // CB BF 021D
        gbc.setState(0xe9a3, 0x17a7, 0x5b80, 0x1a18, 0xc0a0, 0xd9b1, 0x0, 0x0);
        gbc.writeMem(0xe9a3, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x17a7);
        EXPECT(gbc.pc(), 0xe9a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9a3), 0xcb);
        EXPECT(gbc.readMem(0xe9a4), 0xbf);
        // CB BF 021E
        gbc.setState(0x8def, 0xf70e, 0x4b10, 0xbe47, 0x35f4, 0xd5df, 0x1, 0x0);
        gbc.writeMem(0x8def, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xf70e);
        EXPECT(gbc.pc(), 0x8df1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8def), 0xcb);
        EXPECT(gbc.readMem(0x8df0), 0xbf);
        // CB BF 021F
        gbc.setState(0xea8e, 0xa2f1, 0xa920, 0x627e, 0xb86, 0x454e, 0x0, 0x0);
        gbc.writeMem(0xea8e, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xa2f1);
        EXPECT(gbc.pc(), 0xea90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea8e), 0xcb);
        EXPECT(gbc.readMem(0xea8f), 0xbf);
        // CB BF 0220
        gbc.setState(0x9a72, 0x882b, 0xca0, 0x26e7, 0x74d0, 0x1e27, 0x1, 0x1);
        gbc.writeMem(0x9a72, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x882b);
        EXPECT(gbc.pc(), 0x9a74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a72), 0xcb);
        EXPECT(gbc.readMem(0x9a73), 0xbf);
        // CB BF 0221
        gbc.setState(0x278c, 0xf9b3, 0x9910, 0xd8b, 0x4da, 0xf0b5, 0x1, 0x0);
        gbc.writeMem(0x278c, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xf9b3);
        EXPECT(gbc.pc(), 0x278e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0222
        gbc.setState(0x273, 0x85e, 0x70, 0xb94a, 0x2435, 0xe419, 0x0, 0x0);
        gbc.writeMem(0x273, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x85e);
        EXPECT(gbc.pc(), 0x275);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0223
        gbc.setState(0x5864, 0xa279, 0x9480, 0x9dfa, 0x3390, 0x68a2, 0x1, 0x0);
        gbc.writeMem(0x5864, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xa279);
        EXPECT(gbc.pc(), 0x5866);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0224
        gbc.setState(0x3a13, 0xf8b3, 0xd270, 0x91dd, 0xc55c, 0xbb79, 0x0, 0x1);
        gbc.writeMem(0x3a13, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xf8b3);
        EXPECT(gbc.pc(), 0x3a15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0225
        gbc.setState(0xa5be, 0xd52e, 0xce0, 0x15ae, 0x9e5f, 0x7858, 0x0, 0x0);
        gbc.writeMem(0xa5be, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xd52e);
        EXPECT(gbc.pc(), 0xa5c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5be), 0xcb);
        EXPECT(gbc.readMem(0xa5bf), 0xbf);
        // CB BF 0226
        gbc.setState(0x5850, 0x6a6, 0x85f0, 0xcbc0, 0xe8d8, 0xb082, 0x1, 0x0);
        gbc.writeMem(0x5850, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x6a6);
        EXPECT(gbc.pc(), 0x5852);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0227
        gbc.setState(0x6ca3, 0x207d, 0x1230, 0xfa37, 0xbf96, 0x22e0, 0x0, 0x0);
        gbc.writeMem(0x6ca3, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x207d);
        EXPECT(gbc.pc(), 0x6ca5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0228
        gbc.setState(0xc01d, 0xf250, 0xd6d0, 0x70fb, 0x2c2d, 0x2274, 0x0, 0x1);
        gbc.writeMem(0xc01d, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xf250);
        EXPECT(gbc.pc(), 0xc01f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc01d), 0xcb);
        EXPECT(gbc.readMem(0xc01e), 0xbf);
        // CB BF 0229
        gbc.setState(0xe8d2, 0x8bc4, 0xc510, 0x56ab, 0x81d1, 0x9637, 0x1, 0x0);
        gbc.writeMem(0xe8d2, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x8bc4);
        EXPECT(gbc.pc(), 0xe8d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8d2), 0xcb);
        EXPECT(gbc.readMem(0xe8d3), 0xbf);
        // CB BF 022A
        gbc.setState(0x1de6, 0xfba, 0x5240, 0x33d9, 0x6c08, 0xfbcb, 0x0, 0x1);
        gbc.writeMem(0x1de6, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xfba);
        EXPECT(gbc.pc(), 0x1de8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 022B
        gbc.setState(0x253c, 0xf2ee, 0xa310, 0x983b, 0xd0f8, 0xa94, 0x1, 0x1);
        gbc.writeMem(0x253c, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xf2ee);
        EXPECT(gbc.pc(), 0x253e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 022C
        gbc.setState(0xeded, 0x5cce, 0x76c0, 0x381c, 0xb798, 0xdb69, 0x1, 0x1);
        gbc.writeMem(0xeded, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x5cce);
        EXPECT(gbc.pc(), 0xedef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeded), 0xcb);
        EXPECT(gbc.readMem(0xedee), 0xbf);
        // CB BF 022D
        gbc.setState(0x2f02, 0x1bc6, 0xe050, 0x2f84, 0xc2f6, 0x73f9, 0x1, 0x1);
        gbc.writeMem(0x2f02, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x1bc6);
        EXPECT(gbc.pc(), 0x2f04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 022E
        gbc.setState(0x531f, 0xd33f, 0x7790, 0xad4, 0xd19d, 0x86da, 0x1, 0x0);
        gbc.writeMem(0x531f, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xd33f);
        EXPECT(gbc.pc(), 0x5321);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 022F
        gbc.setState(0x6992, 0x7528, 0x6340, 0xd462, 0xfefe, 0xe50a, 0x0, 0x1);
        gbc.writeMem(0x6992, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x7528);
        EXPECT(gbc.pc(), 0x6994);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0230
        gbc.setState(0xa481, 0xf4bf, 0xe920, 0x4800, 0x8464, 0xb488, 0x1, 0x1);
        gbc.writeMem(0xa481, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xf4bf);
        EXPECT(gbc.pc(), 0xa483);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa481), 0xcb);
        EXPECT(gbc.readMem(0xa482), 0xbf);
        // CB BF 0231
        gbc.setState(0xb441, 0x95e, 0xb2c0, 0x82ea, 0xdf4e, 0xf131, 0x0, 0x1);
        gbc.writeMem(0xb441, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x95e);
        EXPECT(gbc.pc(), 0xb443);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb441), 0xcb);
        EXPECT(gbc.readMem(0xb442), 0xbf);
        // CB BF 0232
        gbc.setState(0xa810, 0xc500, 0x7e20, 0x2448, 0x1307, 0xb2e3, 0x1, 0x1);
        gbc.writeMem(0xa810, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xc500);
        EXPECT(gbc.pc(), 0xa812);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa810), 0xcb);
        EXPECT(gbc.readMem(0xa811), 0xbf);
        // CB BF 0233
        gbc.setState(0x2281, 0x3dbe, 0x49e0, 0x3c7e, 0xd75, 0xaa09, 0x1, 0x0);
        gbc.writeMem(0x2281, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x3dbe);
        EXPECT(gbc.pc(), 0x2283);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0234
        gbc.setState(0x4c4d, 0x7b29, 0xf640, 0xb185, 0xf157, 0x3b7a, 0x0, 0x0);
        gbc.writeMem(0x4c4d, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x7b29);
        EXPECT(gbc.pc(), 0x4c4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0235
        gbc.setState(0x631, 0x80ae, 0x53d0, 0xcf49, 0x76e5, 0x343e, 0x1, 0x1);
        gbc.writeMem(0x631, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x80ae);
        EXPECT(gbc.pc(), 0x633);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0236
        gbc.setState(0x9f13, 0xd3eb, 0x5de0, 0xc291, 0x32d7, 0x6f98, 0x0, 0x1);
        gbc.writeMem(0x9f13, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xd3eb);
        EXPECT(gbc.pc(), 0x9f15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f13), 0xcb);
        EXPECT(gbc.readMem(0x9f14), 0xbf);
        // CB BF 0237
        gbc.setState(0xce91, 0x6630, 0xcb00, 0xb674, 0x7913, 0x3038, 0x0, 0x0);
        gbc.writeMem(0xce91, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x6630);
        EXPECT(gbc.pc(), 0xce93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce91), 0xcb);
        EXPECT(gbc.readMem(0xce92), 0xbf);
        // CB BF 0238
        gbc.setState(0x1856, 0x7401, 0x5ab0, 0x6f0d, 0xf2bd, 0xac51, 0x0, 0x0);
        gbc.writeMem(0x1856, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x7401);
        EXPECT(gbc.pc(), 0x1858);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0239
        gbc.setState(0xc77c, 0xfe4d, 0x6cf0, 0xc40e, 0x40ba, 0xf103, 0x0, 0x1);
        gbc.writeMem(0xc77c, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xfe4d);
        EXPECT(gbc.pc(), 0xc77e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc77c), 0xcb);
        EXPECT(gbc.readMem(0xc77d), 0xbf);
        // CB BF 023A
        gbc.setState(0x483e, 0x1a05, 0xeb90, 0xaa54, 0x2b6, 0x3749, 0x1, 0x1);
        gbc.writeMem(0x483e, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x1a05);
        EXPECT(gbc.pc(), 0x4840);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 023B
        gbc.setState(0x1f1e, 0x3caa, 0x9950, 0x6017, 0x4300, 0x15c8, 0x0, 0x1);
        gbc.writeMem(0x1f1e, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x3caa);
        EXPECT(gbc.pc(), 0x1f20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 023C
        gbc.setState(0xbf01, 0xc839, 0x6870, 0xdb12, 0x9341, 0x8ee5, 0x0, 0x1);
        gbc.writeMem(0xbf01, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xc839);
        EXPECT(gbc.pc(), 0xbf03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf01), 0xcb);
        EXPECT(gbc.readMem(0xbf02), 0xbf);
        // CB BF 023D
        gbc.setState(0x5901, 0x7276, 0x23d0, 0x1dbc, 0x6c8e, 0xb0a8, 0x0, 0x0);
        gbc.writeMem(0x5901, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x7276);
        EXPECT(gbc.pc(), 0x5903);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 023E
        gbc.setState(0x703f, 0x70ad, 0x1270, 0xbaed, 0x11c1, 0x818b, 0x0, 0x0);
        gbc.writeMem(0x703f, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x70ad);
        EXPECT(gbc.pc(), 0x7041);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 023F
        gbc.setState(0x54f3, 0xbdd7, 0xf590, 0x5055, 0xce67, 0x731b, 0x1, 0x1);
        gbc.writeMem(0x54f3, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xbdd7);
        EXPECT(gbc.pc(), 0x54f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0240
        gbc.setState(0x522f, 0xcfd, 0xb960, 0x4fb9, 0xaafa, 0xf2d2, 0x1, 0x1);
        gbc.writeMem(0x522f, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xcfd);
        EXPECT(gbc.pc(), 0x5231);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0241
        gbc.setState(0x5a7a, 0x7675, 0x9c70, 0xbfe, 0x1e30, 0x7276, 0x0, 0x0);
        gbc.writeMem(0x5a7a, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x7675);
        EXPECT(gbc.pc(), 0x5a7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0242
        gbc.setState(0x9266, 0xbcf2, 0x230, 0x6dff, 0xd67a, 0xc331, 0x1, 0x1);
        gbc.writeMem(0x9266, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xbcf2);
        EXPECT(gbc.pc(), 0x9268);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9266), 0xcb);
        EXPECT(gbc.readMem(0x9267), 0xbf);
        // CB BF 0243
        gbc.setState(0x794d, 0x78d3, 0xef40, 0xdc0d, 0xb7ae, 0x5de7, 0x0, 0x0);
        gbc.writeMem(0x794d, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x78d3);
        EXPECT(gbc.pc(), 0x794f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0244
        gbc.setState(0x40d9, 0x6c4f, 0x73f0, 0xdb70, 0xdde5, 0xa590, 0x1, 0x0);
        gbc.writeMem(0x40d9, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x6c4f);
        EXPECT(gbc.pc(), 0x40db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0245
        gbc.setState(0xb1fa, 0xce8a, 0xc870, 0xc266, 0xfcce, 0xc28d, 0x1, 0x1);
        gbc.writeMem(0xb1fa, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xce8a);
        EXPECT(gbc.pc(), 0xb1fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1fa), 0xcb);
        EXPECT(gbc.readMem(0xb1fb), 0xbf);
        // CB BF 0246
        gbc.setState(0xc8ce, 0x66a2, 0x16a0, 0x5309, 0x35f5, 0x7856, 0x1, 0x0);
        gbc.writeMem(0xc8ce, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x66a2);
        EXPECT(gbc.pc(), 0xc8d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8ce), 0xcb);
        EXPECT(gbc.readMem(0xc8cf), 0xbf);
        // CB BF 0247
        gbc.setState(0xc0cd, 0x60f1, 0x8e90, 0x9d7b, 0x6ff, 0x1e90, 0x1, 0x1);
        gbc.writeMem(0xc0cd, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x60f1);
        EXPECT(gbc.pc(), 0xc0cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0cd), 0xcb);
        EXPECT(gbc.readMem(0xc0ce), 0xbf);
        // CB BF 0248
        gbc.setState(0xa458, 0xe36a, 0x3f70, 0xfebe, 0x75b3, 0x94c1, 0x1, 0x0);
        gbc.writeMem(0xa458, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xe36a);
        EXPECT(gbc.pc(), 0xa45a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa458), 0xcb);
        EXPECT(gbc.readMem(0xa459), 0xbf);
        // CB BF 0249
        gbc.setState(0xe830, 0xc5b5, 0xe350, 0xcf88, 0x6642, 0xf664, 0x1, 0x1);
        gbc.writeMem(0xe830, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xc5b5);
        EXPECT(gbc.pc(), 0xe832);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe830), 0xcb);
        EXPECT(gbc.readMem(0xe831), 0xbf);
        // CB BF 024A
        gbc.setState(0xe7ee, 0x1976, 0x500, 0x8ed2, 0xa2fc, 0x8eb8, 0x0, 0x1);
        gbc.writeMem(0xe7ee, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x1976);
        EXPECT(gbc.pc(), 0xe7f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7ee), 0xcb);
        EXPECT(gbc.readMem(0xe7ef), 0xbf);
        // CB BF 024B
        gbc.setState(0x13ce, 0xf3bb, 0x3670, 0xce16, 0x2507, 0x8dd5, 0x0, 0x1);
        gbc.writeMem(0x13ce, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xf3bb);
        EXPECT(gbc.pc(), 0x13d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 024D
        gbc.setState(0xb992, 0x990c, 0xb670, 0x3950, 0x6963, 0xecf4, 0x1, 0x1);
        gbc.writeMem(0xb992, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x990c);
        EXPECT(gbc.pc(), 0xb994);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb992), 0xcb);
        EXPECT(gbc.readMem(0xb993), 0xbf);
        // CB BF 024E
        gbc.setState(0x6637, 0x77d7, 0xeed0, 0xa62, 0x9782, 0x77d0, 0x0, 0x1);
        gbc.writeMem(0x6637, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x77d7);
        EXPECT(gbc.pc(), 0x6639);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 024F
        gbc.setState(0xdf67, 0x6d3c, 0x2840, 0xd4d1, 0x663, 0x8058, 0x1, 0x0);
        gbc.writeMem(0xdf67, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x6d3c);
        EXPECT(gbc.pc(), 0xdf69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf67), 0xcb);
        EXPECT(gbc.readMem(0xdf68), 0xbf);
        // CB BF 0250
        gbc.setState(0x6534, 0x8e84, 0x6530, 0x5c70, 0x3955, 0x38ba, 0x1, 0x0);
        gbc.writeMem(0x6534, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x8e84);
        EXPECT(gbc.pc(), 0x6536);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0251
        gbc.setState(0x82ab, 0x3a20, 0x32c0, 0xc2f2, 0xdd59, 0x12a1, 0x1, 0x0);
        gbc.writeMem(0x82ab, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x3a20);
        EXPECT(gbc.pc(), 0x82ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82ab), 0xcb);
        EXPECT(gbc.readMem(0x82ac), 0xbf);
        // CB BF 0252
        gbc.setState(0x9313, 0xb70c, 0xde40, 0xb2ef, 0xc3ec, 0xd4bb, 0x1, 0x1);
        gbc.writeMem(0x9313, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xb70c);
        EXPECT(gbc.pc(), 0x9315);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9313), 0xcb);
        EXPECT(gbc.readMem(0x9314), 0xbf);
        // CB BF 0253
        gbc.setState(0x240f, 0x9899, 0xedc0, 0xec5c, 0xc9d0, 0xca97, 0x0, 0x0);
        gbc.writeMem(0x240f, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x9899);
        EXPECT(gbc.pc(), 0x2411);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0254
        gbc.setState(0x3b5d, 0x3b4b, 0x76a0, 0xc294, 0x3c36, 0x1cc8, 0x1, 0x1);
        gbc.writeMem(0x3b5d, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x3b4b);
        EXPECT(gbc.pc(), 0x3b5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0255
        gbc.setState(0xca1d, 0xccf1, 0x8e90, 0xa1d6, 0xb16e, 0x349e, 0x1, 0x0);
        gbc.writeMem(0xca1d, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xccf1);
        EXPECT(gbc.pc(), 0xca1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca1d), 0xcb);
        EXPECT(gbc.readMem(0xca1e), 0xbf);
        // CB BF 0256
        gbc.setState(0xe342, 0xf489, 0xf9d0, 0x4e90, 0xee9a, 0x9feb, 0x1, 0x0);
        gbc.writeMem(0xe342, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xf489);
        EXPECT(gbc.pc(), 0xe344);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe342), 0xcb);
        EXPECT(gbc.readMem(0xe343), 0xbf);
        // CB BF 0257
        gbc.setState(0x8af8, 0xdf56, 0xd0c0, 0x55ea, 0x2b36, 0x9a6f, 0x0, 0x1);
        gbc.writeMem(0x8af8, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xdf56);
        EXPECT(gbc.pc(), 0x8afa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8af8), 0xcb);
        EXPECT(gbc.readMem(0x8af9), 0xbf);
        // CB BF 0258
        gbc.setState(0xbd16, 0x6231, 0xeff0, 0x478b, 0x6d51, 0x29fd, 0x1, 0x1);
        gbc.writeMem(0xbd16, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x6231);
        EXPECT(gbc.pc(), 0xbd18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd16), 0xcb);
        EXPECT(gbc.readMem(0xbd17), 0xbf);
        // CB BF 0259
        gbc.setState(0x634a, 0x322a, 0x8a10, 0x7428, 0xc36e, 0x86b8, 0x1, 0x1);
        gbc.writeMem(0x634a, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x322a);
        EXPECT(gbc.pc(), 0x634c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 025A
        gbc.setState(0x313a, 0x3cd8, 0x2650, 0xda4c, 0xc3f7, 0x2018, 0x1, 0x0);
        gbc.writeMem(0x313a, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x3cd8);
        EXPECT(gbc.pc(), 0x313c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 025B
        gbc.setState(0x84ee, 0x4c9b, 0xc8b0, 0x5aa4, 0x304a, 0x3552, 0x1, 0x0);
        gbc.writeMem(0x84ee, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x4c9b);
        EXPECT(gbc.pc(), 0x84f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84ee), 0xcb);
        EXPECT(gbc.readMem(0x84ef), 0xbf);
        // CB BF 025C
        gbc.setState(0x43e9, 0xc476, 0xb640, 0x2122, 0x9a44, 0x1a33, 0x1, 0x0);
        gbc.writeMem(0x43e9, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xc476);
        EXPECT(gbc.pc(), 0x43eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 025D
        gbc.setState(0xb88, 0xbba0, 0x3f0, 0x7388, 0xde56, 0xf2e5, 0x1, 0x0);
        gbc.writeMem(0xb88, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xbba0);
        EXPECT(gbc.pc(), 0xb8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 025E
        gbc.setState(0x19db, 0x9c0e, 0xdc50, 0xab24, 0x8a04, 0x5110, 0x1, 0x1);
        gbc.writeMem(0x19db, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x9c0e);
        EXPECT(gbc.pc(), 0x19dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 025F
        gbc.setState(0x1992, 0x304b, 0x65e0, 0xc7f2, 0x2f21, 0x77c, 0x0, 0x0);
        gbc.writeMem(0x1992, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x304b);
        EXPECT(gbc.pc(), 0x1994);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0260
        gbc.setState(0xd2bc, 0xfe41, 0xab90, 0xa7f6, 0xae24, 0xf156, 0x1, 0x0);
        gbc.writeMem(0xd2bc, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xfe41);
        EXPECT(gbc.pc(), 0xd2be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2bc), 0xcb);
        EXPECT(gbc.readMem(0xd2bd), 0xbf);
        // CB BF 0261
        gbc.setState(0xb6f1, 0xe651, 0xbd20, 0x444f, 0xa05b, 0x7a78, 0x0, 0x1);
        gbc.writeMem(0xb6f1, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xe651);
        EXPECT(gbc.pc(), 0xb6f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6f1), 0xcb);
        EXPECT(gbc.readMem(0xb6f2), 0xbf);
        // CB BF 0262
        gbc.setState(0x8de5, 0xa836, 0x4410, 0x63d4, 0x53ad, 0xa03e, 0x0, 0x1);
        gbc.writeMem(0x8de5, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xa836);
        EXPECT(gbc.pc(), 0x8de7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8de5), 0xcb);
        EXPECT(gbc.readMem(0x8de6), 0xbf);
        // CB BF 0263
        gbc.setState(0xefb, 0xd030, 0x140, 0x53c3, 0x848a, 0x74e4, 0x0, 0x1);
        gbc.writeMem(0xefb, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xd030);
        EXPECT(gbc.pc(), 0xefd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0264
        gbc.setState(0x1155, 0x5724, 0x3740, 0x40f, 0x888a, 0x2cae, 0x0, 0x0);
        gbc.writeMem(0x1155, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x5724);
        EXPECT(gbc.pc(), 0x1157);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0265
        gbc.setState(0xa11b, 0xf899, 0xdea0, 0x8c05, 0xa875, 0x9660, 0x0, 0x1);
        gbc.writeMem(0xa11b, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xf899);
        EXPECT(gbc.pc(), 0xa11d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa11b), 0xcb);
        EXPECT(gbc.readMem(0xa11c), 0xbf);
        // CB BF 0266
        gbc.setState(0xa99, 0xe896, 0x3650, 0xafdc, 0xf89f, 0x36be, 0x1, 0x0);
        gbc.writeMem(0xa99, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xe896);
        EXPECT(gbc.pc(), 0xa9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0267
        gbc.setState(0x36c2, 0x1e2c, 0xc060, 0x22e7, 0xd616, 0xa934, 0x0, 0x0);
        gbc.writeMem(0x36c2, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x1e2c);
        EXPECT(gbc.pc(), 0x36c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0268
        gbc.setState(0x723d, 0x5c26, 0x1700, 0xa42a, 0xa89e, 0x6956, 0x1, 0x0);
        gbc.writeMem(0x723d, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x5c26);
        EXPECT(gbc.pc(), 0x723f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 026A
        gbc.setState(0x6bd5, 0x7cf3, 0x2090, 0xe310, 0xdd49, 0x81ee, 0x1, 0x0);
        gbc.writeMem(0x6bd5, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x7cf3);
        EXPECT(gbc.pc(), 0x6bd7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 026B
        gbc.setState(0xc73e, 0xf5d8, 0xa050, 0xe464, 0x93a, 0xeaad, 0x0, 0x1);
        gbc.writeMem(0xc73e, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xf5d8);
        EXPECT(gbc.pc(), 0xc740);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc73e), 0xcb);
        EXPECT(gbc.readMem(0xc73f), 0xbf);
        // CB BF 026C
        gbc.setState(0xe336, 0x63cc, 0x4510, 0xb834, 0xf022, 0xf2b9, 0x1, 0x0);
        gbc.writeMem(0xe336, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x63cc);
        EXPECT(gbc.pc(), 0xe338);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe336), 0xcb);
        EXPECT(gbc.readMem(0xe337), 0xbf);
        // CB BF 026D
        gbc.setState(0x76cf, 0x8a3c, 0x6320, 0x9bf7, 0x14e6, 0x14e8, 0x1, 0x0);
        gbc.writeMem(0x76cf, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x8a3c);
        EXPECT(gbc.pc(), 0x76d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 026E
        gbc.setState(0xeaa2, 0x3aa5, 0xf0d0, 0x144e, 0x29a2, 0xf921, 0x0, 0x1);
        gbc.writeMem(0xeaa2, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x3aa5);
        EXPECT(gbc.pc(), 0xeaa4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeaa2), 0xcb);
        EXPECT(gbc.readMem(0xeaa3), 0xbf);
        // CB BF 026F
        gbc.setState(0x5fc4, 0x3678, 0xa790, 0x82ca, 0xd902, 0x8bf7, 0x0, 0x0);
        gbc.writeMem(0x5fc4, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x3678);
        EXPECT(gbc.pc(), 0x5fc6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0270
        gbc.setState(0x31f, 0xbd5a, 0xf8f0, 0xc115, 0x6498, 0xc20a, 0x0, 0x0);
        gbc.writeMem(0x31f, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xbd5a);
        EXPECT(gbc.pc(), 0x321);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0271
        gbc.setState(0x8120, 0x90a, 0x840, 0x9415, 0x9874, 0xb61, 0x0, 0x1);
        gbc.writeMem(0x8120, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x90a);
        EXPECT(gbc.pc(), 0x8122);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8120), 0xcb);
        EXPECT(gbc.readMem(0x8121), 0xbf);
        // CB BF 0272
        gbc.setState(0x5af8, 0x8155, 0x8c50, 0x3af6, 0x503, 0xf2d4, 0x0, 0x0);
        gbc.writeMem(0x5af8, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x8155);
        EXPECT(gbc.pc(), 0x5afa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0273
        gbc.setState(0xc71, 0x2b1, 0x77d0, 0xb783, 0x1e17, 0xc0dc, 0x0, 0x0);
        gbc.writeMem(0xc71, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x2b1);
        EXPECT(gbc.pc(), 0xc73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0274
        gbc.setState(0x6b1d, 0x3d13, 0x16e0, 0x9f2b, 0x1d4, 0xd585, 0x1, 0x1);
        gbc.writeMem(0x6b1d, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x3d13);
        EXPECT(gbc.pc(), 0x6b1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0275
        gbc.setState(0xe596, 0xab87, 0x2c30, 0xe32d, 0xa819, 0xf259, 0x0, 0x1);
        gbc.writeMem(0xe596, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xab87);
        EXPECT(gbc.pc(), 0xe598);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe596), 0xcb);
        EXPECT(gbc.readMem(0xe597), 0xbf);
        // CB BF 0276
        gbc.setState(0xe6b1, 0x214a, 0x9310, 0xb4c4, 0xeb7c, 0x8826, 0x1, 0x1);
        gbc.writeMem(0xe6b1, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x214a);
        EXPECT(gbc.pc(), 0xe6b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6b1), 0xcb);
        EXPECT(gbc.readMem(0xe6b2), 0xbf);
        // CB BF 0277
        gbc.setState(0x6e52, 0x9dc8, 0xe610, 0x9e54, 0xdc00, 0x9b3d, 0x0, 0x0);
        gbc.writeMem(0x6e52, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x9dc8);
        EXPECT(gbc.pc(), 0x6e54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0278
        gbc.setState(0xc3b8, 0xe641, 0xf980, 0xb08c, 0x7ac8, 0x2f71, 0x1, 0x0);
        gbc.writeMem(0xc3b8, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xe641);
        EXPECT(gbc.pc(), 0xc3ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3b8), 0xcb);
        EXPECT(gbc.readMem(0xc3b9), 0xbf);
        // CB BF 0279
        gbc.setState(0x7054, 0xee30, 0x8b70, 0x905d, 0x2487, 0xe552, 0x0, 0x0);
        gbc.writeMem(0x7054, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xee30);
        EXPECT(gbc.pc(), 0x7056);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 027A
        gbc.setState(0xbab8, 0x4b4e, 0x3de0, 0xd100, 0xa517, 0x2520, 0x0, 0x1);
        gbc.writeMem(0xbab8, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x4b4e);
        EXPECT(gbc.pc(), 0xbaba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbab8), 0xcb);
        EXPECT(gbc.readMem(0xbab9), 0xbf);
        // CB BF 027B
        gbc.setState(0xe99, 0x7840, 0x1470, 0xaaf, 0x21a, 0x9a4f, 0x0, 0x1);
        gbc.writeMem(0xe99, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x7840);
        EXPECT(gbc.pc(), 0xe9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 027C
        gbc.setState(0xdbec, 0xd61f, 0x20a0, 0x3d80, 0xce8d, 0x2252, 0x0, 0x0);
        gbc.writeMem(0xdbec, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xd61f);
        EXPECT(gbc.pc(), 0xdbee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbec), 0xcb);
        EXPECT(gbc.readMem(0xdbed), 0xbf);
        // CB BF 027D
        gbc.setState(0x3fa7, 0xc968, 0x20, 0xe976, 0x23fa, 0x46e5, 0x1, 0x1);
        gbc.writeMem(0x3fa7, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xc968);
        EXPECT(gbc.pc(), 0x3fa9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 027E
        gbc.setState(0x523d, 0x2a8b, 0xc360, 0x57e4, 0xb346, 0xaf95, 0x1, 0x1);
        gbc.writeMem(0x523d, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x2a8b);
        EXPECT(gbc.pc(), 0x523f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 027F
        gbc.setState(0x9821, 0xa4fd, 0x7a90, 0x9df5, 0xa367, 0x4c38, 0x0, 0x1);
        gbc.writeMem(0x9821, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xa4fd);
        EXPECT(gbc.pc(), 0x9823);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9821), 0xcb);
        EXPECT(gbc.readMem(0x9822), 0xbf);
        // CB BF 0280
        gbc.setState(0x3bd2, 0x3941, 0x3df0, 0x6e15, 0x91f7, 0xb727, 0x0, 0x0);
        gbc.writeMem(0x3bd2, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x3941);
        EXPECT(gbc.pc(), 0x3bd4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0281
        gbc.setState(0x6d9f, 0xd1b2, 0x75c0, 0xd64b, 0x4c37, 0xa64f, 0x0, 0x0);
        gbc.writeMem(0x6d9f, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xd1b2);
        EXPECT(gbc.pc(), 0x6da1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0283
        gbc.setState(0x8ec, 0x3a73, 0x9120, 0x3780, 0xc9c8, 0x376c, 0x0, 0x1);
        gbc.writeMem(0x8ec, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x3a73);
        EXPECT(gbc.pc(), 0x8ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0284
        gbc.setState(0x923f, 0xbcc4, 0x61c0, 0x2131, 0x7b7, 0x182b, 0x1, 0x1);
        gbc.writeMem(0x923f, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xbcc4);
        EXPECT(gbc.pc(), 0x9241);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x923f), 0xcb);
        EXPECT(gbc.readMem(0x9240), 0xbf);
        // CB BF 0285
        gbc.setState(0xe84d, 0xcdca, 0x37e0, 0x5611, 0x6caa, 0x33ca, 0x1, 0x0);
        gbc.writeMem(0xe84d, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xcdca);
        EXPECT(gbc.pc(), 0xe84f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe84d), 0xcb);
        EXPECT(gbc.readMem(0xe84e), 0xbf);
        // CB BF 0286
        gbc.setState(0x8101, 0x292c, 0xc150, 0xd66, 0x8ad9, 0x6088, 0x0, 0x1);
        gbc.writeMem(0x8101, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x292c);
        EXPECT(gbc.pc(), 0x8103);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8101), 0xcb);
        EXPECT(gbc.readMem(0x8102), 0xbf);
        // CB BF 0287
        gbc.setState(0x2ff7, 0x81c9, 0x3d00, 0x8c54, 0xca10, 0x50de, 0x1, 0x0);
        gbc.writeMem(0x2ff7, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x81c9);
        EXPECT(gbc.pc(), 0x2ff9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0288
        gbc.setState(0x61be, 0x9c5d, 0xfff0, 0x1590, 0xae78, 0x2a91, 0x0, 0x0);
        gbc.writeMem(0x61be, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x9c5d);
        EXPECT(gbc.pc(), 0x61c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0289
        gbc.setState(0x35f3, 0x7b89, 0xf550, 0x8bf8, 0xd836, 0xfb42, 0x1, 0x0);
        gbc.writeMem(0x35f3, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x7b89);
        EXPECT(gbc.pc(), 0x35f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 028A
        gbc.setState(0x39e0, 0xee97, 0xe210, 0xbd41, 0xc1df, 0x575d, 0x0, 0x0);
        gbc.writeMem(0x39e0, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xee97);
        EXPECT(gbc.pc(), 0x39e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 028B
        gbc.setState(0x885e, 0xf809, 0x8e80, 0x8770, 0x2c37, 0xbb32, 0x1, 0x0);
        gbc.writeMem(0x885e, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xf809);
        EXPECT(gbc.pc(), 0x8860);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x885e), 0xcb);
        EXPECT(gbc.readMem(0x885f), 0xbf);
        // CB BF 028C
        gbc.setState(0x6aca, 0xba3a, 0x6710, 0xb35, 0x1137, 0xa27, 0x1, 0x0);
        gbc.writeMem(0x6aca, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xba3a);
        EXPECT(gbc.pc(), 0x6acc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 028E
        gbc.setState(0x4932, 0xa8b8, 0x8fe0, 0x4c4f, 0x1d79, 0xad56, 0x1, 0x1);
        gbc.writeMem(0x4932, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xa8b8);
        EXPECT(gbc.pc(), 0x4934);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 028F
        gbc.setState(0xce52, 0xd632, 0xf140, 0x8568, 0x2401, 0x5d2, 0x1, 0x0);
        gbc.writeMem(0xce52, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xd632);
        EXPECT(gbc.pc(), 0xce54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce52), 0xcb);
        EXPECT(gbc.readMem(0xce53), 0xbf);
        // CB BF 0290
        gbc.setState(0x91a0, 0xc550, 0x1330, 0x7a56, 0x8477, 0xa1a1, 0x1, 0x1);
        gbc.writeMem(0x91a0, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xc550);
        EXPECT(gbc.pc(), 0x91a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91a0), 0xcb);
        EXPECT(gbc.readMem(0x91a1), 0xbf);
        // CB BF 0292
        gbc.setState(0x2929, 0x2073, 0xeba0, 0x565e, 0x1e90, 0x43e0, 0x1, 0x1);
        gbc.writeMem(0x2929, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x2073);
        EXPECT(gbc.pc(), 0x292b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0293
        gbc.setState(0x7dd5, 0x66ac, 0xe5a0, 0x4281, 0x1bb, 0x4a38, 0x0, 0x0);
        gbc.writeMem(0x7dd5, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x66ac);
        EXPECT(gbc.pc(), 0x7dd7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0294
        gbc.setState(0x3b3f, 0x22e4, 0xb170, 0x1a7d, 0x2bc9, 0x88a, 0x0, 0x0);
        gbc.writeMem(0x3b3f, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x22e4);
        EXPECT(gbc.pc(), 0x3b41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0295
        gbc.setState(0x9676, 0x21d3, 0x1eb0, 0x59c2, 0xccb4, 0x848f, 0x1, 0x1);
        gbc.writeMem(0x9676, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x21d3);
        EXPECT(gbc.pc(), 0x9678);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9676), 0xcb);
        EXPECT(gbc.readMem(0x9677), 0xbf);
        // CB BF 0296
        gbc.setState(0x451c, 0xdf5d, 0xee60, 0xd5f, 0xba72, 0x9c24, 0x1, 0x1);
        gbc.writeMem(0x451c, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xdf5d);
        EXPECT(gbc.pc(), 0x451e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0297
        gbc.setState(0x8d0d, 0x984a, 0xbd70, 0xe01c, 0x295c, 0x894e, 0x1, 0x1);
        gbc.writeMem(0x8d0d, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x984a);
        EXPECT(gbc.pc(), 0x8d0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d0d), 0xcb);
        EXPECT(gbc.readMem(0x8d0e), 0xbf);
        // CB BF 0298
        gbc.setState(0xeecf, 0x439d, 0x60d0, 0x4264, 0xea56, 0x2a3c, 0x0, 0x0);
        gbc.writeMem(0xeecf, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x439d);
        EXPECT(gbc.pc(), 0xeed1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeecf), 0xcb);
        EXPECT(gbc.readMem(0xeed0), 0xbf);
        // CB BF 0299
        gbc.setState(0xb9c6, 0x6c24, 0xb5b0, 0x8b78, 0x772f, 0xeed, 0x1, 0x1);
        gbc.writeMem(0xb9c6, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x6c24);
        EXPECT(gbc.pc(), 0xb9c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9c6), 0xcb);
        EXPECT(gbc.readMem(0xb9c7), 0xbf);
        // CB BF 029A
        gbc.setState(0xe731, 0x34ce, 0x6cd0, 0xdec, 0xe074, 0x3627, 0x0, 0x1);
        gbc.writeMem(0xe731, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x34ce);
        EXPECT(gbc.pc(), 0xe733);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe731), 0xcb);
        EXPECT(gbc.readMem(0xe732), 0xbf);
        // CB BF 029B
        gbc.setState(0xe636, 0x1762, 0x8ce0, 0x51b1, 0x1508, 0x766b, 0x0, 0x1);
        gbc.writeMem(0xe636, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x1762);
        EXPECT(gbc.pc(), 0xe638);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe636), 0xcb);
        EXPECT(gbc.readMem(0xe637), 0xbf);
        // CB BF 029D
        gbc.setState(0x4bf6, 0x59eb, 0x4500, 0x8dbd, 0x4d84, 0x7e03, 0x0, 0x1);
        gbc.writeMem(0x4bf6, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x59eb);
        EXPECT(gbc.pc(), 0x4bf8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 029E
        gbc.setState(0x4151, 0xfc90, 0xfa90, 0xd9c3, 0xb465, 0x2fb6, 0x1, 0x0);
        gbc.writeMem(0x4151, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xfc90);
        EXPECT(gbc.pc(), 0x4153);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 029F
        gbc.setState(0x40dc, 0xd2a, 0x6290, 0xc89b, 0x4c31, 0xc87b, 0x0, 0x1);
        gbc.writeMem(0x40dc, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xd2a);
        EXPECT(gbc.pc(), 0x40de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 02A0
        gbc.setState(0xb31c, 0x63f2, 0xd1e0, 0x3d7e, 0x5464, 0xfd31, 0x0, 0x1);
        gbc.writeMem(0xb31c, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x63f2);
        EXPECT(gbc.pc(), 0xb31e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb31c), 0xcb);
        EXPECT(gbc.readMem(0xb31d), 0xbf);
        // CB BF 02A1
        gbc.setState(0x6a5d, 0x2ae, 0xc520, 0x57c9, 0x6d1d, 0x9b77, 0x1, 0x0);
        gbc.writeMem(0x6a5d, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x2ae);
        EXPECT(gbc.pc(), 0x6a5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 02A2
        gbc.setState(0x38c6, 0xbbd3, 0x25b0, 0x3809, 0x1cb0, 0x9753, 0x0, 0x0);
        gbc.writeMem(0x38c6, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xbbd3);
        EXPECT(gbc.pc(), 0x38c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 02A3
        gbc.setState(0x26c, 0xd5e3, 0x3ad0, 0x6aaf, 0x71b0, 0xed6a, 0x0, 0x1);
        gbc.writeMem(0x26c, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xd5e3);
        EXPECT(gbc.pc(), 0x26e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 02A5
        gbc.setState(0xd28d, 0x7396, 0x30e0, 0x8e18, 0xa5b9, 0x67ce, 0x0, 0x0);
        gbc.writeMem(0xd28d, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x7396);
        EXPECT(gbc.pc(), 0xd28f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd28d), 0xcb);
        EXPECT(gbc.readMem(0xd28e), 0xbf);
        // CB BF 02A6
        gbc.setState(0x27d8, 0x4679, 0xc030, 0x5c83, 0x7b35, 0x9b1d, 0x1, 0x0);
        gbc.writeMem(0x27d8, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x4679);
        EXPECT(gbc.pc(), 0x27da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 02A7
        gbc.setState(0x7b38, 0x9691, 0x34b0, 0x554, 0xa99e, 0xf0d9, 0x0, 0x1);
        gbc.writeMem(0x7b38, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x9691);
        EXPECT(gbc.pc(), 0x7b3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 02A8
        gbc.setState(0x51ce, 0x7c43, 0x38e0, 0x832a, 0x3192, 0x8a3f, 0x0, 0x1);
        gbc.writeMem(0x51ce, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x7c43);
        EXPECT(gbc.pc(), 0x51d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 02A9
        gbc.setState(0xe0b9, 0xed5d, 0x4f30, 0x9dc5, 0x2811, 0xb277, 0x1, 0x0);
        gbc.writeMem(0xe0b9, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xed5d);
        EXPECT(gbc.pc(), 0xe0bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0b9), 0xcb);
        EXPECT(gbc.readMem(0xe0ba), 0xbf);
        // CB BF 02AB
        gbc.setState(0x9eb3, 0x3f19, 0xbba0, 0x37b1, 0xc91, 0xbddc, 0x1, 0x0);
        gbc.writeMem(0x9eb3, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x3f19);
        EXPECT(gbc.pc(), 0x9eb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9eb3), 0xcb);
        EXPECT(gbc.readMem(0x9eb4), 0xbf);
        // CB BF 02AC
        gbc.setState(0x3822, 0xb49f, 0x68f0, 0x864c, 0xd1ba, 0x87a4, 0x1, 0x1);
        gbc.writeMem(0x3822, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xb49f);
        EXPECT(gbc.pc(), 0x3824);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 02AD
        gbc.setState(0xcf29, 0x762e, 0xb120, 0xecbb, 0x7fb2, 0xd4bc, 0x1, 0x1);
        gbc.writeMem(0xcf29, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x762e);
        EXPECT(gbc.pc(), 0xcf2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf29), 0xcb);
        EXPECT(gbc.readMem(0xcf2a), 0xbf);
        // CB BF 02AE
        gbc.setState(0x602b, 0x43fa, 0x4ac0, 0xddb, 0xefa0, 0xd959, 0x1, 0x0);
        gbc.writeMem(0x602b, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x43fa);
        EXPECT(gbc.pc(), 0x602d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 02AF
        gbc.setState(0xbd22, 0x9cdb, 0xe670, 0x86ec, 0x95a, 0x3520, 0x1, 0x1);
        gbc.writeMem(0xbd22, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x9cdb);
        EXPECT(gbc.pc(), 0xbd24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd22), 0xcb);
        EXPECT(gbc.readMem(0xbd23), 0xbf);
        // CB BF 02B0
        gbc.setState(0x4411, 0xb208, 0x4550, 0xab14, 0xb88c, 0xfa, 0x1, 0x0);
        gbc.writeMem(0x4411, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xb208);
        EXPECT(gbc.pc(), 0x4413);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 02B1
        gbc.setState(0x5444, 0x5a1b, 0xb650, 0xb178, 0x7852, 0xed86, 0x0, 0x0);
        gbc.writeMem(0x5444, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x5a1b);
        EXPECT(gbc.pc(), 0x5446);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 02B2
        gbc.setState(0x2be8, 0xa3bb, 0x9760, 0xb3b9, 0x5efe, 0x2d49, 0x0, 0x1);
        gbc.writeMem(0x2be8, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xa3bb);
        EXPECT(gbc.pc(), 0x2bea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 02B3
        gbc.setState(0x8d1f, 0xaff1, 0x3c20, 0x215e, 0xf4, 0x2e89, 0x0, 0x1);
        gbc.writeMem(0x8d1f, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xaff1);
        EXPECT(gbc.pc(), 0x8d21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d1f), 0xcb);
        EXPECT(gbc.readMem(0x8d20), 0xbf);
        // CB BF 02B4
        gbc.setState(0x3221, 0xeea1, 0x8b00, 0x4aec, 0x368d, 0x1325, 0x0, 0x1);
        gbc.writeMem(0x3221, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xeea1);
        EXPECT(gbc.pc(), 0x3223);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 02B5
        gbc.setState(0x41e2, 0x8bc5, 0x9fa0, 0x944f, 0x245d, 0x1307, 0x1, 0x1);
        gbc.writeMem(0x41e2, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x8bc5);
        EXPECT(gbc.pc(), 0x41e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 02B6
        gbc.setState(0xed89, 0xbf43, 0x32e0, 0xdb6f, 0xcb54, 0x30dc, 0x0, 0x1);
        gbc.writeMem(0xed89, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xbf43);
        EXPECT(gbc.pc(), 0xed8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed89), 0xcb);
        EXPECT(gbc.readMem(0xed8a), 0xbf);
        // CB BF 02B7
        gbc.setState(0xd5bb, 0xadb9, 0x8c10, 0x734f, 0xaa9d, 0xe3a1, 0x0, 0x1);
        gbc.writeMem(0xd5bb, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xadb9);
        EXPECT(gbc.pc(), 0xd5bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5bb), 0xcb);
        EXPECT(gbc.readMem(0xd5bc), 0xbf);
        // CB BF 02B8
        gbc.setState(0x3825, 0x1967, 0x9810, 0xa9e, 0xe011, 0x974a, 0x0, 0x1);
        gbc.writeMem(0x3825, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x1967);
        EXPECT(gbc.pc(), 0x3827);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 02B9
        gbc.setState(0x26bf, 0x6eb1, 0xd0d0, 0xa31e, 0xc8d6, 0xbca3, 0x1, 0x0);
        gbc.writeMem(0x26bf, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x6eb1);
        EXPECT(gbc.pc(), 0x26c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 02BA
        gbc.setState(0x6473, 0x4bb4, 0x29e0, 0x1430, 0x2ba6, 0x2e29, 0x1, 0x1);
        gbc.writeMem(0x6473, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x4bb4);
        EXPECT(gbc.pc(), 0x6475);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 02BB
        gbc.setState(0x6118, 0xc58f, 0x9000, 0x8a1, 0x565f, 0x65cd, 0x1, 0x0);
        gbc.writeMem(0x6118, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xc58f);
        EXPECT(gbc.pc(), 0x611a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 02BC
        gbc.setState(0xbf01, 0x7aee, 0x3010, 0xa653, 0x16bb, 0x80f5, 0x0, 0x1);
        gbc.writeMem(0xbf01, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x7aee);
        EXPECT(gbc.pc(), 0xbf03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf01), 0xcb);
        EXPECT(gbc.readMem(0xbf02), 0xbf);
        // CB BF 02BD
        gbc.setState(0x7bb7, 0x6528, 0x2980, 0xf425, 0xb9b0, 0xa011, 0x0, 0x1);
        gbc.writeMem(0x7bb7, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x6528);
        EXPECT(gbc.pc(), 0x7bb9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 02BE
        gbc.setState(0xb123, 0xb8c1, 0xadc0, 0xa82e, 0x8051, 0x9ac3, 0x1, 0x0);
        gbc.writeMem(0xb123, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xb8c1);
        EXPECT(gbc.pc(), 0xb125);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb123), 0xcb);
        EXPECT(gbc.readMem(0xb124), 0xbf);
        // CB BF 02BF
        gbc.setState(0x6a2, 0x2e69, 0xd1b0, 0x9a27, 0xc90, 0x327c, 0x0, 0x0);
        gbc.writeMem(0x6a2, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x2e69);
        EXPECT(gbc.pc(), 0x6a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 02C0
        gbc.setState(0x662b, 0x3f01, 0xdc90, 0x64d5, 0x7df, 0x9127, 0x1, 0x0);
        gbc.writeMem(0x662b, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x3f01);
        EXPECT(gbc.pc(), 0x662d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 02C1
        gbc.setState(0x66bf, 0xf7ec, 0xad0, 0x5683, 0xfa6b, 0x9323, 0x0, 0x1);
        gbc.writeMem(0x66bf, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xf7ec);
        EXPECT(gbc.pc(), 0x66c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 02C2
        gbc.setState(0xbfb, 0xe891, 0x7b50, 0x5cd8, 0x34e9, 0xb299, 0x1, 0x0);
        gbc.writeMem(0xbfb, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xe891);
        EXPECT(gbc.pc(), 0xbfd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 02C3
        gbc.setState(0x29d6, 0x9ecc, 0x36f0, 0xa44b, 0x1aee, 0x96f8, 0x1, 0x0);
        gbc.writeMem(0x29d6, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x9ecc);
        EXPECT(gbc.pc(), 0x29d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 02C4
        gbc.setState(0x71ae, 0x7a04, 0xc5b0, 0xd111, 0xb694, 0xca1c, 0x1, 0x0);
        gbc.writeMem(0x71ae, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x7a04);
        EXPECT(gbc.pc(), 0x71b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 02C5
        gbc.setState(0x6334, 0x72e4, 0x2ef0, 0xa864, 0x9bb8, 0x5d14, 0x1, 0x0);
        gbc.writeMem(0x6334, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x72e4);
        EXPECT(gbc.pc(), 0x6336);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 02C6
        gbc.setState(0x1526, 0xa6e5, 0x3af0, 0xa0a4, 0x6ad0, 0x304d, 0x0, 0x1);
        gbc.writeMem(0x1526, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xa6e5);
        EXPECT(gbc.pc(), 0x1528);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 02C7
        gbc.setState(0x1432, 0x81eb, 0xb970, 0xca77, 0x77cb, 0xe1fc, 0x0, 0x1);
        gbc.writeMem(0x1432, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x81eb);
        EXPECT(gbc.pc(), 0x1434);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 02C8
        gbc.setState(0xae8a, 0x485a, 0x5f0, 0x172f, 0x6f8b, 0xed3d, 0x0, 0x1);
        gbc.writeMem(0xae8a, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x485a);
        EXPECT(gbc.pc(), 0xae8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae8a), 0xcb);
        EXPECT(gbc.readMem(0xae8b), 0xbf);
        // CB BF 02C9
        gbc.setState(0x5324, 0x350a, 0x8f40, 0x8a1, 0x7f40, 0x77b9, 0x1, 0x1);
        gbc.writeMem(0x5324, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x350a);
        EXPECT(gbc.pc(), 0x5326);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 02CA
        gbc.setState(0x2c53, 0x308a, 0x7d50, 0x1ce5, 0xefce, 0xec11, 0x0, 0x0);
        gbc.writeMem(0x2c53, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x308a);
        EXPECT(gbc.pc(), 0x2c55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 02CB
        gbc.setState(0x1f08, 0xe548, 0xdc30, 0xbd7c, 0x846d, 0x9aa5, 0x0, 0x1);
        gbc.writeMem(0x1f08, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xe548);
        EXPECT(gbc.pc(), 0x1f0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 02CC
        gbc.setState(0x8106, 0x8a16, 0x2440, 0xc89f, 0x92f7, 0x28ba, 0x0, 0x1);
        gbc.writeMem(0x8106, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x8a16);
        EXPECT(gbc.pc(), 0x8108);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8106), 0xcb);
        EXPECT(gbc.readMem(0x8107), 0xbf);
        // CB BF 02CD
        gbc.setState(0x36a6, 0x4c12, 0x3a50, 0xdf34, 0x3730, 0x1227, 0x0, 0x0);
        gbc.writeMem(0x36a6, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x4c12);
        EXPECT(gbc.pc(), 0x36a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 02CE
        gbc.setState(0xcdb9, 0x46eb, 0xae40, 0x7d10, 0x4f3d, 0x83c7, 0x1, 0x1);
        gbc.writeMem(0xcdb9, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x46eb);
        EXPECT(gbc.pc(), 0xcdbb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdb9), 0xcb);
        EXPECT(gbc.readMem(0xcdba), 0xbf);
        // CB BF 02CF
        gbc.setState(0xe73, 0x1167, 0xd590, 0xcd3c, 0x7cfb, 0xc75, 0x1, 0x1);
        gbc.writeMem(0xe73, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x1167);
        EXPECT(gbc.pc(), 0xe75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 02D0
        gbc.setState(0x9fa2, 0x27e9, 0xe210, 0xad7, 0x3047, 0x638f, 0x0, 0x0);
        gbc.writeMem(0x9fa2, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x27e9);
        EXPECT(gbc.pc(), 0x9fa4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fa2), 0xcb);
        EXPECT(gbc.readMem(0x9fa3), 0xbf);
        // CB BF 02D1
        gbc.setState(0xdd3c, 0x26b9, 0xac80, 0x2d79, 0x94bc, 0x1b23, 0x1, 0x1);
        gbc.writeMem(0xdd3c, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x26b9);
        EXPECT(gbc.pc(), 0xdd3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd3c), 0xcb);
        EXPECT(gbc.readMem(0xdd3d), 0xbf);
        // CB BF 02D2
        gbc.setState(0x19bb, 0xbe10, 0xe890, 0xf1ed, 0x8b86, 0x8c96, 0x0, 0x0);
        gbc.writeMem(0x19bb, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xbe10);
        EXPECT(gbc.pc(), 0x19bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 02D4
        gbc.setState(0x9f2a, 0xfd83, 0x5c60, 0x4207, 0x2fe7, 0x86aa, 0x1, 0x1);
        gbc.writeMem(0x9f2a, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xfd83);
        EXPECT(gbc.pc(), 0x9f2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f2a), 0xcb);
        EXPECT(gbc.readMem(0x9f2b), 0xbf);
        // CB BF 02D5
        gbc.setState(0x4d96, 0xb336, 0xa2d0, 0x8309, 0x4b0b, 0x78da, 0x0, 0x0);
        gbc.writeMem(0x4d96, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xb336);
        EXPECT(gbc.pc(), 0x4d98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 02D6
        gbc.setState(0xbd37, 0xf589, 0x72e0, 0x98b7, 0x7208, 0xaa37, 0x1, 0x0);
        gbc.writeMem(0xbd37, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xf589);
        EXPECT(gbc.pc(), 0xbd39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd37), 0xcb);
        EXPECT(gbc.readMem(0xbd38), 0xbf);
        // CB BF 02D7
        gbc.setState(0x209, 0x82ea, 0x9af0, 0x87d3, 0x2e2b, 0x1c3e, 0x1, 0x0);
        gbc.writeMem(0x209, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x82ea);
        EXPECT(gbc.pc(), 0x20b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 02D8
        gbc.setState(0x5b75, 0x9896, 0x9d60, 0xba8f, 0xec99, 0xcb88, 0x0, 0x0);
        gbc.writeMem(0x5b75, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x9896);
        EXPECT(gbc.pc(), 0x5b77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 02D9
        gbc.setState(0x88e6, 0x7c55, 0x7fd0, 0x4e1a, 0x9bb7, 0x34f1, 0x1, 0x1);
        gbc.writeMem(0x88e6, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x7c55);
        EXPECT(gbc.pc(), 0x88e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88e6), 0xcb);
        EXPECT(gbc.readMem(0x88e7), 0xbf);
        // CB BF 02DB
        gbc.setState(0x4c66, 0x8b9d, 0x2700, 0xde13, 0x3b6, 0x55d, 0x0, 0x0);
        gbc.writeMem(0x4c66, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x8b9d);
        EXPECT(gbc.pc(), 0x4c68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 02DC
        gbc.setState(0xcfb8, 0x18aa, 0xa4d0, 0x1d4b, 0xf7ab, 0x5180, 0x1, 0x0);
        gbc.writeMem(0xcfb8, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x18aa);
        EXPECT(gbc.pc(), 0xcfba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfb8), 0xcb);
        EXPECT(gbc.readMem(0xcfb9), 0xbf);
        // CB BF 02DD
        gbc.setState(0x7c3, 0x29b3, 0x5870, 0x5281, 0xd69a, 0xfafc, 0x1, 0x1);
        gbc.writeMem(0x7c3, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x29b3);
        EXPECT(gbc.pc(), 0x7c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 02DE
        gbc.setState(0x3f96, 0xf1cd, 0x9af0, 0xe906, 0xcc5b, 0xf2d3, 0x0, 0x1);
        gbc.writeMem(0x3f96, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xf1cd);
        EXPECT(gbc.pc(), 0x3f98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 02DF
        gbc.setState(0xa571, 0x7824, 0xe580, 0xe10, 0x17e2, 0xd08d, 0x1, 0x0);
        gbc.writeMem(0xa571, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x7824);
        EXPECT(gbc.pc(), 0xa573);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa571), 0xcb);
        EXPECT(gbc.readMem(0xa572), 0xbf);
        // CB BF 02E0
        gbc.setState(0x6cfc, 0xb587, 0x9990, 0x59de, 0xa146, 0x197c, 0x1, 0x0);
        gbc.writeMem(0x6cfc, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xb587);
        EXPECT(gbc.pc(), 0x6cfe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 02E1
        gbc.setState(0x382b, 0xb97d, 0x6d80, 0x723a, 0x2a56, 0x105, 0x1, 0x1);
        gbc.writeMem(0x382b, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xb97d);
        EXPECT(gbc.pc(), 0x382d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 02E2
        gbc.setState(0x902a, 0x4d80, 0x6e20, 0x68ee, 0xe8d4, 0x45cb, 0x0, 0x0);
        gbc.writeMem(0x902a, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x4d80);
        EXPECT(gbc.pc(), 0x902c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x902a), 0xcb);
        EXPECT(gbc.readMem(0x902b), 0xbf);
        // CB BF 02E4
        gbc.setState(0x930b, 0x8817, 0x6430, 0xd0c5, 0x23e6, 0x8b13, 0x1, 0x0);
        gbc.writeMem(0x930b, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x8817);
        EXPECT(gbc.pc(), 0x930d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x930b), 0xcb);
        EXPECT(gbc.readMem(0x930c), 0xbf);
        // CB BF 02E5
        gbc.setState(0x8841, 0x9df6, 0x5c70, 0x3b33, 0x6859, 0xcac4, 0x0, 0x1);
        gbc.writeMem(0x8841, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x9df6);
        EXPECT(gbc.pc(), 0x8843);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8841), 0xcb);
        EXPECT(gbc.readMem(0x8842), 0xbf);
        // CB BF 02E6
        gbc.setState(0xb55a, 0x6816, 0x6a10, 0x26c8, 0x4762, 0x57a3, 0x1, 0x1);
        gbc.writeMem(0xb55a, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x6816);
        EXPECT(gbc.pc(), 0xb55c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb55a), 0xcb);
        EXPECT(gbc.readMem(0xb55b), 0xbf);
        // CB BF 02E7
        gbc.setState(0x9c78, 0xd1c6, 0x2550, 0xc61a, 0xb508, 0x538a, 0x0, 0x0);
        gbc.writeMem(0x9c78, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xd1c6);
        EXPECT(gbc.pc(), 0x9c7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c78), 0xcb);
        EXPECT(gbc.readMem(0x9c79), 0xbf);
        // CB BF 02E8
        gbc.setState(0x6e10, 0x5b51, 0x55c0, 0x7565, 0x84b4, 0xb6bf, 0x0, 0x1);
        gbc.writeMem(0x6e10, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x5b51);
        EXPECT(gbc.pc(), 0x6e12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 02E9
        gbc.setState(0x3fc8, 0x5cd5, 0x3400, 0x7dfb, 0x74dc, 0xc797, 0x0, 0x0);
        gbc.writeMem(0x3fc8, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x5cd5);
        EXPECT(gbc.pc(), 0x3fca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 02EA
        gbc.setState(0x79f3, 0x6386, 0x7f50, 0x9ea, 0x415e, 0xcc94, 0x0, 0x1);
        gbc.writeMem(0x79f3, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x6386);
        EXPECT(gbc.pc(), 0x79f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 02EB
        gbc.setState(0xace, 0x86a9, 0x6800, 0xf36f, 0xc74c, 0x59b1, 0x1, 0x0);
        gbc.writeMem(0xace, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x86a9);
        EXPECT(gbc.pc(), 0xad0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 02EC
        gbc.setState(0x8f3e, 0xec21, 0x8780, 0x8324, 0x1c87, 0x8e49, 0x0, 0x0);
        gbc.writeMem(0x8f3e, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xec21);
        EXPECT(gbc.pc(), 0x8f40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f3e), 0xcb);
        EXPECT(gbc.readMem(0x8f3f), 0xbf);
        // CB BF 02ED
        gbc.setState(0x709d, 0xfecf, 0xd590, 0xa570, 0xbbcc, 0x4f33, 0x0, 0x1);
        gbc.writeMem(0x709d, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xfecf);
        EXPECT(gbc.pc(), 0x709f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 02EE
        gbc.setState(0xae, 0xa690, 0x8a30, 0x74ec, 0x8dbc, 0xb7fb, 0x1, 0x1);
        gbc.writeMem(0xae, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xa690);
        EXPECT(gbc.pc(), 0xb0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 02EF
        gbc.setState(0xc6c8, 0x305d, 0xa0d0, 0x899e, 0x81f8, 0x1d2e, 0x1, 0x0);
        gbc.writeMem(0xc6c8, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x305d);
        EXPECT(gbc.pc(), 0xc6ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6c8), 0xcb);
        EXPECT(gbc.readMem(0xc6c9), 0xbf);
        // CB BF 02F0
        gbc.setState(0xcd32, 0x5846, 0x9590, 0x4c4b, 0x3123, 0xd146, 0x1, 0x1);
        gbc.writeMem(0xcd32, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x5846);
        EXPECT(gbc.pc(), 0xcd34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd32), 0xcb);
        EXPECT(gbc.readMem(0xcd33), 0xbf);
        // CB BF 02F1
        gbc.setState(0x3611, 0x7c7b, 0x9160, 0x6e05, 0x6457, 0x459, 0x1, 0x1);
        gbc.writeMem(0x3611, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x7c7b);
        EXPECT(gbc.pc(), 0x3613);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 02F2
        gbc.setState(0xd83c, 0x97a4, 0x9e60, 0x1be5, 0xaa20, 0xb3dc, 0x0, 0x0);
        gbc.writeMem(0xd83c, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x97a4);
        EXPECT(gbc.pc(), 0xd83e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd83c), 0xcb);
        EXPECT(gbc.readMem(0xd83d), 0xbf);
        // CB BF 02F3
        gbc.setState(0xafb9, 0x4e8d, 0xb560, 0x5220, 0x5473, 0x17a3, 0x0, 0x1);
        gbc.writeMem(0xafb9, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x4e8d);
        EXPECT(gbc.pc(), 0xafbb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafb9), 0xcb);
        EXPECT(gbc.readMem(0xafba), 0xbf);
        // CB BF 02F4
        gbc.setState(0xc9b0, 0x6c18, 0xdd80, 0xd167, 0x1556, 0x5dc6, 0x1, 0x0);
        gbc.writeMem(0xc9b0, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x6c18);
        EXPECT(gbc.pc(), 0xc9b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9b0), 0xcb);
        EXPECT(gbc.readMem(0xc9b1), 0xbf);
        // CB BF 02F6
        gbc.setState(0xe4b4, 0xad11, 0xe4e0, 0x5c98, 0xf8e3, 0x59e1, 0x0, 0x0);
        gbc.writeMem(0xe4b4, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xad11);
        EXPECT(gbc.pc(), 0xe4b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4b4), 0xcb);
        EXPECT(gbc.readMem(0xe4b5), 0xbf);
        // CB BF 02F7
        gbc.setState(0xc096, 0x8da1, 0xbf60, 0x3e9, 0x7dde, 0xbbe5, 0x0, 0x1);
        gbc.writeMem(0xc096, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x8da1);
        EXPECT(gbc.pc(), 0xc098);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc096), 0xcb);
        EXPECT(gbc.readMem(0xc097), 0xbf);
        // CB BF 02F8
        gbc.setState(0x295c, 0xae57, 0x9c30, 0x6419, 0xea47, 0x1e43, 0x0, 0x1);
        gbc.writeMem(0x295c, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xae57);
        EXPECT(gbc.pc(), 0x295e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 02F9
        gbc.setState(0xc0ca, 0x6ad6, 0xa3d0, 0x2c91, 0xfb1, 0x92f7, 0x0, 0x1);
        gbc.writeMem(0xc0ca, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x6ad6);
        EXPECT(gbc.pc(), 0xc0cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0ca), 0xcb);
        EXPECT(gbc.readMem(0xc0cb), 0xbf);
        // CB BF 02FA
        gbc.setState(0x8b60, 0x378, 0x79c0, 0x80fb, 0x6ec9, 0xfa52, 0x1, 0x0);
        gbc.writeMem(0x8b60, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x378);
        EXPECT(gbc.pc(), 0x8b62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b60), 0xcb);
        EXPECT(gbc.readMem(0x8b61), 0xbf);
        // CB BF 02FB
        gbc.setState(0x4585, 0x3644, 0xaef0, 0x3651, 0xf2ac, 0x7270, 0x0, 0x0);
        gbc.writeMem(0x4585, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x3644);
        EXPECT(gbc.pc(), 0x4587);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 02FC
        gbc.setState(0xe22f, 0xc670, 0x2350, 0x878a, 0x72f, 0x79d3, 0x1, 0x0);
        gbc.writeMem(0xe22f, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xc670);
        EXPECT(gbc.pc(), 0xe231);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe22f), 0xcb);
        EXPECT(gbc.readMem(0xe230), 0xbf);
        // CB BF 02FD
        gbc.setState(0x1eda, 0xdbc8, 0x1640, 0xc826, 0x120f, 0xd445, 0x1, 0x0);
        gbc.writeMem(0x1eda, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xdbc8);
        EXPECT(gbc.pc(), 0x1edc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 02FE
        gbc.setState(0xc53d, 0x4c29, 0x4ce0, 0xb0d5, 0x5a8e, 0x3db0, 0x0, 0x0);
        gbc.writeMem(0xc53d, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x4c29);
        EXPECT(gbc.pc(), 0xc53f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc53d), 0xcb);
        EXPECT(gbc.readMem(0xc53e), 0xbf);
        // CB BF 02FF
        gbc.setState(0x75ad, 0xd952, 0x570, 0xcff5, 0x6f19, 0x6edf, 0x0, 0x0);
        gbc.writeMem(0x75ad, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xd952);
        EXPECT(gbc.pc(), 0x75af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0300
        gbc.setState(0x51b1, 0x9126, 0x2f70, 0x7a1c, 0x9ace, 0xe034, 0x0, 0x0);
        gbc.writeMem(0x51b1, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x9126);
        EXPECT(gbc.pc(), 0x51b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0301
        gbc.setState(0xbdac, 0x9cf2, 0xa1f0, 0x95d7, 0x4515, 0x98d8, 0x0, 0x1);
        gbc.writeMem(0xbdac, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x9cf2);
        EXPECT(gbc.pc(), 0xbdae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdac), 0xcb);
        EXPECT(gbc.readMem(0xbdad), 0xbf);
        // CB BF 0302
        gbc.setState(0xdf48, 0x254c, 0xb5d0, 0x9ca8, 0x2d, 0x699f, 0x1, 0x1);
        gbc.writeMem(0xdf48, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x254c);
        EXPECT(gbc.pc(), 0xdf4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf48), 0xcb);
        EXPECT(gbc.readMem(0xdf49), 0xbf);
        // CB BF 0303
        gbc.setState(0xc275, 0x43b6, 0x5ee0, 0xb12e, 0x60f1, 0x340d, 0x0, 0x0);
        gbc.writeMem(0xc275, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x43b6);
        EXPECT(gbc.pc(), 0xc277);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc275), 0xcb);
        EXPECT(gbc.readMem(0xc276), 0xbf);
        // CB BF 0304
        gbc.setState(0x2df5, 0xcc04, 0x100, 0x1f47, 0x8e79, 0x3cc5, 0x0, 0x1);
        gbc.writeMem(0x2df5, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xcc04);
        EXPECT(gbc.pc(), 0x2df7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0305
        gbc.setState(0xe860, 0x36a4, 0x9250, 0x92bb, 0x9639, 0xb5eb, 0x0, 0x1);
        gbc.writeMem(0xe860, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x36a4);
        EXPECT(gbc.pc(), 0xe862);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe860), 0xcb);
        EXPECT(gbc.readMem(0xe861), 0xbf);
        // CB BF 0306
        gbc.setState(0xed62, 0xf1c1, 0xe230, 0x2470, 0xeddf, 0xe5f5, 0x1, 0x1);
        gbc.writeMem(0xed62, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xf1c1);
        EXPECT(gbc.pc(), 0xed64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed62), 0xcb);
        EXPECT(gbc.readMem(0xed63), 0xbf);
        // CB BF 0307
        gbc.setState(0xbedd, 0x36a9, 0x6440, 0x88b5, 0x3dbb, 0x4310, 0x1, 0x0);
        gbc.writeMem(0xbedd, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x36a9);
        EXPECT(gbc.pc(), 0xbedf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbedd), 0xcb);
        EXPECT(gbc.readMem(0xbede), 0xbf);
        // CB BF 0308
        gbc.setState(0xe1ea, 0x6567, 0x60a0, 0x6197, 0x53ca, 0x96eb, 0x0, 0x0);
        gbc.writeMem(0xe1ea, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x6567);
        EXPECT(gbc.pc(), 0xe1ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1ea), 0xcb);
        EXPECT(gbc.readMem(0xe1eb), 0xbf);
        // CB BF 0309
        gbc.setState(0x5bc8, 0x9090, 0x8330, 0x57d7, 0xd736, 0x2dd6, 0x0, 0x0);
        gbc.writeMem(0x5bc8, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x9090);
        EXPECT(gbc.pc(), 0x5bca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 030A
        gbc.setState(0x10ea, 0x2d0d, 0x2340, 0x2781, 0x6a0c, 0x4086, 0x1, 0x0);
        gbc.writeMem(0x10ea, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x2d0d);
        EXPECT(gbc.pc(), 0x10ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 030B
        gbc.setState(0xd63, 0x5038, 0xd580, 0x5ed3, 0xac4a, 0x6dc4, 0x0, 0x1);
        gbc.writeMem(0xd63, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x5038);
        EXPECT(gbc.pc(), 0xd65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 030C
        gbc.setState(0xa7bc, 0xe3cb, 0xce30, 0x6831, 0x455c, 0x83af, 0x1, 0x0);
        gbc.writeMem(0xa7bc, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xe3cb);
        EXPECT(gbc.pc(), 0xa7be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7bc), 0xcb);
        EXPECT(gbc.readMem(0xa7bd), 0xbf);
        // CB BF 030D
        gbc.setState(0x8c58, 0x5065, 0xb8e0, 0x4a5a, 0xab31, 0x7c9e, 0x1, 0x0);
        gbc.writeMem(0x8c58, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x5065);
        EXPECT(gbc.pc(), 0x8c5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c58), 0xcb);
        EXPECT(gbc.readMem(0x8c59), 0xbf);
        // CB BF 030E
        gbc.setState(0x2fa4, 0xe785, 0xddc0, 0x3610, 0x2886, 0x8108, 0x1, 0x1);
        gbc.writeMem(0x2fa4, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xe785);
        EXPECT(gbc.pc(), 0x2fa6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 030F
        gbc.setState(0x8ba2, 0xc512, 0xf0b0, 0x9742, 0x11d3, 0xcd6, 0x1, 0x1);
        gbc.writeMem(0x8ba2, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xc512);
        EXPECT(gbc.pc(), 0x8ba4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ba2), 0xcb);
        EXPECT(gbc.readMem(0x8ba3), 0xbf);
        // CB BF 0310
        gbc.setState(0xdbdf, 0x5cc0, 0xb130, 0xfa1c, 0x551d, 0x6593, 0x0, 0x0);
        gbc.writeMem(0xdbdf, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x5cc0);
        EXPECT(gbc.pc(), 0xdbe1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbdf), 0xcb);
        EXPECT(gbc.readMem(0xdbe0), 0xbf);
        // CB BF 0311
        gbc.setState(0x294, 0x10b3, 0xfb0, 0x6e2f, 0xb236, 0x5e03, 0x1, 0x1);
        gbc.writeMem(0x294, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x10b3);
        EXPECT(gbc.pc(), 0x296);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0312
        gbc.setState(0x4438, 0x2547, 0x7040, 0xd63c, 0xf485, 0x7ffa, 0x0, 0x1);
        gbc.writeMem(0x4438, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x2547);
        EXPECT(gbc.pc(), 0x443a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0313
        gbc.setState(0xde55, 0x6b30, 0x65a0, 0x6b95, 0x749, 0x93da, 0x0, 0x1);
        gbc.writeMem(0xde55, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x6b30);
        EXPECT(gbc.pc(), 0xde57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde55), 0xcb);
        EXPECT(gbc.readMem(0xde56), 0xbf);
        // CB BF 0314
        gbc.setState(0x6dfa, 0x9dc0, 0x7f40, 0x40a4, 0xd19c, 0x20f2, 0x1, 0x1);
        gbc.writeMem(0x6dfa, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x9dc0);
        EXPECT(gbc.pc(), 0x6dfc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0316
        gbc.setState(0xa276, 0x1572, 0xe0a0, 0x6eb2, 0x985e, 0x6b96, 0x1, 0x1);
        gbc.writeMem(0xa276, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x1572);
        EXPECT(gbc.pc(), 0xa278);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa276), 0xcb);
        EXPECT(gbc.readMem(0xa277), 0xbf);
        // CB BF 0317
        gbc.setState(0xc70a, 0x2da, 0x4fe0, 0xedbb, 0x6751, 0x86fa, 0x1, 0x1);
        gbc.writeMem(0xc70a, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x2da);
        EXPECT(gbc.pc(), 0xc70c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc70a), 0xcb);
        EXPECT(gbc.readMem(0xc70b), 0xbf);
        // CB BF 0318
        gbc.setState(0xe086, 0x3482, 0x2b20, 0x5d9c, 0x7306, 0xc2a8, 0x1, 0x1);
        gbc.writeMem(0xe086, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x3482);
        EXPECT(gbc.pc(), 0xe088);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe086), 0xcb);
        EXPECT(gbc.readMem(0xe087), 0xbf);
        // CB BF 0319
        gbc.setState(0x272, 0x3674, 0x6990, 0xc915, 0xe896, 0xee3c, 0x0, 0x0);
        gbc.writeMem(0x272, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x3674);
        EXPECT(gbc.pc(), 0x274);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 031A
        gbc.setState(0x8b7, 0x9263, 0x2aa0, 0xf5c, 0x42c6, 0xbcb6, 0x0, 0x0);
        gbc.writeMem(0x8b7, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x9263);
        EXPECT(gbc.pc(), 0x8b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 031B
        gbc.setState(0xb711, 0xcf1a, 0x4f00, 0x896, 0x8bfb, 0x4507, 0x1, 0x1);
        gbc.writeMem(0xb711, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xcf1a);
        EXPECT(gbc.pc(), 0xb713);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb711), 0xcb);
        EXPECT(gbc.readMem(0xb712), 0xbf);
        // CB BF 031C
        gbc.setState(0x8eec, 0xedba, 0xd440, 0xa1f8, 0xc50c, 0x8a72, 0x0, 0x1);
        gbc.writeMem(0x8eec, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xedba);
        EXPECT(gbc.pc(), 0x8eee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8eec), 0xcb);
        EXPECT(gbc.readMem(0x8eed), 0xbf);
        // CB BF 031D
        gbc.setState(0xaa07, 0x80d4, 0xba60, 0x520b, 0x634, 0x99ba, 0x0, 0x0);
        gbc.writeMem(0xaa07, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x80d4);
        EXPECT(gbc.pc(), 0xaa09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa07), 0xcb);
        EXPECT(gbc.readMem(0xaa08), 0xbf);
        // CB BF 031E
        gbc.setState(0xabca, 0x69a1, 0xef00, 0xa190, 0x4cf, 0x9233, 0x0, 0x0);
        gbc.writeMem(0xabca, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x69a1);
        EXPECT(gbc.pc(), 0xabcc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabca), 0xcb);
        EXPECT(gbc.readMem(0xabcb), 0xbf);
        // CB BF 031F
        gbc.setState(0xb5bb, 0x55ea, 0xcaa0, 0x4fa7, 0xf28a, 0x7703, 0x0, 0x0);
        gbc.writeMem(0xb5bb, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x55ea);
        EXPECT(gbc.pc(), 0xb5bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5bb), 0xcb);
        EXPECT(gbc.readMem(0xb5bc), 0xbf);
        // CB BF 0321
        gbc.setState(0x50a5, 0x4653, 0xbc80, 0xa542, 0x5cd, 0xbad3, 0x0, 0x1);
        gbc.writeMem(0x50a5, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x4653);
        EXPECT(gbc.pc(), 0x50a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0322
        gbc.setState(0x4a6e, 0xaa14, 0x4100, 0x6278, 0x1c9, 0xa1c, 0x0, 0x1);
        gbc.writeMem(0x4a6e, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xaa14);
        EXPECT(gbc.pc(), 0x4a70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0323
        gbc.setState(0xa959, 0xbce8, 0x5080, 0xdc2f, 0xff14, 0xe96a, 0x1, 0x0);
        gbc.writeMem(0xa959, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xbce8);
        EXPECT(gbc.pc(), 0xa95b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa959), 0xcb);
        EXPECT(gbc.readMem(0xa95a), 0xbf);
        // CB BF 0324
        gbc.setState(0x177e, 0x4307, 0x3d30, 0x2c59, 0xff86, 0xbac, 0x0, 0x1);
        gbc.writeMem(0x177e, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x4307);
        EXPECT(gbc.pc(), 0x1780);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0325
        gbc.setState(0xa31c, 0x11a1, 0xc360, 0x58f3, 0x9d9e, 0xa516, 0x0, 0x1);
        gbc.writeMem(0xa31c, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x11a1);
        EXPECT(gbc.pc(), 0xa31e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa31c), 0xcb);
        EXPECT(gbc.readMem(0xa31d), 0xbf);
        // CB BF 0326
        gbc.setState(0xa177, 0xe030, 0x1c20, 0x5986, 0x96cd, 0x1c80, 0x1, 0x1);
        gbc.writeMem(0xa177, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xe030);
        EXPECT(gbc.pc(), 0xa179);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa177), 0xcb);
        EXPECT(gbc.readMem(0xa178), 0xbf);
        // CB BF 0327
        gbc.setState(0xdd67, 0xc668, 0x8fc0, 0x236b, 0x51a6, 0xd14d, 0x0, 0x0);
        gbc.writeMem(0xdd67, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xc668);
        EXPECT(gbc.pc(), 0xdd69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd67), 0xcb);
        EXPECT(gbc.readMem(0xdd68), 0xbf);
        // CB BF 0328
        gbc.setState(0x6e01, 0x177c, 0x3f70, 0x114d, 0x60a0, 0x4b36, 0x0, 0x1);
        gbc.writeMem(0x6e01, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x177c);
        EXPECT(gbc.pc(), 0x6e03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0329
        gbc.setState(0x40, 0xc94c, 0xe920, 0x2b10, 0x1aab, 0xe69e, 0x0, 0x1);
        gbc.writeMem(0x40, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xc94c);
        EXPECT(gbc.pc(), 0x42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 032A
        gbc.setState(0xd212, 0x2799, 0xa760, 0x669d, 0x1e4c, 0x2698, 0x0, 0x0);
        gbc.writeMem(0xd212, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x2799);
        EXPECT(gbc.pc(), 0xd214);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd212), 0xcb);
        EXPECT(gbc.readMem(0xd213), 0xbf);
        // CB BF 032B
        gbc.setState(0xe315, 0x15c1, 0x3a50, 0xfd3b, 0xcba7, 0x1cfd, 0x0, 0x1);
        gbc.writeMem(0xe315, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x15c1);
        EXPECT(gbc.pc(), 0xe317);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe315), 0xcb);
        EXPECT(gbc.readMem(0xe316), 0xbf);
        // CB BF 032C
        gbc.setState(0xa963, 0xf4e4, 0xc390, 0x3272, 0x3e4f, 0xc659, 0x1, 0x0);
        gbc.writeMem(0xa963, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xf4e4);
        EXPECT(gbc.pc(), 0xa965);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa963), 0xcb);
        EXPECT(gbc.readMem(0xa964), 0xbf);
        // CB BF 032D
        gbc.setState(0x66ec, 0x7b34, 0xfca0, 0x6c5d, 0xdf5, 0xb5e2, 0x1, 0x0);
        gbc.writeMem(0x66ec, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x7b34);
        EXPECT(gbc.pc(), 0x66ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 032E
        gbc.setState(0xce1, 0x9cb, 0xeb50, 0xa8a7, 0x70fa, 0x80db, 0x1, 0x1);
        gbc.writeMem(0xce1, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x9cb);
        EXPECT(gbc.pc(), 0xce3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 032F
        gbc.setState(0xb58e, 0xb463, 0x3e90, 0xaa62, 0x4b62, 0x3331, 0x0, 0x1);
        gbc.writeMem(0xb58e, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xb463);
        EXPECT(gbc.pc(), 0xb590);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb58e), 0xcb);
        EXPECT(gbc.readMem(0xb58f), 0xbf);
        // CB BF 0330
        gbc.setState(0xc4e3, 0x19f0, 0xc50, 0x6f06, 0x6b3c, 0x116b, 0x1, 0x0);
        gbc.writeMem(0xc4e3, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x19f0);
        EXPECT(gbc.pc(), 0xc4e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4e3), 0xcb);
        EXPECT(gbc.readMem(0xc4e4), 0xbf);
        // CB BF 0331
        gbc.setState(0xbb3f, 0xff9b, 0xd6a0, 0xe66c, 0x420e, 0x928c, 0x0, 0x1);
        gbc.writeMem(0xbb3f, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xff9b);
        EXPECT(gbc.pc(), 0xbb41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb3f), 0xcb);
        EXPECT(gbc.readMem(0xbb40), 0xbf);
        // CB BF 0332
        gbc.setState(0x1c7c, 0x49e1, 0x3dd0, 0x3a4b, 0xc20b, 0x4e43, 0x0, 0x0);
        gbc.writeMem(0x1c7c, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x49e1);
        EXPECT(gbc.pc(), 0x1c7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0333
        gbc.setState(0x91b4, 0x9972, 0xe0d0, 0x2492, 0x69df, 0x2342, 0x0, 0x0);
        gbc.writeMem(0x91b4, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x9972);
        EXPECT(gbc.pc(), 0x91b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91b4), 0xcb);
        EXPECT(gbc.readMem(0x91b5), 0xbf);
        // CB BF 0334
        gbc.setState(0xeb9a, 0xd5f4, 0x7540, 0x4689, 0x89a9, 0x5f31, 0x1, 0x1);
        gbc.writeMem(0xeb9a, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xd5f4);
        EXPECT(gbc.pc(), 0xeb9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb9a), 0xcb);
        EXPECT(gbc.readMem(0xeb9b), 0xbf);
        // CB BF 0335
        gbc.setState(0x64a7, 0x83e6, 0x3cf0, 0xb12, 0xb96d, 0x3b09, 0x1, 0x0);
        gbc.writeMem(0x64a7, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x83e6);
        EXPECT(gbc.pc(), 0x64a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0336
        gbc.setState(0xa311, 0x6cbe, 0x1a90, 0x124a, 0x5279, 0x83f6, 0x0, 0x1);
        gbc.writeMem(0xa311, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x6cbe);
        EXPECT(gbc.pc(), 0xa313);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa311), 0xcb);
        EXPECT(gbc.readMem(0xa312), 0xbf);
        // CB BF 0337
        gbc.setState(0x6f40, 0x3cbb, 0xbeb0, 0xdd4a, 0xac8b, 0xf3c6, 0x1, 0x0);
        gbc.writeMem(0x6f40, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x3cbb);
        EXPECT(gbc.pc(), 0x6f42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0338
        gbc.setState(0x38f0, 0x56c9, 0x2120, 0x3bb3, 0x4eaf, 0x9450, 0x1, 0x1);
        gbc.writeMem(0x38f0, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x56c9);
        EXPECT(gbc.pc(), 0x38f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0339
        gbc.setState(0x4495, 0xb2a5, 0xb7a0, 0x193, 0x55e0, 0xe85f, 0x0, 0x0);
        gbc.writeMem(0x4495, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xb2a5);
        EXPECT(gbc.pc(), 0x4497);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 033A
        gbc.setState(0x7659, 0xb07e, 0x2fa0, 0x476c, 0xad6d, 0x8cf5, 0x1, 0x1);
        gbc.writeMem(0x7659, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xb07e);
        EXPECT(gbc.pc(), 0x765b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 033B
        gbc.setState(0xa56, 0x1601, 0xe5c0, 0xe658, 0x9b4, 0x188e, 0x0, 0x1);
        gbc.writeMem(0xa56, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x1601);
        EXPECT(gbc.pc(), 0xa58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 033D
        gbc.setState(0xb7d3, 0xf6b0, 0x3950, 0x8713, 0x7de, 0x4bd7, 0x0, 0x1);
        gbc.writeMem(0xb7d3, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xf6b0);
        EXPECT(gbc.pc(), 0xb7d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7d3), 0xcb);
        EXPECT(gbc.readMem(0xb7d4), 0xbf);
        // CB BF 033E
        gbc.setState(0x17af, 0x2772, 0xbcb0, 0xd2c6, 0x7c66, 0x3e88, 0x1, 0x0);
        gbc.writeMem(0x17af, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x2772);
        EXPECT(gbc.pc(), 0x17b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 033F
        gbc.setState(0x8892, 0x93eb, 0x55d0, 0x60cf, 0x7fe0, 0x843b, 0x1, 0x1);
        gbc.writeMem(0x8892, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x93eb);
        EXPECT(gbc.pc(), 0x8894);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8892), 0xcb);
        EXPECT(gbc.readMem(0x8893), 0xbf);
        // CB BF 0340
        gbc.setState(0x7fe4, 0x71ec, 0xea40, 0x8a9c, 0x873f, 0x9c03, 0x1, 0x0);
        gbc.writeMem(0x7fe4, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x71ec);
        EXPECT(gbc.pc(), 0x7fe6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0341
        gbc.setState(0x95e9, 0x1110, 0x1b30, 0x6eaa, 0x3aa, 0x6e3, 0x1, 0x0);
        gbc.writeMem(0x95e9, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x1110);
        EXPECT(gbc.pc(), 0x95eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95e9), 0xcb);
        EXPECT(gbc.readMem(0x95ea), 0xbf);
        // CB BF 0342
        gbc.setState(0xc2f0, 0x185f, 0x4fc0, 0x4509, 0x7c39, 0x48d7, 0x1, 0x1);
        gbc.writeMem(0xc2f0, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x185f);
        EXPECT(gbc.pc(), 0xc2f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2f0), 0xcb);
        EXPECT(gbc.readMem(0xc2f1), 0xbf);
        // CB BF 0344
        gbc.setState(0xe7e6, 0x1da7, 0xeaf0, 0xeadc, 0xda79, 0x3c75, 0x1, 0x0);
        gbc.writeMem(0xe7e6, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x1da7);
        EXPECT(gbc.pc(), 0xe7e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7e6), 0xcb);
        EXPECT(gbc.readMem(0xe7e7), 0xbf);
        // CB BF 0345
        gbc.setState(0xa833, 0xc512, 0x88a0, 0xd7cf, 0xf5ac, 0xc044, 0x0, 0x0);
        gbc.writeMem(0xa833, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xc512);
        EXPECT(gbc.pc(), 0xa835);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa833), 0xcb);
        EXPECT(gbc.readMem(0xa834), 0xbf);
        // CB BF 0346
        gbc.setState(0x6f3b, 0xfee1, 0x260, 0x3fd6, 0x438c, 0xe80a, 0x0, 0x0);
        gbc.writeMem(0x6f3b, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xfee1);
        EXPECT(gbc.pc(), 0x6f3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0347
        gbc.setState(0xe274, 0x5f41, 0x4780, 0x93f0, 0x3783, 0x9983, 0x0, 0x1);
        gbc.writeMem(0xe274, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x5f41);
        EXPECT(gbc.pc(), 0xe276);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe274), 0xcb);
        EXPECT(gbc.readMem(0xe275), 0xbf);
        // CB BF 0348
        gbc.setState(0x2bfb, 0xdc0b, 0x8160, 0x7c5f, 0x713b, 0x7a71, 0x1, 0x0);
        gbc.writeMem(0x2bfb, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xdc0b);
        EXPECT(gbc.pc(), 0x2bfd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0349
        gbc.setState(0x20bc, 0xbafc, 0xcd00, 0x5408, 0xc5cb, 0xcb98, 0x0, 0x1);
        gbc.writeMem(0x20bc, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xbafc);
        EXPECT(gbc.pc(), 0x20be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 034A
        gbc.setState(0xe227, 0x300c, 0xa450, 0x3e61, 0x5029, 0xd79c, 0x1, 0x1);
        gbc.writeMem(0xe227, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x300c);
        EXPECT(gbc.pc(), 0xe229);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe227), 0xcb);
        EXPECT(gbc.readMem(0xe228), 0xbf);
        // CB BF 034B
        gbc.setState(0xeb2f, 0xf952, 0x8b20, 0xd6f2, 0xb3e9, 0x1266, 0x1, 0x1);
        gbc.writeMem(0xeb2f, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xf952);
        EXPECT(gbc.pc(), 0xeb31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb2f), 0xcb);
        EXPECT(gbc.readMem(0xeb30), 0xbf);
        // CB BF 034C
        gbc.setState(0x8c7d, 0xe72f, 0x2ff0, 0x7c8a, 0x6195, 0xad2e, 0x0, 0x0);
        gbc.writeMem(0x8c7d, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xe72f);
        EXPECT(gbc.pc(), 0x8c7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c7d), 0xcb);
        EXPECT(gbc.readMem(0x8c7e), 0xbf);
        // CB BF 034D
        gbc.setState(0x734a, 0x8fcd, 0xec20, 0xc96d, 0x8a0e, 0xbbc8, 0x1, 0x1);
        gbc.writeMem(0x734a, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x8fcd);
        EXPECT(gbc.pc(), 0x734c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 034E
        gbc.setState(0x7042, 0x1f79, 0x19d0, 0xfe8b, 0x7695, 0xbac0, 0x0, 0x0);
        gbc.writeMem(0x7042, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x1f79);
        EXPECT(gbc.pc(), 0x7044);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 034F
        gbc.setState(0xd8d1, 0x8f17, 0x3950, 0x93f8, 0x1da1, 0xf80c, 0x0, 0x1);
        gbc.writeMem(0xd8d1, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x8f17);
        EXPECT(gbc.pc(), 0xd8d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8d1), 0xcb);
        EXPECT(gbc.readMem(0xd8d2), 0xbf);
        // CB BF 0350
        gbc.setState(0x5ef5, 0x4715, 0x4b0, 0xc2c1, 0x9c7a, 0xfc65, 0x1, 0x0);
        gbc.writeMem(0x5ef5, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x4715);
        EXPECT(gbc.pc(), 0x5ef7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0351
        gbc.setState(0x10e3, 0x924e, 0xbb90, 0xb224, 0xbf9e, 0xd888, 0x0, 0x1);
        gbc.writeMem(0x10e3, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x924e);
        EXPECT(gbc.pc(), 0x10e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0352
        gbc.setState(0xba7d, 0xe239, 0x7940, 0x8089, 0x879d, 0x8e0d, 0x1, 0x1);
        gbc.writeMem(0xba7d, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xe239);
        EXPECT(gbc.pc(), 0xba7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba7d), 0xcb);
        EXPECT(gbc.readMem(0xba7e), 0xbf);
        // CB BF 0353
        gbc.setState(0x6ee, 0x1f44, 0x9ef0, 0x834e, 0xa71a, 0x7a0f, 0x0, 0x1);
        gbc.writeMem(0x6ee, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x1f44);
        EXPECT(gbc.pc(), 0x6f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0354
        gbc.setState(0x4f4e, 0x3112, 0x8b00, 0x6e7b, 0x7e4c, 0xd407, 0x0, 0x1);
        gbc.writeMem(0x4f4e, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x3112);
        EXPECT(gbc.pc(), 0x4f50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0355
        gbc.setState(0x7103, 0x9926, 0x1f10, 0xae0e, 0x73e6, 0xdfd7, 0x1, 0x1);
        gbc.writeMem(0x7103, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x9926);
        EXPECT(gbc.pc(), 0x7105);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0356
        gbc.setState(0x945a, 0x1a84, 0xfb20, 0xed83, 0x7ab2, 0x5c7c, 0x0, 0x1);
        gbc.writeMem(0x945a, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x1a84);
        EXPECT(gbc.pc(), 0x945c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x945a), 0xcb);
        EXPECT(gbc.readMem(0x945b), 0xbf);
        // CB BF 0357
        gbc.setState(0x43ea, 0x4bc1, 0x6f30, 0xba8, 0xfa51, 0x79de, 0x0, 0x0);
        gbc.writeMem(0x43ea, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x4bc1);
        EXPECT(gbc.pc(), 0x43ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0358
        gbc.setState(0xf88, 0xbb4f, 0xc450, 0x290a, 0xe15c, 0xb81b, 0x1, 0x0);
        gbc.writeMem(0xf88, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xbb4f);
        EXPECT(gbc.pc(), 0xf8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0359
        gbc.setState(0x9500, 0x6bc1, 0x6710, 0xe76b, 0xe243, 0xd483, 0x1, 0x0);
        gbc.writeMem(0x9500, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x6bc1);
        EXPECT(gbc.pc(), 0x9502);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9500), 0xcb);
        EXPECT(gbc.readMem(0x9501), 0xbf);
        // CB BF 035A
        gbc.setState(0x8b6a, 0x34c, 0x9ac0, 0x84f5, 0xd218, 0x2f69, 0x1, 0x1);
        gbc.writeMem(0x8b6a, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x34c);
        EXPECT(gbc.pc(), 0x8b6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b6a), 0xcb);
        EXPECT(gbc.readMem(0x8b6b), 0xbf);
        // CB BF 035B
        gbc.setState(0x4bb9, 0xd313, 0xbc30, 0xc3b, 0xd3f9, 0xa9c6, 0x0, 0x1);
        gbc.writeMem(0x4bb9, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xd313);
        EXPECT(gbc.pc(), 0x4bbb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 035C
        gbc.setState(0xea93, 0x72e7, 0xe6e0, 0xcbab, 0xc9ce, 0x5949, 0x0, 0x1);
        gbc.writeMem(0xea93, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x72e7);
        EXPECT(gbc.pc(), 0xea95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea93), 0xcb);
        EXPECT(gbc.readMem(0xea94), 0xbf);
        // CB BF 035D
        gbc.setState(0x9d56, 0xee95, 0x40a0, 0xd27b, 0x6934, 0xbd54, 0x0, 0x0);
        gbc.writeMem(0x9d56, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xee95);
        EXPECT(gbc.pc(), 0x9d58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d56), 0xcb);
        EXPECT(gbc.readMem(0x9d57), 0xbf);
        // CB BF 035E
        gbc.setState(0x70a3, 0x3ca5, 0xd0c0, 0x2a0a, 0x91f2, 0x1adc, 0x0, 0x1);
        gbc.writeMem(0x70a3, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x3ca5);
        EXPECT(gbc.pc(), 0x70a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 035F
        gbc.setState(0x997c, 0x454, 0xa1a0, 0xf7c4, 0x4c02, 0x17b, 0x1, 0x0);
        gbc.writeMem(0x997c, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x454);
        EXPECT(gbc.pc(), 0x997e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x997c), 0xcb);
        EXPECT(gbc.readMem(0x997d), 0xbf);
        // CB BF 0360
        gbc.setState(0x7fec, 0xc051, 0xe6d0, 0x9f83, 0xc27a, 0x9614, 0x1, 0x0);
        gbc.writeMem(0x7fec, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xc051);
        EXPECT(gbc.pc(), 0x7fee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0361
        gbc.setState(0x2f31, 0xcb38, 0x420, 0x5550, 0x458f, 0xcb91, 0x0, 0x1);
        gbc.writeMem(0x2f31, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xcb38);
        EXPECT(gbc.pc(), 0x2f33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0362
        gbc.setState(0xa729, 0x486f, 0x1c90, 0x2033, 0x138a, 0x8895, 0x0, 0x1);
        gbc.writeMem(0xa729, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x486f);
        EXPECT(gbc.pc(), 0xa72b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa729), 0xcb);
        EXPECT(gbc.readMem(0xa72a), 0xbf);
        // CB BF 0363
        gbc.setState(0x5b4e, 0xda07, 0x4d10, 0x6c42, 0x2550, 0xd9b0, 0x1, 0x0);
        gbc.writeMem(0x5b4e, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xda07);
        EXPECT(gbc.pc(), 0x5b50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0364
        gbc.setState(0xe93, 0x293c, 0x6450, 0xe9ca, 0xdae8, 0x93f7, 0x0, 0x1);
        gbc.writeMem(0xe93, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x293c);
        EXPECT(gbc.pc(), 0xe95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0365
        gbc.setState(0x57ef, 0xdd5d, 0x5650, 0x1977, 0x12c8, 0x7bf2, 0x1, 0x0);
        gbc.writeMem(0x57ef, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xdd5d);
        EXPECT(gbc.pc(), 0x57f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0366
        gbc.setState(0x7e68, 0x8c94, 0x720, 0x56e5, 0x1186, 0x8155, 0x0, 0x0);
        gbc.writeMem(0x7e68, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x8c94);
        EXPECT(gbc.pc(), 0x7e6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0368
        gbc.setState(0x3b5f, 0x6536, 0xedc0, 0x1c52, 0x5e08, 0x4197, 0x0, 0x1);
        gbc.writeMem(0x3b5f, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x6536);
        EXPECT(gbc.pc(), 0x3b61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0369
        gbc.setState(0x761f, 0x9e87, 0x7570, 0xe37f, 0xc67f, 0xd15, 0x0, 0x1);
        gbc.writeMem(0x761f, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x9e87);
        EXPECT(gbc.pc(), 0x7621);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 036A
        gbc.setState(0x78a4, 0x92ad, 0xfd30, 0x583e, 0x9b3, 0xc731, 0x0, 0x0);
        gbc.writeMem(0x78a4, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x92ad);
        EXPECT(gbc.pc(), 0x78a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 036B
        gbc.setState(0xcb78, 0x7e13, 0xbc60, 0x4e44, 0x97b1, 0xcf65, 0x0, 0x1);
        gbc.writeMem(0xcb78, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x7e13);
        EXPECT(gbc.pc(), 0xcb7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb78), 0xcb);
        EXPECT(gbc.readMem(0xcb79), 0xbf);
        // CB BF 036C
        gbc.setState(0x69bf, 0x18e, 0x970, 0x93f, 0x5c76, 0x121f, 0x0, 0x0);
        gbc.writeMem(0x69bf, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x18e);
        EXPECT(gbc.pc(), 0x69c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 036E
        gbc.setState(0x9b0f, 0xf498, 0x6580, 0xad83, 0x322a, 0x9d5e, 0x0, 0x0);
        gbc.writeMem(0x9b0f, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xf498);
        EXPECT(gbc.pc(), 0x9b11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b0f), 0xcb);
        EXPECT(gbc.readMem(0x9b10), 0xbf);
        // CB BF 036F
        gbc.setState(0xae5c, 0x1036, 0xf770, 0x9f65, 0xf24e, 0xef5, 0x1, 0x0);
        gbc.writeMem(0xae5c, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x1036);
        EXPECT(gbc.pc(), 0xae5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae5c), 0xcb);
        EXPECT(gbc.readMem(0xae5d), 0xbf);
        // CB BF 0370
        gbc.setState(0x8770, 0xa42a, 0x73a0, 0x8ab1, 0x2565, 0x4797, 0x0, 0x1);
        gbc.writeMem(0x8770, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xa42a);
        EXPECT(gbc.pc(), 0x8772);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8770), 0xcb);
        EXPECT(gbc.readMem(0x8771), 0xbf);
        // CB BF 0372
        gbc.setState(0xbad4, 0x76f5, 0xb10, 0xb200, 0x9df0, 0xd3c6, 0x0, 0x1);
        gbc.writeMem(0xbad4, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x76f5);
        EXPECT(gbc.pc(), 0xbad6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbad4), 0xcb);
        EXPECT(gbc.readMem(0xbad5), 0xbf);
        // CB BF 0373
        gbc.setState(0xd262, 0xb8f7, 0xe810, 0xc460, 0x73b8, 0x458d, 0x0, 0x1);
        gbc.writeMem(0xd262, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xb8f7);
        EXPECT(gbc.pc(), 0xd264);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd262), 0xcb);
        EXPECT(gbc.readMem(0xd263), 0xbf);
        // CB BF 0374
        gbc.setState(0xe2a0, 0xec30, 0xf3d0, 0xd134, 0xca3, 0x12f2, 0x1, 0x0);
        gbc.writeMem(0xe2a0, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xec30);
        EXPECT(gbc.pc(), 0xe2a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2a0), 0xcb);
        EXPECT(gbc.readMem(0xe2a1), 0xbf);
        // CB BF 0375
        gbc.setState(0x86c3, 0xc9d, 0x2920, 0xdf87, 0x5e25, 0x6d88, 0x1, 0x1);
        gbc.writeMem(0x86c3, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xc9d);
        EXPECT(gbc.pc(), 0x86c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86c3), 0xcb);
        EXPECT(gbc.readMem(0x86c4), 0xbf);
        // CB BF 0376
        gbc.setState(0x761e, 0x2854, 0x3f50, 0x78b7, 0x199c, 0x403b, 0x0, 0x1);
        gbc.writeMem(0x761e, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x2854);
        EXPECT(gbc.pc(), 0x7620);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0377
        gbc.setState(0xa220, 0xa6b8, 0xf070, 0x8044, 0x9c66, 0x6c44, 0x0, 0x0);
        gbc.writeMem(0xa220, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xa6b8);
        EXPECT(gbc.pc(), 0xa222);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa220), 0xcb);
        EXPECT(gbc.readMem(0xa221), 0xbf);
        // CB BF 0378
        gbc.setState(0x63eb, 0xa62c, 0x4b20, 0x4c71, 0x81fe, 0x5b97, 0x1, 0x0);
        gbc.writeMem(0x63eb, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xa62c);
        EXPECT(gbc.pc(), 0x63ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0379
        gbc.setState(0x7eb9, 0xcf23, 0x2c60, 0x3ead, 0x860, 0xe14f, 0x0, 0x1);
        gbc.writeMem(0x7eb9, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xcf23);
        EXPECT(gbc.pc(), 0x7ebb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 037A
        gbc.setState(0xcb69, 0x1673, 0x5e50, 0x394f, 0x28ba, 0x87e0, 0x1, 0x1);
        gbc.writeMem(0xcb69, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x1673);
        EXPECT(gbc.pc(), 0xcb6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb69), 0xcb);
        EXPECT(gbc.readMem(0xcb6a), 0xbf);
        // CB BF 037B
        gbc.setState(0xd9ba, 0xde4c, 0x9800, 0xda2e, 0x7657, 0xa46f, 0x1, 0x1);
        gbc.writeMem(0xd9ba, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xde4c);
        EXPECT(gbc.pc(), 0xd9bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9ba), 0xcb);
        EXPECT(gbc.readMem(0xd9bb), 0xbf);
        // CB BF 037C
        gbc.setState(0xdaa5, 0x1e49, 0x6db0, 0x68bd, 0xb9c7, 0xdc0f, 0x1, 0x1);
        gbc.writeMem(0xdaa5, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x1e49);
        EXPECT(gbc.pc(), 0xdaa7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdaa5), 0xcb);
        EXPECT(gbc.readMem(0xdaa6), 0xbf);
        // CB BF 037D
        gbc.setState(0xa3f2, 0xcbf1, 0xfe20, 0xab8, 0xa4d3, 0xd3a4, 0x0, 0x0);
        gbc.writeMem(0xa3f2, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xcbf1);
        EXPECT(gbc.pc(), 0xa3f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3f2), 0xcb);
        EXPECT(gbc.readMem(0xa3f3), 0xbf);
        // CB BF 037E
        gbc.setState(0x4140, 0x22b3, 0x8ff0, 0xc1e, 0x204d, 0x67bf, 0x1, 0x0);
        gbc.writeMem(0x4140, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x22b3);
        EXPECT(gbc.pc(), 0x4142);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 037F
        gbc.setState(0x3102, 0x35b4, 0xa7e0, 0x6402, 0x8806, 0xd664, 0x1, 0x1);
        gbc.writeMem(0x3102, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x35b4);
        EXPECT(gbc.pc(), 0x3104);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0380
        gbc.setState(0xb606, 0x902e, 0x7010, 0x8246, 0x53ef, 0x353d, 0x0, 0x1);
        gbc.writeMem(0xb606, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x902e);
        EXPECT(gbc.pc(), 0xb608);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb606), 0xcb);
        EXPECT(gbc.readMem(0xb607), 0xbf);
        // CB BF 0381
        gbc.setState(0xae6b, 0xe802, 0x3c90, 0xa055, 0x1169, 0xfa34, 0x1, 0x1);
        gbc.writeMem(0xae6b, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xe802);
        EXPECT(gbc.pc(), 0xae6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae6b), 0xcb);
        EXPECT(gbc.readMem(0xae6c), 0xbf);
        // CB BF 0382
        gbc.setState(0xc963, 0xc652, 0x1360, 0xf90, 0x617c, 0x863c, 0x1, 0x0);
        gbc.writeMem(0xc963, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xc652);
        EXPECT(gbc.pc(), 0xc965);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc963), 0xcb);
        EXPECT(gbc.readMem(0xc964), 0xbf);
        // CB BF 0383
        gbc.setState(0x6fb1, 0xf423, 0xfb80, 0x2898, 0x56ea, 0xbba3, 0x0, 0x0);
        gbc.writeMem(0x6fb1, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xf423);
        EXPECT(gbc.pc(), 0x6fb3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0384
        gbc.setState(0xe044, 0xa6b9, 0x5a20, 0xbc27, 0x53cd, 0x291a, 0x1, 0x0);
        gbc.writeMem(0xe044, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xa6b9);
        EXPECT(gbc.pc(), 0xe046);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe044), 0xcb);
        EXPECT(gbc.readMem(0xe045), 0xbf);
        // CB BF 0385
        gbc.setState(0x5e0b, 0x87ab, 0x2720, 0x65d7, 0x89cb, 0xd545, 0x1, 0x1);
        gbc.writeMem(0x5e0b, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x87ab);
        EXPECT(gbc.pc(), 0x5e0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0386
        gbc.setState(0xc2e2, 0x2f0b, 0x9010, 0x47bb, 0x860c, 0x7c06, 0x1, 0x0);
        gbc.writeMem(0xc2e2, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x2f0b);
        EXPECT(gbc.pc(), 0xc2e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2e2), 0xcb);
        EXPECT(gbc.readMem(0xc2e3), 0xbf);
        // CB BF 0387
        gbc.setState(0xa217, 0x6b73, 0x4850, 0xce9b, 0x1cb1, 0x9de4, 0x0, 0x0);
        gbc.writeMem(0xa217, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x6b73);
        EXPECT(gbc.pc(), 0xa219);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa217), 0xcb);
        EXPECT(gbc.readMem(0xa218), 0xbf);
        // CB BF 0388
        gbc.setState(0x63a3, 0xc0a1, 0xfb50, 0x73d6, 0x45ac, 0xd0bd, 0x1, 0x0);
        gbc.writeMem(0x63a3, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xc0a1);
        EXPECT(gbc.pc(), 0x63a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0389
        gbc.setState(0x5fa0, 0xea30, 0xcfc0, 0x5db6, 0xee14, 0x40c4, 0x1, 0x1);
        gbc.writeMem(0x5fa0, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xea30);
        EXPECT(gbc.pc(), 0x5fa2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 038B
        gbc.setState(0x9c2e, 0xb5a6, 0x99b0, 0x4180, 0x2907, 0xaefd, 0x1, 0x1);
        gbc.writeMem(0x9c2e, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xb5a6);
        EXPECT(gbc.pc(), 0x9c30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c2e), 0xcb);
        EXPECT(gbc.readMem(0x9c2f), 0xbf);
        // CB BF 038C
        gbc.setState(0xa676, 0x1a94, 0x7a40, 0x2cc0, 0x85a1, 0x9bdc, 0x0, 0x0);
        gbc.writeMem(0xa676, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x1a94);
        EXPECT(gbc.pc(), 0xa678);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa676), 0xcb);
        EXPECT(gbc.readMem(0xa677), 0xbf);
        // CB BF 038D
        gbc.setState(0xce69, 0x172e, 0x6340, 0xdafe, 0xafc6, 0x9839, 0x0, 0x1);
        gbc.writeMem(0xce69, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x172e);
        EXPECT(gbc.pc(), 0xce6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce69), 0xcb);
        EXPECT(gbc.readMem(0xce6a), 0xbf);
        // CB BF 038E
        gbc.setState(0x7282, 0x48de, 0x7e30, 0x3373, 0xe621, 0x7b60, 0x1, 0x0);
        gbc.writeMem(0x7282, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x48de);
        EXPECT(gbc.pc(), 0x7284);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 038F
        gbc.setState(0x6e78, 0xc48c, 0xbb50, 0xd6aa, 0x33d8, 0x180c, 0x0, 0x0);
        gbc.writeMem(0x6e78, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xc48c);
        EXPECT(gbc.pc(), 0x6e7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0390
        gbc.setState(0xb542, 0xb3c2, 0x2200, 0xd4f9, 0x5127, 0xae1e, 0x0, 0x0);
        gbc.writeMem(0xb542, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xb3c2);
        EXPECT(gbc.pc(), 0xb544);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb542), 0xcb);
        EXPECT(gbc.readMem(0xb543), 0xbf);
        // CB BF 0391
        gbc.setState(0x4fb5, 0xb63e, 0xbba0, 0x602d, 0x140b, 0x4e46, 0x0, 0x1);
        gbc.writeMem(0x4fb5, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xb63e);
        EXPECT(gbc.pc(), 0x4fb7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0392
        gbc.setState(0x9f5f, 0xf99, 0xf980, 0x267d, 0x1ba8, 0x23a0, 0x1, 0x1);
        gbc.writeMem(0x9f5f, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xf99);
        EXPECT(gbc.pc(), 0x9f61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f5f), 0xcb);
        EXPECT(gbc.readMem(0x9f60), 0xbf);
        // CB BF 0393
        gbc.setState(0x57c8, 0xd3a0, 0x3e20, 0xdcc2, 0xb7fc, 0x9c15, 0x0, 0x0);
        gbc.writeMem(0x57c8, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xd3a0);
        EXPECT(gbc.pc(), 0x57ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0394
        gbc.setState(0xa807, 0x8d5c, 0x9540, 0xb87, 0x59db, 0x3e4f, 0x0, 0x0);
        gbc.writeMem(0xa807, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x8d5c);
        EXPECT(gbc.pc(), 0xa809);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa807), 0xcb);
        EXPECT(gbc.readMem(0xa808), 0xbf);
        // CB BF 0395
        gbc.setState(0x881a, 0x66e6, 0x3c0, 0x17ed, 0xc2bc, 0x2fea, 0x0, 0x0);
        gbc.writeMem(0x881a, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x66e6);
        EXPECT(gbc.pc(), 0x881c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x881a), 0xcb);
        EXPECT(gbc.readMem(0x881b), 0xbf);
        // CB BF 0396
        gbc.setState(0x1ebc, 0x83c3, 0x1b10, 0x1f5c, 0x4fe0, 0xb48e, 0x1, 0x0);
        gbc.writeMem(0x1ebc, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x83c3);
        EXPECT(gbc.pc(), 0x1ebe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0397
        gbc.setState(0x1d5b, 0x88a0, 0xf600, 0x798f, 0x5684, 0xb44d, 0x1, 0x1);
        gbc.writeMem(0x1d5b, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x88a0);
        EXPECT(gbc.pc(), 0x1d5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 0398
        gbc.setState(0x644b, 0x3b15, 0xa410, 0xdde3, 0xaee, 0x6812, 0x0, 0x1);
        gbc.writeMem(0x644b, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x3b15);
        EXPECT(gbc.pc(), 0x644d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 0399
        gbc.setState(0xefe6, 0xe2d9, 0x6d90, 0xdabd, 0xfe39, 0x54cf, 0x1, 0x1);
        gbc.writeMem(0xefe6, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xe2d9);
        EXPECT(gbc.pc(), 0xefe8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefe6), 0xcb);
        EXPECT(gbc.readMem(0xefe7), 0xbf);
        // CB BF 039A
        gbc.setState(0x2486, 0x3d98, 0x2990, 0xd988, 0xe2bf, 0xc1fb, 0x1, 0x1);
        gbc.writeMem(0x2486, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x3d98);
        EXPECT(gbc.pc(), 0x2488);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 039B
        gbc.setState(0xdbe4, 0xd91, 0xf2d0, 0x27a6, 0xece, 0xc705, 0x1, 0x1);
        gbc.writeMem(0xdbe4, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xd91);
        EXPECT(gbc.pc(), 0xdbe6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbe4), 0xcb);
        EXPECT(gbc.readMem(0xdbe5), 0xbf);
        // CB BF 039C
        gbc.setState(0x7513, 0xb089, 0x6090, 0x1d22, 0x3653, 0x393e, 0x1, 0x1);
        gbc.writeMem(0x7513, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xb089);
        EXPECT(gbc.pc(), 0x7515);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 039D
        gbc.setState(0xb19b, 0x51ac, 0x74e0, 0xa84f, 0x459c, 0x42ac, 0x1, 0x0);
        gbc.writeMem(0xb19b, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x51ac);
        EXPECT(gbc.pc(), 0xb19d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb19b), 0xcb);
        EXPECT(gbc.readMem(0xb19c), 0xbf);
        // CB BF 039E
        gbc.setState(0xe98e, 0xea1a, 0x4230, 0xaad0, 0x56ec, 0x5386, 0x1, 0x1);
        gbc.writeMem(0xe98e, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xea1a);
        EXPECT(gbc.pc(), 0xe990);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe98e), 0xcb);
        EXPECT(gbc.readMem(0xe98f), 0xbf);
        // CB BF 039F
        gbc.setState(0x501a, 0xc4c0, 0x3b70, 0x4bf0, 0x4403, 0x1680, 0x1, 0x1);
        gbc.writeMem(0x501a, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xc4c0);
        EXPECT(gbc.pc(), 0x501c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 03A0
        gbc.setState(0x2f29, 0xe1b5, 0x2260, 0x690f, 0x17db, 0xb05e, 0x0, 0x1);
        gbc.writeMem(0x2f29, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xe1b5);
        EXPECT(gbc.pc(), 0x2f2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 03A1
        gbc.setState(0xe230, 0xabba, 0x8b90, 0x9a, 0x5565, 0x28e0, 0x0, 0x0);
        gbc.writeMem(0xe230, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xabba);
        EXPECT(gbc.pc(), 0xe232);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe230), 0xcb);
        EXPECT(gbc.readMem(0xe231), 0xbf);
        // CB BF 03A2
        gbc.setState(0x8c86, 0x30cc, 0x7210, 0x3fe4, 0x95d1, 0x1d42, 0x0, 0x1);
        gbc.writeMem(0x8c86, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x30cc);
        EXPECT(gbc.pc(), 0x8c88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c86), 0xcb);
        EXPECT(gbc.readMem(0x8c87), 0xbf);
        // CB BF 03A3
        gbc.setState(0x3342, 0x29c3, 0x85a0, 0x59b, 0x2315, 0x4edc, 0x1, 0x0);
        gbc.writeMem(0x3342, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x29c3);
        EXPECT(gbc.pc(), 0x3344);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 03A4
        gbc.setState(0x74c0, 0x38da, 0xe30, 0x8ce7, 0xf89e, 0xccb5, 0x0, 0x0);
        gbc.writeMem(0x74c0, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x38da);
        EXPECT(gbc.pc(), 0x74c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 03A5
        gbc.setState(0xd47d, 0xaaea, 0x84b0, 0x2706, 0x72f3, 0x1154, 0x1, 0x1);
        gbc.writeMem(0xd47d, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xaaea);
        EXPECT(gbc.pc(), 0xd47f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd47d), 0xcb);
        EXPECT(gbc.readMem(0xd47e), 0xbf);
        // CB BF 03A6
        gbc.setState(0x47a4, 0xd893, 0x2260, 0x744e, 0x8256, 0xb87f, 0x0, 0x1);
        gbc.writeMem(0x47a4, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xd893);
        EXPECT(gbc.pc(), 0x47a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 03A7
        gbc.setState(0x268e, 0x8404, 0x52a0, 0xda76, 0xefb3, 0x39e9, 0x1, 0x0);
        gbc.writeMem(0x268e, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x8404);
        EXPECT(gbc.pc(), 0x2690);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 03A8
        gbc.setState(0x8746, 0x4330, 0x10a0, 0xd946, 0xa104, 0x62a1, 0x0, 0x1);
        gbc.writeMem(0x8746, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x4330);
        EXPECT(gbc.pc(), 0x8748);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8746), 0xcb);
        EXPECT(gbc.readMem(0x8747), 0xbf);
        // CB BF 03A9
        gbc.setState(0x62f0, 0x5bb0, 0xe290, 0x6b0f, 0x1f69, 0x1b04, 0x0, 0x0);
        gbc.writeMem(0x62f0, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x5bb0);
        EXPECT(gbc.pc(), 0x62f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 03AA
        gbc.setState(0x79e8, 0x267d, 0xad20, 0x9dbb, 0x6726, 0x62a8, 0x0, 0x0);
        gbc.writeMem(0x79e8, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x267d);
        EXPECT(gbc.pc(), 0x79ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 03AB
        gbc.setState(0x592a, 0xdb35, 0x84e0, 0x6745, 0x1fe4, 0x4054, 0x1, 0x1);
        gbc.writeMem(0x592a, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xdb35);
        EXPECT(gbc.pc(), 0x592c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 03AC
        gbc.setState(0x7aea, 0x19ff, 0x44d0, 0xe3bb, 0xd387, 0x91a5, 0x1, 0x1);
        gbc.writeMem(0x7aea, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x19ff);
        EXPECT(gbc.pc(), 0x7aec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 03AD
        gbc.setState(0xe91, 0xf617, 0xfb60, 0x5250, 0xa9a6, 0x47f0, 0x0, 0x1);
        gbc.writeMem(0xe91, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xf617);
        EXPECT(gbc.pc(), 0xe93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 03AE
        gbc.setState(0x84ab, 0x4f88, 0x8050, 0xf129, 0x5090, 0x5f08, 0x0, 0x0);
        gbc.writeMem(0x84ab, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x4f88);
        EXPECT(gbc.pc(), 0x84ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84ab), 0xcb);
        EXPECT(gbc.readMem(0x84ac), 0xbf);
        // CB BF 03AF
        gbc.setState(0x6da3, 0x937c, 0x1780, 0x90cb, 0xc698, 0x12fa, 0x0, 0x0);
        gbc.writeMem(0x6da3, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x937c);
        EXPECT(gbc.pc(), 0x6da5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 03B0
        gbc.setState(0x985d, 0xe6c, 0xc880, 0x647d, 0x951c, 0x4348, 0x1, 0x0);
        gbc.writeMem(0x985d, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xe6c);
        EXPECT(gbc.pc(), 0x985f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x985d), 0xcb);
        EXPECT(gbc.readMem(0x985e), 0xbf);
        // CB BF 03B1
        gbc.setState(0x9533, 0x27c0, 0x28b0, 0xc2d4, 0x9999, 0x5858, 0x1, 0x0);
        gbc.writeMem(0x9533, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x27c0);
        EXPECT(gbc.pc(), 0x9535);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9533), 0xcb);
        EXPECT(gbc.readMem(0x9534), 0xbf);
        // CB BF 03B2
        gbc.setState(0x1fbf, 0x35cb, 0x1760, 0x2854, 0xf7ea, 0x4a6f, 0x0, 0x0);
        gbc.writeMem(0x1fbf, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x35cb);
        EXPECT(gbc.pc(), 0x1fc1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 03B3
        gbc.setState(0xc09, 0x6e6c, 0x3a00, 0x4721, 0xcb3c, 0x963, 0x1, 0x0);
        gbc.writeMem(0xc09, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x6e6c);
        EXPECT(gbc.pc(), 0xc0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 03B4
        gbc.setState(0x19fa, 0x88f1, 0x2890, 0x4f8e, 0xc6a0, 0x8b6d, 0x1, 0x0);
        gbc.writeMem(0x19fa, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x88f1);
        EXPECT(gbc.pc(), 0x19fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 03B5
        gbc.setState(0x98c0, 0x16e2, 0x9e20, 0x6156, 0xa0d2, 0xe7b8, 0x1, 0x1);
        gbc.writeMem(0x98c0, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x16e2);
        EXPECT(gbc.pc(), 0x98c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98c0), 0xcb);
        EXPECT(gbc.readMem(0x98c1), 0xbf);
        // CB BF 03B6
        gbc.setState(0x481b, 0xd779, 0x4f70, 0x4f8, 0x9b90, 0x1aef, 0x1, 0x1);
        gbc.writeMem(0x481b, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xd779);
        EXPECT(gbc.pc(), 0x481d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 03B7
        gbc.setState(0x7e81, 0xe283, 0x9e70, 0x993f, 0xffdc, 0x75fe, 0x0, 0x1);
        gbc.writeMem(0x7e81, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xe283);
        EXPECT(gbc.pc(), 0x7e83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 03B9
        gbc.setState(0x2033, 0xc852, 0xc140, 0x3ef, 0xdd2e, 0x1b26, 0x1, 0x1);
        gbc.writeMem(0x2033, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xc852);
        EXPECT(gbc.pc(), 0x2035);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 03BA
        gbc.setState(0x1a9c, 0x32b4, 0xee60, 0xafa0, 0x78dc, 0x8ec9, 0x1, 0x0);
        gbc.writeMem(0x1a9c, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x32b4);
        EXPECT(gbc.pc(), 0x1a9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 03BB
        gbc.setState(0x7d0a, 0x3081, 0x2920, 0x6a2, 0x81f6, 0x3462, 0x0, 0x1);
        gbc.writeMem(0x7d0a, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x3081);
        EXPECT(gbc.pc(), 0x7d0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 03BC
        gbc.setState(0x5fc6, 0x298c, 0x7a50, 0xed01, 0x53c0, 0x9f46, 0x1, 0x1);
        gbc.writeMem(0x5fc6, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x298c);
        EXPECT(gbc.pc(), 0x5fc8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 03BD
        gbc.setState(0xd125, 0x30c9, 0x7610, 0x4253, 0xd815, 0xc5ca, 0x0, 0x1);
        gbc.writeMem(0xd125, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x30c9);
        EXPECT(gbc.pc(), 0xd127);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd125), 0xcb);
        EXPECT(gbc.readMem(0xd126), 0xbf);
        // CB BF 03BE
        gbc.setState(0x3291, 0x9e9b, 0x76b0, 0xe7d8, 0x77f7, 0x88dd, 0x0, 0x0);
        gbc.writeMem(0x3291, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x9e9b);
        EXPECT(gbc.pc(), 0x3293);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 03BF
        gbc.setState(0x142c, 0x658a, 0xb5a0, 0x7587, 0x5272, 0x879d, 0x1, 0x0);
        gbc.writeMem(0x142c, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x658a);
        EXPECT(gbc.pc(), 0x142e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 03C0
        gbc.setState(0xcdb0, 0x42b8, 0x9e90, 0xae7e, 0xb9d9, 0xc994, 0x0, 0x1);
        gbc.writeMem(0xcdb0, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x42b8);
        EXPECT(gbc.pc(), 0xcdb2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcdb0), 0xcb);
        EXPECT(gbc.readMem(0xcdb1), 0xbf);
        // CB BF 03C1
        gbc.setState(0x394f, 0x3ade, 0x6e0, 0x4610, 0x1b0d, 0x28ce, 0x1, 0x1);
        gbc.writeMem(0x394f, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x3ade);
        EXPECT(gbc.pc(), 0x3951);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 03C2
        gbc.setState(0xbdec, 0x833e, 0xc4c0, 0x31a3, 0x6660, 0x20b5, 0x0, 0x0);
        gbc.writeMem(0xbdec, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x833e);
        EXPECT(gbc.pc(), 0xbdee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdec), 0xcb);
        EXPECT(gbc.readMem(0xbded), 0xbf);
        // CB BF 03C3
        gbc.setState(0x1b6f, 0xb6bf, 0x29d0, 0xc79c, 0x62d, 0xce06, 0x1, 0x1);
        gbc.writeMem(0x1b6f, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xb6bf);
        EXPECT(gbc.pc(), 0x1b71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 03C4
        gbc.setState(0x1efc, 0x29de, 0x1320, 0xca26, 0x71e0, 0xe0ba, 0x1, 0x0);
        gbc.writeMem(0x1efc, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x29de);
        EXPECT(gbc.pc(), 0x1efe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 03C5
        gbc.setState(0x174d, 0x3bfb, 0x5c40, 0x93e0, 0xa26e, 0xea5d, 0x0, 0x1);
        gbc.writeMem(0x174d, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x3bfb);
        EXPECT(gbc.pc(), 0x174f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 03C6
        gbc.setState(0xceeb, 0xab52, 0x5450, 0x5ef, 0xef56, 0xa63d, 0x1, 0x0);
        gbc.writeMem(0xceeb, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xab52);
        EXPECT(gbc.pc(), 0xceed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xceeb), 0xcb);
        EXPECT(gbc.readMem(0xceec), 0xbf);
        // CB BF 03C7
        gbc.setState(0x2f52, 0x74db, 0xef00, 0xd01a, 0x1808, 0x9dc2, 0x1, 0x1);
        gbc.writeMem(0x2f52, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x74db);
        EXPECT(gbc.pc(), 0x2f54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 03C8
        gbc.setState(0xdd8a, 0xc1e7, 0x9020, 0xd836, 0xefcf, 0xb99f, 0x0, 0x0);
        gbc.writeMem(0xdd8a, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xc1e7);
        EXPECT(gbc.pc(), 0xdd8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd8a), 0xcb);
        EXPECT(gbc.readMem(0xdd8b), 0xbf);
        // CB BF 03CA
        gbc.setState(0xb43c, 0xf01e, 0x2960, 0xc309, 0xbdee, 0x5e46, 0x0, 0x1);
        gbc.writeMem(0xb43c, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xf01e);
        EXPECT(gbc.pc(), 0xb43e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb43c), 0xcb);
        EXPECT(gbc.readMem(0xb43d), 0xbf);
        // CB BF 03CB
        gbc.setState(0xfed, 0xcc43, 0xc410, 0x6bb0, 0x348d, 0xe8a0, 0x0, 0x0);
        gbc.writeMem(0xfed, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xcc43);
        EXPECT(gbc.pc(), 0xfef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 03CC
        gbc.setState(0x6292, 0x4236, 0x8450, 0xdc47, 0x9c9e, 0x4435, 0x0, 0x0);
        gbc.writeMem(0x6292, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x4236);
        EXPECT(gbc.pc(), 0x6294);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 03CD
        gbc.setState(0x9ec3, 0xf9d5, 0xeea0, 0x622, 0xd548, 0x4d8c, 0x1, 0x1);
        gbc.writeMem(0x9ec3, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xf9d5);
        EXPECT(gbc.pc(), 0x9ec5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ec3), 0xcb);
        EXPECT(gbc.readMem(0x9ec4), 0xbf);
        // CB BF 03CE
        gbc.setState(0x8ce, 0xae93, 0x4700, 0x82c5, 0x275a, 0x69c3, 0x0, 0x0);
        gbc.writeMem(0x8ce, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xae93);
        EXPECT(gbc.pc(), 0x8d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 03CF
        gbc.setState(0x1fb2, 0xb667, 0x33b0, 0x9894, 0x4011, 0x8972, 0x0, 0x1);
        gbc.writeMem(0x1fb2, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xb667);
        EXPECT(gbc.pc(), 0x1fb4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 03D0
        gbc.setState(0x4a66, 0xacf, 0x9f70, 0xfd49, 0x6a5b, 0x67f6, 0x0, 0x0);
        gbc.writeMem(0x4a66, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xacf);
        EXPECT(gbc.pc(), 0x4a68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 03D1
        gbc.setState(0x107e, 0xe79f, 0x7e00, 0x6594, 0xa8df, 0xdc1f, 0x0, 0x1);
        gbc.writeMem(0x107e, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xe79f);
        EXPECT(gbc.pc(), 0x1080);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 03D2
        gbc.setState(0x8b6e, 0xe8f6, 0x3e10, 0xd8d0, 0x5ea6, 0x3c5e, 0x0, 0x0);
        gbc.writeMem(0x8b6e, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xe8f6);
        EXPECT(gbc.pc(), 0x8b70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b6e), 0xcb);
        EXPECT(gbc.readMem(0x8b6f), 0xbf);
        // CB BF 03D3
        gbc.setState(0x64e5, 0x532a, 0x2460, 0x8301, 0x7cd, 0x9540, 0x0, 0x1);
        gbc.writeMem(0x64e5, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x532a);
        EXPECT(gbc.pc(), 0x64e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB BF 03D4
        gbc.setState(0x3d6a, 0xe6be, 0x8670, 0xec14, 0xa000, 0xebb6, 0x1, 0x1);
        gbc.writeMem(0x3d6a, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xe6be);
        EXPECT(gbc.pc(), 0x3d6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 03D5
        gbc.setState(0xb66c, 0x856d, 0xe9a0, 0xa0cd, 0x1f13, 0x3bb2, 0x0, 0x1);
        gbc.writeMem(0xb66c, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x856d);
        EXPECT(gbc.pc(), 0xb66e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb66c), 0xcb);
        EXPECT(gbc.readMem(0xb66d), 0xbf);
        // CB BF 03D6
        gbc.setState(0xebd6, 0xf85f, 0x1790, 0xbe09, 0xf2d6, 0x4193, 0x1, 0x1);
        gbc.writeMem(0xebd6, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xf85f);
        EXPECT(gbc.pc(), 0xebd8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebd6), 0xcb);
        EXPECT(gbc.readMem(0xebd7), 0xbf);
        // CB BF 03D7
        gbc.setState(0xef56, 0x2ed0, 0x50b0, 0x91e7, 0x6190, 0x637d, 0x0, 0x1);
        gbc.writeMem(0xef56, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x2ed0);
        EXPECT(gbc.pc(), 0xef58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef56), 0xcb);
        EXPECT(gbc.readMem(0xef57), 0xbf);
        // CB BF 03D8
        gbc.setState(0xa073, 0x4961, 0xd9e0, 0x9ddf, 0xd19d, 0x9e0c, 0x1, 0x1);
        gbc.writeMem(0xa073, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x4961);
        EXPECT(gbc.pc(), 0xa075);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa073), 0xcb);
        EXPECT(gbc.readMem(0xa074), 0xbf);
        // CB BF 03D9
        gbc.setState(0xdd93, 0x4732, 0x2230, 0x1b0b, 0xef45, 0xf39, 0x0, 0x1);
        gbc.writeMem(0xdd93, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x4732);
        EXPECT(gbc.pc(), 0xdd95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd93), 0xcb);
        EXPECT(gbc.readMem(0xdd94), 0xbf);
        // CB BF 03DA
        gbc.setState(0x3e10, 0xd6d3, 0x2900, 0x61c6, 0xe1d5, 0x3670, 0x0, 0x0);
        gbc.writeMem(0x3e10, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xd6d3);
        EXPECT(gbc.pc(), 0x3e12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 03DB
        gbc.setState(0x538e, 0x1285, 0x30, 0x8af5, 0x747, 0x2bf9, 0x0, 0x0);
        gbc.writeMem(0x538e, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x1285);
        EXPECT(gbc.pc(), 0x5390);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 03DC
        gbc.setState(0x3ae5, 0x1332, 0xa5b0, 0xf48d, 0x76c6, 0x9a5a, 0x0, 0x0);
        gbc.writeMem(0x3ae5, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x1332);
        EXPECT(gbc.pc(), 0x3ae7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 03DD
        gbc.setState(0xbe0f, 0xfe70, 0xb3a0, 0x5a1, 0x186, 0x8731, 0x0, 0x1);
        gbc.writeMem(0xbe0f, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xfe70);
        EXPECT(gbc.pc(), 0xbe11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe0f), 0xcb);
        EXPECT(gbc.readMem(0xbe10), 0xbf);
        // CB BF 03DE
        gbc.setState(0x1ed1, 0xbb30, 0xb90, 0xa2fa, 0xc113, 0xf081, 0x1, 0x1);
        gbc.writeMem(0x1ed1, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xbb30);
        EXPECT(gbc.pc(), 0x1ed3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB BF 03DF
        gbc.setState(0xec12, 0xe7dd, 0x5330, 0x85f0, 0xa9f5, 0x2640, 0x0, 0x0);
        gbc.writeMem(0xec12, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xe7dd);
        EXPECT(gbc.pc(), 0xec14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec12), 0xcb);
        EXPECT(gbc.readMem(0xec13), 0xbf);
        // CB BF 03E0
        gbc.setState(0x76a0, 0x28f2, 0x4080, 0xcfb8, 0xc321, 0xbb4a, 0x0, 0x1);
        gbc.writeMem(0x76a0, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x28f2);
        EXPECT(gbc.pc(), 0x76a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 03E1
        gbc.setState(0x58c7, 0xa4e, 0xd030, 0x12c6, 0xfb78, 0xeca2, 0x0, 0x1);
        gbc.writeMem(0x58c7, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xa4e);
        EXPECT(gbc.pc(), 0x58c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB BF 03E2
        gbc.setState(0x6369, 0x6a75, 0x9bc0, 0xb199, 0x19f, 0xd666, 0x1, 0x0);
        gbc.writeMem(0x6369, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x6a75);
        EXPECT(gbc.pc(), 0x636b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB BF 03E3
        gbc.setState(0xe30c, 0x9faf, 0x3530, 0x173a, 0x80d1, 0x6091, 0x1, 0x0);
        gbc.writeMem(0xe30c, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x9faf);
        EXPECT(gbc.pc(), 0xe30e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe30c), 0xcb);
        EXPECT(gbc.readMem(0xe30d), 0xbf);
        // CB BF 03E4
        gbc.setState(0xe822, 0x99f4, 0x5690, 0x3946, 0xe35a, 0xd7d6, 0x0, 0x0);
        gbc.writeMem(0xe822, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x99f4);
        EXPECT(gbc.pc(), 0xe824);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe822), 0xcb);
        EXPECT(gbc.readMem(0xe823), 0xbf);
        // CB BF 03E5
        gbc.setState(0x8080, 0x1dd, 0xcb30, 0xf86e, 0xda34, 0x162b, 0x0, 0x1);
        gbc.writeMem(0x8080, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x1dd);
        EXPECT(gbc.pc(), 0x8082);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8080), 0xcb);
        EXPECT(gbc.readMem(0x8081), 0xbf);
        // CB BF 03E6
        gbc.setState(0x8797, 0xbffa, 0x9be0, 0xe5c0, 0xc10b, 0x31fb, 0x0, 0x0);
        gbc.writeMem(0x8797, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xbffa);
        EXPECT(gbc.pc(), 0x8799);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8797), 0xcb);
        EXPECT(gbc.readMem(0x8798), 0xbf);
        // CB BF 03E7
        gbc.setState(0x1166, 0x5414, 0xc4b0, 0xeb07, 0xbcd6, 0x667d, 0x1, 0x1);
        gbc.writeMem(0x1166, { 0xcb, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x5414);
        EXPECT(gbc.pc(), 0x1168);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
    }
}
#endif
