#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_cb_51)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_cb_51) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 51 0000
        gbc.setState(0xa051, 0x409d, 0x71d0, 0x24a5, 0x4e10, 0xb994, 0x0, 0x1);
        gbc.writeMem(0xa051, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x409d);
        EXPECT(gbc.pc(), 0xa053);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa051), 0xcb);
        EXPECT(gbc.readMem(0xa052), 0x51);
        // CB 51 0002
        gbc.setState(0x16d0, 0x8625, 0xf7e0, 0xa1d0, 0xa064, 0x7e1e, 0x1, 0x1);
        gbc.writeMem(0x16d0, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x8625);
        EXPECT(gbc.pc(), 0x16d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0003
        gbc.setState(0x9a11, 0xef20, 0xd660, 0xdc78, 0x9b16, 0xedda, 0x1, 0x0);
        gbc.writeMem(0x9a11, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xef20);
        EXPECT(gbc.pc(), 0x9a13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a11), 0xcb);
        EXPECT(gbc.readMem(0x9a12), 0x51);
        // CB 51 0004
        gbc.setState(0x515e, 0x8415, 0xe7d0, 0x48bb, 0xf640, 0xd06d, 0x0, 0x0);
        gbc.writeMem(0x515e, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x8415);
        EXPECT(gbc.pc(), 0x5160);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0005
        gbc.setState(0x27b1, 0xb51c, 0xa5b0, 0x97bf, 0xcdd1, 0x1e2d, 0x1, 0x1);
        gbc.writeMem(0x27b1, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xb51c);
        EXPECT(gbc.pc(), 0x27b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0006
        gbc.setState(0xb3ae, 0xa7d4, 0x8240, 0x9458, 0x25f4, 0x3803, 0x0, 0x1);
        gbc.writeMem(0xb3ae, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xa7d4);
        EXPECT(gbc.pc(), 0xb3b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3ae), 0xcb);
        EXPECT(gbc.readMem(0xb3af), 0x51);
        // CB 51 0007
        gbc.setState(0x9104, 0x425b, 0x2940, 0x1842, 0xcd25, 0x4e6b, 0x0, 0x1);
        gbc.writeMem(0x9104, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x425b);
        EXPECT(gbc.pc(), 0x9106);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9104), 0xcb);
        EXPECT(gbc.readMem(0x9105), 0x51);
        // CB 51 0008
        gbc.setState(0xde3d, 0xe771, 0x95a0, 0x2991, 0x8a64, 0xd1a7, 0x0, 0x1);
        gbc.writeMem(0xde3d, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xe771);
        EXPECT(gbc.pc(), 0xde3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde3d), 0xcb);
        EXPECT(gbc.readMem(0xde3e), 0x51);
        // CB 51 0009
        gbc.setState(0x7546, 0xae51, 0x3b60, 0x6218, 0x7911, 0x7d56, 0x1, 0x0);
        gbc.writeMem(0x7546, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xae51);
        EXPECT(gbc.pc(), 0x7548);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 000A
        gbc.setState(0xd556, 0x10b0, 0xcc80, 0xbaf1, 0xd064, 0xcda, 0x1, 0x1);
        gbc.writeMem(0xd556, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x10b0);
        EXPECT(gbc.pc(), 0xd558);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd556), 0xcb);
        EXPECT(gbc.readMem(0xd557), 0x51);
        // CB 51 000B
        gbc.setState(0x50b6, 0x2e41, 0x4570, 0x4151, 0x89d9, 0xbf50, 0x0, 0x0);
        gbc.writeMem(0x50b6, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x2e41);
        EXPECT(gbc.pc(), 0x50b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 000C
        gbc.setState(0x9b00, 0x686b, 0x3530, 0x7344, 0xefc1, 0x2da1, 0x0, 0x1);
        gbc.writeMem(0x9b00, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x686b);
        EXPECT(gbc.pc(), 0x9b02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b00), 0xcb);
        EXPECT(gbc.readMem(0x9b01), 0x51);
        // CB 51 000D
        gbc.setState(0x49db, 0x1610, 0x72f0, 0xa887, 0x4d8d, 0xe175, 0x0, 0x0);
        gbc.writeMem(0x49db, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x1610);
        EXPECT(gbc.pc(), 0x49dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 000E
        gbc.setState(0x57f5, 0xad3b, 0xa640, 0x2fe, 0x80f, 0x834e, 0x0, 0x0);
        gbc.writeMem(0x57f5, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xad3b);
        EXPECT(gbc.pc(), 0x57f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 000F
        gbc.setState(0xc870, 0x2744, 0x130, 0x1176, 0xb58c, 0xc91c, 0x0, 0x1);
        gbc.writeMem(0xc870, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x2744);
        EXPECT(gbc.pc(), 0xc872);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc870), 0xcb);
        EXPECT(gbc.readMem(0xc871), 0x51);
        // CB 51 0010
        gbc.setState(0x322c, 0x4314, 0x3230, 0xfb84, 0x52f2, 0x9b17, 0x1, 0x1);
        gbc.writeMem(0x322c, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x4314);
        EXPECT(gbc.pc(), 0x322e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0011
        gbc.setState(0x26e3, 0xd1d1, 0x6220, 0xce06, 0x56d5, 0xa6c2, 0x1, 0x0);
        gbc.writeMem(0x26e3, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xd1d1);
        EXPECT(gbc.pc(), 0x26e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0012
        gbc.setState(0x7510, 0x2bca, 0x4b20, 0x1413, 0x437b, 0xcb3a, 0x1, 0x1);
        gbc.writeMem(0x7510, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x2bca);
        EXPECT(gbc.pc(), 0x7512);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0013
        gbc.setState(0x993a, 0x2ab3, 0x6010, 0x93b8, 0xecb9, 0x1093, 0x0, 0x1);
        gbc.writeMem(0x993a, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x2ab3);
        EXPECT(gbc.pc(), 0x993c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x993a), 0xcb);
        EXPECT(gbc.readMem(0x993b), 0x51);
        // CB 51 0014
        gbc.setState(0x34b0, 0xb417, 0x2de0, 0x5e26, 0xa61c, 0x671a, 0x0, 0x1);
        gbc.writeMem(0x34b0, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xb417);
        EXPECT(gbc.pc(), 0x34b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0015
        gbc.setState(0x1228, 0x4d24, 0x21d0, 0x2c94, 0xbdec, 0x35ed, 0x1, 0x0);
        gbc.writeMem(0x1228, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x4d24);
        EXPECT(gbc.pc(), 0x122a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0016
        gbc.setState(0x7ff8, 0xc3, 0xeef0, 0xee48, 0xe1cd, 0xb1fb, 0x0, 0x0);
        gbc.writeMem(0x7ff8, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xc3);
        EXPECT(gbc.pc(), 0x7ffa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0017
        gbc.setState(0x67e3, 0x8fd9, 0x92e0, 0x521f, 0xf343, 0x3ae1, 0x1, 0x0);
        gbc.writeMem(0x67e3, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x8fd9);
        EXPECT(gbc.pc(), 0x67e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0018
        gbc.setState(0x3227, 0x17e4, 0x9c50, 0x8c9, 0x34d4, 0x62ef, 0x1, 0x0);
        gbc.writeMem(0x3227, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x17e4);
        EXPECT(gbc.pc(), 0x3229);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0019
        gbc.setState(0xf19, 0x4a0b, 0x42b0, 0xdd1a, 0xc5e4, 0xe8d, 0x0, 0x1);
        gbc.writeMem(0xf19, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x4a0b);
        EXPECT(gbc.pc(), 0xf1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 001A
        gbc.setState(0x30ae, 0x14dc, 0x2670, 0x640f, 0x525d, 0x55a0, 0x1, 0x0);
        gbc.writeMem(0x30ae, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x14dc);
        EXPECT(gbc.pc(), 0x30b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 001B
        gbc.setState(0x7f7d, 0x360c, 0x7680, 0x6037, 0x1966, 0x96c9, 0x0, 0x0);
        gbc.writeMem(0x7f7d, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x360c);
        EXPECT(gbc.pc(), 0x7f7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 001C
        gbc.setState(0x892a, 0x1e5b, 0xa800, 0xfaed, 0xa4c4, 0xeab5, 0x1, 0x1);
        gbc.writeMem(0x892a, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x1e5b);
        EXPECT(gbc.pc(), 0x892c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x892a), 0xcb);
        EXPECT(gbc.readMem(0x892b), 0x51);
        // CB 51 001D
        gbc.setState(0x47d5, 0xf152, 0xdc90, 0x66bc, 0x1b74, 0xf066, 0x0, 0x1);
        gbc.writeMem(0x47d5, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xf152);
        EXPECT(gbc.pc(), 0x47d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 001E
        gbc.setState(0xe89f, 0x442b, 0xa2e0, 0xf4d1, 0x9c66, 0xb426, 0x1, 0x1);
        gbc.writeMem(0xe89f, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x442b);
        EXPECT(gbc.pc(), 0xe8a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe89f), 0xcb);
        EXPECT(gbc.readMem(0xe8a0), 0x51);
        // CB 51 001F
        gbc.setState(0xbfc7, 0x915c, 0xfae0, 0x928d, 0xddb8, 0xcd59, 0x0, 0x0);
        gbc.writeMem(0xbfc7, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x915c);
        EXPECT(gbc.pc(), 0xbfc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfc7), 0xcb);
        EXPECT(gbc.readMem(0xbfc8), 0x51);
        // CB 51 0020
        gbc.setState(0xabb3, 0xce80, 0x6af0, 0xc177, 0x77cf, 0x35d8, 0x0, 0x0);
        gbc.writeMem(0xabb3, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xce80);
        EXPECT(gbc.pc(), 0xabb5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabb3), 0xcb);
        EXPECT(gbc.readMem(0xabb4), 0x51);
        // CB 51 0022
        gbc.setState(0x7ef5, 0xe2ae, 0xd9b0, 0xe6e2, 0x9814, 0x2952, 0x0, 0x0);
        gbc.writeMem(0x7ef5, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xe2ae);
        EXPECT(gbc.pc(), 0x7ef7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0023
        gbc.setState(0x7864, 0xf69a, 0xa5e0, 0xf3b0, 0xa29d, 0x8a30, 0x1, 0x1);
        gbc.writeMem(0x7864, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xf69a);
        EXPECT(gbc.pc(), 0x7866);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0024
        gbc.setState(0x465c, 0x680c, 0x6f90, 0xc34b, 0x88ed, 0xdb27, 0x1, 0x1);
        gbc.writeMem(0x465c, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x680c);
        EXPECT(gbc.pc(), 0x465e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0026
        gbc.setState(0x9ab7, 0xeec8, 0x5c90, 0xb3d7, 0x1e30, 0x678c, 0x0, 0x1);
        gbc.writeMem(0x9ab7, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xeec8);
        EXPECT(gbc.pc(), 0x9ab9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ab7), 0xcb);
        EXPECT(gbc.readMem(0x9ab8), 0x51);
        // CB 51 0027
        gbc.setState(0xe143, 0x47f3, 0xd010, 0x29bc, 0xea81, 0x79e1, 0x1, 0x1);
        gbc.writeMem(0xe143, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x47f3);
        EXPECT(gbc.pc(), 0xe145);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe143), 0xcb);
        EXPECT(gbc.readMem(0xe144), 0x51);
        // CB 51 0028
        gbc.setState(0xe030, 0xf06a, 0xf140, 0x4348, 0xe009, 0x9c13, 0x1, 0x0);
        gbc.writeMem(0xe030, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xf06a);
        EXPECT(gbc.pc(), 0xe032);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe030), 0xcb);
        EXPECT(gbc.readMem(0xe031), 0x51);
        // CB 51 0029
        gbc.setState(0xd512, 0x1b3f, 0xa170, 0x92c3, 0x92bd, 0x2670, 0x0, 0x1);
        gbc.writeMem(0xd512, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x1b3f);
        EXPECT(gbc.pc(), 0xd514);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd512), 0xcb);
        EXPECT(gbc.readMem(0xd513), 0x51);
        // CB 51 002A
        gbc.setState(0xa1f7, 0xadee, 0xd730, 0x1380, 0x1248, 0x75c7, 0x1, 0x0);
        gbc.writeMem(0xa1f7, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xadee);
        EXPECT(gbc.pc(), 0xa1f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1f7), 0xcb);
        EXPECT(gbc.readMem(0xa1f8), 0x51);
        // CB 51 002B
        gbc.setState(0xc8bb, 0x65c5, 0xe970, 0x72eb, 0x73bb, 0x989a, 0x0, 0x0);
        gbc.writeMem(0xc8bb, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x65c5);
        EXPECT(gbc.pc(), 0xc8bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8bb), 0xcb);
        EXPECT(gbc.readMem(0xc8bc), 0x51);
        // CB 51 002C
        gbc.setState(0x5e2f, 0xc133, 0x8a0, 0x7e29, 0x3aa4, 0xa3cc, 0x0, 0x1);
        gbc.writeMem(0x5e2f, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xc133);
        EXPECT(gbc.pc(), 0x5e31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 002D
        gbc.setState(0x1eb3, 0x52b0, 0x3d30, 0x6353, 0x7248, 0xe81, 0x1, 0x0);
        gbc.writeMem(0x1eb3, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x52b0);
        EXPECT(gbc.pc(), 0x1eb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 002E
        gbc.setState(0xdab5, 0x1e52, 0x55c0, 0xab78, 0x7d1e, 0xf3d4, 0x1, 0x0);
        gbc.writeMem(0xdab5, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x1e52);
        EXPECT(gbc.pc(), 0xdab7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdab5), 0xcb);
        EXPECT(gbc.readMem(0xdab6), 0x51);
        // CB 51 002F
        gbc.setState(0x4e88, 0xae5, 0x70, 0x4ef7, 0x5c0, 0x1df2, 0x0, 0x0);
        gbc.writeMem(0x4e88, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xae5);
        EXPECT(gbc.pc(), 0x4e8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0030
        gbc.setState(0xc9ca, 0x1475, 0x8300, 0x2d3f, 0xc744, 0xd689, 0x1, 0x1);
        gbc.writeMem(0xc9ca, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x1475);
        EXPECT(gbc.pc(), 0xc9cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9ca), 0xcb);
        EXPECT(gbc.readMem(0xc9cb), 0x51);
        // CB 51 0031
        gbc.setState(0x6ce4, 0x65dc, 0x5120, 0x200e, 0x5380, 0xd642, 0x0, 0x1);
        gbc.writeMem(0x6ce4, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x65dc);
        EXPECT(gbc.pc(), 0x6ce6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0032
        gbc.setState(0xcbce, 0xf054, 0x7810, 0x8fea, 0xb571, 0xe464, 0x0, 0x0);
        gbc.writeMem(0xcbce, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xf054);
        EXPECT(gbc.pc(), 0xcbd0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbce), 0xcb);
        EXPECT(gbc.readMem(0xcbcf), 0x51);
        // CB 51 0033
        gbc.setState(0xe3b8, 0xcedc, 0xae90, 0x1d85, 0x66c3, 0xd29, 0x0, 0x0);
        gbc.writeMem(0xe3b8, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xcedc);
        EXPECT(gbc.pc(), 0xe3ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3b8), 0xcb);
        EXPECT(gbc.readMem(0xe3b9), 0x51);
        // CB 51 0034
        gbc.setState(0xcadc, 0x9c86, 0x9250, 0xb214, 0xdc20, 0x143e, 0x1, 0x0);
        gbc.writeMem(0xcadc, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x9c86);
        EXPECT(gbc.pc(), 0xcade);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcadc), 0xcb);
        EXPECT(gbc.readMem(0xcadd), 0x51);
        // CB 51 0035
        gbc.setState(0xad74, 0x2a1, 0x64c0, 0xdeb5, 0x3474, 0xae7, 0x0, 0x1);
        gbc.writeMem(0xad74, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x2a1);
        EXPECT(gbc.pc(), 0xad76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad74), 0xcb);
        EXPECT(gbc.readMem(0xad75), 0x51);
        // CB 51 0036
        gbc.setState(0xc326, 0x78bf, 0x9170, 0xb65f, 0xa035, 0x25d9, 0x1, 0x0);
        gbc.writeMem(0xc326, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x78bf);
        EXPECT(gbc.pc(), 0xc328);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc326), 0xcb);
        EXPECT(gbc.readMem(0xc327), 0x51);
        // CB 51 0037
        gbc.setState(0x7ba, 0xa189, 0x5c50, 0x1564, 0xf6d9, 0x6beb, 0x1, 0x0);
        gbc.writeMem(0x7ba, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xa189);
        EXPECT(gbc.pc(), 0x7bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0038
        gbc.setState(0x8dc4, 0x9b4c, 0xc00, 0xbcca, 0xb665, 0xb84f, 0x1, 0x1);
        gbc.writeMem(0x8dc4, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x9b4c);
        EXPECT(gbc.pc(), 0x8dc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8dc4), 0xcb);
        EXPECT(gbc.readMem(0x8dc5), 0x51);
        // CB 51 003A
        gbc.setState(0x38d0, 0x232e, 0x77d0, 0x5535, 0xe101, 0xcd1a, 0x1, 0x1);
        gbc.writeMem(0x38d0, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x232e);
        EXPECT(gbc.pc(), 0x38d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 003C
        gbc.setState(0x114, 0x2277, 0xc2b0, 0xfae6, 0x87fa, 0x5c4b, 0x1, 0x0);
        gbc.writeMem(0x114, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x2277);
        EXPECT(gbc.pc(), 0x116);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 003D
        gbc.setState(0x976b, 0xe245, 0xea80, 0x70e4, 0x45ff, 0x452b, 0x1, 0x1);
        gbc.writeMem(0x976b, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xe245);
        EXPECT(gbc.pc(), 0x976d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x976b), 0xcb);
        EXPECT(gbc.readMem(0x976c), 0x51);
        // CB 51 003E
        gbc.setState(0x58b8, 0xc6ee, 0x41f0, 0xe6b8, 0x7c79, 0x194, 0x0, 0x0);
        gbc.writeMem(0x58b8, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xc6ee);
        EXPECT(gbc.pc(), 0x58ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 003F
        gbc.setState(0x830d, 0x4d40, 0x740, 0x2ff2, 0xaa2, 0x55ee, 0x0, 0x0);
        gbc.writeMem(0x830d, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x4d40);
        EXPECT(gbc.pc(), 0x830f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x830d), 0xcb);
        EXPECT(gbc.readMem(0x830e), 0x51);
        // CB 51 0040
        gbc.setState(0xd7c0, 0x80c8, 0x9680, 0x9a1a, 0x2b8f, 0xe652, 0x1, 0x0);
        gbc.writeMem(0xd7c0, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x80c8);
        EXPECT(gbc.pc(), 0xd7c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7c0), 0xcb);
        EXPECT(gbc.readMem(0xd7c1), 0x51);
        // CB 51 0041
        gbc.setState(0xaf58, 0xf5ec, 0x9640, 0xe020, 0xf2f3, 0x54ec, 0x0, 0x0);
        gbc.writeMem(0xaf58, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xf5ec);
        EXPECT(gbc.pc(), 0xaf5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf58), 0xcb);
        EXPECT(gbc.readMem(0xaf59), 0x51);
        // CB 51 0042
        gbc.setState(0xb0ef, 0x2a36, 0x1dc0, 0x58e4, 0x1987, 0x1e07, 0x1, 0x1);
        gbc.writeMem(0xb0ef, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x2a36);
        EXPECT(gbc.pc(), 0xb0f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0ef), 0xcb);
        EXPECT(gbc.readMem(0xb0f0), 0x51);
        // CB 51 0043
        gbc.setState(0xe01e, 0x51db, 0xeda0, 0x321c, 0x4b8, 0xbbc1, 0x1, 0x1);
        gbc.writeMem(0xe01e, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x51db);
        EXPECT(gbc.pc(), 0xe020);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe01e), 0xcb);
        EXPECT(gbc.readMem(0xe01f), 0x51);
        // CB 51 0044
        gbc.setState(0x8a69, 0xff2a, 0x3370, 0x88b5, 0x44a4, 0x641c, 0x0, 0x0);
        gbc.writeMem(0x8a69, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xff2a);
        EXPECT(gbc.pc(), 0x8a6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a69), 0xcb);
        EXPECT(gbc.readMem(0x8a6a), 0x51);
        // CB 51 0045
        gbc.setState(0x2350, 0xd3e3, 0x3e50, 0x4573, 0xf241, 0x205b, 0x1, 0x0);
        gbc.writeMem(0x2350, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xd3e3);
        EXPECT(gbc.pc(), 0x2352);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0046
        gbc.setState(0x4965, 0xd9e4, 0x5fc0, 0x5bcd, 0xa71e, 0x5279, 0x1, 0x0);
        gbc.writeMem(0x4965, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xd9e4);
        EXPECT(gbc.pc(), 0x4967);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0047
        gbc.setState(0x8ef, 0x9b64, 0x1b10, 0x4ef5, 0x4479, 0xacfe, 0x0, 0x0);
        gbc.writeMem(0x8ef, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x9b64);
        EXPECT(gbc.pc(), 0x8f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0048
        gbc.setState(0xd68a, 0x380b, 0xb280, 0xb150, 0x8f6a, 0x2e66, 0x1, 0x0);
        gbc.writeMem(0xd68a, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x380b);
        EXPECT(gbc.pc(), 0xd68c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd68a), 0xcb);
        EXPECT(gbc.readMem(0xd68b), 0x51);
        // CB 51 0049
        gbc.setState(0xdc85, 0x9d96, 0x4930, 0xedae, 0x341f, 0xb283, 0x1, 0x1);
        gbc.writeMem(0xdc85, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x9d96);
        EXPECT(gbc.pc(), 0xdc87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc85), 0xcb);
        EXPECT(gbc.readMem(0xdc86), 0x51);
        // CB 51 004A
        gbc.setState(0xbd52, 0x42da, 0x71b0, 0x8959, 0x66a2, 0xdab4, 0x0, 0x0);
        gbc.writeMem(0xbd52, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x42da);
        EXPECT(gbc.pc(), 0xbd54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd52), 0xcb);
        EXPECT(gbc.readMem(0xbd53), 0x51);
        // CB 51 004B
        gbc.setState(0x201a, 0x4275, 0x4c40, 0x9425, 0xf006, 0xef7f, 0x0, 0x1);
        gbc.writeMem(0x201a, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x4275);
        EXPECT(gbc.pc(), 0x201c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 004C
        gbc.setState(0x3f57, 0xa720, 0xd1d0, 0xf9eb, 0xc935, 0xb74d, 0x1, 0x1);
        gbc.writeMem(0x3f57, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xa720);
        EXPECT(gbc.pc(), 0x3f59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 004D
        gbc.setState(0xa943, 0xe45f, 0xa820, 0xb137, 0x114b, 0x4d98, 0x1, 0x0);
        gbc.writeMem(0xa943, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xe45f);
        EXPECT(gbc.pc(), 0xa945);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa943), 0xcb);
        EXPECT(gbc.readMem(0xa944), 0x51);
        // CB 51 004E
        gbc.setState(0x47fb, 0x2ce5, 0x6100, 0xf87c, 0xc4d5, 0xd81e, 0x0, 0x1);
        gbc.writeMem(0x47fb, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x2ce5);
        EXPECT(gbc.pc(), 0x47fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 004F
        gbc.setState(0x9906, 0xdfb5, 0x14f0, 0x740c, 0x1fd6, 0xcbe5, 0x0, 0x0);
        gbc.writeMem(0x9906, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xdfb5);
        EXPECT(gbc.pc(), 0x9908);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9906), 0xcb);
        EXPECT(gbc.readMem(0x9907), 0x51);
        // CB 51 0050
        gbc.setState(0xa26e, 0x2b3, 0x2c00, 0x6ac8, 0xbfe3, 0x2e8a, 0x1, 0x0);
        gbc.writeMem(0xa26e, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x2b3);
        EXPECT(gbc.pc(), 0xa270);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa26e), 0xcb);
        EXPECT(gbc.readMem(0xa26f), 0x51);
        // CB 51 0051
        gbc.setState(0xb07f, 0xcde7, 0xa340, 0xc6d2, 0xcace, 0x8e7c, 0x0, 0x0);
        gbc.writeMem(0xb07f, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xcde7);
        EXPECT(gbc.pc(), 0xb081);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb07f), 0xcb);
        EXPECT(gbc.readMem(0xb080), 0x51);
        // CB 51 0052
        gbc.setState(0x7c40, 0x1a10, 0x3700, 0xbe5d, 0x79d1, 0xa503, 0x0, 0x0);
        gbc.writeMem(0x7c40, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x1a10);
        EXPECT(gbc.pc(), 0x7c42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0053
        gbc.setState(0x67f3, 0xa88c, 0xf260, 0x630, 0x9fd7, 0x2e46, 0x0, 0x1);
        gbc.writeMem(0x67f3, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xa88c);
        EXPECT(gbc.pc(), 0x67f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0054
        gbc.setState(0x756f, 0x1f8e, 0xd750, 0xf684, 0x3495, 0xb773, 0x0, 0x0);
        gbc.writeMem(0x756f, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x1f8e);
        EXPECT(gbc.pc(), 0x7571);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0055
        gbc.setState(0xb60f, 0xbeb7, 0xaa70, 0x15ef, 0x952d, 0x5497, 0x0, 0x1);
        gbc.writeMem(0xb60f, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xbeb7);
        EXPECT(gbc.pc(), 0xb611);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb60f), 0xcb);
        EXPECT(gbc.readMem(0xb610), 0x51);
        // CB 51 0056
        gbc.setState(0x84c1, 0xd4b8, 0x7630, 0x269b, 0xe3d2, 0x92ee, 0x1, 0x0);
        gbc.writeMem(0x84c1, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xd4b8);
        EXPECT(gbc.pc(), 0x84c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84c1), 0xcb);
        EXPECT(gbc.readMem(0x84c2), 0x51);
        // CB 51 0057
        gbc.setState(0x3a6f, 0x5f23, 0xe1e0, 0x75c5, 0xd70d, 0xe028, 0x0, 0x0);
        gbc.writeMem(0x3a6f, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x5f23);
        EXPECT(gbc.pc(), 0x3a71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0058
        gbc.setState(0x7957, 0x725c, 0xc090, 0x92d1, 0x1f42, 0x7d13, 0x1, 0x1);
        gbc.writeMem(0x7957, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x725c);
        EXPECT(gbc.pc(), 0x7959);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0059
        gbc.setState(0x1433, 0xabf9, 0x3e90, 0x7ecc, 0x78db, 0x5395, 0x0, 0x0);
        gbc.writeMem(0x1433, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xabf9);
        EXPECT(gbc.pc(), 0x1435);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 005A
        gbc.setState(0xecfd, 0x5d52, 0xdfc0, 0xe0cf, 0xd0b1, 0xe12, 0x0, 0x0);
        gbc.writeMem(0xecfd, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x5d52);
        EXPECT(gbc.pc(), 0xecff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecfd), 0xcb);
        EXPECT(gbc.readMem(0xecfe), 0x51);
        // CB 51 005B
        gbc.setState(0x8436, 0xbf5b, 0xb970, 0xed4e, 0xd055, 0x5993, 0x0, 0x0);
        gbc.writeMem(0x8436, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xbf5b);
        EXPECT(gbc.pc(), 0x8438);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8436), 0xcb);
        EXPECT(gbc.readMem(0x8437), 0x51);
        // CB 51 005C
        gbc.setState(0x310a, 0x8319, 0xcad0, 0x9ad5, 0x3971, 0xc5c, 0x0, 0x0);
        gbc.writeMem(0x310a, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x8319);
        EXPECT(gbc.pc(), 0x310c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 005D
        gbc.setState(0xb35, 0xb862, 0x8550, 0x8bfd, 0x554e, 0x273d, 0x0, 0x0);
        gbc.writeMem(0xb35, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xb862);
        EXPECT(gbc.pc(), 0xb37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 005F
        gbc.setState(0x4c81, 0x9a23, 0x7960, 0x2d4a, 0xc1b7, 0xe083, 0x0, 0x1);
        gbc.writeMem(0x4c81, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x9a23);
        EXPECT(gbc.pc(), 0x4c83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0060
        gbc.setState(0x7b09, 0x822, 0x5460, 0xedd, 0x501d, 0x85a6, 0x1, 0x1);
        gbc.writeMem(0x7b09, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x822);
        EXPECT(gbc.pc(), 0x7b0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0061
        gbc.setState(0x5535, 0xac5d, 0x60c0, 0x815d, 0x2d3f, 0xf36c, 0x0, 0x0);
        gbc.writeMem(0x5535, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xac5d);
        EXPECT(gbc.pc(), 0x5537);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0062
        gbc.setState(0x7c5a, 0x7f5c, 0x9c50, 0x59f4, 0xb85d, 0xcdfb, 0x0, 0x1);
        gbc.writeMem(0x7c5a, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x7f5c);
        EXPECT(gbc.pc(), 0x7c5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0064
        gbc.setState(0xa7ed, 0xd20c, 0xbab0, 0x6022, 0x3332, 0x3178, 0x0, 0x0);
        gbc.writeMem(0xa7ed, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xd20c);
        EXPECT(gbc.pc(), 0xa7ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7ed), 0xcb);
        EXPECT(gbc.readMem(0xa7ee), 0x51);
        // CB 51 0065
        gbc.setState(0xbf13, 0xb22c, 0x2da0, 0x282e, 0xeb2, 0x3bc9, 0x0, 0x0);
        gbc.writeMem(0xbf13, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xb22c);
        EXPECT(gbc.pc(), 0xbf15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf13), 0xcb);
        EXPECT(gbc.readMem(0xbf14), 0x51);
        // CB 51 0066
        gbc.setState(0xe9e5, 0xe7fd, 0x5a60, 0xbcf4, 0xaf27, 0x254a, 0x0, 0x1);
        gbc.writeMem(0xe9e5, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xe7fd);
        EXPECT(gbc.pc(), 0xe9e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9e5), 0xcb);
        EXPECT(gbc.readMem(0xe9e6), 0x51);
        // CB 51 0067
        gbc.setState(0x56c1, 0x21ad, 0xf950, 0x7bde, 0xd316, 0x9036, 0x1, 0x1);
        gbc.writeMem(0x56c1, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x21ad);
        EXPECT(gbc.pc(), 0x56c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0068
        gbc.setState(0xe954, 0x3df6, 0x6e10, 0xa1b9, 0x9f5b, 0xb7b5, 0x1, 0x0);
        gbc.writeMem(0xe954, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x3df6);
        EXPECT(gbc.pc(), 0xe956);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe954), 0xcb);
        EXPECT(gbc.readMem(0xe955), 0x51);
        // CB 51 0069
        gbc.setState(0x338c, 0xdaf0, 0x3b0, 0x9b35, 0xe364, 0x1605, 0x1, 0x0);
        gbc.writeMem(0x338c, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xdaf0);
        EXPECT(gbc.pc(), 0x338e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 006A
        gbc.setState(0x9491, 0xcb36, 0xb5d0, 0xb73f, 0x668c, 0x4c63, 0x1, 0x1);
        gbc.writeMem(0x9491, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xcb36);
        EXPECT(gbc.pc(), 0x9493);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9491), 0xcb);
        EXPECT(gbc.readMem(0x9492), 0x51);
        // CB 51 006B
        gbc.setState(0xc913, 0x9039, 0x1e80, 0x82f0, 0x9829, 0xbce0, 0x1, 0x1);
        gbc.writeMem(0xc913, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x9039);
        EXPECT(gbc.pc(), 0xc915);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc913), 0xcb);
        EXPECT(gbc.readMem(0xc914), 0x51);
        // CB 51 006C
        gbc.setState(0x2c5d, 0xebbe, 0x9520, 0xa65, 0x9071, 0xb58c, 0x1, 0x1);
        gbc.writeMem(0x2c5d, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xebbe);
        EXPECT(gbc.pc(), 0x2c5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 006D
        gbc.setState(0x3140, 0x9e23, 0xf500, 0x7554, 0xd309, 0x3b50, 0x1, 0x0);
        gbc.writeMem(0x3140, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x9e23);
        EXPECT(gbc.pc(), 0x3142);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 006E
        gbc.setState(0xa46d, 0x5863, 0xfb90, 0x2d18, 0xed2e, 0xc4ae, 0x1, 0x1);
        gbc.writeMem(0xa46d, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x5863);
        EXPECT(gbc.pc(), 0xa46f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa46d), 0xcb);
        EXPECT(gbc.readMem(0xa46e), 0x51);
        // CB 51 006F
        gbc.setState(0x591, 0x9baa, 0x23b0, 0x70ac, 0x9cc0, 0x73c5, 0x1, 0x1);
        gbc.writeMem(0x591, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x9baa);
        EXPECT(gbc.pc(), 0x593);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0070
        gbc.setState(0xcab0, 0x4920, 0xca00, 0x557b, 0x8940, 0xec17, 0x1, 0x0);
        gbc.writeMem(0xcab0, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x4920);
        EXPECT(gbc.pc(), 0xcab2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcab0), 0xcb);
        EXPECT(gbc.readMem(0xcab1), 0x51);
        // CB 51 0071
        gbc.setState(0xcfb8, 0x78ac, 0xcfd0, 0xd994, 0x64f4, 0xc771, 0x1, 0x0);
        gbc.writeMem(0xcfb8, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x78ac);
        EXPECT(gbc.pc(), 0xcfba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfb8), 0xcb);
        EXPECT(gbc.readMem(0xcfb9), 0x51);
        // CB 51 0072
        gbc.setState(0xacc, 0x567c, 0xd20, 0x5824, 0xc4f5, 0xcdcd, 0x1, 0x1);
        gbc.writeMem(0xacc, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x567c);
        EXPECT(gbc.pc(), 0xace);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0074
        gbc.setState(0x45d, 0xed56, 0xfb90, 0xe1f7, 0x6ab1, 0x1590, 0x0, 0x0);
        gbc.writeMem(0x45d, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xed56);
        EXPECT(gbc.pc(), 0x45f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0075
        gbc.setState(0x1b35, 0xafed, 0x7110, 0x2ff0, 0x20b1, 0xd3e8, 0x1, 0x1);
        gbc.writeMem(0x1b35, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xafed);
        EXPECT(gbc.pc(), 0x1b37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0076
        gbc.setState(0x6f33, 0x7917, 0x9100, 0x47fb, 0xd050, 0x3546, 0x0, 0x0);
        gbc.writeMem(0x6f33, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x7917);
        EXPECT(gbc.pc(), 0x6f35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0077
        gbc.setState(0x1fdd, 0x6480, 0x6b0, 0x169d, 0x2d8f, 0xbb1b, 0x0, 0x1);
        gbc.writeMem(0x1fdd, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x6480);
        EXPECT(gbc.pc(), 0x1fdf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0078
        gbc.setState(0x9168, 0x2695, 0x2a0, 0xf1c9, 0xbc58, 0x151a, 0x1, 0x0);
        gbc.writeMem(0x9168, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x2695);
        EXPECT(gbc.pc(), 0x916a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9168), 0xcb);
        EXPECT(gbc.readMem(0x9169), 0x51);
        // CB 51 0079
        gbc.setState(0xc3ab, 0x4453, 0xc60, 0xd0de, 0x48c7, 0x3ef, 0x1, 0x1);
        gbc.writeMem(0xc3ab, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x4453);
        EXPECT(gbc.pc(), 0xc3ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3ab), 0xcb);
        EXPECT(gbc.readMem(0xc3ac), 0x51);
        // CB 51 007A
        gbc.setState(0xd71a, 0x76dc, 0x36c0, 0xc52f, 0xbfc4, 0xd1f6, 0x0, 0x1);
        gbc.writeMem(0xd71a, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x76dc);
        EXPECT(gbc.pc(), 0xd71c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd71a), 0xcb);
        EXPECT(gbc.readMem(0xd71b), 0x51);
        // CB 51 007B
        gbc.setState(0xa35, 0x39f, 0x7610, 0x4701, 0xf8de, 0x1a45, 0x0, 0x0);
        gbc.writeMem(0xa35, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x39f);
        EXPECT(gbc.pc(), 0xa37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 007C
        gbc.setState(0x8e6b, 0x6a45, 0x31b0, 0x7d04, 0xb8c2, 0x94f6, 0x1, 0x0);
        gbc.writeMem(0x8e6b, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x6a45);
        EXPECT(gbc.pc(), 0x8e6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e6b), 0xcb);
        EXPECT(gbc.readMem(0x8e6c), 0x51);
        // CB 51 007D
        gbc.setState(0xed1f, 0x382a, 0xb7d0, 0x62ec, 0xa81e, 0x650d, 0x0, 0x0);
        gbc.writeMem(0xed1f, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x382a);
        EXPECT(gbc.pc(), 0xed21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed1f), 0xcb);
        EXPECT(gbc.readMem(0xed20), 0x51);
        // CB 51 007E
        gbc.setState(0x4557, 0x46fa, 0x70a0, 0xc4d, 0xc3f3, 0xdf46, 0x0, 0x0);
        gbc.writeMem(0x4557, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x46fa);
        EXPECT(gbc.pc(), 0x4559);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 007F
        gbc.setState(0x7218, 0x8473, 0x3450, 0x77d3, 0x74f6, 0xd123, 0x1, 0x0);
        gbc.writeMem(0x7218, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x8473);
        EXPECT(gbc.pc(), 0x721a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0080
        gbc.setState(0xc568, 0xc737, 0x6e60, 0xceba, 0xea57, 0xf06d, 0x1, 0x1);
        gbc.writeMem(0xc568, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xc737);
        EXPECT(gbc.pc(), 0xc56a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc568), 0xcb);
        EXPECT(gbc.readMem(0xc569), 0x51);
        // CB 51 0081
        gbc.setState(0x81b9, 0x4525, 0x3320, 0xce4a, 0x2490, 0x432a, 0x0, 0x1);
        gbc.writeMem(0x81b9, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x4525);
        EXPECT(gbc.pc(), 0x81bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81b9), 0xcb);
        EXPECT(gbc.readMem(0x81ba), 0x51);
        // CB 51 0082
        gbc.setState(0xc1a, 0xb3fa, 0x8b60, 0x9c95, 0xa54, 0xdc6b, 0x1, 0x0);
        gbc.writeMem(0xc1a, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xb3fa);
        EXPECT(gbc.pc(), 0xc1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0083
        gbc.setState(0x8917, 0xa28a, 0xf7f0, 0x1010, 0x762c, 0xb2e7, 0x1, 0x1);
        gbc.writeMem(0x8917, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xa28a);
        EXPECT(gbc.pc(), 0x8919);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8917), 0xcb);
        EXPECT(gbc.readMem(0x8918), 0x51);
        // CB 51 0084
        gbc.setState(0xa47, 0xc984, 0x6280, 0x2f3a, 0xd69b, 0x852f, 0x1, 0x0);
        gbc.writeMem(0xa47, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xc984);
        EXPECT(gbc.pc(), 0xa49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0086
        gbc.setState(0x6a18, 0x5ce7, 0xb3f0, 0x690b, 0x6570, 0x4814, 0x0, 0x1);
        gbc.writeMem(0x6a18, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x5ce7);
        EXPECT(gbc.pc(), 0x6a1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0087
        gbc.setState(0x97ba, 0xd48b, 0xbd70, 0xc903, 0x180a, 0x9d67, 0x0, 0x0);
        gbc.writeMem(0x97ba, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xd48b);
        EXPECT(gbc.pc(), 0x97bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97ba), 0xcb);
        EXPECT(gbc.readMem(0x97bb), 0x51);
        // CB 51 0088
        gbc.setState(0xc99b, 0x97ad, 0xca10, 0x70e4, 0x94c3, 0x9ead, 0x1, 0x1);
        gbc.writeMem(0xc99b, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x97ad);
        EXPECT(gbc.pc(), 0xc99d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc99b), 0xcb);
        EXPECT(gbc.readMem(0xc99c), 0x51);
        // CB 51 0089
        gbc.setState(0x71a6, 0x6b29, 0x6510, 0xb9f7, 0xbca1, 0x69ea, 0x0, 0x1);
        gbc.writeMem(0x71a6, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x6b29);
        EXPECT(gbc.pc(), 0x71a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 008A
        gbc.setState(0xbb5a, 0x1f6f, 0xa060, 0x7ead, 0x9f8, 0x4d28, 0x1, 0x0);
        gbc.writeMem(0xbb5a, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x1f6f);
        EXPECT(gbc.pc(), 0xbb5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb5a), 0xcb);
        EXPECT(gbc.readMem(0xbb5b), 0x51);
        // CB 51 008B
        gbc.setState(0xb41a, 0x6bb5, 0xf980, 0xbf97, 0xeb61, 0xc2d7, 0x0, 0x0);
        gbc.writeMem(0xb41a, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x6bb5);
        EXPECT(gbc.pc(), 0xb41c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb41a), 0xcb);
        EXPECT(gbc.readMem(0xb41b), 0x51);
        // CB 51 008C
        gbc.setState(0x83e, 0x7f84, 0x5950, 0xb6a5, 0x4113, 0x6ca2, 0x0, 0x0);
        gbc.writeMem(0x83e, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x7f84);
        EXPECT(gbc.pc(), 0x840);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 008D
        gbc.setState(0xde0c, 0xc778, 0x9160, 0xaeab, 0x24aa, 0x6c22, 0x0, 0x0);
        gbc.writeMem(0xde0c, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xc778);
        EXPECT(gbc.pc(), 0xde0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde0c), 0xcb);
        EXPECT(gbc.readMem(0xde0d), 0x51);
        // CB 51 008E
        gbc.setState(0x1631, 0x6dea, 0xb770, 0x4c5b, 0xec81, 0x36e8, 0x1, 0x0);
        gbc.writeMem(0x1631, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x6dea);
        EXPECT(gbc.pc(), 0x1633);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 008F
        gbc.setState(0xac4c, 0xba7e, 0xae50, 0x5c84, 0xb95f, 0xffee, 0x0, 0x0);
        gbc.writeMem(0xac4c, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xba7e);
        EXPECT(gbc.pc(), 0xac4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac4c), 0xcb);
        EXPECT(gbc.readMem(0xac4d), 0x51);
        // CB 51 0090
        gbc.setState(0x3f19, 0x69a7, 0x45e0, 0xa4c9, 0x728c, 0xe671, 0x0, 0x1);
        gbc.writeMem(0x3f19, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x69a7);
        EXPECT(gbc.pc(), 0x3f1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0091
        gbc.setState(0x9405, 0x4abc, 0x5910, 0xa08b, 0xb71f, 0x7baa, 0x1, 0x1);
        gbc.writeMem(0x9405, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x4abc);
        EXPECT(gbc.pc(), 0x9407);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9405), 0xcb);
        EXPECT(gbc.readMem(0x9406), 0x51);
        // CB 51 0092
        gbc.setState(0xc1a0, 0xfd2c, 0xcd70, 0x973c, 0x2e35, 0xc435, 0x1, 0x1);
        gbc.writeMem(0xc1a0, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xfd2c);
        EXPECT(gbc.pc(), 0xc1a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1a0), 0xcb);
        EXPECT(gbc.readMem(0xc1a1), 0x51);
        // CB 51 0094
        gbc.setState(0x44ad, 0xbefd, 0x8100, 0x33f5, 0xa05d, 0x501f, 0x1, 0x1);
        gbc.writeMem(0x44ad, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xbefd);
        EXPECT(gbc.pc(), 0x44af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0095
        gbc.setState(0xb2a6, 0x6b26, 0xf670, 0xd781, 0x9b69, 0x723e, 0x0, 0x0);
        gbc.writeMem(0xb2a6, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x6b26);
        EXPECT(gbc.pc(), 0xb2a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2a6), 0xcb);
        EXPECT(gbc.readMem(0xb2a7), 0x51);
        // CB 51 0097
        gbc.setState(0xb9f, 0x819f, 0x9a20, 0x921d, 0x4a7b, 0x7bd, 0x1, 0x0);
        gbc.writeMem(0xb9f, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x819f);
        EXPECT(gbc.pc(), 0xba1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0098
        gbc.setState(0xc22f, 0x90df, 0x4970, 0x9fa8, 0x1477, 0xc6c0, 0x1, 0x0);
        gbc.writeMem(0xc22f, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x90df);
        EXPECT(gbc.pc(), 0xc231);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc22f), 0xcb);
        EXPECT(gbc.readMem(0xc230), 0x51);
        // CB 51 0099
        gbc.setState(0xcecb, 0x40f1, 0xa640, 0x6dd8, 0x33ed, 0x4910, 0x0, 0x0);
        gbc.writeMem(0xcecb, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x40f1);
        EXPECT(gbc.pc(), 0xcecd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcecb), 0xcb);
        EXPECT(gbc.readMem(0xcecc), 0x51);
        // CB 51 009A
        gbc.setState(0xee0c, 0x327c, 0xc380, 0xcc88, 0x1364, 0xd281, 0x1, 0x1);
        gbc.writeMem(0xee0c, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x327c);
        EXPECT(gbc.pc(), 0xee0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee0c), 0xcb);
        EXPECT(gbc.readMem(0xee0d), 0x51);
        // CB 51 009B
        gbc.setState(0xb01e, 0xb6f4, 0x7500, 0x3a93, 0x7bae, 0x899a, 0x0, 0x0);
        gbc.writeMem(0xb01e, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xb6f4);
        EXPECT(gbc.pc(), 0xb020);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb01e), 0xcb);
        EXPECT(gbc.readMem(0xb01f), 0x51);
        // CB 51 009C
        gbc.setState(0x79e7, 0x21dc, 0xa400, 0xc754, 0xd2e7, 0xdd81, 0x0, 0x0);
        gbc.writeMem(0x79e7, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x21dc);
        EXPECT(gbc.pc(), 0x79e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 009D
        gbc.setState(0x66ac, 0xde5, 0xf4d0, 0xe56d, 0x2903, 0x6622, 0x0, 0x1);
        gbc.writeMem(0x66ac, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xde5);
        EXPECT(gbc.pc(), 0x66ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 009E
        gbc.setState(0x1b31, 0x9385, 0x5510, 0x1a7, 0x9a5d, 0x9982, 0x1, 0x0);
        gbc.writeMem(0x1b31, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x9385);
        EXPECT(gbc.pc(), 0x1b33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 009F
        gbc.setState(0x710d, 0x5771, 0x27f0, 0x48e8, 0x11c9, 0x1576, 0x0, 0x0);
        gbc.writeMem(0x710d, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x5771);
        EXPECT(gbc.pc(), 0x710f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 00A0
        gbc.setState(0xd518, 0x2c4c, 0x7280, 0x5582, 0xb44a, 0x6857, 0x0, 0x1);
        gbc.writeMem(0xd518, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x2c4c);
        EXPECT(gbc.pc(), 0xd51a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd518), 0xcb);
        EXPECT(gbc.readMem(0xd519), 0x51);
        // CB 51 00A1
        gbc.setState(0xa0ad, 0x888a, 0xb900, 0x5bd0, 0x3363, 0x927f, 0x1, 0x0);
        gbc.writeMem(0xa0ad, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x888a);
        EXPECT(gbc.pc(), 0xa0af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0ad), 0xcb);
        EXPECT(gbc.readMem(0xa0ae), 0x51);
        // CB 51 00A2
        gbc.setState(0xc7c4, 0x4582, 0x3370, 0xbb41, 0x8483, 0xdbeb, 0x1, 0x1);
        gbc.writeMem(0xc7c4, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x4582);
        EXPECT(gbc.pc(), 0xc7c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7c4), 0xcb);
        EXPECT(gbc.readMem(0xc7c5), 0x51);
        // CB 51 00A3
        gbc.setState(0xdf49, 0x134c, 0xf490, 0x9afb, 0xeedd, 0x338b, 0x1, 0x0);
        gbc.writeMem(0xdf49, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x134c);
        EXPECT(gbc.pc(), 0xdf4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf49), 0xcb);
        EXPECT(gbc.readMem(0xdf4a), 0x51);
        // CB 51 00A4
        gbc.setState(0xcd3f, 0xdfe4, 0x8320, 0xa07, 0xadb9, 0xae0d, 0x1, 0x1);
        gbc.writeMem(0xcd3f, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xdfe4);
        EXPECT(gbc.pc(), 0xcd41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd3f), 0xcb);
        EXPECT(gbc.readMem(0xcd40), 0x51);
        // CB 51 00A5
        gbc.setState(0x34c8, 0x2b87, 0xd100, 0x604a, 0xe871, 0x6d5f, 0x0, 0x0);
        gbc.writeMem(0x34c8, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x2b87);
        EXPECT(gbc.pc(), 0x34ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 00A6
        gbc.setState(0x740c, 0x7848, 0xafb0, 0xc9ba, 0xf008, 0x16e8, 0x1, 0x1);
        gbc.writeMem(0x740c, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x7848);
        EXPECT(gbc.pc(), 0x740e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 00A7
        gbc.setState(0xb604, 0xbcd4, 0xde20, 0x2342, 0x12b2, 0xb484, 0x1, 0x0);
        gbc.writeMem(0xb604, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xbcd4);
        EXPECT(gbc.pc(), 0xb606);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb604), 0xcb);
        EXPECT(gbc.readMem(0xb605), 0x51);
        // CB 51 00A8
        gbc.setState(0xc696, 0xd8ea, 0x1220, 0x60b3, 0xba54, 0x4856, 0x0, 0x1);
        gbc.writeMem(0xc696, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xd8ea);
        EXPECT(gbc.pc(), 0xc698);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc696), 0xcb);
        EXPECT(gbc.readMem(0xc697), 0x51);
        // CB 51 00A9
        gbc.setState(0xc9f0, 0xff6e, 0x79d0, 0x4f1b, 0xb3c5, 0x2b82, 0x0, 0x0);
        gbc.writeMem(0xc9f0, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xff6e);
        EXPECT(gbc.pc(), 0xc9f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9f0), 0xcb);
        EXPECT(gbc.readMem(0xc9f1), 0x51);
        // CB 51 00AA
        gbc.setState(0x3a88, 0x548b, 0xcaf0, 0xfc2f, 0xf781, 0xef53, 0x0, 0x0);
        gbc.writeMem(0x3a88, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x548b);
        EXPECT(gbc.pc(), 0x3a8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 00AB
        gbc.setState(0x908a, 0xf63e, 0xd950, 0x68d6, 0xa3de, 0x4c82, 0x0, 0x0);
        gbc.writeMem(0x908a, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xf63e);
        EXPECT(gbc.pc(), 0x908c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x908a), 0xcb);
        EXPECT(gbc.readMem(0x908b), 0x51);
        // CB 51 00AC
        gbc.setState(0xa371, 0x8cb0, 0x6790, 0xc976, 0x417b, 0xcb5b, 0x1, 0x0);
        gbc.writeMem(0xa371, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x8cb0);
        EXPECT(gbc.pc(), 0xa373);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa371), 0xcb);
        EXPECT(gbc.readMem(0xa372), 0x51);
        // CB 51 00AD
        gbc.setState(0xc6af, 0xd301, 0xfa90, 0xb2a7, 0xbe9b, 0x220d, 0x0, 0x0);
        gbc.writeMem(0xc6af, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xd301);
        EXPECT(gbc.pc(), 0xc6b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6af), 0xcb);
        EXPECT(gbc.readMem(0xc6b0), 0x51);
        // CB 51 00AE
        gbc.setState(0x814d, 0x1070, 0x9720, 0x30c8, 0xc15d, 0x2124, 0x1, 0x0);
        gbc.writeMem(0x814d, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x1070);
        EXPECT(gbc.pc(), 0x814f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x814d), 0xcb);
        EXPECT(gbc.readMem(0x814e), 0x51);
        // CB 51 00AF
        gbc.setState(0x15f2, 0x8a81, 0xfdb0, 0x5a4, 0x218d, 0xdf8e, 0x0, 0x0);
        gbc.writeMem(0x15f2, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x8a81);
        EXPECT(gbc.pc(), 0x15f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 00B0
        gbc.setState(0xe972, 0x444d, 0xd210, 0x4d9e, 0xeb7c, 0xd226, 0x1, 0x0);
        gbc.writeMem(0xe972, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x444d);
        EXPECT(gbc.pc(), 0xe974);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe972), 0xcb);
        EXPECT(gbc.readMem(0xe973), 0x51);
        // CB 51 00B1
        gbc.setState(0x1313, 0x4b44, 0x5e10, 0xc2e, 0x5a60, 0x730d, 0x0, 0x0);
        gbc.writeMem(0x1313, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x4b44);
        EXPECT(gbc.pc(), 0x1315);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 00B2
        gbc.setState(0xdeba, 0xae07, 0xcbe0, 0x1107, 0xe87, 0x5759, 0x0, 0x1);
        gbc.writeMem(0xdeba, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xae07);
        EXPECT(gbc.pc(), 0xdebc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdeba), 0xcb);
        EXPECT(gbc.readMem(0xdebb), 0x51);
        // CB 51 00B3
        gbc.setState(0x4a56, 0xff9, 0x13e0, 0x4af9, 0x1b9e, 0x2a68, 0x0, 0x0);
        gbc.writeMem(0x4a56, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xff9);
        EXPECT(gbc.pc(), 0x4a58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 00B4
        gbc.setState(0xb259, 0x1c41, 0xd880, 0xb82e, 0x9415, 0x2347, 0x1, 0x0);
        gbc.writeMem(0xb259, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x1c41);
        EXPECT(gbc.pc(), 0xb25b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb259), 0xcb);
        EXPECT(gbc.readMem(0xb25a), 0x51);
        // CB 51 00B5
        gbc.setState(0xe59f, 0xb9f5, 0x5960, 0xcf97, 0x4a28, 0x4826, 0x0, 0x1);
        gbc.writeMem(0xe59f, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xb9f5);
        EXPECT(gbc.pc(), 0xe5a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe59f), 0xcb);
        EXPECT(gbc.readMem(0xe5a0), 0x51);
        // CB 51 00B6
        gbc.setState(0xb09, 0x3b6, 0xe730, 0x5b7b, 0x6045, 0xc6dd, 0x0, 0x0);
        gbc.writeMem(0xb09, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x3b6);
        EXPECT(gbc.pc(), 0xb0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 00B7
        gbc.setState(0xdaad, 0x2082, 0x7440, 0x1b50, 0x5c14, 0x3560, 0x0, 0x1);
        gbc.writeMem(0xdaad, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x2082);
        EXPECT(gbc.pc(), 0xdaaf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdaad), 0xcb);
        EXPECT(gbc.readMem(0xdaae), 0x51);
        // CB 51 00B8
        gbc.setState(0x4015, 0x987, 0x9520, 0xbd53, 0xc3c4, 0x10ff, 0x1, 0x1);
        gbc.writeMem(0x4015, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x987);
        EXPECT(gbc.pc(), 0x4017);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 00B9
        gbc.setState(0xb29d, 0xf521, 0x6a10, 0x9857, 0x8878, 0x746d, 0x1, 0x0);
        gbc.writeMem(0xb29d, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xf521);
        EXPECT(gbc.pc(), 0xb29f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb29d), 0xcb);
        EXPECT(gbc.readMem(0xb29e), 0x51);
        // CB 51 00BA
        gbc.setState(0xb076, 0xcde0, 0xb870, 0xbde3, 0x6ef7, 0xce99, 0x0, 0x0);
        gbc.writeMem(0xb076, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xcde0);
        EXPECT(gbc.pc(), 0xb078);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb076), 0xcb);
        EXPECT(gbc.readMem(0xb077), 0x51);
        // CB 51 00BB
        gbc.setState(0x52a7, 0xa122, 0xce00, 0x335, 0xa247, 0x7522, 0x1, 0x0);
        gbc.writeMem(0x52a7, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xa122);
        EXPECT(gbc.pc(), 0x52a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 00BC
        gbc.setState(0x9a78, 0x3523, 0xc460, 0x3b7e, 0x654e, 0xdc0f, 0x1, 0x1);
        gbc.writeMem(0x9a78, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x3523);
        EXPECT(gbc.pc(), 0x9a7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a78), 0xcb);
        EXPECT(gbc.readMem(0x9a79), 0x51);
        // CB 51 00BD
        gbc.setState(0xca90, 0x8d6a, 0x5210, 0x584c, 0x7c5d, 0xe2d2, 0x0, 0x1);
        gbc.writeMem(0xca90, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x8d6a);
        EXPECT(gbc.pc(), 0xca92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca90), 0xcb);
        EXPECT(gbc.readMem(0xca91), 0x51);
        // CB 51 00BE
        gbc.setState(0x4b73, 0xae51, 0xa980, 0xef37, 0xb350, 0xd28c, 0x0, 0x1);
        gbc.writeMem(0x4b73, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xae51);
        EXPECT(gbc.pc(), 0x4b75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 00BF
        gbc.setState(0x9f7b, 0x3368, 0x8f0, 0xb978, 0x1ac3, 0x4284, 0x0, 0x1);
        gbc.writeMem(0x9f7b, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x3368);
        EXPECT(gbc.pc(), 0x9f7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f7b), 0xcb);
        EXPECT(gbc.readMem(0x9f7c), 0x51);
        // CB 51 00C0
        gbc.setState(0x5ec3, 0x5094, 0x5510, 0x256c, 0x5c1c, 0x779b, 0x0, 0x1);
        gbc.writeMem(0x5ec3, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x5094);
        EXPECT(gbc.pc(), 0x5ec5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 00C1
        gbc.setState(0x6bc6, 0x8678, 0x7250, 0x70fc, 0x72fd, 0x3156, 0x1, 0x0);
        gbc.writeMem(0x6bc6, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x8678);
        EXPECT(gbc.pc(), 0x6bc8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 00C2
        gbc.setState(0x9735, 0x6938, 0x8b30, 0x25e7, 0x811c, 0x34f7, 0x0, 0x0);
        gbc.writeMem(0x9735, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x6938);
        EXPECT(gbc.pc(), 0x9737);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9735), 0xcb);
        EXPECT(gbc.readMem(0x9736), 0x51);
        // CB 51 00C3
        gbc.setState(0xc2dc, 0x317a, 0x5060, 0xc5cf, 0x9838, 0x43d4, 0x0, 0x1);
        gbc.writeMem(0xc2dc, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x317a);
        EXPECT(gbc.pc(), 0xc2de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2dc), 0xcb);
        EXPECT(gbc.readMem(0xc2dd), 0x51);
        // CB 51 00C4
        gbc.setState(0x263c, 0xd323, 0xbcc0, 0xe276, 0x357f, 0xbe86, 0x0, 0x0);
        gbc.writeMem(0x263c, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xd323);
        EXPECT(gbc.pc(), 0x263e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 00C5
        gbc.setState(0x9a14, 0x9773, 0x6760, 0xb285, 0x8c8f, 0xb367, 0x1, 0x0);
        gbc.writeMem(0x9a14, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x9773);
        EXPECT(gbc.pc(), 0x9a16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a14), 0xcb);
        EXPECT(gbc.readMem(0x9a15), 0x51);
        // CB 51 00C6
        gbc.setState(0x2b67, 0xa588, 0x4e30, 0xdff7, 0x6ea, 0xb0c, 0x0, 0x0);
        gbc.writeMem(0x2b67, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xa588);
        EXPECT(gbc.pc(), 0x2b69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 00C7
        gbc.setState(0x6930, 0x1d61, 0x3220, 0xcd7b, 0x669c, 0xb027, 0x0, 0x1);
        gbc.writeMem(0x6930, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x1d61);
        EXPECT(gbc.pc(), 0x6932);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 00C8
        gbc.setState(0x9b30, 0xbcfe, 0x7f40, 0xa629, 0x92d0, 0xaf48, 0x1, 0x1);
        gbc.writeMem(0x9b30, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xbcfe);
        EXPECT(gbc.pc(), 0x9b32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b30), 0xcb);
        EXPECT(gbc.readMem(0x9b31), 0x51);
        // CB 51 00C9
        gbc.setState(0x1296, 0x76a2, 0xf2f0, 0xe5cf, 0x53f6, 0xbe4e, 0x0, 0x1);
        gbc.writeMem(0x1296, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x76a2);
        EXPECT(gbc.pc(), 0x1298);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 00CA
        gbc.setState(0xa41c, 0x5f03, 0xeaa0, 0x176b, 0xdd73, 0xd463, 0x1, 0x0);
        gbc.writeMem(0xa41c, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x5f03);
        EXPECT(gbc.pc(), 0xa41e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa41c), 0xcb);
        EXPECT(gbc.readMem(0xa41d), 0x51);
        // CB 51 00CB
        gbc.setState(0xd8b3, 0x2485, 0xd740, 0x6c7f, 0xc0e7, 0x1d8d, 0x1, 0x1);
        gbc.writeMem(0xd8b3, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x2485);
        EXPECT(gbc.pc(), 0xd8b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8b3), 0xcb);
        EXPECT(gbc.readMem(0xd8b4), 0x51);
        // CB 51 00CC
        gbc.setState(0x4689, 0x7289, 0x2460, 0xbbc9, 0x72d5, 0x8fe3, 0x0, 0x0);
        gbc.writeMem(0x4689, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x7289);
        EXPECT(gbc.pc(), 0x468b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 00CD
        gbc.setState(0x983a, 0xdfcf, 0xe340, 0xa3e7, 0x95eb, 0x8250, 0x1, 0x0);
        gbc.writeMem(0x983a, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xdfcf);
        EXPECT(gbc.pc(), 0x983c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x983a), 0xcb);
        EXPECT(gbc.readMem(0x983b), 0x51);
        // CB 51 00CE
        gbc.setState(0xe974, 0xd7f5, 0xa1d0, 0xf48a, 0xcd1d, 0x4892, 0x0, 0x1);
        gbc.writeMem(0xe974, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xd7f5);
        EXPECT(gbc.pc(), 0xe976);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe974), 0xcb);
        EXPECT(gbc.readMem(0xe975), 0x51);
        // CB 51 00CF
        gbc.setState(0x8f62, 0x6fcf, 0x5c0, 0xdc5e, 0x3da3, 0x9b09, 0x1, 0x1);
        gbc.writeMem(0x8f62, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x6fcf);
        EXPECT(gbc.pc(), 0x8f64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f62), 0xcb);
        EXPECT(gbc.readMem(0x8f63), 0x51);
        // CB 51 00D0
        gbc.setState(0xaf67, 0x6cfc, 0x1020, 0x42a5, 0x27ad, 0x6970, 0x0, 0x1);
        gbc.writeMem(0xaf67, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x6cfc);
        EXPECT(gbc.pc(), 0xaf69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf67), 0xcb);
        EXPECT(gbc.readMem(0xaf68), 0x51);
        // CB 51 00D1
        gbc.setState(0x6137, 0x2469, 0x9760, 0xfed3, 0xe0e7, 0x6edf, 0x0, 0x0);
        gbc.writeMem(0x6137, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x2469);
        EXPECT(gbc.pc(), 0x6139);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 00D2
        gbc.setState(0x2cb1, 0x9c4e, 0x2650, 0x72d7, 0xd7da, 0xe911, 0x0, 0x0);
        gbc.writeMem(0x2cb1, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x9c4e);
        EXPECT(gbc.pc(), 0x2cb3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 00D3
        gbc.setState(0x4b8c, 0x6e42, 0x3b90, 0xacf0, 0x9728, 0x3b56, 0x0, 0x0);
        gbc.writeMem(0x4b8c, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x6e42);
        EXPECT(gbc.pc(), 0x4b8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 00D4
        gbc.setState(0xa847, 0xa846, 0x3970, 0xa7c9, 0x2176, 0x584c, 0x1, 0x1);
        gbc.writeMem(0xa847, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xa846);
        EXPECT(gbc.pc(), 0xa849);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa847), 0xcb);
        EXPECT(gbc.readMem(0xa848), 0x51);
        // CB 51 00D5
        gbc.setState(0xbd5, 0x90bb, 0xc480, 0x67c5, 0x11e7, 0x20a0, 0x0, 0x1);
        gbc.writeMem(0xbd5, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x90bb);
        EXPECT(gbc.pc(), 0xbd7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 00D6
        gbc.setState(0x3899, 0x9842, 0x510, 0x7d9, 0x72d9, 0x1834, 0x0, 0x0);
        gbc.writeMem(0x3899, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x9842);
        EXPECT(gbc.pc(), 0x389b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 00D7
        gbc.setState(0x8ec1, 0x61c2, 0x6340, 0x3ba3, 0xee20, 0xb724, 0x1, 0x0);
        gbc.writeMem(0x8ec1, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x61c2);
        EXPECT(gbc.pc(), 0x8ec3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ec1), 0xcb);
        EXPECT(gbc.readMem(0x8ec2), 0x51);
        // CB 51 00D8
        gbc.setState(0x5f1f, 0x4c77, 0x42f0, 0x26e4, 0xcd7f, 0xddd0, 0x1, 0x1);
        gbc.writeMem(0x5f1f, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x4c77);
        EXPECT(gbc.pc(), 0x5f21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 00D9
        gbc.setState(0x7edc, 0xecaa, 0x3830, 0xb343, 0x1535, 0x80e3, 0x0, 0x1);
        gbc.writeMem(0x7edc, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xecaa);
        EXPECT(gbc.pc(), 0x7ede);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 00DA
        gbc.setState(0xdcd3, 0xd95c, 0xa5a0, 0xb48, 0xb618, 0x5585, 0x1, 0x1);
        gbc.writeMem(0xdcd3, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xd95c);
        EXPECT(gbc.pc(), 0xdcd5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcd3), 0xcb);
        EXPECT(gbc.readMem(0xdcd4), 0x51);
        // CB 51 00DB
        gbc.setState(0x903e, 0xf027, 0xb720, 0xd748, 0xfdf1, 0x91f9, 0x1, 0x0);
        gbc.writeMem(0x903e, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xf027);
        EXPECT(gbc.pc(), 0x9040);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x903e), 0xcb);
        EXPECT(gbc.readMem(0x903f), 0x51);
        // CB 51 00DC
        gbc.setState(0x6d68, 0xf9ec, 0xaa30, 0x11a2, 0xde18, 0xeebb, 0x1, 0x1);
        gbc.writeMem(0x6d68, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xf9ec);
        EXPECT(gbc.pc(), 0x6d6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 00DD
        gbc.setState(0x602d, 0x22c9, 0x9b60, 0x5ed0, 0x1a8f, 0x2983, 0x1, 0x1);
        gbc.writeMem(0x602d, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x22c9);
        EXPECT(gbc.pc(), 0x602f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 00DE
        gbc.setState(0x9e6f, 0x9db9, 0x47e0, 0x77be, 0x1d0f, 0xfb3a, 0x0, 0x0);
        gbc.writeMem(0x9e6f, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x9db9);
        EXPECT(gbc.pc(), 0x9e71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e6f), 0xcb);
        EXPECT(gbc.readMem(0x9e70), 0x51);
        // CB 51 00DF
        gbc.setState(0x542c, 0x229f, 0x8ea0, 0x53d0, 0xb999, 0xf952, 0x0, 0x1);
        gbc.writeMem(0x542c, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x229f);
        EXPECT(gbc.pc(), 0x542e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 00E0
        gbc.setState(0x498f, 0xd1be, 0x2140, 0xa53d, 0xf331, 0x2a53, 0x1, 0x0);
        gbc.writeMem(0x498f, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xd1be);
        EXPECT(gbc.pc(), 0x4991);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 00E1
        gbc.setState(0x1431, 0xfeda, 0xf670, 0x4725, 0x1619, 0x71d3, 0x0, 0x1);
        gbc.writeMem(0x1431, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xfeda);
        EXPECT(gbc.pc(), 0x1433);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 00E2
        gbc.setState(0xeaaa, 0xaf05, 0xddc0, 0x8b17, 0xcebe, 0x294e, 0x1, 0x1);
        gbc.writeMem(0xeaaa, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xaf05);
        EXPECT(gbc.pc(), 0xeaac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeaaa), 0xcb);
        EXPECT(gbc.readMem(0xeaab), 0x51);
        // CB 51 00E3
        gbc.setState(0x350c, 0x13b1, 0xd890, 0x5fbc, 0xbb48, 0xf6fb, 0x1, 0x1);
        gbc.writeMem(0x350c, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x13b1);
        EXPECT(gbc.pc(), 0x350e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 00E4
        gbc.setState(0x2724, 0x62c3, 0xc520, 0x1c60, 0x673f, 0x7c6e, 0x0, 0x1);
        gbc.writeMem(0x2724, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x62c3);
        EXPECT(gbc.pc(), 0x2726);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 00E5
        gbc.setState(0xa403, 0xd27d, 0x3a00, 0xd7f, 0x2a16, 0x9a8c, 0x0, 0x1);
        gbc.writeMem(0xa403, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xd27d);
        EXPECT(gbc.pc(), 0xa405);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa403), 0xcb);
        EXPECT(gbc.readMem(0xa404), 0x51);
        // CB 51 00E6
        gbc.setState(0x7b85, 0x1eb5, 0xd9e0, 0xf2f5, 0x32d2, 0x161, 0x0, 0x0);
        gbc.writeMem(0x7b85, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x1eb5);
        EXPECT(gbc.pc(), 0x7b87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 00E7
        gbc.setState(0x63c5, 0x436d, 0x97b0, 0xd2c6, 0x979f, 0xd1a3, 0x0, 0x1);
        gbc.writeMem(0x63c5, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x436d);
        EXPECT(gbc.pc(), 0x63c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 00E8
        gbc.setState(0x90a8, 0x6771, 0x1bf0, 0x236, 0xe479, 0xa54c, 0x1, 0x1);
        gbc.writeMem(0x90a8, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x6771);
        EXPECT(gbc.pc(), 0x90aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90a8), 0xcb);
        EXPECT(gbc.readMem(0x90a9), 0x51);
        // CB 51 00E9
        gbc.setState(0x33fb, 0x90bc, 0xa4e0, 0xf178, 0x5416, 0xbfed, 0x1, 0x0);
        gbc.writeMem(0x33fb, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x90bc);
        EXPECT(gbc.pc(), 0x33fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 00EA
        gbc.setState(0x6f16, 0xd204, 0x2e90, 0xa9b6, 0x859e, 0x5b9c, 0x1, 0x0);
        gbc.writeMem(0x6f16, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xd204);
        EXPECT(gbc.pc(), 0x6f18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 00EB
        gbc.setState(0xc6e2, 0xa931, 0xa890, 0x9c5b, 0x4e14, 0xf094, 0x0, 0x0);
        gbc.writeMem(0xc6e2, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xa931);
        EXPECT(gbc.pc(), 0xc6e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6e2), 0xcb);
        EXPECT(gbc.readMem(0xc6e3), 0x51);
        // CB 51 00EC
        gbc.setState(0x8854, 0x79b5, 0xce10, 0xed1c, 0x20ff, 0x4b9, 0x1, 0x0);
        gbc.writeMem(0x8854, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x79b5);
        EXPECT(gbc.pc(), 0x8856);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8854), 0xcb);
        EXPECT(gbc.readMem(0x8855), 0x51);
        // CB 51 00ED
        gbc.setState(0x116c, 0x8627, 0x54c0, 0x964a, 0xd87c, 0x84a, 0x0, 0x0);
        gbc.writeMem(0x116c, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x8627);
        EXPECT(gbc.pc(), 0x116e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 00EE
        gbc.setState(0x87e1, 0x58b2, 0x8320, 0xc243, 0x53f7, 0x9e9e, 0x1, 0x0);
        gbc.writeMem(0x87e1, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x58b2);
        EXPECT(gbc.pc(), 0x87e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87e1), 0xcb);
        EXPECT(gbc.readMem(0x87e2), 0x51);
        // CB 51 00EF
        gbc.setState(0xb951, 0xa713, 0x8900, 0x9877, 0x1d06, 0x12d2, 0x1, 0x0);
        gbc.writeMem(0xb951, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xa713);
        EXPECT(gbc.pc(), 0xb953);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb951), 0xcb);
        EXPECT(gbc.readMem(0xb952), 0x51);
        // CB 51 00F0
        gbc.setState(0xa231, 0x761f, 0xf680, 0xb69f, 0xd418, 0xecd3, 0x0, 0x0);
        gbc.writeMem(0xa231, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x761f);
        EXPECT(gbc.pc(), 0xa233);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa231), 0xcb);
        EXPECT(gbc.readMem(0xa232), 0x51);
        // CB 51 00F1
        gbc.setState(0x8fa7, 0x1c58, 0x5a30, 0xc912, 0xe33f, 0xca15, 0x1, 0x0);
        gbc.writeMem(0x8fa7, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x1c58);
        EXPECT(gbc.pc(), 0x8fa9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fa7), 0xcb);
        EXPECT(gbc.readMem(0x8fa8), 0x51);
        // CB 51 00F2
        gbc.setState(0xd79e, 0xfca6, 0x8aa0, 0x478c, 0x88a, 0x9ab6, 0x1, 0x0);
        gbc.writeMem(0xd79e, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xfca6);
        EXPECT(gbc.pc(), 0xd7a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd79e), 0xcb);
        EXPECT(gbc.readMem(0xd79f), 0x51);
        // CB 51 00F3
        gbc.setState(0x56ed, 0xabb7, 0xba00, 0xa84e, 0xaf39, 0xd6e4, 0x1, 0x0);
        gbc.writeMem(0x56ed, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xabb7);
        EXPECT(gbc.pc(), 0x56ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 00F4
        gbc.setState(0x1336, 0xa5fb, 0xabc0, 0x7e4c, 0x62b6, 0x3dc3, 0x1, 0x1);
        gbc.writeMem(0x1336, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xa5fb);
        EXPECT(gbc.pc(), 0x1338);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 00F5
        gbc.setState(0x55b3, 0x8a1, 0x3f80, 0xac57, 0x744b, 0x8e03, 0x1, 0x0);
        gbc.writeMem(0x55b3, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x8a1);
        EXPECT(gbc.pc(), 0x55b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 00F6
        gbc.setState(0x5c67, 0x8760, 0xbb0, 0x222f, 0x483, 0x2a7e, 0x1, 0x0);
        gbc.writeMem(0x5c67, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x8760);
        EXPECT(gbc.pc(), 0x5c69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 00F7
        gbc.setState(0x20b9, 0xfea0, 0xf1d0, 0x62ba, 0x119, 0x8892, 0x1, 0x1);
        gbc.writeMem(0x20b9, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xfea0);
        EXPECT(gbc.pc(), 0x20bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 00F8
        gbc.setState(0x88c9, 0xcef9, 0x8ad0, 0xbd50, 0x873c, 0xc3a5, 0x1, 0x0);
        gbc.writeMem(0x88c9, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xcef9);
        EXPECT(gbc.pc(), 0x88cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88c9), 0xcb);
        EXPECT(gbc.readMem(0x88ca), 0x51);
        // CB 51 00F9
        gbc.setState(0xed3e, 0x7bff, 0xa350, 0xb0cd, 0xc387, 0xb1f4, 0x0, 0x1);
        gbc.writeMem(0xed3e, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x7bff);
        EXPECT(gbc.pc(), 0xed40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed3e), 0xcb);
        EXPECT(gbc.readMem(0xed3f), 0x51);
        // CB 51 00FA
        gbc.setState(0x7598, 0xf58a, 0xf9d0, 0xf393, 0xb81e, 0xe6a6, 0x1, 0x0);
        gbc.writeMem(0x7598, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xf58a);
        EXPECT(gbc.pc(), 0x759a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 00FB
        gbc.setState(0x924, 0x6b1f, 0x1b80, 0x14dd, 0x6fda, 0xac0, 0x0, 0x1);
        gbc.writeMem(0x924, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x6b1f);
        EXPECT(gbc.pc(), 0x926);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 00FC
        gbc.setState(0x471d, 0x391d, 0x73a0, 0x990c, 0xfc6f, 0x4979, 0x0, 0x1);
        gbc.writeMem(0x471d, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x391d);
        EXPECT(gbc.pc(), 0x471f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 00FD
        gbc.setState(0xba9e, 0xae2, 0xd290, 0xd9b4, 0xdff4, 0x3648, 0x1, 0x0);
        gbc.writeMem(0xba9e, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xae2);
        EXPECT(gbc.pc(), 0xbaa0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba9e), 0xcb);
        EXPECT(gbc.readMem(0xba9f), 0x51);
        // CB 51 00FE
        gbc.setState(0x5fdc, 0x8445, 0x8420, 0x9d51, 0x1cf1, 0xe0eb, 0x1, 0x1);
        gbc.writeMem(0x5fdc, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x8445);
        EXPECT(gbc.pc(), 0x5fde);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 00FF
        gbc.setState(0xd36e, 0x87e6, 0xb700, 0xfb7e, 0xd5fc, 0x5031, 0x1, 0x0);
        gbc.writeMem(0xd36e, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x87e6);
        EXPECT(gbc.pc(), 0xd370);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd36e), 0xcb);
        EXPECT(gbc.readMem(0xd36f), 0x51);
        // CB 51 0100
        gbc.setState(0x8186, 0x4777, 0xc290, 0xd679, 0x6299, 0xa654, 0x0, 0x0);
        gbc.writeMem(0x8186, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x4777);
        EXPECT(gbc.pc(), 0x8188);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8186), 0xcb);
        EXPECT(gbc.readMem(0x8187), 0x51);
        // CB 51 0101
        gbc.setState(0x60fd, 0x6fc9, 0xe2c0, 0xe9ae, 0xaa77, 0x21d2, 0x1, 0x1);
        gbc.writeMem(0x60fd, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x6fc9);
        EXPECT(gbc.pc(), 0x60ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0102
        gbc.setState(0x744e, 0xaa30, 0x1610, 0xba77, 0x3651, 0x8f2b, 0x0, 0x0);
        gbc.writeMem(0x744e, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xaa30);
        EXPECT(gbc.pc(), 0x7450);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0103
        gbc.setState(0x96d5, 0x2203, 0x6d0, 0x1be7, 0xd775, 0xe352, 0x0, 0x0);
        gbc.writeMem(0x96d5, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x2203);
        EXPECT(gbc.pc(), 0x96d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96d5), 0xcb);
        EXPECT(gbc.readMem(0x96d6), 0x51);
        // CB 51 0104
        gbc.setState(0x286c, 0x3af4, 0xd100, 0x1ba6, 0x2e36, 0x93aa, 0x1, 0x1);
        gbc.writeMem(0x286c, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x3af4);
        EXPECT(gbc.pc(), 0x286e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0105
        gbc.setState(0xef22, 0x88a, 0xc770, 0x78cd, 0x8f3a, 0x8e91, 0x1, 0x0);
        gbc.writeMem(0xef22, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x88a);
        EXPECT(gbc.pc(), 0xef24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef22), 0xcb);
        EXPECT(gbc.readMem(0xef23), 0x51);
        // CB 51 0106
        gbc.setState(0x6549, 0xe992, 0x1d0, 0x831b, 0x1dfb, 0xbbd3, 0x0, 0x1);
        gbc.writeMem(0x6549, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xe992);
        EXPECT(gbc.pc(), 0x654b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0107
        gbc.setState(0x842f, 0x457d, 0xf300, 0x8614, 0x459b, 0xaa6c, 0x1, 0x1);
        gbc.writeMem(0x842f, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x457d);
        EXPECT(gbc.pc(), 0x8431);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x842f), 0xcb);
        EXPECT(gbc.readMem(0x8430), 0x51);
        // CB 51 0108
        gbc.setState(0x95e1, 0xee7d, 0x8f60, 0x54b3, 0xca3d, 0xe25d, 0x0, 0x0);
        gbc.writeMem(0x95e1, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xee7d);
        EXPECT(gbc.pc(), 0x95e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95e1), 0xcb);
        EXPECT(gbc.readMem(0x95e2), 0x51);
        // CB 51 0109
        gbc.setState(0x4afd, 0x4428, 0x1d80, 0x1022, 0x7925, 0x342a, 0x1, 0x1);
        gbc.writeMem(0x4afd, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x4428);
        EXPECT(gbc.pc(), 0x4aff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 010A
        gbc.setState(0x6214, 0xdb9b, 0xe290, 0xa559, 0x3f93, 0xf23a, 0x0, 0x0);
        gbc.writeMem(0x6214, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xdb9b);
        EXPECT(gbc.pc(), 0x6216);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 010B
        gbc.setState(0x7659, 0x4868, 0xfd90, 0x5a8d, 0xeaa2, 0x1ef4, 0x0, 0x0);
        gbc.writeMem(0x7659, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x4868);
        EXPECT(gbc.pc(), 0x765b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 010C
        gbc.setState(0xb677, 0x6926, 0xbbb0, 0x4a4b, 0xa63d, 0xb8ed, 0x1, 0x0);
        gbc.writeMem(0xb677, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x6926);
        EXPECT(gbc.pc(), 0xb679);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb677), 0xcb);
        EXPECT(gbc.readMem(0xb678), 0x51);
        // CB 51 010D
        gbc.setState(0xd345, 0x552e, 0xc9f0, 0x3126, 0x6593, 0xdd9, 0x0, 0x1);
        gbc.writeMem(0xd345, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x552e);
        EXPECT(gbc.pc(), 0xd347);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd345), 0xcb);
        EXPECT(gbc.readMem(0xd346), 0x51);
        // CB 51 010E
        gbc.setState(0xc6, 0xfa44, 0x3960, 0xecc6, 0xbe78, 0x1d36, 0x0, 0x1);
        gbc.writeMem(0xc6, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xfa44);
        EXPECT(gbc.pc(), 0xc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 010F
        gbc.setState(0x1f5b, 0xd8aa, 0xff60, 0x30f8, 0x651d, 0x52ea, 0x0, 0x0);
        gbc.writeMem(0x1f5b, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xd8aa);
        EXPECT(gbc.pc(), 0x1f5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0110
        gbc.setState(0x128, 0xa9dd, 0xe670, 0x130, 0x83ae, 0x9d3b, 0x1, 0x1);
        gbc.writeMem(0x128, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xa9dd);
        EXPECT(gbc.pc(), 0x12a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0111
        gbc.setState(0xb986, 0x24af, 0x4090, 0x7c1c, 0x1f5c, 0xeb33, 0x0, 0x1);
        gbc.writeMem(0xb986, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x24af);
        EXPECT(gbc.pc(), 0xb988);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb986), 0xcb);
        EXPECT(gbc.readMem(0xb987), 0x51);
        // CB 51 0112
        gbc.setState(0xc31, 0xc21a, 0x37b0, 0x9f97, 0x8387, 0x5ca7, 0x0, 0x0);
        gbc.writeMem(0xc31, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xc21a);
        EXPECT(gbc.pc(), 0xc33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0113
        gbc.setState(0x66a4, 0x6961, 0x54e0, 0x3f41, 0x2728, 0xcdef, 0x1, 0x0);
        gbc.writeMem(0x66a4, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x6961);
        EXPECT(gbc.pc(), 0x66a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0114
        gbc.setState(0x2fe6, 0x87a2, 0xa730, 0xd17, 0x8d44, 0x60b4, 0x0, 0x1);
        gbc.writeMem(0x2fe6, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x87a2);
        EXPECT(gbc.pc(), 0x2fe8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0115
        gbc.setState(0x7c4b, 0xb106, 0xf590, 0x7e8f, 0xfe3a, 0x8a23, 0x1, 0x1);
        gbc.writeMem(0x7c4b, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xb106);
        EXPECT(gbc.pc(), 0x7c4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0116
        gbc.setState(0x2e25, 0x50ae, 0x8890, 0x5ff1, 0x1fb, 0x3820, 0x1, 0x0);
        gbc.writeMem(0x2e25, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x50ae);
        EXPECT(gbc.pc(), 0x2e27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0117
        gbc.setState(0x6ee2, 0x7dbd, 0x5640, 0x42bf, 0x13fa, 0x2fb9, 0x0, 0x1);
        gbc.writeMem(0x6ee2, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x7dbd);
        EXPECT(gbc.pc(), 0x6ee4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0118
        gbc.setState(0x9318, 0x9f12, 0x2a70, 0x36ce, 0x1d9d, 0xa62e, 0x0, 0x1);
        gbc.writeMem(0x9318, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x9f12);
        EXPECT(gbc.pc(), 0x931a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9318), 0xcb);
        EXPECT(gbc.readMem(0x9319), 0x51);
        // CB 51 0119
        gbc.setState(0xad0c, 0x2c7f, 0xb2d0, 0xd3fd, 0x9f5, 0x5942, 0x0, 0x0);
        gbc.writeMem(0xad0c, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x2c7f);
        EXPECT(gbc.pc(), 0xad0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad0c), 0xcb);
        EXPECT(gbc.readMem(0xad0d), 0x51);
        // CB 51 011A
        gbc.setState(0x8413, 0xdf37, 0xc800, 0xec6c, 0x64ab, 0x3a9, 0x1, 0x1);
        gbc.writeMem(0x8413, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xdf37);
        EXPECT(gbc.pc(), 0x8415);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8413), 0xcb);
        EXPECT(gbc.readMem(0x8414), 0x51);
        // CB 51 011B
        gbc.setState(0x6976, 0x75b3, 0x40, 0x5814, 0x5a66, 0x1393, 0x0, 0x0);
        gbc.writeMem(0x6976, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x75b3);
        EXPECT(gbc.pc(), 0x6978);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 011C
        gbc.setState(0x69a8, 0xda5, 0xba90, 0x852, 0x825b, 0x91e, 0x1, 0x1);
        gbc.writeMem(0x69a8, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xda5);
        EXPECT(gbc.pc(), 0x69aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 011D
        gbc.setState(0x1542, 0x30ab, 0xca20, 0xcb12, 0xced9, 0x598d, 0x1, 0x1);
        gbc.writeMem(0x1542, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x30ab);
        EXPECT(gbc.pc(), 0x1544);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 011E
        gbc.setState(0x906a, 0xfbc1, 0x1e00, 0x1453, 0x1f1b, 0xb6ab, 0x1, 0x1);
        gbc.writeMem(0x906a, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xfbc1);
        EXPECT(gbc.pc(), 0x906c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x906a), 0xcb);
        EXPECT(gbc.readMem(0x906b), 0x51);
        // CB 51 011F
        gbc.setState(0xc364, 0x968e, 0x8e0, 0x4ba9, 0xc529, 0xc11a, 0x1, 0x0);
        gbc.writeMem(0xc364, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x968e);
        EXPECT(gbc.pc(), 0xc366);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc364), 0xcb);
        EXPECT(gbc.readMem(0xc365), 0x51);
        // CB 51 0120
        gbc.setState(0x29e2, 0x9ec, 0x71a0, 0x73b3, 0xdc9b, 0x7e8a, 0x1, 0x0);
        gbc.writeMem(0x29e2, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x9ec);
        EXPECT(gbc.pc(), 0x29e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0121
        gbc.setState(0x9aae, 0x8b6, 0xb9e0, 0x934c, 0x9683, 0xfea7, 0x0, 0x0);
        gbc.writeMem(0x9aae, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x8b6);
        EXPECT(gbc.pc(), 0x9ab0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9aae), 0xcb);
        EXPECT(gbc.readMem(0x9aaf), 0x51);
        // CB 51 0122
        gbc.setState(0xb273, 0x39a8, 0x14f0, 0x761c, 0x9af5, 0xd01b, 0x0, 0x0);
        gbc.writeMem(0xb273, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x39a8);
        EXPECT(gbc.pc(), 0xb275);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb273), 0xcb);
        EXPECT(gbc.readMem(0xb274), 0x51);
        // CB 51 0123
        gbc.setState(0xc2d4, 0xbe3b, 0x20b0, 0x7e7d, 0xa782, 0x876a, 0x1, 0x1);
        gbc.writeMem(0xc2d4, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xbe3b);
        EXPECT(gbc.pc(), 0xc2d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2d4), 0xcb);
        EXPECT(gbc.readMem(0xc2d5), 0x51);
        // CB 51 0124
        gbc.setState(0xb463, 0x90ac, 0xe4b0, 0xa105, 0x918b, 0x766c, 0x1, 0x0);
        gbc.writeMem(0xb463, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x90ac);
        EXPECT(gbc.pc(), 0xb465);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb463), 0xcb);
        EXPECT(gbc.readMem(0xb464), 0x51);
        // CB 51 0126
        gbc.setState(0xb485, 0x3360, 0xef70, 0x36c6, 0x29fa, 0xc23e, 0x1, 0x0);
        gbc.writeMem(0xb485, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x3360);
        EXPECT(gbc.pc(), 0xb487);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb485), 0xcb);
        EXPECT(gbc.readMem(0xb486), 0x51);
        // CB 51 0127
        gbc.setState(0x5995, 0x9403, 0xa430, 0x452d, 0xb5d9, 0xda96, 0x1, 0x0);
        gbc.writeMem(0x5995, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x9403);
        EXPECT(gbc.pc(), 0x5997);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0128
        gbc.setState(0xc779, 0x81a0, 0xff50, 0xe84e, 0xb3ce, 0x6536, 0x0, 0x0);
        gbc.writeMem(0xc779, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x81a0);
        EXPECT(gbc.pc(), 0xc77b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc779), 0xcb);
        EXPECT(gbc.readMem(0xc77a), 0x51);
        // CB 51 0129
        gbc.setState(0xe4cc, 0x7a04, 0x82d0, 0x2c69, 0x435d, 0x46c, 0x0, 0x0);
        gbc.writeMem(0xe4cc, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x7a04);
        EXPECT(gbc.pc(), 0xe4ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4cc), 0xcb);
        EXPECT(gbc.readMem(0xe4cd), 0x51);
        // CB 51 012A
        gbc.setState(0xc037, 0xe318, 0x7330, 0x9e1c, 0x6ce8, 0x9de1, 0x1, 0x1);
        gbc.writeMem(0xc037, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xe318);
        EXPECT(gbc.pc(), 0xc039);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc037), 0xcb);
        EXPECT(gbc.readMem(0xc038), 0x51);
        // CB 51 012B
        gbc.setState(0xa0c1, 0x55ba, 0xee30, 0xcd5, 0x551b, 0x15e6, 0x1, 0x0);
        gbc.writeMem(0xa0c1, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x55ba);
        EXPECT(gbc.pc(), 0xa0c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0c1), 0xcb);
        EXPECT(gbc.readMem(0xa0c2), 0x51);
        // CB 51 012C
        gbc.setState(0x8c09, 0xafcd, 0xdd30, 0x337c, 0xec42, 0xf6ad, 0x0, 0x0);
        gbc.writeMem(0x8c09, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xafcd);
        EXPECT(gbc.pc(), 0x8c0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c09), 0xcb);
        EXPECT(gbc.readMem(0x8c0a), 0x51);
        // CB 51 012D
        gbc.setState(0x882, 0x9451, 0xf7d0, 0xa213, 0xb108, 0x420c, 0x1, 0x1);
        gbc.writeMem(0x882, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x9451);
        EXPECT(gbc.pc(), 0x884);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 012E
        gbc.setState(0x41a1, 0x4e8, 0xb840, 0x3203, 0x481f, 0xeab8, 0x1, 0x1);
        gbc.writeMem(0x41a1, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x4e8);
        EXPECT(gbc.pc(), 0x41a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 012F
        gbc.setState(0x3a46, 0xb2b8, 0xeba0, 0xe750, 0x15bf, 0x16f4, 0x0, 0x1);
        gbc.writeMem(0x3a46, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xb2b8);
        EXPECT(gbc.pc(), 0x3a48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0130
        gbc.setState(0x3c94, 0xbd73, 0x6ad0, 0x82bc, 0xad00, 0xb32d, 0x0, 0x0);
        gbc.writeMem(0x3c94, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xbd73);
        EXPECT(gbc.pc(), 0x3c96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0131
        gbc.setState(0x306c, 0x6e3, 0x7390, 0x497f, 0xd782, 0xb3ce, 0x1, 0x1);
        gbc.writeMem(0x306c, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x6e3);
        EXPECT(gbc.pc(), 0x306e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0132
        gbc.setState(0xb227, 0xb16c, 0x2b10, 0x4a84, 0xd3bb, 0xb151, 0x1, 0x1);
        gbc.writeMem(0xb227, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xb16c);
        EXPECT(gbc.pc(), 0xb229);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb227), 0xcb);
        EXPECT(gbc.readMem(0xb228), 0x51);
        // CB 51 0133
        gbc.setState(0x243a, 0x9e82, 0x3d50, 0xbc6, 0x4dd2, 0xd581, 0x0, 0x0);
        gbc.writeMem(0x243a, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x9e82);
        EXPECT(gbc.pc(), 0x243c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0134
        gbc.setState(0x7d4b, 0x118a, 0xd40, 0x5713, 0xfa85, 0x1eb3, 0x1, 0x1);
        gbc.writeMem(0x7d4b, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x118a);
        EXPECT(gbc.pc(), 0x7d4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0135
        gbc.setState(0x6ad4, 0xe4a9, 0xa320, 0x3346, 0xdbf3, 0x652f, 0x0, 0x1);
        gbc.writeMem(0x6ad4, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xe4a9);
        EXPECT(gbc.pc(), 0x6ad6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0136
        gbc.setState(0xb0c0, 0xc162, 0xbbd0, 0x717e, 0x96d4, 0x4133, 0x1, 0x1);
        gbc.writeMem(0xb0c0, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xc162);
        EXPECT(gbc.pc(), 0xb0c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0c0), 0xcb);
        EXPECT(gbc.readMem(0xb0c1), 0x51);
        // CB 51 0137
        gbc.setState(0x3cd5, 0xe6ef, 0x5c20, 0x863, 0x5852, 0x7877, 0x0, 0x1);
        gbc.writeMem(0x3cd5, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xe6ef);
        EXPECT(gbc.pc(), 0x3cd7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0138
        gbc.setState(0x3425, 0xc9ea, 0xf1b0, 0xb3c6, 0xadc6, 0x1274, 0x1, 0x0);
        gbc.writeMem(0x3425, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xc9ea);
        EXPECT(gbc.pc(), 0x3427);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0139
        gbc.setState(0x7128, 0x2b00, 0x47e0, 0xb555, 0x120a, 0xc0c3, 0x0, 0x1);
        gbc.writeMem(0x7128, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x2b00);
        EXPECT(gbc.pc(), 0x712a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 013A
        gbc.setState(0x2a53, 0x913, 0x7720, 0xb87b, 0x5cea, 0xdb22, 0x0, 0x0);
        gbc.writeMem(0x2a53, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x913);
        EXPECT(gbc.pc(), 0x2a55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 013B
        gbc.setState(0x6c82, 0x95a8, 0xb0d0, 0x364b, 0x71b1, 0x31b6, 0x1, 0x1);
        gbc.writeMem(0x6c82, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x95a8);
        EXPECT(gbc.pc(), 0x6c84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 013C
        gbc.setState(0xdda0, 0x38b5, 0x1b70, 0xa464, 0xc384, 0xa490, 0x1, 0x1);
        gbc.writeMem(0xdda0, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x38b5);
        EXPECT(gbc.pc(), 0xdda2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdda0), 0xcb);
        EXPECT(gbc.readMem(0xdda1), 0x51);
        // CB 51 013D
        gbc.setState(0x311f, 0x8e3d, 0x4f00, 0x2a16, 0x2ff4, 0x34f5, 0x1, 0x0);
        gbc.writeMem(0x311f, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x8e3d);
        EXPECT(gbc.pc(), 0x3121);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 013E
        gbc.setState(0xeb18, 0xcf26, 0xb6e0, 0x2f9c, 0x7773, 0x4a6d, 0x1, 0x1);
        gbc.writeMem(0xeb18, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xcf26);
        EXPECT(gbc.pc(), 0xeb1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb18), 0xcb);
        EXPECT(gbc.readMem(0xeb19), 0x51);
        // CB 51 013F
        gbc.setState(0xdfcf, 0xa8df, 0xdcf0, 0x1d8, 0x2713, 0x2069, 0x0, 0x0);
        gbc.writeMem(0xdfcf, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xa8df);
        EXPECT(gbc.pc(), 0xdfd1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfcf), 0xcb);
        EXPECT(gbc.readMem(0xdfd0), 0x51);
        // CB 51 0140
        gbc.setState(0x4baa, 0xd4d8, 0xb3f0, 0x2b25, 0x5a67, 0xa47a, 0x1, 0x0);
        gbc.writeMem(0x4baa, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xd4d8);
        EXPECT(gbc.pc(), 0x4bac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0141
        gbc.setState(0x20c8, 0xf7f4, 0x14d0, 0x1e80, 0xbed0, 0x2c05, 0x1, 0x0);
        gbc.writeMem(0x20c8, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xf7f4);
        EXPECT(gbc.pc(), 0x20ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0142
        gbc.setState(0xee71, 0x7e13, 0x2150, 0x7956, 0x9119, 0x88cb, 0x1, 0x0);
        gbc.writeMem(0xee71, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x7e13);
        EXPECT(gbc.pc(), 0xee73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee71), 0xcb);
        EXPECT(gbc.readMem(0xee72), 0x51);
        // CB 51 0143
        gbc.setState(0x5091, 0xfaf0, 0xe120, 0xfae7, 0x9567, 0xdc60, 0x1, 0x0);
        gbc.writeMem(0x5091, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xfaf0);
        EXPECT(gbc.pc(), 0x5093);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0145
        gbc.setState(0x7e96, 0xd20f, 0x4080, 0xd1e5, 0xf8b6, 0x77f6, 0x1, 0x1);
        gbc.writeMem(0x7e96, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xd20f);
        EXPECT(gbc.pc(), 0x7e98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0146
        gbc.setState(0x733f, 0xded5, 0xcf10, 0xc371, 0x5f5c, 0x5609, 0x1, 0x1);
        gbc.writeMem(0x733f, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xded5);
        EXPECT(gbc.pc(), 0x7341);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0147
        gbc.setState(0x813, 0x42f, 0xc50, 0x3f35, 0x24df, 0x18d5, 0x1, 0x1);
        gbc.writeMem(0x813, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x42f);
        EXPECT(gbc.pc(), 0x815);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0148
        gbc.setState(0x311d, 0x8f4d, 0x4f60, 0x29cb, 0x9568, 0x67e, 0x1, 0x1);
        gbc.writeMem(0x311d, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x8f4d);
        EXPECT(gbc.pc(), 0x311f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0149
        gbc.setState(0x4214, 0x8ca9, 0x3e40, 0xee5e, 0xc6d5, 0x49bb, 0x0, 0x0);
        gbc.writeMem(0x4214, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x8ca9);
        EXPECT(gbc.pc(), 0x4216);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 014A
        gbc.setState(0xcaef, 0xf817, 0xed50, 0x6ea0, 0x1a25, 0xd29, 0x1, 0x0);
        gbc.writeMem(0xcaef, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xf817);
        EXPECT(gbc.pc(), 0xcaf1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcaef), 0xcb);
        EXPECT(gbc.readMem(0xcaf0), 0x51);
        // CB 51 014B
        gbc.setState(0xaebe, 0x4ec8, 0x3a90, 0x5d34, 0x5768, 0x3919, 0x0, 0x1);
        gbc.writeMem(0xaebe, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x4ec8);
        EXPECT(gbc.pc(), 0xaec0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaebe), 0xcb);
        EXPECT(gbc.readMem(0xaebf), 0x51);
        // CB 51 014C
        gbc.setState(0x1fae, 0xdff4, 0x2f70, 0xfd71, 0xc07f, 0xc275, 0x1, 0x1);
        gbc.writeMem(0x1fae, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xdff4);
        EXPECT(gbc.pc(), 0x1fb0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 014D
        gbc.setState(0xee75, 0x3dab, 0x6520, 0x1337, 0xd37e, 0x1499, 0x1, 0x1);
        gbc.writeMem(0xee75, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x3dab);
        EXPECT(gbc.pc(), 0xee77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee75), 0xcb);
        EXPECT(gbc.readMem(0xee76), 0x51);
        // CB 51 014E
        gbc.setState(0x3e88, 0x84e0, 0x32c0, 0x88b6, 0x104, 0xc190, 0x1, 0x1);
        gbc.writeMem(0x3e88, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x84e0);
        EXPECT(gbc.pc(), 0x3e8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 014F
        gbc.setState(0x3f6d, 0xb811, 0xb0e0, 0x9284, 0xd2f6, 0xe20, 0x0, 0x1);
        gbc.writeMem(0x3f6d, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xb811);
        EXPECT(gbc.pc(), 0x3f6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0150
        gbc.setState(0xc8f3, 0x2800, 0xab50, 0xc1c2, 0x1f74, 0x8bd5, 0x1, 0x0);
        gbc.writeMem(0xc8f3, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x2800);
        EXPECT(gbc.pc(), 0xc8f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8f3), 0xcb);
        EXPECT(gbc.readMem(0xc8f4), 0x51);
        // CB 51 0151
        gbc.setState(0xbf95, 0x9b7a, 0x82d0, 0xa69a, 0x9a78, 0x9416, 0x1, 0x0);
        gbc.writeMem(0xbf95, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x9b7a);
        EXPECT(gbc.pc(), 0xbf97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf95), 0xcb);
        EXPECT(gbc.readMem(0xbf96), 0x51);
        // CB 51 0152
        gbc.setState(0xd7f7, 0xfb0d, 0x1150, 0x4e52, 0x5282, 0x72e1, 0x1, 0x1);
        gbc.writeMem(0xd7f7, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xfb0d);
        EXPECT(gbc.pc(), 0xd7f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7f7), 0xcb);
        EXPECT(gbc.readMem(0xd7f8), 0x51);
        // CB 51 0153
        gbc.setState(0xd0f5, 0x94b4, 0x5430, 0x40a, 0xace7, 0x12a7, 0x1, 0x0);
        gbc.writeMem(0xd0f5, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x94b4);
        EXPECT(gbc.pc(), 0xd0f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0f5), 0xcb);
        EXPECT(gbc.readMem(0xd0f6), 0x51);
        // CB 51 0154
        gbc.setState(0x813b, 0x5c13, 0x7300, 0x2a80, 0x5f36, 0xd0e5, 0x1, 0x1);
        gbc.writeMem(0x813b, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x5c13);
        EXPECT(gbc.pc(), 0x813d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x813b), 0xcb);
        EXPECT(gbc.readMem(0x813c), 0x51);
        // CB 51 0155
        gbc.setState(0x5883, 0x219d, 0x5730, 0x8fd0, 0x415a, 0x62eb, 0x0, 0x0);
        gbc.writeMem(0x5883, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x219d);
        EXPECT(gbc.pc(), 0x5885);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0156
        gbc.setState(0x618, 0x6736, 0x4030, 0x853b, 0x36fc, 0x43fa, 0x1, 0x1);
        gbc.writeMem(0x618, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x6736);
        EXPECT(gbc.pc(), 0x61a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0158
        gbc.setState(0x8fde, 0x1e26, 0xdfe0, 0xb95c, 0x62e5, 0x12dd, 0x0, 0x1);
        gbc.writeMem(0x8fde, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x1e26);
        EXPECT(gbc.pc(), 0x8fe0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fde), 0xcb);
        EXPECT(gbc.readMem(0x8fdf), 0x51);
        // CB 51 0159
        gbc.setState(0x8c29, 0xd83c, 0xa3c0, 0x8e0e, 0x83da, 0x1905, 0x0, 0x0);
        gbc.writeMem(0x8c29, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xd83c);
        EXPECT(gbc.pc(), 0x8c2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c29), 0xcb);
        EXPECT(gbc.readMem(0x8c2a), 0x51);
        // CB 51 015A
        gbc.setState(0xc5f6, 0xc6cf, 0xd1f0, 0x211, 0xa304, 0x90e3, 0x0, 0x1);
        gbc.writeMem(0xc5f6, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xc6cf);
        EXPECT(gbc.pc(), 0xc5f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5f6), 0xcb);
        EXPECT(gbc.readMem(0xc5f7), 0x51);
        // CB 51 015B
        gbc.setState(0x4fe, 0xd2a6, 0xa0e0, 0xa957, 0xbe8f, 0xf291, 0x1, 0x1);
        gbc.writeMem(0x4fe, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xd2a6);
        EXPECT(gbc.pc(), 0x500);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 015C
        gbc.setState(0x1a0e, 0x567c, 0x2970, 0xb93e, 0x9b3, 0x9d7a, 0x0, 0x0);
        gbc.writeMem(0x1a0e, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x567c);
        EXPECT(gbc.pc(), 0x1a10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 015D
        gbc.setState(0x6503, 0x8ed7, 0x4d80, 0x4590, 0x8dbb, 0x1fb1, 0x1, 0x0);
        gbc.writeMem(0x6503, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x8ed7);
        EXPECT(gbc.pc(), 0x6505);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 015E
        gbc.setState(0x95d2, 0xd2f7, 0x89b0, 0xde04, 0xdcac, 0x3c74, 0x0, 0x1);
        gbc.writeMem(0x95d2, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xd2f7);
        EXPECT(gbc.pc(), 0x95d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95d2), 0xcb);
        EXPECT(gbc.readMem(0x95d3), 0x51);
        // CB 51 015F
        gbc.setState(0x172f, 0xadd6, 0x5c60, 0x6543, 0x8243, 0x970c, 0x0, 0x1);
        gbc.writeMem(0x172f, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xadd6);
        EXPECT(gbc.pc(), 0x1731);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0160
        gbc.setState(0xe767, 0x66ee, 0x76b0, 0x3a95, 0xda87, 0x285c, 0x1, 0x0);
        gbc.writeMem(0xe767, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x66ee);
        EXPECT(gbc.pc(), 0xe769);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe767), 0xcb);
        EXPECT(gbc.readMem(0xe768), 0x51);
        // CB 51 0161
        gbc.setState(0xb3e, 0x8249, 0xb6d0, 0x8e17, 0xc123, 0x2bf0, 0x1, 0x1);
        gbc.writeMem(0xb3e, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x8249);
        EXPECT(gbc.pc(), 0xb40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0162
        gbc.setState(0xd04a, 0x89b9, 0x4760, 0x4935, 0xf5e3, 0x1f0f, 0x0, 0x0);
        gbc.writeMem(0xd04a, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x89b9);
        EXPECT(gbc.pc(), 0xd04c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd04a), 0xcb);
        EXPECT(gbc.readMem(0xd04b), 0x51);
        // CB 51 0163
        gbc.setState(0x589a, 0x62d1, 0x86c0, 0xb17f, 0x4929, 0x60df, 0x0, 0x1);
        gbc.writeMem(0x589a, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x62d1);
        EXPECT(gbc.pc(), 0x589c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0164
        gbc.setState(0x7ea6, 0xc231, 0xbcd0, 0x2fac, 0x73a7, 0xfbe0, 0x0, 0x0);
        gbc.writeMem(0x7ea6, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xc231);
        EXPECT(gbc.pc(), 0x7ea8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0165
        gbc.setState(0xb6bb, 0xce05, 0x350, 0x1920, 0x3448, 0x3dab, 0x0, 0x0);
        gbc.writeMem(0xb6bb, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xce05);
        EXPECT(gbc.pc(), 0xb6bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6bb), 0xcb);
        EXPECT(gbc.readMem(0xb6bc), 0x51);
        // CB 51 0166
        gbc.setState(0x2c9a, 0x72a, 0xcb60, 0xcb05, 0x307c, 0x86eb, 0x1, 0x0);
        gbc.writeMem(0x2c9a, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x72a);
        EXPECT(gbc.pc(), 0x2c9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0167
        gbc.setState(0x6e32, 0xecf9, 0x3a40, 0x9b76, 0xeb, 0xce1e, 0x1, 0x1);
        gbc.writeMem(0x6e32, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xecf9);
        EXPECT(gbc.pc(), 0x6e34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0168
        gbc.setState(0xe093, 0xb067, 0x34e0, 0xbe6, 0xeaf9, 0x9cfd, 0x0, 0x0);
        gbc.writeMem(0xe093, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xb067);
        EXPECT(gbc.pc(), 0xe095);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe093), 0xcb);
        EXPECT(gbc.readMem(0xe094), 0x51);
        // CB 51 0169
        gbc.setState(0x1442, 0x4388, 0xd130, 0x1365, 0xb970, 0xc426, 0x1, 0x1);
        gbc.writeMem(0x1442, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x4388);
        EXPECT(gbc.pc(), 0x1444);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 016A
        gbc.setState(0x6310, 0xcf43, 0xa2e0, 0x9cd3, 0xf397, 0xbe30, 0x1, 0x1);
        gbc.writeMem(0x6310, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xcf43);
        EXPECT(gbc.pc(), 0x6312);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 016B
        gbc.setState(0xb07f, 0x7b49, 0x30f0, 0xf87a, 0x47cd, 0xd515, 0x1, 0x0);
        gbc.writeMem(0xb07f, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x7b49);
        EXPECT(gbc.pc(), 0xb081);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb07f), 0xcb);
        EXPECT(gbc.readMem(0xb080), 0x51);
        // CB 51 016C
        gbc.setState(0x608d, 0xe974, 0xa40, 0xe411, 0x61de, 0xc48d, 0x0, 0x1);
        gbc.writeMem(0x608d, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xe974);
        EXPECT(gbc.pc(), 0x608f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 016D
        gbc.setState(0x9c3c, 0xf1e6, 0x8600, 0xc680, 0x3d43, 0x656, 0x1, 0x0);
        gbc.writeMem(0x9c3c, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xf1e6);
        EXPECT(gbc.pc(), 0x9c3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c3c), 0xcb);
        EXPECT(gbc.readMem(0x9c3d), 0x51);
        // CB 51 016E
        gbc.setState(0x23c6, 0x92e7, 0xd090, 0xccc4, 0x697, 0x3dd6, 0x1, 0x1);
        gbc.writeMem(0x23c6, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x92e7);
        EXPECT(gbc.pc(), 0x23c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 016F
        gbc.setState(0xd5f, 0x1898, 0x2ef0, 0x4b72, 0x8f55, 0x3111, 0x0, 0x0);
        gbc.writeMem(0xd5f, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x1898);
        EXPECT(gbc.pc(), 0xd61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0170
        gbc.setState(0xde4a, 0x7e80, 0x4b0, 0x4686, 0x2206, 0xab8e, 0x1, 0x1);
        gbc.writeMem(0xde4a, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x7e80);
        EXPECT(gbc.pc(), 0xde4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde4a), 0xcb);
        EXPECT(gbc.readMem(0xde4b), 0x51);
        // CB 51 0171
        gbc.setState(0xc146, 0xd6cd, 0x1270, 0xd049, 0x66bb, 0xe85, 0x0, 0x0);
        gbc.writeMem(0xc146, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xd6cd);
        EXPECT(gbc.pc(), 0xc148);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc146), 0xcb);
        EXPECT(gbc.readMem(0xc147), 0x51);
        // CB 51 0172
        gbc.setState(0x67e2, 0x9aff, 0x8b90, 0x2965, 0x22f8, 0x63dd, 0x1, 0x1);
        gbc.writeMem(0x67e2, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x9aff);
        EXPECT(gbc.pc(), 0x67e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0173
        gbc.setState(0xa940, 0x4ed9, 0x97d0, 0xfe57, 0x287d, 0x11fd, 0x0, 0x1);
        gbc.writeMem(0xa940, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x4ed9);
        EXPECT(gbc.pc(), 0xa942);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa940), 0xcb);
        EXPECT(gbc.readMem(0xa941), 0x51);
        // CB 51 0174
        gbc.setState(0xae4e, 0x3e2c, 0xd080, 0x69ec, 0xe941, 0xd8a9, 0x1, 0x0);
        gbc.writeMem(0xae4e, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x3e2c);
        EXPECT(gbc.pc(), 0xae50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae4e), 0xcb);
        EXPECT(gbc.readMem(0xae4f), 0x51);
        // CB 51 0175
        gbc.setState(0x9234, 0x7f7f, 0xed60, 0x1419, 0x7f2b, 0xeae8, 0x0, 0x1);
        gbc.writeMem(0x9234, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x7f7f);
        EXPECT(gbc.pc(), 0x9236);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9234), 0xcb);
        EXPECT(gbc.readMem(0x9235), 0x51);
        // CB 51 0176
        gbc.setState(0xbbc, 0xe8ef, 0xa270, 0x7e3d, 0xcad, 0x121, 0x0, 0x1);
        gbc.writeMem(0xbbc, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xe8ef);
        EXPECT(gbc.pc(), 0xbbe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0177
        gbc.setState(0xe489, 0x5dd, 0x4a30, 0xe1f8, 0xf05b, 0x6c36, 0x0, 0x1);
        gbc.writeMem(0xe489, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x5dd);
        EXPECT(gbc.pc(), 0xe48b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe489), 0xcb);
        EXPECT(gbc.readMem(0xe48a), 0x51);
        // CB 51 0178
        gbc.setState(0x93da, 0x9a7, 0xc2f0, 0x410, 0xe08, 0xf88a, 0x1, 0x1);
        gbc.writeMem(0x93da, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x9a7);
        EXPECT(gbc.pc(), 0x93dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93da), 0xcb);
        EXPECT(gbc.readMem(0x93db), 0x51);
        // CB 51 0179
        gbc.setState(0xc22, 0x906a, 0xbc50, 0xb79b, 0x8ae9, 0xdc14, 0x1, 0x0);
        gbc.writeMem(0xc22, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x906a);
        EXPECT(gbc.pc(), 0xc24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 017A
        gbc.setState(0x2a45, 0x41ed, 0xc160, 0x75ef, 0xd704, 0xa695, 0x1, 0x0);
        gbc.writeMem(0x2a45, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x41ed);
        EXPECT(gbc.pc(), 0x2a47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 017B
        gbc.setState(0x45fc, 0x407d, 0x4a70, 0xf29c, 0x9456, 0x3d57, 0x1, 0x1);
        gbc.writeMem(0x45fc, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x407d);
        EXPECT(gbc.pc(), 0x45fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 017C
        gbc.setState(0x3226, 0x3923, 0xdbf0, 0xad30, 0x61d7, 0x5312, 0x0, 0x1);
        gbc.writeMem(0x3226, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x3923);
        EXPECT(gbc.pc(), 0x3228);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 017D
        gbc.setState(0xa449, 0x6a6c, 0x9b90, 0x8748, 0xd2b7, 0x747a, 0x0, 0x0);
        gbc.writeMem(0xa449, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x6a6c);
        EXPECT(gbc.pc(), 0xa44b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa449), 0xcb);
        EXPECT(gbc.readMem(0xa44a), 0x51);
        // CB 51 0180
        gbc.setState(0xe225, 0x41f6, 0x9550, 0xe3d9, 0xc100, 0x84dc, 0x1, 0x0);
        gbc.writeMem(0xe225, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x41f6);
        EXPECT(gbc.pc(), 0xe227);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe225), 0xcb);
        EXPECT(gbc.readMem(0xe226), 0x51);
        // CB 51 0182
        gbc.setState(0x7e9b, 0x7e2d, 0x5e20, 0x362d, 0xe199, 0x41b3, 0x1, 0x0);
        gbc.writeMem(0x7e9b, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x7e2d);
        EXPECT(gbc.pc(), 0x7e9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0183
        gbc.setState(0x2c1, 0xcade, 0x98f0, 0x8740, 0xe6fc, 0x245e, 0x1, 0x0);
        gbc.writeMem(0x2c1, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xcade);
        EXPECT(gbc.pc(), 0x2c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0185
        gbc.setState(0xd90, 0xc368, 0xb530, 0x8a82, 0xf852, 0x89fc, 0x0, 0x1);
        gbc.writeMem(0xd90, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xc368);
        EXPECT(gbc.pc(), 0xd92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0186
        gbc.setState(0x940e, 0x15bd, 0x60e0, 0xac41, 0x40b2, 0xbc7d, 0x0, 0x0);
        gbc.writeMem(0x940e, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x15bd);
        EXPECT(gbc.pc(), 0x9410);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x940e), 0xcb);
        EXPECT(gbc.readMem(0x940f), 0x51);
        // CB 51 0187
        gbc.setState(0xb631, 0x7be0, 0x5290, 0x5da3, 0x33df, 0x5b1d, 0x0, 0x0);
        gbc.writeMem(0xb631, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x7be0);
        EXPECT(gbc.pc(), 0xb633);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb631), 0xcb);
        EXPECT(gbc.readMem(0xb632), 0x51);
        // CB 51 0188
        gbc.setState(0x31c5, 0x23a7, 0xc270, 0xd69, 0x6068, 0x9951, 0x1, 0x1);
        gbc.writeMem(0x31c5, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x23a7);
        EXPECT(gbc.pc(), 0x31c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0189
        gbc.setState(0xe4a9, 0xa8c9, 0x7830, 0x4497, 0x5ad4, 0xd8c4, 0x1, 0x0);
        gbc.writeMem(0xe4a9, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xa8c9);
        EXPECT(gbc.pc(), 0xe4ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4a9), 0xcb);
        EXPECT(gbc.readMem(0xe4aa), 0x51);
        // CB 51 018B
        gbc.setState(0xc391, 0xfb78, 0xf7f0, 0xf7d8, 0xf51b, 0x4339, 0x1, 0x1);
        gbc.writeMem(0xc391, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xfb78);
        EXPECT(gbc.pc(), 0xc393);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc391), 0xcb);
        EXPECT(gbc.readMem(0xc392), 0x51);
        // CB 51 018C
        gbc.setState(0xa663, 0xd0f, 0xc350, 0x3f34, 0xab47, 0x1194, 0x1, 0x0);
        gbc.writeMem(0xa663, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xd0f);
        EXPECT(gbc.pc(), 0xa665);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa663), 0xcb);
        EXPECT(gbc.readMem(0xa664), 0x51);
        // CB 51 018D
        gbc.setState(0xa14b, 0xd58d, 0xb5b0, 0x47db, 0xb536, 0x8e15, 0x0, 0x1);
        gbc.writeMem(0xa14b, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xd58d);
        EXPECT(gbc.pc(), 0xa14d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa14b), 0xcb);
        EXPECT(gbc.readMem(0xa14c), 0x51);
        // CB 51 018E
        gbc.setState(0x8ece, 0x68fe, 0x2c20, 0x27c2, 0x9588, 0x1062, 0x0, 0x1);
        gbc.writeMem(0x8ece, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x68fe);
        EXPECT(gbc.pc(), 0x8ed0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ece), 0xcb);
        EXPECT(gbc.readMem(0x8ecf), 0x51);
        // CB 51 018F
        gbc.setState(0xdd42, 0x2009, 0xcf70, 0xf83, 0x8c64, 0x983e, 0x0, 0x1);
        gbc.writeMem(0xdd42, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x2009);
        EXPECT(gbc.pc(), 0xdd44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd42), 0xcb);
        EXPECT(gbc.readMem(0xdd43), 0x51);
        // CB 51 0190
        gbc.setState(0x8101, 0x9568, 0xdd60, 0x9aab, 0x7404, 0xfdc7, 0x0, 0x1);
        gbc.writeMem(0x8101, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x9568);
        EXPECT(gbc.pc(), 0x8103);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8101), 0xcb);
        EXPECT(gbc.readMem(0x8102), 0x51);
        // CB 51 0191
        gbc.setState(0x3a61, 0x27c1, 0xf510, 0x5c57, 0xd66a, 0x6633, 0x1, 0x0);
        gbc.writeMem(0x3a61, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x27c1);
        EXPECT(gbc.pc(), 0x3a63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0192
        gbc.setState(0x8251, 0xa6fb, 0x5320, 0xb55f, 0x9319, 0x60b8, 0x0, 0x1);
        gbc.writeMem(0x8251, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xa6fb);
        EXPECT(gbc.pc(), 0x8253);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8251), 0xcb);
        EXPECT(gbc.readMem(0x8252), 0x51);
        // CB 51 0193
        gbc.setState(0xdbb6, 0x6e8a, 0xbbd0, 0x39a1, 0xac0c, 0x6084, 0x1, 0x0);
        gbc.writeMem(0xdbb6, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x6e8a);
        EXPECT(gbc.pc(), 0xdbb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbb6), 0xcb);
        EXPECT(gbc.readMem(0xdbb7), 0x51);
        // CB 51 0194
        gbc.setState(0xd51b, 0x8cb7, 0xd740, 0xb414, 0x7537, 0x4f9e, 0x0, 0x0);
        gbc.writeMem(0xd51b, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x8cb7);
        EXPECT(gbc.pc(), 0xd51d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd51b), 0xcb);
        EXPECT(gbc.readMem(0xd51c), 0x51);
        // CB 51 0195
        gbc.setState(0x32b5, 0xfae9, 0xbb50, 0xc507, 0x2763, 0x2e90, 0x0, 0x0);
        gbc.writeMem(0x32b5, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xfae9);
        EXPECT(gbc.pc(), 0x32b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0196
        gbc.setState(0x49fd, 0xa372, 0x36c0, 0xc018, 0xff56, 0x6493, 0x0, 0x0);
        gbc.writeMem(0x49fd, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xa372);
        EXPECT(gbc.pc(), 0x49ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0197
        gbc.setState(0x85d7, 0x1aad, 0x9a00, 0xf6b3, 0x6d5c, 0x9c71, 0x1, 0x0);
        gbc.writeMem(0x85d7, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x1aad);
        EXPECT(gbc.pc(), 0x85d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85d7), 0xcb);
        EXPECT(gbc.readMem(0x85d8), 0x51);
        // CB 51 0198
        gbc.setState(0xb16b, 0x7c8a, 0x8150, 0xc9ae, 0x47d, 0xa4d4, 0x0, 0x0);
        gbc.writeMem(0xb16b, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x7c8a);
        EXPECT(gbc.pc(), 0xb16d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb16b), 0xcb);
        EXPECT(gbc.readMem(0xb16c), 0x51);
        // CB 51 0199
        gbc.setState(0xd603, 0x4750, 0xc200, 0x9ae2, 0xcedc, 0xbe6a, 0x1, 0x0);
        gbc.writeMem(0xd603, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x4750);
        EXPECT(gbc.pc(), 0xd605);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd603), 0xcb);
        EXPECT(gbc.readMem(0xd604), 0x51);
        // CB 51 019B
        gbc.setState(0xd223, 0x20cd, 0xf9f0, 0xa1af, 0xb6c, 0x74c6, 0x0, 0x0);
        gbc.writeMem(0xd223, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x20cd);
        EXPECT(gbc.pc(), 0xd225);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd223), 0xcb);
        EXPECT(gbc.readMem(0xd224), 0x51);
        // CB 51 019C
        gbc.setState(0xb63b, 0x811e, 0x3c70, 0x8c1c, 0x4d2c, 0x1593, 0x0, 0x1);
        gbc.writeMem(0xb63b, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x811e);
        EXPECT(gbc.pc(), 0xb63d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb63b), 0xcb);
        EXPECT(gbc.readMem(0xb63c), 0x51);
        // CB 51 019D
        gbc.setState(0x348b, 0xa379, 0x2050, 0xecb7, 0x7d3c, 0x5fa2, 0x1, 0x0);
        gbc.writeMem(0x348b, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xa379);
        EXPECT(gbc.pc(), 0x348d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 019E
        gbc.setState(0x5cb3, 0xa8b0, 0x86c0, 0x77e5, 0xb23f, 0x22a0, 0x0, 0x1);
        gbc.writeMem(0x5cb3, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xa8b0);
        EXPECT(gbc.pc(), 0x5cb5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 019F
        gbc.setState(0x3f6e, 0x4f02, 0xfc80, 0x6036, 0x4408, 0x8e9c, 0x1, 0x1);
        gbc.writeMem(0x3f6e, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x4f02);
        EXPECT(gbc.pc(), 0x3f70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 01A0
        gbc.setState(0x1878, 0xf731, 0x1500, 0xa4bc, 0xb67d, 0xa20a, 0x0, 0x0);
        gbc.writeMem(0x1878, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xf731);
        EXPECT(gbc.pc(), 0x187a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 01A1
        gbc.setState(0xcf63, 0x8a99, 0xf3a0, 0x487c, 0x245b, 0xf252, 0x1, 0x1);
        gbc.writeMem(0xcf63, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x8a99);
        EXPECT(gbc.pc(), 0xcf65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf63), 0xcb);
        EXPECT(gbc.readMem(0xcf64), 0x51);
        // CB 51 01A2
        gbc.setState(0x56aa, 0x20ce, 0x62a0, 0x68ae, 0x1170, 0x4bbd, 0x0, 0x0);
        gbc.writeMem(0x56aa, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x20ce);
        EXPECT(gbc.pc(), 0x56ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 01A3
        gbc.setState(0xddc7, 0xc340, 0xf340, 0x3cc8, 0x8487, 0x6ac7, 0x0, 0x1);
        gbc.writeMem(0xddc7, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xc340);
        EXPECT(gbc.pc(), 0xddc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddc7), 0xcb);
        EXPECT(gbc.readMem(0xddc8), 0x51);
        // CB 51 01A4
        gbc.setState(0x51d0, 0x73e7, 0x9800, 0x2114, 0xd953, 0x83d6, 0x0, 0x0);
        gbc.writeMem(0x51d0, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x73e7);
        EXPECT(gbc.pc(), 0x51d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 01A5
        gbc.setState(0x4921, 0x3009, 0x12a0, 0x65de, 0xd721, 0x1378, 0x0, 0x1);
        gbc.writeMem(0x4921, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x3009);
        EXPECT(gbc.pc(), 0x4923);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 01A6
        gbc.setState(0xd523, 0xe9ed, 0x30a0, 0x84eb, 0x4d2, 0xade7, 0x1, 0x1);
        gbc.writeMem(0xd523, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xe9ed);
        EXPECT(gbc.pc(), 0xd525);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd523), 0xcb);
        EXPECT(gbc.readMem(0xd524), 0x51);
        // CB 51 01A7
        gbc.setState(0x2cd8, 0xb2cb, 0xe340, 0x1a7e, 0x1ee8, 0x3338, 0x0, 0x1);
        gbc.writeMem(0x2cd8, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xb2cb);
        EXPECT(gbc.pc(), 0x2cda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 01A8
        gbc.setState(0x5fbc, 0xb483, 0x800, 0xf364, 0x60de, 0x947c, 0x0, 0x1);
        gbc.writeMem(0x5fbc, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xb483);
        EXPECT(gbc.pc(), 0x5fbe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 01A9
        gbc.setState(0x8b70, 0xe3bf, 0x400, 0x2bcb, 0x1994, 0x8d71, 0x0, 0x1);
        gbc.writeMem(0x8b70, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xe3bf);
        EXPECT(gbc.pc(), 0x8b72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b70), 0xcb);
        EXPECT(gbc.readMem(0x8b71), 0x51);
        // CB 51 01AA
        gbc.setState(0x5d0a, 0x3749, 0x4ad0, 0x4c5b, 0x8b98, 0xb935, 0x0, 0x1);
        gbc.writeMem(0x5d0a, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x3749);
        EXPECT(gbc.pc(), 0x5d0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 01AB
        gbc.setState(0x148f, 0xb106, 0x7240, 0xffb0, 0x2d95, 0x7049, 0x1, 0x1);
        gbc.writeMem(0x148f, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xb106);
        EXPECT(gbc.pc(), 0x1491);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 01AC
        gbc.setState(0xc9d3, 0x9a01, 0x2a0, 0x4256, 0x9e48, 0xa4a9, 0x0, 0x0);
        gbc.writeMem(0xc9d3, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x9a01);
        EXPECT(gbc.pc(), 0xc9d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9d3), 0xcb);
        EXPECT(gbc.readMem(0xc9d4), 0x51);
        // CB 51 01AD
        gbc.setState(0x284b, 0xb80c, 0x5990, 0x7c51, 0x2fe2, 0x2da5, 0x0, 0x0);
        gbc.writeMem(0x284b, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xb80c);
        EXPECT(gbc.pc(), 0x284d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 01AE
        gbc.setState(0xd4cc, 0x6f58, 0xba40, 0xf5df, 0xfd49, 0x999c, 0x1, 0x0);
        gbc.writeMem(0xd4cc, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x6f58);
        EXPECT(gbc.pc(), 0xd4ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4cc), 0xcb);
        EXPECT(gbc.readMem(0xd4cd), 0x51);
        // CB 51 01AF
        gbc.setState(0x9e23, 0x939c, 0xb980, 0x88b8, 0xfcb1, 0xc387, 0x0, 0x1);
        gbc.writeMem(0x9e23, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x939c);
        EXPECT(gbc.pc(), 0x9e25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e23), 0xcb);
        EXPECT(gbc.readMem(0x9e24), 0x51);
        // CB 51 01B0
        gbc.setState(0x8654, 0x94c1, 0x120, 0x19b6, 0xfc40, 0x837a, 0x1, 0x0);
        gbc.writeMem(0x8654, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x94c1);
        EXPECT(gbc.pc(), 0x8656);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8654), 0xcb);
        EXPECT(gbc.readMem(0x8655), 0x51);
        // CB 51 01B1
        gbc.setState(0x95fa, 0x13f4, 0x26e0, 0x8098, 0x997e, 0x329, 0x0, 0x1);
        gbc.writeMem(0x95fa, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x13f4);
        EXPECT(gbc.pc(), 0x95fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95fa), 0xcb);
        EXPECT(gbc.readMem(0x95fb), 0x51);
        // CB 51 01B2
        gbc.setState(0xad80, 0x1ac4, 0xa830, 0xf92, 0xe3ae, 0xaef8, 0x1, 0x1);
        gbc.writeMem(0xad80, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x1ac4);
        EXPECT(gbc.pc(), 0xad82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad80), 0xcb);
        EXPECT(gbc.readMem(0xad81), 0x51);
        // CB 51 01B3
        gbc.setState(0x8e47, 0xa19e, 0xfcd0, 0x4c5d, 0x71a7, 0xed11, 0x0, 0x0);
        gbc.writeMem(0x8e47, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xa19e);
        EXPECT(gbc.pc(), 0x8e49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e47), 0xcb);
        EXPECT(gbc.readMem(0x8e48), 0x51);
        // CB 51 01B4
        gbc.setState(0xc0fe, 0x7cc0, 0xa450, 0xec29, 0xc08, 0x5608, 0x1, 0x0);
        gbc.writeMem(0xc0fe, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x7cc0);
        EXPECT(gbc.pc(), 0xc100);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0fe), 0xcb);
        EXPECT(gbc.readMem(0xc0ff), 0x51);
        // CB 51 01B5
        gbc.setState(0x64b3, 0xe063, 0xd0f0, 0xdf5a, 0xeb80, 0x6f82, 0x0, 0x1);
        gbc.writeMem(0x64b3, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xe063);
        EXPECT(gbc.pc(), 0x64b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 01B6
        gbc.setState(0x409b, 0x7a6, 0x3710, 0xeb18, 0x9fa1, 0x6278, 0x0, 0x0);
        gbc.writeMem(0x409b, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x7a6);
        EXPECT(gbc.pc(), 0x409d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 01B7
        gbc.setState(0x2686, 0x91e0, 0xbae0, 0x8909, 0x1427, 0x7767, 0x0, 0x0);
        gbc.writeMem(0x2686, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x91e0);
        EXPECT(gbc.pc(), 0x2688);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 01B8
        gbc.setState(0xa6fc, 0xf2b4, 0x5f90, 0x8bff, 0x1ce8, 0x2d11, 0x1, 0x1);
        gbc.writeMem(0xa6fc, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xf2b4);
        EXPECT(gbc.pc(), 0xa6fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6fc), 0xcb);
        EXPECT(gbc.readMem(0xa6fd), 0x51);
        // CB 51 01B9
        gbc.setState(0xab0b, 0x63fa, 0x5b80, 0xf9d5, 0x1a79, 0xc86e, 0x1, 0x1);
        gbc.writeMem(0xab0b, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x63fa);
        EXPECT(gbc.pc(), 0xab0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab0b), 0xcb);
        EXPECT(gbc.readMem(0xab0c), 0x51);
        // CB 51 01BA
        gbc.setState(0x4f9b, 0x22ff, 0x2dc0, 0x4cc3, 0x3870, 0x4cef, 0x1, 0x0);
        gbc.writeMem(0x4f9b, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x22ff);
        EXPECT(gbc.pc(), 0x4f9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 01BB
        gbc.setState(0x89f4, 0xb469, 0xd240, 0x783b, 0x22d3, 0x2a1, 0x1, 0x0);
        gbc.writeMem(0x89f4, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xb469);
        EXPECT(gbc.pc(), 0x89f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89f4), 0xcb);
        EXPECT(gbc.readMem(0x89f5), 0x51);
        // CB 51 01BC
        gbc.setState(0x8350, 0xb2db, 0xe010, 0x2164, 0x54f, 0xc6dd, 0x1, 0x1);
        gbc.writeMem(0x8350, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xb2db);
        EXPECT(gbc.pc(), 0x8352);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8350), 0xcb);
        EXPECT(gbc.readMem(0x8351), 0x51);
        // CB 51 01BD
        gbc.setState(0xbf9b, 0x1eff, 0x37f0, 0xe697, 0x9183, 0x167a, 0x0, 0x1);
        gbc.writeMem(0xbf9b, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x1eff);
        EXPECT(gbc.pc(), 0xbf9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf9b), 0xcb);
        EXPECT(gbc.readMem(0xbf9c), 0x51);
        // CB 51 01BE
        gbc.setState(0x801e, 0x61d5, 0xd640, 0x389e, 0x84f9, 0x4974, 0x0, 0x0);
        gbc.writeMem(0x801e, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x61d5);
        EXPECT(gbc.pc(), 0x8020);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x801e), 0xcb);
        EXPECT(gbc.readMem(0x801f), 0x51);
        // CB 51 01BF
        gbc.setState(0x48c3, 0x9747, 0xf5e0, 0x9974, 0x8eda, 0xf4f9, 0x1, 0x0);
        gbc.writeMem(0x48c3, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x9747);
        EXPECT(gbc.pc(), 0x48c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 01C0
        gbc.setState(0x6d30, 0xec17, 0x4040, 0x37cb, 0x5f0d, 0x945, 0x0, 0x0);
        gbc.writeMem(0x6d30, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xec17);
        EXPECT(gbc.pc(), 0x6d32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 01C1
        gbc.setState(0x12c1, 0x1f83, 0x2c0, 0x18f6, 0x881a, 0x4de4, 0x0, 0x1);
        gbc.writeMem(0x12c1, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x1f83);
        EXPECT(gbc.pc(), 0x12c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 01C2
        gbc.setState(0x88f6, 0x9ea9, 0xbbc0, 0xc1e2, 0x7a, 0xcae9, 0x0, 0x1);
        gbc.writeMem(0x88f6, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x9ea9);
        EXPECT(gbc.pc(), 0x88f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88f6), 0xcb);
        EXPECT(gbc.readMem(0x88f7), 0x51);
        // CB 51 01C3
        gbc.setState(0x91fb, 0x688d, 0xf5d0, 0x498d, 0x50ff, 0xb58b, 0x0, 0x0);
        gbc.writeMem(0x91fb, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x688d);
        EXPECT(gbc.pc(), 0x91fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91fb), 0xcb);
        EXPECT(gbc.readMem(0x91fc), 0x51);
        // CB 51 01C4
        gbc.setState(0x5e29, 0x2218, 0xb080, 0xe390, 0xc86a, 0x58cb, 0x1, 0x1);
        gbc.writeMem(0x5e29, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x2218);
        EXPECT(gbc.pc(), 0x5e2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 01C5
        gbc.setState(0x1cc6, 0xa7eb, 0xfb50, 0xab08, 0x149d, 0xf234, 0x1, 0x1);
        gbc.writeMem(0x1cc6, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xa7eb);
        EXPECT(gbc.pc(), 0x1cc8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 01C6
        gbc.setState(0xef91, 0xf6f, 0xbc00, 0x357d, 0xdeb2, 0x4bf1, 0x0, 0x1);
        gbc.writeMem(0xef91, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xf6f);
        EXPECT(gbc.pc(), 0xef93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef91), 0xcb);
        EXPECT(gbc.readMem(0xef92), 0x51);
        // CB 51 01C7
        gbc.setState(0x410d, 0x58ff, 0xda90, 0xe40c, 0x1819, 0xdac9, 0x1, 0x0);
        gbc.writeMem(0x410d, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x58ff);
        EXPECT(gbc.pc(), 0x410f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 01C8
        gbc.setState(0xe5b8, 0x320b, 0x8250, 0x5da3, 0x11c1, 0xa25c, 0x1, 0x0);
        gbc.writeMem(0xe5b8, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x320b);
        EXPECT(gbc.pc(), 0xe5ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5b8), 0xcb);
        EXPECT(gbc.readMem(0xe5b9), 0x51);
        // CB 51 01C9
        gbc.setState(0x6e0, 0xc9c0, 0xe230, 0xa936, 0x517f, 0x27ff, 0x1, 0x0);
        gbc.writeMem(0x6e0, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xc9c0);
        EXPECT(gbc.pc(), 0x6e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 01CA
        gbc.setState(0x272d, 0xbe48, 0x6b90, 0x8be2, 0x8016, 0x52ef, 0x0, 0x0);
        gbc.writeMem(0x272d, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xbe48);
        EXPECT(gbc.pc(), 0x272f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 01CC
        gbc.setState(0x5678, 0x85a8, 0x2d50, 0x5fd1, 0xdbcb, 0x1e8f, 0x1, 0x0);
        gbc.writeMem(0x5678, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x85a8);
        EXPECT(gbc.pc(), 0x567a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 01CD
        gbc.setState(0xa934, 0x4f9, 0x2430, 0x6c8c, 0x8d3e, 0x4635, 0x0, 0x0);
        gbc.writeMem(0xa934, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x4f9);
        EXPECT(gbc.pc(), 0xa936);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa934), 0xcb);
        EXPECT(gbc.readMem(0xa935), 0x51);
        // CB 51 01CE
        gbc.setState(0x5e83, 0x2502, 0x4cb0, 0x310b, 0x146f, 0x3d7e, 0x0, 0x1);
        gbc.writeMem(0x5e83, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x2502);
        EXPECT(gbc.pc(), 0x5e85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 01CF
        gbc.setState(0x5e66, 0xafda, 0x1180, 0x1813, 0x92c6, 0xf685, 0x0, 0x0);
        gbc.writeMem(0x5e66, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xafda);
        EXPECT(gbc.pc(), 0x5e68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 01D1
        gbc.setState(0x8ce3, 0x986b, 0x8df0, 0xf2c4, 0x3123, 0x5bac, 0x1, 0x0);
        gbc.writeMem(0x8ce3, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x986b);
        EXPECT(gbc.pc(), 0x8ce5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ce3), 0xcb);
        EXPECT(gbc.readMem(0x8ce4), 0x51);
        // CB 51 01D2
        gbc.setState(0x848d, 0xee3a, 0xcd90, 0x7e2b, 0xa8be, 0x6d7, 0x1, 0x0);
        gbc.writeMem(0x848d, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xee3a);
        EXPECT(gbc.pc(), 0x848f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x848d), 0xcb);
        EXPECT(gbc.readMem(0x848e), 0x51);
        // CB 51 01D3
        gbc.setState(0x3d5d, 0xd05c, 0xde30, 0x317f, 0x7512, 0x65be, 0x0, 0x0);
        gbc.writeMem(0x3d5d, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xd05c);
        EXPECT(gbc.pc(), 0x3d5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 01D4
        gbc.setState(0x9469, 0xad02, 0xd2f0, 0x8503, 0xeb47, 0x50c7, 0x0, 0x1);
        gbc.writeMem(0x9469, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xad02);
        EXPECT(gbc.pc(), 0x946b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9469), 0xcb);
        EXPECT(gbc.readMem(0x946a), 0x51);
        // CB 51 01D5
        gbc.setState(0x85c6, 0x15, 0xe7e0, 0x7b58, 0x7532, 0xd908, 0x1, 0x0);
        gbc.writeMem(0x85c6, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x15);
        EXPECT(gbc.pc(), 0x85c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85c6), 0xcb);
        EXPECT(gbc.readMem(0x85c7), 0x51);
        // CB 51 01D6
        gbc.setState(0xe0f9, 0x1113, 0x76f0, 0xb5c0, 0x7f77, 0xdb51, 0x1, 0x1);
        gbc.writeMem(0xe0f9, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x1113);
        EXPECT(gbc.pc(), 0xe0fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0f9), 0xcb);
        EXPECT(gbc.readMem(0xe0fa), 0x51);
        // CB 51 01D7
        gbc.setState(0x1535, 0xaf64, 0x4e80, 0x5a3b, 0x5121, 0x3e13, 0x0, 0x0);
        gbc.writeMem(0x1535, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xaf64);
        EXPECT(gbc.pc(), 0x1537);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 01D8
        gbc.setState(0x2d00, 0xce8e, 0x2130, 0x9bba, 0x6d2f, 0x28ee, 0x0, 0x1);
        gbc.writeMem(0x2d00, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xce8e);
        EXPECT(gbc.pc(), 0x2d02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 01D9
        gbc.setState(0x24e8, 0x6c19, 0xb070, 0x2b8b, 0x7267, 0x7b62, 0x0, 0x1);
        gbc.writeMem(0x24e8, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x6c19);
        EXPECT(gbc.pc(), 0x24ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 01DA
        gbc.setState(0xac82, 0x4249, 0xc5d0, 0x3d8b, 0xabe2, 0x48b5, 0x0, 0x0);
        gbc.writeMem(0xac82, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x4249);
        EXPECT(gbc.pc(), 0xac84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac82), 0xcb);
        EXPECT(gbc.readMem(0xac83), 0x51);
        // CB 51 01DB
        gbc.setState(0x7884, 0x94be, 0xac40, 0xabdf, 0x5c9c, 0x1314, 0x1, 0x0);
        gbc.writeMem(0x7884, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x94be);
        EXPECT(gbc.pc(), 0x7886);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 01DC
        gbc.setState(0x98e2, 0x48fe, 0x7380, 0xdb4a, 0xafeb, 0x967c, 0x1, 0x0);
        gbc.writeMem(0x98e2, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x48fe);
        EXPECT(gbc.pc(), 0x98e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98e2), 0xcb);
        EXPECT(gbc.readMem(0x98e3), 0x51);
        // CB 51 01DD
        gbc.setState(0xb59d, 0xa866, 0xc1f0, 0xd1b0, 0x18e4, 0x34c7, 0x0, 0x0);
        gbc.writeMem(0xb59d, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xa866);
        EXPECT(gbc.pc(), 0xb59f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb59d), 0xcb);
        EXPECT(gbc.readMem(0xb59e), 0x51);
        // CB 51 01DF
        gbc.setState(0x1256, 0x39b2, 0x8170, 0xb612, 0x89f5, 0x608d, 0x1, 0x0);
        gbc.writeMem(0x1256, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x39b2);
        EXPECT(gbc.pc(), 0x1258);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 01E0
        gbc.setState(0xe2e1, 0x873d, 0xe5a0, 0x20f1, 0x4884, 0x5bb9, 0x0, 0x0);
        gbc.writeMem(0xe2e1, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x873d);
        EXPECT(gbc.pc(), 0xe2e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2e1), 0xcb);
        EXPECT(gbc.readMem(0xe2e2), 0x51);
        // CB 51 01E1
        gbc.setState(0x1585, 0x1dcb, 0xd580, 0x3af6, 0x5675, 0xce13, 0x1, 0x1);
        gbc.writeMem(0x1585, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x1dcb);
        EXPECT(gbc.pc(), 0x1587);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 01E2
        gbc.setState(0x4ce4, 0x57e6, 0xaba0, 0x3cf, 0x25f6, 0x59c4, 0x1, 0x0);
        gbc.writeMem(0x4ce4, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x57e6);
        EXPECT(gbc.pc(), 0x4ce6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 01E3
        gbc.setState(0x3959, 0xea26, 0x8cf0, 0xa3da, 0xc83e, 0xc704, 0x0, 0x1);
        gbc.writeMem(0x3959, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xea26);
        EXPECT(gbc.pc(), 0x395b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 01E4
        gbc.setState(0x63c, 0x1e1f, 0x5940, 0x84d2, 0xa4ca, 0x799f, 0x0, 0x1);
        gbc.writeMem(0x63c, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x1e1f);
        EXPECT(gbc.pc(), 0x63e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 01E5
        gbc.setState(0xb1d5, 0xceba, 0xbbe0, 0xe431, 0xa283, 0x492a, 0x1, 0x0);
        gbc.writeMem(0xb1d5, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xceba);
        EXPECT(gbc.pc(), 0xb1d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1d5), 0xcb);
        EXPECT(gbc.readMem(0xb1d6), 0x51);
        // CB 51 01E6
        gbc.setState(0x97c6, 0x9abd, 0xcec0, 0xf209, 0x4be9, 0xa045, 0x1, 0x0);
        gbc.writeMem(0x97c6, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x9abd);
        EXPECT(gbc.pc(), 0x97c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97c6), 0xcb);
        EXPECT(gbc.readMem(0x97c7), 0x51);
        // CB 51 01E7
        gbc.setState(0xd5a0, 0x807d, 0x3730, 0xb32e, 0x2fdb, 0x741a, 0x0, 0x0);
        gbc.writeMem(0xd5a0, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x807d);
        EXPECT(gbc.pc(), 0xd5a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5a0), 0xcb);
        EXPECT(gbc.readMem(0xd5a1), 0x51);
        // CB 51 01E8
        gbc.setState(0x538, 0x97a4, 0x20c0, 0xd531, 0xde15, 0xc557, 0x1, 0x0);
        gbc.writeMem(0x538, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x97a4);
        EXPECT(gbc.pc(), 0x53a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 01EB
        gbc.setState(0x9b53, 0x60d3, 0xf3a0, 0x5277, 0xb154, 0xd343, 0x1, 0x1);
        gbc.writeMem(0x9b53, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x60d3);
        EXPECT(gbc.pc(), 0x9b55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b53), 0xcb);
        EXPECT(gbc.readMem(0x9b54), 0x51);
        // CB 51 01ED
        gbc.setState(0x87d4, 0xe2b6, 0xa730, 0x9b2b, 0x5b6f, 0xb519, 0x0, 0x1);
        gbc.writeMem(0x87d4, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xe2b6);
        EXPECT(gbc.pc(), 0x87d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87d4), 0xcb);
        EXPECT(gbc.readMem(0x87d5), 0x51);
        // CB 51 01EE
        gbc.setState(0x5b2b, 0x8ee9, 0x14c0, 0xa241, 0x7e82, 0xe776, 0x1, 0x0);
        gbc.writeMem(0x5b2b, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x8ee9);
        EXPECT(gbc.pc(), 0x5b2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 01EF
        gbc.setState(0xeab3, 0x7ccc, 0x4230, 0xb57, 0x96aa, 0x8d16, 0x1, 0x0);
        gbc.writeMem(0xeab3, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x7ccc);
        EXPECT(gbc.pc(), 0xeab5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeab3), 0xcb);
        EXPECT(gbc.readMem(0xeab4), 0x51);
        // CB 51 01F0
        gbc.setState(0xba01, 0x5684, 0x370, 0xada7, 0xed3b, 0x6d80, 0x1, 0x0);
        gbc.writeMem(0xba01, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x5684);
        EXPECT(gbc.pc(), 0xba03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba01), 0xcb);
        EXPECT(gbc.readMem(0xba02), 0x51);
        // CB 51 01F1
        gbc.setState(0x52b0, 0xe7ab, 0xa120, 0x862d, 0xf432, 0x9609, 0x1, 0x0);
        gbc.writeMem(0x52b0, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xe7ab);
        EXPECT(gbc.pc(), 0x52b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 01F2
        gbc.setState(0x7371, 0xd355, 0xdf80, 0xa7c0, 0xb71b, 0xd09a, 0x0, 0x1);
        gbc.writeMem(0x7371, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xd355);
        EXPECT(gbc.pc(), 0x7373);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 01F3
        gbc.setState(0x7c3a, 0xb284, 0x9070, 0xeb3a, 0x6960, 0x218c, 0x1, 0x1);
        gbc.writeMem(0x7c3a, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xb284);
        EXPECT(gbc.pc(), 0x7c3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 01F4
        gbc.setState(0x44a9, 0x5fae, 0x5a80, 0x9448, 0x1d1b, 0xab7f, 0x0, 0x1);
        gbc.writeMem(0x44a9, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x5fae);
        EXPECT(gbc.pc(), 0x44ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 01F5
        gbc.setState(0x4923, 0x77bc, 0x2e40, 0xe97a, 0x7790, 0xce13, 0x0, 0x1);
        gbc.writeMem(0x4923, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x77bc);
        EXPECT(gbc.pc(), 0x4925);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 01F6
        gbc.setState(0x4b8a, 0x115c, 0x3830, 0xc2f9, 0x3364, 0xd376, 0x0, 0x1);
        gbc.writeMem(0x4b8a, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x115c);
        EXPECT(gbc.pc(), 0x4b8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 01F7
        gbc.setState(0xac53, 0x4b77, 0x4110, 0x990f, 0x43b6, 0xdfd3, 0x1, 0x0);
        gbc.writeMem(0xac53, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x4b77);
        EXPECT(gbc.pc(), 0xac55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac53), 0xcb);
        EXPECT(gbc.readMem(0xac54), 0x51);
        // CB 51 01F8
        gbc.setState(0x7163, 0x1729, 0xfa30, 0xd8a0, 0xdcb2, 0x51aa, 0x0, 0x0);
        gbc.writeMem(0x7163, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x1729);
        EXPECT(gbc.pc(), 0x7165);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 01F9
        gbc.setState(0x659, 0x8b53, 0xe690, 0xd659, 0xc312, 0x644c, 0x0, 0x0);
        gbc.writeMem(0x659, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x8b53);
        EXPECT(gbc.pc(), 0x65b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 01FA
        gbc.setState(0xb5ba, 0xf316, 0xa2c0, 0x799a, 0xf435, 0x3648, 0x1, 0x1);
        gbc.writeMem(0xb5ba, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xf316);
        EXPECT(gbc.pc(), 0xb5bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5ba), 0xcb);
        EXPECT(gbc.readMem(0xb5bb), 0x51);
        // CB 51 01FB
        gbc.setState(0x3e24, 0x4326, 0x710, 0xa666, 0x7a66, 0xe720, 0x0, 0x0);
        gbc.writeMem(0x3e24, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x4326);
        EXPECT(gbc.pc(), 0x3e26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 01FC
        gbc.setState(0x3787, 0x1008, 0xba80, 0x47ae, 0xece, 0xb15a, 0x0, 0x0);
        gbc.writeMem(0x3787, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x1008);
        EXPECT(gbc.pc(), 0x3789);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 01FD
        gbc.setState(0x224c, 0x7974, 0xb400, 0x3a72, 0x8682, 0x572a, 0x1, 0x0);
        gbc.writeMem(0x224c, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x7974);
        EXPECT(gbc.pc(), 0x224e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 01FE
        gbc.setState(0xa557, 0x4987, 0x43e0, 0x9b84, 0x646b, 0xe9de, 0x0, 0x0);
        gbc.writeMem(0xa557, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x4987);
        EXPECT(gbc.pc(), 0xa559);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa557), 0xcb);
        EXPECT(gbc.readMem(0xa558), 0x51);
        // CB 51 01FF
        gbc.setState(0x960e, 0x4291, 0x2b40, 0x5273, 0x88b9, 0x3e9e, 0x0, 0x1);
        gbc.writeMem(0x960e, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x4291);
        EXPECT(gbc.pc(), 0x9610);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x960e), 0xcb);
        EXPECT(gbc.readMem(0x960f), 0x51);
        // CB 51 0200
        gbc.setState(0x27fb, 0x21f, 0x3840, 0x9d1b, 0x8a48, 0xcfc8, 0x0, 0x0);
        gbc.writeMem(0x27fb, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x21f);
        EXPECT(gbc.pc(), 0x27fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0201
        gbc.setState(0xae8e, 0x9a6d, 0xe1c0, 0x3dd7, 0xfc9e, 0xe43f, 0x1, 0x0);
        gbc.writeMem(0xae8e, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x9a6d);
        EXPECT(gbc.pc(), 0xae90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae8e), 0xcb);
        EXPECT(gbc.readMem(0xae8f), 0x51);
        // CB 51 0202
        gbc.setState(0x7490, 0x6c8e, 0xb50, 0x2b7c, 0x9c04, 0x85f1, 0x0, 0x0);
        gbc.writeMem(0x7490, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x6c8e);
        EXPECT(gbc.pc(), 0x7492);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0203
        gbc.setState(0x438a, 0xe45, 0xb00, 0x5a65, 0x24a2, 0x445c, 0x1, 0x0);
        gbc.writeMem(0x438a, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xe45);
        EXPECT(gbc.pc(), 0x438c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0204
        gbc.setState(0x162a, 0xbcac, 0x3560, 0x8408, 0x9eae, 0x42bf, 0x0, 0x1);
        gbc.writeMem(0x162a, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xbcac);
        EXPECT(gbc.pc(), 0x162c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0205
        gbc.setState(0xe15, 0xfe74, 0x9d70, 0x3c23, 0x7ee4, 0xa993, 0x0, 0x0);
        gbc.writeMem(0xe15, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xfe74);
        EXPECT(gbc.pc(), 0xe17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0206
        gbc.setState(0xfcf, 0xb23f, 0x4d50, 0xb098, 0xe380, 0xbdf5, 0x0, 0x0);
        gbc.writeMem(0xfcf, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xb23f);
        EXPECT(gbc.pc(), 0xfd1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0207
        gbc.setState(0x5329, 0x5f84, 0x5d30, 0xbb7f, 0x1b3e, 0x40b1, 0x1, 0x0);
        gbc.writeMem(0x5329, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x5f84);
        EXPECT(gbc.pc(), 0x532b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0208
        gbc.setState(0xcc6e, 0x615c, 0xc540, 0xa892, 0x4505, 0x971e, 0x0, 0x0);
        gbc.writeMem(0xcc6e, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x615c);
        EXPECT(gbc.pc(), 0xcc70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc6e), 0xcb);
        EXPECT(gbc.readMem(0xcc6f), 0x51);
        // CB 51 0209
        gbc.setState(0x84cb, 0x39ec, 0x5b60, 0xb910, 0x9c8, 0xe87c, 0x0, 0x1);
        gbc.writeMem(0x84cb, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x39ec);
        EXPECT(gbc.pc(), 0x84cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84cb), 0xcb);
        EXPECT(gbc.readMem(0x84cc), 0x51);
        // CB 51 020A
        gbc.setState(0x862, 0x64b5, 0xebd0, 0x7f7e, 0x1b62, 0x74ca, 0x1, 0x0);
        gbc.writeMem(0x862, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x64b5);
        EXPECT(gbc.pc(), 0x864);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 020B
        gbc.setState(0xb47c, 0x7bbd, 0x4ea0, 0x4049, 0x8231, 0x64fb, 0x0, 0x0);
        gbc.writeMem(0xb47c, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x7bbd);
        EXPECT(gbc.pc(), 0xb47e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb47c), 0xcb);
        EXPECT(gbc.readMem(0xb47d), 0x51);
        // CB 51 020C
        gbc.setState(0x6114, 0x533, 0x3490, 0xe353, 0x3577, 0x62ce, 0x0, 0x1);
        gbc.writeMem(0x6114, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x533);
        EXPECT(gbc.pc(), 0x6116);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 020D
        gbc.setState(0x102d, 0x5529, 0x8ad0, 0xedf1, 0x2e88, 0xd0f2, 0x1, 0x1);
        gbc.writeMem(0x102d, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x5529);
        EXPECT(gbc.pc(), 0x102f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 020E
        gbc.setState(0xeb3, 0xca83, 0xf050, 0x1c37, 0xe1dc, 0x75e3, 0x0, 0x0);
        gbc.writeMem(0xeb3, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xca83);
        EXPECT(gbc.pc(), 0xeb5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 020F
        gbc.setState(0x50b0, 0xa9db, 0x8710, 0xf160, 0x7183, 0xe47f, 0x1, 0x1);
        gbc.writeMem(0x50b0, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xa9db);
        EXPECT(gbc.pc(), 0x50b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0210
        gbc.setState(0x6c23, 0x3d4b, 0xeb30, 0x1170, 0x5207, 0x7af6, 0x1, 0x0);
        gbc.writeMem(0x6c23, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x3d4b);
        EXPECT(gbc.pc(), 0x6c25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0211
        gbc.setState(0x5426, 0x477, 0x5c70, 0x5e87, 0xf808, 0x2135, 0x1, 0x0);
        gbc.writeMem(0x5426, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x477);
        EXPECT(gbc.pc(), 0x5428);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0213
        gbc.setState(0x4a71, 0xbb6, 0x9350, 0xa337, 0x239f, 0x2d23, 0x0, 0x0);
        gbc.writeMem(0x4a71, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xbb6);
        EXPECT(gbc.pc(), 0x4a73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0215
        gbc.setState(0x998b, 0xfe60, 0x7e60, 0xd62a, 0x99b1, 0x596e, 0x1, 0x0);
        gbc.writeMem(0x998b, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xfe60);
        EXPECT(gbc.pc(), 0x998d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x998b), 0xcb);
        EXPECT(gbc.readMem(0x998c), 0x51);
        // CB 51 0216
        gbc.setState(0xae5c, 0x6367, 0x6380, 0xe061, 0xa7, 0x1b00, 0x1, 0x1);
        gbc.writeMem(0xae5c, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x6367);
        EXPECT(gbc.pc(), 0xae5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae5c), 0xcb);
        EXPECT(gbc.readMem(0xae5d), 0x51);
        // CB 51 0217
        gbc.setState(0xac8e, 0x93c3, 0xb610, 0xe15d, 0x794b, 0xf1c8, 0x1, 0x1);
        gbc.writeMem(0xac8e, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x93c3);
        EXPECT(gbc.pc(), 0xac90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac8e), 0xcb);
        EXPECT(gbc.readMem(0xac8f), 0x51);
        // CB 51 0218
        gbc.setState(0xb897, 0xf0dd, 0xa4f0, 0xd79c, 0x5669, 0xba05, 0x0, 0x0);
        gbc.writeMem(0xb897, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xf0dd);
        EXPECT(gbc.pc(), 0xb899);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb897), 0xcb);
        EXPECT(gbc.readMem(0xb898), 0x51);
        // CB 51 021A
        gbc.setState(0x278e, 0x57c5, 0x5d40, 0x1f2a, 0x9df2, 0x6ef4, 0x0, 0x0);
        gbc.writeMem(0x278e, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x57c5);
        EXPECT(gbc.pc(), 0x2790);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 021B
        gbc.setState(0xef9f, 0xfcce, 0x5a90, 0xdd7b, 0xcb06, 0x443f, 0x1, 0x0);
        gbc.writeMem(0xef9f, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xfcce);
        EXPECT(gbc.pc(), 0xefa1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef9f), 0xcb);
        EXPECT(gbc.readMem(0xefa0), 0x51);
        // CB 51 021C
        gbc.setState(0x41d9, 0x3a7d, 0x81b0, 0x5dfa, 0x4d46, 0xf474, 0x1, 0x0);
        gbc.writeMem(0x41d9, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x3a7d);
        EXPECT(gbc.pc(), 0x41db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 021D
        gbc.setState(0x4d1c, 0xd06e, 0xc2c0, 0x255f, 0x3e85, 0x9d30, 0x0, 0x1);
        gbc.writeMem(0x4d1c, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xd06e);
        EXPECT(gbc.pc(), 0x4d1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 021E
        gbc.setState(0x4d94, 0xaad5, 0xe640, 0xdd4f, 0xb9ec, 0xb9da, 0x1, 0x0);
        gbc.writeMem(0x4d94, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xaad5);
        EXPECT(gbc.pc(), 0x4d96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 021F
        gbc.setState(0xb987, 0x3489, 0xaa0, 0xaafc, 0x86a6, 0x795e, 0x0, 0x1);
        gbc.writeMem(0xb987, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x3489);
        EXPECT(gbc.pc(), 0xb989);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb987), 0xcb);
        EXPECT(gbc.readMem(0xb988), 0x51);
        // CB 51 0220
        gbc.setState(0xde9e, 0xc355, 0x85d0, 0xdedc, 0x6098, 0x1e5f, 0x0, 0x1);
        gbc.writeMem(0xde9e, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xc355);
        EXPECT(gbc.pc(), 0xdea0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde9e), 0xcb);
        EXPECT(gbc.readMem(0xde9f), 0x51);
        // CB 51 0221
        gbc.setState(0x1324, 0x1a50, 0x8410, 0x25, 0x2f3b, 0xe07d, 0x0, 0x0);
        gbc.writeMem(0x1324, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x1a50);
        EXPECT(gbc.pc(), 0x1326);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0222
        gbc.setState(0x99cb, 0x2522, 0xee20, 0xea37, 0x9183, 0x23ea, 0x0, 0x1);
        gbc.writeMem(0x99cb, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x2522);
        EXPECT(gbc.pc(), 0x99cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99cb), 0xcb);
        EXPECT(gbc.readMem(0x99cc), 0x51);
        // CB 51 0223
        gbc.setState(0xc290, 0x3cc6, 0x57a0, 0x4a37, 0x5f18, 0xe042, 0x1, 0x1);
        gbc.writeMem(0xc290, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x3cc6);
        EXPECT(gbc.pc(), 0xc292);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc290), 0xcb);
        EXPECT(gbc.readMem(0xc291), 0x51);
        // CB 51 0224
        gbc.setState(0x10f, 0x42e0, 0x5970, 0x351, 0x2c4c, 0x24bc, 0x1, 0x0);
        gbc.writeMem(0x10f, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x42e0);
        EXPECT(gbc.pc(), 0x111);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0225
        gbc.setState(0xadad, 0x71db, 0xb1c0, 0x978, 0x3154, 0xda5e, 0x1, 0x1);
        gbc.writeMem(0xadad, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x71db);
        EXPECT(gbc.pc(), 0xadaf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadad), 0xcb);
        EXPECT(gbc.readMem(0xadae), 0x51);
        // CB 51 0226
        gbc.setState(0x60df, 0xdb61, 0x3b50, 0xd17d, 0x6cf, 0xf58d, 0x1, 0x1);
        gbc.writeMem(0x60df, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xdb61);
        EXPECT(gbc.pc(), 0x60e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0227
        gbc.setState(0xe539, 0x409b, 0x1920, 0x1634, 0x5af1, 0x3ee, 0x1, 0x1);
        gbc.writeMem(0xe539, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x409b);
        EXPECT(gbc.pc(), 0xe53b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe539), 0xcb);
        EXPECT(gbc.readMem(0xe53a), 0x51);
        // CB 51 0228
        gbc.setState(0xb56a, 0xb88b, 0x2cd0, 0x35f, 0x5a18, 0x1388, 0x0, 0x1);
        gbc.writeMem(0xb56a, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xb88b);
        EXPECT(gbc.pc(), 0xb56c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb56a), 0xcb);
        EXPECT(gbc.readMem(0xb56b), 0x51);
        // CB 51 0229
        gbc.setState(0x90be, 0xa18d, 0x80d0, 0xd084, 0xac18, 0xd50e, 0x0, 0x1);
        gbc.writeMem(0x90be, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xa18d);
        EXPECT(gbc.pc(), 0x90c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90be), 0xcb);
        EXPECT(gbc.readMem(0x90bf), 0x51);
        // CB 51 022A
        gbc.setState(0xc34, 0x733d, 0x2520, 0x9de, 0xb9ba, 0x2edd, 0x1, 0x1);
        gbc.writeMem(0xc34, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x733d);
        EXPECT(gbc.pc(), 0xc36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 022B
        gbc.setState(0xb564, 0x34c5, 0xde40, 0xbeed, 0xdd65, 0xeffd, 0x1, 0x1);
        gbc.writeMem(0xb564, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x34c5);
        EXPECT(gbc.pc(), 0xb566);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb564), 0xcb);
        EXPECT(gbc.readMem(0xb565), 0x51);
        // CB 51 022C
        gbc.setState(0x2362, 0x5e41, 0x3940, 0x5deb, 0xf51a, 0x3f3a, 0x1, 0x0);
        gbc.writeMem(0x2362, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x5e41);
        EXPECT(gbc.pc(), 0x2364);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 022D
        gbc.setState(0xc611, 0x960f, 0x3fb0, 0xd546, 0x81c6, 0x7892, 0x1, 0x1);
        gbc.writeMem(0xc611, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x960f);
        EXPECT(gbc.pc(), 0xc613);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc611), 0xcb);
        EXPECT(gbc.readMem(0xc612), 0x51);
        // CB 51 022E
        gbc.setState(0x537a, 0x6af1, 0xc720, 0x750c, 0xbedc, 0xddf4, 0x1, 0x0);
        gbc.writeMem(0x537a, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x6af1);
        EXPECT(gbc.pc(), 0x537c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 022F
        gbc.setState(0x9df0, 0xe0ad, 0x5dd0, 0x5f36, 0x6088, 0x24a2, 0x1, 0x1);
        gbc.writeMem(0x9df0, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xe0ad);
        EXPECT(gbc.pc(), 0x9df2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9df0), 0xcb);
        EXPECT(gbc.readMem(0x9df1), 0x51);
        // CB 51 0230
        gbc.setState(0x9797, 0xe4b1, 0xcf10, 0x85c8, 0x9759, 0xebec, 0x0, 0x0);
        gbc.writeMem(0x9797, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xe4b1);
        EXPECT(gbc.pc(), 0x9799);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9797), 0xcb);
        EXPECT(gbc.readMem(0x9798), 0x51);
        // CB 51 0231
        gbc.setState(0x8d4, 0xa034, 0xea60, 0xb0d3, 0x5cec, 0xd3c3, 0x1, 0x1);
        gbc.writeMem(0x8d4, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xa034);
        EXPECT(gbc.pc(), 0x8d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0232
        gbc.setState(0xc9ea, 0x6635, 0xaf80, 0xdd78, 0x2ff5, 0x4209, 0x0, 0x0);
        gbc.writeMem(0xc9ea, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x6635);
        EXPECT(gbc.pc(), 0xc9ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9ea), 0xcb);
        EXPECT(gbc.readMem(0xc9eb), 0x51);
        // CB 51 0233
        gbc.setState(0x8a52, 0x57c4, 0xaf90, 0x450, 0xb5c1, 0xc61c, 0x1, 0x1);
        gbc.writeMem(0x8a52, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x57c4);
        EXPECT(gbc.pc(), 0x8a54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a52), 0xcb);
        EXPECT(gbc.readMem(0x8a53), 0x51);
        // CB 51 0234
        gbc.setState(0xe852, 0xf2ed, 0xec0, 0x97b4, 0x4eda, 0xcf0, 0x1, 0x0);
        gbc.writeMem(0xe852, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xf2ed);
        EXPECT(gbc.pc(), 0xe854);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe852), 0xcb);
        EXPECT(gbc.readMem(0xe853), 0x51);
        // CB 51 0235
        gbc.setState(0x9adb, 0x47ae, 0x57c0, 0xe276, 0xa77b, 0xd458, 0x0, 0x0);
        gbc.writeMem(0x9adb, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x47ae);
        EXPECT(gbc.pc(), 0x9add);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9adb), 0xcb);
        EXPECT(gbc.readMem(0x9adc), 0x51);
        // CB 51 0236
        gbc.setState(0x2b6a, 0x281, 0xc950, 0xd6e2, 0xe615, 0x7955, 0x0, 0x1);
        gbc.writeMem(0x2b6a, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x281);
        EXPECT(gbc.pc(), 0x2b6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0239
        gbc.setState(0xa61, 0x9004, 0xa50, 0xf38c, 0x4fb6, 0xa78b, 0x0, 0x1);
        gbc.writeMem(0xa61, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x9004);
        EXPECT(gbc.pc(), 0xa63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 023A
        gbc.setState(0x3359, 0xe089, 0x4670, 0xcb2d, 0x7ebc, 0xe226, 0x0, 0x0);
        gbc.writeMem(0x3359, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xe089);
        EXPECT(gbc.pc(), 0x335b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 023B
        gbc.setState(0x91bd, 0x4861, 0x4270, 0xb881, 0x2cea, 0x52b0, 0x1, 0x0);
        gbc.writeMem(0x91bd, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x4861);
        EXPECT(gbc.pc(), 0x91bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91bd), 0xcb);
        EXPECT(gbc.readMem(0x91be), 0x51);
        // CB 51 023C
        gbc.setState(0x7ee0, 0xc7b5, 0x29a0, 0x5ddb, 0x76a, 0x4a72, 0x1, 0x1);
        gbc.writeMem(0x7ee0, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xc7b5);
        EXPECT(gbc.pc(), 0x7ee2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 023D
        gbc.setState(0x6a2a, 0xdc0f, 0xa0a0, 0xb9d6, 0x3fb3, 0x9510, 0x1, 0x0);
        gbc.writeMem(0x6a2a, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xdc0f);
        EXPECT(gbc.pc(), 0x6a2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 023E
        gbc.setState(0xbd42, 0x536e, 0x35c0, 0xe680, 0x6657, 0x22d2, 0x1, 0x1);
        gbc.writeMem(0xbd42, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x536e);
        EXPECT(gbc.pc(), 0xbd44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd42), 0xcb);
        EXPECT(gbc.readMem(0xbd43), 0x51);
        // CB 51 023F
        gbc.setState(0x36c9, 0x629b, 0x70f0, 0xf39f, 0x3d06, 0xcc10, 0x0, 0x1);
        gbc.writeMem(0x36c9, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x629b);
        EXPECT(gbc.pc(), 0x36cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0240
        gbc.setState(0xea85, 0x1ede, 0x1f50, 0xb4c5, 0xb3aa, 0x3c3, 0x1, 0x0);
        gbc.writeMem(0xea85, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x1ede);
        EXPECT(gbc.pc(), 0xea87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea85), 0xcb);
        EXPECT(gbc.readMem(0xea86), 0x51);
        // CB 51 0241
        gbc.setState(0x9b75, 0xf9d8, 0x4cc0, 0xa77b, 0x1d43, 0xa501, 0x0, 0x0);
        gbc.writeMem(0x9b75, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xf9d8);
        EXPECT(gbc.pc(), 0x9b77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b75), 0xcb);
        EXPECT(gbc.readMem(0x9b76), 0x51);
        // CB 51 0242
        gbc.setState(0x9afd, 0xea93, 0xa490, 0x81b8, 0x432e, 0x8371, 0x0, 0x0);
        gbc.writeMem(0x9afd, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xea93);
        EXPECT(gbc.pc(), 0x9aff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9afd), 0xcb);
        EXPECT(gbc.readMem(0x9afe), 0x51);
        // CB 51 0243
        gbc.setState(0xe658, 0x7aa3, 0x4d10, 0x872d, 0xcb32, 0x9e65, 0x0, 0x1);
        gbc.writeMem(0xe658, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x7aa3);
        EXPECT(gbc.pc(), 0xe65a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe658), 0xcb);
        EXPECT(gbc.readMem(0xe659), 0x51);
        // CB 51 0244
        gbc.setState(0xa9ed, 0x8675, 0x1db0, 0x7c24, 0x2895, 0xbb04, 0x0, 0x1);
        gbc.writeMem(0xa9ed, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x8675);
        EXPECT(gbc.pc(), 0xa9ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9ed), 0xcb);
        EXPECT(gbc.readMem(0xa9ee), 0x51);
        // CB 51 0245
        gbc.setState(0x6cc3, 0x8dc0, 0xf690, 0xdfdb, 0x2c69, 0xfccf, 0x1, 0x0);
        gbc.writeMem(0x6cc3, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x8dc0);
        EXPECT(gbc.pc(), 0x6cc5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0246
        gbc.setState(0xa0e5, 0xb33f, 0x2e50, 0xc2e7, 0x8036, 0xc94a, 0x0, 0x0);
        gbc.writeMem(0xa0e5, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xb33f);
        EXPECT(gbc.pc(), 0xa0e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0e5), 0xcb);
        EXPECT(gbc.readMem(0xa0e6), 0x51);
        // CB 51 0247
        gbc.setState(0x9611, 0x3652, 0xb800, 0x3d10, 0x1b23, 0x769c, 0x0, 0x1);
        gbc.writeMem(0x9611, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x3652);
        EXPECT(gbc.pc(), 0x9613);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9611), 0xcb);
        EXPECT(gbc.readMem(0x9612), 0x51);
        // CB 51 0248
        gbc.setState(0xdf19, 0xcb2, 0xa0c0, 0x5c05, 0x656e, 0xf5c5, 0x1, 0x0);
        gbc.writeMem(0xdf19, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xcb2);
        EXPECT(gbc.pc(), 0xdf1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf19), 0xcb);
        EXPECT(gbc.readMem(0xdf1a), 0x51);
        // CB 51 0249
        gbc.setState(0xc30d, 0x69d6, 0x7c50, 0x23ec, 0xb27d, 0x6b9d, 0x0, 0x1);
        gbc.writeMem(0xc30d, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x69d6);
        EXPECT(gbc.pc(), 0xc30f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc30d), 0xcb);
        EXPECT(gbc.readMem(0xc30e), 0x51);
        // CB 51 024A
        gbc.setState(0x7eaa, 0xacdb, 0x5ff0, 0x3f96, 0x215e, 0x30d4, 0x1, 0x0);
        gbc.writeMem(0x7eaa, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xacdb);
        EXPECT(gbc.pc(), 0x7eac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 024B
        gbc.setState(0xca89, 0x6899, 0xf620, 0x5078, 0x81a3, 0xc12b, 0x1, 0x0);
        gbc.writeMem(0xca89, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x6899);
        EXPECT(gbc.pc(), 0xca8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca89), 0xcb);
        EXPECT(gbc.readMem(0xca8a), 0x51);
        // CB 51 024C
        gbc.setState(0x7e04, 0x85df, 0x4500, 0x239c, 0xa43e, 0xb548, 0x0, 0x0);
        gbc.writeMem(0x7e04, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x85df);
        EXPECT(gbc.pc(), 0x7e06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 024D
        gbc.setState(0x8e8, 0x56bc, 0xcef0, 0xf835, 0xd184, 0x62a2, 0x1, 0x1);
        gbc.writeMem(0x8e8, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x56bc);
        EXPECT(gbc.pc(), 0x8ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 024F
        gbc.setState(0x9bb9, 0xa99c, 0x9500, 0x3642, 0xbf9a, 0x952c, 0x0, 0x0);
        gbc.writeMem(0x9bb9, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xa99c);
        EXPECT(gbc.pc(), 0x9bbb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bb9), 0xcb);
        EXPECT(gbc.readMem(0x9bba), 0x51);
        // CB 51 0251
        gbc.setState(0xbe4f, 0x6262, 0xf0e0, 0xd3d6, 0x594e, 0x4fe8, 0x0, 0x1);
        gbc.writeMem(0xbe4f, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x6262);
        EXPECT(gbc.pc(), 0xbe51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe4f), 0xcb);
        EXPECT(gbc.readMem(0xbe50), 0x51);
        // CB 51 0252
        gbc.setState(0xdc8e, 0x7ee0, 0x6520, 0x9463, 0x8dde, 0x7726, 0x1, 0x1);
        gbc.writeMem(0xdc8e, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x7ee0);
        EXPECT(gbc.pc(), 0xdc90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc8e), 0xcb);
        EXPECT(gbc.readMem(0xdc8f), 0x51);
        // CB 51 0254
        gbc.setState(0xfdf, 0x93ac, 0x4b30, 0x67c7, 0x1f7f, 0xf127, 0x1, 0x0);
        gbc.writeMem(0xfdf, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x93ac);
        EXPECT(gbc.pc(), 0xfe1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0255
        gbc.setState(0x849e, 0xb0e8, 0xcb20, 0x4736, 0x345e, 0x7bd1, 0x1, 0x1);
        gbc.writeMem(0x849e, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xb0e8);
        EXPECT(gbc.pc(), 0x84a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x849e), 0xcb);
        EXPECT(gbc.readMem(0x849f), 0x51);
        // CB 51 0256
        gbc.setState(0xe1b0, 0xedac, 0x5b50, 0xf40b, 0x5e76, 0xd377, 0x1, 0x1);
        gbc.writeMem(0xe1b0, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xedac);
        EXPECT(gbc.pc(), 0xe1b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1b0), 0xcb);
        EXPECT(gbc.readMem(0xe1b1), 0x51);
        // CB 51 0257
        gbc.setState(0xb23f, 0x3f66, 0xec60, 0xcd3b, 0x4514, 0x1f49, 0x1, 0x0);
        gbc.writeMem(0xb23f, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x3f66);
        EXPECT(gbc.pc(), 0xb241);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb23f), 0xcb);
        EXPECT(gbc.readMem(0xb240), 0x51);
        // CB 51 0258
        gbc.setState(0x1c8e, 0xed15, 0x45d0, 0x360b, 0x5e0e, 0x3423, 0x1, 0x1);
        gbc.writeMem(0x1c8e, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xed15);
        EXPECT(gbc.pc(), 0x1c90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0259
        gbc.setState(0xeeb7, 0xdcc2, 0x9090, 0x97fc, 0x1a80, 0xa4ee, 0x0, 0x0);
        gbc.writeMem(0xeeb7, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xdcc2);
        EXPECT(gbc.pc(), 0xeeb9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeeb7), 0xcb);
        EXPECT(gbc.readMem(0xeeb8), 0x51);
        // CB 51 025A
        gbc.setState(0xa28b, 0x924d, 0x4e50, 0xd3ed, 0x1071, 0x1ec0, 0x0, 0x1);
        gbc.writeMem(0xa28b, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x924d);
        EXPECT(gbc.pc(), 0xa28d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa28b), 0xcb);
        EXPECT(gbc.readMem(0xa28c), 0x51);
        // CB 51 025B
        gbc.setState(0x10bc, 0x7e94, 0x21e0, 0xdaa6, 0x889a, 0xe977, 0x1, 0x1);
        gbc.writeMem(0x10bc, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x7e94);
        EXPECT(gbc.pc(), 0x10be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 025C
        gbc.setState(0xb74d, 0xc046, 0xd0c0, 0x60a6, 0xc17f, 0x3f62, 0x0, 0x1);
        gbc.writeMem(0xb74d, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xc046);
        EXPECT(gbc.pc(), 0xb74f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb74d), 0xcb);
        EXPECT(gbc.readMem(0xb74e), 0x51);
        // CB 51 025D
        gbc.setState(0xa55c, 0xe2ca, 0xb3c0, 0x6e42, 0x2869, 0xc112, 0x0, 0x1);
        gbc.writeMem(0xa55c, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xe2ca);
        EXPECT(gbc.pc(), 0xa55e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa55c), 0xcb);
        EXPECT(gbc.readMem(0xa55d), 0x51);
        // CB 51 025E
        gbc.setState(0x4df9, 0x6a36, 0x190, 0xfe55, 0xb3be, 0xffb9, 0x1, 0x0);
        gbc.writeMem(0x4df9, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x6a36);
        EXPECT(gbc.pc(), 0x4dfb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 025F
        gbc.setState(0xaaa6, 0xbdcf, 0xdbb0, 0x7ff6, 0x8222, 0x731e, 0x1, 0x0);
        gbc.writeMem(0xaaa6, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xbdcf);
        EXPECT(gbc.pc(), 0xaaa8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaaa6), 0xcb);
        EXPECT(gbc.readMem(0xaaa7), 0x51);
        // CB 51 0260
        gbc.setState(0x751c, 0xea01, 0xb00, 0x7448, 0x1e18, 0x117, 0x1, 0x1);
        gbc.writeMem(0x751c, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xea01);
        EXPECT(gbc.pc(), 0x751e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0261
        gbc.setState(0x33cb, 0x43eb, 0x36e0, 0xa441, 0xa441, 0x653b, 0x1, 0x0);
        gbc.writeMem(0x33cb, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x43eb);
        EXPECT(gbc.pc(), 0x33cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0262
        gbc.setState(0x6681, 0x5401, 0x89c0, 0x1dc9, 0x2316, 0xbdc2, 0x0, 0x1);
        gbc.writeMem(0x6681, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x5401);
        EXPECT(gbc.pc(), 0x6683);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0263
        gbc.setState(0x1a72, 0x4acc, 0xadf0, 0x7fb, 0x2db0, 0x1fbd, 0x0, 0x1);
        gbc.writeMem(0x1a72, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x4acc);
        EXPECT(gbc.pc(), 0x1a74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0264
        gbc.setState(0xb3aa, 0x239e, 0x9df0, 0x3b30, 0xabed, 0x4c31, 0x0, 0x1);
        gbc.writeMem(0xb3aa, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x239e);
        EXPECT(gbc.pc(), 0xb3ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3aa), 0xcb);
        EXPECT(gbc.readMem(0xb3ab), 0x51);
        // CB 51 0265
        gbc.setState(0xe8be, 0x74d0, 0xa2a0, 0x94ac, 0xbb72, 0xdf4d, 0x1, 0x1);
        gbc.writeMem(0xe8be, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x74d0);
        EXPECT(gbc.pc(), 0xe8c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8be), 0xcb);
        EXPECT(gbc.readMem(0xe8bf), 0x51);
        // CB 51 0266
        gbc.setState(0x6ac5, 0x5e1a, 0xa680, 0x8b80, 0x9c5f, 0x2c93, 0x0, 0x0);
        gbc.writeMem(0x6ac5, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x5e1a);
        EXPECT(gbc.pc(), 0x6ac7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0267
        gbc.setState(0x65e8, 0x3e50, 0x9af0, 0x14ce, 0xf011, 0x2b52, 0x0, 0x1);
        gbc.writeMem(0x65e8, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x3e50);
        EXPECT(gbc.pc(), 0x65ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0268
        gbc.setState(0xd58, 0x55ba, 0xd9f0, 0xa6d0, 0xfd69, 0x4e94, 0x1, 0x0);
        gbc.writeMem(0xd58, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x55ba);
        EXPECT(gbc.pc(), 0xd5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0269
        gbc.setState(0xab19, 0x5ee2, 0xfd70, 0xb8a0, 0x2f75, 0x88f5, 0x1, 0x1);
        gbc.writeMem(0xab19, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x5ee2);
        EXPECT(gbc.pc(), 0xab1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab19), 0xcb);
        EXPECT(gbc.readMem(0xab1a), 0x51);
        // CB 51 026B
        gbc.setState(0xe3bb, 0x888f, 0x9b40, 0xd8b0, 0x65b4, 0x274e, 0x0, 0x0);
        gbc.writeMem(0xe3bb, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x888f);
        EXPECT(gbc.pc(), 0xe3bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3bb), 0xcb);
        EXPECT(gbc.readMem(0xe3bc), 0x51);
        // CB 51 026C
        gbc.setState(0x1eec, 0xa1af, 0x8d50, 0x831f, 0x614, 0x4b3c, 0x1, 0x0);
        gbc.writeMem(0x1eec, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xa1af);
        EXPECT(gbc.pc(), 0x1eee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 026D
        gbc.setState(0xea34, 0xe2ef, 0xf520, 0xb1e0, 0x8b8e, 0x7698, 0x1, 0x1);
        gbc.writeMem(0xea34, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xe2ef);
        EXPECT(gbc.pc(), 0xea36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea34), 0xcb);
        EXPECT(gbc.readMem(0xea35), 0x51);
        // CB 51 026F
        gbc.setState(0xd1b7, 0x68f5, 0x4e20, 0x8a03, 0xf341, 0x2858, 0x0, 0x1);
        gbc.writeMem(0xd1b7, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x68f5);
        EXPECT(gbc.pc(), 0xd1b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1b7), 0xcb);
        EXPECT(gbc.readMem(0xd1b8), 0x51);
        // CB 51 0271
        gbc.setState(0x662b, 0x44bf, 0x4d90, 0xf36b, 0xc9f9, 0xf994, 0x1, 0x1);
        gbc.writeMem(0x662b, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x44bf);
        EXPECT(gbc.pc(), 0x662d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0272
        gbc.setState(0x5a1, 0xbd3e, 0x3820, 0x4581, 0x673b, 0x8149, 0x1, 0x1);
        gbc.writeMem(0x5a1, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xbd3e);
        EXPECT(gbc.pc(), 0x5a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0273
        gbc.setState(0x3fb5, 0x3b68, 0x2060, 0x2cdb, 0x6440, 0xd3d3, 0x0, 0x1);
        gbc.writeMem(0x3fb5, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x3b68);
        EXPECT(gbc.pc(), 0x3fb7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0274
        gbc.setState(0x640f, 0x7970, 0xbb0, 0x5de1, 0xedaa, 0xb764, 0x1, 0x1);
        gbc.writeMem(0x640f, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x7970);
        EXPECT(gbc.pc(), 0x6411);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0275
        gbc.setState(0x2e15, 0xc575, 0xe750, 0x22b2, 0x6dff, 0x2b0e, 0x1, 0x1);
        gbc.writeMem(0x2e15, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xc575);
        EXPECT(gbc.pc(), 0x2e17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0276
        gbc.setState(0x61d0, 0xbe39, 0xe680, 0x6ed2, 0x867e, 0xb081, 0x1, 0x0);
        gbc.writeMem(0x61d0, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xbe39);
        EXPECT(gbc.pc(), 0x61d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0277
        gbc.setState(0x1d2b, 0x4170, 0x63e0, 0x4a8a, 0xef3, 0xd013, 0x0, 0x1);
        gbc.writeMem(0x1d2b, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x4170);
        EXPECT(gbc.pc(), 0x1d2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0278
        gbc.setState(0x4b50, 0x29f5, 0xfc00, 0x4acb, 0xcef7, 0xe25b, 0x1, 0x0);
        gbc.writeMem(0x4b50, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x29f5);
        EXPECT(gbc.pc(), 0x4b52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0279
        gbc.setState(0xcf4d, 0x8824, 0xa150, 0xe40d, 0xaa36, 0x9626, 0x1, 0x1);
        gbc.writeMem(0xcf4d, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x8824);
        EXPECT(gbc.pc(), 0xcf4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf4d), 0xcb);
        EXPECT(gbc.readMem(0xcf4e), 0x51);
        // CB 51 027A
        gbc.setState(0xe8ed, 0x2cb9, 0x7d50, 0xe339, 0xe254, 0x4063, 0x0, 0x1);
        gbc.writeMem(0xe8ed, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x2cb9);
        EXPECT(gbc.pc(), 0xe8ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8ed), 0xcb);
        EXPECT(gbc.readMem(0xe8ee), 0x51);
        // CB 51 027B
        gbc.setState(0xd7d4, 0xcaab, 0x4d50, 0x7c56, 0x7b64, 0x59b9, 0x1, 0x1);
        gbc.writeMem(0xd7d4, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xcaab);
        EXPECT(gbc.pc(), 0xd7d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7d4), 0xcb);
        EXPECT(gbc.readMem(0xd7d5), 0x51);
        // CB 51 027C
        gbc.setState(0x6ef6, 0x4ef4, 0x61e0, 0x7de4, 0x20f8, 0xfe84, 0x1, 0x1);
        gbc.writeMem(0x6ef6, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x4ef4);
        EXPECT(gbc.pc(), 0x6ef8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 027D
        gbc.setState(0x87a7, 0xf48e, 0xe4c0, 0x3b9c, 0xfca8, 0xd5af, 0x0, 0x1);
        gbc.writeMem(0x87a7, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xf48e);
        EXPECT(gbc.pc(), 0x87a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87a7), 0xcb);
        EXPECT(gbc.readMem(0x87a8), 0x51);
        // CB 51 027E
        gbc.setState(0xd8b6, 0x5560, 0xef60, 0x1a21, 0xa868, 0x209f, 0x0, 0x1);
        gbc.writeMem(0xd8b6, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x5560);
        EXPECT(gbc.pc(), 0xd8b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8b6), 0xcb);
        EXPECT(gbc.readMem(0xd8b7), 0x51);
        // CB 51 027F
        gbc.setState(0x1b8b, 0xfd5b, 0xf60, 0x3b06, 0xfa66, 0x8e99, 0x0, 0x0);
        gbc.writeMem(0x1b8b, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xfd5b);
        EXPECT(gbc.pc(), 0x1b8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0280
        gbc.setState(0x1d6, 0x367, 0x2030, 0xa490, 0x377a, 0x5e81, 0x1, 0x1);
        gbc.writeMem(0x1d6, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x367);
        EXPECT(gbc.pc(), 0x1d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0281
        gbc.setState(0x8939, 0xeca3, 0x1e40, 0x4ec2, 0x95f8, 0x16f4, 0x1, 0x1);
        gbc.writeMem(0x8939, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xeca3);
        EXPECT(gbc.pc(), 0x893b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8939), 0xcb);
        EXPECT(gbc.readMem(0x893a), 0x51);
        // CB 51 0282
        gbc.setState(0x2439, 0xc8a1, 0x9a40, 0x23aa, 0x6783, 0x4250, 0x1, 0x0);
        gbc.writeMem(0x2439, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xc8a1);
        EXPECT(gbc.pc(), 0x243b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0283
        gbc.setState(0xcbac, 0xff3b, 0x12e0, 0x4522, 0xd0e5, 0xfefd, 0x0, 0x0);
        gbc.writeMem(0xcbac, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xff3b);
        EXPECT(gbc.pc(), 0xcbae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbac), 0xcb);
        EXPECT(gbc.readMem(0xcbad), 0x51);
        // CB 51 0284
        gbc.setState(0x40f5, 0x6d7c, 0x72b0, 0x2c57, 0x7d52, 0x9cf7, 0x1, 0x1);
        gbc.writeMem(0x40f5, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x6d7c);
        EXPECT(gbc.pc(), 0x40f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0285
        gbc.setState(0x5fc6, 0x5846, 0x2540, 0x6f05, 0x302d, 0x9af7, 0x1, 0x0);
        gbc.writeMem(0x5fc6, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x5846);
        EXPECT(gbc.pc(), 0x5fc8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0287
        gbc.setState(0x7bea, 0x244f, 0x2b70, 0x21ec, 0x9d31, 0x36f, 0x1, 0x1);
        gbc.writeMem(0x7bea, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x244f);
        EXPECT(gbc.pc(), 0x7bec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0288
        gbc.setState(0xd145, 0xeaee, 0x3270, 0xf5f6, 0x3933, 0xa832, 0x0, 0x1);
        gbc.writeMem(0xd145, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xeaee);
        EXPECT(gbc.pc(), 0xd147);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd145), 0xcb);
        EXPECT(gbc.readMem(0xd146), 0x51);
        // CB 51 0289
        gbc.setState(0x7433, 0x264b, 0xdf10, 0xaad2, 0xef1d, 0x65dc, 0x0, 0x1);
        gbc.writeMem(0x7433, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x264b);
        EXPECT(gbc.pc(), 0x7435);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 028A
        gbc.setState(0xcafb, 0x7eb3, 0x93c0, 0xd27d, 0x3d1f, 0xc727, 0x1, 0x1);
        gbc.writeMem(0xcafb, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x7eb3);
        EXPECT(gbc.pc(), 0xcafd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcafb), 0xcb);
        EXPECT(gbc.readMem(0xcafc), 0x51);
        // CB 51 028B
        gbc.setState(0xea42, 0xf81a, 0x2830, 0x9e32, 0xf468, 0x9290, 0x1, 0x0);
        gbc.writeMem(0xea42, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xf81a);
        EXPECT(gbc.pc(), 0xea44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea42), 0xcb);
        EXPECT(gbc.readMem(0xea43), 0x51);
        // CB 51 028C
        gbc.setState(0xa21a, 0x8ce0, 0x5b70, 0x25ec, 0x487b, 0xc6f7, 0x1, 0x1);
        gbc.writeMem(0xa21a, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x8ce0);
        EXPECT(gbc.pc(), 0xa21c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa21a), 0xcb);
        EXPECT(gbc.readMem(0xa21b), 0x51);
        // CB 51 028D
        gbc.setState(0x6392, 0x2f4, 0xecb0, 0xba09, 0xadc1, 0xc480, 0x1, 0x0);
        gbc.writeMem(0x6392, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x2f4);
        EXPECT(gbc.pc(), 0x6394);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 028E
        gbc.setState(0x3bca, 0xc431, 0xc940, 0x8806, 0xc0e8, 0xcd6c, 0x1, 0x1);
        gbc.writeMem(0x3bca, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xc431);
        EXPECT(gbc.pc(), 0x3bcc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 028F
        gbc.setState(0xb0f0, 0x69c2, 0x9520, 0x248c, 0x3d9b, 0x5134, 0x0, 0x0);
        gbc.writeMem(0xb0f0, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x69c2);
        EXPECT(gbc.pc(), 0xb0f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0f0), 0xcb);
        EXPECT(gbc.readMem(0xb0f1), 0x51);
        // CB 51 0290
        gbc.setState(0x36f1, 0xf069, 0x97c0, 0xcc6e, 0x8e11, 0xe831, 0x1, 0x1);
        gbc.writeMem(0x36f1, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xf069);
        EXPECT(gbc.pc(), 0x36f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0291
        gbc.setState(0x9267, 0xb79e, 0x28c0, 0x7532, 0x4ece, 0xf7c9, 0x0, 0x0);
        gbc.writeMem(0x9267, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xb79e);
        EXPECT(gbc.pc(), 0x9269);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9267), 0xcb);
        EXPECT(gbc.readMem(0x9268), 0x51);
        // CB 51 0292
        gbc.setState(0x9625, 0xb0a7, 0xae00, 0x5ba4, 0xf5a1, 0xee66, 0x1, 0x0);
        gbc.writeMem(0x9625, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xb0a7);
        EXPECT(gbc.pc(), 0x9627);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9625), 0xcb);
        EXPECT(gbc.readMem(0x9626), 0x51);
        // CB 51 0293
        gbc.setState(0x51a4, 0x5f72, 0x8c60, 0x560d, 0x7c1a, 0xd5db, 0x1, 0x0);
        gbc.writeMem(0x51a4, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x5f72);
        EXPECT(gbc.pc(), 0x51a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0294
        gbc.setState(0x8561, 0xed03, 0x2150, 0x9c83, 0x4c9d, 0xcfc3, 0x0, 0x0);
        gbc.writeMem(0x8561, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xed03);
        EXPECT(gbc.pc(), 0x8563);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8561), 0xcb);
        EXPECT(gbc.readMem(0x8562), 0x51);
        // CB 51 0295
        gbc.setState(0x661d, 0xe4e0, 0x75c0, 0x2625, 0x1a98, 0xc7ef, 0x0, 0x1);
        gbc.writeMem(0x661d, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xe4e0);
        EXPECT(gbc.pc(), 0x661f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0296
        gbc.setState(0x2da8, 0xadf7, 0xf1b0, 0xda2, 0xceba, 0xfef8, 0x1, 0x0);
        gbc.writeMem(0x2da8, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xadf7);
        EXPECT(gbc.pc(), 0x2daa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0297
        gbc.setState(0xbde3, 0x3029, 0x7d60, 0xc3aa, 0x268e, 0x53b2, 0x0, 0x0);
        gbc.writeMem(0xbde3, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x3029);
        EXPECT(gbc.pc(), 0xbde5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbde3), 0xcb);
        EXPECT(gbc.readMem(0xbde4), 0x51);
        // CB 51 0298
        gbc.setState(0x3933, 0x6f00, 0x7930, 0x116d, 0x3e7d, 0x4d36, 0x0, 0x0);
        gbc.writeMem(0x3933, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x6f00);
        EXPECT(gbc.pc(), 0x3935);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0299
        gbc.setState(0x677b, 0xead6, 0x7830, 0x2fd3, 0x2957, 0x2dae, 0x0, 0x0);
        gbc.writeMem(0x677b, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xead6);
        EXPECT(gbc.pc(), 0x677d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 029A
        gbc.setState(0xe09a, 0xd300, 0x2b90, 0x44c6, 0x6dd7, 0xc6ad, 0x0, 0x0);
        gbc.writeMem(0xe09a, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xd300);
        EXPECT(gbc.pc(), 0xe09c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe09a), 0xcb);
        EXPECT(gbc.readMem(0xe09b), 0x51);
        // CB 51 029B
        gbc.setState(0x80db, 0x95c, 0xf0f0, 0x8da9, 0xbe53, 0xb4f5, 0x0, 0x1);
        gbc.writeMem(0x80db, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x95c);
        EXPECT(gbc.pc(), 0x80dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80db), 0xcb);
        EXPECT(gbc.readMem(0x80dc), 0x51);
        // CB 51 029C
        gbc.setState(0x3762, 0x9996, 0x840, 0x4492, 0x6b1a, 0x6376, 0x1, 0x1);
        gbc.writeMem(0x3762, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x9996);
        EXPECT(gbc.pc(), 0x3764);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 029D
        gbc.setState(0x5532, 0xab79, 0xadf0, 0x51e2, 0xd96, 0xcbc3, 0x0, 0x0);
        gbc.writeMem(0x5532, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xab79);
        EXPECT(gbc.pc(), 0x5534);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 029E
        gbc.setState(0xc648, 0xedbd, 0x5380, 0xb676, 0x6881, 0xda1b, 0x1, 0x1);
        gbc.writeMem(0xc648, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xedbd);
        EXPECT(gbc.pc(), 0xc64a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc648), 0xcb);
        EXPECT(gbc.readMem(0xc649), 0x51);
        // CB 51 02A0
        gbc.setState(0x64cf, 0x7cc2, 0x7dd0, 0x9ee6, 0x1e55, 0xa25d, 0x1, 0x0);
        gbc.writeMem(0x64cf, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x7cc2);
        EXPECT(gbc.pc(), 0x64d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 02A1
        gbc.setState(0x812a, 0x85b9, 0x9ff0, 0x6212, 0x4584, 0xab29, 0x1, 0x1);
        gbc.writeMem(0x812a, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x85b9);
        EXPECT(gbc.pc(), 0x812c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x812a), 0xcb);
        EXPECT(gbc.readMem(0x812b), 0x51);
        // CB 51 02A2
        gbc.setState(0x8fe3, 0xffe9, 0xc6e0, 0x7282, 0x7cb1, 0x113a, 0x1, 0x1);
        gbc.writeMem(0x8fe3, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xffe9);
        EXPECT(gbc.pc(), 0x8fe5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fe3), 0xcb);
        EXPECT(gbc.readMem(0x8fe4), 0x51);
        // CB 51 02A3
        gbc.setState(0x8bf9, 0x5a74, 0xd950, 0x4ec8, 0xa774, 0xc402, 0x0, 0x1);
        gbc.writeMem(0x8bf9, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x5a74);
        EXPECT(gbc.pc(), 0x8bfb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bf9), 0xcb);
        EXPECT(gbc.readMem(0x8bfa), 0x51);
        // CB 51 02A4
        gbc.setState(0xc3a0, 0x271b, 0x4020, 0xfb34, 0x4b94, 0xa271, 0x1, 0x1);
        gbc.writeMem(0xc3a0, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x271b);
        EXPECT(gbc.pc(), 0xc3a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3a0), 0xcb);
        EXPECT(gbc.readMem(0xc3a1), 0x51);
        // CB 51 02A6
        gbc.setState(0x5e2c, 0x68bc, 0xdf0, 0x37be, 0x94ae, 0xd9e6, 0x0, 0x0);
        gbc.writeMem(0x5e2c, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x68bc);
        EXPECT(gbc.pc(), 0x5e2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 02A7
        gbc.setState(0xa11, 0xa5ce, 0xd360, 0x15fc, 0x2c47, 0x9d1e, 0x1, 0x0);
        gbc.writeMem(0xa11, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xa5ce);
        EXPECT(gbc.pc(), 0xa13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 02A8
        gbc.setState(0x247d, 0xcbf8, 0xe600, 0x81b, 0x7234, 0x34cf, 0x0, 0x1);
        gbc.writeMem(0x247d, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xcbf8);
        EXPECT(gbc.pc(), 0x247f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 02A9
        gbc.setState(0x1d6d, 0x483c, 0xb830, 0xb21c, 0x7a6d, 0x7eb9, 0x0, 0x1);
        gbc.writeMem(0x1d6d, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x483c);
        EXPECT(gbc.pc(), 0x1d6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 02AA
        gbc.setState(0x3210, 0xb377, 0x52c0, 0xee62, 0x6d81, 0x73da, 0x1, 0x0);
        gbc.writeMem(0x3210, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xb377);
        EXPECT(gbc.pc(), 0x3212);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 02AB
        gbc.setState(0x1cb7, 0x7ac8, 0x630, 0x222, 0x6376, 0x698a, 0x1, 0x0);
        gbc.writeMem(0x1cb7, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x7ac8);
        EXPECT(gbc.pc(), 0x1cb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 02AC
        gbc.setState(0xc022, 0x7f11, 0x65d0, 0x9509, 0xab5b, 0x19eb, 0x1, 0x1);
        gbc.writeMem(0xc022, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x7f11);
        EXPECT(gbc.pc(), 0xc024);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc022), 0xcb);
        EXPECT(gbc.readMem(0xc023), 0x51);
        // CB 51 02AD
        gbc.setState(0x251c, 0xed36, 0x1100, 0x1950, 0x6192, 0x7c59, 0x1, 0x0);
        gbc.writeMem(0x251c, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xed36);
        EXPECT(gbc.pc(), 0x251e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 02AE
        gbc.setState(0xeebf, 0x28d9, 0xf3c0, 0xf277, 0x2c06, 0x7a43, 0x1, 0x1);
        gbc.writeMem(0xeebf, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x28d9);
        EXPECT(gbc.pc(), 0xeec1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeebf), 0xcb);
        EXPECT(gbc.readMem(0xeec0), 0x51);
        // CB 51 02AF
        gbc.setState(0x6bd4, 0x2267, 0xf9f0, 0x7d38, 0x8a59, 0x3701, 0x0, 0x1);
        gbc.writeMem(0x6bd4, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x2267);
        EXPECT(gbc.pc(), 0x6bd6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 02B0
        gbc.setState(0xbdb1, 0x8ffd, 0x8800, 0x82e9, 0x73e1, 0x5a5a, 0x0, 0x0);
        gbc.writeMem(0xbdb1, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x8ffd);
        EXPECT(gbc.pc(), 0xbdb3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdb1), 0xcb);
        EXPECT(gbc.readMem(0xbdb2), 0x51);
        // CB 51 02B1
        gbc.setState(0x3af5, 0x31a6, 0x6a90, 0xaa58, 0xade6, 0x4b06, 0x0, 0x1);
        gbc.writeMem(0x3af5, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x31a6);
        EXPECT(gbc.pc(), 0x3af7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 02B2
        gbc.setState(0x19a6, 0xb9a5, 0x8d30, 0x593f, 0x6a1d, 0xefea, 0x1, 0x1);
        gbc.writeMem(0x19a6, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xb9a5);
        EXPECT(gbc.pc(), 0x19a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 02B3
        gbc.setState(0x3963, 0x183b, 0x31a0, 0xc80, 0x78ad, 0xfb33, 0x1, 0x1);
        gbc.writeMem(0x3963, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x183b);
        EXPECT(gbc.pc(), 0x3965);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 02B4
        gbc.setState(0x1010, 0x1367, 0x5e70, 0x46e7, 0x6d02, 0x6d81, 0x0, 0x0);
        gbc.writeMem(0x1010, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x1367);
        EXPECT(gbc.pc(), 0x1012);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 02B5
        gbc.setState(0xabfe, 0xa28a, 0x2130, 0x57d1, 0x13ba, 0xfe88, 0x0, 0x1);
        gbc.writeMem(0xabfe, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xa28a);
        EXPECT(gbc.pc(), 0xac00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabfe), 0xcb);
        EXPECT(gbc.readMem(0xabff), 0x51);
        // CB 51 02B6
        gbc.setState(0xa14d, 0xc051, 0x7d30, 0xd89d, 0x2af9, 0x8a08, 0x0, 0x0);
        gbc.writeMem(0xa14d, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xc051);
        EXPECT(gbc.pc(), 0xa14f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa14d), 0xcb);
        EXPECT(gbc.readMem(0xa14e), 0x51);
        // CB 51 02B7
        gbc.setState(0xaea2, 0xff82, 0x6370, 0x1ea, 0xcbb3, 0x8762, 0x0, 0x1);
        gbc.writeMem(0xaea2, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xff82);
        EXPECT(gbc.pc(), 0xaea4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaea2), 0xcb);
        EXPECT(gbc.readMem(0xaea3), 0x51);
        // CB 51 02B8
        gbc.setState(0x6151, 0x175f, 0x8fa0, 0x3eb0, 0x6c56, 0xcc77, 0x1, 0x1);
        gbc.writeMem(0x6151, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x175f);
        EXPECT(gbc.pc(), 0x6153);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 02B9
        gbc.setState(0xfa3, 0x2722, 0x7960, 0xd142, 0xa52e, 0xbddc, 0x1, 0x1);
        gbc.writeMem(0xfa3, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x2722);
        EXPECT(gbc.pc(), 0xfa5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 02BA
        gbc.setState(0x1cbe, 0x5a4b, 0x6780, 0x58be, 0x41c3, 0x9de9, 0x1, 0x1);
        gbc.writeMem(0x1cbe, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x5a4b);
        EXPECT(gbc.pc(), 0x1cc0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 02BB
        gbc.setState(0x7788, 0xd022, 0xa3a0, 0x46ba, 0xfc23, 0xb165, 0x0, 0x1);
        gbc.writeMem(0x7788, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xd022);
        EXPECT(gbc.pc(), 0x778a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 02BC
        gbc.setState(0xdb75, 0x4642, 0x5600, 0x903d, 0xcfaa, 0xdf75, 0x0, 0x0);
        gbc.writeMem(0xdb75, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x4642);
        EXPECT(gbc.pc(), 0xdb77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb75), 0xcb);
        EXPECT(gbc.readMem(0xdb76), 0x51);
        // CB 51 02BD
        gbc.setState(0x8d25, 0x85e0, 0xc0, 0x8952, 0xf607, 0xc03f, 0x1, 0x0);
        gbc.writeMem(0x8d25, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x85e0);
        EXPECT(gbc.pc(), 0x8d27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d25), 0xcb);
        EXPECT(gbc.readMem(0x8d26), 0x51);
        // CB 51 02BE
        gbc.setState(0xa203, 0x7412, 0x27e0, 0xe45f, 0xbcc1, 0xefda, 0x1, 0x0);
        gbc.writeMem(0xa203, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x7412);
        EXPECT(gbc.pc(), 0xa205);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa203), 0xcb);
        EXPECT(gbc.readMem(0xa204), 0x51);
        // CB 51 02BF
        gbc.setState(0xabf5, 0x1d34, 0xcee0, 0x8bca, 0xf8a2, 0xc74c, 0x0, 0x0);
        gbc.writeMem(0xabf5, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x1d34);
        EXPECT(gbc.pc(), 0xabf7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabf5), 0xcb);
        EXPECT(gbc.readMem(0xabf6), 0x51);
        // CB 51 02C0
        gbc.setState(0xa41f, 0x9841, 0x9940, 0xaa6b, 0x25b8, 0xf8d, 0x1, 0x1);
        gbc.writeMem(0xa41f, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x9841);
        EXPECT(gbc.pc(), 0xa421);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa41f), 0xcb);
        EXPECT(gbc.readMem(0xa420), 0x51);
        // CB 51 02C1
        gbc.setState(0xbef0, 0x546c, 0xa110, 0x1d68, 0xa1fe, 0x6732, 0x1, 0x0);
        gbc.writeMem(0xbef0, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x546c);
        EXPECT(gbc.pc(), 0xbef2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbef0), 0xcb);
        EXPECT(gbc.readMem(0xbef1), 0x51);
        // CB 51 02C2
        gbc.setState(0x618e, 0x35e7, 0x2fd0, 0xa7fe, 0x168, 0xe738, 0x0, 0x0);
        gbc.writeMem(0x618e, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x35e7);
        EXPECT(gbc.pc(), 0x6190);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 02C3
        gbc.setState(0xe873, 0xd2ee, 0x7420, 0x39ca, 0x153, 0xd59c, 0x0, 0x1);
        gbc.writeMem(0xe873, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xd2ee);
        EXPECT(gbc.pc(), 0xe875);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe873), 0xcb);
        EXPECT(gbc.readMem(0xe874), 0x51);
        // CB 51 02C4
        gbc.setState(0xd94a, 0x1fb4, 0x2720, 0x61f6, 0xe6f1, 0xf394, 0x0, 0x0);
        gbc.writeMem(0xd94a, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x1fb4);
        EXPECT(gbc.pc(), 0xd94c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd94a), 0xcb);
        EXPECT(gbc.readMem(0xd94b), 0x51);
        // CB 51 02C5
        gbc.setState(0x2975, 0xbfaa, 0xbfd0, 0x1a7b, 0x2ea8, 0x7352, 0x1, 0x0);
        gbc.writeMem(0x2975, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xbfaa);
        EXPECT(gbc.pc(), 0x2977);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 02C6
        gbc.setState(0x3d94, 0x106f, 0x3680, 0x7dcf, 0xb246, 0x33ef, 0x1, 0x0);
        gbc.writeMem(0x3d94, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x106f);
        EXPECT(gbc.pc(), 0x3d96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 02C7
        gbc.setState(0x26ab, 0xd473, 0x1900, 0xe3e6, 0x3e31, 0x4266, 0x0, 0x1);
        gbc.writeMem(0x26ab, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xd473);
        EXPECT(gbc.pc(), 0x26ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 02C8
        gbc.setState(0xc730, 0x76b8, 0xf6d0, 0x2ac5, 0xe86b, 0x3506, 0x1, 0x1);
        gbc.writeMem(0xc730, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x76b8);
        EXPECT(gbc.pc(), 0xc732);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc730), 0xcb);
        EXPECT(gbc.readMem(0xc731), 0x51);
        // CB 51 02C9
        gbc.setState(0x7fed, 0xefb, 0xd360, 0xdd8b, 0xb20e, 0x64a6, 0x0, 0x1);
        gbc.writeMem(0x7fed, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xefb);
        EXPECT(gbc.pc(), 0x7fef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 02CA
        gbc.setState(0xb5d2, 0xc0d7, 0xf5f0, 0x7875, 0xf4b4, 0xba1a, 0x1, 0x0);
        gbc.writeMem(0xb5d2, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xc0d7);
        EXPECT(gbc.pc(), 0xb5d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5d2), 0xcb);
        EXPECT(gbc.readMem(0xb5d3), 0x51);
        // CB 51 02CB
        gbc.setState(0x84b1, 0x283, 0x3bb0, 0xbbe0, 0x87be, 0x6094, 0x0, 0x1);
        gbc.writeMem(0x84b1, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x283);
        EXPECT(gbc.pc(), 0x84b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84b1), 0xcb);
        EXPECT(gbc.readMem(0x84b2), 0x51);
        // CB 51 02CC
        gbc.setState(0xb7a7, 0x9ab5, 0xdde0, 0x95df, 0xcb9c, 0x6e9a, 0x1, 0x1);
        gbc.writeMem(0xb7a7, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x9ab5);
        EXPECT(gbc.pc(), 0xb7a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7a7), 0xcb);
        EXPECT(gbc.readMem(0xb7a8), 0x51);
        // CB 51 02CD
        gbc.setState(0xab13, 0xfe06, 0xdd70, 0xafca, 0x3d9a, 0xc6dc, 0x1, 0x1);
        gbc.writeMem(0xab13, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xfe06);
        EXPECT(gbc.pc(), 0xab15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab13), 0xcb);
        EXPECT(gbc.readMem(0xab14), 0x51);
        // CB 51 02CE
        gbc.setState(0x7f15, 0x274d, 0xafe0, 0xc6e4, 0xea8e, 0xe3fd, 0x0, 0x1);
        gbc.writeMem(0x7f15, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x274d);
        EXPECT(gbc.pc(), 0x7f17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 02CF
        gbc.setState(0xb2e5, 0xc639, 0x1400, 0x56e4, 0xc099, 0xb2c, 0x0, 0x0);
        gbc.writeMem(0xb2e5, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xc639);
        EXPECT(gbc.pc(), 0xb2e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2e5), 0xcb);
        EXPECT(gbc.readMem(0xb2e6), 0x51);
        // CB 51 02D0
        gbc.setState(0xb90c, 0xbcaf, 0xd8f0, 0xee5, 0xfcd6, 0xc0cc, 0x1, 0x1);
        gbc.writeMem(0xb90c, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xbcaf);
        EXPECT(gbc.pc(), 0xb90e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb90c), 0xcb);
        EXPECT(gbc.readMem(0xb90d), 0x51);
        // CB 51 02D1
        gbc.setState(0xab89, 0x3a60, 0xda0, 0x682b, 0x8f76, 0xe844, 0x1, 0x1);
        gbc.writeMem(0xab89, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x3a60);
        EXPECT(gbc.pc(), 0xab8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab89), 0xcb);
        EXPECT(gbc.readMem(0xab8a), 0x51);
        // CB 51 02D2
        gbc.setState(0x3513, 0x1e80, 0x6c50, 0xed7, 0x9a6e, 0x3e93, 0x1, 0x1);
        gbc.writeMem(0x3513, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x1e80);
        EXPECT(gbc.pc(), 0x3515);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 02D3
        gbc.setState(0x44c9, 0x8e16, 0xd4a0, 0x8acb, 0xa2ef, 0xa778, 0x1, 0x1);
        gbc.writeMem(0x44c9, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x8e16);
        EXPECT(gbc.pc(), 0x44cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 02D4
        gbc.setState(0xea96, 0x7776, 0x8250, 0xa731, 0x26ca, 0x189d, 0x1, 0x0);
        gbc.writeMem(0xea96, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x7776);
        EXPECT(gbc.pc(), 0xea98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea96), 0xcb);
        EXPECT(gbc.readMem(0xea97), 0x51);
        // CB 51 02D5
        gbc.setState(0xe491, 0x1eb4, 0x5a60, 0x2a4, 0x11a3, 0xd0b2, 0x1, 0x1);
        gbc.writeMem(0xe491, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x1eb4);
        EXPECT(gbc.pc(), 0xe493);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe491), 0xcb);
        EXPECT(gbc.readMem(0xe492), 0x51);
        // CB 51 02D6
        gbc.setState(0xb9dc, 0xe761, 0xc950, 0x780, 0x864, 0x95c6, 0x1, 0x1);
        gbc.writeMem(0xb9dc, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xe761);
        EXPECT(gbc.pc(), 0xb9de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9dc), 0xcb);
        EXPECT(gbc.readMem(0xb9dd), 0x51);
        // CB 51 02D7
        gbc.setState(0xaedd, 0x741d, 0xd520, 0xdbcb, 0x9594, 0xdc6, 0x0, 0x1);
        gbc.writeMem(0xaedd, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x741d);
        EXPECT(gbc.pc(), 0xaedf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaedd), 0xcb);
        EXPECT(gbc.readMem(0xaede), 0x51);
        // CB 51 02D8
        gbc.setState(0x9ad6, 0xd26c, 0xe30, 0x3e17, 0xfa65, 0x35cb, 0x1, 0x0);
        gbc.writeMem(0x9ad6, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xd26c);
        EXPECT(gbc.pc(), 0x9ad8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ad6), 0xcb);
        EXPECT(gbc.readMem(0x9ad7), 0x51);
        // CB 51 02D9
        gbc.setState(0xd4c4, 0x1aa3, 0x7aa0, 0x52f, 0xff6d, 0x1b2d, 0x1, 0x1);
        gbc.writeMem(0xd4c4, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x1aa3);
        EXPECT(gbc.pc(), 0xd4c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4c4), 0xcb);
        EXPECT(gbc.readMem(0xd4c5), 0x51);
        // CB 51 02DA
        gbc.setState(0x6534, 0xb68a, 0x6e60, 0xb328, 0xec9d, 0xa7c4, 0x0, 0x1);
        gbc.writeMem(0x6534, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xb68a);
        EXPECT(gbc.pc(), 0x6536);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 02DB
        gbc.setState(0x2f0f, 0xa380, 0xe090, 0x8f13, 0xe800, 0xf324, 0x1, 0x0);
        gbc.writeMem(0x2f0f, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xa380);
        EXPECT(gbc.pc(), 0x2f11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 02DC
        gbc.setState(0x958f, 0xb4b, 0x1c00, 0xa9c7, 0x1f8d, 0x60d5, 0x0, 0x1);
        gbc.writeMem(0x958f, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xb4b);
        EXPECT(gbc.pc(), 0x9591);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x958f), 0xcb);
        EXPECT(gbc.readMem(0x9590), 0x51);
        // CB 51 02DD
        gbc.setState(0xd3ff, 0x8f73, 0xa590, 0xe79b, 0xc10d, 0x8b23, 0x0, 0x0);
        gbc.writeMem(0xd3ff, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x8f73);
        EXPECT(gbc.pc(), 0xd401);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3ff), 0xcb);
        EXPECT(gbc.readMem(0xd400), 0x51);
        // CB 51 02DE
        gbc.setState(0xe8e, 0xebb8, 0xbea0, 0xbffd, 0x3492, 0xa95a, 0x1, 0x0);
        gbc.writeMem(0xe8e, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xebb8);
        EXPECT(gbc.pc(), 0xe90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 02DF
        gbc.setState(0xd98e, 0x1be1, 0xaf70, 0xec42, 0xf163, 0x11fe, 0x0, 0x1);
        gbc.writeMem(0xd98e, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x1be1);
        EXPECT(gbc.pc(), 0xd990);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd98e), 0xcb);
        EXPECT(gbc.readMem(0xd98f), 0x51);
        // CB 51 02E0
        gbc.setState(0xedc3, 0x3c01, 0x5bb0, 0x77ac, 0x88cb, 0x7e7e, 0x1, 0x1);
        gbc.writeMem(0xedc3, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x3c01);
        EXPECT(gbc.pc(), 0xedc5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedc3), 0xcb);
        EXPECT(gbc.readMem(0xedc4), 0x51);
        // CB 51 02E1
        gbc.setState(0xeaa6, 0xb54d, 0x9e30, 0x50eb, 0xc85c, 0x49c3, 0x0, 0x1);
        gbc.writeMem(0xeaa6, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xb54d);
        EXPECT(gbc.pc(), 0xeaa8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeaa6), 0xcb);
        EXPECT(gbc.readMem(0xeaa7), 0x51);
        // CB 51 02E2
        gbc.setState(0x118c, 0x1955, 0x3570, 0xe04d, 0xfa3, 0xd97e, 0x0, 0x0);
        gbc.writeMem(0x118c, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x1955);
        EXPECT(gbc.pc(), 0x118e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 02E3
        gbc.setState(0x9636, 0xef0, 0xd520, 0x1f6e, 0xd3b7, 0x99f1, 0x1, 0x1);
        gbc.writeMem(0x9636, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xef0);
        EXPECT(gbc.pc(), 0x9638);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9636), 0xcb);
        EXPECT(gbc.readMem(0x9637), 0x51);
        // CB 51 02E4
        gbc.setState(0xa48f, 0x7467, 0x4b70, 0x8212, 0x9467, 0x1c91, 0x0, 0x0);
        gbc.writeMem(0xa48f, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x7467);
        EXPECT(gbc.pc(), 0xa491);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa48f), 0xcb);
        EXPECT(gbc.readMem(0xa490), 0x51);
        // CB 51 02E5
        gbc.setState(0x3685, 0xf94f, 0x1f00, 0xa4e1, 0x5074, 0x22fb, 0x0, 0x0);
        gbc.writeMem(0x3685, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xf94f);
        EXPECT(gbc.pc(), 0x3687);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 02E6
        gbc.setState(0x5910, 0x8a1c, 0x7ff0, 0x1a93, 0x7c55, 0x4791, 0x1, 0x1);
        gbc.writeMem(0x5910, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x8a1c);
        EXPECT(gbc.pc(), 0x5912);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 02E7
        gbc.setState(0x7afe, 0xa776, 0x1de0, 0xa1c3, 0x7b1b, 0x8b32, 0x1, 0x1);
        gbc.writeMem(0x7afe, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xa776);
        EXPECT(gbc.pc(), 0x7b00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 02E8
        gbc.setState(0xe960, 0x6579, 0xa4a0, 0xd7bf, 0xeda1, 0xbb73, 0x1, 0x1);
        gbc.writeMem(0xe960, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x6579);
        EXPECT(gbc.pc(), 0xe962);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe960), 0xcb);
        EXPECT(gbc.readMem(0xe961), 0x51);
        // CB 51 02E9
        gbc.setState(0x4885, 0x6e82, 0xb680, 0x90d6, 0x2848, 0xa9b1, 0x0, 0x0);
        gbc.writeMem(0x4885, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x6e82);
        EXPECT(gbc.pc(), 0x4887);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 02EA
        gbc.setState(0x24a5, 0x1ba2, 0x58c0, 0xeadf, 0xde52, 0x36ee, 0x1, 0x1);
        gbc.writeMem(0x24a5, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x1ba2);
        EXPECT(gbc.pc(), 0x24a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 02EB
        gbc.setState(0x12d6, 0x3ef, 0x9400, 0x18cd, 0x9a, 0xbe95, 0x1, 0x0);
        gbc.writeMem(0x12d6, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x3ef);
        EXPECT(gbc.pc(), 0x12d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 02EC
        gbc.setState(0x71b0, 0x8355, 0xc8c0, 0x694e, 0xeec3, 0x8474, 0x1, 0x0);
        gbc.writeMem(0x71b0, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x8355);
        EXPECT(gbc.pc(), 0x71b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 02ED
        gbc.setState(0xa29b, 0x4f06, 0x8ac0, 0x1a56, 0xafbd, 0x698c, 0x1, 0x1);
        gbc.writeMem(0xa29b, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x4f06);
        EXPECT(gbc.pc(), 0xa29d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa29b), 0xcb);
        EXPECT(gbc.readMem(0xa29c), 0x51);
        // CB 51 02EF
        gbc.setState(0xc8ee, 0x6b51, 0x7650, 0x541a, 0xf7bc, 0xfc46, 0x1, 0x1);
        gbc.writeMem(0xc8ee, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x6b51);
        EXPECT(gbc.pc(), 0xc8f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8ee), 0xcb);
        EXPECT(gbc.readMem(0xc8ef), 0x51);
        // CB 51 02F0
        gbc.setState(0x166a, 0x19be, 0x7be0, 0x43f1, 0x80fa, 0x7019, 0x1, 0x0);
        gbc.writeMem(0x166a, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x19be);
        EXPECT(gbc.pc(), 0x166c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 02F1
        gbc.setState(0xd6b6, 0x9faa, 0x7b0, 0x51f7, 0xfb8e, 0x17a8, 0x0, 0x1);
        gbc.writeMem(0xd6b6, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x9faa);
        EXPECT(gbc.pc(), 0xd6b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6b6), 0xcb);
        EXPECT(gbc.readMem(0xd6b7), 0x51);
        // CB 51 02F2
        gbc.setState(0x215c, 0xc481, 0x9730, 0x86c7, 0x5bed, 0xca97, 0x1, 0x1);
        gbc.writeMem(0x215c, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xc481);
        EXPECT(gbc.pc(), 0x215e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 02F3
        gbc.setState(0xd1ca, 0x313a, 0x8d50, 0x52e1, 0x8f52, 0x9cb1, 0x1, 0x1);
        gbc.writeMem(0xd1ca, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x313a);
        EXPECT(gbc.pc(), 0xd1cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1ca), 0xcb);
        EXPECT(gbc.readMem(0xd1cb), 0x51);
        // CB 51 02F4
        gbc.setState(0xd498, 0x5aa1, 0xb780, 0x42f, 0xa2ea, 0xfd7e, 0x0, 0x0);
        gbc.writeMem(0xd498, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x5aa1);
        EXPECT(gbc.pc(), 0xd49a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd498), 0xcb);
        EXPECT(gbc.readMem(0xd499), 0x51);
        // CB 51 02F5
        gbc.setState(0xd1fa, 0x171e, 0x36b0, 0xef34, 0x3021, 0xa8e, 0x1, 0x1);
        gbc.writeMem(0xd1fa, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x171e);
        EXPECT(gbc.pc(), 0xd1fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1fa), 0xcb);
        EXPECT(gbc.readMem(0xd1fb), 0x51);
        // CB 51 02F6
        gbc.setState(0x95eb, 0x4202, 0x94a0, 0x45bb, 0x192f, 0x7613, 0x0, 0x1);
        gbc.writeMem(0x95eb, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x4202);
        EXPECT(gbc.pc(), 0x95ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95eb), 0xcb);
        EXPECT(gbc.readMem(0x95ec), 0x51);
        // CB 51 02F7
        gbc.setState(0xcba7, 0xc373, 0x54e0, 0x127f, 0xe4ad, 0xf838, 0x0, 0x0);
        gbc.writeMem(0xcba7, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xc373);
        EXPECT(gbc.pc(), 0xcba9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcba7), 0xcb);
        EXPECT(gbc.readMem(0xcba8), 0x51);
        // CB 51 02F8
        gbc.setState(0x6be6, 0x8801, 0xdd00, 0x7923, 0xa9f6, 0x13eb, 0x0, 0x1);
        gbc.writeMem(0x6be6, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x8801);
        EXPECT(gbc.pc(), 0x6be8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 02F9
        gbc.setState(0x5f03, 0x8e8c, 0x1120, 0x87b0, 0xce7d, 0x819e, 0x1, 0x0);
        gbc.writeMem(0x5f03, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x8e8c);
        EXPECT(gbc.pc(), 0x5f05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 02FA
        gbc.setState(0xb1d5, 0xb325, 0xd990, 0x6807, 0xe989, 0xb964, 0x1, 0x0);
        gbc.writeMem(0xb1d5, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xb325);
        EXPECT(gbc.pc(), 0xb1d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1d5), 0xcb);
        EXPECT(gbc.readMem(0xb1d6), 0x51);
        // CB 51 02FB
        gbc.setState(0xca1a, 0x2273, 0x5870, 0xc50b, 0x5414, 0x1c27, 0x0, 0x1);
        gbc.writeMem(0xca1a, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x2273);
        EXPECT(gbc.pc(), 0xca1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca1a), 0xcb);
        EXPECT(gbc.readMem(0xca1b), 0x51);
        // CB 51 02FC
        gbc.setState(0xd41b, 0xc6e9, 0x80, 0x598d, 0xf892, 0x321f, 0x1, 0x1);
        gbc.writeMem(0xd41b, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xc6e9);
        EXPECT(gbc.pc(), 0xd41d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd41b), 0xcb);
        EXPECT(gbc.readMem(0xd41c), 0x51);
        // CB 51 02FD
        gbc.setState(0xc9b8, 0x8198, 0x44e0, 0x5ea, 0xd685, 0x2c9a, 0x0, 0x1);
        gbc.writeMem(0xc9b8, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x8198);
        EXPECT(gbc.pc(), 0xc9ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9b8), 0xcb);
        EXPECT(gbc.readMem(0xc9b9), 0x51);
        // CB 51 02FE
        gbc.setState(0x52b6, 0x5c8c, 0x2190, 0x1ed0, 0x1fc4, 0x2a4b, 0x1, 0x0);
        gbc.writeMem(0x52b6, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x5c8c);
        EXPECT(gbc.pc(), 0x52b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 02FF
        gbc.setState(0x4427, 0x7226, 0xf450, 0x1028, 0x490f, 0xc53, 0x1, 0x1);
        gbc.writeMem(0x4427, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x7226);
        EXPECT(gbc.pc(), 0x4429);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0300
        gbc.setState(0xeccd, 0x74c0, 0x6d30, 0x7e68, 0x55d2, 0xfe0b, 0x1, 0x0);
        gbc.writeMem(0xeccd, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x74c0);
        EXPECT(gbc.pc(), 0xeccf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeccd), 0xcb);
        EXPECT(gbc.readMem(0xecce), 0x51);
        // CB 51 0302
        gbc.setState(0x5f87, 0x8ee8, 0x9500, 0x4eb4, 0x3246, 0x5fc7, 0x1, 0x1);
        gbc.writeMem(0x5f87, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x8ee8);
        EXPECT(gbc.pc(), 0x5f89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0304
        gbc.setState(0xa339, 0x2fcb, 0x29a0, 0xcedf, 0x7e7e, 0x6090, 0x1, 0x0);
        gbc.writeMem(0xa339, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x2fcb);
        EXPECT(gbc.pc(), 0xa33b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa339), 0xcb);
        EXPECT(gbc.readMem(0xa33a), 0x51);
        // CB 51 0305
        gbc.setState(0x4939, 0xf943, 0xd720, 0xee1e, 0x709d, 0xf6c2, 0x0, 0x0);
        gbc.writeMem(0x4939, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xf943);
        EXPECT(gbc.pc(), 0x493b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0306
        gbc.setState(0xf4a, 0x51a7, 0xe920, 0xba68, 0x6183, 0x6399, 0x1, 0x0);
        gbc.writeMem(0xf4a, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x51a7);
        EXPECT(gbc.pc(), 0xf4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0307
        gbc.setState(0x59a8, 0x4e4a, 0x810, 0x825b, 0x6af6, 0xd29b, 0x1, 0x0);
        gbc.writeMem(0x59a8, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x4e4a);
        EXPECT(gbc.pc(), 0x59aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0308
        gbc.setState(0xcd4d, 0x1fc0, 0xa9d0, 0x535c, 0x51f6, 0x83a0, 0x1, 0x1);
        gbc.writeMem(0xcd4d, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x1fc0);
        EXPECT(gbc.pc(), 0xcd4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd4d), 0xcb);
        EXPECT(gbc.readMem(0xcd4e), 0x51);
        // CB 51 0309
        gbc.setState(0x6059, 0xc31b, 0x1300, 0xb3d2, 0x7ee7, 0x662a, 0x1, 0x0);
        gbc.writeMem(0x6059, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xc31b);
        EXPECT(gbc.pc(), 0x605b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 030A
        gbc.setState(0x9c85, 0xaf2f, 0x21e0, 0x5d24, 0xe743, 0x1173, 0x0, 0x0);
        gbc.writeMem(0x9c85, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xaf2f);
        EXPECT(gbc.pc(), 0x9c87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c85), 0xcb);
        EXPECT(gbc.readMem(0x9c86), 0x51);
        // CB 51 030B
        gbc.setState(0x53c8, 0x13e8, 0x7210, 0x21e4, 0x9224, 0x6b68, 0x1, 0x0);
        gbc.writeMem(0x53c8, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x13e8);
        EXPECT(gbc.pc(), 0x53ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 030C
        gbc.setState(0x59ab, 0x2eda, 0x56c0, 0x87a5, 0xc66d, 0x74eb, 0x1, 0x1);
        gbc.writeMem(0x59ab, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x2eda);
        EXPECT(gbc.pc(), 0x59ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 030D
        gbc.setState(0x3d33, 0x45fb, 0x8400, 0xecba, 0x53e9, 0x4105, 0x1, 0x0);
        gbc.writeMem(0x3d33, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x45fb);
        EXPECT(gbc.pc(), 0x3d35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 030E
        gbc.setState(0x19c0, 0x21ea, 0x5700, 0x1c4f, 0xccc3, 0x31be, 0x1, 0x1);
        gbc.writeMem(0x19c0, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x21ea);
        EXPECT(gbc.pc(), 0x19c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 030F
        gbc.setState(0x8664, 0x8947, 0x5f80, 0x7a56, 0x3679, 0x94c1, 0x1, 0x1);
        gbc.writeMem(0x8664, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x8947);
        EXPECT(gbc.pc(), 0x8666);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8664), 0xcb);
        EXPECT(gbc.readMem(0x8665), 0x51);
        // CB 51 0310
        gbc.setState(0x3272, 0x227d, 0x6b70, 0x1f38, 0x269, 0x9e93, 0x0, 0x1);
        gbc.writeMem(0x3272, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x227d);
        EXPECT(gbc.pc(), 0x3274);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0311
        gbc.setState(0x8fc0, 0x1b4a, 0x2d00, 0xafb2, 0x618d, 0x332d, 0x1, 0x0);
        gbc.writeMem(0x8fc0, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x1b4a);
        EXPECT(gbc.pc(), 0x8fc2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fc0), 0xcb);
        EXPECT(gbc.readMem(0x8fc1), 0x51);
        // CB 51 0312
        gbc.setState(0x4d12, 0xfc7, 0x7900, 0x8072, 0xc968, 0x71c3, 0x1, 0x1);
        gbc.writeMem(0x4d12, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xfc7);
        EXPECT(gbc.pc(), 0x4d14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0313
        gbc.setState(0x4972, 0xfa45, 0x58c0, 0x5a91, 0x59c0, 0x3894, 0x0, 0x0);
        gbc.writeMem(0x4972, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xfa45);
        EXPECT(gbc.pc(), 0x4974);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0314
        gbc.setState(0x8f0c, 0x6bc8, 0x5140, 0xaeac, 0x351e, 0x9075, 0x0, 0x1);
        gbc.writeMem(0x8f0c, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x6bc8);
        EXPECT(gbc.pc(), 0x8f0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f0c), 0xcb);
        EXPECT(gbc.readMem(0x8f0d), 0x51);
        // CB 51 0315
        gbc.setState(0x795a, 0xc6a0, 0x6d10, 0xf5cc, 0xface, 0x9fc1, 0x0, 0x1);
        gbc.writeMem(0x795a, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xc6a0);
        EXPECT(gbc.pc(), 0x795c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0316
        gbc.setState(0x1923, 0xacaf, 0x3180, 0x11fe, 0x7646, 0x1df9, 0x0, 0x0);
        gbc.writeMem(0x1923, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xacaf);
        EXPECT(gbc.pc(), 0x1925);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0317
        gbc.setState(0xb288, 0x7c9c, 0xc810, 0x5a35, 0x6a66, 0xfbfc, 0x1, 0x0);
        gbc.writeMem(0xb288, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x7c9c);
        EXPECT(gbc.pc(), 0xb28a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb288), 0xcb);
        EXPECT(gbc.readMem(0xb289), 0x51);
        // CB 51 0318
        gbc.setState(0x3204, 0xb987, 0x4df0, 0xad0d, 0x394d, 0xc5a8, 0x0, 0x1);
        gbc.writeMem(0x3204, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xb987);
        EXPECT(gbc.pc(), 0x3206);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0319
        gbc.setState(0xd83c, 0x576c, 0xa8d0, 0xba5e, 0xf421, 0xd6c3, 0x0, 0x1);
        gbc.writeMem(0xd83c, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x576c);
        EXPECT(gbc.pc(), 0xd83e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd83c), 0xcb);
        EXPECT(gbc.readMem(0xd83d), 0x51);
        // CB 51 031A
        gbc.setState(0x20c8, 0x22ff, 0x7f00, 0x3200, 0x2886, 0x8893, 0x0, 0x0);
        gbc.writeMem(0x20c8, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x22ff);
        EXPECT(gbc.pc(), 0x20ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 031B
        gbc.setState(0xee21, 0x81df, 0x8410, 0xb616, 0x24ba, 0x8231, 0x1, 0x0);
        gbc.writeMem(0xee21, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x81df);
        EXPECT(gbc.pc(), 0xee23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee21), 0xcb);
        EXPECT(gbc.readMem(0xee22), 0x51);
        // CB 51 031C
        gbc.setState(0x8468, 0x453c, 0x6870, 0x2c7d, 0xffaa, 0xb815, 0x0, 0x1);
        gbc.writeMem(0x8468, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x453c);
        EXPECT(gbc.pc(), 0x846a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8468), 0xcb);
        EXPECT(gbc.readMem(0x8469), 0x51);
        // CB 51 031D
        gbc.setState(0x651f, 0xd7a4, 0x5330, 0xfc87, 0x335e, 0xc4c3, 0x1, 0x0);
        gbc.writeMem(0x651f, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xd7a4);
        EXPECT(gbc.pc(), 0x6521);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 031E
        gbc.setState(0xc236, 0x79e2, 0xec50, 0x7030, 0x1a3b, 0xfc8a, 0x0, 0x0);
        gbc.writeMem(0xc236, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x79e2);
        EXPECT(gbc.pc(), 0xc238);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc236), 0xcb);
        EXPECT(gbc.readMem(0xc237), 0x51);
        // CB 51 031F
        gbc.setState(0x9560, 0x9626, 0x3da0, 0xbf6c, 0x654c, 0x95e, 0x1, 0x0);
        gbc.writeMem(0x9560, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x9626);
        EXPECT(gbc.pc(), 0x9562);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9560), 0xcb);
        EXPECT(gbc.readMem(0x9561), 0x51);
        // CB 51 0320
        gbc.setState(0x3ce2, 0x7ecd, 0x1640, 0xa986, 0x7e9e, 0xb83e, 0x0, 0x0);
        gbc.writeMem(0x3ce2, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x7ecd);
        EXPECT(gbc.pc(), 0x3ce4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0321
        gbc.setState(0xd4db, 0xef4f, 0xf910, 0x6d85, 0xa91f, 0x974c, 0x1, 0x0);
        gbc.writeMem(0xd4db, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xef4f);
        EXPECT(gbc.pc(), 0xd4dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4db), 0xcb);
        EXPECT(gbc.readMem(0xd4dc), 0x51);
        // CB 51 0322
        gbc.setState(0x4446, 0x6f6e, 0x9800, 0x79c1, 0x20f1, 0xc90f, 0x1, 0x0);
        gbc.writeMem(0x4446, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x6f6e);
        EXPECT(gbc.pc(), 0x4448);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0323
        gbc.setState(0xcc67, 0xf31e, 0x3b90, 0xe64b, 0x5cd5, 0x8ca2, 0x1, 0x0);
        gbc.writeMem(0xcc67, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xf31e);
        EXPECT(gbc.pc(), 0xcc69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc67), 0xcb);
        EXPECT(gbc.readMem(0xcc68), 0x51);
        // CB 51 0324
        gbc.setState(0xc2bb, 0xfcff, 0x3390, 0x5e3b, 0x56b1, 0x39e5, 0x0, 0x1);
        gbc.writeMem(0xc2bb, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xfcff);
        EXPECT(gbc.pc(), 0xc2bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2bb), 0xcb);
        EXPECT(gbc.readMem(0xc2bc), 0x51);
        // CB 51 0325
        gbc.setState(0xb0e3, 0xff38, 0x98d0, 0x67ed, 0xa933, 0x2e68, 0x1, 0x1);
        gbc.writeMem(0xb0e3, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xff38);
        EXPECT(gbc.pc(), 0xb0e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0e3), 0xcb);
        EXPECT(gbc.readMem(0xb0e4), 0x51);
        // CB 51 0326
        gbc.setState(0xa190, 0x67f9, 0x6a20, 0x44d3, 0x8f9f, 0x46e0, 0x1, 0x0);
        gbc.writeMem(0xa190, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x67f9);
        EXPECT(gbc.pc(), 0xa192);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa190), 0xcb);
        EXPECT(gbc.readMem(0xa191), 0x51);
        // CB 51 0327
        gbc.setState(0x6a50, 0xe6e0, 0x4060, 0xa937, 0x4052, 0xb3ca, 0x1, 0x1);
        gbc.writeMem(0x6a50, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xe6e0);
        EXPECT(gbc.pc(), 0x6a52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0329
        gbc.setState(0xd9a9, 0x1899, 0x10d0, 0x7ae6, 0x359e, 0x81c5, 0x0, 0x1);
        gbc.writeMem(0xd9a9, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x1899);
        EXPECT(gbc.pc(), 0xd9ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9a9), 0xcb);
        EXPECT(gbc.readMem(0xd9aa), 0x51);
        // CB 51 032A
        gbc.setState(0x140d, 0x6ebb, 0xb820, 0x2f, 0xbd12, 0x8754, 0x0, 0x0);
        gbc.writeMem(0x140d, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x6ebb);
        EXPECT(gbc.pc(), 0x140f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 032B
        gbc.setState(0xaada, 0x3b6a, 0x32f0, 0x3fe5, 0x1438, 0x1968, 0x1, 0x1);
        gbc.writeMem(0xaada, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x3b6a);
        EXPECT(gbc.pc(), 0xaadc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaada), 0xcb);
        EXPECT(gbc.readMem(0xaadb), 0x51);
        // CB 51 032C
        gbc.setState(0xab20, 0x37ae, 0xe920, 0x8b94, 0xa3a5, 0x118d, 0x1, 0x0);
        gbc.writeMem(0xab20, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x37ae);
        EXPECT(gbc.pc(), 0xab22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab20), 0xcb);
        EXPECT(gbc.readMem(0xab21), 0x51);
        // CB 51 032D
        gbc.setState(0xefbd, 0x7c37, 0xecf0, 0x2af1, 0xf46a, 0xc595, 0x1, 0x0);
        gbc.writeMem(0xefbd, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x7c37);
        EXPECT(gbc.pc(), 0xefbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefbd), 0xcb);
        EXPECT(gbc.readMem(0xefbe), 0x51);
        // CB 51 032E
        gbc.setState(0x6928, 0xb39, 0x1460, 0xb8d8, 0x5f4, 0xc4bb, 0x1, 0x1);
        gbc.writeMem(0x6928, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xb39);
        EXPECT(gbc.pc(), 0x692a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 032F
        gbc.setState(0x4a2b, 0xf5e9, 0xb0a0, 0xf66f, 0x3d75, 0xa898, 0x1, 0x0);
        gbc.writeMem(0x4a2b, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xf5e9);
        EXPECT(gbc.pc(), 0x4a2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0330
        gbc.setState(0x5a66, 0x8297, 0x14b0, 0x385, 0x296c, 0x6d43, 0x0, 0x0);
        gbc.writeMem(0x5a66, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x8297);
        EXPECT(gbc.pc(), 0x5a68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0331
        gbc.setState(0x5235, 0x1329, 0x1c40, 0x50a1, 0x283e, 0xd20b, 0x1, 0x0);
        gbc.writeMem(0x5235, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x1329);
        EXPECT(gbc.pc(), 0x5237);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0332
        gbc.setState(0x5fdd, 0xff5f, 0xcf80, 0xb07e, 0xfc11, 0xf89b, 0x1, 0x0);
        gbc.writeMem(0x5fdd, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xff5f);
        EXPECT(gbc.pc(), 0x5fdf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0333
        gbc.setState(0x77c1, 0xea29, 0x48e0, 0xfdb6, 0x4742, 0xde49, 0x1, 0x1);
        gbc.writeMem(0x77c1, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xea29);
        EXPECT(gbc.pc(), 0x77c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0334
        gbc.setState(0xaea6, 0x9eec, 0x6ea0, 0x63e3, 0xe729, 0xe9ef, 0x1, 0x0);
        gbc.writeMem(0xaea6, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x9eec);
        EXPECT(gbc.pc(), 0xaea8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaea6), 0xcb);
        EXPECT(gbc.readMem(0xaea7), 0x51);
        // CB 51 0335
        gbc.setState(0x8d1d, 0xee78, 0x88c0, 0x354b, 0xe88, 0x39f6, 0x1, 0x0);
        gbc.writeMem(0x8d1d, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xee78);
        EXPECT(gbc.pc(), 0x8d1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d1d), 0xcb);
        EXPECT(gbc.readMem(0x8d1e), 0x51);
        // CB 51 0336
        gbc.setState(0x7942, 0xc751, 0x8ac0, 0x945f, 0xd7b7, 0xe848, 0x0, 0x1);
        gbc.writeMem(0x7942, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xc751);
        EXPECT(gbc.pc(), 0x7944);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0337
        gbc.setState(0x3108, 0xe855, 0xcd50, 0x3208, 0xf0a, 0xc08b, 0x0, 0x0);
        gbc.writeMem(0x3108, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xe855);
        EXPECT(gbc.pc(), 0x310a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0338
        gbc.setState(0xa508, 0x82fb, 0xed0, 0xef70, 0x676c, 0x55b, 0x0, 0x1);
        gbc.writeMem(0xa508, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x82fb);
        EXPECT(gbc.pc(), 0xa50a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa508), 0xcb);
        EXPECT(gbc.readMem(0xa509), 0x51);
        // CB 51 0339
        gbc.setState(0x783f, 0xf98c, 0x3e50, 0x950f, 0x3f2c, 0x9dcc, 0x1, 0x1);
        gbc.writeMem(0x783f, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xf98c);
        EXPECT(gbc.pc(), 0x7841);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 033A
        gbc.setState(0x71d6, 0xe1c8, 0xf330, 0xb27f, 0x3754, 0x35e1, 0x1, 0x1);
        gbc.writeMem(0x71d6, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xe1c8);
        EXPECT(gbc.pc(), 0x71d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 033B
        gbc.setState(0x4dae, 0xe97f, 0x6b70, 0x6e41, 0xddce, 0x5ff8, 0x1, 0x0);
        gbc.writeMem(0x4dae, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xe97f);
        EXPECT(gbc.pc(), 0x4db0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 033C
        gbc.setState(0x78d2, 0x53b9, 0xa20, 0x695f, 0xae1e, 0xe1b0, 0x1, 0x1);
        gbc.writeMem(0x78d2, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x53b9);
        EXPECT(gbc.pc(), 0x78d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 033D
        gbc.setState(0x8d5e, 0x3e17, 0x6c0, 0x3c3, 0x244f, 0x186a, 0x0, 0x1);
        gbc.writeMem(0x8d5e, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x3e17);
        EXPECT(gbc.pc(), 0x8d60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d5e), 0xcb);
        EXPECT(gbc.readMem(0x8d5f), 0x51);
        // CB 51 033E
        gbc.setState(0xd039, 0x2a30, 0x1800, 0x768f, 0x68f3, 0xbacf, 0x1, 0x0);
        gbc.writeMem(0xd039, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x2a30);
        EXPECT(gbc.pc(), 0xd03b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd039), 0xcb);
        EXPECT(gbc.readMem(0xd03a), 0x51);
        // CB 51 033F
        gbc.setState(0x1893, 0xb861, 0xfea0, 0xefe4, 0xc072, 0xb765, 0x1, 0x0);
        gbc.writeMem(0x1893, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xb861);
        EXPECT(gbc.pc(), 0x1895);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0340
        gbc.setState(0xc29d, 0x1dce, 0x42d0, 0xe7e2, 0x1ce3, 0x48bf, 0x1, 0x0);
        gbc.writeMem(0xc29d, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x1dce);
        EXPECT(gbc.pc(), 0xc29f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc29d), 0xcb);
        EXPECT(gbc.readMem(0xc29e), 0x51);
        // CB 51 0341
        gbc.setState(0x335e, 0x2bde, 0x20, 0x5c09, 0x3fbf, 0x223f, 0x1, 0x0);
        gbc.writeMem(0x335e, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x2bde);
        EXPECT(gbc.pc(), 0x3360);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0342
        gbc.setState(0x9d7f, 0xf614, 0xde60, 0xca8a, 0x63d7, 0x6c8c, 0x1, 0x1);
        gbc.writeMem(0x9d7f, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xf614);
        EXPECT(gbc.pc(), 0x9d81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d7f), 0xcb);
        EXPECT(gbc.readMem(0x9d80), 0x51);
        // CB 51 0343
        gbc.setState(0x20d8, 0x8b54, 0x1a80, 0x3a8, 0xec07, 0x968d, 0x0, 0x0);
        gbc.writeMem(0x20d8, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x8b54);
        EXPECT(gbc.pc(), 0x20da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0344
        gbc.setState(0x505e, 0x912d, 0x3280, 0x19d5, 0x722b, 0xa9bc, 0x0, 0x1);
        gbc.writeMem(0x505e, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x912d);
        EXPECT(gbc.pc(), 0x5060);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0345
        gbc.setState(0x4a06, 0xe229, 0x2a70, 0xbd5d, 0xf58b, 0x63dd, 0x0, 0x0);
        gbc.writeMem(0x4a06, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xe229);
        EXPECT(gbc.pc(), 0x4a08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0346
        gbc.setState(0x1393, 0xe834, 0xe990, 0xf7ef, 0x9c88, 0x961e, 0x1, 0x0);
        gbc.writeMem(0x1393, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xe834);
        EXPECT(gbc.pc(), 0x1395);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0347
        gbc.setState(0x3f8b, 0x7da3, 0xa3f0, 0x6581, 0xb0a6, 0x85d7, 0x0, 0x0);
        gbc.writeMem(0x3f8b, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x7da3);
        EXPECT(gbc.pc(), 0x3f8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0348
        gbc.setState(0x998b, 0x5568, 0x8b30, 0xe32, 0xd965, 0xd41c, 0x1, 0x0);
        gbc.writeMem(0x998b, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x5568);
        EXPECT(gbc.pc(), 0x998d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x998b), 0xcb);
        EXPECT(gbc.readMem(0x998c), 0x51);
        // CB 51 0349
        gbc.setState(0x5cab, 0x821e, 0x2e50, 0xa8f9, 0x9efc, 0x24ba, 0x0, 0x1);
        gbc.writeMem(0x5cab, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x821e);
        EXPECT(gbc.pc(), 0x5cad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 034A
        gbc.setState(0x6eba, 0xd036, 0x7fb0, 0x8af5, 0xdb39, 0x9ac9, 0x1, 0x0);
        gbc.writeMem(0x6eba, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xd036);
        EXPECT(gbc.pc(), 0x6ebc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 034B
        gbc.setState(0x346d, 0x9b56, 0xdb20, 0x2ca7, 0xe7d7, 0xc39d, 0x0, 0x0);
        gbc.writeMem(0x346d, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x9b56);
        EXPECT(gbc.pc(), 0x346f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 034C
        gbc.setState(0xa931, 0xfd31, 0x50d0, 0x15a8, 0x8fa7, 0x91b, 0x1, 0x1);
        gbc.writeMem(0xa931, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xfd31);
        EXPECT(gbc.pc(), 0xa933);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa931), 0xcb);
        EXPECT(gbc.readMem(0xa932), 0x51);
        // CB 51 034D
        gbc.setState(0x5c38, 0x8ec0, 0x16f0, 0x2ba3, 0x194f, 0x43a6, 0x1, 0x1);
        gbc.writeMem(0x5c38, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x8ec0);
        EXPECT(gbc.pc(), 0x5c3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 034E
        gbc.setState(0xacb4, 0x8daf, 0x1d20, 0xb518, 0x3161, 0x943e, 0x0, 0x0);
        gbc.writeMem(0xacb4, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x8daf);
        EXPECT(gbc.pc(), 0xacb6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xacb4), 0xcb);
        EXPECT(gbc.readMem(0xacb5), 0x51);
        // CB 51 034F
        gbc.setState(0x5b3f, 0x8c52, 0x4190, 0xe638, 0x43a6, 0x8fb5, 0x1, 0x1);
        gbc.writeMem(0x5b3f, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x8c52);
        EXPECT(gbc.pc(), 0x5b41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0350
        gbc.setState(0x9d35, 0x6636, 0xcb0, 0x4b9d, 0x2967, 0xf9b7, 0x0, 0x0);
        gbc.writeMem(0x9d35, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x6636);
        EXPECT(gbc.pc(), 0x9d37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d35), 0xcb);
        EXPECT(gbc.readMem(0x9d36), 0x51);
        // CB 51 0352
        gbc.setState(0x178d, 0x541b, 0xa050, 0x76c2, 0x5e5b, 0xd9d0, 0x0, 0x1);
        gbc.writeMem(0x178d, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x541b);
        EXPECT(gbc.pc(), 0x178f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0353
        gbc.setState(0x204f, 0x52b1, 0x5140, 0x8d84, 0xf7e6, 0x7b35, 0x0, 0x0);
        gbc.writeMem(0x204f, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x52b1);
        EXPECT(gbc.pc(), 0x2051);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0354
        gbc.setState(0x451, 0xe1ff, 0xf200, 0x3e29, 0x21e9, 0xe4da, 0x1, 0x1);
        gbc.writeMem(0x451, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xe1ff);
        EXPECT(gbc.pc(), 0x453);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0355
        gbc.setState(0xa3ce, 0x79be, 0x7620, 0xe076, 0x582a, 0xfe3, 0x0, 0x0);
        gbc.writeMem(0xa3ce, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x79be);
        EXPECT(gbc.pc(), 0xa3d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3ce), 0xcb);
        EXPECT(gbc.readMem(0xa3cf), 0x51);
        // CB 51 0356
        gbc.setState(0x9815, 0x8165, 0x81e0, 0x5f5e, 0x957e, 0x5f67, 0x0, 0x0);
        gbc.writeMem(0x9815, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x8165);
        EXPECT(gbc.pc(), 0x9817);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9815), 0xcb);
        EXPECT(gbc.readMem(0x9816), 0x51);
        // CB 51 0358
        gbc.setState(0xb67f, 0x367, 0x4b0, 0x3e93, 0xd95c, 0x7fd4, 0x1, 0x0);
        gbc.writeMem(0xb67f, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x367);
        EXPECT(gbc.pc(), 0xb681);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb67f), 0xcb);
        EXPECT(gbc.readMem(0xb680), 0x51);
        // CB 51 0359
        gbc.setState(0xeccb, 0xa73, 0xfa10, 0x5eba, 0xd933, 0xf0f3, 0x1, 0x0);
        gbc.writeMem(0xeccb, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xa73);
        EXPECT(gbc.pc(), 0xeccd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeccb), 0xcb);
        EXPECT(gbc.readMem(0xeccc), 0x51);
        // CB 51 035A
        gbc.setState(0x4a3e, 0xa524, 0x51a0, 0x33d1, 0xfb1f, 0x2b88, 0x0, 0x0);
        gbc.writeMem(0x4a3e, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xa524);
        EXPECT(gbc.pc(), 0x4a40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 035B
        gbc.setState(0x4390, 0x754b, 0x5860, 0x64e2, 0xc7cd, 0x79ab, 0x0, 0x0);
        gbc.writeMem(0x4390, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x754b);
        EXPECT(gbc.pc(), 0x4392);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 035C
        gbc.setState(0x2fed, 0xb055, 0x9330, 0x58f4, 0xcec4, 0x87b, 0x0, 0x1);
        gbc.writeMem(0x2fed, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xb055);
        EXPECT(gbc.pc(), 0x2fef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 035D
        gbc.setState(0x1a98, 0xa661, 0x1d00, 0xf8ec, 0xe6f2, 0xb9d8, 0x1, 0x0);
        gbc.writeMem(0x1a98, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xa661);
        EXPECT(gbc.pc(), 0x1a9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 035F
        gbc.setState(0xecc2, 0x9c1d, 0xabd0, 0x48c6, 0x50bb, 0x3b20, 0x1, 0x1);
        gbc.writeMem(0xecc2, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x9c1d);
        EXPECT(gbc.pc(), 0xecc4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecc2), 0xcb);
        EXPECT(gbc.readMem(0xecc3), 0x51);
        // CB 51 0360
        gbc.setState(0x5673, 0x9cc0, 0x9dd0, 0x3923, 0x92f7, 0xe57f, 0x0, 0x1);
        gbc.writeMem(0x5673, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x9cc0);
        EXPECT(gbc.pc(), 0x5675);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0361
        gbc.setState(0xd582, 0xd9f2, 0xaf90, 0x3464, 0xc631, 0xbc10, 0x0, 0x0);
        gbc.writeMem(0xd582, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xd9f2);
        EXPECT(gbc.pc(), 0xd584);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd582), 0xcb);
        EXPECT(gbc.readMem(0xd583), 0x51);
        // CB 51 0362
        gbc.setState(0x26fa, 0x20e, 0x5830, 0xf436, 0x8cd7, 0xa953, 0x0, 0x0);
        gbc.writeMem(0x26fa, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x20e);
        EXPECT(gbc.pc(), 0x26fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0363
        gbc.setState(0xc2c4, 0x708f, 0x9760, 0x6a88, 0x7a36, 0x4cc7, 0x0, 0x0);
        gbc.writeMem(0xc2c4, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x708f);
        EXPECT(gbc.pc(), 0xc2c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2c4), 0xcb);
        EXPECT(gbc.readMem(0xc2c5), 0x51);
        // CB 51 0364
        gbc.setState(0x89a, 0x39f5, 0xd080, 0x6d7b, 0xbd06, 0x5510, 0x0, 0x0);
        gbc.writeMem(0x89a, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x39f5);
        EXPECT(gbc.pc(), 0x89c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0365
        gbc.setState(0x9a58, 0x7ace, 0x49e0, 0x60ce, 0x198c, 0x1fe, 0x1, 0x0);
        gbc.writeMem(0x9a58, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x7ace);
        EXPECT(gbc.pc(), 0x9a5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a58), 0xcb);
        EXPECT(gbc.readMem(0x9a59), 0x51);
        // CB 51 0366
        gbc.setState(0xe939, 0xaf2c, 0xbc60, 0x3e75, 0x4261, 0x738e, 0x1, 0x0);
        gbc.writeMem(0xe939, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xaf2c);
        EXPECT(gbc.pc(), 0xe93b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe939), 0xcb);
        EXPECT(gbc.readMem(0xe93a), 0x51);
        // CB 51 0367
        gbc.setState(0xebd3, 0x9131, 0x71e0, 0x498a, 0x2e54, 0xabe9, 0x1, 0x0);
        gbc.writeMem(0xebd3, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x9131);
        EXPECT(gbc.pc(), 0xebd5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebd3), 0xcb);
        EXPECT(gbc.readMem(0xebd4), 0x51);
        // CB 51 0368
        gbc.setState(0x8039, 0x7ba9, 0x65b0, 0x898d, 0xcc76, 0xde12, 0x0, 0x1);
        gbc.writeMem(0x8039, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x7ba9);
        EXPECT(gbc.pc(), 0x803b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8039), 0xcb);
        EXPECT(gbc.readMem(0x803a), 0x51);
        // CB 51 0369
        gbc.setState(0xe696, 0x3f11, 0x3c70, 0xce97, 0x52d2, 0x1921, 0x1, 0x0);
        gbc.writeMem(0xe696, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x3f11);
        EXPECT(gbc.pc(), 0xe698);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe696), 0xcb);
        EXPECT(gbc.readMem(0xe697), 0x51);
        // CB 51 036B
        gbc.setState(0xe23c, 0xc67a, 0x9a30, 0x5185, 0xa550, 0xf7fd, 0x0, 0x0);
        gbc.writeMem(0xe23c, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xc67a);
        EXPECT(gbc.pc(), 0xe23e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe23c), 0xcb);
        EXPECT(gbc.readMem(0xe23d), 0x51);
        // CB 51 036C
        gbc.setState(0x6bb4, 0xe130, 0x5b80, 0x8160, 0xd110, 0xf3e3, 0x0, 0x1);
        gbc.writeMem(0x6bb4, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xe130);
        EXPECT(gbc.pc(), 0x6bb6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 036D
        gbc.setState(0xd2fc, 0xcf4e, 0x47b0, 0xbfdd, 0xdbb7, 0x1d37, 0x0, 0x0);
        gbc.writeMem(0xd2fc, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xcf4e);
        EXPECT(gbc.pc(), 0xd2fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2fc), 0xcb);
        EXPECT(gbc.readMem(0xd2fd), 0x51);
        // CB 51 036E
        gbc.setState(0x60d2, 0x35f0, 0xbb20, 0x8462, 0x5a26, 0x67c0, 0x1, 0x0);
        gbc.writeMem(0x60d2, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x35f0);
        EXPECT(gbc.pc(), 0x60d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 036F
        gbc.setState(0xec1, 0x5ad8, 0x35a0, 0x7e59, 0xbc3e, 0x7c4f, 0x0, 0x1);
        gbc.writeMem(0xec1, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x5ad8);
        EXPECT(gbc.pc(), 0xec3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0370
        gbc.setState(0x5a8, 0x9005, 0xf4e0, 0x1022, 0x2eea, 0x2f19, 0x1, 0x0);
        gbc.writeMem(0x5a8, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x9005);
        EXPECT(gbc.pc(), 0x5aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0371
        gbc.setState(0xa78e, 0x5486, 0xd870, 0xe5a2, 0x9092, 0xf648, 0x0, 0x1);
        gbc.writeMem(0xa78e, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x5486);
        EXPECT(gbc.pc(), 0xa790);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa78e), 0xcb);
        EXPECT(gbc.readMem(0xa78f), 0x51);
        // CB 51 0372
        gbc.setState(0xaaa2, 0xdbd6, 0xd920, 0xd27d, 0x5a07, 0xbd63, 0x1, 0x1);
        gbc.writeMem(0xaaa2, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xdbd6);
        EXPECT(gbc.pc(), 0xaaa4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaaa2), 0xcb);
        EXPECT(gbc.readMem(0xaaa3), 0x51);
        // CB 51 0373
        gbc.setState(0xcee, 0xbc33, 0xd7b0, 0xebfd, 0x2e1f, 0x7074, 0x0, 0x0);
        gbc.writeMem(0xcee, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xbc33);
        EXPECT(gbc.pc(), 0xcf0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0374
        gbc.setState(0xee97, 0x84c, 0x6e50, 0xaf1e, 0x365e, 0x3363, 0x0, 0x1);
        gbc.writeMem(0xee97, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x84c);
        EXPECT(gbc.pc(), 0xee99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee97), 0xcb);
        EXPECT(gbc.readMem(0xee98), 0x51);
        // CB 51 0375
        gbc.setState(0x6539, 0x2f8a, 0x80, 0xd9b6, 0x9cda, 0xac94, 0x0, 0x1);
        gbc.writeMem(0x6539, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x2f8a);
        EXPECT(gbc.pc(), 0x653b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0376
        gbc.setState(0x806e, 0xd7f, 0x2c70, 0x6190, 0xa4c2, 0xcb40, 0x1, 0x1);
        gbc.writeMem(0x806e, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xd7f);
        EXPECT(gbc.pc(), 0x8070);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x806e), 0xcb);
        EXPECT(gbc.readMem(0x806f), 0x51);
        // CB 51 0377
        gbc.setState(0xd971, 0xb91a, 0x1a0, 0xfd80, 0xf8b4, 0xb87b, 0x1, 0x1);
        gbc.writeMem(0xd971, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xb91a);
        EXPECT(gbc.pc(), 0xd973);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd971), 0xcb);
        EXPECT(gbc.readMem(0xd972), 0x51);
        // CB 51 0378
        gbc.setState(0xb7bb, 0xc16a, 0x3030, 0x33a4, 0x8744, 0xad6e, 0x1, 0x0);
        gbc.writeMem(0xb7bb, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xc16a);
        EXPECT(gbc.pc(), 0xb7bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7bb), 0xcb);
        EXPECT(gbc.readMem(0xb7bc), 0x51);
        // CB 51 0379
        gbc.setState(0xb6b0, 0x3483, 0x77c0, 0xd3a, 0x1edc, 0xe49f, 0x0, 0x1);
        gbc.writeMem(0xb6b0, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x3483);
        EXPECT(gbc.pc(), 0xb6b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6b0), 0xcb);
        EXPECT(gbc.readMem(0xb6b1), 0x51);
        // CB 51 037A
        gbc.setState(0xe98, 0xd529, 0x1fa0, 0xc104, 0x6bdb, 0xe651, 0x0, 0x0);
        gbc.writeMem(0xe98, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xd529);
        EXPECT(gbc.pc(), 0xe9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 037B
        gbc.setState(0xedbf, 0x31c6, 0xf2f0, 0x69cd, 0xe0d0, 0xaa7d, 0x0, 0x1);
        gbc.writeMem(0xedbf, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x31c6);
        EXPECT(gbc.pc(), 0xedc1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedbf), 0xcb);
        EXPECT(gbc.readMem(0xedc0), 0x51);
        // CB 51 037C
        gbc.setState(0xb6f1, 0x8bcd, 0xea0, 0x9a69, 0xd824, 0xee7c, 0x1, 0x1);
        gbc.writeMem(0xb6f1, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x8bcd);
        EXPECT(gbc.pc(), 0xb6f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6f1), 0xcb);
        EXPECT(gbc.readMem(0xb6f2), 0x51);
        // CB 51 037D
        gbc.setState(0x8a4, 0x5833, 0xf500, 0x8cbb, 0xd253, 0xe790, 0x1, 0x0);
        gbc.writeMem(0x8a4, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x5833);
        EXPECT(gbc.pc(), 0x8a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 037E
        gbc.setState(0x27e9, 0xcd30, 0x3250, 0x7342, 0xcd3f, 0x986b, 0x1, 0x0);
        gbc.writeMem(0x27e9, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xcd30);
        EXPECT(gbc.pc(), 0x27eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 037F
        gbc.setState(0x2b6b, 0x1db8, 0x1cf0, 0x5663, 0xa591, 0x1d6f, 0x1, 0x1);
        gbc.writeMem(0x2b6b, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x1db8);
        EXPECT(gbc.pc(), 0x2b6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0380
        gbc.setState(0x592a, 0x78a2, 0x7ea0, 0xfa8c, 0x23ff, 0xf8a9, 0x1, 0x1);
        gbc.writeMem(0x592a, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x78a2);
        EXPECT(gbc.pc(), 0x592c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0381
        gbc.setState(0x5f86, 0x8637, 0x63a0, 0x704, 0x5a7f, 0xbc58, 0x0, 0x1);
        gbc.writeMem(0x5f86, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x8637);
        EXPECT(gbc.pc(), 0x5f88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0382
        gbc.setState(0x8221, 0x7f01, 0x4070, 0xa969, 0x1ec9, 0x1ac, 0x0, 0x0);
        gbc.writeMem(0x8221, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x7f01);
        EXPECT(gbc.pc(), 0x8223);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8221), 0xcb);
        EXPECT(gbc.readMem(0x8222), 0x51);
        // CB 51 0383
        gbc.setState(0x35be, 0x39d2, 0x8100, 0x72ef, 0x6357, 0x79d5, 0x1, 0x0);
        gbc.writeMem(0x35be, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x39d2);
        EXPECT(gbc.pc(), 0x35c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0384
        gbc.setState(0x8902, 0x9551, 0xa480, 0x801d, 0xb1ad, 0xd33, 0x0, 0x1);
        gbc.writeMem(0x8902, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x9551);
        EXPECT(gbc.pc(), 0x8904);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8902), 0xcb);
        EXPECT(gbc.readMem(0x8903), 0x51);
        // CB 51 0385
        gbc.setState(0x4841, 0xb777, 0xa160, 0x242d, 0xad45, 0x1741, 0x0, 0x0);
        gbc.writeMem(0x4841, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xb777);
        EXPECT(gbc.pc(), 0x4843);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0386
        gbc.setState(0xc4ae, 0xc57b, 0x4260, 0x8562, 0x8d96, 0x71dd, 0x1, 0x0);
        gbc.writeMem(0xc4ae, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xc57b);
        EXPECT(gbc.pc(), 0xc4b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4ae), 0xcb);
        EXPECT(gbc.readMem(0xc4af), 0x51);
        // CB 51 0387
        gbc.setState(0xba25, 0xe163, 0xa000, 0xf58d, 0x4d64, 0x97f, 0x1, 0x0);
        gbc.writeMem(0xba25, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xe163);
        EXPECT(gbc.pc(), 0xba27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba25), 0xcb);
        EXPECT(gbc.readMem(0xba26), 0x51);
        // CB 51 0388
        gbc.setState(0xd77e, 0x5d98, 0xd0, 0xad98, 0x48c3, 0x5685, 0x0, 0x1);
        gbc.writeMem(0xd77e, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x5d98);
        EXPECT(gbc.pc(), 0xd780);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd77e), 0xcb);
        EXPECT(gbc.readMem(0xd77f), 0x51);
        // CB 51 0389
        gbc.setState(0xb375, 0x24fe, 0xfea0, 0x2e22, 0xf5ba, 0xef40, 0x0, 0x1);
        gbc.writeMem(0xb375, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x24fe);
        EXPECT(gbc.pc(), 0xb377);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb375), 0xcb);
        EXPECT(gbc.readMem(0xb376), 0x51);
        // CB 51 038A
        gbc.setState(0x82e7, 0xd166, 0x7890, 0xd63b, 0x9333, 0xcb64, 0x0, 0x1);
        gbc.writeMem(0x82e7, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xd166);
        EXPECT(gbc.pc(), 0x82e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82e7), 0xcb);
        EXPECT(gbc.readMem(0x82e8), 0x51);
        // CB 51 038B
        gbc.setState(0x53dc, 0x8820, 0x14c0, 0x1936, 0xbf22, 0x8cc9, 0x1, 0x1);
        gbc.writeMem(0x53dc, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x8820);
        EXPECT(gbc.pc(), 0x53de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 038C
        gbc.setState(0x903c, 0xfce6, 0x1ab0, 0x7975, 0x622b, 0x5817, 0x1, 0x0);
        gbc.writeMem(0x903c, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xfce6);
        EXPECT(gbc.pc(), 0x903e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x903c), 0xcb);
        EXPECT(gbc.readMem(0x903d), 0x51);
        // CB 51 038D
        gbc.setState(0x31c6, 0x29fb, 0x42f0, 0x2240, 0x656a, 0xc660, 0x0, 0x1);
        gbc.writeMem(0x31c6, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x29fb);
        EXPECT(gbc.pc(), 0x31c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 038E
        gbc.setState(0x9d90, 0xafb0, 0xb3b0, 0x17b2, 0x1bfb, 0x6d19, 0x0, 0x0);
        gbc.writeMem(0x9d90, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xafb0);
        EXPECT(gbc.pc(), 0x9d92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d90), 0xcb);
        EXPECT(gbc.readMem(0x9d91), 0x51);
        // CB 51 038F
        gbc.setState(0x7888, 0x8991, 0x7340, 0xc2f0, 0x965c, 0xbcf5, 0x1, 0x0);
        gbc.writeMem(0x7888, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x8991);
        EXPECT(gbc.pc(), 0x788a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0390
        gbc.setState(0x32cb, 0x2f46, 0x4c70, 0x662f, 0xa328, 0x775d, 0x0, 0x0);
        gbc.writeMem(0x32cb, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x2f46);
        EXPECT(gbc.pc(), 0x32cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0391
        gbc.setState(0x39bd, 0xbb20, 0xc00, 0x5fb9, 0x157c, 0x2979, 0x0, 0x0);
        gbc.writeMem(0x39bd, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xbb20);
        EXPECT(gbc.pc(), 0x39bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0392
        gbc.setState(0xd801, 0xd373, 0x4790, 0x719b, 0x689e, 0x9cd5, 0x0, 0x1);
        gbc.writeMem(0xd801, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xd373);
        EXPECT(gbc.pc(), 0xd803);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd801), 0xcb);
        EXPECT(gbc.readMem(0xd802), 0x51);
        // CB 51 0393
        gbc.setState(0x2b2e, 0x7e1, 0xe190, 0x91be, 0x4534, 0x851d, 0x0, 0x0);
        gbc.writeMem(0x2b2e, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x7e1);
        EXPECT(gbc.pc(), 0x2b30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0395
        gbc.setState(0x9c61, 0x2925, 0xcd70, 0xf29d, 0x4359, 0x6b39, 0x0, 0x0);
        gbc.writeMem(0x9c61, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x2925);
        EXPECT(gbc.pc(), 0x9c63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c61), 0xcb);
        EXPECT(gbc.readMem(0x9c62), 0x51);
        // CB 51 0396
        gbc.setState(0x2534, 0x2261, 0xe260, 0xeb13, 0xcb48, 0x5e9f, 0x1, 0x1);
        gbc.writeMem(0x2534, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x2261);
        EXPECT(gbc.pc(), 0x2536);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 0397
        gbc.setState(0x31c, 0xbd8b, 0x4f90, 0xaef7, 0xf9d1, 0x3db4, 0x0, 0x1);
        gbc.writeMem(0x31c, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xbd8b);
        EXPECT(gbc.pc(), 0x31e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0398
        gbc.setState(0x7b71, 0x513a, 0x1150, 0x53b2, 0xaf11, 0x8a70, 0x0, 0x0);
        gbc.writeMem(0x7b71, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x513a);
        EXPECT(gbc.pc(), 0x7b73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 0399
        gbc.setState(0x60c1, 0x5bb5, 0x9940, 0xcf40, 0x3401, 0x3dda, 0x1, 0x1);
        gbc.writeMem(0x60c1, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x5bb5);
        EXPECT(gbc.pc(), 0x60c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 039A
        gbc.setState(0xc052, 0x4fea, 0x5040, 0x590c, 0xde45, 0xb75e, 0x0, 0x1);
        gbc.writeMem(0xc052, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x4fea);
        EXPECT(gbc.pc(), 0xc054);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc052), 0xcb);
        EXPECT(gbc.readMem(0xc053), 0x51);
        // CB 51 039B
        gbc.setState(0x1ab0, 0x92e2, 0xf650, 0xe1a1, 0x9d53, 0xdb8d, 0x1, 0x1);
        gbc.writeMem(0x1ab0, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x92e2);
        EXPECT(gbc.pc(), 0x1ab2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 039C
        gbc.setState(0x2084, 0xe9df, 0x8080, 0x9244, 0x8ed, 0x1a6b, 0x0, 0x1);
        gbc.writeMem(0x2084, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xe9df);
        EXPECT(gbc.pc(), 0x2086);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 039D
        gbc.setState(0x48c, 0x14a1, 0xb70, 0xa5b1, 0xdf6, 0x4c0, 0x0, 0x1);
        gbc.writeMem(0x48c, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x14a1);
        EXPECT(gbc.pc(), 0x48e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 039E
        gbc.setState(0x7f64, 0x39e5, 0x7910, 0x6e84, 0xaf8, 0x3d0, 0x0, 0x0);
        gbc.writeMem(0x7f64, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x39e5);
        EXPECT(gbc.pc(), 0x7f66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 03A0
        gbc.setState(0x7601, 0xe225, 0xfff0, 0x37bd, 0x3c78, 0x9846, 0x1, 0x0);
        gbc.writeMem(0x7601, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xe225);
        EXPECT(gbc.pc(), 0x7603);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 03A1
        gbc.setState(0x8dc7, 0x82c4, 0x8de0, 0x86b8, 0x7895, 0xf7d0, 0x0, 0x1);
        gbc.writeMem(0x8dc7, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x82c4);
        EXPECT(gbc.pc(), 0x8dc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8dc7), 0xcb);
        EXPECT(gbc.readMem(0x8dc8), 0x51);
        // CB 51 03A2
        gbc.setState(0x7683, 0x2aa5, 0xf6c0, 0x732a, 0x74f4, 0xe155, 0x1, 0x0);
        gbc.writeMem(0x7683, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x2aa5);
        EXPECT(gbc.pc(), 0x7685);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 03A3
        gbc.setState(0x9906, 0xe242, 0xf9d0, 0x59d9, 0x5bc9, 0x1ab5, 0x0, 0x0);
        gbc.writeMem(0x9906, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xe242);
        EXPECT(gbc.pc(), 0x9908);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9906), 0xcb);
        EXPECT(gbc.readMem(0x9907), 0x51);
        // CB 51 03A4
        gbc.setState(0x8027, 0x2d5b, 0x82a0, 0x9481, 0xd3d6, 0xaab8, 0x1, 0x0);
        gbc.writeMem(0x8027, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x2d5b);
        EXPECT(gbc.pc(), 0x8029);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8027), 0xcb);
        EXPECT(gbc.readMem(0x8028), 0x51);
        // CB 51 03A5
        gbc.setState(0x7297, 0xda1, 0xad30, 0x50ed, 0x6f51, 0x4c22, 0x1, 0x0);
        gbc.writeMem(0x7297, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xda1);
        EXPECT(gbc.pc(), 0x7299);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 03A7
        gbc.setState(0xc4c5, 0x7b0b, 0x4be0, 0xa6fa, 0x655e, 0x3458, 0x1, 0x0);
        gbc.writeMem(0xc4c5, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x7b0b);
        EXPECT(gbc.pc(), 0xc4c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4c5), 0xcb);
        EXPECT(gbc.readMem(0xc4c6), 0x51);
        // CB 51 03A8
        gbc.setState(0xdb4d, 0x4b88, 0x5800, 0x1a6d, 0xb51b, 0x67c0, 0x1, 0x0);
        gbc.writeMem(0xdb4d, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x4b88);
        EXPECT(gbc.pc(), 0xdb4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb4d), 0xcb);
        EXPECT(gbc.readMem(0xdb4e), 0x51);
        // CB 51 03A9
        gbc.setState(0x3b92, 0xffa0, 0x6f70, 0x8a3f, 0x6c39, 0x1caf, 0x0, 0x1);
        gbc.writeMem(0x3b92, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xffa0);
        EXPECT(gbc.pc(), 0x3b94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 03AA
        gbc.setState(0x3e34, 0x4679, 0xd920, 0x45bb, 0x58de, 0xc382, 0x0, 0x0);
        gbc.writeMem(0x3e34, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x4679);
        EXPECT(gbc.pc(), 0x3e36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 03AB
        gbc.setState(0x6d66, 0x4bea, 0x9290, 0xaacd, 0x12db, 0xe88c, 0x1, 0x0);
        gbc.writeMem(0x6d66, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x4bea);
        EXPECT(gbc.pc(), 0x6d68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 03AD
        gbc.setState(0x1138, 0xda57, 0xc200, 0x3134, 0x87ec, 0xa0d2, 0x0, 0x0);
        gbc.writeMem(0x1138, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xda57);
        EXPECT(gbc.pc(), 0x113a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 03AE
        gbc.setState(0xd16a, 0xebbb, 0x5220, 0xbc6b, 0x1305, 0xb972, 0x1, 0x0);
        gbc.writeMem(0xd16a, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xebbb);
        EXPECT(gbc.pc(), 0xd16c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd16a), 0xcb);
        EXPECT(gbc.readMem(0xd16b), 0x51);
        // CB 51 03AF
        gbc.setState(0x24bf, 0x23bb, 0xd2d0, 0xdcc6, 0xeea1, 0xfb1c, 0x0, 0x0);
        gbc.writeMem(0x24bf, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x23bb);
        EXPECT(gbc.pc(), 0x24c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 03B0
        gbc.setState(0x22f2, 0x962d, 0xcc50, 0xf435, 0x9ceb, 0xc145, 0x1, 0x1);
        gbc.writeMem(0x22f2, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x962d);
        EXPECT(gbc.pc(), 0x22f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 03B1
        gbc.setState(0x59f5, 0x80f7, 0x1510, 0x55bf, 0x6a9d, 0xc8ed, 0x0, 0x1);
        gbc.writeMem(0x59f5, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x80f7);
        EXPECT(gbc.pc(), 0x59f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 03B2
        gbc.setState(0x59cf, 0xc8da, 0xb8f0, 0x9a3e, 0xdc73, 0x1999, 0x1, 0x0);
        gbc.writeMem(0x59cf, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xc8da);
        EXPECT(gbc.pc(), 0x59d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 03B3
        gbc.setState(0x8fe2, 0xb492, 0xb2c0, 0xa081, 0x3605, 0x39fd, 0x0, 0x1);
        gbc.writeMem(0x8fe2, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xb492);
        EXPECT(gbc.pc(), 0x8fe4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fe2), 0xcb);
        EXPECT(gbc.readMem(0x8fe3), 0x51);
        // CB 51 03B4
        gbc.setState(0x2a43, 0xe6a5, 0x3370, 0x972f, 0x2afa, 0x511, 0x1, 0x0);
        gbc.writeMem(0x2a43, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xe6a5);
        EXPECT(gbc.pc(), 0x2a45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 03B5
        gbc.setState(0xdc39, 0x2119, 0x67d0, 0xd238, 0x3b16, 0xfcab, 0x0, 0x1);
        gbc.writeMem(0xdc39, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x2119);
        EXPECT(gbc.pc(), 0xdc3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc39), 0xcb);
        EXPECT(gbc.readMem(0xdc3a), 0x51);
        // CB 51 03B6
        gbc.setState(0x8a53, 0xae40, 0xbd40, 0xe65a, 0xcf3b, 0x80e3, 0x0, 0x0);
        gbc.writeMem(0x8a53, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xae40);
        EXPECT(gbc.pc(), 0x8a55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a53), 0xcb);
        EXPECT(gbc.readMem(0x8a54), 0x51);
        // CB 51 03B7
        gbc.setState(0x7a4e, 0x5203, 0xe90, 0xfba1, 0x5e5f, 0xf215, 0x1, 0x0);
        gbc.writeMem(0x7a4e, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x5203);
        EXPECT(gbc.pc(), 0x7a50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 03B8
        gbc.setState(0x1fd3, 0x7d3f, 0x990, 0xc2a8, 0xa27c, 0xb725, 0x0, 0x1);
        gbc.writeMem(0x1fd3, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x7d3f);
        EXPECT(gbc.pc(), 0x1fd5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 03B9
        gbc.setState(0xa057, 0x1e68, 0xfae0, 0x607e, 0x1da9, 0xb7c, 0x0, 0x1);
        gbc.writeMem(0xa057, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x1e68);
        EXPECT(gbc.pc(), 0xa059);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa057), 0xcb);
        EXPECT(gbc.readMem(0xa058), 0x51);
        // CB 51 03BA
        gbc.setState(0x98cc, 0x953, 0x5620, 0x8563, 0x5752, 0x9033, 0x1, 0x0);
        gbc.writeMem(0x98cc, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x953);
        EXPECT(gbc.pc(), 0x98ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98cc), 0xcb);
        EXPECT(gbc.readMem(0x98cd), 0x51);
        // CB 51 03BB
        gbc.setState(0x9048, 0x87e5, 0x4740, 0xe4d4, 0xe32f, 0x7960, 0x1, 0x1);
        gbc.writeMem(0x9048, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x87e5);
        EXPECT(gbc.pc(), 0x904a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9048), 0xcb);
        EXPECT(gbc.readMem(0x9049), 0x51);
        // CB 51 03BC
        gbc.setState(0xd908, 0x6bf1, 0xcba0, 0x4397, 0x3fc3, 0xa9f4, 0x1, 0x1);
        gbc.writeMem(0xd908, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x6bf1);
        EXPECT(gbc.pc(), 0xd90a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd908), 0xcb);
        EXPECT(gbc.readMem(0xd909), 0x51);
        // CB 51 03BD
        gbc.setState(0x8b79, 0xe125, 0x6a30, 0xe7f8, 0xa217, 0xc796, 0x0, 0x1);
        gbc.writeMem(0x8b79, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xe125);
        EXPECT(gbc.pc(), 0x8b7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b79), 0xcb);
        EXPECT(gbc.readMem(0x8b7a), 0x51);
        // CB 51 03BE
        gbc.setState(0xbf08, 0xc0d1, 0x6050, 0xd5fb, 0x6449, 0x6f58, 0x1, 0x0);
        gbc.writeMem(0xbf08, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xc0d1);
        EXPECT(gbc.pc(), 0xbf0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf08), 0xcb);
        EXPECT(gbc.readMem(0xbf09), 0x51);
        // CB 51 03BF
        gbc.setState(0x3e29, 0xbd18, 0x6fc0, 0xbded, 0x1c6b, 0x5a4b, 0x0, 0x1);
        gbc.writeMem(0x3e29, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xbd18);
        EXPECT(gbc.pc(), 0x3e2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 03C0
        gbc.setState(0x5e2f, 0xb1db, 0x3670, 0x24bf, 0x2109, 0x1e4b, 0x1, 0x1);
        gbc.writeMem(0x5e2f, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xb1db);
        EXPECT(gbc.pc(), 0x5e31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 03C1
        gbc.setState(0x1f05, 0x962b, 0x62b0, 0x995e, 0xdd36, 0x49c9, 0x0, 0x1);
        gbc.writeMem(0x1f05, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x962b);
        EXPECT(gbc.pc(), 0x1f07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 03C2
        gbc.setState(0x36cc, 0x29f4, 0x6600, 0x187, 0x3eba, 0xfdfe, 0x0, 0x1);
        gbc.writeMem(0x36cc, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x29f4);
        EXPECT(gbc.pc(), 0x36ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 03C3
        gbc.setState(0xb660, 0x98a6, 0x4200, 0xc702, 0x1f6f, 0xf3ea, 0x1, 0x0);
        gbc.writeMem(0xb660, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x98a6);
        EXPECT(gbc.pc(), 0xb662);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb660), 0xcb);
        EXPECT(gbc.readMem(0xb661), 0x51);
        // CB 51 03C4
        gbc.setState(0xe2d7, 0x74c1, 0x77f0, 0x4369, 0x5aff, 0x8801, 0x1, 0x0);
        gbc.writeMem(0xe2d7, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x74c1);
        EXPECT(gbc.pc(), 0xe2d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2d7), 0xcb);
        EXPECT(gbc.readMem(0xe2d8), 0x51);
        // CB 51 03C5
        gbc.setState(0x978a, 0xe37d, 0x9420, 0x95f4, 0x1369, 0xb9f8, 0x0, 0x0);
        gbc.writeMem(0x978a, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xe37d);
        EXPECT(gbc.pc(), 0x978c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x978a), 0xcb);
        EXPECT(gbc.readMem(0x978b), 0x51);
        // CB 51 03C6
        gbc.setState(0xc0c9, 0x9310, 0x320, 0xd0fd, 0xc631, 0x1a47, 0x1, 0x1);
        gbc.writeMem(0xc0c9, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x9310);
        EXPECT(gbc.pc(), 0xc0cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0c9), 0xcb);
        EXPECT(gbc.readMem(0xc0ca), 0x51);
        // CB 51 03C7
        gbc.setState(0x62a7, 0x76e3, 0x20c0, 0x285b, 0x82c, 0xc835, 0x0, 0x0);
        gbc.writeMem(0x62a7, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x76e3);
        EXPECT(gbc.pc(), 0x62a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 03C8
        gbc.setState(0x1280, 0x812a, 0xeb60, 0x75e4, 0x8785, 0x1989, 0x0, 0x0);
        gbc.writeMem(0x1280, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x812a);
        EXPECT(gbc.pc(), 0x1282);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 03C9
        gbc.setState(0x1e31, 0x8036, 0xe90, 0x759f, 0x6cf0, 0x89d6, 0x0, 0x0);
        gbc.writeMem(0x1e31, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x8036);
        EXPECT(gbc.pc(), 0x1e33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 03CA
        gbc.setState(0xa990, 0xfed, 0x3610, 0x7648, 0xdea6, 0x2604, 0x1, 0x1);
        gbc.writeMem(0xa990, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xfed);
        EXPECT(gbc.pc(), 0xa992);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa990), 0xcb);
        EXPECT(gbc.readMem(0xa991), 0x51);
        // CB 51 03CB
        gbc.setState(0x80fb, 0x8af2, 0xf9a0, 0xa463, 0x7c4f, 0xf06f, 0x1, 0x0);
        gbc.writeMem(0x80fb, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x8af2);
        EXPECT(gbc.pc(), 0x80fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80fb), 0xcb);
        EXPECT(gbc.readMem(0x80fc), 0x51);
        // CB 51 03CC
        gbc.setState(0x65f5, 0x54c4, 0x6aa0, 0xe31c, 0xc138, 0x6021, 0x0, 0x0);
        gbc.writeMem(0x65f5, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x54c4);
        EXPECT(gbc.pc(), 0x65f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 03CE
        gbc.setState(0x6a82, 0xe9be, 0xdf70, 0xa73a, 0xc4fe, 0x8207, 0x0, 0x0);
        gbc.writeMem(0x6a82, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xe9be);
        EXPECT(gbc.pc(), 0x6a84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 03CF
        gbc.setState(0x210d, 0x91f6, 0xadd0, 0x66c5, 0x21d5, 0xcabf, 0x0, 0x1);
        gbc.writeMem(0x210d, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x91f6);
        EXPECT(gbc.pc(), 0x210f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 03D0
        gbc.setState(0xdaf7, 0x204d, 0x2720, 0x5435, 0x22d5, 0x30c0, 0x0, 0x0);
        gbc.writeMem(0xdaf7, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x204d);
        EXPECT(gbc.pc(), 0xdaf9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdaf7), 0xcb);
        EXPECT(gbc.readMem(0xdaf8), 0x51);
        // CB 51 03D1
        gbc.setState(0x6d86, 0x9c31, 0x1ce0, 0xe873, 0x4f1a, 0xe05, 0x1, 0x0);
        gbc.writeMem(0x6d86, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x9c31);
        EXPECT(gbc.pc(), 0x6d88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 03D2
        gbc.setState(0x8c66, 0x8ead, 0x8750, 0xc6e7, 0x1cb, 0xbd58, 0x1, 0x0);
        gbc.writeMem(0x8c66, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x8ead);
        EXPECT(gbc.pc(), 0x8c68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c66), 0xcb);
        EXPECT(gbc.readMem(0x8c67), 0x51);
        // CB 51 03D3
        gbc.setState(0x8b3a, 0x8a03, 0x9c0, 0x34d4, 0xcb5a, 0x4113, 0x1, 0x0);
        gbc.writeMem(0x8b3a, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x8a03);
        EXPECT(gbc.pc(), 0x8b3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b3a), 0xcb);
        EXPECT(gbc.readMem(0x8b3b), 0x51);
        // CB 51 03D4
        gbc.setState(0x2bce, 0x1b76, 0x8440, 0x7af6, 0x5f6c, 0xbf25, 0x1, 0x0);
        gbc.writeMem(0x2bce, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x1b76);
        EXPECT(gbc.pc(), 0x2bd0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 03D5
        gbc.setState(0x4d1c, 0x1c0a, 0x2920, 0x934f, 0xa53d, 0xbcd0, 0x1, 0x0);
        gbc.writeMem(0x4d1c, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x1c0a);
        EXPECT(gbc.pc(), 0x4d1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 03D6
        gbc.setState(0x8b09, 0xbecb, 0xfa50, 0x5021, 0xdaf, 0xbe97, 0x1, 0x1);
        gbc.writeMem(0x8b09, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xbecb);
        EXPECT(gbc.pc(), 0x8b0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b09), 0xcb);
        EXPECT(gbc.readMem(0x8b0a), 0x51);
        // CB 51 03D7
        gbc.setState(0xef18, 0xec7b, 0xb3c0, 0xf641, 0x6430, 0x1828, 0x1, 0x0);
        gbc.writeMem(0xef18, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xec7b);
        EXPECT(gbc.pc(), 0xef1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef18), 0xcb);
        EXPECT(gbc.readMem(0xef19), 0x51);
        // CB 51 03D8
        gbc.setState(0x3661, 0x5a97, 0x55f0, 0x2b75, 0xaaa1, 0x362f, 0x0, 0x0);
        gbc.writeMem(0x3661, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x5a97);
        EXPECT(gbc.pc(), 0x3663);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 03D9
        gbc.setState(0x2eb1, 0x43b7, 0x7630, 0xcd2d, 0x6de6, 0x52f5, 0x0, 0x1);
        gbc.writeMem(0x2eb1, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x43b7);
        EXPECT(gbc.pc(), 0x2eb3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 03DA
        gbc.setState(0x657f, 0x85ac, 0x3c20, 0x5c5, 0xb77c, 0xe2a1, 0x1, 0x0);
        gbc.writeMem(0x657f, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x85ac);
        EXPECT(gbc.pc(), 0x6581);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 03DB
        gbc.setState(0x70db, 0x723b, 0x7700, 0xa231, 0xdbc2, 0xfd31, 0x1, 0x1);
        gbc.writeMem(0x70db, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x723b);
        EXPECT(gbc.pc(), 0x70dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 03DC
        gbc.setState(0x745, 0xd4ca, 0xfe10, 0x178c, 0x1299, 0x73b2, 0x1, 0x1);
        gbc.writeMem(0x745, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xd4ca);
        EXPECT(gbc.pc(), 0x747);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 03DD
        gbc.setState(0xe599, 0x340, 0x5ba0, 0xc8fb, 0xbdae, 0x3f30, 0x1, 0x0);
        gbc.writeMem(0xe599, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x340);
        EXPECT(gbc.pc(), 0xe59b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe599), 0xcb);
        EXPECT(gbc.readMem(0xe59a), 0x51);
        // CB 51 03DE
        gbc.setState(0x51a6, 0x5e4c, 0xbd40, 0x4a26, 0xa389, 0xe7b3, 0x1, 0x1);
        gbc.writeMem(0x51a6, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x5e4c);
        EXPECT(gbc.pc(), 0x51a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 03DF
        gbc.setState(0xcfa3, 0x555e, 0x4c70, 0xaaff, 0xcef5, 0xb3d3, 0x0, 0x1);
        gbc.writeMem(0xcfa3, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x555e);
        EXPECT(gbc.pc(), 0xcfa5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfa3), 0xcb);
        EXPECT(gbc.readMem(0xcfa4), 0x51);
        // CB 51 03E0
        gbc.setState(0xc328, 0xdefd, 0x6260, 0x382e, 0x55a4, 0x4222, 0x1, 0x1);
        gbc.writeMem(0xc328, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xdefd);
        EXPECT(gbc.pc(), 0xc32a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc328), 0xcb);
        EXPECT(gbc.readMem(0xc329), 0x51);
        // CB 51 03E1
        gbc.setState(0xaf77, 0x81e1, 0x9530, 0x4bb9, 0xe93, 0xe643, 0x1, 0x1);
        gbc.writeMem(0xaf77, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x81e1);
        EXPECT(gbc.pc(), 0xaf79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf77), 0xcb);
        EXPECT(gbc.readMem(0xaf78), 0x51);
        // CB 51 03E2
        gbc.setState(0x5b85, 0x8b18, 0xb450, 0x7b7e, 0xacf2, 0xbbe2, 0x0, 0x1);
        gbc.writeMem(0x5b85, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x8b18);
        EXPECT(gbc.pc(), 0x5b87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 03E3
        gbc.setState(0x25a2, 0x8d09, 0xcf60, 0xd424, 0x65f6, 0xf353, 0x1, 0x1);
        gbc.writeMem(0x25a2, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x8d09);
        EXPECT(gbc.pc(), 0x25a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 51 03E4
        gbc.setState(0xd075, 0x156a, 0x5650, 0x2ecf, 0x645a, 0x9cae, 0x0, 0x1);
        gbc.writeMem(0xd075, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x156a);
        EXPECT(gbc.pc(), 0xd077);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd075), 0xcb);
        EXPECT(gbc.readMem(0xd076), 0x51);
        // CB 51 03E5
        gbc.setState(0x2ef2, 0xf6b8, 0x5670, 0x99ee, 0x3c43, 0xbe67, 0x1, 0x1);
        gbc.writeMem(0x2ef2, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xf6b8);
        EXPECT(gbc.pc(), 0x2ef4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 51 03E6
        gbc.setState(0x921b, 0x1a13, 0xe230, 0x1d84, 0x1d11, 0x9375, 0x0, 0x0);
        gbc.writeMem(0x921b, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x1a13);
        EXPECT(gbc.pc(), 0x921d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x921b), 0xcb);
        EXPECT(gbc.readMem(0x921c), 0x51);
        // CB 51 03E7
        gbc.setState(0x8a11, 0x5daf, 0x8830, 0x4469, 0x2e91, 0xefdf, 0x0, 0x1);
        gbc.writeMem(0x8a11, { 0xcb, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x5daf);
        EXPECT(gbc.pc(), 0x8a13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a11), 0xcb);
        EXPECT(gbc.readMem(0x8a12), 0x51);
    }
}
#endif
