    TEST(gbcemu, opcode_bb) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // BB 0000
        gbc.setState(0x730, 0x666a, 0x4bd0, 0x22e, 0x22f7, 0x1d37, 0x1, 0x1);
        gbc.writeMem(0x730, { 0xbb });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x666a, gbc.sp());
        EXPECT(0x731, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0001
        gbc.setState(0x30a4, 0x55a6, 0xf390, 0xe15d, 0x53c1, 0x22c1, 0x0, 0x1);
        gbc.writeMem(0x30a4, { 0xbb });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x55a6, gbc.sp());
        EXPECT(0x30a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0002
        gbc.setState(0x5b40, 0xfb5c, 0x41d0, 0x68c6, 0x30e5, 0xd558, 0x0, 0x0);
        gbc.writeMem(0x5b40, { 0xbb });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xfb5c, gbc.sp());
        EXPECT(0x5b41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0003
        gbc.setState(0x95c6, 0xa8fe, 0xdf20, 0x4c1, 0xd7d2, 0xc4e4, 0x0, 0x1);
        gbc.writeMem(0x95c6, { 0xbb });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xa8fe, gbc.sp());
        EXPECT(0x95c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x95c6));
        // BB 0004
        gbc.setState(0xbc8f, 0xce08, 0xdad0, 0x7a5a, 0xbe3e, 0xd806, 0x1, 0x1);
        gbc.writeMem(0xbc8f, { 0xbb });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xce08, gbc.sp());
        EXPECT(0xbc90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xbc8f));
        // BB 0005
        gbc.setState(0x7bc0, 0x4ed2, 0xd10, 0x211a, 0xae20, 0x1504, 0x1, 0x1);
        gbc.writeMem(0x7bc0, { 0xbb });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x4ed2, gbc.sp());
        EXPECT(0x7bc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0006
        gbc.setState(0x3bff, 0xa852, 0xa330, 0x67fc, 0x23b5, 0xd2db, 0x1, 0x1);
        gbc.writeMem(0x3bff, { 0xbb });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xa852, gbc.sp());
        EXPECT(0x3c00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0007
        gbc.setState(0x413e, 0x27c7, 0xb750, 0x79f9, 0x1a2f, 0x9b47, 0x1, 0x0);
        gbc.writeMem(0x413e, { 0xbb });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x27c7, gbc.sp());
        EXPECT(0x413f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0009
        gbc.setState(0xbc5c, 0x4823, 0xff20, 0xf96f, 0x95ad, 0x1e29, 0x0, 0x1);
        gbc.writeMem(0xbc5c, { 0xbb });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x4823, gbc.sp());
        EXPECT(0xbc5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xbc5c));
        // BB 000A
        gbc.setState(0x9a90, 0xc8ac, 0x4850, 0x2f21, 0x18f1, 0x7329, 0x1, 0x0);
        gbc.writeMem(0x9a90, { 0xbb });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xc8ac, gbc.sp());
        EXPECT(0x9a91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x9a90));
        // BB 000B
        gbc.setState(0xdea3, 0x3d2, 0x6a80, 0x52b2, 0xcc00, 0xd558, 0x0, 0x0);
        gbc.writeMem(0xdea3, { 0xbb });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x3d2, gbc.sp());
        EXPECT(0xdea4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xdea3));
        // BB 000C
        gbc.setState(0xa48, 0xb32, 0x5ab0, 0xdafd, 0xa79e, 0x2c1b, 0x1, 0x1);
        gbc.writeMem(0xa48, { 0xbb });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xb32, gbc.sp());
        EXPECT(0xa49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 000D
        gbc.setState(0x6ae4, 0x2969, 0x1e20, 0x981f, 0x4e79, 0xea1c, 0x1, 0x1);
        gbc.writeMem(0x6ae4, { 0xbb });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x2969, gbc.sp());
        EXPECT(0x6ae5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 000E
        gbc.setState(0xc122, 0xb8f2, 0x5ad0, 0x5866, 0x66e7, 0xdb12, 0x0, 0x1);
        gbc.writeMem(0xc122, { 0xbb });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xb8f2, gbc.sp());
        EXPECT(0xc123, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xc122));
        // BB 000F
        gbc.setState(0x6fcc, 0xf91a, 0xd20, 0x2cb6, 0x9c9d, 0xf8e7, 0x1, 0x0);
        gbc.writeMem(0x6fcc, { 0xbb });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xf91a, gbc.sp());
        EXPECT(0x6fcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0010
        gbc.setState(0x1a72, 0xd75a, 0x7c70, 0x5000, 0x3df3, 0x462b, 0x0, 0x1);
        gbc.writeMem(0x1a72, { 0xbb });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xd75a, gbc.sp());
        EXPECT(0x1a73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0011
        gbc.setState(0x1273, 0x3fe5, 0x4700, 0xcd0c, 0xa251, 0x90c2, 0x1, 0x0);
        gbc.writeMem(0x1273, { 0xbb });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x3fe5, gbc.sp());
        EXPECT(0x1274, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0012
        gbc.setState(0x7a41, 0xf4c, 0xb530, 0x55a, 0x327f, 0xc71e, 0x1, 0x1);
        gbc.writeMem(0x7a41, { 0xbb });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xf4c, gbc.sp());
        EXPECT(0x7a42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0013
        gbc.setState(0x872a, 0x439b, 0x77b0, 0xd966, 0x281b, 0x8441, 0x1, 0x0);
        gbc.writeMem(0x872a, { 0xbb });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x439b, gbc.sp());
        EXPECT(0x872b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x872a));
        // BB 0014
        gbc.setState(0x97c9, 0xb13f, 0x9590, 0x8cd, 0x9f31, 0x3711, 0x1, 0x1);
        gbc.writeMem(0x97c9, { 0xbb });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xb13f, gbc.sp());
        EXPECT(0x97ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x97c9));
        // BB 0015
        gbc.setState(0xd2b5, 0x56e2, 0xa8b0, 0x31a0, 0x2cb9, 0xb84d, 0x0, 0x0);
        gbc.writeMem(0xd2b5, { 0xbb });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x56e2, gbc.sp());
        EXPECT(0xd2b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xd2b5));
        // BB 0016
        gbc.setState(0x743f, 0xc4f9, 0xb4b0, 0x450e, 0x2a78, 0xb18e, 0x1, 0x0);
        gbc.writeMem(0x743f, { 0xbb });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xc4f9, gbc.sp());
        EXPECT(0x7440, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0017
        gbc.setState(0x980c, 0x912, 0x8ee0, 0xe8e, 0x51d4, 0x9da0, 0x1, 0x0);
        gbc.writeMem(0x980c, { 0xbb });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x912, gbc.sp());
        EXPECT(0x980d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x980c));
        // BB 0018
        gbc.setState(0x2c58, 0x8149, 0x74c0, 0x64be, 0x3285, 0x8286, 0x0, 0x0);
        gbc.writeMem(0x2c58, { 0xbb });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x8149, gbc.sp());
        EXPECT(0x2c59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0019
        gbc.setState(0x1e6d, 0x6267, 0xb760, 0x4592, 0x3691, 0x2790, 0x1, 0x0);
        gbc.writeMem(0x1e6d, { 0xbb });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x6267, gbc.sp());
        EXPECT(0x1e6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 001A
        gbc.setState(0x8f4, 0xf748, 0x36a0, 0xc95f, 0xa38d, 0xd6d7, 0x0, 0x1);
        gbc.writeMem(0x8f4, { 0xbb });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xf748, gbc.sp());
        EXPECT(0x8f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 001B
        gbc.setState(0x4895, 0xae74, 0x6870, 0x6aa0, 0x5287, 0xafca, 0x1, 0x1);
        gbc.writeMem(0x4895, { 0xbb });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xae74, gbc.sp());
        EXPECT(0x4896, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 001C
        gbc.setState(0x8762, 0x3efc, 0x6280, 0xf2bd, 0x7aa, 0x4de8, 0x0, 0x1);
        gbc.writeMem(0x8762, { 0xbb });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x3efc, gbc.sp());
        EXPECT(0x8763, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x8762));
        // BB 001D
        gbc.setState(0x3897, 0x86c7, 0x6ea0, 0x36ef, 0xd2d8, 0x83df, 0x0, 0x1);
        gbc.writeMem(0x3897, { 0xbb });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x86c7, gbc.sp());
        EXPECT(0x3898, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 001E
        gbc.setState(0xdc55, 0xf147, 0x6380, 0xf0b3, 0xf094, 0x76cb, 0x1, 0x0);
        gbc.writeMem(0xdc55, { 0xbb });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xf147, gbc.sp());
        EXPECT(0xdc56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xdc55));
        // BB 001F
        gbc.setState(0xa77f, 0xa24, 0x69e0, 0xdb10, 0xf9cf, 0x9e2a, 0x1, 0x0);
        gbc.writeMem(0xa77f, { 0xbb });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xa24, gbc.sp());
        EXPECT(0xa780, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xa77f));
        // BB 0020
        gbc.setState(0x19a9, 0xac1b, 0x6030, 0xf018, 0x8553, 0x1fbd, 0x0, 0x1);
        gbc.writeMem(0x19a9, { 0xbb });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xac1b, gbc.sp());
        EXPECT(0x19aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0021
        gbc.setState(0xea96, 0x2b5a, 0xe070, 0xd8ed, 0x7cb0, 0x2d58, 0x0, 0x1);
        gbc.writeMem(0xea96, { 0xbb });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x2b5a, gbc.sp());
        EXPECT(0xea97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xea96));
        // BB 0022
        gbc.setState(0x492c, 0x89b7, 0x1a0, 0x35fb, 0xa419, 0xa23e, 0x1, 0x1);
        gbc.writeMem(0x492c, { 0xbb });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x89b7, gbc.sp());
        EXPECT(0x492d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0023
        gbc.setState(0x2592, 0x6c5f, 0xe830, 0xcb36, 0x3199, 0x4c3e, 0x0, 0x1);
        gbc.writeMem(0x2592, { 0xbb });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x6c5f, gbc.sp());
        EXPECT(0x2593, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0025
        gbc.setState(0x2c9b, 0x4089, 0xbcb0, 0x1cd2, 0x829a, 0x4a5, 0x1, 0x1);
        gbc.writeMem(0x2c9b, { 0xbb });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x4089, gbc.sp());
        EXPECT(0x2c9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0026
        gbc.setState(0xa222, 0x405f, 0x6630, 0x7629, 0xcfca, 0x8cc8, 0x0, 0x1);
        gbc.writeMem(0xa222, { 0xbb });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x405f, gbc.sp());
        EXPECT(0xa223, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xa222));
        // BB 0027
        gbc.setState(0x2d80, 0xf66a, 0x8010, 0xc4c0, 0x8359, 0xd4ca, 0x1, 0x1);
        gbc.writeMem(0x2d80, { 0xbb });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xf66a, gbc.sp());
        EXPECT(0x2d81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0028
        gbc.setState(0xb5a4, 0xfe9c, 0x53a0, 0xa835, 0xdfbe, 0x51a2, 0x1, 0x1);
        gbc.writeMem(0xb5a4, { 0xbb });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xfe9c, gbc.sp());
        EXPECT(0xb5a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xb5a4));
        // BB 0029
        gbc.setState(0xadb6, 0x8f91, 0x8ee0, 0x7637, 0xf84a, 0x8811, 0x0, 0x1);
        gbc.writeMem(0xadb6, { 0xbb });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x8f91, gbc.sp());
        EXPECT(0xadb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xadb6));
        // BB 002A
        gbc.setState(0x42c5, 0x9334, 0x60f0, 0x92e5, 0x39f2, 0x5f03, 0x1, 0x0);
        gbc.writeMem(0x42c5, { 0xbb });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x9334, gbc.sp());
        EXPECT(0x42c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 002B
        gbc.setState(0x6675, 0x2c25, 0x8750, 0x5f6c, 0x2a30, 0xc491, 0x1, 0x1);
        gbc.writeMem(0x6675, { 0xbb });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x2c25, gbc.sp());
        EXPECT(0x6676, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 002C
        gbc.setState(0x4dbe, 0xf5f6, 0x9810, 0x15f5, 0x7728, 0x4684, 0x1, 0x0);
        gbc.writeMem(0x4dbe, { 0xbb });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xf5f6, gbc.sp());
        EXPECT(0x4dbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 002D
        gbc.setState(0xaad8, 0x4096, 0xe120, 0x8cca, 0x2467, 0x6412, 0x0, 0x1);
        gbc.writeMem(0xaad8, { 0xbb });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x4096, gbc.sp());
        EXPECT(0xaad9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xaad8));
        // BB 002E
        gbc.setState(0x57a, 0x5566, 0x80e0, 0xa07c, 0xbbb5, 0x75cc, 0x1, 0x1);
        gbc.writeMem(0x57a, { 0xbb });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x5566, gbc.sp());
        EXPECT(0x57b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 002F
        gbc.setState(0x2957, 0x2ad2, 0xd50, 0x2c51, 0x6199, 0x9349, 0x0, 0x1);
        gbc.writeMem(0x2957, { 0xbb });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x2ad2, gbc.sp());
        EXPECT(0x2958, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0030
        gbc.setState(0xed4d, 0x6eaf, 0x8c30, 0x4fc1, 0xc84, 0x7e10, 0x1, 0x0);
        gbc.writeMem(0xed4d, { 0xbb });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x6eaf, gbc.sp());
        EXPECT(0xed4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xed4d));
        // BB 0031
        gbc.setState(0x4d16, 0xf49a, 0x6580, 0xa8b0, 0xf3a2, 0x95af, 0x0, 0x0);
        gbc.writeMem(0x4d16, { 0xbb });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xf49a, gbc.sp());
        EXPECT(0x4d17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0032
        gbc.setState(0x619c, 0xd849, 0x8a60, 0xb0f, 0x18ac, 0xb4c1, 0x0, 0x0);
        gbc.writeMem(0x619c, { 0xbb });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xd849, gbc.sp());
        EXPECT(0x619d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0033
        gbc.setState(0xcc2a, 0x7dc8, 0x7340, 0x676b, 0x6ba2, 0xe7a, 0x1, 0x0);
        gbc.writeMem(0xcc2a, { 0xbb });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x7dc8, gbc.sp());
        EXPECT(0xcc2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xcc2a));
        // BB 0034
        gbc.setState(0x73ff, 0x1341, 0x30b0, 0x75d5, 0xda7, 0x1971, 0x0, 0x1);
        gbc.writeMem(0x73ff, { 0xbb });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x1341, gbc.sp());
        EXPECT(0x7400, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0035
        gbc.setState(0x2e3e, 0x47dc, 0xca90, 0xd2d5, 0x7a4a, 0xb7d4, 0x1, 0x0);
        gbc.writeMem(0x2e3e, { 0xbb });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x47dc, gbc.sp());
        EXPECT(0x2e3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0036
        gbc.setState(0x10e4, 0x684, 0x3470, 0x159, 0x7ee5, 0x8e94, 0x0, 0x0);
        gbc.writeMem(0x10e4, { 0xbb });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x684, gbc.sp());
        EXPECT(0x10e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0037
        gbc.setState(0xdfaa, 0xadbb, 0x3320, 0x5081, 0xa357, 0x6f2d, 0x0, 0x1);
        gbc.writeMem(0xdfaa, { 0xbb });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xadbb, gbc.sp());
        EXPECT(0xdfab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xdfaa));
        // BB 0038
        gbc.setState(0xdcc5, 0x6323, 0x6720, 0xb010, 0x93d6, 0xe459, 0x0, 0x0);
        gbc.writeMem(0xdcc5, { 0xbb });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x6323, gbc.sp());
        EXPECT(0xdcc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xdcc5));
        // BB 0039
        gbc.setState(0x1c8a, 0xa4fc, 0xde80, 0x2005, 0xee3c, 0xe6bf, 0x0, 0x1);
        gbc.writeMem(0x1c8a, { 0xbb });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xa4fc, gbc.sp());
        EXPECT(0x1c8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 003A
        gbc.setState(0xc05c, 0xfcc6, 0x4aa0, 0xbf88, 0x7359, 0xab00, 0x0, 0x1);
        gbc.writeMem(0xc05c, { 0xbb });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xfcc6, gbc.sp());
        EXPECT(0xc05d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xc05c));
        // BB 003B
        gbc.setState(0xddaa, 0x2a83, 0x3d50, 0xbcc9, 0xf0d4, 0x903b, 0x1, 0x0);
        gbc.writeMem(0xddaa, { 0xbb });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x2a83, gbc.sp());
        EXPECT(0xddab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xddaa));
        // BB 003C
        gbc.setState(0xa628, 0x30df, 0x9900, 0xa78d, 0x4cef, 0x7277, 0x0, 0x0);
        gbc.writeMem(0xa628, { 0xbb });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x30df, gbc.sp());
        EXPECT(0xa629, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xa628));
        // BB 003D
        gbc.setState(0xa0a, 0xfbcb, 0x4af0, 0x4000, 0x8692, 0x30ca, 0x1, 0x0);
        gbc.writeMem(0xa0a, { 0xbb });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xfbcb, gbc.sp());
        EXPECT(0xa0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 003F
        gbc.setState(0x706a, 0x1d44, 0xdbe0, 0x50ce, 0x8dc6, 0x39a6, 0x1, 0x0);
        gbc.writeMem(0x706a, { 0xbb });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x1d44, gbc.sp());
        EXPECT(0x706b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0040
        gbc.setState(0xc3f3, 0x5157, 0xd6e0, 0x92eb, 0x3c9, 0x1d94, 0x1, 0x0);
        gbc.writeMem(0xc3f3, { 0xbb });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x5157, gbc.sp());
        EXPECT(0xc3f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xc3f3));
        // BB 0041
        gbc.setState(0xd744, 0xad90, 0x5370, 0xe0f0, 0xdca2, 0x2f8a, 0x1, 0x0);
        gbc.writeMem(0xd744, { 0xbb });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xad90, gbc.sp());
        EXPECT(0xd745, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xd744));
        // BB 0042
        gbc.setState(0xc73, 0x2a8e, 0xe530, 0xc6b9, 0x20a5, 0x6c3e, 0x1, 0x1);
        gbc.writeMem(0xc73, { 0xbb });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x2a8e, gbc.sp());
        EXPECT(0xc74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0043
        gbc.setState(0x4095, 0xbde9, 0x4a70, 0xa9ea, 0x313f, 0x836a, 0x0, 0x1);
        gbc.writeMem(0x4095, { 0xbb });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xbde9, gbc.sp());
        EXPECT(0x4096, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0044
        gbc.setState(0x7623, 0x7dac, 0xb0c0, 0xf560, 0xfa18, 0x6d8, 0x1, 0x1);
        gbc.writeMem(0x7623, { 0xbb });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x7dac, gbc.sp());
        EXPECT(0x7624, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0045
        gbc.setState(0xd2c0, 0x306b, 0x5370, 0xd0bd, 0xef01, 0x7c79, 0x1, 0x0);
        gbc.writeMem(0xd2c0, { 0xbb });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x306b, gbc.sp());
        EXPECT(0xd2c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xd2c0));
        // BB 0046
        gbc.setState(0xa1c2, 0x5fb1, 0x7f10, 0xd367, 0x5890, 0x78be, 0x1, 0x1);
        gbc.writeMem(0xa1c2, { 0xbb });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x5fb1, gbc.sp());
        EXPECT(0xa1c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xa1c2));
        // BB 0047
        gbc.setState(0x4fa3, 0xa8c2, 0xb5f0, 0x812a, 0x918e, 0xa76a, 0x1, 0x1);
        gbc.writeMem(0x4fa3, { 0xbb });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xa8c2, gbc.sp());
        EXPECT(0x4fa4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0048
        gbc.setState(0x44e9, 0xda95, 0xd9a0, 0xc3a1, 0xb3bb, 0xd439, 0x0, 0x1);
        gbc.writeMem(0x44e9, { 0xbb });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xda95, gbc.sp());
        EXPECT(0x44ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0049
        gbc.setState(0x9f17, 0xb51e, 0xe290, 0x3cc2, 0xd4a3, 0x876a, 0x0, 0x0);
        gbc.writeMem(0x9f17, { 0xbb });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xb51e, gbc.sp());
        EXPECT(0x9f18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x9f17));
        // BB 004A
        gbc.setState(0x2953, 0x2466, 0xdc70, 0x1ccb, 0x6a, 0xe390, 0x0, 0x0);
        gbc.writeMem(0x2953, { 0xbb });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x2466, gbc.sp());
        EXPECT(0x2954, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 004B
        gbc.setState(0xa6e6, 0x9319, 0x9e00, 0x2734, 0x4f00, 0x2b0e, 0x0, 0x0);
        gbc.writeMem(0xa6e6, { 0xbb });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x9319, gbc.sp());
        EXPECT(0xa6e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xa6e6));
        // BB 004C
        gbc.setState(0xa638, 0x791b, 0x5190, 0x87d5, 0xad99, 0x84ef, 0x0, 0x1);
        gbc.writeMem(0xa638, { 0xbb });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x791b, gbc.sp());
        EXPECT(0xa639, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xa638));
        // BB 004D
        gbc.setState(0x8fa2, 0x7514, 0xf9b0, 0xe01f, 0x37af, 0x5d77, 0x0, 0x1);
        gbc.writeMem(0x8fa2, { 0xbb });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x7514, gbc.sp());
        EXPECT(0x8fa3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x8fa2));
        // BB 004F
        gbc.setState(0x8326, 0xf60c, 0xa890, 0x8776, 0x315, 0x5976, 0x1, 0x0);
        gbc.writeMem(0x8326, { 0xbb });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xf60c, gbc.sp());
        EXPECT(0x8327, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x8326));
        // BB 0050
        gbc.setState(0xbb25, 0xd101, 0xdd40, 0x3db9, 0x8aab, 0x2f9b, 0x0, 0x1);
        gbc.writeMem(0xbb25, { 0xbb });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xd101, gbc.sp());
        EXPECT(0xbb26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xbb25));
        // BB 0051
        gbc.setState(0x32b0, 0x120b, 0xf140, 0x6621, 0x754f, 0x1cbc, 0x1, 0x0);
        gbc.writeMem(0x32b0, { 0xbb });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x120b, gbc.sp());
        EXPECT(0x32b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0052
        gbc.setState(0x953, 0x8974, 0xa0c0, 0x5f88, 0x679e, 0x33f4, 0x0, 0x1);
        gbc.writeMem(0x953, { 0xbb });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x8974, gbc.sp());
        EXPECT(0x954, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0053
        gbc.setState(0x6d4b, 0x5c80, 0xbad0, 0xfc7e, 0xe39c, 0x5490, 0x0, 0x1);
        gbc.writeMem(0x6d4b, { 0xbb });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x5c80, gbc.sp());
        EXPECT(0x6d4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0054
        gbc.setState(0x7e44, 0xa7c7, 0x29c0, 0x7f44, 0x9cc3, 0x6377, 0x0, 0x1);
        gbc.writeMem(0x7e44, { 0xbb });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xa7c7, gbc.sp());
        EXPECT(0x7e45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0055
        gbc.setState(0x98d, 0xd653, 0x5590, 0xcfe, 0xb667, 0xd7ec, 0x1, 0x1);
        gbc.writeMem(0x98d, { 0xbb });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xd653, gbc.sp());
        EXPECT(0x98e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0056
        gbc.setState(0x86a9, 0xdd1a, 0x29e0, 0xa4f2, 0x59eb, 0x8040, 0x1, 0x0);
        gbc.writeMem(0x86a9, { 0xbb });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xdd1a, gbc.sp());
        EXPECT(0x86aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x86a9));
        // BB 0057
        gbc.setState(0x2a6c, 0x8471, 0x28f0, 0xdcc4, 0x44c7, 0xf55f, 0x1, 0x1);
        gbc.writeMem(0x2a6c, { 0xbb });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x8471, gbc.sp());
        EXPECT(0x2a6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0058
        gbc.setState(0x8844, 0xa525, 0x5dc0, 0xad00, 0xc321, 0x40fa, 0x1, 0x0);
        gbc.writeMem(0x8844, { 0xbb });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xa525, gbc.sp());
        EXPECT(0x8845, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x8844));
        // BB 0059
        gbc.setState(0x5bfb, 0x9fa8, 0x4b70, 0xfbe5, 0x525f, 0xa6a0, 0x1, 0x0);
        gbc.writeMem(0x5bfb, { 0xbb });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x9fa8, gbc.sp());
        EXPECT(0x5bfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 005A
        gbc.setState(0x50ac, 0x399a, 0xfe0, 0x69b7, 0x5c0a, 0x6723, 0x0, 0x0);
        gbc.writeMem(0x50ac, { 0xbb });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x399a, gbc.sp());
        EXPECT(0x50ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 005B
        gbc.setState(0x80c3, 0xa8e9, 0x48d0, 0x8db0, 0x19fd, 0x3473, 0x0, 0x1);
        gbc.writeMem(0x80c3, { 0xbb });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xa8e9, gbc.sp());
        EXPECT(0x80c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x80c3));
        // BB 005D
        gbc.setState(0x505a, 0x588, 0xf180, 0x810b, 0xe80f, 0x189c, 0x0, 0x1);
        gbc.writeMem(0x505a, { 0xbb });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x588, gbc.sp());
        EXPECT(0x505b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 005E
        gbc.setState(0x8943, 0x639b, 0xa430, 0x987f, 0xc74b, 0x8295, 0x0, 0x1);
        gbc.writeMem(0x8943, { 0xbb });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x639b, gbc.sp());
        EXPECT(0x8944, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x8943));
        // BB 005F
        gbc.setState(0x41a9, 0xc064, 0xacc0, 0xa5ed, 0x87a2, 0x9434, 0x1, 0x1);
        gbc.writeMem(0x41a9, { 0xbb });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xc064, gbc.sp());
        EXPECT(0x41aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0060
        gbc.setState(0x171e, 0x69c3, 0x4c90, 0x6c9c, 0x466c, 0xe479, 0x1, 0x1);
        gbc.writeMem(0x171e, { 0xbb });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x69c3, gbc.sp());
        EXPECT(0x171f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0061
        gbc.setState(0x242a, 0xd112, 0x9050, 0x1abd, 0x2ef1, 0x3fd7, 0x1, 0x0);
        gbc.writeMem(0x242a, { 0xbb });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xd112, gbc.sp());
        EXPECT(0x242b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0062
        gbc.setState(0xb726, 0xd576, 0xddf0, 0x8c55, 0x1f99, 0x7c76, 0x1, 0x0);
        gbc.writeMem(0xb726, { 0xbb });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xd576, gbc.sp());
        EXPECT(0xb727, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xb726));
        // BB 0063
        gbc.setState(0xe121, 0xa8b3, 0xcd80, 0x6f54, 0x7f3c, 0xe005, 0x1, 0x0);
        gbc.writeMem(0xe121, { 0xbb });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xa8b3, gbc.sp());
        EXPECT(0xe122, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xe121));
        // BB 0064
        gbc.setState(0x9bc7, 0x2365, 0x3ce0, 0x98b2, 0x6c6c, 0xd8ea, 0x0, 0x0);
        gbc.writeMem(0x9bc7, { 0xbb });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x2365, gbc.sp());
        EXPECT(0x9bc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x9bc7));
        // BB 0066
        gbc.setState(0x803b, 0xa238, 0xa090, 0x7bd8, 0x69d7, 0x5d72, 0x1, 0x1);
        gbc.writeMem(0x803b, { 0xbb });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xa238, gbc.sp());
        EXPECT(0x803c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x803b));
        // BB 0067
        gbc.setState(0xba29, 0x97fe, 0x500, 0x1c69, 0x2294, 0xe31f, 0x1, 0x1);
        gbc.writeMem(0xba29, { 0xbb });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x97fe, gbc.sp());
        EXPECT(0xba2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xba29));
        // BB 0068
        gbc.setState(0x3232, 0x1a68, 0xe920, 0x8cf9, 0x8625, 0x3f88, 0x1, 0x1);
        gbc.writeMem(0x3232, { 0xbb });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x1a68, gbc.sp());
        EXPECT(0x3233, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0069
        gbc.setState(0x91de, 0xc04, 0x28e0, 0x72a7, 0x4def, 0x51c0, 0x1, 0x0);
        gbc.writeMem(0x91de, { 0xbb });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xc04, gbc.sp());
        EXPECT(0x91df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x91de));
        // BB 006A
        gbc.setState(0xeb7b, 0x2d, 0x5660, 0x4353, 0x28bb, 0x368c, 0x0, 0x1);
        gbc.writeMem(0xeb7b, { 0xbb });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x2d, gbc.sp());
        EXPECT(0xeb7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xeb7b));
        // BB 006B
        gbc.setState(0x42b4, 0x9bf3, 0xa580, 0xdf5, 0xb739, 0x3b7e, 0x1, 0x1);
        gbc.writeMem(0x42b4, { 0xbb });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x9bf3, gbc.sp());
        EXPECT(0x42b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 006C
        gbc.setState(0xcc60, 0xf72e, 0x4980, 0x41c0, 0xdca1, 0x68b9, 0x0, 0x1);
        gbc.writeMem(0xcc60, { 0xbb });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xf72e, gbc.sp());
        EXPECT(0xcc61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xcc60));
        // BB 006D
        gbc.setState(0xa3fd, 0x8218, 0x7450, 0x208d, 0xff26, 0x7dca, 0x0, 0x1);
        gbc.writeMem(0xa3fd, { 0xbb });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x8218, gbc.sp());
        EXPECT(0xa3fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xa3fd));
        // BB 006E
        gbc.setState(0x515b, 0x4f04, 0x5b40, 0x60, 0x89c8, 0x45fd, 0x1, 0x0);
        gbc.writeMem(0x515b, { 0xbb });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x4f04, gbc.sp());
        EXPECT(0x515c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 006F
        gbc.setState(0x1c1f, 0x72cc, 0x28d0, 0x39b6, 0xd637, 0xc5c, 0x0, 0x0);
        gbc.writeMem(0x1c1f, { 0xbb });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x72cc, gbc.sp());
        EXPECT(0x1c20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0071
        gbc.setState(0xe04a, 0x399b, 0xb5f0, 0x60b2, 0x634a, 0x8081, 0x1, 0x1);
        gbc.writeMem(0xe04a, { 0xbb });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x399b, gbc.sp());
        EXPECT(0xe04b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xe04a));
        // BB 0072
        gbc.setState(0x746a, 0x818e, 0x7030, 0x9796, 0x5471, 0x5d97, 0x1, 0x1);
        gbc.writeMem(0x746a, { 0xbb });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x818e, gbc.sp());
        EXPECT(0x746b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0073
        gbc.setState(0x30ae, 0xa832, 0x4130, 0x9e84, 0xb554, 0x3d96, 0x0, 0x1);
        gbc.writeMem(0x30ae, { 0xbb });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xa832, gbc.sp());
        EXPECT(0x30af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0074
        gbc.setState(0x9fed, 0xcb93, 0x6620, 0x689f, 0x8943, 0x1f9a, 0x0, 0x1);
        gbc.writeMem(0x9fed, { 0xbb });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xcb93, gbc.sp());
        EXPECT(0x9fee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x9fed));
        // BB 0075
        gbc.setState(0x8f7d, 0xbaa3, 0xfdd0, 0x9cb8, 0xb865, 0xfc08, 0x1, 0x1);
        gbc.writeMem(0x8f7d, { 0xbb });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xbaa3, gbc.sp());
        EXPECT(0x8f7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x8f7d));
        // BB 0076
        gbc.setState(0x3a96, 0xae8d, 0x8b70, 0x923a, 0x36e9, 0x51fe, 0x1, 0x0);
        gbc.writeMem(0x3a96, { 0xbb });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xae8d, gbc.sp());
        EXPECT(0x3a97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0077
        gbc.setState(0x9af5, 0x8cac, 0x64a0, 0xd8ca, 0x7550, 0x93d0, 0x1, 0x1);
        gbc.writeMem(0x9af5, { 0xbb });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x8cac, gbc.sp());
        EXPECT(0x9af6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x9af5));
        // BB 0078
        gbc.setState(0x6353, 0x7188, 0x2360, 0xf1bc, 0x6bd5, 0xe7c8, 0x1, 0x0);
        gbc.writeMem(0x6353, { 0xbb });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x7188, gbc.sp());
        EXPECT(0x6354, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0079
        gbc.setState(0x1288, 0x7394, 0x5870, 0x75ee, 0x12b9, 0x95e8, 0x0, 0x0);
        gbc.writeMem(0x1288, { 0xbb });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x7394, gbc.sp());
        EXPECT(0x1289, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 007A
        gbc.setState(0x8b66, 0x3fde, 0x60, 0x25fc, 0xb28c, 0x4bda, 0x1, 0x1);
        gbc.writeMem(0x8b66, { 0xbb });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x3fde, gbc.sp());
        EXPECT(0x8b67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x8b66));
        // BB 007B
        gbc.setState(0x7cd0, 0xb415, 0xfe00, 0x2999, 0x1a18, 0xf7ab, 0x0, 0x1);
        gbc.writeMem(0x7cd0, { 0xbb });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xb415, gbc.sp());
        EXPECT(0x7cd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 007C
        gbc.setState(0x7a4f, 0x9b8f, 0xddc0, 0x12b3, 0xeacc, 0xaf03, 0x0, 0x0);
        gbc.writeMem(0x7a4f, { 0xbb });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x9b8f, gbc.sp());
        EXPECT(0x7a50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 007D
        gbc.setState(0x211, 0x1dde, 0x2640, 0x370b, 0xea5b, 0x4753, 0x0, 0x0);
        gbc.writeMem(0x211, { 0xbb });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x1dde, gbc.sp());
        EXPECT(0x212, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 007E
        gbc.setState(0xce2, 0x8139, 0xd400, 0x4e78, 0x4cfc, 0x52bd, 0x1, 0x0);
        gbc.writeMem(0xce2, { 0xbb });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x8139, gbc.sp());
        EXPECT(0xce3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 007F
        gbc.setState(0x1bbf, 0x3db5, 0xb0c0, 0xe8be, 0xe07b, 0x737d, 0x0, 0x0);
        gbc.writeMem(0x1bbf, { 0xbb });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x3db5, gbc.sp());
        EXPECT(0x1bc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0080
        gbc.setState(0xe96e, 0xd9b8, 0x7a00, 0x3b54, 0xf7f8, 0x9dc2, 0x1, 0x1);
        gbc.writeMem(0xe96e, { 0xbb });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xd9b8, gbc.sp());
        EXPECT(0xe96f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xe96e));
        // BB 0081
        gbc.setState(0x1d80, 0xa378, 0x92f0, 0x4374, 0x92e3, 0x7788, 0x0, 0x1);
        gbc.writeMem(0x1d80, { 0xbb });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xa378, gbc.sp());
        EXPECT(0x1d81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0083
        gbc.setState(0x220f, 0x69d9, 0x53f0, 0xeeac, 0xfc14, 0x595e, 0x0, 0x0);
        gbc.writeMem(0x220f, { 0xbb });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x69d9, gbc.sp());
        EXPECT(0x2210, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0084
        gbc.setState(0xaf25, 0xb379, 0xf1f0, 0x2f2c, 0x6871, 0xe75, 0x0, 0x0);
        gbc.writeMem(0xaf25, { 0xbb });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xb379, gbc.sp());
        EXPECT(0xaf26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xaf25));
        // BB 0085
        gbc.setState(0x8bf8, 0xd81b, 0x2300, 0x86f5, 0x19af, 0xa76b, 0x0, 0x1);
        gbc.writeMem(0x8bf8, { 0xbb });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xd81b, gbc.sp());
        EXPECT(0x8bf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x8bf8));
        // BB 0087
        gbc.setState(0xa017, 0x3575, 0xb360, 0x7e9e, 0x5873, 0x8a50, 0x1, 0x0);
        gbc.writeMem(0xa017, { 0xbb });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x3575, gbc.sp());
        EXPECT(0xa018, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xa017));
        // BB 0089
        gbc.setState(0xd498, 0x64c4, 0x2d40, 0xbbcb, 0xcd6a, 0x1161, 0x0, 0x0);
        gbc.writeMem(0xd498, { 0xbb });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x64c4, gbc.sp());
        EXPECT(0xd499, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xd498));
        // BB 008A
        gbc.setState(0x8e41, 0xbeb6, 0xb510, 0xcd18, 0xc633, 0x9b6, 0x1, 0x1);
        gbc.writeMem(0x8e41, { 0xbb });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xbeb6, gbc.sp());
        EXPECT(0x8e42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x8e41));
        // BB 008B
        gbc.setState(0xdea5, 0x50b1, 0x2c70, 0xe39, 0x4913, 0x428e, 0x1, 0x0);
        gbc.writeMem(0xdea5, { 0xbb });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x50b1, gbc.sp());
        EXPECT(0xdea6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xdea5));
        // BB 008C
        gbc.setState(0xa052, 0x4d89, 0x2740, 0x3816, 0xe879, 0xe1dc, 0x1, 0x1);
        gbc.writeMem(0xa052, { 0xbb });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x4d89, gbc.sp());
        EXPECT(0xa053, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xa052));
        // BB 008D
        gbc.setState(0x43ab, 0xe180, 0x1e50, 0x792d, 0x51f3, 0xc523, 0x0, 0x1);
        gbc.writeMem(0x43ab, { 0xbb });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xe180, gbc.sp());
        EXPECT(0x43ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 008E
        gbc.setState(0xba42, 0x2e23, 0x4e90, 0x46cf, 0x1e96, 0x89e4, 0x1, 0x1);
        gbc.writeMem(0xba42, { 0xbb });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x2e23, gbc.sp());
        EXPECT(0xba43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xba42));
        // BB 008F
        gbc.setState(0x7074, 0x136b, 0xcce0, 0x5b90, 0xa9f6, 0x10a4, 0x0, 0x1);
        gbc.writeMem(0x7074, { 0xbb });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x136b, gbc.sp());
        EXPECT(0x7075, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0090
        gbc.setState(0x4bf8, 0x8abd, 0x5640, 0x104b, 0x36a, 0x830d, 0x1, 0x1);
        gbc.writeMem(0x4bf8, { 0xbb });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x8abd, gbc.sp());
        EXPECT(0x4bf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0091
        gbc.setState(0xa35b, 0x5fa0, 0xba30, 0x19c4, 0x9add, 0x4cec, 0x0, 0x0);
        gbc.writeMem(0xa35b, { 0xbb });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x5fa0, gbc.sp());
        EXPECT(0xa35c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xa35b));
        // BB 0092
        gbc.setState(0x9402, 0x9fa7, 0x9340, 0x5a6b, 0x6e90, 0xe755, 0x0, 0x0);
        gbc.writeMem(0x9402, { 0xbb });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x9fa7, gbc.sp());
        EXPECT(0x9403, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x9402));
        // BB 0093
        gbc.setState(0x7d02, 0x52be, 0x1b60, 0x128f, 0x281, 0x5b31, 0x1, 0x0);
        gbc.writeMem(0x7d02, { 0xbb });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x52be, gbc.sp());
        EXPECT(0x7d03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0094
        gbc.setState(0x963, 0x9f8, 0x2990, 0x9e07, 0x44b7, 0x9728, 0x0, 0x1);
        gbc.writeMem(0x963, { 0xbb });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x9f8, gbc.sp());
        EXPECT(0x964, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0095
        gbc.setState(0x6d01, 0x2cb, 0xd7f0, 0xe28d, 0x8e10, 0xdfeb, 0x0, 0x0);
        gbc.writeMem(0x6d01, { 0xbb });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x2cb, gbc.sp());
        EXPECT(0x6d02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0097
        gbc.setState(0xc288, 0xbccc, 0x5760, 0xcad6, 0x3846, 0x5168, 0x0, 0x1);
        gbc.writeMem(0xc288, { 0xbb });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xbccc, gbc.sp());
        EXPECT(0xc289, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xc288));
        // BB 0098
        gbc.setState(0x4612, 0xecb9, 0x13b0, 0xcf3f, 0xd1de, 0x1a79, 0x1, 0x0);
        gbc.writeMem(0x4612, { 0xbb });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xecb9, gbc.sp());
        EXPECT(0x4613, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0099
        gbc.setState(0x8bb7, 0x5d1f, 0xa4b0, 0xb242, 0x3803, 0x3ecd, 0x1, 0x1);
        gbc.writeMem(0x8bb7, { 0xbb });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x5d1f, gbc.sp());
        EXPECT(0x8bb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x8bb7));
        // BB 009A
        gbc.setState(0x1e68, 0x40db, 0xcbd0, 0xca27, 0xd140, 0x310a, 0x1, 0x1);
        gbc.writeMem(0x1e68, { 0xbb });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x40db, gbc.sp());
        EXPECT(0x1e69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 009B
        gbc.setState(0x7589, 0x4723, 0x4c00, 0xf43b, 0x953b, 0xfc62, 0x1, 0x1);
        gbc.writeMem(0x7589, { 0xbb });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x4723, gbc.sp());
        EXPECT(0x758a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 009C
        gbc.setState(0xe7ed, 0x3651, 0xc1c0, 0x4f3c, 0xee90, 0xb3fc, 0x1, 0x1);
        gbc.writeMem(0xe7ed, { 0xbb });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x3651, gbc.sp());
        EXPECT(0xe7ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xe7ed));
        // BB 009D
        gbc.setState(0xf0d, 0x21b6, 0xdab0, 0x1ba4, 0x84d6, 0xcf6e, 0x0, 0x1);
        gbc.writeMem(0xf0d, { 0xbb });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x21b6, gbc.sp());
        EXPECT(0xf0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 009F
        gbc.setState(0x944d, 0x76ce, 0x1ff0, 0x7724, 0xfe89, 0x602b, 0x1, 0x1);
        gbc.writeMem(0x944d, { 0xbb });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x76ce, gbc.sp());
        EXPECT(0x944e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x944d));
        // BB 00A0
        gbc.setState(0x41f0, 0xf084, 0x8580, 0x3261, 0xe01, 0xf553, 0x0, 0x0);
        gbc.writeMem(0x41f0, { 0xbb });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xf084, gbc.sp());
        EXPECT(0x41f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 00A1
        gbc.setState(0x2a0e, 0x8170, 0xa310, 0x4a9c, 0xd7a3, 0xf7ab, 0x1, 0x1);
        gbc.writeMem(0x2a0e, { 0xbb });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x8170, gbc.sp());
        EXPECT(0x2a0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 00A2
        gbc.setState(0x1822, 0x254, 0x2c90, 0x1425, 0x1687, 0x2ae4, 0x0, 0x0);
        gbc.writeMem(0x1822, { 0xbb });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x254, gbc.sp());
        EXPECT(0x1823, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 00A3
        gbc.setState(0x747e, 0x849a, 0x2c50, 0x9544, 0x2b46, 0xb52d, 0x1, 0x0);
        gbc.writeMem(0x747e, { 0xbb });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x849a, gbc.sp());
        EXPECT(0x747f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 00A4
        gbc.setState(0x3352, 0xfeb0, 0x7ea0, 0x9b98, 0x7dc2, 0x279d, 0x0, 0x1);
        gbc.writeMem(0x3352, { 0xbb });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xfeb0, gbc.sp());
        EXPECT(0x3353, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 00A5
        gbc.setState(0x5573, 0xf5dd, 0xd40, 0x8c61, 0x58f3, 0x29b2, 0x1, 0x0);
        gbc.writeMem(0x5573, { 0xbb });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xf5dd, gbc.sp());
        EXPECT(0x5574, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 00A6
        gbc.setState(0x5e77, 0x4ca9, 0x8010, 0x59a0, 0x902e, 0x8568, 0x1, 0x1);
        gbc.writeMem(0x5e77, { 0xbb });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x4ca9, gbc.sp());
        EXPECT(0x5e78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 00A8
        gbc.setState(0xa706, 0xfdbc, 0xc840, 0xd9f, 0x309e, 0x2ab1, 0x0, 0x1);
        gbc.writeMem(0xa706, { 0xbb });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xfdbc, gbc.sp());
        EXPECT(0xa707, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xa706));
        // BB 00A9
        gbc.setState(0xe645, 0x30f8, 0xba40, 0x28d6, 0x7cf4, 0xff7d, 0x0, 0x0);
        gbc.writeMem(0xe645, { 0xbb });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x30f8, gbc.sp());
        EXPECT(0xe646, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xe645));
        // BB 00AA
        gbc.setState(0x6290, 0x2267, 0xcd30, 0xd933, 0xf166, 0x6c70, 0x0, 0x0);
        gbc.writeMem(0x6290, { 0xbb });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x2267, gbc.sp());
        EXPECT(0x6291, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 00AB
        gbc.setState(0xb73d, 0x66cf, 0x9aa0, 0x9b36, 0x19a2, 0xb700, 0x1, 0x1);
        gbc.writeMem(0xb73d, { 0xbb });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x66cf, gbc.sp());
        EXPECT(0xb73e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xb73d));
        // BB 00AD
        gbc.setState(0xa5ca, 0xaf2c, 0xb570, 0x63af, 0x8698, 0x4476, 0x1, 0x0);
        gbc.writeMem(0xa5ca, { 0xbb });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xaf2c, gbc.sp());
        EXPECT(0xa5cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xa5ca));
        // BB 00AE
        gbc.setState(0x6d33, 0x8e1c, 0xc880, 0x2511, 0x1ada, 0xff62, 0x1, 0x0);
        gbc.writeMem(0x6d33, { 0xbb });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x8e1c, gbc.sp());
        EXPECT(0x6d34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 00AF
        gbc.setState(0x1570, 0xb7a3, 0xb60, 0x7703, 0xbf96, 0x93dd, 0x1, 0x1);
        gbc.writeMem(0x1570, { 0xbb });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xb7a3, gbc.sp());
        EXPECT(0x1571, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 00B0
        gbc.setState(0x2e30, 0x7ea4, 0x2a70, 0xc76f, 0xbb63, 0x92d2, 0x0, 0x1);
        gbc.writeMem(0x2e30, { 0xbb });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x7ea4, gbc.sp());
        EXPECT(0x2e31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 00B1
        gbc.setState(0x4806, 0xce29, 0xfa0, 0xe2cb, 0x7cbe, 0xd586, 0x1, 0x0);
        gbc.writeMem(0x4806, { 0xbb });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xce29, gbc.sp());
        EXPECT(0x4807, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 00B2
        gbc.setState(0xc6b6, 0x5431, 0x5870, 0x26be, 0xb2d, 0x6648, 0x1, 0x1);
        gbc.writeMem(0xc6b6, { 0xbb });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x5431, gbc.sp());
        EXPECT(0xc6b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xc6b6));
        // BB 00B3
        gbc.setState(0x945b, 0xf7a9, 0x2ec0, 0xd28a, 0x624b, 0x5bfa, 0x0, 0x1);
        gbc.writeMem(0x945b, { 0xbb });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xf7a9, gbc.sp());
        EXPECT(0x945c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x945b));
        // BB 00B4
        gbc.setState(0xcf5c, 0xcc78, 0x47e0, 0x3bc2, 0x48ea, 0x1ee0, 0x0, 0x0);
        gbc.writeMem(0xcf5c, { 0xbb });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xcc78, gbc.sp());
        EXPECT(0xcf5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xcf5c));
        // BB 00B5
        gbc.setState(0x2f6f, 0xcd47, 0xd400, 0xbfe5, 0xb30d, 0xcef, 0x0, 0x1);
        gbc.writeMem(0x2f6f, { 0xbb });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xcd47, gbc.sp());
        EXPECT(0x2f70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 00B6
        gbc.setState(0x3e17, 0xc392, 0xf850, 0x6b1b, 0x6861, 0xfd73, 0x1, 0x0);
        gbc.writeMem(0x3e17, { 0xbb });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xc392, gbc.sp());
        EXPECT(0x3e18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 00B7
        gbc.setState(0xbf7f, 0xca3a, 0xe0c0, 0x76f8, 0x6a17, 0xe0b, 0x0, 0x0);
        gbc.writeMem(0xbf7f, { 0xbb });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xca3a, gbc.sp());
        EXPECT(0xbf80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xbf7f));
        // BB 00B8
        gbc.setState(0x7531, 0x87a6, 0x87c0, 0x5bc1, 0xea75, 0xadbd, 0x1, 0x1);
        gbc.writeMem(0x7531, { 0xbb });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x87a6, gbc.sp());
        EXPECT(0x7532, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 00B9
        gbc.setState(0x70d8, 0x7a93, 0xe7c0, 0x6efe, 0xa75d, 0x55fb, 0x1, 0x1);
        gbc.writeMem(0x70d8, { 0xbb });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x7a93, gbc.sp());
        EXPECT(0x70d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 00BA
        gbc.setState(0x4b11, 0xf8c8, 0xa8b0, 0xd101, 0x4747, 0xa288, 0x1, 0x1);
        gbc.writeMem(0x4b11, { 0xbb });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xf8c8, gbc.sp());
        EXPECT(0x4b12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 00BB
        gbc.setState(0xed95, 0xc143, 0xba0, 0x2899, 0xd18d, 0x2ebb, 0x0, 0x1);
        gbc.writeMem(0xed95, { 0xbb });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xc143, gbc.sp());
        EXPECT(0xed96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xed95));
        // BB 00BC
        gbc.setState(0x2851, 0x1634, 0x3590, 0xdcbd, 0x65b3, 0x87c7, 0x0, 0x1);
        gbc.writeMem(0x2851, { 0xbb });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x1634, gbc.sp());
        EXPECT(0x2852, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 00BD
        gbc.setState(0xb872, 0x237f, 0xfc0, 0x187d, 0x961f, 0x7fc, 0x1, 0x0);
        gbc.writeMem(0xb872, { 0xbb });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x237f, gbc.sp());
        EXPECT(0xb873, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xb872));
        // BB 00BE
        gbc.setState(0xa205, 0x99d2, 0xd830, 0x3d53, 0x7204, 0xa281, 0x0, 0x0);
        gbc.writeMem(0xa205, { 0xbb });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x99d2, gbc.sp());
        EXPECT(0xa206, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xa205));
        // BB 00BF
        gbc.setState(0xc1e3, 0xd447, 0x9440, 0x5578, 0xca2a, 0x8935, 0x0, 0x0);
        gbc.writeMem(0xc1e3, { 0xbb });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xd447, gbc.sp());
        EXPECT(0xc1e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xc1e3));
        // BB 00C0
        gbc.setState(0xe22, 0x8617, 0x1f50, 0x8acf, 0x9ea8, 0x1e97, 0x0, 0x0);
        gbc.writeMem(0xe22, { 0xbb });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x8617, gbc.sp());
        EXPECT(0xe23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 00C1
        gbc.setState(0xefb3, 0x8c88, 0xa9b0, 0xd6fe, 0xc23, 0xfdbf, 0x0, 0x0);
        gbc.writeMem(0xefb3, { 0xbb });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x8c88, gbc.sp());
        EXPECT(0xefb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xefb3));
        // BB 00C2
        gbc.setState(0x72dd, 0xae44, 0xb5d0, 0x4b87, 0xff8a, 0x359d, 0x0, 0x0);
        gbc.writeMem(0x72dd, { 0xbb });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xae44, gbc.sp());
        EXPECT(0x72de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 00C3
        gbc.setState(0x3474, 0xd2a, 0xfa40, 0xa83a, 0xc733, 0x11da, 0x0, 0x1);
        gbc.writeMem(0x3474, { 0xbb });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xd2a, gbc.sp());
        EXPECT(0x3475, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 00C4
        gbc.setState(0x7742, 0x530, 0xd8f0, 0x630, 0xd9aa, 0xc5cd, 0x0, 0x1);
        gbc.writeMem(0x7742, { 0xbb });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x530, gbc.sp());
        EXPECT(0x7743, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 00C5
        gbc.setState(0x2e63, 0xbd0a, 0x1da0, 0x17a, 0xcdb4, 0xfd5b, 0x1, 0x1);
        gbc.writeMem(0x2e63, { 0xbb });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xbd0a, gbc.sp());
        EXPECT(0x2e64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 00C6
        gbc.setState(0xce27, 0xd45d, 0x1180, 0x6278, 0xeaee, 0x350, 0x1, 0x1);
        gbc.writeMem(0xce27, { 0xbb });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xd45d, gbc.sp());
        EXPECT(0xce28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xce27));
        // BB 00C8
        gbc.setState(0x8833, 0x8bfe, 0x9750, 0xc573, 0xa4b0, 0x4072, 0x1, 0x0);
        gbc.writeMem(0x8833, { 0xbb });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x8bfe, gbc.sp());
        EXPECT(0x8834, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x8833));
        // BB 00C9
        gbc.setState(0xc7b2, 0x27e8, 0xc1b0, 0x3ab, 0xa492, 0xa6c1, 0x0, 0x1);
        gbc.writeMem(0xc7b2, { 0xbb });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x27e8, gbc.sp());
        EXPECT(0xc7b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xc7b2));
        // BB 00CA
        gbc.setState(0xc822, 0x2b7b, 0x9510, 0xa474, 0x114b, 0x3487, 0x1, 0x0);
        gbc.writeMem(0xc822, { 0xbb });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x2b7b, gbc.sp());
        EXPECT(0xc823, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xc822));
        // BB 00CB
        gbc.setState(0x5a0c, 0x680d, 0xc720, 0x17e6, 0x402b, 0x768f, 0x1, 0x1);
        gbc.writeMem(0x5a0c, { 0xbb });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x680d, gbc.sp());
        EXPECT(0x5a0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 00CC
        gbc.setState(0x27c, 0xf7b7, 0x8cb0, 0x6111, 0xaef2, 0x7af1, 0x1, 0x1);
        gbc.writeMem(0x27c, { 0xbb });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xf7b7, gbc.sp());
        EXPECT(0x27d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 00CD
        gbc.setState(0x253b, 0x4572, 0x8520, 0xf0a2, 0xc2b4, 0x117b, 0x1, 0x0);
        gbc.writeMem(0x253b, { 0xbb });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x4572, gbc.sp());
        EXPECT(0x253c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 00CE
        gbc.setState(0x1cb2, 0x95b1, 0xc520, 0x3cd3, 0xda96, 0x84f0, 0x1, 0x1);
        gbc.writeMem(0x1cb2, { 0xbb });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x95b1, gbc.sp());
        EXPECT(0x1cb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 00CF
        gbc.setState(0x915f, 0x4017, 0xbcb0, 0xdeba, 0x696d, 0x5592, 0x1, 0x1);
        gbc.writeMem(0x915f, { 0xbb });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x4017, gbc.sp());
        EXPECT(0x9160, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x915f));
        // BB 00D0
        gbc.setState(0x83c4, 0x9eaa, 0x8450, 0x241e, 0x1d02, 0x4608, 0x0, 0x0);
        gbc.writeMem(0x83c4, { 0xbb });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x9eaa, gbc.sp());
        EXPECT(0x83c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x83c4));
        // BB 00D1
        gbc.setState(0x3d81, 0x5503, 0x30d0, 0xa3b7, 0x55dd, 0x5f48, 0x1, 0x0);
        gbc.writeMem(0x3d81, { 0xbb });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x5503, gbc.sp());
        EXPECT(0x3d82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 00D2
        gbc.setState(0x53f3, 0x1503, 0x7660, 0xa1a1, 0xd3f2, 0xaa2d, 0x1, 0x1);
        gbc.writeMem(0x53f3, { 0xbb });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x1503, gbc.sp());
        EXPECT(0x53f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 00D3
        gbc.setState(0xee96, 0x809a, 0x2bb0, 0x6e31, 0x2601, 0x7be4, 0x0, 0x0);
        gbc.writeMem(0xee96, { 0xbb });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x809a, gbc.sp());
        EXPECT(0xee97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xee96));
        // BB 00D4
        gbc.setState(0x2188, 0x9efd, 0x2810, 0xf205, 0x241f, 0x4528, 0x1, 0x1);
        gbc.writeMem(0x2188, { 0xbb });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x9efd, gbc.sp());
        EXPECT(0x2189, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 00D5
        gbc.setState(0x2bc1, 0x9e9d, 0x8e20, 0xe8df, 0xa42e, 0xf1ac, 0x1, 0x0);
        gbc.writeMem(0x2bc1, { 0xbb });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x9e9d, gbc.sp());
        EXPECT(0x2bc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 00D6
        gbc.setState(0x7a3, 0x1f68, 0x8f20, 0x4d6, 0x91c3, 0xe0ba, 0x1, 0x1);
        gbc.writeMem(0x7a3, { 0xbb });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x1f68, gbc.sp());
        EXPECT(0x7a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 00D7
        gbc.setState(0xba6d, 0x44b5, 0xa5c0, 0xeeaa, 0x81f4, 0x32d8, 0x0, 0x0);
        gbc.writeMem(0xba6d, { 0xbb });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x44b5, gbc.sp());
        EXPECT(0xba6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xba6d));
        // BB 00D8
        gbc.setState(0xb6fb, 0x50b3, 0x9910, 0x37a1, 0x9d71, 0x2f8f, 0x1, 0x0);
        gbc.writeMem(0xb6fb, { 0xbb });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x50b3, gbc.sp());
        EXPECT(0xb6fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xb6fb));
        // BB 00D9
        gbc.setState(0xaf9e, 0x5edd, 0xec40, 0x74d, 0x2cb2, 0x86ef, 0x1, 0x0);
        gbc.writeMem(0xaf9e, { 0xbb });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x5edd, gbc.sp());
        EXPECT(0xaf9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xaf9e));
        // BB 00DA
        gbc.setState(0x6c3c, 0x2485, 0x8400, 0x4e78, 0xdde, 0x3635, 0x1, 0x1);
        gbc.writeMem(0x6c3c, { 0xbb });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x2485, gbc.sp());
        EXPECT(0x6c3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 00DB
        gbc.setState(0xa24e, 0x7343, 0xd490, 0xf366, 0xb92e, 0xc341, 0x1, 0x0);
        gbc.writeMem(0xa24e, { 0xbb });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x7343, gbc.sp());
        EXPECT(0xa24f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xa24e));
        // BB 00DC
        gbc.setState(0x7219, 0x401e, 0xaa20, 0x21b5, 0x112f, 0xe6c8, 0x1, 0x1);
        gbc.writeMem(0x7219, { 0xbb });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x401e, gbc.sp());
        EXPECT(0x721a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 00DD
        gbc.setState(0xdb14, 0xd891, 0x2370, 0x901b, 0xadc5, 0xad4f, 0x0, 0x1);
        gbc.writeMem(0xdb14, { 0xbb });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xd891, gbc.sp());
        EXPECT(0xdb15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xdb14));
        // BB 00DE
        gbc.setState(0xeb36, 0xaa1c, 0x3ae0, 0xc9e2, 0x5915, 0x1119, 0x1, 0x0);
        gbc.writeMem(0xeb36, { 0xbb });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xaa1c, gbc.sp());
        EXPECT(0xeb37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xeb36));
        // BB 00DF
        gbc.setState(0x9115, 0xbcca, 0x6990, 0x1eea, 0xd8e9, 0x8b3b, 0x0, 0x0);
        gbc.writeMem(0x9115, { 0xbb });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xbcca, gbc.sp());
        EXPECT(0x9116, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x9115));
        // BB 00E0
        gbc.setState(0x954, 0xf63b, 0x2470, 0x218d, 0x4f4d, 0xa39f, 0x0, 0x0);
        gbc.writeMem(0x954, { 0xbb });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xf63b, gbc.sp());
        EXPECT(0x955, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 00E1
        gbc.setState(0xe01d, 0xcd2, 0xd60, 0x1cb9, 0xf567, 0x8827, 0x1, 0x1);
        gbc.writeMem(0xe01d, { 0xbb });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xcd2, gbc.sp());
        EXPECT(0xe01e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xe01d));
        // BB 00E2
        gbc.setState(0x526a, 0x857, 0xfbd0, 0x8d21, 0x969e, 0x96db, 0x0, 0x0);
        gbc.writeMem(0x526a, { 0xbb });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x857, gbc.sp());
        EXPECT(0x526b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 00E3
        gbc.setState(0x581, 0xa24e, 0x4720, 0x79cd, 0xac97, 0x5516, 0x0, 0x0);
        gbc.writeMem(0x581, { 0xbb });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xa24e, gbc.sp());
        EXPECT(0x582, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 00E5
        gbc.setState(0x4cd3, 0x8bc1, 0xb8d0, 0x75d6, 0x1cc7, 0xa45b, 0x1, 0x0);
        gbc.writeMem(0x4cd3, { 0xbb });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x8bc1, gbc.sp());
        EXPECT(0x4cd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 00E6
        gbc.setState(0x8935, 0x7314, 0xacc0, 0xae9a, 0xa2a, 0x417a, 0x0, 0x0);
        gbc.writeMem(0x8935, { 0xbb });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x7314, gbc.sp());
        EXPECT(0x8936, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x8935));
        // BB 00E7
        gbc.setState(0x81ea, 0x3e1b, 0xb420, 0xb7c5, 0x4f8, 0x6665, 0x1, 0x1);
        gbc.writeMem(0x81ea, { 0xbb });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x3e1b, gbc.sp());
        EXPECT(0x81eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x81ea));
        // BB 00E8
        gbc.setState(0x2060, 0xfe3c, 0xc520, 0xfb13, 0x5caf, 0xc8dd, 0x1, 0x1);
        gbc.writeMem(0x2060, { 0xbb });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xfe3c, gbc.sp());
        EXPECT(0x2061, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 00E9
        gbc.setState(0x4072, 0x2137, 0x6620, 0xb1a7, 0x4726, 0x8a2e, 0x0, 0x1);
        gbc.writeMem(0x4072, { 0xbb });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x2137, gbc.sp());
        EXPECT(0x4073, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 00EA
        gbc.setState(0xe5d3, 0x76ef, 0x44e0, 0x3ff2, 0x3bc6, 0x6c48, 0x0, 0x1);
        gbc.writeMem(0xe5d3, { 0xbb });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x76ef, gbc.sp());
        EXPECT(0xe5d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xe5d3));
        // BB 00EB
        gbc.setState(0x6d13, 0x5c8c, 0xf7d0, 0x207b, 0x29b8, 0xc977, 0x0, 0x1);
        gbc.writeMem(0x6d13, { 0xbb });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x5c8c, gbc.sp());
        EXPECT(0x6d14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 00EC
        gbc.setState(0xc195, 0xd551, 0xdaf0, 0x5924, 0x6455, 0x8a45, 0x0, 0x1);
        gbc.writeMem(0xc195, { 0xbb });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xd551, gbc.sp());
        EXPECT(0xc196, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xc195));
        // BB 00ED
        gbc.setState(0x7044, 0xec46, 0xede0, 0xc803, 0x5239, 0xc955, 0x0, 0x1);
        gbc.writeMem(0x7044, { 0xbb });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xec46, gbc.sp());
        EXPECT(0x7045, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 00EE
        gbc.setState(0x4af, 0xc994, 0x6890, 0x7981, 0x6626, 0x9da5, 0x0, 0x0);
        gbc.writeMem(0x4af, { 0xbb });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xc994, gbc.sp());
        EXPECT(0x4b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 00EF
        gbc.setState(0x68e7, 0xede0, 0xdfc0, 0x7027, 0x40d0, 0x786d, 0x0, 0x0);
        gbc.writeMem(0x68e7, { 0xbb });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xede0, gbc.sp());
        EXPECT(0x68e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 00F0
        gbc.setState(0xc683, 0xf1ff, 0xc870, 0x557, 0x33aa, 0x7010, 0x1, 0x0);
        gbc.writeMem(0xc683, { 0xbb });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xf1ff, gbc.sp());
        EXPECT(0xc684, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xc683));
        // BB 00F1
        gbc.setState(0xd07a, 0x75d7, 0x8b00, 0x6e7a, 0x7b62, 0xc2f5, 0x0, 0x0);
        gbc.writeMem(0xd07a, { 0xbb });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x75d7, gbc.sp());
        EXPECT(0xd07b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xd07a));
        // BB 00F2
        gbc.setState(0xc5c9, 0x8942, 0x2d20, 0xf471, 0x7528, 0x784e, 0x1, 0x1);
        gbc.writeMem(0xc5c9, { 0xbb });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x8942, gbc.sp());
        EXPECT(0xc5ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xc5c9));
        // BB 00F3
        gbc.setState(0x3bb5, 0x6b9, 0xa680, 0xdd0e, 0xd5af, 0x2603, 0x0, 0x0);
        gbc.writeMem(0x3bb5, { 0xbb });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x6b9, gbc.sp());
        EXPECT(0x3bb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 00F4
        gbc.setState(0x8dc0, 0xa2b7, 0x3080, 0x2415, 0xe119, 0xa0f2, 0x0, 0x0);
        gbc.writeMem(0x8dc0, { 0xbb });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xa2b7, gbc.sp());
        EXPECT(0x8dc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x8dc0));
        // BB 00F5
        gbc.setState(0xbfe9, 0x76db, 0x5a50, 0x3732, 0xc480, 0x38b9, 0x0, 0x1);
        gbc.writeMem(0xbfe9, { 0xbb });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x76db, gbc.sp());
        EXPECT(0xbfea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xbfe9));
        // BB 00F6
        gbc.setState(0x39ec, 0xa07c, 0xa610, 0xc766, 0xbe10, 0x9417, 0x1, 0x1);
        gbc.writeMem(0x39ec, { 0xbb });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xa07c, gbc.sp());
        EXPECT(0x39ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 00F7
        gbc.setState(0x2ce2, 0x5a98, 0xace0, 0x5cc6, 0x26c8, 0x8ffb, 0x0, 0x1);
        gbc.writeMem(0x2ce2, { 0xbb });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x5a98, gbc.sp());
        EXPECT(0x2ce3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 00F8
        gbc.setState(0x2e72, 0xdcbe, 0xa050, 0xa10c, 0x8e35, 0xe8f8, 0x0, 0x0);
        gbc.writeMem(0x2e72, { 0xbb });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xdcbe, gbc.sp());
        EXPECT(0x2e73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 00F9
        gbc.setState(0x2324, 0x3388, 0x43d0, 0x829d, 0x69d6, 0x4f74, 0x1, 0x0);
        gbc.writeMem(0x2324, { 0xbb });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x3388, gbc.sp());
        EXPECT(0x2325, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 00FA
        gbc.setState(0x6608, 0xd459, 0x9de0, 0x978, 0xaa8c, 0xd4e8, 0x0, 0x1);
        gbc.writeMem(0x6608, { 0xbb });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xd459, gbc.sp());
        EXPECT(0x6609, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 00FB
        gbc.setState(0x1199, 0xf79b, 0xaeb0, 0x70b4, 0xa061, 0x328, 0x0, 0x0);
        gbc.writeMem(0x1199, { 0xbb });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xf79b, gbc.sp());
        EXPECT(0x119a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 00FC
        gbc.setState(0x4e50, 0x4577, 0xda00, 0x1930, 0x9104, 0x212, 0x1, 0x0);
        gbc.writeMem(0x4e50, { 0xbb });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x4577, gbc.sp());
        EXPECT(0x4e51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 00FD
        gbc.setState(0xea75, 0xa3b5, 0xbb60, 0xbcd4, 0xc4f0, 0x516e, 0x1, 0x0);
        gbc.writeMem(0xea75, { 0xbb });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xa3b5, gbc.sp());
        EXPECT(0xea76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xea75));
        // BB 00FE
        gbc.setState(0xe585, 0x5d68, 0x7290, 0xafb5, 0x63e7, 0x75be, 0x0, 0x0);
        gbc.writeMem(0xe585, { 0xbb });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x5d68, gbc.sp());
        EXPECT(0xe586, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xe585));
        // BB 00FF
        gbc.setState(0x2fe, 0xf722, 0xfc40, 0x554, 0x9f87, 0xfb3f, 0x1, 0x0);
        gbc.writeMem(0x2fe, { 0xbb });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xf722, gbc.sp());
        EXPECT(0x2ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0100
        gbc.setState(0xc2cb, 0xa28, 0xed70, 0xa81, 0xeee1, 0x7122, 0x1, 0x1);
        gbc.writeMem(0xc2cb, { 0xbb });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xa28, gbc.sp());
        EXPECT(0xc2cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xc2cb));
        // BB 0101
        gbc.setState(0x39f4, 0xc45b, 0x6160, 0x4987, 0xb22d, 0xfc6f, 0x0, 0x0);
        gbc.writeMem(0x39f4, { 0xbb });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xc45b, gbc.sp());
        EXPECT(0x39f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0102
        gbc.setState(0x26a6, 0x519c, 0x24c0, 0xac30, 0xc6b5, 0x3631, 0x1, 0x0);
        gbc.writeMem(0x26a6, { 0xbb });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x519c, gbc.sp());
        EXPECT(0x26a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0103
        gbc.setState(0x809, 0x1017, 0x1990, 0x5f82, 0xcb52, 0x6a2a, 0x0, 0x1);
        gbc.writeMem(0x809, { 0xbb });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x1017, gbc.sp());
        EXPECT(0x80a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0104
        gbc.setState(0x20d9, 0x5fe0, 0x8140, 0xa322, 0xcffc, 0x264e, 0x0, 0x0);
        gbc.writeMem(0x20d9, { 0xbb });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x5fe0, gbc.sp());
        EXPECT(0x20da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0106
        gbc.setState(0x4ae4, 0xa99a, 0x9590, 0x36e4, 0xed8b, 0x880f, 0x0, 0x1);
        gbc.writeMem(0x4ae4, { 0xbb });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xa99a, gbc.sp());
        EXPECT(0x4ae5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0107
        gbc.setState(0x74a4, 0xf1ae, 0xe710, 0xd77a, 0x40c0, 0xdd0e, 0x1, 0x1);
        gbc.writeMem(0x74a4, { 0xbb });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xf1ae, gbc.sp());
        EXPECT(0x74a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0109
        gbc.setState(0x1240, 0x3eca, 0xf3e0, 0xe355, 0xb451, 0x6e33, 0x0, 0x0);
        gbc.writeMem(0x1240, { 0xbb });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x3eca, gbc.sp());
        EXPECT(0x1241, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 010A
        gbc.setState(0x6f6, 0xc12a, 0x6ba0, 0xc298, 0xb42e, 0xd1e5, 0x0, 0x1);
        gbc.writeMem(0x6f6, { 0xbb });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xc12a, gbc.sp());
        EXPECT(0x6f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 010B
        gbc.setState(0xac26, 0xe2a0, 0x1770, 0x293c, 0xcef1, 0xd1d7, 0x0, 0x0);
        gbc.writeMem(0xac26, { 0xbb });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xe2a0, gbc.sp());
        EXPECT(0xac27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xac26));
        // BB 010C
        gbc.setState(0x56ae, 0x5a26, 0xac70, 0x3dba, 0x3f93, 0x269a, 0x0, 0x0);
        gbc.writeMem(0x56ae, { 0xbb });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x5a26, gbc.sp());
        EXPECT(0x56af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 010D
        gbc.setState(0x9ded, 0x9122, 0xfa0, 0x6a04, 0xfbd4, 0x4ba5, 0x1, 0x1);
        gbc.writeMem(0x9ded, { 0xbb });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x9122, gbc.sp());
        EXPECT(0x9dee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x9ded));
        // BB 010E
        gbc.setState(0x72f7, 0x1838, 0xb2a0, 0xd6f7, 0x23d0, 0x7a7a, 0x0, 0x0);
        gbc.writeMem(0x72f7, { 0xbb });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x1838, gbc.sp());
        EXPECT(0x72f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 010F
        gbc.setState(0x6010, 0x176b, 0xc0e0, 0x226c, 0x69f3, 0xeeec, 0x0, 0x0);
        gbc.writeMem(0x6010, { 0xbb });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x176b, gbc.sp());
        EXPECT(0x6011, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0110
        gbc.setState(0x2804, 0x43e6, 0xe890, 0x139, 0x290f, 0xce49, 0x1, 0x0);
        gbc.writeMem(0x2804, { 0xbb });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x43e6, gbc.sp());
        EXPECT(0x2805, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0111
        gbc.setState(0xaaf5, 0xa0c6, 0x4d90, 0x6ee3, 0xe8bf, 0x2d1a, 0x1, 0x0);
        gbc.writeMem(0xaaf5, { 0xbb });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xa0c6, gbc.sp());
        EXPECT(0xaaf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xaaf5));
        // BB 0113
        gbc.setState(0x91e1, 0x9ed2, 0xba50, 0x126b, 0xdbc1, 0x25d4, 0x1, 0x0);
        gbc.writeMem(0x91e1, { 0xbb });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x9ed2, gbc.sp());
        EXPECT(0x91e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x91e1));
        // BB 0114
        gbc.setState(0xcb56, 0xb7f2, 0xa4e0, 0x2ebb, 0x3ec9, 0x3377, 0x0, 0x1);
        gbc.writeMem(0xcb56, { 0xbb });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xb7f2, gbc.sp());
        EXPECT(0xcb57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xcb56));
        // BB 0115
        gbc.setState(0xa1ad, 0x9444, 0x4d50, 0x1ec3, 0xc2ab, 0x2872, 0x1, 0x1);
        gbc.writeMem(0xa1ad, { 0xbb });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x9444, gbc.sp());
        EXPECT(0xa1ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xa1ad));
        // BB 0116
        gbc.setState(0x6735, 0x230d, 0xb520, 0x96b2, 0x5456, 0x5fd1, 0x1, 0x0);
        gbc.writeMem(0x6735, { 0xbb });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x230d, gbc.sp());
        EXPECT(0x6736, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0117
        gbc.setState(0x2bcd, 0x211d, 0x29f0, 0x11f, 0x39ff, 0xb2af, 0x1, 0x1);
        gbc.writeMem(0x2bcd, { 0xbb });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x211d, gbc.sp());
        EXPECT(0x2bce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0118
        gbc.setState(0x6168, 0x12e3, 0x8d00, 0xa1d, 0xa6f9, 0xd26d, 0x0, 0x0);
        gbc.writeMem(0x6168, { 0xbb });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x12e3, gbc.sp());
        EXPECT(0x6169, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0119
        gbc.setState(0x30d1, 0x31e2, 0xaff0, 0xd9c0, 0x1721, 0xedf3, 0x1, 0x1);
        gbc.writeMem(0x30d1, { 0xbb });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x31e2, gbc.sp());
        EXPECT(0x30d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 011A
        gbc.setState(0x2bb, 0x70a6, 0xb9e0, 0x367d, 0x5ccd, 0x23c0, 0x0, 0x0);
        gbc.writeMem(0x2bb, { 0xbb });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x70a6, gbc.sp());
        EXPECT(0x2bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 011B
        gbc.setState(0x218c, 0x36f2, 0xf470, 0x6dba, 0x2aba, 0xc43a, 0x1, 0x1);
        gbc.writeMem(0x218c, { 0xbb });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x36f2, gbc.sp());
        EXPECT(0x218d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 011C
        gbc.setState(0x9ac7, 0x615f, 0xfef0, 0x837b, 0x3adc, 0x63d3, 0x0, 0x1);
        gbc.writeMem(0x9ac7, { 0xbb });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x615f, gbc.sp());
        EXPECT(0x9ac8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x9ac7));
        // BB 011D
        gbc.setState(0x6595, 0x9bad, 0xb020, 0x10d3, 0xb5d2, 0x11ac, 0x0, 0x0);
        gbc.writeMem(0x6595, { 0xbb });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x9bad, gbc.sp());
        EXPECT(0x6596, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 011E
        gbc.setState(0x6506, 0xbaa6, 0x51d0, 0x1037, 0x5c0b, 0x5502, 0x1, 0x0);
        gbc.writeMem(0x6506, { 0xbb });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xbaa6, gbc.sp());
        EXPECT(0x6507, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 011F
        gbc.setState(0x548f, 0x594f, 0xfbc0, 0x2fcd, 0x7561, 0xa8e6, 0x1, 0x0);
        gbc.writeMem(0x548f, { 0xbb });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x594f, gbc.sp());
        EXPECT(0x5490, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0120
        gbc.setState(0xc2be, 0xff1c, 0xdb30, 0x4a5a, 0x654c, 0x108, 0x0, 0x1);
        gbc.writeMem(0xc2be, { 0xbb });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xff1c, gbc.sp());
        EXPECT(0xc2bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xc2be));
        // BB 0121
        gbc.setState(0x2c69, 0xa647, 0xee40, 0xff61, 0xc6f4, 0x69f6, 0x1, 0x1);
        gbc.writeMem(0x2c69, { 0xbb });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xa647, gbc.sp());
        EXPECT(0x2c6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0122
        gbc.setState(0xcc12, 0xdc0, 0x890, 0xd3de, 0x7876, 0x9fe9, 0x0, 0x1);
        gbc.writeMem(0xcc12, { 0xbb });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xdc0, gbc.sp());
        EXPECT(0xcc13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xcc12));
        // BB 0123
        gbc.setState(0x81a8, 0xd14f, 0xad70, 0x1b18, 0xf5bf, 0xdcdd, 0x1, 0x0);
        gbc.writeMem(0x81a8, { 0xbb });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xd14f, gbc.sp());
        EXPECT(0x81a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x81a8));
        // BB 0124
        gbc.setState(0x48d3, 0xe2b8, 0x3870, 0xcab3, 0x51fd, 0xb72, 0x0, 0x1);
        gbc.writeMem(0x48d3, { 0xbb });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xe2b8, gbc.sp());
        EXPECT(0x48d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0125
        gbc.setState(0x4705, 0x45ee, 0xc640, 0x9ed3, 0xb1b8, 0x6498, 0x1, 0x1);
        gbc.writeMem(0x4705, { 0xbb });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x45ee, gbc.sp());
        EXPECT(0x4706, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0126
        gbc.setState(0x2ff9, 0x5a3e, 0x90f0, 0xec31, 0x8d0c, 0x97f7, 0x0, 0x1);
        gbc.writeMem(0x2ff9, { 0xbb });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x5a3e, gbc.sp());
        EXPECT(0x2ffa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0127
        gbc.setState(0xbdcb, 0x5658, 0x4010, 0xa826, 0xda09, 0xa9a5, 0x0, 0x0);
        gbc.writeMem(0xbdcb, { 0xbb });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x5658, gbc.sp());
        EXPECT(0xbdcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xbdcb));
        // BB 0128
        gbc.setState(0xae92, 0x3f65, 0x9a00, 0xe156, 0xc57c, 0xfc3a, 0x0, 0x0);
        gbc.writeMem(0xae92, { 0xbb });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x3f65, gbc.sp());
        EXPECT(0xae93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xae92));
        // BB 0129
        gbc.setState(0xe4cb, 0xb37d, 0x7f40, 0x5f9, 0xad45, 0xdd7, 0x1, 0x1);
        gbc.writeMem(0xe4cb, { 0xbb });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xb37d, gbc.sp());
        EXPECT(0xe4cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xe4cb));
        // BB 012A
        gbc.setState(0x40d2, 0x7406, 0xc4e0, 0xac93, 0x2cc5, 0x1eec, 0x1, 0x0);
        gbc.writeMem(0x40d2, { 0xbb });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x7406, gbc.sp());
        EXPECT(0x40d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 012B
        gbc.setState(0xcf62, 0x2806, 0xbe80, 0xc09f, 0xf35d, 0xacc, 0x0, 0x1);
        gbc.writeMem(0xcf62, { 0xbb });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x2806, gbc.sp());
        EXPECT(0xcf63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xcf62));
        // BB 012C
        gbc.setState(0x845, 0xcfb6, 0x710, 0x468c, 0x48a6, 0x99dd, 0x0, 0x1);
        gbc.writeMem(0x845, { 0xbb });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xcfb6, gbc.sp());
        EXPECT(0x846, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 012D
        gbc.setState(0x2f13, 0xc960, 0x97e0, 0x2d58, 0x6622, 0x589e, 0x0, 0x0);
        gbc.writeMem(0x2f13, { 0xbb });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xc960, gbc.sp());
        EXPECT(0x2f14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 012E
        gbc.setState(0xae66, 0x71b8, 0xd8a0, 0x5262, 0x414f, 0x51e3, 0x1, 0x1);
        gbc.writeMem(0xae66, { 0xbb });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x71b8, gbc.sp());
        EXPECT(0xae67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xae66));
        // BB 012F
        gbc.setState(0xda75, 0x7663, 0xa540, 0xf1b9, 0xc2f3, 0xd1c7, 0x1, 0x0);
        gbc.writeMem(0xda75, { 0xbb });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x7663, gbc.sp());
        EXPECT(0xda76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xda75));
        // BB 0130
        gbc.setState(0x62a5, 0xbaf6, 0xd980, 0x889, 0x734, 0x9e96, 0x0, 0x0);
        gbc.writeMem(0x62a5, { 0xbb });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xbaf6, gbc.sp());
        EXPECT(0x62a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0131
        gbc.setState(0xace3, 0x391b, 0x8990, 0x993a, 0xb733, 0x802e, 0x1, 0x1);
        gbc.writeMem(0xace3, { 0xbb });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x391b, gbc.sp());
        EXPECT(0xace4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xace3));
        // BB 0132
        gbc.setState(0x3d31, 0xb3ea, 0x93a0, 0xa8e3, 0xc954, 0x721c, 0x1, 0x0);
        gbc.writeMem(0x3d31, { 0xbb });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xb3ea, gbc.sp());
        EXPECT(0x3d32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0133
        gbc.setState(0x8005, 0x5efa, 0x8e50, 0xb171, 0x5a85, 0x3f8f, 0x0, 0x0);
        gbc.writeMem(0x8005, { 0xbb });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x5efa, gbc.sp());
        EXPECT(0x8006, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x8005));
        // BB 0134
        gbc.setState(0xeeca, 0x46ce, 0xcb70, 0x209d, 0x23f1, 0xf4cb, 0x1, 0x1);
        gbc.writeMem(0xeeca, { 0xbb });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x46ce, gbc.sp());
        EXPECT(0xeecb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xeeca));
        // BB 0135
        gbc.setState(0xb98c, 0x32cf, 0xeed0, 0x158a, 0xa600, 0xc599, 0x1, 0x1);
        gbc.writeMem(0xb98c, { 0xbb });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x32cf, gbc.sp());
        EXPECT(0xb98d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xb98c));
        // BB 0136
        gbc.setState(0x2d42, 0xaaea, 0x1d90, 0xca2, 0x90c3, 0xa357, 0x0, 0x1);
        gbc.writeMem(0x2d42, { 0xbb });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xaaea, gbc.sp());
        EXPECT(0x2d43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0137
        gbc.setState(0x8cbc, 0xc2a, 0xc3e0, 0x817, 0x6005, 0x2325, 0x0, 0x0);
        gbc.writeMem(0x8cbc, { 0xbb });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xc2a, gbc.sp());
        EXPECT(0x8cbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x8cbc));
        // BB 0138
        gbc.setState(0x9a3b, 0x8757, 0xe2d0, 0xa4a0, 0x87c6, 0xd71a, 0x1, 0x1);
        gbc.writeMem(0x9a3b, { 0xbb });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x8757, gbc.sp());
        EXPECT(0x9a3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x9a3b));
        // BB 0139
        gbc.setState(0x2d24, 0x5fef, 0x2f30, 0x2f93, 0xaecd, 0x6ea1, 0x0, 0x1);
        gbc.writeMem(0x2d24, { 0xbb });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x5fef, gbc.sp());
        EXPECT(0x2d25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 013A
        gbc.setState(0x85ad, 0x30af, 0xbb40, 0x5105, 0x2bb1, 0x2653, 0x0, 0x0);
        gbc.writeMem(0x85ad, { 0xbb });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x30af, gbc.sp());
        EXPECT(0x85ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x85ad));
        // BB 013B
        gbc.setState(0x307c, 0xcaa, 0x4ab0, 0x6d4a, 0x1804, 0xcd03, 0x1, 0x1);
        gbc.writeMem(0x307c, { 0xbb });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xcaa, gbc.sp());
        EXPECT(0x307d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 013C
        gbc.setState(0xe5fb, 0xe3b2, 0x50f0, 0x1a0f, 0x39a4, 0x1ad4, 0x0, 0x0);
        gbc.writeMem(0xe5fb, { 0xbb });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xe3b2, gbc.sp());
        EXPECT(0xe5fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xe5fb));
        // BB 013D
        gbc.setState(0xd233, 0x3dd, 0xd3b0, 0xae88, 0xa651, 0xfa12, 0x1, 0x0);
        gbc.writeMem(0xd233, { 0xbb });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x3dd, gbc.sp());
        EXPECT(0xd234, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xd233));
        // BB 013E
        gbc.setState(0x9da9, 0xbee1, 0x3e00, 0xf3f1, 0xf4c0, 0x9b1, 0x0, 0x0);
        gbc.writeMem(0x9da9, { 0xbb });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xbee1, gbc.sp());
        EXPECT(0x9daa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x9da9));
        // BB 013F
        gbc.setState(0x7d39, 0x47d0, 0x54a0, 0x3e97, 0x50b8, 0xf46c, 0x1, 0x0);
        gbc.writeMem(0x7d39, { 0xbb });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x47d0, gbc.sp());
        EXPECT(0x7d3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0140
        gbc.setState(0x4507, 0x4970, 0x1ca0, 0x6772, 0x9141, 0x300, 0x1, 0x0);
        gbc.writeMem(0x4507, { 0xbb });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x4970, gbc.sp());
        EXPECT(0x4508, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0141
        gbc.setState(0x9720, 0x50d4, 0x7bc0, 0xd83, 0x8e6f, 0xa1bc, 0x1, 0x1);
        gbc.writeMem(0x9720, { 0xbb });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x50d4, gbc.sp());
        EXPECT(0x9721, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x9720));
        // BB 0142
        gbc.setState(0xf26, 0x86e8, 0x8ea0, 0xb6ee, 0x3c0d, 0x803a, 0x1, 0x0);
        gbc.writeMem(0xf26, { 0xbb });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x86e8, gbc.sp());
        EXPECT(0xf27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0143
        gbc.setState(0x401a, 0xf1b8, 0x4020, 0x9de0, 0xd0b9, 0x5fcc, 0x1, 0x0);
        gbc.writeMem(0x401a, { 0xbb });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xf1b8, gbc.sp());
        EXPECT(0x401b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0144
        gbc.setState(0x3ad8, 0x1953, 0x82e0, 0x9917, 0xb0e5, 0x5d5f, 0x1, 0x0);
        gbc.writeMem(0x3ad8, { 0xbb });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x1953, gbc.sp());
        EXPECT(0x3ad9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0145
        gbc.setState(0xd960, 0x5248, 0xdd90, 0xa876, 0x1bc, 0xec33, 0x1, 0x0);
        gbc.writeMem(0xd960, { 0xbb });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x5248, gbc.sp());
        EXPECT(0xd961, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xd960));
        // BB 0147
        gbc.setState(0x6193, 0x55a2, 0xb590, 0x6164, 0x8edc, 0xd35c, 0x1, 0x1);
        gbc.writeMem(0x6193, { 0xbb });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x55a2, gbc.sp());
        EXPECT(0x6194, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0148
        gbc.setState(0xfbd, 0x5f89, 0xec30, 0xad40, 0xb02f, 0x7fd5, 0x1, 0x1);
        gbc.writeMem(0xfbd, { 0xbb });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x5f89, gbc.sp());
        EXPECT(0xfbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0149
        gbc.setState(0x5437, 0x8bd5, 0x1ab0, 0x3f34, 0x9c1c, 0xbf3a, 0x0, 0x0);
        gbc.writeMem(0x5437, { 0xbb });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x8bd5, gbc.sp());
        EXPECT(0x5438, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 014A
        gbc.setState(0xaeac, 0xeddf, 0x4e00, 0x1125, 0x63a8, 0x63d3, 0x1, 0x0);
        gbc.writeMem(0xaeac, { 0xbb });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xeddf, gbc.sp());
        EXPECT(0xaead, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xaeac));
        // BB 014B
        gbc.setState(0x4de6, 0x46ac, 0xdcf0, 0x57e6, 0x9673, 0xf33b, 0x1, 0x0);
        gbc.writeMem(0x4de6, { 0xbb });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x46ac, gbc.sp());
        EXPECT(0x4de7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 014C
        gbc.setState(0x7dce, 0xfd21, 0x8c40, 0x5833, 0x130c, 0x6f64, 0x0, 0x1);
        gbc.writeMem(0x7dce, { 0xbb });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xfd21, gbc.sp());
        EXPECT(0x7dcf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 014D
        gbc.setState(0x3b43, 0x5436, 0x8770, 0xcd81, 0x7e11, 0x7d6b, 0x0, 0x0);
        gbc.writeMem(0x3b43, { 0xbb });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x5436, gbc.sp());
        EXPECT(0x3b44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 014F
        gbc.setState(0x1ede, 0x21, 0x70f0, 0xeea6, 0xe516, 0x3451, 0x0, 0x1);
        gbc.writeMem(0x1ede, { 0xbb });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x21, gbc.sp());
        EXPECT(0x1edf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0150
        gbc.setState(0xeeb7, 0xa77b, 0x700, 0x80b2, 0x3dc7, 0x2661, 0x1, 0x0);
        gbc.writeMem(0xeeb7, { 0xbb });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xa77b, gbc.sp());
        EXPECT(0xeeb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xeeb7));
        // BB 0151
        gbc.setState(0x65aa, 0xed8a, 0x4660, 0xfd8a, 0xdefe, 0x5043, 0x1, 0x1);
        gbc.writeMem(0x65aa, { 0xbb });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xed8a, gbc.sp());
        EXPECT(0x65ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0152
        gbc.setState(0xd145, 0x489f, 0xd620, 0x93e3, 0x84d2, 0x4dca, 0x1, 0x0);
        gbc.writeMem(0xd145, { 0xbb });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x489f, gbc.sp());
        EXPECT(0xd146, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xd145));
        // BB 0153
        gbc.setState(0x5ede, 0xf1, 0x29c0, 0x5bf9, 0x247, 0xdc3a, 0x0, 0x1);
        gbc.writeMem(0x5ede, { 0xbb });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xf1, gbc.sp());
        EXPECT(0x5edf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0154
        gbc.setState(0x47e9, 0xc57a, 0x1c30, 0xc9d8, 0xaf2c, 0x200f, 0x0, 0x0);
        gbc.writeMem(0x47e9, { 0xbb });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xc57a, gbc.sp());
        EXPECT(0x47ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0155
        gbc.setState(0xa3de, 0x99e3, 0xe250, 0xc008, 0x4501, 0xaaa7, 0x1, 0x0);
        gbc.writeMem(0xa3de, { 0xbb });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x99e3, gbc.sp());
        EXPECT(0xa3df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xa3de));
        // BB 0156
        gbc.setState(0x968e, 0xea06, 0xadf0, 0x4971, 0x9817, 0x17b3, 0x1, 0x0);
        gbc.writeMem(0x968e, { 0xbb });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xea06, gbc.sp());
        EXPECT(0x968f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x968e));
        // BB 0157
        gbc.setState(0x26ac, 0xe598, 0x7870, 0x57cb, 0x882e, 0x3f72, 0x0, 0x1);
        gbc.writeMem(0x26ac, { 0xbb });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xe598, gbc.sp());
        EXPECT(0x26ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0158
        gbc.setState(0x260a, 0x134c, 0x6d10, 0x24b0, 0x5830, 0x2472, 0x1, 0x1);
        gbc.writeMem(0x260a, { 0xbb });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x134c, gbc.sp());
        EXPECT(0x260b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0159
        gbc.setState(0x89c7, 0xe04c, 0x3290, 0xbd7f, 0xa270, 0x1e22, 0x1, 0x0);
        gbc.writeMem(0x89c7, { 0xbb });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xe04c, gbc.sp());
        EXPECT(0x89c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x89c7));
        // BB 015A
        gbc.setState(0xb176, 0xd10, 0xa5f0, 0x2d17, 0x4b1f, 0x682d, 0x0, 0x1);
        gbc.writeMem(0xb176, { 0xbb });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xd10, gbc.sp());
        EXPECT(0xb177, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xb176));
        // BB 015B
        gbc.setState(0x1ef1, 0x159a, 0x2300, 0xb712, 0xae70, 0xc118, 0x1, 0x1);
        gbc.writeMem(0x1ef1, { 0xbb });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x159a, gbc.sp());
        EXPECT(0x1ef2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 015C
        gbc.setState(0xb1bd, 0x4df0, 0x1160, 0xbc0e, 0x1ec8, 0xe520, 0x1, 0x1);
        gbc.writeMem(0xb1bd, { 0xbb });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x4df0, gbc.sp());
        EXPECT(0xb1be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xb1bd));
        // BB 015D
        gbc.setState(0x7f50, 0xd7e0, 0x20f0, 0xd8ff, 0x2836, 0xe992, 0x1, 0x0);
        gbc.writeMem(0x7f50, { 0xbb });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xd7e0, gbc.sp());
        EXPECT(0x7f51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 015E
        gbc.setState(0xd640, 0xf983, 0x15a0, 0xddae, 0xcdac, 0xaf1f, 0x1, 0x0);
        gbc.writeMem(0xd640, { 0xbb });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xf983, gbc.sp());
        EXPECT(0xd641, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xd640));
        // BB 015F
        gbc.setState(0x9325, 0xa87a, 0x38d0, 0x7829, 0xf9cf, 0x77cf, 0x1, 0x1);
        gbc.writeMem(0x9325, { 0xbb });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xa87a, gbc.sp());
        EXPECT(0x9326, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x9325));
        // BB 0160
        gbc.setState(0x1c7, 0x615b, 0x5b90, 0xdc5f, 0x16a, 0x4664, 0x1, 0x0);
        gbc.writeMem(0x1c7, { 0xbb });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x615b, gbc.sp());
        EXPECT(0x1c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0161
        gbc.setState(0xb9d1, 0x7b0f, 0xfda0, 0x5c27, 0x73a9, 0x6c4, 0x1, 0x0);
        gbc.writeMem(0xb9d1, { 0xbb });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x7b0f, gbc.sp());
        EXPECT(0xb9d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xb9d1));
        // BB 0162
        gbc.setState(0x2311, 0x41a, 0x72d0, 0x2970, 0x3e14, 0x7342, 0x1, 0x1);
        gbc.writeMem(0x2311, { 0xbb });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x41a, gbc.sp());
        EXPECT(0x2312, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0163
        gbc.setState(0xbf0d, 0xc115, 0x8680, 0xb6ef, 0x5d55, 0x6ddb, 0x1, 0x0);
        gbc.writeMem(0xbf0d, { 0xbb });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xc115, gbc.sp());
        EXPECT(0xbf0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xbf0d));
        // BB 0165
        gbc.setState(0x3625, 0xea47, 0xdf20, 0x3b7c, 0xac0c, 0xe7a0, 0x0, 0x0);
        gbc.writeMem(0x3625, { 0xbb });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xea47, gbc.sp());
        EXPECT(0x3626, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0166
        gbc.setState(0x2f6b, 0x55f7, 0x63b0, 0x6572, 0x416b, 0x72d9, 0x1, 0x0);
        gbc.writeMem(0x2f6b, { 0xbb });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x55f7, gbc.sp());
        EXPECT(0x2f6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0167
        gbc.setState(0xe547, 0x8824, 0xe660, 0x9aa8, 0xbb52, 0x4c44, 0x0, 0x0);
        gbc.writeMem(0xe547, { 0xbb });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x8824, gbc.sp());
        EXPECT(0xe548, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xe547));
        // BB 0168
        gbc.setState(0x16fc, 0xde48, 0x81e0, 0x2301, 0x7b47, 0x85ab, 0x1, 0x1);
        gbc.writeMem(0x16fc, { 0xbb });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xde48, gbc.sp());
        EXPECT(0x16fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0169
        gbc.setState(0x43b1, 0xf6fa, 0x39a0, 0x748d, 0x5d05, 0xe683, 0x1, 0x0);
        gbc.writeMem(0x43b1, { 0xbb });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xf6fa, gbc.sp());
        EXPECT(0x43b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 016A
        gbc.setState(0xe457, 0x5b03, 0x5a00, 0x9468, 0xbbf4, 0x8607, 0x1, 0x1);
        gbc.writeMem(0xe457, { 0xbb });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x5b03, gbc.sp());
        EXPECT(0xe458, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xe457));
        // BB 016B
        gbc.setState(0x6413, 0xc51a, 0xc7f0, 0x347a, 0x778, 0x9798, 0x1, 0x0);
        gbc.writeMem(0x6413, { 0xbb });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xc51a, gbc.sp());
        EXPECT(0x6414, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 016C
        gbc.setState(0xbf8e, 0xaabe, 0xd2b0, 0x9df5, 0x653, 0xb616, 0x1, 0x1);
        gbc.writeMem(0xbf8e, { 0xbb });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xaabe, gbc.sp());
        EXPECT(0xbf8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xbf8e));
        // BB 016D
        gbc.setState(0x3256, 0x42dd, 0xe800, 0xd7de, 0x3661, 0xd872, 0x1, 0x1);
        gbc.writeMem(0x3256, { 0xbb });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x42dd, gbc.sp());
        EXPECT(0x3257, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 016E
        gbc.setState(0xdc91, 0xf92b, 0xe300, 0xd23f, 0x99af, 0x4e8e, 0x0, 0x1);
        gbc.writeMem(0xdc91, { 0xbb });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xf92b, gbc.sp());
        EXPECT(0xdc92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xdc91));
        // BB 016F
        gbc.setState(0x9a7b, 0xc9e9, 0xf420, 0xcee7, 0xa431, 0xf5e5, 0x1, 0x1);
        gbc.writeMem(0x9a7b, { 0xbb });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xc9e9, gbc.sp());
        EXPECT(0x9a7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x9a7b));
        // BB 0170
        gbc.setState(0xc8f6, 0x4590, 0x2400, 0xa966, 0x1f66, 0x90f1, 0x1, 0x0);
        gbc.writeMem(0xc8f6, { 0xbb });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x4590, gbc.sp());
        EXPECT(0xc8f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xc8f6));
        // BB 0171
        gbc.setState(0x49e1, 0x211f, 0xc270, 0xe877, 0xc4d, 0xf8dd, 0x0, 0x0);
        gbc.writeMem(0x49e1, { 0xbb });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x211f, gbc.sp());
        EXPECT(0x49e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0172
        gbc.setState(0xdc3, 0x121b, 0x6950, 0x4a05, 0xbff7, 0xf80d, 0x1, 0x0);
        gbc.writeMem(0xdc3, { 0xbb });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x121b, gbc.sp());
        EXPECT(0xdc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0173
        gbc.setState(0x397c, 0x5933, 0x4a80, 0xa405, 0x8b00, 0x4dd2, 0x1, 0x0);
        gbc.writeMem(0x397c, { 0xbb });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x5933, gbc.sp());
        EXPECT(0x397d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0174
        gbc.setState(0x70ed, 0xd5f6, 0x1850, 0x9644, 0x94a6, 0xfa24, 0x0, 0x1);
        gbc.writeMem(0x70ed, { 0xbb });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xd5f6, gbc.sp());
        EXPECT(0x70ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0175
        gbc.setState(0x94a7, 0x8f1f, 0xa450, 0xd2d, 0x792, 0xbdac, 0x1, 0x1);
        gbc.writeMem(0x94a7, { 0xbb });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x8f1f, gbc.sp());
        EXPECT(0x94a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x94a7));
        // BB 0176
        gbc.setState(0x6476, 0x4ae9, 0x9130, 0x7b9b, 0x2b0e, 0xd40c, 0x1, 0x0);
        gbc.writeMem(0x6476, { 0xbb });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x4ae9, gbc.sp());
        EXPECT(0x6477, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0177
        gbc.setState(0xd1ed, 0xcca3, 0x9440, 0xc098, 0x5c1, 0xbec, 0x1, 0x1);
        gbc.writeMem(0xd1ed, { 0xbb });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xcca3, gbc.sp());
        EXPECT(0xd1ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xd1ed));
        // BB 0178
        gbc.setState(0x602d, 0xfb17, 0xbef0, 0xe0da, 0xe49, 0xf635, 0x1, 0x0);
        gbc.writeMem(0x602d, { 0xbb });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xfb17, gbc.sp());
        EXPECT(0x602e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0179
        gbc.setState(0xe0c7, 0x8ddb, 0x10f0, 0x6011, 0x71a9, 0xe9, 0x0, 0x0);
        gbc.writeMem(0xe0c7, { 0xbb });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x8ddb, gbc.sp());
        EXPECT(0xe0c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xe0c7));
        // BB 017A
        gbc.setState(0x6c7, 0x4f6e, 0x6d10, 0x8e4f, 0x5512, 0xa06b, 0x1, 0x0);
        gbc.writeMem(0x6c7, { 0xbb });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x4f6e, gbc.sp());
        EXPECT(0x6c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 017B
        gbc.setState(0x8659, 0xb817, 0xc6c0, 0xb585, 0xe5ff, 0x1030, 0x0, 0x0);
        gbc.writeMem(0x8659, { 0xbb });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xb817, gbc.sp());
        EXPECT(0x865a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x8659));
        // BB 017C
        gbc.setState(0x36a2, 0x755d, 0xfec0, 0xe7ac, 0x7028, 0x37f4, 0x1, 0x1);
        gbc.writeMem(0x36a2, { 0xbb });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x755d, gbc.sp());
        EXPECT(0x36a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 017D
        gbc.setState(0xb33d, 0x1488, 0xa2d0, 0x398f, 0xd686, 0xed07, 0x1, 0x0);
        gbc.writeMem(0xb33d, { 0xbb });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x1488, gbc.sp());
        EXPECT(0xb33e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xb33d));
        // BB 017E
        gbc.setState(0xdad8, 0x9fb9, 0xb6e0, 0x2de5, 0x6b1c, 0x1a4c, 0x1, 0x1);
        gbc.writeMem(0xdad8, { 0xbb });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x9fb9, gbc.sp());
        EXPECT(0xdad9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xdad8));
        // BB 017F
        gbc.setState(0xe9fe, 0x78a6, 0xc020, 0xf336, 0x2364, 0x73f7, 0x1, 0x0);
        gbc.writeMem(0xe9fe, { 0xbb });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x78a6, gbc.sp());
        EXPECT(0xe9ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xe9fe));
        // BB 0180
        gbc.setState(0xd306, 0x9593, 0x9210, 0xd67a, 0xf168, 0x9447, 0x0, 0x1);
        gbc.writeMem(0xd306, { 0xbb });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x9593, gbc.sp());
        EXPECT(0xd307, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xd306));
        // BB 0181
        gbc.setState(0x6502, 0x7188, 0x1f70, 0x803, 0x8a62, 0x26e2, 0x0, 0x0);
        gbc.writeMem(0x6502, { 0xbb });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x7188, gbc.sp());
        EXPECT(0x6503, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0182
        gbc.setState(0x7448, 0x6347, 0x1ce0, 0x299e, 0x61ce, 0x5c7f, 0x1, 0x0);
        gbc.writeMem(0x7448, { 0xbb });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x6347, gbc.sp());
        EXPECT(0x7449, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0183
        gbc.setState(0x4315, 0x3218, 0x1650, 0x311e, 0x4ecd, 0x699, 0x1, 0x1);
        gbc.writeMem(0x4315, { 0xbb });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x3218, gbc.sp());
        EXPECT(0x4316, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0184
        gbc.setState(0xbbd0, 0x2197, 0xa410, 0xfc8a, 0xbcc4, 0x841e, 0x0, 0x1);
        gbc.writeMem(0xbbd0, { 0xbb });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x2197, gbc.sp());
        EXPECT(0xbbd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xbbd0));
        // BB 0185
        gbc.setState(0x89f1, 0x4a90, 0x4390, 0x9f4e, 0xfcd8, 0x388f, 0x0, 0x1);
        gbc.writeMem(0x89f1, { 0xbb });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x4a90, gbc.sp());
        EXPECT(0x89f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x89f1));
        // BB 0186
        gbc.setState(0x6a2d, 0x1179, 0x6690, 0x2073, 0xa84d, 0xf29f, 0x0, 0x1);
        gbc.writeMem(0x6a2d, { 0xbb });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x1179, gbc.sp());
        EXPECT(0x6a2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0187
        gbc.setState(0x71bc, 0x3f68, 0x9790, 0x85cb, 0x5b73, 0xf373, 0x0, 0x1);
        gbc.writeMem(0x71bc, { 0xbb });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x3f68, gbc.sp());
        EXPECT(0x71bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0188
        gbc.setState(0x1f91, 0x5911, 0x9830, 0xbc69, 0x3673, 0xef54, 0x0, 0x1);
        gbc.writeMem(0x1f91, { 0xbb });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x5911, gbc.sp());
        EXPECT(0x1f92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0189
        gbc.setState(0xd963, 0x8fc5, 0x8020, 0xb0d3, 0xb40e, 0xae53, 0x1, 0x1);
        gbc.writeMem(0xd963, { 0xbb });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x8fc5, gbc.sp());
        EXPECT(0xd964, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xd963));
        // BB 018A
        gbc.setState(0x1ca2, 0x6393, 0xfb30, 0x7cc, 0xf521, 0xdaad, 0x0, 0x1);
        gbc.writeMem(0x1ca2, { 0xbb });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x6393, gbc.sp());
        EXPECT(0x1ca3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 018B
        gbc.setState(0x78f6, 0xef1c, 0x1520, 0x94ea, 0xa8de, 0x8746, 0x1, 0x1);
        gbc.writeMem(0x78f6, { 0xbb });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xef1c, gbc.sp());
        EXPECT(0x78f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 018D
        gbc.setState(0x23de, 0x95b7, 0x2350, 0x6d27, 0xe547, 0x63f3, 0x1, 0x0);
        gbc.writeMem(0x23de, { 0xbb });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x95b7, gbc.sp());
        EXPECT(0x23df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 018E
        gbc.setState(0x2f88, 0x93, 0xc090, 0x43b2, 0x2814, 0xf6f4, 0x1, 0x1);
        gbc.writeMem(0x2f88, { 0xbb });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x93, gbc.sp());
        EXPECT(0x2f89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 018F
        gbc.setState(0xc930, 0x3cbb, 0x7800, 0xd2db, 0xa5c7, 0x36d7, 0x0, 0x0);
        gbc.writeMem(0xc930, { 0xbb });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x3cbb, gbc.sp());
        EXPECT(0xc931, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xc930));
        // BB 0190
        gbc.setState(0x8a76, 0xc541, 0xaa50, 0xe057, 0xbfe4, 0xb592, 0x1, 0x0);
        gbc.writeMem(0x8a76, { 0xbb });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xc541, gbc.sp());
        EXPECT(0x8a77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x8a76));
        // BB 0191
        gbc.setState(0xc0b8, 0x3a48, 0x7780, 0xa744, 0xd9b, 0xf564, 0x0, 0x0);
        gbc.writeMem(0xc0b8, { 0xbb });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x3a48, gbc.sp());
        EXPECT(0xc0b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xc0b8));
        // BB 0192
        gbc.setState(0xa1b, 0xa785, 0x8a80, 0xf218, 0x20aa, 0xfdba, 0x1, 0x0);
        gbc.writeMem(0xa1b, { 0xbb });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xa785, gbc.sp());
        EXPECT(0xa1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0193
        gbc.setState(0x148b, 0x185c, 0x16c0, 0xc5fb, 0x14e3, 0x5bf8, 0x0, 0x0);
        gbc.writeMem(0x148b, { 0xbb });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x185c, gbc.sp());
        EXPECT(0x148c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0194
        gbc.setState(0x9d08, 0x53ec, 0x37f0, 0x4766, 0x4a32, 0x5958, 0x0, 0x0);
        gbc.writeMem(0x9d08, { 0xbb });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x53ec, gbc.sp());
        EXPECT(0x9d09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x9d08));
        // BB 0195
        gbc.setState(0xc82f, 0x5b34, 0xa490, 0x12ce, 0xd1c0, 0x11ee, 0x1, 0x1);
        gbc.writeMem(0xc82f, { 0xbb });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x5b34, gbc.sp());
        EXPECT(0xc830, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xc82f));
        // BB 0196
        gbc.setState(0x50ba, 0x98ba, 0x7640, 0x68c, 0x9d02, 0x25e5, 0x1, 0x1);
        gbc.writeMem(0x50ba, { 0xbb });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x98ba, gbc.sp());
        EXPECT(0x50bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0197
        gbc.setState(0x2f93, 0x51fb, 0xcc00, 0x4ce5, 0x696a, 0x98ae, 0x0, 0x1);
        gbc.writeMem(0x2f93, { 0xbb });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x51fb, gbc.sp());
        EXPECT(0x2f94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0198
        gbc.setState(0xb824, 0xa325, 0x8600, 0x66b1, 0x608a, 0xf112, 0x0, 0x0);
        gbc.writeMem(0xb824, { 0xbb });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xa325, gbc.sp());
        EXPECT(0xb825, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xb824));
        // BB 0199
        gbc.setState(0x6d9f, 0x3fc3, 0xa8a0, 0xbf39, 0x6937, 0xe6c, 0x0, 0x1);
        gbc.writeMem(0x6d9f, { 0xbb });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x3fc3, gbc.sp());
        EXPECT(0x6da0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 019A
        gbc.setState(0x984a, 0x106e, 0x55f0, 0x12a3, 0x4eb9, 0x9ce5, 0x1, 0x1);
        gbc.writeMem(0x984a, { 0xbb });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x106e, gbc.sp());
        EXPECT(0x984b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x984a));
        // BB 019B
        gbc.setState(0xd57a, 0xc6fd, 0x89d0, 0x5e74, 0xee2e, 0xc43, 0x0, 0x1);
        gbc.writeMem(0xd57a, { 0xbb });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xc6fd, gbc.sp());
        EXPECT(0xd57b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xd57a));
        // BB 019C
        gbc.setState(0xb047, 0x71e3, 0xc460, 0xc00d, 0xd5b8, 0xf75a, 0x0, 0x1);
        gbc.writeMem(0xb047, { 0xbb });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x71e3, gbc.sp());
        EXPECT(0xb048, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xb047));
        // BB 019D
        gbc.setState(0x5b6e, 0x903, 0x82e0, 0x7817, 0xcdae, 0x5eae, 0x0, 0x1);
        gbc.writeMem(0x5b6e, { 0xbb });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x903, gbc.sp());
        EXPECT(0x5b6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 019E
        gbc.setState(0x1304, 0x4bb1, 0xe980, 0xa7d7, 0xeefd, 0x4988, 0x0, 0x1);
        gbc.writeMem(0x1304, { 0xbb });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x4bb1, gbc.sp());
        EXPECT(0x1305, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 019F
        gbc.setState(0x9f34, 0xab87, 0x8d0, 0xb8c, 0x4347, 0xbb50, 0x0, 0x0);
        gbc.writeMem(0x9f34, { 0xbb });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xab87, gbc.sp());
        EXPECT(0x9f35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x9f34));
        // BB 01A0
        gbc.setState(0x6156, 0x18c4, 0xbda0, 0xfdb0, 0xda2f, 0x6fe2, 0x0, 0x0);
        gbc.writeMem(0x6156, { 0xbb });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x18c4, gbc.sp());
        EXPECT(0x6157, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 01A1
        gbc.setState(0x2ecc, 0x4877, 0x1d60, 0x76fe, 0x2dea, 0x52a0, 0x1, 0x1);
        gbc.writeMem(0x2ecc, { 0xbb });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x4877, gbc.sp());
        EXPECT(0x2ecd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 01A2
        gbc.setState(0xbbc8, 0xbb08, 0x85f0, 0xea43, 0xd00b, 0x6dd9, 0x0, 0x0);
        gbc.writeMem(0xbbc8, { 0xbb });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xbb08, gbc.sp());
        EXPECT(0xbbc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xbbc8));
        // BB 01A3
        gbc.setState(0x658b, 0x1965, 0xc530, 0x9745, 0x1bce, 0x1e10, 0x1, 0x1);
        gbc.writeMem(0x658b, { 0xbb });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x1965, gbc.sp());
        EXPECT(0x658c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 01A4
        gbc.setState(0xce76, 0xad5e, 0x1760, 0x7c8d, 0xfb26, 0x1c4f, 0x0, 0x1);
        gbc.writeMem(0xce76, { 0xbb });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xad5e, gbc.sp());
        EXPECT(0xce77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xce76));
        // BB 01A5
        gbc.setState(0x907b, 0xf180, 0xb050, 0xa240, 0xa62, 0x7097, 0x0, 0x0);
        gbc.writeMem(0x907b, { 0xbb });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xf180, gbc.sp());
        EXPECT(0x907c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x907b));
        // BB 01A6
        gbc.setState(0x2eb5, 0xe870, 0xc660, 0x89c7, 0xcdaa, 0x5c7f, 0x1, 0x0);
        gbc.writeMem(0x2eb5, { 0xbb });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xe870, gbc.sp());
        EXPECT(0x2eb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 01A8
        gbc.setState(0xed5f, 0xfa9d, 0x3980, 0xae21, 0x5746, 0x29a8, 0x1, 0x1);
        gbc.writeMem(0xed5f, { 0xbb });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xfa9d, gbc.sp());
        EXPECT(0xed60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xed5f));
        // BB 01A9
        gbc.setState(0xc219, 0x9aa4, 0x3110, 0x7155, 0x679d, 0x9338, 0x0, 0x1);
        gbc.writeMem(0xc219, { 0xbb });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x9aa4, gbc.sp());
        EXPECT(0xc21a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xc219));
        // BB 01AA
        gbc.setState(0x7fcd, 0x2fad, 0x7730, 0x631e, 0x2ae8, 0x805f, 0x1, 0x0);
        gbc.writeMem(0x7fcd, { 0xbb });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x2fad, gbc.sp());
        EXPECT(0x7fce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 01AB
        gbc.setState(0xc79b, 0x5905, 0xb560, 0xefa0, 0xd4c0, 0x8451, 0x0, 0x1);
        gbc.writeMem(0xc79b, { 0xbb });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x5905, gbc.sp());
        EXPECT(0xc79c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xc79b));
        // BB 01AC
        gbc.setState(0x88d0, 0xb11d, 0x14c0, 0xfaf, 0x4396, 0xad46, 0x0, 0x0);
        gbc.writeMem(0x88d0, { 0xbb });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xb11d, gbc.sp());
        EXPECT(0x88d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x88d0));
        // BB 01AD
        gbc.setState(0x534e, 0xbfa, 0xfef0, 0x666c, 0xefc6, 0x7728, 0x0, 0x0);
        gbc.writeMem(0x534e, { 0xbb });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xbfa, gbc.sp());
        EXPECT(0x534f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 01AF
        gbc.setState(0x279d, 0x8885, 0x91e0, 0x9e56, 0xfc97, 0x9009, 0x0, 0x1);
        gbc.writeMem(0x279d, { 0xbb });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x8885, gbc.sp());
        EXPECT(0x279e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 01B1
        gbc.setState(0x4070, 0x231a, 0xcad0, 0xff70, 0xee7, 0xac37, 0x1, 0x0);
        gbc.writeMem(0x4070, { 0xbb });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x231a, gbc.sp());
        EXPECT(0x4071, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 01B2
        gbc.setState(0x4608, 0x5a37, 0xd430, 0xcc20, 0xc8dc, 0x77f5, 0x0, 0x1);
        gbc.writeMem(0x4608, { 0xbb });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x5a37, gbc.sp());
        EXPECT(0x4609, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 01B3
        gbc.setState(0xaca4, 0xae96, 0xbd60, 0x1077, 0x79f0, 0x85d0, 0x1, 0x0);
        gbc.writeMem(0xaca4, { 0xbb });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xae96, gbc.sp());
        EXPECT(0xaca5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xaca4));
        // BB 01B5
        gbc.setState(0x9455, 0xb28b, 0x9750, 0xfc53, 0x8940, 0x6bf4, 0x0, 0x0);
        gbc.writeMem(0x9455, { 0xbb });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xb28b, gbc.sp());
        EXPECT(0x9456, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x9455));
        // BB 01B6
        gbc.setState(0x3fe4, 0xf03d, 0x9810, 0x2128, 0xfd7d, 0xb194, 0x1, 0x0);
        gbc.writeMem(0x3fe4, { 0xbb });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xf03d, gbc.sp());
        EXPECT(0x3fe5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 01B7
        gbc.setState(0x3742, 0x73d2, 0x4ba0, 0x5bc9, 0xfe61, 0xcbc0, 0x0, 0x0);
        gbc.writeMem(0x3742, { 0xbb });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x73d2, gbc.sp());
        EXPECT(0x3743, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 01B8
        gbc.setState(0x524c, 0x7316, 0xcac0, 0xe91, 0x32c8, 0xa48c, 0x0, 0x1);
        gbc.writeMem(0x524c, { 0xbb });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x7316, gbc.sp());
        EXPECT(0x524d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 01B9
        gbc.setState(0x6fa2, 0x2cc0, 0x3530, 0xec61, 0x2f4e, 0x5150, 0x1, 0x1);
        gbc.writeMem(0x6fa2, { 0xbb });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x2cc0, gbc.sp());
        EXPECT(0x6fa3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 01BA
        gbc.setState(0x27a9, 0x234c, 0x8550, 0xbd1f, 0x9fe4, 0xf3cd, 0x1, 0x1);
        gbc.writeMem(0x27a9, { 0xbb });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x234c, gbc.sp());
        EXPECT(0x27aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 01BB
        gbc.setState(0xdb96, 0x75c8, 0xfee0, 0x6163, 0x6453, 0x9c7, 0x1, 0x0);
        gbc.writeMem(0xdb96, { 0xbb });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x75c8, gbc.sp());
        EXPECT(0xdb97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xdb96));
        // BB 01BC
        gbc.setState(0xb69a, 0x60c8, 0xea0, 0x5210, 0xa677, 0xa2dc, 0x0, 0x1);
        gbc.writeMem(0xb69a, { 0xbb });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x60c8, gbc.sp());
        EXPECT(0xb69b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xb69a));
        // BB 01BD
        gbc.setState(0x1b8f, 0xc26f, 0x8090, 0x697f, 0xa1c2, 0x3341, 0x1, 0x0);
        gbc.writeMem(0x1b8f, { 0xbb });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xc26f, gbc.sp());
        EXPECT(0x1b90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 01BE
        gbc.setState(0x2917, 0xae0b, 0x8960, 0xaf52, 0x40ba, 0x92fa, 0x0, 0x0);
        gbc.writeMem(0x2917, { 0xbb });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xae0b, gbc.sp());
        EXPECT(0x2918, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 01BF
        gbc.setState(0x7239, 0x8248, 0x8210, 0xc6e2, 0x1b64, 0xa1df, 0x1, 0x1);
        gbc.writeMem(0x7239, { 0xbb });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x8248, gbc.sp());
        EXPECT(0x723a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 01C0
        gbc.setState(0xb376, 0xc509, 0x1a50, 0x763d, 0xdb1e, 0xc318, 0x0, 0x1);
        gbc.writeMem(0xb376, { 0xbb });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xc509, gbc.sp());
        EXPECT(0xb377, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xb376));
        // BB 01C1
        gbc.setState(0xda92, 0x5e44, 0xe280, 0xf15c, 0x565e, 0xcaf3, 0x1, 0x1);
        gbc.writeMem(0xda92, { 0xbb });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x5e44, gbc.sp());
        EXPECT(0xda93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xda92));
        // BB 01C2
        gbc.setState(0x39a8, 0xbe9a, 0x1a90, 0xe512, 0x5417, 0xfd9a, 0x1, 0x0);
        gbc.writeMem(0x39a8, { 0xbb });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xbe9a, gbc.sp());
        EXPECT(0x39a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 01C3
        gbc.setState(0x9420, 0x61a4, 0x99f0, 0xef2f, 0xa37b, 0xf20e, 0x1, 0x1);
        gbc.writeMem(0x9420, { 0xbb });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x61a4, gbc.sp());
        EXPECT(0x9421, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x9420));
        // BB 01C4
        gbc.setState(0x7892, 0xc064, 0xbd50, 0x88da, 0x5f08, 0xa704, 0x0, 0x0);
        gbc.writeMem(0x7892, { 0xbb });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xc064, gbc.sp());
        EXPECT(0x7893, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 01C5
        gbc.setState(0x982f, 0x24ae, 0xdc80, 0xd07f, 0x714c, 0x311d, 0x1, 0x1);
        gbc.writeMem(0x982f, { 0xbb });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x24ae, gbc.sp());
        EXPECT(0x9830, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x982f));
        // BB 01C6
        gbc.setState(0xcd8e, 0x56cd, 0x11c0, 0xb7fe, 0xc689, 0x667b, 0x0, 0x0);
        gbc.writeMem(0xcd8e, { 0xbb });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x56cd, gbc.sp());
        EXPECT(0xcd8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xcd8e));
        // BB 01C7
        gbc.setState(0x7b9e, 0x7304, 0xacc0, 0xccf6, 0xed96, 0xd345, 0x1, 0x1);
        gbc.writeMem(0x7b9e, { 0xbb });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x7304, gbc.sp());
        EXPECT(0x7b9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 01C8
        gbc.setState(0x7030, 0xe291, 0x8480, 0x3ae7, 0x449f, 0xbb7, 0x1, 0x1);
        gbc.writeMem(0x7030, { 0xbb });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xe291, gbc.sp());
        EXPECT(0x7031, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 01C9
        gbc.setState(0x1abb, 0x4803, 0x1c00, 0xeed5, 0xe98, 0x22fb, 0x1, 0x1);
        gbc.writeMem(0x1abb, { 0xbb });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x4803, gbc.sp());
        EXPECT(0x1abc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 01CA
        gbc.setState(0x4415, 0xdb16, 0xc8a0, 0x3176, 0xb7fe, 0xdb01, 0x0, 0x1);
        gbc.writeMem(0x4415, { 0xbb });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xdb16, gbc.sp());
        EXPECT(0x4416, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 01CB
        gbc.setState(0xe0d8, 0x84dd, 0x9610, 0x6fc9, 0xddcf, 0x9a6f, 0x1, 0x1);
        gbc.writeMem(0xe0d8, { 0xbb });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x84dd, gbc.sp());
        EXPECT(0xe0d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xe0d8));
        // BB 01CC
        gbc.setState(0xbfbd, 0xeffa, 0xb7a0, 0xbf37, 0xd532, 0x267d, 0x0, 0x1);
        gbc.writeMem(0xbfbd, { 0xbb });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xeffa, gbc.sp());
        EXPECT(0xbfbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xbfbd));
        // BB 01CD
        gbc.setState(0xba, 0xdbf1, 0x3070, 0x4fab, 0xc5a0, 0x8190, 0x0, 0x0);
        gbc.writeMem(0xba, { 0xbb });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xdbf1, gbc.sp());
        EXPECT(0xbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 01CE
        gbc.setState(0x676f, 0x290, 0x2bf0, 0xbbe, 0x38a5, 0x6c0b, 0x0, 0x1);
        gbc.writeMem(0x676f, { 0xbb });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x290, gbc.sp());
        EXPECT(0x6770, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 01CF
        gbc.setState(0x4e28, 0x8a07, 0x4af0, 0xb609, 0xc90f, 0x5017, 0x1, 0x0);
        gbc.writeMem(0x4e28, { 0xbb });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x8a07, gbc.sp());
        EXPECT(0x4e29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 01D0
        gbc.setState(0x3c24, 0x6a49, 0xe550, 0x1ede, 0x47eb, 0xebd9, 0x1, 0x0);
        gbc.writeMem(0x3c24, { 0xbb });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x6a49, gbc.sp());
        EXPECT(0x3c25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 01D1
        gbc.setState(0xb685, 0xc81a, 0x4700, 0x70d6, 0x9add, 0x24e5, 0x0, 0x1);
        gbc.writeMem(0xb685, { 0xbb });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xc81a, gbc.sp());
        EXPECT(0xb686, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xb685));
        // BB 01D2
        gbc.setState(0x9457, 0x2986, 0xd530, 0xa3cf, 0xa8f6, 0x6a31, 0x1, 0x1);
        gbc.writeMem(0x9457, { 0xbb });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x2986, gbc.sp());
        EXPECT(0x9458, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x9457));
        // BB 01D4
        gbc.setState(0x2a55, 0x7e6d, 0x8740, 0xae1d, 0x33a2, 0x86d, 0x1, 0x0);
        gbc.writeMem(0x2a55, { 0xbb });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x7e6d, gbc.sp());
        EXPECT(0x2a56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 01D5
        gbc.setState(0xaf14, 0x2b2f, 0xca00, 0x920f, 0x20c9, 0xf5dd, 0x0, 0x0);
        gbc.writeMem(0xaf14, { 0xbb });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x2b2f, gbc.sp());
        EXPECT(0xaf15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xaf14));
        // BB 01D7
        gbc.setState(0x8723, 0xe82, 0xa0, 0x8634, 0x1ae9, 0x61bf, 0x0, 0x1);
        gbc.writeMem(0x8723, { 0xbb });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xe82, gbc.sp());
        EXPECT(0x8724, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x8723));
        // BB 01D8
        gbc.setState(0x8717, 0x1a28, 0xe8f0, 0x766d, 0x96f6, 0xde9, 0x0, 0x0);
        gbc.writeMem(0x8717, { 0xbb });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x1a28, gbc.sp());
        EXPECT(0x8718, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x8717));
        // BB 01D9
        gbc.setState(0x2d9e, 0x9577, 0xe080, 0xbc2b, 0x77f1, 0x90d, 0x0, 0x0);
        gbc.writeMem(0x2d9e, { 0xbb });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x9577, gbc.sp());
        EXPECT(0x2d9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 01DA
        gbc.setState(0xc0fb, 0x6b7c, 0xa030, 0xdede, 0x1a80, 0x7b9a, 0x0, 0x0);
        gbc.writeMem(0xc0fb, { 0xbb });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x6b7c, gbc.sp());
        EXPECT(0xc0fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xc0fb));
        // BB 01DB
        gbc.setState(0xaf7c, 0x987c, 0x84a0, 0x19e7, 0xdb27, 0x8f43, 0x1, 0x0);
        gbc.writeMem(0xaf7c, { 0xbb });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x987c, gbc.sp());
        EXPECT(0xaf7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xaf7c));
        // BB 01DC
        gbc.setState(0xe7e3, 0x70d0, 0xf9b0, 0x6ae6, 0xb4ea, 0xa7e7, 0x1, 0x0);
        gbc.writeMem(0xe7e3, { 0xbb });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x70d0, gbc.sp());
        EXPECT(0xe7e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xe7e3));
        // BB 01DD
        gbc.setState(0xc8eb, 0xe62, 0xdd60, 0xee2d, 0x3c5e, 0x8b95, 0x1, 0x0);
        gbc.writeMem(0xc8eb, { 0xbb });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xe62, gbc.sp());
        EXPECT(0xc8ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xc8eb));
        // BB 01DE
        gbc.setState(0xc78, 0x4afa, 0xbe60, 0x6eb7, 0xac3e, 0x5e22, 0x0, 0x1);
        gbc.writeMem(0xc78, { 0xbb });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x4afa, gbc.sp());
        EXPECT(0xc79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 01DF
        gbc.setState(0x7df8, 0xa7, 0xd0e0, 0xb531, 0x1307, 0x55c2, 0x1, 0x0);
        gbc.writeMem(0x7df8, { 0xbb });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xa7, gbc.sp());
        EXPECT(0x7df9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 01E0
        gbc.setState(0x5bae, 0x94ae, 0x2200, 0xaf32, 0x1efc, 0x28a7, 0x1, 0x0);
        gbc.writeMem(0x5bae, { 0xbb });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x94ae, gbc.sp());
        EXPECT(0x5baf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 01E1
        gbc.setState(0x4734, 0x4ffc, 0xf5b0, 0xb0a4, 0xf148, 0xab1c, 0x1, 0x0);
        gbc.writeMem(0x4734, { 0xbb });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x4ffc, gbc.sp());
        EXPECT(0x4735, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 01E2
        gbc.setState(0x6ff3, 0x600a, 0x2b0, 0x82a2, 0xaf7a, 0x6438, 0x1, 0x1);
        gbc.writeMem(0x6ff3, { 0xbb });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x600a, gbc.sp());
        EXPECT(0x6ff4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 01E3
        gbc.setState(0x1c5a, 0x4256, 0x6c80, 0xd5d, 0xaab8, 0x8aa0, 0x1, 0x0);
        gbc.writeMem(0x1c5a, { 0xbb });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x4256, gbc.sp());
        EXPECT(0x1c5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 01E4
        gbc.setState(0x28e6, 0x2899, 0xe560, 0xed28, 0xb749, 0x32ea, 0x0, 0x0);
        gbc.writeMem(0x28e6, { 0xbb });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x2899, gbc.sp());
        EXPECT(0x28e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 01E5
        gbc.setState(0x9e37, 0x1456, 0x8aa0, 0xe6b0, 0x76b4, 0xafbf, 0x0, 0x0);
        gbc.writeMem(0x9e37, { 0xbb });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x1456, gbc.sp());
        EXPECT(0x9e38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x9e37));
        // BB 01E6
        gbc.setState(0x323, 0x68b8, 0xabd0, 0xb942, 0xbc7d, 0x9315, 0x0, 0x0);
        gbc.writeMem(0x323, { 0xbb });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x68b8, gbc.sp());
        EXPECT(0x324, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 01E7
        gbc.setState(0x299c, 0xd68a, 0x8ae0, 0x1e11, 0xc803, 0x806f, 0x0, 0x1);
        gbc.writeMem(0x299c, { 0xbb });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xd68a, gbc.sp());
        EXPECT(0x299d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 01E8
        gbc.setState(0xa8c6, 0x6961, 0xec90, 0xf11, 0x2659, 0x94fd, 0x1, 0x0);
        gbc.writeMem(0xa8c6, { 0xbb });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x6961, gbc.sp());
        EXPECT(0xa8c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xa8c6));
        // BB 01E9
        gbc.setState(0xaf4d, 0x1f46, 0x7af0, 0x3d74, 0x1818, 0xf78d, 0x0, 0x0);
        gbc.writeMem(0xaf4d, { 0xbb });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x1f46, gbc.sp());
        EXPECT(0xaf4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xaf4d));
        // BB 01EA
        gbc.setState(0xe986, 0x6fd6, 0x1a70, 0xd11d, 0x4366, 0x6e9a, 0x1, 0x1);
        gbc.writeMem(0xe986, { 0xbb });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x6fd6, gbc.sp());
        EXPECT(0xe987, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xe986));
        // BB 01EB
        gbc.setState(0xae68, 0x78f2, 0x7f60, 0xddf4, 0xb1a1, 0xe04, 0x1, 0x0);
        gbc.writeMem(0xae68, { 0xbb });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x78f2, gbc.sp());
        EXPECT(0xae69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xae68));
        // BB 01EC
        gbc.setState(0x161d, 0x2a08, 0xe230, 0x1778, 0x3acc, 0x2634, 0x1, 0x1);
        gbc.writeMem(0x161d, { 0xbb });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x2a08, gbc.sp());
        EXPECT(0x161e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 01ED
        gbc.setState(0x7429, 0x6d5c, 0x7710, 0x4726, 0xcc4a, 0xe990, 0x1, 0x0);
        gbc.writeMem(0x7429, { 0xbb });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x6d5c, gbc.sp());
        EXPECT(0x742a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 01EE
        gbc.setState(0x815a, 0x6ac8, 0x2670, 0xcd57, 0x14db, 0x3abf, 0x1, 0x0);
        gbc.writeMem(0x815a, { 0xbb });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x6ac8, gbc.sp());
        EXPECT(0x815b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x815a));
        // BB 01EF
        gbc.setState(0x3de1, 0xf436, 0xd120, 0xe57e, 0x5bb1, 0xc77b, 0x0, 0x0);
        gbc.writeMem(0x3de1, { 0xbb });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xf436, gbc.sp());
        EXPECT(0x3de2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 01F0
        gbc.setState(0x994f, 0x9c68, 0x2640, 0xf319, 0x6f75, 0xf7da, 0x0, 0x0);
        gbc.writeMem(0x994f, { 0xbb });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x9c68, gbc.sp());
        EXPECT(0x9950, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x994f));
        // BB 01F1
        gbc.setState(0xe2f8, 0x79e0, 0x3b60, 0x7c66, 0x2ebb, 0xf375, 0x0, 0x1);
        gbc.writeMem(0xe2f8, { 0xbb });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x79e0, gbc.sp());
        EXPECT(0xe2f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xe2f8));
        // BB 01F2
        gbc.setState(0x3494, 0x2889, 0x8440, 0x27b4, 0xe4bb, 0xd23, 0x0, 0x1);
        gbc.writeMem(0x3494, { 0xbb });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x2889, gbc.sp());
        EXPECT(0x3495, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 01F3
        gbc.setState(0xdd3c, 0xc169, 0xf270, 0xded9, 0x37ef, 0xbd11, 0x1, 0x1);
        gbc.writeMem(0xdd3c, { 0xbb });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xc169, gbc.sp());
        EXPECT(0xdd3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xdd3c));
        // BB 01F4
        gbc.setState(0x8064, 0xce5f, 0xb150, 0x1970, 0xbb96, 0xc6f8, 0x1, 0x0);
        gbc.writeMem(0x8064, { 0xbb });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xce5f, gbc.sp());
        EXPECT(0x8065, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x8064));
        // BB 01F5
        gbc.setState(0x165, 0x19ca, 0xc240, 0xbc61, 0xd308, 0xf824, 0x1, 0x1);
        gbc.writeMem(0x165, { 0xbb });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x19ca, gbc.sp());
        EXPECT(0x166, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 01F6
        gbc.setState(0x6d31, 0x128f, 0x5230, 0xc428, 0xcc28, 0x3a5b, 0x0, 0x0);
        gbc.writeMem(0x6d31, { 0xbb });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x128f, gbc.sp());
        EXPECT(0x6d32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 01F7
        gbc.setState(0xdcc7, 0x4c59, 0xe480, 0x2475, 0xdc77, 0x63b3, 0x0, 0x1);
        gbc.writeMem(0xdcc7, { 0xbb });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x4c59, gbc.sp());
        EXPECT(0xdcc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xdcc7));
        // BB 01F8
        gbc.setState(0x14d5, 0xba7b, 0x64e0, 0x6208, 0xe7f3, 0x8a9, 0x1, 0x1);
        gbc.writeMem(0x14d5, { 0xbb });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xba7b, gbc.sp());
        EXPECT(0x14d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 01F9
        gbc.setState(0x704a, 0x5421, 0x27e0, 0x89a5, 0x3c7b, 0xd5aa, 0x1, 0x0);
        gbc.writeMem(0x704a, { 0xbb });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x5421, gbc.sp());
        EXPECT(0x704b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 01FA
        gbc.setState(0xe316, 0xf77d, 0x3910, 0x9840, 0x70ae, 0xb910, 0x1, 0x1);
        gbc.writeMem(0xe316, { 0xbb });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xf77d, gbc.sp());
        EXPECT(0xe317, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xe316));
        // BB 01FB
        gbc.setState(0x31e0, 0xd25e, 0xf170, 0x13d, 0x423e, 0xc5fc, 0x1, 0x0);
        gbc.writeMem(0x31e0, { 0xbb });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xd25e, gbc.sp());
        EXPECT(0x31e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 01FC
        gbc.setState(0x3b1d, 0x3ad5, 0x7730, 0x4762, 0x1c71, 0x671b, 0x1, 0x1);
        gbc.writeMem(0x3b1d, { 0xbb });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x3ad5, gbc.sp());
        EXPECT(0x3b1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 01FD
        gbc.setState(0x51a7, 0xd98b, 0xed10, 0xa094, 0xdd87, 0x283d, 0x0, 0x1);
        gbc.writeMem(0x51a7, { 0xbb });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xd98b, gbc.sp());
        EXPECT(0x51a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 01FE
        gbc.setState(0xde52, 0x5b21, 0x88c0, 0x622c, 0x6da5, 0x28ef, 0x1, 0x1);
        gbc.writeMem(0xde52, { 0xbb });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x5b21, gbc.sp());
        EXPECT(0xde53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xde52));
        // BB 01FF
        gbc.setState(0x3617, 0xbf2, 0x3490, 0xc1e1, 0x745, 0x35ad, 0x1, 0x1);
        gbc.writeMem(0x3617, { 0xbb });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xbf2, gbc.sp());
        EXPECT(0x3618, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0200
        gbc.setState(0x5c1a, 0xad2b, 0xe030, 0x2206, 0x1c85, 0x4c77, 0x1, 0x0);
        gbc.writeMem(0x5c1a, { 0xbb });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xad2b, gbc.sp());
        EXPECT(0x5c1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0201
        gbc.setState(0x6635, 0x6e2b, 0xad70, 0x5aaf, 0x9fd, 0xdb4b, 0x1, 0x0);
        gbc.writeMem(0x6635, { 0xbb });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x6e2b, gbc.sp());
        EXPECT(0x6636, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0202
        gbc.setState(0xef16, 0xa81e, 0x4790, 0x560d, 0xb08, 0xf68d, 0x1, 0x0);
        gbc.writeMem(0xef16, { 0xbb });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xa81e, gbc.sp());
        EXPECT(0xef17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xef16));
        // BB 0203
        gbc.setState(0x1a84, 0x6a3f, 0x6f80, 0xc06d, 0xebd0, 0xa13a, 0x1, 0x1);
        gbc.writeMem(0x1a84, { 0xbb });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x6a3f, gbc.sp());
        EXPECT(0x1a85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0204
        gbc.setState(0x6347, 0xb2f7, 0xd300, 0x6ac8, 0x331a, 0x30d8, 0x1, 0x0);
        gbc.writeMem(0x6347, { 0xbb });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xb2f7, gbc.sp());
        EXPECT(0x6348, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0205
        gbc.setState(0x8e61, 0x52a8, 0x8100, 0x3aae, 0x6368, 0x815b, 0x0, 0x0);
        gbc.writeMem(0x8e61, { 0xbb });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x52a8, gbc.sp());
        EXPECT(0x8e62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x8e61));
        // BB 0206
        gbc.setState(0x34c0, 0xd6ad, 0xa6c0, 0xa9da, 0x3eb3, 0x3484, 0x0, 0x0);
        gbc.writeMem(0x34c0, { 0xbb });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xd6ad, gbc.sp());
        EXPECT(0x34c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0207
        gbc.setState(0x9d1b, 0x7313, 0xf320, 0x8585, 0x1efc, 0xb42d, 0x1, 0x0);
        gbc.writeMem(0x9d1b, { 0xbb });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x7313, gbc.sp());
        EXPECT(0x9d1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x9d1b));
        // BB 0208
        gbc.setState(0x173b, 0xb827, 0xbad0, 0x4795, 0xfc5b, 0x600b, 0x0, 0x1);
        gbc.writeMem(0x173b, { 0xbb });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xb827, gbc.sp());
        EXPECT(0x173c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0209
        gbc.setState(0xe97f, 0x5bd0, 0xa3d0, 0x2568, 0x34c7, 0x4344, 0x1, 0x1);
        gbc.writeMem(0xe97f, { 0xbb });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x5bd0, gbc.sp());
        EXPECT(0xe980, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xe97f));
        // BB 020A
        gbc.setState(0x3d1f, 0x5860, 0xd630, 0xdfc1, 0xb6ec, 0x6e4d, 0x0, 0x1);
        gbc.writeMem(0x3d1f, { 0xbb });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x5860, gbc.sp());
        EXPECT(0x3d20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 020B
        gbc.setState(0xa8ae, 0x16dc, 0xe9c0, 0x8558, 0x1843, 0xa93e, 0x1, 0x1);
        gbc.writeMem(0xa8ae, { 0xbb });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x16dc, gbc.sp());
        EXPECT(0xa8af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xa8ae));
        // BB 020C
        gbc.setState(0x6b6c, 0x763b, 0x5c30, 0xb44, 0xdfcf, 0xc4f8, 0x1, 0x0);
        gbc.writeMem(0x6b6c, { 0xbb });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x763b, gbc.sp());
        EXPECT(0x6b6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 020D
        gbc.setState(0x22b, 0xc6d0, 0x9920, 0x9ca8, 0xa0f8, 0xc4b0, 0x1, 0x1);
        gbc.writeMem(0x22b, { 0xbb });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xc6d0, gbc.sp());
        EXPECT(0x22c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 020E
        gbc.setState(0x63b6, 0xbdf5, 0x340, 0x7b82, 0x5b8c, 0x88d, 0x1, 0x1);
        gbc.writeMem(0x63b6, { 0xbb });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xbdf5, gbc.sp());
        EXPECT(0x63b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 020F
        gbc.setState(0xb32b, 0x685d, 0x8640, 0xa7ce, 0x9866, 0x29e2, 0x0, 0x1);
        gbc.writeMem(0xb32b, { 0xbb });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x685d, gbc.sp());
        EXPECT(0xb32c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xb32b));
        // BB 0210
        gbc.setState(0xad96, 0x8b0c, 0x6050, 0xef97, 0xe18b, 0xf8ef, 0x1, 0x1);
        gbc.writeMem(0xad96, { 0xbb });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x8b0c, gbc.sp());
        EXPECT(0xad97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xad96));
        // BB 0211
        gbc.setState(0xc915, 0x55a0, 0x6d50, 0x3334, 0x6cbe, 0xcf5d, 0x1, 0x1);
        gbc.writeMem(0xc915, { 0xbb });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x55a0, gbc.sp());
        EXPECT(0xc916, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xc915));
        // BB 0212
        gbc.setState(0xe93c, 0xc0c1, 0xc500, 0x80f, 0xa6b1, 0x52fd, 0x0, 0x0);
        gbc.writeMem(0xe93c, { 0xbb });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xc0c1, gbc.sp());
        EXPECT(0xe93d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xe93c));
        // BB 0213
        gbc.setState(0x8475, 0x686d, 0x4860, 0xf48a, 0x9379, 0xefee, 0x1, 0x0);
        gbc.writeMem(0x8475, { 0xbb });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x686d, gbc.sp());
        EXPECT(0x8476, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x8475));
        // BB 0214
        gbc.setState(0x3d7c, 0x9387, 0xd690, 0x8667, 0x98ab, 0xbe01, 0x0, 0x0);
        gbc.writeMem(0x3d7c, { 0xbb });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x9387, gbc.sp());
        EXPECT(0x3d7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0215
        gbc.setState(0x1c4b, 0x34d3, 0x1010, 0x943f, 0x5fef, 0x6ce5, 0x1, 0x0);
        gbc.writeMem(0x1c4b, { 0xbb });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x34d3, gbc.sp());
        EXPECT(0x1c4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0216
        gbc.setState(0x809c, 0x3c9d, 0x3ec0, 0xdc20, 0xc2c7, 0x4432, 0x1, 0x1);
        gbc.writeMem(0x809c, { 0xbb });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x3c9d, gbc.sp());
        EXPECT(0x809d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x809c));
        // BB 0217
        gbc.setState(0xeab7, 0x7dbe, 0x6a80, 0x73c8, 0x8f1b, 0x73ee, 0x0, 0x1);
        gbc.writeMem(0xeab7, { 0xbb });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x7dbe, gbc.sp());
        EXPECT(0xeab8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xeab7));
        // BB 0218
        gbc.setState(0x3b44, 0x9501, 0x9820, 0x799c, 0x5bb, 0x2162, 0x0, 0x0);
        gbc.writeMem(0x3b44, { 0xbb });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x9501, gbc.sp());
        EXPECT(0x3b45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0219
        gbc.setState(0x4151, 0xe983, 0xa040, 0xd448, 0x6569, 0xc8c3, 0x1, 0x0);
        gbc.writeMem(0x4151, { 0xbb });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xe983, gbc.sp());
        EXPECT(0x4152, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 021A
        gbc.setState(0xe51d, 0xf980, 0x5c00, 0xcc98, 0x5f01, 0x7853, 0x0, 0x1);
        gbc.writeMem(0xe51d, { 0xbb });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xf980, gbc.sp());
        EXPECT(0xe51e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xe51d));
        // BB 021B
        gbc.setState(0xb7ef, 0x4fe, 0xda30, 0xa241, 0x2b27, 0x1c96, 0x0, 0x0);
        gbc.writeMem(0xb7ef, { 0xbb });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x4fe, gbc.sp());
        EXPECT(0xb7f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xb7ef));
        // BB 021D
        gbc.setState(0xbaf4, 0xc3da, 0xf070, 0xe270, 0xd952, 0x59cb, 0x0, 0x1);
        gbc.writeMem(0xbaf4, { 0xbb });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xc3da, gbc.sp());
        EXPECT(0xbaf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xbaf4));
        // BB 021E
        gbc.setState(0xae61, 0xd572, 0xc8a0, 0x98e9, 0x4aa2, 0x9478, 0x1, 0x0);
        gbc.writeMem(0xae61, { 0xbb });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xd572, gbc.sp());
        EXPECT(0xae62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xae61));
        // BB 021F
        gbc.setState(0xdb13, 0x7d40, 0x7bd0, 0xe382, 0x171c, 0x68fb, 0x0, 0x1);
        gbc.writeMem(0xdb13, { 0xbb });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x7d40, gbc.sp());
        EXPECT(0xdb14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xdb13));
        // BB 0220
        gbc.setState(0x7e11, 0xc5cf, 0xd5b0, 0xf238, 0x5658, 0x6b3d, 0x1, 0x0);
        gbc.writeMem(0x7e11, { 0xbb });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xc5cf, gbc.sp());
        EXPECT(0x7e12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0221
        gbc.setState(0x545e, 0x2595, 0x8220, 0x6d52, 0x67ed, 0x5c5a, 0x1, 0x0);
        gbc.writeMem(0x545e, { 0xbb });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x2595, gbc.sp());
        EXPECT(0x545f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0222
        gbc.setState(0x578e, 0xc6b8, 0x2f40, 0x3db3, 0x3066, 0x8dda, 0x0, 0x0);
        gbc.writeMem(0x578e, { 0xbb });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xc6b8, gbc.sp());
        EXPECT(0x578f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0223
        gbc.setState(0x5ea4, 0xa70f, 0xb620, 0xa9a8, 0x9b32, 0x6d73, 0x1, 0x1);
        gbc.writeMem(0x5ea4, { 0xbb });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xa70f, gbc.sp());
        EXPECT(0x5ea5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0224
        gbc.setState(0x1bb2, 0x9a02, 0x6e80, 0x3edb, 0x81e1, 0xa55b, 0x0, 0x0);
        gbc.writeMem(0x1bb2, { 0xbb });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x9a02, gbc.sp());
        EXPECT(0x1bb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0225
        gbc.setState(0xed67, 0x3374, 0xed80, 0x70ba, 0xfa7c, 0xfe92, 0x0, 0x1);
        gbc.writeMem(0xed67, { 0xbb });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x3374, gbc.sp());
        EXPECT(0xed68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xed67));
        // BB 0226
        gbc.setState(0xe8c5, 0x5308, 0x3590, 0xa64a, 0x7d65, 0x85b1, 0x1, 0x1);
        gbc.writeMem(0xe8c5, { 0xbb });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x5308, gbc.sp());
        EXPECT(0xe8c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xe8c5));
        // BB 0227
        gbc.setState(0x3d24, 0x28ef, 0x6c40, 0xbfae, 0x9949, 0xfd9c, 0x1, 0x0);
        gbc.writeMem(0x3d24, { 0xbb });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x28ef, gbc.sp());
        EXPECT(0x3d25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0228
        gbc.setState(0x52aa, 0xe041, 0x32b0, 0x238e, 0x2e5f, 0x9323, 0x0, 0x1);
        gbc.writeMem(0x52aa, { 0xbb });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xe041, gbc.sp());
        EXPECT(0x52ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0229
        gbc.setState(0xebae, 0x859d, 0x6c10, 0x3aca, 0x9377, 0x1077, 0x0, 0x1);
        gbc.writeMem(0xebae, { 0xbb });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x859d, gbc.sp());
        EXPECT(0xebaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xebae));
        // BB 022A
        gbc.setState(0x386c, 0x74e9, 0x8e60, 0xc5a0, 0x5bd9, 0xd500, 0x1, 0x0);
        gbc.writeMem(0x386c, { 0xbb });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x74e9, gbc.sp());
        EXPECT(0x386d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 022B
        gbc.setState(0xacfa, 0xf58b, 0x7a10, 0xcc01, 0x94ba, 0xb995, 0x1, 0x1);
        gbc.writeMem(0xacfa, { 0xbb });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xf58b, gbc.sp());
        EXPECT(0xacfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xacfa));
        // BB 022D
        gbc.setState(0xe9f8, 0xd5ec, 0x72a0, 0x89d0, 0xe872, 0xf588, 0x0, 0x0);
        gbc.writeMem(0xe9f8, { 0xbb });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xd5ec, gbc.sp());
        EXPECT(0xe9f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xe9f8));
        // BB 022E
        gbc.setState(0x40b7, 0x91e6, 0x8e00, 0xf871, 0x5e8f, 0xfd29, 0x1, 0x1);
        gbc.writeMem(0x40b7, { 0xbb });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x91e6, gbc.sp());
        EXPECT(0x40b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 022F
        gbc.setState(0xd94, 0xb963, 0x82e0, 0x3b78, 0x4e51, 0xcafc, 0x1, 0x0);
        gbc.writeMem(0xd94, { 0xbb });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xb963, gbc.sp());
        EXPECT(0xd95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0230
        gbc.setState(0x441c, 0x8561, 0x5f40, 0xd5e7, 0x1817, 0xca11, 0x1, 0x0);
        gbc.writeMem(0x441c, { 0xbb });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x8561, gbc.sp());
        EXPECT(0x441d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0231
        gbc.setState(0x83c0, 0x89e6, 0xde80, 0xf187, 0x5430, 0x38ae, 0x0, 0x0);
        gbc.writeMem(0x83c0, { 0xbb });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x89e6, gbc.sp());
        EXPECT(0x83c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x83c0));
        // BB 0232
        gbc.setState(0x66fd, 0xa091, 0x3310, 0x7913, 0xfbe9, 0x4db5, 0x0, 0x0);
        gbc.writeMem(0x66fd, { 0xbb });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xa091, gbc.sp());
        EXPECT(0x66fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0233
        gbc.setState(0xb418, 0xdb4f, 0xf190, 0xda83, 0x7764, 0xe77d, 0x0, 0x1);
        gbc.writeMem(0xb418, { 0xbb });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xdb4f, gbc.sp());
        EXPECT(0xb419, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xb418));
        // BB 0234
        gbc.setState(0x1ec3, 0xf871, 0xc960, 0xf255, 0xdf55, 0xcd75, 0x1, 0x0);
        gbc.writeMem(0x1ec3, { 0xbb });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xf871, gbc.sp());
        EXPECT(0x1ec4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0235
        gbc.setState(0x8a56, 0x7c2c, 0x7f80, 0xab9e, 0x6425, 0xd809, 0x1, 0x1);
        gbc.writeMem(0x8a56, { 0xbb });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x7c2c, gbc.sp());
        EXPECT(0x8a57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x8a56));
        // BB 0236
        gbc.setState(0xa8d5, 0x54e9, 0xcda0, 0x6521, 0x23a2, 0xa01, 0x0, 0x1);
        gbc.writeMem(0xa8d5, { 0xbb });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x54e9, gbc.sp());
        EXPECT(0xa8d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xa8d5));
        // BB 0237
        gbc.setState(0xe8bc, 0x74e7, 0x4da0, 0x67c4, 0xd8af, 0x36a9, 0x1, 0x0);
        gbc.writeMem(0xe8bc, { 0xbb });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x74e7, gbc.sp());
        EXPECT(0xe8bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xe8bc));
        // BB 0238
        gbc.setState(0xbd97, 0xd685, 0xd790, 0xce4d, 0x5a68, 0xb566, 0x1, 0x0);
        gbc.writeMem(0xbd97, { 0xbb });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xd685, gbc.sp());
        EXPECT(0xbd98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xbd97));
        // BB 0239
        gbc.setState(0xf00, 0x8858, 0xf8f0, 0x1bf0, 0x5cd5, 0x3c50, 0x1, 0x1);
        gbc.writeMem(0xf00, { 0xbb });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x8858, gbc.sp());
        EXPECT(0xf01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 023A
        gbc.setState(0x75ca, 0x4970, 0xde20, 0x55d1, 0x51, 0x6129, 0x1, 0x0);
        gbc.writeMem(0x75ca, { 0xbb });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x4970, gbc.sp());
        EXPECT(0x75cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 023B
        gbc.setState(0xac91, 0xfc21, 0x1080, 0x10e3, 0xf2b4, 0x5d2e, 0x0, 0x1);
        gbc.writeMem(0xac91, { 0xbb });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xfc21, gbc.sp());
        EXPECT(0xac92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xac91));
        // BB 023C
        gbc.setState(0xc068, 0x9da4, 0x9610, 0x12d, 0x327a, 0xee8a, 0x0, 0x0);
        gbc.writeMem(0xc068, { 0xbb });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x9da4, gbc.sp());
        EXPECT(0xc069, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xc068));
        // BB 023D
        gbc.setState(0x8d87, 0x1795, 0xa4f0, 0xf1b6, 0x5216, 0x4d6a, 0x0, 0x1);
        gbc.writeMem(0x8d87, { 0xbb });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x1795, gbc.sp());
        EXPECT(0x8d88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x8d87));
        // BB 023E
        gbc.setState(0x9578, 0xab32, 0xaae0, 0xda68, 0xccd8, 0x5dca, 0x1, 0x0);
        gbc.writeMem(0x9578, { 0xbb });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xab32, gbc.sp());
        EXPECT(0x9579, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x9578));
        // BB 023F
        gbc.setState(0xef16, 0x5c49, 0xb7a0, 0xf7c, 0xb2a6, 0x32f, 0x1, 0x0);
        gbc.writeMem(0xef16, { 0xbb });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x5c49, gbc.sp());
        EXPECT(0xef17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xef16));
        // BB 0240
        gbc.setState(0xd32e, 0x8de0, 0xc940, 0x987d, 0x9871, 0x5f12, 0x1, 0x0);
        gbc.writeMem(0xd32e, { 0xbb });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x8de0, gbc.sp());
        EXPECT(0xd32f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xd32e));
        // BB 0241
        gbc.setState(0xd204, 0x1d62, 0xd940, 0x1771, 0xa834, 0xac9f, 0x1, 0x1);
        gbc.writeMem(0xd204, { 0xbb });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x1d62, gbc.sp());
        EXPECT(0xd205, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xd204));
        // BB 0242
        gbc.setState(0x7560, 0x949, 0x7fd0, 0x58bb, 0x4588, 0x3019, 0x1, 0x0);
        gbc.writeMem(0x7560, { 0xbb });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x949, gbc.sp());
        EXPECT(0x7561, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0243
        gbc.setState(0x6d6e, 0xcccc, 0x1700, 0xbfec, 0xa024, 0x4de, 0x0, 0x1);
        gbc.writeMem(0x6d6e, { 0xbb });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xcccc, gbc.sp());
        EXPECT(0x6d6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0244
        gbc.setState(0x33af, 0xaac7, 0xcbf0, 0x432f, 0xd5d6, 0x31cb, 0x1, 0x0);
        gbc.writeMem(0x33af, { 0xbb });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xaac7, gbc.sp());
        EXPECT(0x33b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0245
        gbc.setState(0x5713, 0x1ed0, 0x53e0, 0x13b2, 0x8544, 0x8dcf, 0x1, 0x1);
        gbc.writeMem(0x5713, { 0xbb });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x1ed0, gbc.sp());
        EXPECT(0x5714, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0246
        gbc.setState(0x7e67, 0x395d, 0xb2d0, 0x5036, 0x5453, 0x30fb, 0x1, 0x0);
        gbc.writeMem(0x7e67, { 0xbb });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x395d, gbc.sp());
        EXPECT(0x7e68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0247
        gbc.setState(0x22e0, 0x4ed6, 0x7760, 0x1d6, 0x71d6, 0x6a43, 0x0, 0x0);
        gbc.writeMem(0x22e0, { 0xbb });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x4ed6, gbc.sp());
        EXPECT(0x22e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0248
        gbc.setState(0x8bb, 0x2732, 0x2a20, 0x97fd, 0xac4b, 0xdaec, 0x1, 0x0);
        gbc.writeMem(0x8bb, { 0xbb });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x2732, gbc.sp());
        EXPECT(0x8bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0249
        gbc.setState(0xfd9, 0xa1d3, 0x3390, 0xfe85, 0x5bdb, 0xb14, 0x0, 0x0);
        gbc.writeMem(0xfd9, { 0xbb });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xa1d3, gbc.sp());
        EXPECT(0xfda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 024A
        gbc.setState(0xd1fc, 0x3cb0, 0x7d20, 0x5f25, 0xa24d, 0x23dc, 0x1, 0x1);
        gbc.writeMem(0xd1fc, { 0xbb });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x3cb0, gbc.sp());
        EXPECT(0xd1fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xd1fc));
        // BB 024B
        gbc.setState(0x5a45, 0xfa9f, 0x59f0, 0xd9ea, 0xa17c, 0x894b, 0x0, 0x1);
        gbc.writeMem(0x5a45, { 0xbb });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xfa9f, gbc.sp());
        EXPECT(0x5a46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 024C
        gbc.setState(0xebcc, 0x8dcc, 0x2380, 0x74bb, 0x1520, 0xc7b9, 0x1, 0x0);
        gbc.writeMem(0xebcc, { 0xbb });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x8dcc, gbc.sp());
        EXPECT(0xebcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xebcc));
        // BB 024D
        gbc.setState(0x8f6d, 0x8a07, 0x2490, 0x65d8, 0x31e8, 0xbe9, 0x1, 0x1);
        gbc.writeMem(0x8f6d, { 0xbb });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x8a07, gbc.sp());
        EXPECT(0x8f6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x8f6d));
        // BB 024E
        gbc.setState(0xa866, 0xaf86, 0xe880, 0x450c, 0xaf10, 0x62ae, 0x1, 0x0);
        gbc.writeMem(0xa866, { 0xbb });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xaf86, gbc.sp());
        EXPECT(0xa867, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xa866));
        // BB 024F
        gbc.setState(0x3525, 0x35f9, 0x27d0, 0xf47, 0x85ef, 0x7811, 0x0, 0x1);
        gbc.writeMem(0x3525, { 0xbb });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x35f9, gbc.sp());
        EXPECT(0x3526, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0250
        gbc.setState(0x3f23, 0xd3c, 0xd80, 0xc72, 0xb805, 0xc85a, 0x0, 0x1);
        gbc.writeMem(0x3f23, { 0xbb });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xd3c, gbc.sp());
        EXPECT(0x3f24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0252
        gbc.setState(0x23d9, 0x6290, 0xc3b0, 0x429b, 0x3322, 0x65a2, 0x1, 0x1);
        gbc.writeMem(0x23d9, { 0xbb });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x6290, gbc.sp());
        EXPECT(0x23da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0253
        gbc.setState(0xa193, 0xd4d4, 0x8a10, 0xfb52, 0xbf2d, 0xff58, 0x0, 0x0);
        gbc.writeMem(0xa193, { 0xbb });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xd4d4, gbc.sp());
        EXPECT(0xa194, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xa193));
        // BB 0254
        gbc.setState(0xe9e3, 0x260a, 0x5b30, 0x8d29, 0x56ac, 0x4a7d, 0x1, 0x0);
        gbc.writeMem(0xe9e3, { 0xbb });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x260a, gbc.sp());
        EXPECT(0xe9e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xe9e3));
        // BB 0255
        gbc.setState(0xb92a, 0x3e14, 0x55b0, 0xda41, 0xa6ce, 0xb3e6, 0x0, 0x1);
        gbc.writeMem(0xb92a, { 0xbb });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x3e14, gbc.sp());
        EXPECT(0xb92b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xb92a));
        // BB 0256
        gbc.setState(0x425f, 0xd607, 0x49d0, 0xd8ab, 0x5141, 0xec61, 0x0, 0x1);
        gbc.writeMem(0x425f, { 0xbb });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xd607, gbc.sp());
        EXPECT(0x4260, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0257
        gbc.setState(0xdbc6, 0x5b04, 0xf390, 0xab5d, 0xbaa6, 0x58ac, 0x1, 0x0);
        gbc.writeMem(0xdbc6, { 0xbb });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x5b04, gbc.sp());
        EXPECT(0xdbc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xdbc6));
        // BB 0258
        gbc.setState(0xc723, 0x2b3, 0xfd0, 0x26f9, 0xce61, 0x4376, 0x1, 0x0);
        gbc.writeMem(0xc723, { 0xbb });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x2b3, gbc.sp());
        EXPECT(0xc724, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xc723));
        // BB 0259
        gbc.setState(0xa901, 0xb4bd, 0x8640, 0x9a08, 0x9ad0, 0x35c6, 0x1, 0x1);
        gbc.writeMem(0xa901, { 0xbb });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xb4bd, gbc.sp());
        EXPECT(0xa902, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xa901));
        // BB 025A
        gbc.setState(0x905e, 0x9b58, 0x2180, 0x891a, 0x2623, 0xe3b8, 0x0, 0x0);
        gbc.writeMem(0x905e, { 0xbb });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x9b58, gbc.sp());
        EXPECT(0x905f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x905e));
        // BB 025B
        gbc.setState(0x613c, 0x616b, 0xa500, 0xa166, 0xd698, 0xa1c5, 0x1, 0x0);
        gbc.writeMem(0x613c, { 0xbb });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x616b, gbc.sp());
        EXPECT(0x613d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 025C
        gbc.setState(0xa717, 0xd079, 0xad00, 0x102c, 0x3422, 0xbb2c, 0x1, 0x1);
        gbc.writeMem(0xa717, { 0xbb });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xd079, gbc.sp());
        EXPECT(0xa718, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xa717));
        // BB 025D
        gbc.setState(0x5e4b, 0xe909, 0xdd90, 0x9fd8, 0x5e11, 0xd8b4, 0x0, 0x0);
        gbc.writeMem(0x5e4b, { 0xbb });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xe909, gbc.sp());
        EXPECT(0x5e4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 025E
        gbc.setState(0x5e68, 0xa52e, 0x9cb0, 0x1405, 0xc05d, 0xe31a, 0x1, 0x1);
        gbc.writeMem(0x5e68, { 0xbb });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xa52e, gbc.sp());
        EXPECT(0x5e69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 025F
        gbc.setState(0xc38d, 0x90cc, 0x2720, 0x25b1, 0xc91c, 0xa62, 0x0, 0x1);
        gbc.writeMem(0xc38d, { 0xbb });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x90cc, gbc.sp());
        EXPECT(0xc38e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xc38d));
        // BB 0260
        gbc.setState(0x999b, 0xe5fb, 0xed70, 0xb8ac, 0x655c, 0x2924, 0x1, 0x1);
        gbc.writeMem(0x999b, { 0xbb });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xe5fb, gbc.sp());
        EXPECT(0x999c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x999b));
        // BB 0261
        gbc.setState(0x7984, 0xdcdb, 0x7fe0, 0xcd32, 0x794f, 0x5136, 0x0, 0x1);
        gbc.writeMem(0x7984, { 0xbb });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xdcdb, gbc.sp());
        EXPECT(0x7985, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0262
        gbc.setState(0xcead, 0xabda, 0x1fe0, 0x3cbb, 0x6e0b, 0x243e, 0x1, 0x1);
        gbc.writeMem(0xcead, { 0xbb });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xabda, gbc.sp());
        EXPECT(0xceae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xcead));
        // BB 0263
        gbc.setState(0xa91f, 0x195a, 0xd730, 0x3462, 0xb074, 0xe2c0, 0x0, 0x1);
        gbc.writeMem(0xa91f, { 0xbb });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x195a, gbc.sp());
        EXPECT(0xa920, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xa91f));
        // BB 0264
        gbc.setState(0x928d, 0xb97, 0x6fb0, 0x54b5, 0xc2d9, 0xe2c2, 0x1, 0x1);
        gbc.writeMem(0x928d, { 0xbb });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xb97, gbc.sp());
        EXPECT(0x928e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x928d));
        // BB 0266
        gbc.setState(0x5d69, 0x9a8d, 0x7db0, 0x489e, 0x17c0, 0x427c, 0x1, 0x1);
        gbc.writeMem(0x5d69, { 0xbb });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x9a8d, gbc.sp());
        EXPECT(0x5d6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0267
        gbc.setState(0xb9ae, 0xd3e5, 0x3340, 0x1cf9, 0x6a2c, 0x628c, 0x1, 0x1);
        gbc.writeMem(0xb9ae, { 0xbb });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xd3e5, gbc.sp());
        EXPECT(0xb9af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xb9ae));
        // BB 0268
        gbc.setState(0x4c20, 0x5c4f, 0x8700, 0x2096, 0x6f94, 0x197c, 0x0, 0x1);
        gbc.writeMem(0x4c20, { 0xbb });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x5c4f, gbc.sp());
        EXPECT(0x4c21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0269
        gbc.setState(0x6ac6, 0x6f97, 0x9320, 0xb3f6, 0x5c6e, 0x73dd, 0x1, 0x1);
        gbc.writeMem(0x6ac6, { 0xbb });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x6f97, gbc.sp());
        EXPECT(0x6ac7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 026A
        gbc.setState(0x3e1a, 0x4885, 0xc920, 0xec31, 0xccd2, 0x2605, 0x0, 0x0);
        gbc.writeMem(0x3e1a, { 0xbb });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x4885, gbc.sp());
        EXPECT(0x3e1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 026B
        gbc.setState(0x4206, 0xfdee, 0xd170, 0x8682, 0x29b, 0xe44e, 0x1, 0x0);
        gbc.writeMem(0x4206, { 0xbb });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xfdee, gbc.sp());
        EXPECT(0x4207, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 026C
        gbc.setState(0x701e, 0xf343, 0x2230, 0x3e98, 0xd172, 0x683b, 0x1, 0x0);
        gbc.writeMem(0x701e, { 0xbb });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xf343, gbc.sp());
        EXPECT(0x701f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 026D
        gbc.setState(0x76ac, 0xf8d2, 0xade0, 0x7f90, 0xb22, 0xd383, 0x1, 0x1);
        gbc.writeMem(0x76ac, { 0xbb });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xf8d2, gbc.sp());
        EXPECT(0x76ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 026E
        gbc.setState(0xd497, 0x7c8f, 0x7770, 0x7c15, 0x5be2, 0x6a88, 0x0, 0x1);
        gbc.writeMem(0xd497, { 0xbb });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x7c8f, gbc.sp());
        EXPECT(0xd498, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xd497));
        // BB 026F
        gbc.setState(0xb466, 0x41ff, 0x770, 0xedb, 0x39b6, 0xd663, 0x0, 0x0);
        gbc.writeMem(0xb466, { 0xbb });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x41ff, gbc.sp());
        EXPECT(0xb467, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xb466));
        // BB 0270
        gbc.setState(0x7f8f, 0x5411, 0xd570, 0x938f, 0x448d, 0xa46d, 0x1, 0x1);
        gbc.writeMem(0x7f8f, { 0xbb });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x5411, gbc.sp());
        EXPECT(0x7f90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0271
        gbc.setState(0x53b5, 0xc957, 0x2560, 0xe81, 0x6f3c, 0x19b7, 0x0, 0x1);
        gbc.writeMem(0x53b5, { 0xbb });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xc957, gbc.sp());
        EXPECT(0x53b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0272
        gbc.setState(0x8240, 0x771b, 0xe1f0, 0x5118, 0xc4cf, 0xf4e6, 0x1, 0x1);
        gbc.writeMem(0x8240, { 0xbb });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x771b, gbc.sp());
        EXPECT(0x8241, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x8240));
        // BB 0273
        gbc.setState(0x6c52, 0xdc74, 0xced0, 0x9e47, 0xf731, 0xc466, 0x1, 0x0);
        gbc.writeMem(0x6c52, { 0xbb });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xdc74, gbc.sp());
        EXPECT(0x6c53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0274
        gbc.setState(0x73c9, 0x312, 0xb4e0, 0xf513, 0x97cc, 0xc099, 0x1, 0x1);
        gbc.writeMem(0x73c9, { 0xbb });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x312, gbc.sp());
        EXPECT(0x73ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0275
        gbc.setState(0xe48a, 0x4dd4, 0x4e70, 0x68dc, 0x6178, 0x5e97, 0x0, 0x1);
        gbc.writeMem(0xe48a, { 0xbb });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x4dd4, gbc.sp());
        EXPECT(0xe48b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xe48a));
        // BB 0276
        gbc.setState(0x9de, 0x8f0, 0x6460, 0xa59c, 0xdc5a, 0x4b7a, 0x1, 0x1);
        gbc.writeMem(0x9de, { 0xbb });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x8f0, gbc.sp());
        EXPECT(0x9df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0277
        gbc.setState(0x6c8d, 0x361e, 0x3dc0, 0x6169, 0x2fb0, 0xb75f, 0x1, 0x0);
        gbc.writeMem(0x6c8d, { 0xbb });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x361e, gbc.sp());
        EXPECT(0x6c8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0278
        gbc.setState(0xe022, 0x598, 0x4170, 0x966c, 0xc7c3, 0x3480, 0x0, 0x0);
        gbc.writeMem(0xe022, { 0xbb });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x598, gbc.sp());
        EXPECT(0xe023, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xe022));
        // BB 0279
        gbc.setState(0xc6da, 0xf7f6, 0x81a0, 0xc536, 0x2e46, 0x111d, 0x0, 0x1);
        gbc.writeMem(0xc6da, { 0xbb });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xf7f6, gbc.sp());
        EXPECT(0xc6db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xc6da));
        // BB 027A
        gbc.setState(0x67c2, 0x5092, 0x6ad0, 0x9ec9, 0x913f, 0x216d, 0x0, 0x0);
        gbc.writeMem(0x67c2, { 0xbb });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x5092, gbc.sp());
        EXPECT(0x67c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 027B
        gbc.setState(0x638f, 0x3b9c, 0x7660, 0xe7ee, 0x156f, 0xdffd, 0x1, 0x0);
        gbc.writeMem(0x638f, { 0xbb });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x3b9c, gbc.sp());
        EXPECT(0x6390, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 027C
        gbc.setState(0x77b6, 0x6933, 0x8440, 0x8b8, 0x5163, 0x2183, 0x0, 0x1);
        gbc.writeMem(0x77b6, { 0xbb });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x6933, gbc.sp());
        EXPECT(0x77b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 027D
        gbc.setState(0xb1cf, 0xa8e9, 0x29b0, 0x7673, 0x3e89, 0xbb07, 0x0, 0x0);
        gbc.writeMem(0xb1cf, { 0xbb });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xa8e9, gbc.sp());
        EXPECT(0xb1d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xb1cf));
        // BB 027E
        gbc.setState(0xa3be, 0x4fc2, 0x5830, 0x9e3c, 0xdd13, 0xa966, 0x1, 0x1);
        gbc.writeMem(0xa3be, { 0xbb });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x4fc2, gbc.sp());
        EXPECT(0xa3bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xa3be));
        // BB 027F
        gbc.setState(0x606d, 0x4328, 0xc520, 0xa3fc, 0x5a82, 0x25d4, 0x1, 0x1);
        gbc.writeMem(0x606d, { 0xbb });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x4328, gbc.sp());
        EXPECT(0x606e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0280
        gbc.setState(0x6ea1, 0x9aa6, 0xd9c0, 0xfe36, 0x3e6e, 0x269e, 0x1, 0x0);
        gbc.writeMem(0x6ea1, { 0xbb });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x9aa6, gbc.sp());
        EXPECT(0x6ea2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0281
        gbc.setState(0x1692, 0xf4db, 0x3480, 0x4ce6, 0xd895, 0x90ba, 0x1, 0x1);
        gbc.writeMem(0x1692, { 0xbb });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xf4db, gbc.sp());
        EXPECT(0x1693, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0282
        gbc.setState(0x5271, 0x55a4, 0x9290, 0x30a2, 0x155c, 0x5d5c, 0x0, 0x0);
        gbc.writeMem(0x5271, { 0xbb });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x55a4, gbc.sp());
        EXPECT(0x5272, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0283
        gbc.setState(0xc304, 0x6ad6, 0x1230, 0xc6bd, 0xda50, 0x91c6, 0x1, 0x0);
        gbc.writeMem(0xc304, { 0xbb });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x6ad6, gbc.sp());
        EXPECT(0xc305, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xc304));
        // BB 0284
        gbc.setState(0xc3f9, 0x292, 0xc9b0, 0x7d64, 0x3fbc, 0xb6de, 0x0, 0x0);
        gbc.writeMem(0xc3f9, { 0xbb });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x292, gbc.sp());
        EXPECT(0xc3fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xc3f9));
        // BB 0285
        gbc.setState(0x94, 0x5918, 0xb8e0, 0xc1e8, 0x18ad, 0xb2f0, 0x1, 0x1);
        gbc.writeMem(0x94, { 0xbb });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x5918, gbc.sp());
        EXPECT(0x95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0286
        gbc.setState(0x2d4c, 0xbd8b, 0x8580, 0x7cc, 0x9d67, 0xd52d, 0x1, 0x0);
        gbc.writeMem(0x2d4c, { 0xbb });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xbd8b, gbc.sp());
        EXPECT(0x2d4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0287
        gbc.setState(0xdcd2, 0xf8b9, 0xba00, 0xb54d, 0xf276, 0x9142, 0x1, 0x1);
        gbc.writeMem(0xdcd2, { 0xbb });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xf8b9, gbc.sp());
        EXPECT(0xdcd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xdcd2));
        // BB 0288
        gbc.setState(0x4459, 0x9a27, 0xf240, 0x34c4, 0x789f, 0x6eec, 0x0, 0x0);
        gbc.writeMem(0x4459, { 0xbb });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x9a27, gbc.sp());
        EXPECT(0x445a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0289
        gbc.setState(0x8be4, 0x3840, 0xc850, 0x11ce, 0xad4, 0x7473, 0x1, 0x1);
        gbc.writeMem(0x8be4, { 0xbb });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x3840, gbc.sp());
        EXPECT(0x8be5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x8be4));
        // BB 028A
        gbc.setState(0x3576, 0x2e7d, 0x9350, 0x4293, 0x44c8, 0x8bac, 0x1, 0x0);
        gbc.writeMem(0x3576, { 0xbb });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x2e7d, gbc.sp());
        EXPECT(0x3577, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 028B
        gbc.setState(0x889c, 0x1e7a, 0xce50, 0x7c4e, 0x960d, 0xe5f9, 0x1, 0x0);
        gbc.writeMem(0x889c, { 0xbb });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x1e7a, gbc.sp());
        EXPECT(0x889d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x889c));
        // BB 028C
        gbc.setState(0xd554, 0x1686, 0x8890, 0xf5f0, 0x80d3, 0x9cc5, 0x1, 0x1);
        gbc.writeMem(0xd554, { 0xbb });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x1686, gbc.sp());
        EXPECT(0xd555, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xd554));
        // BB 028D
        gbc.setState(0xab72, 0xacd4, 0xa6f0, 0x98c9, 0x5fa4, 0x406d, 0x0, 0x1);
        gbc.writeMem(0xab72, { 0xbb });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xacd4, gbc.sp());
        EXPECT(0xab73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xab72));
        // BB 028E
        gbc.setState(0xac48, 0x7873, 0xa240, 0xa37b, 0xd34b, 0xdc44, 0x1, 0x1);
        gbc.writeMem(0xac48, { 0xbb });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x7873, gbc.sp());
        EXPECT(0xac49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xac48));
        // BB 028F
        gbc.setState(0x50d0, 0xc0e8, 0x59d0, 0xbca5, 0x9142, 0xd92e, 0x1, 0x0);
        gbc.writeMem(0x50d0, { 0xbb });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xc0e8, gbc.sp());
        EXPECT(0x50d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0290
        gbc.setState(0x2bb8, 0x4656, 0x3770, 0x7f7b, 0x780f, 0xe897, 0x0, 0x0);
        gbc.writeMem(0x2bb8, { 0xbb });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x4656, gbc.sp());
        EXPECT(0x2bb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0291
        gbc.setState(0x6ebb, 0x6a1e, 0xe860, 0xb5ee, 0x405, 0xfb69, 0x0, 0x1);
        gbc.writeMem(0x6ebb, { 0xbb });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x6a1e, gbc.sp());
        EXPECT(0x6ebc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0292
        gbc.setState(0x90a9, 0xd869, 0xce20, 0xb5db, 0x36a6, 0xa643, 0x1, 0x1);
        gbc.writeMem(0x90a9, { 0xbb });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xd869, gbc.sp());
        EXPECT(0x90aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x90a9));
        // BB 0293
        gbc.setState(0x8f5f, 0x6df, 0x2dd0, 0x84b6, 0x9b26, 0xe411, 0x0, 0x0);
        gbc.writeMem(0x8f5f, { 0xbb });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x6df, gbc.sp());
        EXPECT(0x8f60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x8f5f));
        // BB 0294
        gbc.setState(0xe211, 0xece4, 0x9110, 0xb0c, 0xc928, 0xf25b, 0x1, 0x0);
        gbc.writeMem(0xe211, { 0xbb });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xece4, gbc.sp());
        EXPECT(0xe212, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xe211));
        // BB 0295
        gbc.setState(0x2b59, 0x9821, 0xaa70, 0x676e, 0xab2f, 0xb14b, 0x0, 0x0);
        gbc.writeMem(0x2b59, { 0xbb });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x9821, gbc.sp());
        EXPECT(0x2b5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0296
        gbc.setState(0xb695, 0xcfcd, 0xad20, 0xea67, 0xfa66, 0xf158, 0x0, 0x0);
        gbc.writeMem(0xb695, { 0xbb });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xcfcd, gbc.sp());
        EXPECT(0xb696, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xb695));
        // BB 0297
        gbc.setState(0x9ba, 0x1139, 0x9490, 0xe4ba, 0xe5b1, 0xad7f, 0x1, 0x0);
        gbc.writeMem(0x9ba, { 0xbb });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x1139, gbc.sp());
        EXPECT(0x9bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0298
        gbc.setState(0x7804, 0xfff, 0x4290, 0x6813, 0xe77c, 0x12f4, 0x1, 0x1);
        gbc.writeMem(0x7804, { 0xbb });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xfff, gbc.sp());
        EXPECT(0x7805, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0299
        gbc.setState(0x3ba5, 0xcdf, 0x63f0, 0x98d8, 0x2fa4, 0x20fd, 0x0, 0x0);
        gbc.writeMem(0x3ba5, { 0xbb });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xcdf, gbc.sp());
        EXPECT(0x3ba6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 029A
        gbc.setState(0x80f8, 0xd4e7, 0xcb50, 0xded1, 0x15e3, 0x2724, 0x0, 0x0);
        gbc.writeMem(0x80f8, { 0xbb });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xd4e7, gbc.sp());
        EXPECT(0x80f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x80f8));
        // BB 029B
        gbc.setState(0x3266, 0x76af, 0x7160, 0x7fa0, 0xb767, 0x4175, 0x0, 0x0);
        gbc.writeMem(0x3266, { 0xbb });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x76af, gbc.sp());
        EXPECT(0x3267, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 029C
        gbc.setState(0xbc04, 0xfc0d, 0xaee0, 0x63af, 0x8cf6, 0xbd75, 0x0, 0x1);
        gbc.writeMem(0xbc04, { 0xbb });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xfc0d, gbc.sp());
        EXPECT(0xbc05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xbc04));
        // BB 029D
        gbc.setState(0xbedd, 0x5b21, 0x5de0, 0x3cb2, 0xb600, 0xcdee, 0x0, 0x1);
        gbc.writeMem(0xbedd, { 0xbb });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x5b21, gbc.sp());
        EXPECT(0xbede, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xbedd));
        // BB 029E
        gbc.setState(0x783a, 0x58a4, 0xe370, 0x7156, 0x9aee, 0xad8, 0x0, 0x0);
        gbc.writeMem(0x783a, { 0xbb });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x58a4, gbc.sp());
        EXPECT(0x783b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 029F
        gbc.setState(0xd423, 0x4444, 0x3a30, 0xbf32, 0xa961, 0x2c88, 0x1, 0x1);
        gbc.writeMem(0xd423, { 0xbb });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x4444, gbc.sp());
        EXPECT(0xd424, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xd423));
        // BB 02A0
        gbc.setState(0x39bf, 0xa074, 0x72e0, 0x605c, 0xc31, 0xec, 0x0, 0x0);
        gbc.writeMem(0x39bf, { 0xbb });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xa074, gbc.sp());
        EXPECT(0x39c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 02A1
        gbc.setState(0xcec7, 0xe479, 0xe3b0, 0xff12, 0xf67d, 0xe275, 0x1, 0x0);
        gbc.writeMem(0xcec7, { 0xbb });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xe479, gbc.sp());
        EXPECT(0xcec8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xcec7));
        // BB 02A2
        gbc.setState(0x923b, 0x1474, 0x7dc0, 0x2dde, 0x6bb4, 0xba5b, 0x0, 0x0);
        gbc.writeMem(0x923b, { 0xbb });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x1474, gbc.sp());
        EXPECT(0x923c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x923b));
        // BB 02A3
        gbc.setState(0x5950, 0x101, 0xda20, 0xe0f2, 0x37c9, 0x4074, 0x1, 0x1);
        gbc.writeMem(0x5950, { 0xbb });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x101, gbc.sp());
        EXPECT(0x5951, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 02A5
        gbc.setState(0x8ec8, 0xc5f0, 0x7130, 0x74c7, 0x46ed, 0x701a, 0x1, 0x1);
        gbc.writeMem(0x8ec8, { 0xbb });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xc5f0, gbc.sp());
        EXPECT(0x8ec9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x8ec8));
        // BB 02A6
        gbc.setState(0xd498, 0x8dc1, 0xfca0, 0xd9aa, 0x2456, 0x1907, 0x1, 0x1);
        gbc.writeMem(0xd498, { 0xbb });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x8dc1, gbc.sp());
        EXPECT(0xd499, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xd498));
        // BB 02A7
        gbc.setState(0x9a5, 0x4881, 0xf490, 0x1cb4, 0xdfc6, 0x62ff, 0x0, 0x1);
        gbc.writeMem(0x9a5, { 0xbb });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x4881, gbc.sp());
        EXPECT(0x9a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 02A8
        gbc.setState(0x71a7, 0x8ac1, 0x99e0, 0xf133, 0x256c, 0x9e74, 0x0, 0x0);
        gbc.writeMem(0x71a7, { 0xbb });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x8ac1, gbc.sp());
        EXPECT(0x71a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 02A9
        gbc.setState(0x789a, 0xbe24, 0xc200, 0x446a, 0xd6ce, 0xe86b, 0x0, 0x1);
        gbc.writeMem(0x789a, { 0xbb });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xbe24, gbc.sp());
        EXPECT(0x789b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 02AA
        gbc.setState(0x6021, 0x682a, 0xf5d0, 0x2a79, 0x47f8, 0x4bbc, 0x0, 0x1);
        gbc.writeMem(0x6021, { 0xbb });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x682a, gbc.sp());
        EXPECT(0x6022, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 02AB
        gbc.setState(0x39be, 0x96df, 0xc2a0, 0xa019, 0x66fe, 0x7feb, 0x0, 0x0);
        gbc.writeMem(0x39be, { 0xbb });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x96df, gbc.sp());
        EXPECT(0x39bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 02AC
        gbc.setState(0x157d, 0x37ec, 0x1300, 0x3054, 0xa96d, 0x1706, 0x0, 0x0);
        gbc.writeMem(0x157d, { 0xbb });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x37ec, gbc.sp());
        EXPECT(0x157e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 02AD
        gbc.setState(0xe7eb, 0x16d0, 0xebd0, 0x6931, 0x78c9, 0xf000, 0x1, 0x0);
        gbc.writeMem(0xe7eb, { 0xbb });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x16d0, gbc.sp());
        EXPECT(0xe7ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xe7eb));
        // BB 02AE
        gbc.setState(0xe9bd, 0xce4b, 0xa0a0, 0x78c0, 0x86fd, 0x6e2e, 0x1, 0x1);
        gbc.writeMem(0xe9bd, { 0xbb });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xce4b, gbc.sp());
        EXPECT(0xe9be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xe9bd));
        // BB 02AF
        gbc.setState(0x56a2, 0x4387, 0x6c90, 0xa794, 0xf4ee, 0x4f44, 0x0, 0x1);
        gbc.writeMem(0x56a2, { 0xbb });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x4387, gbc.sp());
        EXPECT(0x56a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 02B0
        gbc.setState(0xbd0d, 0x2b65, 0x2020, 0x68e4, 0x6a7e, 0xb20d, 0x0, 0x0);
        gbc.writeMem(0xbd0d, { 0xbb });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x2b65, gbc.sp());
        EXPECT(0xbd0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xbd0d));
        // BB 02B2
        gbc.setState(0x9ebf, 0x72d5, 0xd860, 0x7ba7, 0x75c5, 0x1b80, 0x0, 0x0);
        gbc.writeMem(0x9ebf, { 0xbb });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x72d5, gbc.sp());
        EXPECT(0x9ec0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x9ebf));
        // BB 02B3
        gbc.setState(0xbd32, 0x22d3, 0xf010, 0x495b, 0x16d6, 0x9a2, 0x1, 0x1);
        gbc.writeMem(0xbd32, { 0xbb });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x22d3, gbc.sp());
        EXPECT(0xbd33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xbd32));
        // BB 02B4
        gbc.setState(0x86a9, 0x739f, 0x5cc0, 0xcc88, 0x83fc, 0x7f66, 0x0, 0x1);
        gbc.writeMem(0x86a9, { 0xbb });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x739f, gbc.sp());
        EXPECT(0x86aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x86a9));
        // BB 02B5
        gbc.setState(0x38, 0x36d3, 0x78d0, 0xebdc, 0x7997, 0xb41a, 0x0, 0x0);
        gbc.writeMem(0x38, { 0xbb });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x36d3, gbc.sp());
        EXPECT(0x39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 02B6
        gbc.setState(0x90ee, 0x5b8d, 0x2030, 0xbe8e, 0xa3cf, 0xfce8, 0x0, 0x0);
        gbc.writeMem(0x90ee, { 0xbb });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x5b8d, gbc.sp());
        EXPECT(0x90ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x90ee));
        // BB 02B7
        gbc.setState(0x1b55, 0xa577, 0xa60, 0x908b, 0xeb31, 0xcfea, 0x0, 0x1);
        gbc.writeMem(0x1b55, { 0xbb });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xa577, gbc.sp());
        EXPECT(0x1b56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 02B8
        gbc.setState(0xb3f1, 0x2660, 0xcbf0, 0x30b2, 0x2759, 0xb617, 0x0, 0x1);
        gbc.writeMem(0xb3f1, { 0xbb });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x2660, gbc.sp());
        EXPECT(0xb3f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xb3f1));
        // BB 02B9
        gbc.setState(0xa7bf, 0xea4f, 0xc480, 0x7b5b, 0xe9ec, 0x1d96, 0x1, 0x1);
        gbc.writeMem(0xa7bf, { 0xbb });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xea4f, gbc.sp());
        EXPECT(0xa7c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xa7bf));
        // BB 02BA
        gbc.setState(0x3af3, 0x616b, 0x170, 0x5871, 0xef48, 0x1b17, 0x0, 0x1);
        gbc.writeMem(0x3af3, { 0xbb });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x616b, gbc.sp());
        EXPECT(0x3af4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 02BB
        gbc.setState(0xc46c, 0x8b47, 0xc6b0, 0xe585, 0x72f5, 0xcb6, 0x0, 0x0);
        gbc.writeMem(0xc46c, { 0xbb });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x8b47, gbc.sp());
        EXPECT(0xc46d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xc46c));
        // BB 02BC
        gbc.setState(0x5ee7, 0x728d, 0x3bc0, 0xd8ee, 0xb45f, 0x47db, 0x0, 0x1);
        gbc.writeMem(0x5ee7, { 0xbb });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x728d, gbc.sp());
        EXPECT(0x5ee8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 02BD
        gbc.setState(0x955, 0xc4cb, 0xc6a0, 0xcc0a, 0x105e, 0x5dc2, 0x0, 0x0);
        gbc.writeMem(0x955, { 0xbb });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xc4cb, gbc.sp());
        EXPECT(0x956, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 02BE
        gbc.setState(0x9251, 0x6c22, 0x4b30, 0xdf9f, 0x2333, 0x8cd2, 0x0, 0x1);
        gbc.writeMem(0x9251, { 0xbb });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x6c22, gbc.sp());
        EXPECT(0x9252, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x9251));
        // BB 02BF
        gbc.setState(0x9f87, 0x5499, 0x9420, 0xe45d, 0x19d7, 0xc9fd, 0x0, 0x0);
        gbc.writeMem(0x9f87, { 0xbb });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x5499, gbc.sp());
        EXPECT(0x9f88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x9f87));
        // BB 02C0
        gbc.setState(0xdb31, 0xe0ec, 0xc3d0, 0x6cef, 0x3182, 0x8928, 0x1, 0x0);
        gbc.writeMem(0xdb31, { 0xbb });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xe0ec, gbc.sp());
        EXPECT(0xdb32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xdb31));
        // BB 02C1
        gbc.setState(0x15d5, 0x9db1, 0x2e40, 0x329, 0xc71d, 0x3c1f, 0x0, 0x1);
        gbc.writeMem(0x15d5, { 0xbb });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x9db1, gbc.sp());
        EXPECT(0x15d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 02C2
        gbc.setState(0xe87a, 0xdf74, 0x7280, 0x9242, 0xf343, 0xf27e, 0x0, 0x0);
        gbc.writeMem(0xe87a, { 0xbb });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xdf74, gbc.sp());
        EXPECT(0xe87b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xe87a));
        // BB 02C3
        gbc.setState(0x8861, 0x341a, 0x9c0, 0x4050, 0x27b5, 0x66ed, 0x0, 0x0);
        gbc.writeMem(0x8861, { 0xbb });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x341a, gbc.sp());
        EXPECT(0x8862, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x8861));
        // BB 02C4
        gbc.setState(0x1f43, 0x3b9, 0x3070, 0x2e83, 0xd83f, 0x6789, 0x0, 0x1);
        gbc.writeMem(0x1f43, { 0xbb });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x3b9, gbc.sp());
        EXPECT(0x1f44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 02C5
        gbc.setState(0x9ba4, 0x4b60, 0x650, 0xed60, 0xdb5e, 0x85ec, 0x0, 0x1);
        gbc.writeMem(0x9ba4, { 0xbb });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x4b60, gbc.sp());
        EXPECT(0x9ba5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x9ba4));
        // BB 02C6
        gbc.setState(0x9ea1, 0x7a9, 0x3f70, 0xca33, 0x9b7d, 0xc80a, 0x0, 0x1);
        gbc.writeMem(0x9ea1, { 0xbb });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x7a9, gbc.sp());
        EXPECT(0x9ea2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x9ea1));
        // BB 02C7
        gbc.setState(0x1e96, 0xb8e9, 0x4910, 0x4dbd, 0xa59, 0x2f31, 0x1, 0x0);
        gbc.writeMem(0x1e96, { 0xbb });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xb8e9, gbc.sp());
        EXPECT(0x1e97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 02C8
        gbc.setState(0x4828, 0x70d2, 0x61b0, 0x6aeb, 0xd2e6, 0xcae9, 0x0, 0x0);
        gbc.writeMem(0x4828, { 0xbb });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x70d2, gbc.sp());
        EXPECT(0x4829, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 02C9
        gbc.setState(0x2fe, 0x7ebe, 0x23a0, 0xb60c, 0x2b63, 0x8f61, 0x1, 0x1);
        gbc.writeMem(0x2fe, { 0xbb });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x7ebe, gbc.sp());
        EXPECT(0x2ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 02CA
        gbc.setState(0x2a21, 0x769b, 0x97d0, 0xdff5, 0x10f1, 0x16e7, 0x1, 0x1);
        gbc.writeMem(0x2a21, { 0xbb });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x769b, gbc.sp());
        EXPECT(0x2a22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 02CB
        gbc.setState(0x1284, 0x2ce1, 0xff90, 0x76ea, 0x1da6, 0x2c64, 0x0, 0x1);
        gbc.writeMem(0x1284, { 0xbb });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x2ce1, gbc.sp());
        EXPECT(0x1285, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 02CC
        gbc.setState(0x8343, 0xc83, 0x6280, 0xd1ae, 0xc24b, 0xb47f, 0x1, 0x1);
        gbc.writeMem(0x8343, { 0xbb });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xc83, gbc.sp());
        EXPECT(0x8344, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x8343));
        // BB 02CD
        gbc.setState(0xbf8c, 0xa5a0, 0xefe0, 0x1606, 0xc72e, 0x99b2, 0x0, 0x0);
        gbc.writeMem(0xbf8c, { 0xbb });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xa5a0, gbc.sp());
        EXPECT(0xbf8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xbf8c));
        // BB 02CE
        gbc.setState(0x5f3a, 0x6700, 0x1fe0, 0x19a5, 0xc385, 0x391e, 0x1, 0x0);
        gbc.writeMem(0x5f3a, { 0xbb });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x6700, gbc.sp());
        EXPECT(0x5f3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 02CF
        gbc.setState(0x712e, 0xde24, 0xc3c0, 0x3b9d, 0xd1ab, 0xe491, 0x1, 0x1);
        gbc.writeMem(0x712e, { 0xbb });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xde24, gbc.sp());
        EXPECT(0x712f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 02D0
        gbc.setState(0x5929, 0x992c, 0x5740, 0xad9c, 0x581d, 0x71bc, 0x0, 0x1);
        gbc.writeMem(0x5929, { 0xbb });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x992c, gbc.sp());
        EXPECT(0x592a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 02D1
        gbc.setState(0x55cd, 0xef9b, 0xacd0, 0xd57b, 0xd5ab, 0x3e30, 0x0, 0x0);
        gbc.writeMem(0x55cd, { 0xbb });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xef9b, gbc.sp());
        EXPECT(0x55ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 02D2
        gbc.setState(0xe5f5, 0x4d4b, 0xc4a0, 0x5ec6, 0xb303, 0xef02, 0x1, 0x0);
        gbc.writeMem(0xe5f5, { 0xbb });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x4d4b, gbc.sp());
        EXPECT(0xe5f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xe5f5));
        // BB 02D3
        gbc.setState(0xb343, 0x3242, 0xdbc0, 0xe166, 0xc7e7, 0xb1d7, 0x0, 0x0);
        gbc.writeMem(0xb343, { 0xbb });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x3242, gbc.sp());
        EXPECT(0xb344, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xb343));
        // BB 02D4
        gbc.setState(0xb1ff, 0x4724, 0x3100, 0xd150, 0x570f, 0x11ba, 0x1, 0x0);
        gbc.writeMem(0xb1ff, { 0xbb });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x4724, gbc.sp());
        EXPECT(0xb200, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xb1ff));
        // BB 02D5
        gbc.setState(0xd69d, 0xf56f, 0x9b20, 0xce01, 0x8edc, 0x4e03, 0x0, 0x0);
        gbc.writeMem(0xd69d, { 0xbb });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xf56f, gbc.sp());
        EXPECT(0xd69e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xd69d));
        // BB 02D6
        gbc.setState(0x534f, 0x9e25, 0x7260, 0xee9a, 0x9fde, 0xbd67, 0x1, 0x1);
        gbc.writeMem(0x534f, { 0xbb });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x9e25, gbc.sp());
        EXPECT(0x5350, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 02D8
        gbc.setState(0x9fe2, 0x1987, 0x400, 0xcc92, 0x4bfe, 0x6c74, 0x1, 0x1);
        gbc.writeMem(0x9fe2, { 0xbb });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x1987, gbc.sp());
        EXPECT(0x9fe3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x9fe2));
        // BB 02D9
        gbc.setState(0x4fc8, 0x806a, 0x5580, 0xea6e, 0x5cfa, 0xec16, 0x1, 0x0);
        gbc.writeMem(0x4fc8, { 0xbb });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x806a, gbc.sp());
        EXPECT(0x4fc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 02DA
        gbc.setState(0x3c66, 0x3608, 0x7f60, 0xea24, 0x5798, 0x54ba, 0x1, 0x0);
        gbc.writeMem(0x3c66, { 0xbb });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x3608, gbc.sp());
        EXPECT(0x3c67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 02DB
        gbc.setState(0x16a8, 0x8c4, 0xae0, 0xd1c9, 0x6402, 0xd4f8, 0x0, 0x0);
        gbc.writeMem(0x16a8, { 0xbb });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x8c4, gbc.sp());
        EXPECT(0x16a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 02DC
        gbc.setState(0x69f2, 0xe249, 0x8d50, 0xb0bd, 0x7de2, 0x2ffa, 0x1, 0x1);
        gbc.writeMem(0x69f2, { 0xbb });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xe249, gbc.sp());
        EXPECT(0x69f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 02DD
        gbc.setState(0x565c, 0xda86, 0x1b20, 0x21cf, 0xe0b2, 0x4b73, 0x1, 0x0);
        gbc.writeMem(0x565c, { 0xbb });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xda86, gbc.sp());
        EXPECT(0x565d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 02DE
        gbc.setState(0x2ed1, 0x9390, 0xef20, 0xdc42, 0x7618, 0xd8e5, 0x1, 0x0);
        gbc.writeMem(0x2ed1, { 0xbb });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x9390, gbc.sp());
        EXPECT(0x2ed2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 02DF
        gbc.setState(0x1a36, 0x217c, 0xa140, 0xd7c1, 0xdd49, 0xa05a, 0x1, 0x0);
        gbc.writeMem(0x1a36, { 0xbb });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x217c, gbc.sp());
        EXPECT(0x1a37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 02E1
        gbc.setState(0x1efc, 0x4f98, 0x6bc0, 0x2b28, 0x7574, 0x44ed, 0x1, 0x1);
        gbc.writeMem(0x1efc, { 0xbb });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x4f98, gbc.sp());
        EXPECT(0x1efd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 02E2
        gbc.setState(0xae01, 0xecfe, 0xea60, 0xafae, 0xcd76, 0x4377, 0x1, 0x1);
        gbc.writeMem(0xae01, { 0xbb });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xecfe, gbc.sp());
        EXPECT(0xae02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xae01));
        // BB 02E4
        gbc.setState(0xbc, 0xfd3e, 0x70, 0x25a7, 0xb843, 0x4b63, 0x1, 0x0);
        gbc.writeMem(0xbc, { 0xbb });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xfd3e, gbc.sp());
        EXPECT(0xbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 02E5
        gbc.setState(0xe68e, 0xfb0f, 0x88f0, 0x28cd, 0x31d5, 0x996a, 0x0, 0x1);
        gbc.writeMem(0xe68e, { 0xbb });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xfb0f, gbc.sp());
        EXPECT(0xe68f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xe68e));
        // BB 02E6
        gbc.setState(0x85bf, 0xd5da, 0xf810, 0x4523, 0x6006, 0xd5, 0x0, 0x1);
        gbc.writeMem(0x85bf, { 0xbb });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xd5da, gbc.sp());
        EXPECT(0x85c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x85bf));
        // BB 02E7
        gbc.setState(0x29ad, 0x8791, 0x7da0, 0x3cb3, 0xe3b1, 0x60e1, 0x1, 0x1);
        gbc.writeMem(0x29ad, { 0xbb });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x8791, gbc.sp());
        EXPECT(0x29ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 02E8
        gbc.setState(0x5a44, 0x8e24, 0x4360, 0xfd42, 0xcc9c, 0xcc04, 0x1, 0x0);
        gbc.writeMem(0x5a44, { 0xbb });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x8e24, gbc.sp());
        EXPECT(0x5a45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 02E9
        gbc.setState(0x1ee3, 0x8be4, 0x2a30, 0xff6f, 0xc012, 0xc1f7, 0x1, 0x0);
        gbc.writeMem(0x1ee3, { 0xbb });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x8be4, gbc.sp());
        EXPECT(0x1ee4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 02EA
        gbc.setState(0x6a6b, 0x928e, 0x75e0, 0x2430, 0x13e6, 0x38eb, 0x1, 0x1);
        gbc.writeMem(0x6a6b, { 0xbb });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x928e, gbc.sp());
        EXPECT(0x6a6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 02EB
        gbc.setState(0x6ef8, 0xd7e6, 0xea50, 0x9198, 0x7a92, 0xbbbd, 0x1, 0x0);
        gbc.writeMem(0x6ef8, { 0xbb });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xd7e6, gbc.sp());
        EXPECT(0x6ef9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 02EC
        gbc.setState(0x4257, 0x2156, 0xa670, 0xae54, 0xac77, 0xb9d9, 0x1, 0x0);
        gbc.writeMem(0x4257, { 0xbb });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x2156, gbc.sp());
        EXPECT(0x4258, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 02ED
        gbc.setState(0xc4bd, 0xf147, 0x6650, 0xba70, 0xc1a, 0x8474, 0x1, 0x0);
        gbc.writeMem(0xc4bd, { 0xbb });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xf147, gbc.sp());
        EXPECT(0xc4be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xc4bd));
        // BB 02EE
        gbc.setState(0xa143, 0x473b, 0x9940, 0xcd4e, 0x43d0, 0xd0b5, 0x1, 0x0);
        gbc.writeMem(0xa143, { 0xbb });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x473b, gbc.sp());
        EXPECT(0xa144, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xa143));
        // BB 02EF
        gbc.setState(0x715e, 0x9006, 0x1680, 0x2469, 0xadb0, 0x3253, 0x0, 0x0);
        gbc.writeMem(0x715e, { 0xbb });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x9006, gbc.sp());
        EXPECT(0x715f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 02F0
        gbc.setState(0xde84, 0x81f2, 0xde50, 0x742, 0x7b9e, 0xf782, 0x0, 0x0);
        gbc.writeMem(0xde84, { 0xbb });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x81f2, gbc.sp());
        EXPECT(0xde85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xde84));
        // BB 02F1
        gbc.setState(0x92c6, 0x52bb, 0xa5d0, 0x6cbf, 0x87ae, 0x8332, 0x0, 0x1);
        gbc.writeMem(0x92c6, { 0xbb });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x52bb, gbc.sp());
        EXPECT(0x92c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x92c6));
        // BB 02F2
        gbc.setState(0x297e, 0x692b, 0x7090, 0x68b5, 0x3b71, 0x5ca1, 0x1, 0x0);
        gbc.writeMem(0x297e, { 0xbb });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x692b, gbc.sp());
        EXPECT(0x297f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 02F3
        gbc.setState(0x1f77, 0x8965, 0x1c30, 0xd5ed, 0x395e, 0x24ed, 0x0, 0x1);
        gbc.writeMem(0x1f77, { 0xbb });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x8965, gbc.sp());
        EXPECT(0x1f78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 02F4
        gbc.setState(0x1567, 0x1785, 0xec70, 0x832f, 0xd5f0, 0x4e65, 0x0, 0x1);
        gbc.writeMem(0x1567, { 0xbb });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x1785, gbc.sp());
        EXPECT(0x1568, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 02F5
        gbc.setState(0x2886, 0x69c9, 0x55e0, 0xb5d7, 0x6d72, 0x38bc, 0x1, 0x1);
        gbc.writeMem(0x2886, { 0xbb });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x69c9, gbc.sp());
        EXPECT(0x2887, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 02F6
        gbc.setState(0x16a9, 0x8ed4, 0x4740, 0xefdd, 0xa639, 0x4f60, 0x1, 0x1);
        gbc.writeMem(0x16a9, { 0xbb });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x8ed4, gbc.sp());
        EXPECT(0x16aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 02F7
        gbc.setState(0x77e9, 0x4e5e, 0x7f00, 0x5407, 0x5da4, 0xdfa5, 0x1, 0x1);
        gbc.writeMem(0x77e9, { 0xbb });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x4e5e, gbc.sp());
        EXPECT(0x77ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 02F8
        gbc.setState(0x1ed9, 0xc7b2, 0x71c0, 0xa9fb, 0x7e92, 0x7ade, 0x1, 0x1);
        gbc.writeMem(0x1ed9, { 0xbb });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xc7b2, gbc.sp());
        EXPECT(0x1eda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 02F9
        gbc.setState(0xaa0a, 0x5985, 0x2350, 0xb1ac, 0x8984, 0x35a3, 0x0, 0x0);
        gbc.writeMem(0xaa0a, { 0xbb });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x5985, gbc.sp());
        EXPECT(0xaa0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xaa0a));
        // BB 02FA
        gbc.setState(0xea9b, 0xc119, 0xa050, 0x5fca, 0x2bbf, 0x7ad8, 0x1, 0x0);
        gbc.writeMem(0xea9b, { 0xbb });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xc119, gbc.sp());
        EXPECT(0xea9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xea9b));
        // BB 02FB
        gbc.setState(0x6811, 0x36ee, 0xf020, 0x36a1, 0x81a7, 0xa80, 0x0, 0x0);
        gbc.writeMem(0x6811, { 0xbb });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x36ee, gbc.sp());
        EXPECT(0x6812, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 02FC
        gbc.setState(0x65fd, 0xc402, 0xa5d0, 0x7c33, 0xac3e, 0x24f2, 0x1, 0x0);
        gbc.writeMem(0x65fd, { 0xbb });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xc402, gbc.sp());
        EXPECT(0x65fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 02FD
        gbc.setState(0xc11e, 0x4789, 0x54c0, 0x871c, 0x1489, 0x143, 0x1, 0x1);
        gbc.writeMem(0xc11e, { 0xbb });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x4789, gbc.sp());
        EXPECT(0xc11f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xc11e));
        // BB 02FE
        gbc.setState(0x4fa4, 0x36a2, 0x5990, 0xaf62, 0x1c5c, 0x5f00, 0x0, 0x0);
        gbc.writeMem(0x4fa4, { 0xbb });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x36a2, gbc.sp());
        EXPECT(0x4fa5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 02FF
        gbc.setState(0x2ab6, 0x8202, 0x2f70, 0x3a4d, 0x7203, 0x7b7c, 0x1, 0x0);
        gbc.writeMem(0x2ab6, { 0xbb });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x8202, gbc.sp());
        EXPECT(0x2ab7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0300
        gbc.setState(0xecfa, 0xc58f, 0xeb80, 0x4f5c, 0xbaf9, 0xc7d, 0x0, 0x1);
        gbc.writeMem(0xecfa, { 0xbb });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xc58f, gbc.sp());
        EXPECT(0xecfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xecfa));
        // BB 0301
        gbc.setState(0xc492, 0x7fbc, 0x1220, 0x1df1, 0x57cf, 0xada4, 0x0, 0x1);
        gbc.writeMem(0xc492, { 0xbb });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x7fbc, gbc.sp());
        EXPECT(0xc493, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xc492));
        // BB 0302
        gbc.setState(0xdcf6, 0xb005, 0x90e0, 0x94a0, 0x3059, 0xa3cd, 0x1, 0x0);
        gbc.writeMem(0xdcf6, { 0xbb });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xb005, gbc.sp());
        EXPECT(0xdcf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xdcf6));
        // BB 0303
        gbc.setState(0x1544, 0xbf97, 0xba50, 0xe2c0, 0x901d, 0x44aa, 0x1, 0x0);
        gbc.writeMem(0x1544, { 0xbb });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xbf97, gbc.sp());
        EXPECT(0x1545, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0304
        gbc.setState(0x7525, 0x5570, 0xaa40, 0x6357, 0x276f, 0xe89, 0x0, 0x0);
        gbc.writeMem(0x7525, { 0xbb });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x5570, gbc.sp());
        EXPECT(0x7526, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0305
        gbc.setState(0x4769, 0x4d69, 0xc440, 0x6297, 0xe4e9, 0xf560, 0x1, 0x0);
        gbc.writeMem(0x4769, { 0xbb });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x4d69, gbc.sp());
        EXPECT(0x476a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0307
        gbc.setState(0x2cbd, 0xb086, 0x9ba0, 0x23f0, 0xbffd, 0x5f97, 0x0, 0x0);
        gbc.writeMem(0x2cbd, { 0xbb });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xb086, gbc.sp());
        EXPECT(0x2cbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0308
        gbc.setState(0x368, 0xef51, 0xdde0, 0x81c5, 0x7b22, 0x23e8, 0x0, 0x0);
        gbc.writeMem(0x368, { 0xbb });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xef51, gbc.sp());
        EXPECT(0x369, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0309
        gbc.setState(0xbb43, 0xe32b, 0x7cf0, 0xd625, 0x1cf3, 0x7942, 0x1, 0x0);
        gbc.writeMem(0xbb43, { 0xbb });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xe32b, gbc.sp());
        EXPECT(0xbb44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xbb43));
        // BB 030A
        gbc.setState(0x7304, 0x8681, 0x3fe0, 0x7142, 0xed18, 0x8985, 0x1, 0x0);
        gbc.writeMem(0x7304, { 0xbb });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x8681, gbc.sp());
        EXPECT(0x7305, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 030B
        gbc.setState(0x9b52, 0x925a, 0x4200, 0xcf66, 0x82f4, 0xa8b4, 0x0, 0x0);
        gbc.writeMem(0x9b52, { 0xbb });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x925a, gbc.sp());
        EXPECT(0x9b53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x9b52));
        // BB 030C
        gbc.setState(0xe57f, 0x88f5, 0x1cc0, 0x3bce, 0xb6d1, 0xa41a, 0x0, 0x1);
        gbc.writeMem(0xe57f, { 0xbb });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x88f5, gbc.sp());
        EXPECT(0xe580, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xe57f));
        // BB 030D
        gbc.setState(0x2ab2, 0x961b, 0xa980, 0x5015, 0xdd3c, 0x785e, 0x1, 0x1);
        gbc.writeMem(0x2ab2, { 0xbb });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x961b, gbc.sp());
        EXPECT(0x2ab3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 030E
        gbc.setState(0x2638, 0x1720, 0xb9f0, 0xd34c, 0x9e99, 0xb5b1, 0x1, 0x0);
        gbc.writeMem(0x2638, { 0xbb });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x1720, gbc.sp());
        EXPECT(0x2639, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 030F
        gbc.setState(0xb2d7, 0xa9d9, 0x3bb0, 0xc9a5, 0xdd3e, 0x7a8f, 0x0, 0x1);
        gbc.writeMem(0xb2d7, { 0xbb });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xa9d9, gbc.sp());
        EXPECT(0xb2d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xb2d7));
        // BB 0310
        gbc.setState(0x1c17, 0x34b, 0x2430, 0x2c8f, 0xa2c2, 0x1fc4, 0x0, 0x0);
        gbc.writeMem(0x1c17, { 0xbb });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x34b, gbc.sp());
        EXPECT(0x1c18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0311
        gbc.setState(0x5367, 0x2abd, 0x2f50, 0xb2ab, 0xc820, 0x5276, 0x1, 0x1);
        gbc.writeMem(0x5367, { 0xbb });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x2abd, gbc.sp());
        EXPECT(0x5368, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0312
        gbc.setState(0x346a, 0xf9f3, 0x7990, 0x2e94, 0x63cf, 0x50ba, 0x1, 0x1);
        gbc.writeMem(0x346a, { 0xbb });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xf9f3, gbc.sp());
        EXPECT(0x346b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0313
        gbc.setState(0x21e2, 0xde5c, 0x5850, 0x912b, 0xc103, 0xe5ae, 0x1, 0x0);
        gbc.writeMem(0x21e2, { 0xbb });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xde5c, gbc.sp());
        EXPECT(0x21e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0314
        gbc.setState(0x5b9a, 0x8c22, 0xeac0, 0xf66a, 0xf66c, 0x52f5, 0x1, 0x0);
        gbc.writeMem(0x5b9a, { 0xbb });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x8c22, gbc.sp());
        EXPECT(0x5b9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0315
        gbc.setState(0xbe93, 0x5e54, 0xe5d0, 0xb27d, 0x2691, 0x3121, 0x1, 0x0);
        gbc.writeMem(0xbe93, { 0xbb });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x5e54, gbc.sp());
        EXPECT(0xbe94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xbe93));
        // BB 0316
        gbc.setState(0x4e44, 0xf68b, 0x68e0, 0xe839, 0x70a4, 0x2f2a, 0x0, 0x1);
        gbc.writeMem(0x4e44, { 0xbb });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xf68b, gbc.sp());
        EXPECT(0x4e45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0317
        gbc.setState(0x5e48, 0xda89, 0xcbc0, 0x44b4, 0xf380, 0x83a7, 0x0, 0x1);
        gbc.writeMem(0x5e48, { 0xbb });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xda89, gbc.sp());
        EXPECT(0x5e49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0318
        gbc.setState(0xbc88, 0x4345, 0x2b70, 0x6245, 0x6c96, 0x416a, 0x0, 0x1);
        gbc.writeMem(0xbc88, { 0xbb });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x4345, gbc.sp());
        EXPECT(0xbc89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xbc88));
        // BB 0319
        gbc.setState(0xd394, 0x4867, 0xc1c0, 0x46d, 0x1c72, 0x1dcb, 0x1, 0x1);
        gbc.writeMem(0xd394, { 0xbb });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x4867, gbc.sp());
        EXPECT(0xd395, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xd394));
        // BB 031B
        gbc.setState(0x6624, 0x8a7a, 0x40e0, 0xb43c, 0xcc68, 0x2241, 0x1, 0x1);
        gbc.writeMem(0x6624, { 0xbb });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x8a7a, gbc.sp());
        EXPECT(0x6625, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 031C
        gbc.setState(0x6906, 0x995, 0xc3c0, 0x5c33, 0xf8d2, 0xcf85, 0x1, 0x1);
        gbc.writeMem(0x6906, { 0xbb });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x995, gbc.sp());
        EXPECT(0x6907, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 031D
        gbc.setState(0x16c, 0xa143, 0x8c00, 0x36c9, 0xef7f, 0x5fc7, 0x0, 0x1);
        gbc.writeMem(0x16c, { 0xbb });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xa143, gbc.sp());
        EXPECT(0x16d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 031E
        gbc.setState(0x596d, 0xfd8f, 0xc70, 0x1d19, 0x11e8, 0x68d9, 0x0, 0x1);
        gbc.writeMem(0x596d, { 0xbb });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xfd8f, gbc.sp());
        EXPECT(0x596e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 031F
        gbc.setState(0x1c1b, 0xd397, 0xc580, 0x840e, 0xd7d3, 0xfe9b, 0x1, 0x0);
        gbc.writeMem(0x1c1b, { 0xbb });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xd397, gbc.sp());
        EXPECT(0x1c1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0320
        gbc.setState(0x7f9b, 0x6561, 0x7aa0, 0xc066, 0x2649, 0xe0a7, 0x0, 0x1);
        gbc.writeMem(0x7f9b, { 0xbb });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x6561, gbc.sp());
        EXPECT(0x7f9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0321
        gbc.setState(0x7aac, 0xee4e, 0xade0, 0x5e8d, 0x8c83, 0x3cbd, 0x1, 0x1);
        gbc.writeMem(0x7aac, { 0xbb });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xee4e, gbc.sp());
        EXPECT(0x7aad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0322
        gbc.setState(0xc67a, 0x6fbc, 0x82a0, 0x9a28, 0xd016, 0xf728, 0x0, 0x1);
        gbc.writeMem(0xc67a, { 0xbb });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x6fbc, gbc.sp());
        EXPECT(0xc67b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xc67a));
        // BB 0323
        gbc.setState(0xd3c2, 0x69e9, 0xdca0, 0xdf47, 0x9a21, 0x245f, 0x0, 0x0);
        gbc.writeMem(0xd3c2, { 0xbb });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x69e9, gbc.sp());
        EXPECT(0xd3c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xd3c2));
        // BB 0324
        gbc.setState(0xe059, 0xec67, 0x78a0, 0x2c51, 0xc77e, 0xfa15, 0x0, 0x0);
        gbc.writeMem(0xe059, { 0xbb });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xec67, gbc.sp());
        EXPECT(0xe05a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xe059));
        // BB 0325
        gbc.setState(0xabbe, 0xf036, 0xae80, 0x1616, 0x415f, 0xb315, 0x0, 0x0);
        gbc.writeMem(0xabbe, { 0xbb });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xf036, gbc.sp());
        EXPECT(0xabbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xabbe));
        // BB 0326
        gbc.setState(0xd59e, 0x25a5, 0x7d10, 0xe456, 0xa487, 0x6be5, 0x0, 0x0);
        gbc.writeMem(0xd59e, { 0xbb });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x25a5, gbc.sp());
        EXPECT(0xd59f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xd59e));
        // BB 0327
        gbc.setState(0xccfd, 0xbfc, 0x4950, 0x427a, 0xa65f, 0xf68d, 0x0, 0x1);
        gbc.writeMem(0xccfd, { 0xbb });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xbfc, gbc.sp());
        EXPECT(0xccfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xccfd));
        // BB 0328
        gbc.setState(0x4e7d, 0x5a0c, 0xada0, 0x9962, 0x7f76, 0xda00, 0x1, 0x1);
        gbc.writeMem(0x4e7d, { 0xbb });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x5a0c, gbc.sp());
        EXPECT(0x4e7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0329
        gbc.setState(0xae9e, 0x4b8c, 0x2840, 0x49ab, 0x4bb0, 0x9c72, 0x0, 0x1);
        gbc.writeMem(0xae9e, { 0xbb });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x4b8c, gbc.sp());
        EXPECT(0xae9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xae9e));
        // BB 032A
        gbc.setState(0xb4ca, 0x7af7, 0xb710, 0x8a08, 0x1956, 0x61ab, 0x0, 0x0);
        gbc.writeMem(0xb4ca, { 0xbb });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x7af7, gbc.sp());
        EXPECT(0xb4cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xb4ca));
        // BB 032B
        gbc.setState(0x98bf, 0xb020, 0x3b90, 0x282d, 0x1302, 0x8f81, 0x1, 0x0);
        gbc.writeMem(0x98bf, { 0xbb });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xb020, gbc.sp());
        EXPECT(0x98c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x98bf));
        // BB 032C
        gbc.setState(0x3fd4, 0xef9f, 0x5cc0, 0x961e, 0x1d3, 0xd3af, 0x1, 0x1);
        gbc.writeMem(0x3fd4, { 0xbb });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xef9f, gbc.sp());
        EXPECT(0x3fd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 032D
        gbc.setState(0x4ea7, 0x3c3d, 0x2f50, 0xd55a, 0x5547, 0x8821, 0x1, 0x0);
        gbc.writeMem(0x4ea7, { 0xbb });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x3c3d, gbc.sp());
        EXPECT(0x4ea8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 032E
        gbc.setState(0xc7ed, 0x7c8b, 0x5780, 0xc2a5, 0x88eb, 0x9c08, 0x1, 0x1);
        gbc.writeMem(0xc7ed, { 0xbb });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x7c8b, gbc.sp());
        EXPECT(0xc7ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xc7ed));
        // BB 032F
        gbc.setState(0xd8db, 0xe318, 0x8b80, 0xe937, 0x3658, 0x5ba0, 0x1, 0x1);
        gbc.writeMem(0xd8db, { 0xbb });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xe318, gbc.sp());
        EXPECT(0xd8dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xd8db));
        // BB 0331
        gbc.setState(0xdf49, 0xfd92, 0x48b0, 0x2cce, 0xedae, 0xe102, 0x1, 0x0);
        gbc.writeMem(0xdf49, { 0xbb });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xfd92, gbc.sp());
        EXPECT(0xdf4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xdf49));
        // BB 0332
        gbc.setState(0x124d, 0xc057, 0x8830, 0x4d60, 0x98b4, 0xc0fb, 0x0, 0x1);
        gbc.writeMem(0x124d, { 0xbb });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xc057, gbc.sp());
        EXPECT(0x124e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0333
        gbc.setState(0x4d7b, 0x1f0c, 0x5520, 0x60c0, 0xb98b, 0xcc3, 0x0, 0x0);
        gbc.writeMem(0x4d7b, { 0xbb });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x1f0c, gbc.sp());
        EXPECT(0x4d7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0335
        gbc.setState(0xa858, 0x9474, 0x99e0, 0x6ae5, 0x764, 0xf788, 0x1, 0x1);
        gbc.writeMem(0xa858, { 0xbb });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x9474, gbc.sp());
        EXPECT(0xa859, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xa858));
        // BB 0336
        gbc.setState(0x2df, 0x1836, 0x4d40, 0xc4fa, 0x9126, 0x1359, 0x1, 0x1);
        gbc.writeMem(0x2df, { 0xbb });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x1836, gbc.sp());
        EXPECT(0x2e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0337
        gbc.setState(0x30e7, 0xef51, 0x4090, 0x8bf, 0xdb81, 0xd421, 0x0, 0x0);
        gbc.writeMem(0x30e7, { 0xbb });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xef51, gbc.sp());
        EXPECT(0x30e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0338
        gbc.setState(0xa90, 0xf7c7, 0xea90, 0xe170, 0x73ba, 0x6b3b, 0x0, 0x1);
        gbc.writeMem(0xa90, { 0xbb });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xf7c7, gbc.sp());
        EXPECT(0xa91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0339
        gbc.setState(0x91f2, 0x8312, 0xcb0, 0xf506, 0x9da2, 0xb02a, 0x0, 0x0);
        gbc.writeMem(0x91f2, { 0xbb });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x8312, gbc.sp());
        EXPECT(0x91f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x91f2));
        // BB 033A
        gbc.setState(0x74d, 0xecb7, 0xb0b0, 0xffe2, 0xff86, 0xf8fb, 0x0, 0x0);
        gbc.writeMem(0x74d, { 0xbb });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xecb7, gbc.sp());
        EXPECT(0x74e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 033B
        gbc.setState(0xa682, 0x86c3, 0x6260, 0x5174, 0x8e54, 0x38d, 0x1, 0x1);
        gbc.writeMem(0xa682, { 0xbb });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x86c3, gbc.sp());
        EXPECT(0xa683, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xa682));
        // BB 033C
        gbc.setState(0xd29b, 0x976d, 0xd540, 0x3763, 0x4087, 0x70cd, 0x0, 0x0);
        gbc.writeMem(0xd29b, { 0xbb });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x976d, gbc.sp());
        EXPECT(0xd29c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xd29b));
        // BB 033D
        gbc.setState(0x625a, 0x4c06, 0xab90, 0x7242, 0x204c, 0x505d, 0x1, 0x0);
        gbc.writeMem(0x625a, { 0xbb });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x4c06, gbc.sp());
        EXPECT(0x625b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 033E
        gbc.setState(0x90cf, 0x871e, 0x7640, 0xe600, 0xc143, 0xadff, 0x1, 0x0);
        gbc.writeMem(0x90cf, { 0xbb });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x871e, gbc.sp());
        EXPECT(0x90d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x90cf));
        // BB 033F
        gbc.setState(0x803c, 0xebea, 0x2c10, 0x270d, 0x9ed6, 0x265c, 0x1, 0x0);
        gbc.writeMem(0x803c, { 0xbb });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xebea, gbc.sp());
        EXPECT(0x803d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x803c));
        // BB 0340
        gbc.setState(0x8966, 0x3186, 0x64d0, 0x3d3f, 0x2721, 0x53e1, 0x0, 0x1);
        gbc.writeMem(0x8966, { 0xbb });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x3186, gbc.sp());
        EXPECT(0x8967, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x8966));
        // BB 0341
        gbc.setState(0xabbb, 0x44e0, 0xf820, 0xf282, 0xb90, 0xca84, 0x1, 0x1);
        gbc.writeMem(0xabbb, { 0xbb });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x44e0, gbc.sp());
        EXPECT(0xabbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xabbb));
        // BB 0342
        gbc.setState(0x37c9, 0xd36, 0x3620, 0x4e82, 0xdc6e, 0xf8f3, 0x1, 0x0);
        gbc.writeMem(0x37c9, { 0xbb });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xd36, gbc.sp());
        EXPECT(0x37ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0343
        gbc.setState(0x7622, 0x42ee, 0x2c40, 0x3c0f, 0x5811, 0x1f90, 0x0, 0x0);
        gbc.writeMem(0x7622, { 0xbb });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x42ee, gbc.sp());
        EXPECT(0x7623, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0344
        gbc.setState(0xc4ac, 0xeec6, 0x6a50, 0x8550, 0x4052, 0x98c, 0x0, 0x1);
        gbc.writeMem(0xc4ac, { 0xbb });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xeec6, gbc.sp());
        EXPECT(0xc4ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xc4ac));
        // BB 0345
        gbc.setState(0x325d, 0xaf63, 0x2cd0, 0xb2dd, 0x848a, 0x3756, 0x1, 0x0);
        gbc.writeMem(0x325d, { 0xbb });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xaf63, gbc.sp());
        EXPECT(0x325e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0346
        gbc.setState(0x5168, 0xc991, 0xe8b0, 0xb2cb, 0x305, 0x767f, 0x0, 0x0);
        gbc.writeMem(0x5168, { 0xbb });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xc991, gbc.sp());
        EXPECT(0x5169, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0347
        gbc.setState(0x4aa8, 0xa45, 0xc7a0, 0xa16, 0xb250, 0xbe6d, 0x1, 0x1);
        gbc.writeMem(0x4aa8, { 0xbb });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xa45, gbc.sp());
        EXPECT(0x4aa9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0348
        gbc.setState(0x6342, 0x4cad, 0x650, 0x2780, 0xab2e, 0xe28e, 0x0, 0x0);
        gbc.writeMem(0x6342, { 0xbb });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x4cad, gbc.sp());
        EXPECT(0x6343, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0349
        gbc.setState(0x38d3, 0xd0e, 0x7da0, 0x1aee, 0xfdf9, 0x77bd, 0x0, 0x1);
        gbc.writeMem(0x38d3, { 0xbb });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xd0e, gbc.sp());
        EXPECT(0x38d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 034A
        gbc.setState(0xd386, 0x7b2a, 0x55e0, 0xb2bd, 0x2e6c, 0xa291, 0x0, 0x0);
        gbc.writeMem(0xd386, { 0xbb });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x7b2a, gbc.sp());
        EXPECT(0xd387, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xd386));
        // BB 034B
        gbc.setState(0x5737, 0x38be, 0x2db0, 0x2179, 0x4c3d, 0xc0bc, 0x0, 0x1);
        gbc.writeMem(0x5737, { 0xbb });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x38be, gbc.sp());
        EXPECT(0x5738, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 034C
        gbc.setState(0x131b, 0x58d6, 0xde00, 0xf3c4, 0x1f6, 0xea5c, 0x1, 0x1);
        gbc.writeMem(0x131b, { 0xbb });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x58d6, gbc.sp());
        EXPECT(0x131c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 034D
        gbc.setState(0xd51, 0xf096, 0xd9a0, 0xea76, 0x8b32, 0xa6af, 0x1, 0x0);
        gbc.writeMem(0xd51, { 0xbb });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xf096, gbc.sp());
        EXPECT(0xd52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 034E
        gbc.setState(0xb16a, 0xcaec, 0xdda0, 0xf72e, 0xd739, 0x2ec6, 0x1, 0x0);
        gbc.writeMem(0xb16a, { 0xbb });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xcaec, gbc.sp());
        EXPECT(0xb16b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xb16a));
        // BB 034F
        gbc.setState(0x64bc, 0x2fb1, 0x9290, 0xeca3, 0xf121, 0x6e12, 0x1, 0x0);
        gbc.writeMem(0x64bc, { 0xbb });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x2fb1, gbc.sp());
        EXPECT(0x64bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0351
        gbc.setState(0xe2b1, 0xc36b, 0x8720, 0x224d, 0xf003, 0xad83, 0x1, 0x1);
        gbc.writeMem(0xe2b1, { 0xbb });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xc36b, gbc.sp());
        EXPECT(0xe2b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xe2b1));
        // BB 0352
        gbc.setState(0x93cd, 0x1875, 0x80f0, 0x9833, 0x883a, 0x40ac, 0x0, 0x1);
        gbc.writeMem(0x93cd, { 0xbb });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x1875, gbc.sp());
        EXPECT(0x93ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x93cd));
        // BB 0353
        gbc.setState(0xc2ae, 0xad, 0xc000, 0x7620, 0x9a31, 0x9664, 0x0, 0x0);
        gbc.writeMem(0xc2ae, { 0xbb });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xad, gbc.sp());
        EXPECT(0xc2af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xc2ae));
        // BB 0354
        gbc.setState(0x797f, 0x94d6, 0x7f20, 0xf3a5, 0x742a, 0xdc00, 0x0, 0x1);
        gbc.writeMem(0x797f, { 0xbb });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x94d6, gbc.sp());
        EXPECT(0x7980, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0355
        gbc.setState(0x15b1, 0x3885, 0xc9d0, 0xcfd5, 0x624e, 0xbd08, 0x1, 0x1);
        gbc.writeMem(0x15b1, { 0xbb });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x3885, gbc.sp());
        EXPECT(0x15b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0356
        gbc.setState(0xab38, 0x2c2d, 0xaff0, 0x95f7, 0x362, 0xac56, 0x1, 0x1);
        gbc.writeMem(0xab38, { 0xbb });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x2c2d, gbc.sp());
        EXPECT(0xab39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xab38));
        // BB 0357
        gbc.setState(0x98be, 0x83ca, 0xe960, 0x274f, 0x5b04, 0xf17f, 0x1, 0x1);
        gbc.writeMem(0x98be, { 0xbb });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x83ca, gbc.sp());
        EXPECT(0x98bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x98be));
        // BB 0358
        gbc.setState(0x813, 0xf4d7, 0x4780, 0xfe2d, 0xc909, 0x121, 0x0, 0x1);
        gbc.writeMem(0x813, { 0xbb });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xf4d7, gbc.sp());
        EXPECT(0x814, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0359
        gbc.setState(0x9484, 0x7574, 0xd0, 0x394c, 0x18a3, 0xd0f4, 0x1, 0x1);
        gbc.writeMem(0x9484, { 0xbb });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x7574, gbc.sp());
        EXPECT(0x9485, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x9484));
        // BB 035A
        gbc.setState(0xee6a, 0x7e6d, 0x8330, 0x2bcf, 0x9926, 0xfb0c, 0x0, 0x1);
        gbc.writeMem(0xee6a, { 0xbb });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x7e6d, gbc.sp());
        EXPECT(0xee6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xee6a));
        // BB 035B
        gbc.setState(0x9c71, 0xad91, 0xc600, 0x4efc, 0x6d99, 0x19fd, 0x1, 0x1);
        gbc.writeMem(0x9c71, { 0xbb });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xad91, gbc.sp());
        EXPECT(0x9c72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x9c71));
        // BB 035C
        gbc.setState(0xc0a8, 0xa971, 0x17f0, 0xd797, 0xc2ea, 0xcbd, 0x0, 0x0);
        gbc.writeMem(0xc0a8, { 0xbb });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xa971, gbc.sp());
        EXPECT(0xc0a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xc0a8));
        // BB 035D
        gbc.setState(0xae8a, 0x7ac5, 0xfa20, 0xcc11, 0xfe79, 0x67af, 0x0, 0x1);
        gbc.writeMem(0xae8a, { 0xbb });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x7ac5, gbc.sp());
        EXPECT(0xae8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xae8a));
        // BB 035E
        gbc.setState(0x8ef7, 0xe0b1, 0xa8a0, 0x88a6, 0x9841, 0x6fa2, 0x0, 0x0);
        gbc.writeMem(0x8ef7, { 0xbb });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xe0b1, gbc.sp());
        EXPECT(0x8ef8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x8ef7));
        // BB 0360
        gbc.setState(0x2608, 0x2c35, 0x54e0, 0xafbb, 0x5d69, 0x64e, 0x1, 0x0);
        gbc.writeMem(0x2608, { 0xbb });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x2c35, gbc.sp());
        EXPECT(0x2609, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0361
        gbc.setState(0x2048, 0xe1be, 0x970, 0xb124, 0xe0c3, 0xd22f, 0x1, 0x0);
        gbc.writeMem(0x2048, { 0xbb });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xe1be, gbc.sp());
        EXPECT(0x2049, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0362
        gbc.setState(0x68ce, 0xd2ce, 0xa170, 0xe84c, 0xcd3f, 0xd958, 0x0, 0x0);
        gbc.writeMem(0x68ce, { 0xbb });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xd2ce, gbc.sp());
        EXPECT(0x68cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0363
        gbc.setState(0x4ee9, 0x368, 0x1370, 0xb723, 0x1dcb, 0x8f8, 0x1, 0x0);
        gbc.writeMem(0x4ee9, { 0xbb });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x368, gbc.sp());
        EXPECT(0x4eea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0364
        gbc.setState(0x15e8, 0xbea2, 0x6d10, 0xb3c0, 0x76d1, 0x4d7b, 0x1, 0x1);
        gbc.writeMem(0x15e8, { 0xbb });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xbea2, gbc.sp());
        EXPECT(0x15e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0365
        gbc.setState(0x9134, 0xc72c, 0xf500, 0x15c3, 0xf5d9, 0xf0de, 0x0, 0x0);
        gbc.writeMem(0x9134, { 0xbb });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xc72c, gbc.sp());
        EXPECT(0x9135, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x9134));
        // BB 0366
        gbc.setState(0xa211, 0x94fc, 0x1340, 0xf39c, 0xeeee, 0x4dc1, 0x0, 0x0);
        gbc.writeMem(0xa211, { 0xbb });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x94fc, gbc.sp());
        EXPECT(0xa212, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xa211));
        // BB 0367
        gbc.setState(0x8250, 0x954f, 0x2b60, 0x8e8e, 0xba95, 0x833a, 0x1, 0x0);
        gbc.writeMem(0x8250, { 0xbb });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x954f, gbc.sp());
        EXPECT(0x8251, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x8250));
        // BB 0368
        gbc.setState(0xc003, 0xdf5a, 0xbaf0, 0x2b38, 0x29ca, 0x8679, 0x1, 0x0);
        gbc.writeMem(0xc003, { 0xbb });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xdf5a, gbc.sp());
        EXPECT(0xc004, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xc003));
        // BB 0369
        gbc.setState(0xe7a0, 0x84b6, 0xc340, 0x8fe, 0xf041, 0x6dec, 0x1, 0x0);
        gbc.writeMem(0xe7a0, { 0xbb });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x84b6, gbc.sp());
        EXPECT(0xe7a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xe7a0));
        // BB 036A
        gbc.setState(0xac9, 0xad0b, 0x45a0, 0xfd4a, 0xed6f, 0x337d, 0x0, 0x0);
        gbc.writeMem(0xac9, { 0xbb });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xad0b, gbc.sp());
        EXPECT(0xaca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 036B
        gbc.setState(0xe137, 0xc6c4, 0x6f90, 0xe465, 0xabe9, 0x52de, 0x0, 0x0);
        gbc.writeMem(0xe137, { 0xbb });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xc6c4, gbc.sp());
        EXPECT(0xe138, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xe137));
        // BB 036C
        gbc.setState(0x80d9, 0x9081, 0x5690, 0xfb26, 0x75eb, 0xbe64, 0x1, 0x0);
        gbc.writeMem(0x80d9, { 0xbb });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x9081, gbc.sp());
        EXPECT(0x80da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x80d9));
        // BB 036D
        gbc.setState(0xe064, 0xe09f, 0x6290, 0xd0f8, 0x73d6, 0xcbd5, 0x1, 0x1);
        gbc.writeMem(0xe064, { 0xbb });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xe09f, gbc.sp());
        EXPECT(0xe065, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xe064));
        // BB 036E
        gbc.setState(0x7e8a, 0x2f00, 0x860, 0x2568, 0xb0c7, 0x62de, 0x1, 0x1);
        gbc.writeMem(0x7e8a, { 0xbb });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x2f00, gbc.sp());
        EXPECT(0x7e8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 036F
        gbc.setState(0x6629, 0x9ec, 0xeb90, 0x5104, 0x5911, 0xa2e6, 0x0, 0x0);
        gbc.writeMem(0x6629, { 0xbb });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x9ec, gbc.sp());
        EXPECT(0x662a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0370
        gbc.setState(0x1e6e, 0xb56, 0x86e0, 0x7aa5, 0x9869, 0x9de6, 0x1, 0x1);
        gbc.writeMem(0x1e6e, { 0xbb });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xb56, gbc.sp());
        EXPECT(0x1e6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0372
        gbc.setState(0x88aa, 0x871d, 0xc970, 0xb22b, 0x4c56, 0xde1c, 0x0, 0x0);
        gbc.writeMem(0x88aa, { 0xbb });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x871d, gbc.sp());
        EXPECT(0x88ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x88aa));
        // BB 0373
        gbc.setState(0xc83e, 0xfe5f, 0x7660, 0x3352, 0x2e4, 0x1e36, 0x0, 0x0);
        gbc.writeMem(0xc83e, { 0xbb });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xfe5f, gbc.sp());
        EXPECT(0xc83f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xc83e));
        // BB 0374
        gbc.setState(0x848a, 0xd916, 0x46f0, 0xe40, 0x3fee, 0xb583, 0x1, 0x0);
        gbc.writeMem(0x848a, { 0xbb });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xd916, gbc.sp());
        EXPECT(0x848b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x848a));
        // BB 0375
        gbc.setState(0xe0aa, 0x5b91, 0x9590, 0x65e3, 0x52a9, 0x3208, 0x0, 0x1);
        gbc.writeMem(0xe0aa, { 0xbb });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x5b91, gbc.sp());
        EXPECT(0xe0ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xe0aa));
        // BB 0376
        gbc.setState(0x861e, 0x5a10, 0x4880, 0x387e, 0x1801, 0x628b, 0x0, 0x0);
        gbc.writeMem(0x861e, { 0xbb });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x5a10, gbc.sp());
        EXPECT(0x861f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x861e));
        // BB 0377
        gbc.setState(0x3356, 0x5541, 0x8380, 0x8cd3, 0x8205, 0xa201, 0x0, 0x1);
        gbc.writeMem(0x3356, { 0xbb });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x5541, gbc.sp());
        EXPECT(0x3357, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0378
        gbc.setState(0x9a1, 0x1746, 0x2410, 0xbf6e, 0x3b71, 0x11a9, 0x1, 0x0);
        gbc.writeMem(0x9a1, { 0xbb });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x1746, gbc.sp());
        EXPECT(0x9a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0379
        gbc.setState(0xc1fc, 0xfa5f, 0xd640, 0x3474, 0x429a, 0x9f25, 0x1, 0x1);
        gbc.writeMem(0xc1fc, { 0xbb });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xfa5f, gbc.sp());
        EXPECT(0xc1fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xc1fc));
        // BB 037A
        gbc.setState(0xa409, 0xa0eb, 0xbbc0, 0xd945, 0x56df, 0xb267, 0x0, 0x0);
        gbc.writeMem(0xa409, { 0xbb });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xa0eb, gbc.sp());
        EXPECT(0xa40a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xa409));
        // BB 037B
        gbc.setState(0x7eba, 0x92ec, 0x4300, 0xe3b2, 0xe699, 0xeacc, 0x1, 0x0);
        gbc.writeMem(0x7eba, { 0xbb });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x92ec, gbc.sp());
        EXPECT(0x7ebb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 037C
        gbc.setState(0x5d05, 0x5671, 0xe850, 0x1da6, 0xa1fc, 0x883c, 0x0, 0x0);
        gbc.writeMem(0x5d05, { 0xbb });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x5671, gbc.sp());
        EXPECT(0x5d06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 037D
        gbc.setState(0x4c5b, 0xb6a6, 0x62c0, 0x8fd7, 0xbfb, 0xeec2, 0x0, 0x0);
        gbc.writeMem(0x4c5b, { 0xbb });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xb6a6, gbc.sp());
        EXPECT(0x4c5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 037E
        gbc.setState(0x6dc2, 0x6068, 0x35f0, 0x4de1, 0xb725, 0x5cca, 0x1, 0x0);
        gbc.writeMem(0x6dc2, { 0xbb });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x6068, gbc.sp());
        EXPECT(0x6dc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 037F
        gbc.setState(0x6cba, 0x3506, 0x73b0, 0xdde6, 0x5576, 0x3e2, 0x1, 0x0);
        gbc.writeMem(0x6cba, { 0xbb });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x3506, gbc.sp());
        EXPECT(0x6cbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0380
        gbc.setState(0xb4cc, 0x3953, 0xf760, 0x94df, 0x4731, 0x1085, 0x0, 0x1);
        gbc.writeMem(0xb4cc, { 0xbb });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x3953, gbc.sp());
        EXPECT(0xb4cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xb4cc));
        // BB 0381
        gbc.setState(0xbf19, 0xdca, 0x6200, 0x9bff, 0x497b, 0x686e, 0x0, 0x1);
        gbc.writeMem(0xbf19, { 0xbb });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xdca, gbc.sp());
        EXPECT(0xbf1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xbf19));
        // BB 0382
        gbc.setState(0xe14e, 0xea29, 0xc170, 0x6bf, 0xdde6, 0xa427, 0x1, 0x1);
        gbc.writeMem(0xe14e, { 0xbb });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xea29, gbc.sp());
        EXPECT(0xe14f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xe14e));
        // BB 0383
        gbc.setState(0xafd4, 0x5b5e, 0x9360, 0xf2d2, 0xfc1f, 0x3e7, 0x0, 0x0);
        gbc.writeMem(0xafd4, { 0xbb });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x5b5e, gbc.sp());
        EXPECT(0xafd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xafd4));
        // BB 0384
        gbc.setState(0xc677, 0x6d42, 0x5190, 0x25fd, 0x9efd, 0x4f5c, 0x0, 0x0);
        gbc.writeMem(0xc677, { 0xbb });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x6d42, gbc.sp());
        EXPECT(0xc678, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xc677));
        // BB 0385
        gbc.setState(0x960, 0x2c3f, 0x6460, 0x2e77, 0x4200, 0x4db9, 0x1, 0x0);
        gbc.writeMem(0x960, { 0xbb });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x2c3f, gbc.sp());
        EXPECT(0x961, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0386
        gbc.setState(0x1028, 0xb338, 0x3080, 0x30c7, 0x64a9, 0x9507, 0x1, 0x0);
        gbc.writeMem(0x1028, { 0xbb });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xb338, gbc.sp());
        EXPECT(0x1029, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0387
        gbc.setState(0x7314, 0x1114, 0x5820, 0xdf84, 0x8a84, 0x8947, 0x1, 0x1);
        gbc.writeMem(0x7314, { 0xbb });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x1114, gbc.sp());
        EXPECT(0x7315, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0388
        gbc.setState(0x493f, 0xa60f, 0xee00, 0x9e40, 0x1a75, 0xeba8, 0x1, 0x0);
        gbc.writeMem(0x493f, { 0xbb });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xa60f, gbc.sp());
        EXPECT(0x4940, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0389
        gbc.setState(0xc9be, 0x47f6, 0xf2e0, 0x11fa, 0x3104, 0x7fcf, 0x1, 0x1);
        gbc.writeMem(0xc9be, { 0xbb });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x47f6, gbc.sp());
        EXPECT(0xc9bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xc9be));
        // BB 038A
        gbc.setState(0xb19f, 0xb568, 0x9a90, 0x6fcc, 0x226d, 0x8f07, 0x1, 0x1);
        gbc.writeMem(0xb19f, { 0xbb });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xb568, gbc.sp());
        EXPECT(0xb1a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xb19f));
        // BB 038B
        gbc.setState(0xde9d, 0xe5b, 0xf390, 0x1cd6, 0x6e30, 0x4a8f, 0x1, 0x1);
        gbc.writeMem(0xde9d, { 0xbb });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xe5b, gbc.sp());
        EXPECT(0xde9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xde9d));
        // BB 038C
        gbc.setState(0xcafc, 0xf5bf, 0xd100, 0xdb34, 0xc18f, 0x3cf9, 0x1, 0x0);
        gbc.writeMem(0xcafc, { 0xbb });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xf5bf, gbc.sp());
        EXPECT(0xcafd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xcafc));
        // BB 038D
        gbc.setState(0x37b8, 0xec7a, 0x2c60, 0xf8cf, 0x7d90, 0x5659, 0x0, 0x1);
        gbc.writeMem(0x37b8, { 0xbb });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xec7a, gbc.sp());
        EXPECT(0x37b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 038E
        gbc.setState(0xe002, 0xd836, 0x6500, 0x2067, 0x5ab3, 0x62a9, 0x0, 0x1);
        gbc.writeMem(0xe002, { 0xbb });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xd836, gbc.sp());
        EXPECT(0xe003, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xe002));
        // BB 038F
        gbc.setState(0x3bd6, 0xc98, 0xffd0, 0x32f2, 0x8009, 0x6121, 0x1, 0x0);
        gbc.writeMem(0x3bd6, { 0xbb });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xc98, gbc.sp());
        EXPECT(0x3bd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0390
        gbc.setState(0x30b2, 0xf014, 0xf620, 0x2c66, 0xee2e, 0x5615, 0x1, 0x1);
        gbc.writeMem(0x30b2, { 0xbb });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xf014, gbc.sp());
        EXPECT(0x30b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0391
        gbc.setState(0x8235, 0x4bb8, 0xa6f0, 0xc230, 0x9b6d, 0x39e5, 0x0, 0x1);
        gbc.writeMem(0x8235, { 0xbb });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x4bb8, gbc.sp());
        EXPECT(0x8236, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x8235));
        // BB 0392
        gbc.setState(0x558c, 0x7cad, 0x8b20, 0x9862, 0xe8f5, 0xb738, 0x0, 0x1);
        gbc.writeMem(0x558c, { 0xbb });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x7cad, gbc.sp());
        EXPECT(0x558d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0393
        gbc.setState(0xc083, 0x702b, 0x8ef0, 0x1d7e, 0xb105, 0x2269, 0x0, 0x1);
        gbc.writeMem(0xc083, { 0xbb });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x702b, gbc.sp());
        EXPECT(0xc084, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xc083));
        // BB 0394
        gbc.setState(0xba24, 0x3d8e, 0x1770, 0xd396, 0xfd47, 0x796, 0x1, 0x0);
        gbc.writeMem(0xba24, { 0xbb });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x3d8e, gbc.sp());
        EXPECT(0xba25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xba24));
        // BB 0395
        gbc.setState(0xa564, 0x6320, 0x6060, 0x5995, 0x8854, 0xdadd, 0x0, 0x1);
        gbc.writeMem(0xa564, { 0xbb });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x6320, gbc.sp());
        EXPECT(0xa565, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xa564));
        // BB 0396
        gbc.setState(0x2e53, 0x56d6, 0x6540, 0x75c1, 0x8683, 0x35f2, 0x1, 0x0);
        gbc.writeMem(0x2e53, { 0xbb });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x56d6, gbc.sp());
        EXPECT(0x2e54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0397
        gbc.setState(0x2f65, 0x696, 0xfa70, 0xa9d0, 0x9389, 0xa2b5, 0x1, 0x0);
        gbc.writeMem(0x2f65, { 0xbb });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x696, gbc.sp());
        EXPECT(0x2f66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 0398
        gbc.setState(0xeb3, 0x2307, 0x30b0, 0x69c0, 0x79fc, 0xfa57, 0x1, 0x0);
        gbc.writeMem(0xeb3, { 0xbb });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x2307, gbc.sp());
        EXPECT(0xeb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 0399
        gbc.setState(0xd99d, 0x65b8, 0xde30, 0xe5df, 0xa449, 0xf952, 0x1, 0x1);
        gbc.writeMem(0xd99d, { 0xbb });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x65b8, gbc.sp());
        EXPECT(0xd99e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xd99d));
        // BB 039A
        gbc.setState(0x16d5, 0x5242, 0xc740, 0x7f54, 0x5634, 0x5de5, 0x1, 0x0);
        gbc.writeMem(0x16d5, { 0xbb });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x5242, gbc.sp());
        EXPECT(0x16d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 039B
        gbc.setState(0x11cf, 0x6111, 0xa640, 0x9ecb, 0xfb38, 0x651, 0x1, 0x0);
        gbc.writeMem(0x11cf, { 0xbb });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x6111, gbc.sp());
        EXPECT(0x11d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 039C
        gbc.setState(0xcd5a, 0x6e6e, 0x4c20, 0x3a3f, 0x92f, 0xe9ac, 0x0, 0x1);
        gbc.writeMem(0xcd5a, { 0xbb });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x6e6e, gbc.sp());
        EXPECT(0xcd5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xcd5a));
        // BB 039E
        gbc.setState(0x19c, 0xb4ed, 0xbcb0, 0x4678, 0x76d1, 0x89d2, 0x0, 0x1);
        gbc.writeMem(0x19c, { 0xbb });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xb4ed, gbc.sp());
        EXPECT(0x19d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 039F
        gbc.setState(0x5c97, 0x7353, 0x1240, 0x25f0, 0x289b, 0x9dac, 0x1, 0x0);
        gbc.writeMem(0x5c97, { 0xbb });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x7353, gbc.sp());
        EXPECT(0x5c98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 03A0
        gbc.setState(0x5239, 0x36ce, 0xcba0, 0xb412, 0xc44, 0xde39, 0x0, 0x0);
        gbc.writeMem(0x5239, { 0xbb });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x36ce, gbc.sp());
        EXPECT(0x523a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 03A1
        gbc.setState(0x5e1a, 0xcb6a, 0xe5e0, 0xbfa2, 0x9599, 0x8fff, 0x0, 0x0);
        gbc.writeMem(0x5e1a, { 0xbb });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xcb6a, gbc.sp());
        EXPECT(0x5e1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 03A2
        gbc.setState(0xd653, 0x8558, 0x6f50, 0x9f73, 0x646b, 0xdf7b, 0x1, 0x0);
        gbc.writeMem(0xd653, { 0xbb });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x8558, gbc.sp());
        EXPECT(0xd654, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xd653));
        // BB 03A3
        gbc.setState(0xb6e5, 0x4510, 0x7880, 0x1189, 0x2a, 0xa431, 0x1, 0x0);
        gbc.writeMem(0xb6e5, { 0xbb });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x4510, gbc.sp());
        EXPECT(0xb6e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xb6e5));
        // BB 03A4
        gbc.setState(0xbf9a, 0x7716, 0x5970, 0x6727, 0x1641, 0xbd87, 0x1, 0x1);
        gbc.writeMem(0xbf9a, { 0xbb });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x7716, gbc.sp());
        EXPECT(0xbf9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xbf9a));
        // BB 03A5
        gbc.setState(0x43fa, 0x3f4c, 0x5ec0, 0xafe9, 0x4d91, 0xb239, 0x1, 0x0);
        gbc.writeMem(0x43fa, { 0xbb });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x3f4c, gbc.sp());
        EXPECT(0x43fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 03A6
        gbc.setState(0x726f, 0xc1d7, 0xd860, 0xd8cd, 0x5fda, 0x3625, 0x1, 0x0);
        gbc.writeMem(0x726f, { 0xbb });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xc1d7, gbc.sp());
        EXPECT(0x7270, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 03A7
        gbc.setState(0x3c01, 0xc6c4, 0xc190, 0x6f8b, 0x47b2, 0x90be, 0x1, 0x0);
        gbc.writeMem(0x3c01, { 0xbb });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xc6c4, gbc.sp());
        EXPECT(0x3c02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 03A8
        gbc.setState(0x5ab2, 0xa247, 0x2ba0, 0x1039, 0xb1e9, 0x6929, 0x0, 0x1);
        gbc.writeMem(0x5ab2, { 0xbb });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xa247, gbc.sp());
        EXPECT(0x5ab3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 03A9
        gbc.setState(0xc5ca, 0x581f, 0x3c10, 0x37f, 0x630c, 0xe778, 0x1, 0x0);
        gbc.writeMem(0xc5ca, { 0xbb });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x581f, gbc.sp());
        EXPECT(0xc5cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xc5ca));
        // BB 03AA
        gbc.setState(0xc204, 0x20f2, 0x81f0, 0x4644, 0x7b6b, 0xa08f, 0x0, 0x1);
        gbc.writeMem(0xc204, { 0xbb });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x20f2, gbc.sp());
        EXPECT(0xc205, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xc204));
        // BB 03AB
        gbc.setState(0x346e, 0xdedc, 0x4730, 0x79b3, 0x579e, 0xcea7, 0x0, 0x1);
        gbc.writeMem(0x346e, { 0xbb });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xdedc, gbc.sp());
        EXPECT(0x346f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 03AC
        gbc.setState(0x2b7, 0x285f, 0x6c0, 0xf5f3, 0x66c7, 0xb795, 0x0, 0x1);
        gbc.writeMem(0x2b7, { 0xbb });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x285f, gbc.sp());
        EXPECT(0x2b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 03AD
        gbc.setState(0x9bbd, 0x3f81, 0x3d50, 0x4f17, 0x8b70, 0x10fb, 0x1, 0x1);
        gbc.writeMem(0x9bbd, { 0xbb });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x3f81, gbc.sp());
        EXPECT(0x9bbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x9bbd));
        // BB 03AE
        gbc.setState(0xe46b, 0x3d7d, 0x8980, 0xeeac, 0x8729, 0xef13, 0x0, 0x1);
        gbc.writeMem(0xe46b, { 0xbb });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x3d7d, gbc.sp());
        EXPECT(0xe46c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xe46b));
        // BB 03AF
        gbc.setState(0x3c65, 0x275d, 0x1b10, 0x1155, 0x16a7, 0x8fde, 0x0, 0x0);
        gbc.writeMem(0x3c65, { 0xbb });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x275d, gbc.sp());
        EXPECT(0x3c66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 03B0
        gbc.setState(0x93eb, 0x552, 0x9760, 0x1851, 0x38d0, 0x50cd, 0x1, 0x1);
        gbc.writeMem(0x93eb, { 0xbb });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x552, gbc.sp());
        EXPECT(0x93ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x93eb));
        // BB 03B1
        gbc.setState(0xd93d, 0xba1a, 0xf0a0, 0xdca6, 0xadff, 0x4b65, 0x1, 0x0);
        gbc.writeMem(0xd93d, { 0xbb });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xba1a, gbc.sp());
        EXPECT(0xd93e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xd93d));
        // BB 03B2
        gbc.setState(0x21b4, 0x53dd, 0x9df0, 0x48d7, 0x6f96, 0x4741, 0x0, 0x0);
        gbc.writeMem(0x21b4, { 0xbb });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x53dd, gbc.sp());
        EXPECT(0x21b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 03B3
        gbc.setState(0xa27d, 0x4b67, 0xac00, 0x8b6, 0x4002, 0x60db, 0x0, 0x0);
        gbc.writeMem(0xa27d, { 0xbb });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x4b67, gbc.sp());
        EXPECT(0xa27e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xa27d));
        // BB 03B4
        gbc.setState(0xe209, 0xac2c, 0x46e0, 0x59db, 0x13f8, 0xc274, 0x1, 0x0);
        gbc.writeMem(0xe209, { 0xbb });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xac2c, gbc.sp());
        EXPECT(0xe20a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xe209));
        // BB 03B5
        gbc.setState(0xd4c6, 0x6949, 0x3b80, 0x98fe, 0x9cce, 0x7ed8, 0x0, 0x0);
        gbc.writeMem(0xd4c6, { 0xbb });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x6949, gbc.sp());
        EXPECT(0xd4c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xd4c6));
        // BB 03B6
        gbc.setState(0xb9e5, 0x58ce, 0x1b20, 0xa7db, 0x1183, 0xe08b, 0x1, 0x0);
        gbc.writeMem(0xb9e5, { 0xbb });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x58ce, gbc.sp());
        EXPECT(0xb9e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xb9e5));
        // BB 03B7
        gbc.setState(0x8777, 0x4f1d, 0x4da0, 0xc207, 0xf63c, 0xe73, 0x0, 0x1);
        gbc.writeMem(0x8777, { 0xbb });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x4f1d, gbc.sp());
        EXPECT(0x8778, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x8777));
        // BB 03B8
        gbc.setState(0x6591, 0xf380, 0x5520, 0x3ba1, 0x355f, 0x451a, 0x0, 0x1);
        gbc.writeMem(0x6591, { 0xbb });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xf380, gbc.sp());
        EXPECT(0x6592, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 03B9
        gbc.setState(0x65a3, 0x84df, 0x5990, 0xc7b0, 0x9fcc, 0x5ecc, 0x1, 0x1);
        gbc.writeMem(0x65a3, { 0xbb });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x84df, gbc.sp());
        EXPECT(0x65a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 03BA
        gbc.setState(0x28dc, 0x56cc, 0x5da0, 0x517e, 0xb7a2, 0x17b6, 0x1, 0x0);
        gbc.writeMem(0x28dc, { 0xbb });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x56cc, gbc.sp());
        EXPECT(0x28dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 03BB
        gbc.setState(0x29ec, 0xd3b2, 0x9c0, 0x5942, 0x24d3, 0x1af7, 0x0, 0x0);
        gbc.writeMem(0x29ec, { 0xbb });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xd3b2, gbc.sp());
        EXPECT(0x29ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 03BC
        gbc.setState(0xd951, 0xf87e, 0xe360, 0x485c, 0x1002, 0x9c26, 0x1, 0x1);
        gbc.writeMem(0xd951, { 0xbb });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xf87e, gbc.sp());
        EXPECT(0xd952, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xd951));
        // BB 03BD
        gbc.setState(0x4666, 0xf168, 0x2520, 0x9a94, 0x2cdc, 0x6b7c, 0x1, 0x0);
        gbc.writeMem(0x4666, { 0xbb });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xf168, gbc.sp());
        EXPECT(0x4667, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 03BE
        gbc.setState(0xb084, 0x5faf, 0x5990, 0x35ae, 0x397a, 0x1203, 0x1, 0x0);
        gbc.writeMem(0xb084, { 0xbb });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x5faf, gbc.sp());
        EXPECT(0xb085, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xb084));
        // BB 03BF
        gbc.setState(0x1e16, 0xe932, 0x8b70, 0xe7d3, 0xa125, 0x879, 0x1, 0x0);
        gbc.writeMem(0x1e16, { 0xbb });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xe932, gbc.sp());
        EXPECT(0x1e17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 03C0
        gbc.setState(0x3942, 0x3c97, 0xe190, 0xae52, 0xf320, 0x2ba4, 0x0, 0x1);
        gbc.writeMem(0x3942, { 0xbb });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x3c97, gbc.sp());
        EXPECT(0x3943, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 03C1
        gbc.setState(0x2cdf, 0x2e97, 0x6d10, 0xd553, 0x19ec, 0xb595, 0x1, 0x1);
        gbc.writeMem(0x2cdf, { 0xbb });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x2e97, gbc.sp());
        EXPECT(0x2ce0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 03C3
        gbc.setState(0xda68, 0x6663, 0x360, 0xa4c2, 0xda3d, 0x4852, 0x0, 0x0);
        gbc.writeMem(0xda68, { 0xbb });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x6663, gbc.sp());
        EXPECT(0xda69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xda68));
        // BB 03C4
        gbc.setState(0xea7c, 0x9f32, 0xcd40, 0xd56f, 0x9dd9, 0x2424, 0x0, 0x1);
        gbc.writeMem(0xea7c, { 0xbb });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x9f32, gbc.sp());
        EXPECT(0xea7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xea7c));
        // BB 03C6
        gbc.setState(0x8400, 0xcd46, 0x2f80, 0xf05b, 0xfc54, 0xfece, 0x0, 0x1);
        gbc.writeMem(0x8400, { 0xbb });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xcd46, gbc.sp());
        EXPECT(0x8401, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x8400));
        // BB 03C7
        gbc.setState(0xb4a6, 0x2792, 0x2a50, 0x2fd1, 0x93e2, 0x2234, 0x1, 0x1);
        gbc.writeMem(0xb4a6, { 0xbb });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x2792, gbc.sp());
        EXPECT(0xb4a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xb4a6));
        // BB 03C8
        gbc.setState(0x928b, 0x6ae4, 0x24b0, 0x35ef, 0x7e1a, 0xd7da, 0x0, 0x0);
        gbc.writeMem(0x928b, { 0xbb });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x6ae4, gbc.sp());
        EXPECT(0x928c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x928b));
        // BB 03C9
        gbc.setState(0x86ba, 0xc2e7, 0x1350, 0x28c7, 0x8b9e, 0x6fde, 0x1, 0x0);
        gbc.writeMem(0x86ba, { 0xbb });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xc2e7, gbc.sp());
        EXPECT(0x86bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x86ba));
        // BB 03CA
        gbc.setState(0x5fc0, 0xe30c, 0xa8b0, 0x934, 0x7abe, 0x2207, 0x0, 0x0);
        gbc.writeMem(0x5fc0, { 0xbb });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xe30c, gbc.sp());
        EXPECT(0x5fc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 03CB
        gbc.setState(0xb840, 0x6ed, 0x5430, 0x47e7, 0x3267, 0xb8a7, 0x1, 0x1);
        gbc.writeMem(0xb840, { 0xbb });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x6ed, gbc.sp());
        EXPECT(0xb841, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xb840));
        // BB 03CC
        gbc.setState(0xb9b2, 0xa54a, 0xc060, 0xaa91, 0xd911, 0xeec8, 0x1, 0x0);
        gbc.writeMem(0xb9b2, { 0xbb });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xa54a, gbc.sp());
        EXPECT(0xb9b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xb9b2));
        // BB 03CD
        gbc.setState(0x6ec, 0x56c1, 0x2070, 0xab48, 0xcd1, 0x47b2, 0x0, 0x0);
        gbc.writeMem(0x6ec, { 0xbb });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x56c1, gbc.sp());
        EXPECT(0x6ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 03CE
        gbc.setState(0xe429, 0x53a8, 0xfca0, 0x2ee3, 0xd1ea, 0x9ada, 0x0, 0x1);
        gbc.writeMem(0xe429, { 0xbb });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x53a8, gbc.sp());
        EXPECT(0xe42a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xe429));
        // BB 03CF
        gbc.setState(0x2ab, 0xa29d, 0xf0c0, 0x9fc8, 0x19b4, 0xb112, 0x1, 0x0);
        gbc.writeMem(0x2ab, { 0xbb });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xa29d, gbc.sp());
        EXPECT(0x2ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 03D0
        gbc.setState(0x9fd2, 0x6603, 0x48a0, 0x1446, 0x58ae, 0x310e, 0x1, 0x0);
        gbc.writeMem(0x9fd2, { 0xbb });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x6603, gbc.sp());
        EXPECT(0x9fd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x9fd2));
        // BB 03D1
        gbc.setState(0x7e0b, 0x3977, 0x6bf0, 0xfd4e, 0x36ec, 0x4cd0, 0x0, 0x1);
        gbc.writeMem(0x7e0b, { 0xbb });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x3977, gbc.sp());
        EXPECT(0x7e0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 03D2
        gbc.setState(0x62ff, 0xd3d8, 0x4fe0, 0x7af0, 0xb28a, 0xbc4c, 0x1, 0x1);
        gbc.writeMem(0x62ff, { 0xbb });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xd3d8, gbc.sp());
        EXPECT(0x6300, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 03D3
        gbc.setState(0x7cb2, 0xf7d1, 0x390, 0xe48b, 0x9b96, 0x8931, 0x0, 0x0);
        gbc.writeMem(0x7cb2, { 0xbb });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xf7d1, gbc.sp());
        EXPECT(0x7cb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 03D4
        gbc.setState(0x4881, 0x94e6, 0x74c0, 0x4202, 0x2510, 0xad2f, 0x0, 0x1);
        gbc.writeMem(0x4881, { 0xbb });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x94e6, gbc.sp());
        EXPECT(0x4882, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 03D5
        gbc.setState(0x7c50, 0x51e1, 0x29a0, 0xd5ca, 0x9383, 0xe03, 0x0, 0x1);
        gbc.writeMem(0x7c50, { 0xbb });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x51e1, gbc.sp());
        EXPECT(0x7c51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 03D8
        gbc.setState(0xdcc2, 0xf7e4, 0xe070, 0xb11a, 0x646c, 0xe9dd, 0x1, 0x1);
        gbc.writeMem(0xdcc2, { 0xbb });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xf7e4, gbc.sp());
        EXPECT(0xdcc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xdcc2));
        // BB 03D9
        gbc.setState(0xbb49, 0xc04b, 0x87b0, 0x26f4, 0xb83a, 0x6056, 0x0, 0x1);
        gbc.writeMem(0xbb49, { 0xbb });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xc04b, gbc.sp());
        EXPECT(0xbb4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xbb49));
        // BB 03DA
        gbc.setState(0x64e8, 0xdb89, 0x5900, 0x460b, 0x2625, 0x9d55, 0x1, 0x1);
        gbc.writeMem(0x64e8, { 0xbb });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xdb89, gbc.sp());
        EXPECT(0x64e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 03DB
        gbc.setState(0x6e54, 0xa58e, 0x30, 0x1984, 0x4f5c, 0x87fa, 0x0, 0x0);
        gbc.writeMem(0x6e54, { 0xbb });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xa58e, gbc.sp());
        EXPECT(0x6e55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 03DC
        gbc.setState(0xa259, 0xf5de, 0xc00, 0x880e, 0xa890, 0x49f0, 0x0, 0x1);
        gbc.writeMem(0xa259, { 0xbb });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xf5de, gbc.sp());
        EXPECT(0xa25a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xa259));
        // BB 03DD
        gbc.setState(0x100e, 0x1bf7, 0x63e0, 0xcb2c, 0xe189, 0xbda8, 0x1, 0x1);
        gbc.writeMem(0x100e, { 0xbb });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x1bf7, gbc.sp());
        EXPECT(0x100f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 03DE
        gbc.setState(0x7f4f, 0x77c3, 0x7f00, 0x51cb, 0x6049, 0x499d, 0x1, 0x0);
        gbc.writeMem(0x7f4f, { 0xbb });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x77c3, gbc.sp());
        EXPECT(0x7f50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 03DF
        gbc.setState(0x35e8, 0xbc92, 0x6450, 0x5b31, 0xf35e, 0x202d, 0x0, 0x0);
        gbc.writeMem(0x35e8, { 0xbb });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xbc92, gbc.sp());
        EXPECT(0x35e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 03E0
        gbc.setState(0xd4e2, 0x30ef, 0x5c90, 0xbb90, 0xaf61, 0xefb3, 0x0, 0x1);
        gbc.writeMem(0xd4e2, { 0xbb });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x30ef, gbc.sp());
        EXPECT(0xd4e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xd4e2));
        // BB 03E1
        gbc.setState(0x44f7, 0x4a9c, 0xa280, 0x224c, 0xd7ee, 0xe37b, 0x1, 0x0);
        gbc.writeMem(0x44f7, { 0xbb });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x4a9c, gbc.sp());
        EXPECT(0x44f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // BB 03E2
        gbc.setState(0x3b81, 0x3023, 0x6b40, 0xc4b2, 0x4e40, 0x91fe, 0x0, 0x1);
        gbc.writeMem(0x3b81, { 0xbb });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x3023, gbc.sp());
        EXPECT(0x3b82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 03E3
        gbc.setState(0xccf4, 0x599b, 0xe6c0, 0x1764, 0xac68, 0x6ff8, 0x0, 0x0);
        gbc.writeMem(0xccf4, { 0xbb });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x599b, gbc.sp());
        EXPECT(0xccf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xccf4));
        // BB 03E4
        gbc.setState(0xed62, 0x3c4b, 0xf3e0, 0x551e, 0x8480, 0x7bfc, 0x0, 0x0);
        gbc.writeMem(0xed62, { 0xbb });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x3c4b, gbc.sp());
        EXPECT(0xed63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xed62));
        // BB 03E5
        gbc.setState(0x7b7c, 0x91ec, 0xc780, 0x5c5a, 0xd91f, 0x4345, 0x1, 0x0);
        gbc.writeMem(0x7b7c, { 0xbb });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x91ec, gbc.sp());
        EXPECT(0x7b7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 03E6
        gbc.setState(0x747a, 0x918f, 0xe450, 0x1b3d, 0xf38c, 0x896a, 0x0, 0x1);
        gbc.writeMem(0x747a, { 0xbb });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x918f, gbc.sp());
        EXPECT(0x747b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // BB 03E7
        gbc.setState(0x4c28, 0xed60, 0x3d20, 0xd7df, 0x91ab, 0x7d06, 0x1, 0x1);
        gbc.writeMem(0x4c28, { 0xbb });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xed60, gbc.sp());
        EXPECT(0x4c29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
    }
