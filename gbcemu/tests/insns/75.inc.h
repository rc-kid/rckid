    TEST(gbcemu, opcode_75) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 75 0000
        gbc.setState(0xa257, 0x9447, 0x2c0, 0x5ddf, 0x75f8, 0xab27, 0x0, 0x0);
        gbc.writeMem(0xa257, { 0x75 });
        gbc.writeMem(0xab27, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x9447);
        EXPECT(gbc.pc(), 0xa258);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa257), 0x75);
        EXPECT(gbc.readMem(0xab27), 0x27);
        // 75 0002
        gbc.setState(0x3501, 0xe693, 0xde40, 0xaf3f, 0x6e97, 0x9d67, 0x1, 0x1);
        gbc.writeMem(0x3501, { 0x75 });
        gbc.writeMem(0x9d67, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xe693);
        EXPECT(gbc.pc(), 0x3502);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d67), 0x67);
        // 75 0003
        gbc.setState(0x2d7b, 0xac32, 0xb8a0, 0x24d8, 0xf8ce, 0xef0c, 0x0, 0x1);
        gbc.writeMem(0x2d7b, { 0x75 });
        gbc.writeMem(0xef0c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xac32);
        EXPECT(gbc.pc(), 0x2d7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef0c), 0xc);
        // 75 0004
        gbc.setState(0xe61e, 0xbbd7, 0xbb10, 0x8242, 0x77d3, 0xd2b2, 0x1, 0x0);
        gbc.writeMem(0xd2b2, { 0x0 });
        gbc.writeMem(0xe61e, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xbbd7);
        EXPECT(gbc.pc(), 0xe61f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2b2), 0xb2);
        EXPECT(gbc.readMem(0xe61e), 0x75);
        // 75 0006
        gbc.setState(0x21df, 0x16b8, 0x3320, 0x9ceb, 0x36ee, 0xe637, 0x1, 0x0);
        gbc.writeMem(0x21df, { 0x75 });
        gbc.writeMem(0xe637, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x16b8);
        EXPECT(gbc.pc(), 0x21e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe637), 0x37);
        // 75 000B
        gbc.setState(0xdaa7, 0x70c, 0x3a70, 0xda9f, 0x6c20, 0xa312, 0x0, 0x0);
        gbc.writeMem(0xa312, { 0x0 });
        gbc.writeMem(0xdaa7, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x70c);
        EXPECT(gbc.pc(), 0xdaa8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa312), 0x12);
        EXPECT(gbc.readMem(0xdaa7), 0x75);
        // 75 000E
        gbc.setState(0xe4ac, 0x91b2, 0x3310, 0xb10a, 0x2555, 0xc7ef, 0x0, 0x1);
        gbc.writeMem(0xc7ef, { 0x0 });
        gbc.writeMem(0xe4ac, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x91b2);
        EXPECT(gbc.pc(), 0xe4ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7ef), 0xef);
        EXPECT(gbc.readMem(0xe4ac), 0x75);
        // 75 0010
        gbc.setState(0x2f92, 0x7bca, 0xed50, 0xd2dd, 0xd37e, 0xeac6, 0x1, 0x1);
        gbc.writeMem(0x2f92, { 0x75 });
        gbc.writeMem(0xeac6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x7bca);
        EXPECT(gbc.pc(), 0x2f93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeac6), 0xc6);
        // 75 0011
        gbc.setState(0xdfb3, 0x22c5, 0xa2b0, 0x9cda, 0xeb4, 0xbaea, 0x0, 0x0);
        gbc.writeMem(0xbaea, { 0x0 });
        gbc.writeMem(0xdfb3, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x22c5);
        EXPECT(gbc.pc(), 0xdfb4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbaea), 0xea);
        EXPECT(gbc.readMem(0xdfb3), 0x75);
        // 75 0016
        gbc.setState(0x4a56, 0x3458, 0x6af0, 0xa914, 0x23e9, 0xd3c2, 0x0, 0x1);
        gbc.writeMem(0x4a56, { 0x75 });
        gbc.writeMem(0xd3c2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x3458);
        EXPECT(gbc.pc(), 0x4a57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3c2), 0xc2);
        // 75 0018
        gbc.setState(0xcec5, 0xaba1, 0x55f0, 0x3946, 0x570, 0xfd18, 0x1, 0x0);
        gbc.writeMem(0xcec5, { 0x75 });
        gbc.writeMem(0xfd18, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xaba1);
        EXPECT(gbc.pc(), 0xcec6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcec5), 0x75);
        EXPECT(gbc.readMem(0xfd18), 0x18);
        // 75 001A
        gbc.setState(0x75c, 0xc8da, 0x8720, 0x20b1, 0xb7bb, 0x9bd8, 0x1, 0x1);
        gbc.writeMem(0x75c, { 0x75 });
        gbc.writeMem(0x9bd8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xc8da);
        EXPECT(gbc.pc(), 0x75d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bd8), 0xd8);
        // 75 0020
        gbc.setState(0x5948, 0xea25, 0x3e80, 0x2313, 0xbc35, 0xc074, 0x0, 0x0);
        gbc.writeMem(0x5948, { 0x75 });
        gbc.writeMem(0xc074, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xea25);
        EXPECT(gbc.pc(), 0x5949);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc074), 0x74);
        // 75 0023
        gbc.setState(0x9b3a, 0x9c0e, 0x94b0, 0xa510, 0x1aab, 0x9338, 0x1, 0x1);
        gbc.writeMem(0x9338, { 0x0 });
        gbc.writeMem(0x9b3a, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x9c0e);
        EXPECT(gbc.pc(), 0x9b3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9338), 0x38);
        EXPECT(gbc.readMem(0x9b3a), 0x75);
        // 75 0024
        gbc.setState(0xcba3, 0xcc16, 0x48b0, 0xe609, 0x8246, 0xbb77, 0x1, 0x0);
        gbc.writeMem(0xbb77, { 0x0 });
        gbc.writeMem(0xcba3, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xcc16);
        EXPECT(gbc.pc(), 0xcba4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb77), 0x77);
        EXPECT(gbc.readMem(0xcba3), 0x75);
        // 75 0026
        gbc.setState(0x899d, 0x339, 0xa820, 0xb2d6, 0xedc0, 0xdf71, 0x1, 0x1);
        gbc.writeMem(0x899d, { 0x75 });
        gbc.writeMem(0xdf71, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x339);
        EXPECT(gbc.pc(), 0x899e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x899d), 0x75);
        EXPECT(gbc.readMem(0xdf71), 0x71);
        // 75 0027
        gbc.setState(0x40b6, 0x19c8, 0xf640, 0xb93c, 0xd1f6, 0x97aa, 0x0, 0x1);
        gbc.writeMem(0x40b6, { 0x75 });
        gbc.writeMem(0x97aa, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x19c8);
        EXPECT(gbc.pc(), 0x40b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97aa), 0xaa);
        // 75 0029
        gbc.setState(0xa75, 0xe41b, 0xa350, 0x7d4c, 0x291, 0xcb47, 0x0, 0x1);
        gbc.writeMem(0xa75, { 0x75 });
        gbc.writeMem(0xcb47, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xe41b);
        EXPECT(gbc.pc(), 0xa76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb47), 0x47);
        // 75 002B
        gbc.setState(0x1b40, 0x164b, 0xcf40, 0x16ac, 0x1549, 0xf313, 0x0, 0x1);
        gbc.writeMem(0x1b40, { 0x75 });
        gbc.writeMem(0xf313, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x164b);
        EXPECT(gbc.pc(), 0x1b41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf313), 0x13);
        // 75 002C
        gbc.setState(0x59cc, 0x5d0a, 0x7720, 0xc549, 0x9846, 0xe19d, 0x1, 0x0);
        gbc.writeMem(0x59cc, { 0x75 });
        gbc.writeMem(0xe19d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x5d0a);
        EXPECT(gbc.pc(), 0x59cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe19d), 0x9d);
        // 75 002D
        gbc.setState(0xd85, 0x7f7d, 0x41f0, 0xdfa7, 0x411a, 0xa274, 0x0, 0x1);
        gbc.writeMem(0xd85, { 0x75 });
        gbc.writeMem(0xa274, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x7f7d);
        EXPECT(gbc.pc(), 0xd86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa274), 0x74);
        // 75 002E
        gbc.setState(0x9462, 0x2308, 0x3c10, 0x7978, 0xfcdb, 0xff56, 0x0, 0x1);
        gbc.writeMem(0x9462, { 0x75 });
        gbc.writeMem(0xff56, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x2308);
        EXPECT(gbc.pc(), 0x9463);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9462), 0x75);
        EXPECT(gbc.readMem(0xff56), 0x56);
        // 75 002F
        gbc.setState(0x5fe2, 0xff00, 0xd740, 0x5367, 0x4830, 0xbb15, 0x1, 0x0);
        gbc.writeMem(0x5fe2, { 0x75 });
        gbc.writeMem(0xbb15, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xff00);
        EXPECT(gbc.pc(), 0x5fe3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb15), 0x15);
        // 75 0034
        gbc.setState(0x85bf, 0x7fe1, 0x5fc0, 0x5f0f, 0x686b, 0x86e4, 0x1, 0x0);
        gbc.writeMem(0x85bf, { 0x75 });
        gbc.writeMem(0x86e4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x7fe1);
        EXPECT(gbc.pc(), 0x85c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85bf), 0x75);
        EXPECT(gbc.readMem(0x86e4), 0xe4);
        // 75 0036
        gbc.setState(0x4217, 0x3809, 0x54d0, 0xe827, 0xdf4d, 0xd519, 0x1, 0x1);
        gbc.writeMem(0x4217, { 0x75 });
        gbc.writeMem(0xd519, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x3809);
        EXPECT(gbc.pc(), 0x4218);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd519), 0x19);
        // 75 0039
        gbc.setState(0x3f45, 0xa289, 0xc3b0, 0x9e91, 0x7732, 0x9f70, 0x1, 0x1);
        gbc.writeMem(0x3f45, { 0x75 });
        gbc.writeMem(0x9f70, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xa289);
        EXPECT(gbc.pc(), 0x3f46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f70), 0x70);
        // 75 003A
        gbc.setState(0x311b, 0x1825, 0x120, 0xf48f, 0xee5b, 0xbd41, 0x1, 0x1);
        gbc.writeMem(0x311b, { 0x75 });
        gbc.writeMem(0xbd41, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x1825);
        EXPECT(gbc.pc(), 0x311c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd41), 0x41);
        // 75 003B
        gbc.setState(0x3c42, 0x591b, 0xd680, 0x6cc4, 0x5ab0, 0xb823, 0x1, 0x1);
        gbc.writeMem(0x3c42, { 0x75 });
        gbc.writeMem(0xb823, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x591b);
        EXPECT(gbc.pc(), 0x3c43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb823), 0x23);
        // 75 003D
        gbc.setState(0x3a77, 0xf696, 0x2870, 0x7ced, 0x34e4, 0xeec3, 0x1, 0x0);
        gbc.writeMem(0x3a77, { 0x75 });
        gbc.writeMem(0xeec3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xf696);
        EXPECT(gbc.pc(), 0x3a78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeec3), 0xc3);
        // 75 003E
        gbc.setState(0xc0f6, 0xb6a4, 0xeb00, 0xae28, 0x6766, 0x9698, 0x0, 0x0);
        gbc.writeMem(0x9698, { 0x0 });
        gbc.writeMem(0xc0f6, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xb6a4);
        EXPECT(gbc.pc(), 0xc0f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9698), 0x98);
        EXPECT(gbc.readMem(0xc0f6), 0x75);
        // 75 0042
        gbc.setState(0x7f2b, 0xf2f0, 0x7230, 0xf3b2, 0x6e1e, 0xe4b2, 0x0, 0x1);
        gbc.writeMem(0x7f2b, { 0x75 });
        gbc.writeMem(0xe4b2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xf2f0);
        EXPECT(gbc.pc(), 0x7f2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4b2), 0xb2);
        // 75 0043
        gbc.setState(0xab5b, 0xea4e, 0x6b0, 0xada6, 0x40c2, 0xbbd5, 0x0, 0x0);
        gbc.writeMem(0xab5b, { 0x75 });
        gbc.writeMem(0xbbd5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xea4e);
        EXPECT(gbc.pc(), 0xab5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab5b), 0x75);
        EXPECT(gbc.readMem(0xbbd5), 0xd5);
        // 75 0044
        gbc.setState(0xe8f1, 0xcbf8, 0xe3d0, 0x886b, 0x9607, 0x8438, 0x1, 0x1);
        gbc.writeMem(0x8438, { 0x0 });
        gbc.writeMem(0xe8f1, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xcbf8);
        EXPECT(gbc.pc(), 0xe8f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8438), 0x38);
        EXPECT(gbc.readMem(0xe8f1), 0x75);
        // 75 0047
        gbc.setState(0x63b8, 0x5c50, 0xcd20, 0x1731, 0x801, 0xbcfa, 0x1, 0x1);
        gbc.writeMem(0x63b8, { 0x75 });
        gbc.writeMem(0xbcfa, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x5c50);
        EXPECT(gbc.pc(), 0x63b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcfa), 0xfa);
        // 75 0048
        gbc.setState(0x8d5e, 0xe693, 0x9d90, 0x4665, 0xf4de, 0x9c71, 0x0, 0x1);
        gbc.writeMem(0x8d5e, { 0x75 });
        gbc.writeMem(0x9c71, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xe693);
        EXPECT(gbc.pc(), 0x8d5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d5e), 0x75);
        EXPECT(gbc.readMem(0x9c71), 0x71);
        // 75 004D
        gbc.setState(0x9030, 0xd5fd, 0xfa70, 0x3d4, 0x63c3, 0xcb84, 0x0, 0x1);
        gbc.writeMem(0x9030, { 0x75 });
        gbc.writeMem(0xcb84, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xd5fd);
        EXPECT(gbc.pc(), 0x9031);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9030), 0x75);
        EXPECT(gbc.readMem(0xcb84), 0x84);
        // 75 004F
        gbc.setState(0x912, 0x5bf0, 0x7d70, 0xa78a, 0xed72, 0xbb59, 0x0, 0x0);
        gbc.writeMem(0x912, { 0x75 });
        gbc.writeMem(0xbb59, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x5bf0);
        EXPECT(gbc.pc(), 0x913);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb59), 0x59);
        // 75 0053
        gbc.setState(0xb6f1, 0x757a, 0xb020, 0x92fd, 0xb5e0, 0xb8d9, 0x1, 0x1);
        gbc.writeMem(0xb6f1, { 0x75 });
        gbc.writeMem(0xb8d9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x757a);
        EXPECT(gbc.pc(), 0xb6f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6f1), 0x75);
        EXPECT(gbc.readMem(0xb8d9), 0xd9);
        // 75 0055
        gbc.setState(0x6887, 0x693, 0x2540, 0x772, 0x3cdb, 0xdc38, 0x1, 0x0);
        gbc.writeMem(0x6887, { 0x75 });
        gbc.writeMem(0xdc38, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x693);
        EXPECT(gbc.pc(), 0x6888);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc38), 0x38);
        // 75 0056
        gbc.setState(0x61cc, 0x659, 0x84a0, 0x2ce6, 0x2ed, 0xc05b, 0x0, 0x0);
        gbc.writeMem(0x61cc, { 0x75 });
        gbc.writeMem(0xc05b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x659);
        EXPECT(gbc.pc(), 0x61cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc05b), 0x5b);
        // 75 0059
        gbc.setState(0x3abc, 0xe96a, 0x72f0, 0xa81a, 0x103b, 0xab34, 0x0, 0x1);
        gbc.writeMem(0x3abc, { 0x75 });
        gbc.writeMem(0xab34, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xe96a);
        EXPECT(gbc.pc(), 0x3abd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab34), 0x34);
        // 75 005A
        gbc.setState(0xd669, 0xc885, 0xda50, 0x6cad, 0x1215, 0xbd3d, 0x0, 0x1);
        gbc.writeMem(0xbd3d, { 0x0 });
        gbc.writeMem(0xd669, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xc885);
        EXPECT(gbc.pc(), 0xd66a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd3d), 0x3d);
        EXPECT(gbc.readMem(0xd669), 0x75);
        // 75 005C
        gbc.setState(0xb968, 0x5a96, 0xaae0, 0xbe15, 0x3733, 0xa73d, 0x1, 0x0);
        gbc.writeMem(0xa73d, { 0x0 });
        gbc.writeMem(0xb968, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x5a96);
        EXPECT(gbc.pc(), 0xb969);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa73d), 0x3d);
        EXPECT(gbc.readMem(0xb968), 0x75);
        // 75 005D
        gbc.setState(0x16b8, 0xb70f, 0xd880, 0xd401, 0xa661, 0x9f91, 0x0, 0x1);
        gbc.writeMem(0x16b8, { 0x75 });
        gbc.writeMem(0x9f91, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xb70f);
        EXPECT(gbc.pc(), 0x16b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f91), 0x91);
        // 75 0061
        gbc.setState(0x5295, 0xea52, 0x90e0, 0x5ff0, 0xad72, 0xd8c1, 0x1, 0x0);
        gbc.writeMem(0x5295, { 0x75 });
        gbc.writeMem(0xd8c1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xea52);
        EXPECT(gbc.pc(), 0x5296);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8c1), 0xc1);
        // 75 0067
        gbc.setState(0x4f6c, 0x66df, 0x3930, 0x9cb4, 0x5f2b, 0xde60, 0x0, 0x1);
        gbc.writeMem(0x4f6c, { 0x75 });
        gbc.writeMem(0xde60, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x66df);
        EXPECT(gbc.pc(), 0x4f6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde60), 0x60);
        // 75 0068
        gbc.setState(0x6eb1, 0xc742, 0x9960, 0x2636, 0x5f9c, 0xa356, 0x0, 0x1);
        gbc.writeMem(0x6eb1, { 0x75 });
        gbc.writeMem(0xa356, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xc742);
        EXPECT(gbc.pc(), 0x6eb2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa356), 0x56);
        // 75 006A
        gbc.setState(0x8875, 0x611d, 0x7700, 0xfe04, 0x7dac, 0xcc8e, 0x1, 0x1);
        gbc.writeMem(0x8875, { 0x75 });
        gbc.writeMem(0xcc8e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x611d);
        EXPECT(gbc.pc(), 0x8876);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8875), 0x75);
        EXPECT(gbc.readMem(0xcc8e), 0x8e);
        // 75 0071
        gbc.setState(0x7167, 0xbf71, 0x8d80, 0xf571, 0x8860, 0x8e8e, 0x1, 0x0);
        gbc.writeMem(0x7167, { 0x75 });
        gbc.writeMem(0x8e8e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xbf71);
        EXPECT(gbc.pc(), 0x7168);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e8e), 0x8e);
        // 75 0072
        gbc.setState(0x2b99, 0x30b4, 0xda30, 0x7bb6, 0xc646, 0xeb79, 0x1, 0x0);
        gbc.writeMem(0x2b99, { 0x75 });
        gbc.writeMem(0xeb79, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x30b4);
        EXPECT(gbc.pc(), 0x2b9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb79), 0x79);
        // 75 0074
        gbc.setState(0x8b4, 0xd416, 0x1a50, 0x53b1, 0x2d69, 0xfff6, 0x1, 0x0);
        gbc.writeMem(0x8b4, { 0x75 });
        gbc.writeMem(0xfff6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xd416);
        EXPECT(gbc.pc(), 0x8b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfff6), 0xf6);
        // 75 0076
        gbc.setState(0xb98c, 0xcbcc, 0x5200, 0xcb1d, 0xb49a, 0xa46f, 0x1, 0x0);
        gbc.writeMem(0xa46f, { 0x0 });
        gbc.writeMem(0xb98c, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xcbcc);
        EXPECT(gbc.pc(), 0xb98d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa46f), 0x6f);
        EXPECT(gbc.readMem(0xb98c), 0x75);
        // 75 0078
        gbc.setState(0x7719, 0x701, 0xd660, 0xa206, 0xe017, 0xf316, 0x0, 0x1);
        gbc.writeMem(0x7719, { 0x75 });
        gbc.writeMem(0xf316, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x701);
        EXPECT(gbc.pc(), 0x771a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf316), 0x16);
        // 75 0079
        gbc.setState(0x1d77, 0x8838, 0x520, 0x62f5, 0x53a4, 0xec91, 0x0, 0x1);
        gbc.writeMem(0x1d77, { 0x75 });
        gbc.writeMem(0xec91, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x8838);
        EXPECT(gbc.pc(), 0x1d78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec91), 0x91);
        // 75 007D
        gbc.setState(0xc42e, 0x9f98, 0x55a0, 0xee24, 0x5289, 0xf8c2, 0x0, 0x0);
        gbc.writeMem(0xc42e, { 0x75 });
        gbc.writeMem(0xf8c2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x9f98);
        EXPECT(gbc.pc(), 0xc42f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc42e), 0x75);
        EXPECT(gbc.readMem(0xf8c2), 0xc2);
        // 75 007F
        gbc.setState(0x6e80, 0xdbf2, 0x9b90, 0xac66, 0x484b, 0x978a, 0x1, 0x0);
        gbc.writeMem(0x6e80, { 0x75 });
        gbc.writeMem(0x978a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xdbf2);
        EXPECT(gbc.pc(), 0x6e81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x978a), 0x8a);
        // 75 0080
        gbc.setState(0x1f88, 0x67c8, 0x8fa0, 0x5ce3, 0xd561, 0xec0b, 0x0, 0x0);
        gbc.writeMem(0x1f88, { 0x75 });
        gbc.writeMem(0xec0b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x67c8);
        EXPECT(gbc.pc(), 0x1f89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec0b), 0xb);
        // 75 0082
        gbc.setState(0x3679, 0x5168, 0x7f30, 0xb193, 0x7c51, 0xa04d, 0x0, 0x1);
        gbc.writeMem(0x3679, { 0x75 });
        gbc.writeMem(0xa04d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x5168);
        EXPECT(gbc.pc(), 0x367a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa04d), 0x4d);
        // 75 0083
        gbc.setState(0x8fd9, 0xd28d, 0x330, 0xf45a, 0x840f, 0xe3ae, 0x1, 0x1);
        gbc.writeMem(0x8fd9, { 0x75 });
        gbc.writeMem(0xe3ae, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xd28d);
        EXPECT(gbc.pc(), 0x8fda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fd9), 0x75);
        EXPECT(gbc.readMem(0xe3ae), 0xae);
        // 75 0086
        gbc.setState(0x37e2, 0x51f2, 0x8230, 0xcdcb, 0x2dfa, 0xc7a5, 0x0, 0x0);
        gbc.writeMem(0x37e2, { 0x75 });
        gbc.writeMem(0xc7a5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x51f2);
        EXPECT(gbc.pc(), 0x37e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7a5), 0xa5);
        // 75 0087
        gbc.setState(0xa962, 0x8d6d, 0xfb60, 0x6497, 0x2200, 0xfbcd, 0x0, 0x1);
        gbc.writeMem(0xa962, { 0x75 });
        gbc.writeMem(0xfbcd, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x8d6d);
        EXPECT(gbc.pc(), 0xa963);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa962), 0x75);
        EXPECT(gbc.readMem(0xfbcd), 0xcd);
        // 75 0089
        gbc.setState(0x60fe, 0x60b7, 0xf850, 0x3aff, 0xe295, 0xbe08, 0x0, 0x1);
        gbc.writeMem(0x60fe, { 0x75 });
        gbc.writeMem(0xbe08, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x60b7);
        EXPECT(gbc.pc(), 0x60ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe08), 0x8);
        // 75 008B
        gbc.setState(0xe06, 0x5c0e, 0x45b0, 0x25e3, 0x9d20, 0xce59, 0x1, 0x0);
        gbc.writeMem(0xe06, { 0x75 });
        gbc.writeMem(0xce59, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x5c0e);
        EXPECT(gbc.pc(), 0xe07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce59), 0x59);
        // 75 008D
        gbc.setState(0x2b5a, 0x1410, 0x7440, 0x4813, 0xe602, 0xd8d5, 0x0, 0x1);
        gbc.writeMem(0x2b5a, { 0x75 });
        gbc.writeMem(0xd8d5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x1410);
        EXPECT(gbc.pc(), 0x2b5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8d5), 0xd5);
        // 75 0090
        gbc.setState(0xb8d5, 0x6bd4, 0x6880, 0x976f, 0xd4aa, 0x8ab6, 0x1, 0x0);
        gbc.writeMem(0x8ab6, { 0x0 });
        gbc.writeMem(0xb8d5, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x6bd4);
        EXPECT(gbc.pc(), 0xb8d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ab6), 0xb6);
        EXPECT(gbc.readMem(0xb8d5), 0x75);
        // 75 0091
        gbc.setState(0xbc53, 0x6ad8, 0x700, 0x636e, 0x86, 0xe309, 0x1, 0x1);
        gbc.writeMem(0xbc53, { 0x75 });
        gbc.writeMem(0xe309, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x6ad8);
        EXPECT(gbc.pc(), 0xbc54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc53), 0x75);
        EXPECT(gbc.readMem(0xe309), 0x9);
        // 75 0092
        gbc.setState(0xa9bf, 0x199f, 0x61d0, 0xb89b, 0x770b, 0x8342, 0x0, 0x1);
        gbc.writeMem(0x8342, { 0x0 });
        gbc.writeMem(0xa9bf, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x199f);
        EXPECT(gbc.pc(), 0xa9c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8342), 0x42);
        EXPECT(gbc.readMem(0xa9bf), 0x75);
        // 75 0093
        gbc.setState(0x1f22, 0x6a35, 0x3010, 0x297, 0x5e87, 0xbe6b, 0x0, 0x1);
        gbc.writeMem(0x1f22, { 0x75 });
        gbc.writeMem(0xbe6b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x6a35);
        EXPECT(gbc.pc(), 0x1f23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe6b), 0x6b);
        // 75 0095
        gbc.setState(0x8692, 0xaa4, 0x4530, 0xaf97, 0x21f9, 0xbd78, 0x1, 0x1);
        gbc.writeMem(0x8692, { 0x75 });
        gbc.writeMem(0xbd78, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xaa4);
        EXPECT(gbc.pc(), 0x8693);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8692), 0x75);
        EXPECT(gbc.readMem(0xbd78), 0x78);
        // 75 0097
        gbc.setState(0xd3da, 0xfac4, 0xdb30, 0x66e5, 0xf720, 0xed96, 0x1, 0x0);
        gbc.writeMem(0xd3da, { 0x75 });
        gbc.writeMem(0xed96, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xfac4);
        EXPECT(gbc.pc(), 0xd3db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3da), 0x75);
        EXPECT(gbc.readMem(0xed96), 0x96);
        // 75 009E
        gbc.setState(0xbcee, 0x2721, 0x2f00, 0x85ab, 0x73a0, 0xc347, 0x0, 0x1);
        gbc.writeMem(0xbcee, { 0x75 });
        gbc.writeMem(0xc347, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x2721);
        EXPECT(gbc.pc(), 0xbcef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcee), 0x75);
        EXPECT(gbc.readMem(0xc347), 0x47);
        // 75 009F
        gbc.setState(0xc8fb, 0x6115, 0x8a10, 0xb5df, 0x166c, 0x9d90, 0x1, 0x1);
        gbc.writeMem(0x9d90, { 0x0 });
        gbc.writeMem(0xc8fb, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x6115);
        EXPECT(gbc.pc(), 0xc8fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d90), 0x90);
        EXPECT(gbc.readMem(0xc8fb), 0x75);
        // 75 00A0
        gbc.setState(0x5a20, 0xfe95, 0xeb80, 0x9daf, 0x4de9, 0xe160, 0x0, 0x0);
        gbc.writeMem(0x5a20, { 0x75 });
        gbc.writeMem(0xe160, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xfe95);
        EXPECT(gbc.pc(), 0x5a21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe160), 0x60);
        // 75 00A1
        gbc.setState(0xcd3d, 0x8420, 0x30, 0xd060, 0x5c1f, 0xcc39, 0x1, 0x0);
        gbc.writeMem(0xcc39, { 0x0 });
        gbc.writeMem(0xcd3d, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x8420);
        EXPECT(gbc.pc(), 0xcd3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc39), 0x39);
        EXPECT(gbc.readMem(0xcd3d), 0x75);
        // 75 00A5
        gbc.setState(0xe187, 0xfb45, 0xb810, 0x117, 0xd55f, 0x949e, 0x1, 0x0);
        gbc.writeMem(0x949e, { 0x0 });
        gbc.writeMem(0xe187, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xfb45);
        EXPECT(gbc.pc(), 0xe188);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x949e), 0x9e);
        EXPECT(gbc.readMem(0xe187), 0x75);
        // 75 00A9
        gbc.setState(0x3930, 0xaa75, 0x16f0, 0x994c, 0x770, 0x9881, 0x0, 0x1);
        gbc.writeMem(0x3930, { 0x75 });
        gbc.writeMem(0x9881, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xaa75);
        EXPECT(gbc.pc(), 0x3931);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9881), 0x81);
        // 75 00AB
        gbc.setState(0xc1ee, 0x858d, 0xfe50, 0x8fe, 0x6176, 0xaf45, 0x0, 0x0);
        gbc.writeMem(0xaf45, { 0x0 });
        gbc.writeMem(0xc1ee, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x858d);
        EXPECT(gbc.pc(), 0xc1ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf45), 0x45);
        EXPECT(gbc.readMem(0xc1ee), 0x75);
        // 75 00AC
        gbc.setState(0x2995, 0x226e, 0x7af0, 0x8b54, 0xd49, 0xb447, 0x1, 0x1);
        gbc.writeMem(0x2995, { 0x75 });
        gbc.writeMem(0xb447, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x226e);
        EXPECT(gbc.pc(), 0x2996);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb447), 0x47);
        // 75 00B1
        gbc.setState(0x54d4, 0xcc58, 0x1a0, 0xa58, 0x33fc, 0x87a7, 0x1, 0x0);
        gbc.writeMem(0x54d4, { 0x75 });
        gbc.writeMem(0x87a7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xcc58);
        EXPECT(gbc.pc(), 0x54d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87a7), 0xa7);
        // 75 00B2
        gbc.setState(0x2b18, 0x5f3d, 0x3dd0, 0x4140, 0x38f4, 0xc6f8, 0x0, 0x0);
        gbc.writeMem(0x2b18, { 0x75 });
        gbc.writeMem(0xc6f8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x5f3d);
        EXPECT(gbc.pc(), 0x2b19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6f8), 0xf8);
        // 75 00B3
        gbc.setState(0x3efa, 0x7b72, 0x8880, 0x89bf, 0xd9bb, 0x9f80, 0x1, 0x0);
        gbc.writeMem(0x3efa, { 0x75 });
        gbc.writeMem(0x9f80, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x7b72);
        EXPECT(gbc.pc(), 0x3efb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f80), 0x80);
        // 75 00B4
        gbc.setState(0xcb0b, 0xd428, 0x54b0, 0xbdbe, 0x8f0c, 0xd279, 0x0, 0x0);
        gbc.writeMem(0xcb0b, { 0x75 });
        gbc.writeMem(0xd279, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xd428);
        EXPECT(gbc.pc(), 0xcb0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb0b), 0x75);
        EXPECT(gbc.readMem(0xd279), 0x79);
        // 75 00B7
        gbc.setState(0x1fcb, 0xfce3, 0xb310, 0xe8f2, 0x3966, 0x9498, 0x0, 0x1);
        gbc.writeMem(0x1fcb, { 0x75 });
        gbc.writeMem(0x9498, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xfce3);
        EXPECT(gbc.pc(), 0x1fcc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9498), 0x98);
        // 75 00B9
        gbc.setState(0x9dec, 0x12e5, 0x33d0, 0x55d1, 0x32d8, 0x92a7, 0x1, 0x1);
        gbc.writeMem(0x92a7, { 0x0 });
        gbc.writeMem(0x9dec, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x12e5);
        EXPECT(gbc.pc(), 0x9ded);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92a7), 0xa7);
        EXPECT(gbc.readMem(0x9dec), 0x75);
        // 75 00BA
        gbc.setState(0xd54, 0x512e, 0x3b10, 0x2941, 0x7796, 0xbb28, 0x0, 0x0);
        gbc.writeMem(0xd54, { 0x75 });
        gbc.writeMem(0xbb28, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x512e);
        EXPECT(gbc.pc(), 0xd55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb28), 0x28);
        // 75 00BB
        gbc.setState(0xbd7f, 0xf11b, 0x84a0, 0xafd2, 0xa695, 0x96f4, 0x0, 0x1);
        gbc.writeMem(0x96f4, { 0x0 });
        gbc.writeMem(0xbd7f, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xf11b);
        EXPECT(gbc.pc(), 0xbd80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96f4), 0xf4);
        EXPECT(gbc.readMem(0xbd7f), 0x75);
        // 75 00BC
        gbc.setState(0x8c4, 0x5d03, 0xd7b0, 0x369c, 0x19cc, 0xf3dd, 0x1, 0x0);
        gbc.writeMem(0x8c4, { 0x75 });
        gbc.writeMem(0xf3dd, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x5d03);
        EXPECT(gbc.pc(), 0x8c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf3dd), 0xdd);
        // 75 00BD
        gbc.setState(0xbde1, 0xf58e, 0xc620, 0x5cb7, 0x2320, 0xa7f8, 0x0, 0x0);
        gbc.writeMem(0xa7f8, { 0x0 });
        gbc.writeMem(0xbde1, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xf58e);
        EXPECT(gbc.pc(), 0xbde2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7f8), 0xf8);
        EXPECT(gbc.readMem(0xbde1), 0x75);
        // 75 00BE
        gbc.setState(0xaf41, 0x1d28, 0xe430, 0x3f51, 0x763a, 0xad49, 0x1, 0x1);
        gbc.writeMem(0xad49, { 0x0 });
        gbc.writeMem(0xaf41, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x1d28);
        EXPECT(gbc.pc(), 0xaf42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad49), 0x49);
        EXPECT(gbc.readMem(0xaf41), 0x75);
        // 75 00BF
        gbc.setState(0x7a7d, 0x4b1e, 0xaa20, 0x8dbe, 0x6c92, 0xc87d, 0x0, 0x0);
        gbc.writeMem(0x7a7d, { 0x75 });
        gbc.writeMem(0xc87d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x4b1e);
        EXPECT(gbc.pc(), 0x7a7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc87d), 0x7d);
        // 75 00C1
        gbc.setState(0xd851, 0x376e, 0x9ac0, 0xce59, 0x432e, 0xab32, 0x0, 0x1);
        gbc.writeMem(0xab32, { 0x0 });
        gbc.writeMem(0xd851, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x376e);
        EXPECT(gbc.pc(), 0xd852);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab32), 0x32);
        EXPECT(gbc.readMem(0xd851), 0x75);
        // 75 00C5
        gbc.setState(0x39e1, 0x4bb7, 0xb2e0, 0xf983, 0x1b91, 0x9561, 0x1, 0x0);
        gbc.writeMem(0x39e1, { 0x75 });
        gbc.writeMem(0x9561, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x4bb7);
        EXPECT(gbc.pc(), 0x39e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9561), 0x61);
        // 75 00C9
        gbc.setState(0xb0bb, 0xe1bb, 0x3a40, 0x99a1, 0x222c, 0xacab, 0x0, 0x0);
        gbc.writeMem(0xacab, { 0x0 });
        gbc.writeMem(0xb0bb, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xe1bb);
        EXPECT(gbc.pc(), 0xb0bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xacab), 0xab);
        EXPECT(gbc.readMem(0xb0bb), 0x75);
        // 75 00CD
        gbc.setState(0x94d0, 0xcd1e, 0x8620, 0x9ce1, 0x3cb9, 0x9d61, 0x0, 0x1);
        gbc.writeMem(0x94d0, { 0x75 });
        gbc.writeMem(0x9d61, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xcd1e);
        EXPECT(gbc.pc(), 0x94d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94d0), 0x75);
        EXPECT(gbc.readMem(0x9d61), 0x61);
        // 75 00D1
        gbc.setState(0x3f3, 0xe4e4, 0x86e0, 0x5f37, 0x82fe, 0xf478, 0x0, 0x0);
        gbc.writeMem(0x3f3, { 0x75 });
        gbc.writeMem(0xf478, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xe4e4);
        EXPECT(gbc.pc(), 0x3f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf478), 0x78);
        // 75 00D2
        gbc.setState(0x2c9b, 0xf96f, 0xf7a0, 0xc661, 0x3aa9, 0xb244, 0x0, 0x1);
        gbc.writeMem(0x2c9b, { 0x75 });
        gbc.writeMem(0xb244, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xf96f);
        EXPECT(gbc.pc(), 0x2c9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb244), 0x44);
        // 75 00D3
        gbc.setState(0x7cfb, 0x4795, 0x6950, 0x7233, 0xb5d5, 0xf62b, 0x0, 0x1);
        gbc.writeMem(0x7cfb, { 0x75 });
        gbc.writeMem(0xf62b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x4795);
        EXPECT(gbc.pc(), 0x7cfc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf62b), 0x2b);
        // 75 00D5
        gbc.setState(0x27ae, 0xaccd, 0xb7e0, 0x7ddc, 0xabed, 0xc790, 0x1, 0x1);
        gbc.writeMem(0x27ae, { 0x75 });
        gbc.writeMem(0xc790, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xaccd);
        EXPECT(gbc.pc(), 0x27af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc790), 0x90);
        // 75 00D8
        gbc.setState(0x6b5, 0x3417, 0xd620, 0x5be8, 0x3e04, 0x8ace, 0x1, 0x0);
        gbc.writeMem(0x6b5, { 0x75 });
        gbc.writeMem(0x8ace, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x3417);
        EXPECT(gbc.pc(), 0x6b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ace), 0xce);
        // 75 00D9
        gbc.setState(0x6b52, 0x61ac, 0x59e0, 0x9caf, 0xe3b1, 0xc858, 0x1, 0x1);
        gbc.writeMem(0x6b52, { 0x75 });
        gbc.writeMem(0xc858, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x61ac);
        EXPECT(gbc.pc(), 0x6b53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc858), 0x58);
        // 75 00DA
        gbc.setState(0x7c1, 0xbc5f, 0x8630, 0xf2d, 0xd7f, 0xdb02, 0x1, 0x1);
        gbc.writeMem(0x7c1, { 0x75 });
        gbc.writeMem(0xdb02, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xbc5f);
        EXPECT(gbc.pc(), 0x7c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb02), 0x2);
        // 75 00DC
        gbc.setState(0x4fdb, 0xf688, 0x7f20, 0x1ca3, 0x68f6, 0xa849, 0x1, 0x1);
        gbc.writeMem(0x4fdb, { 0x75 });
        gbc.writeMem(0xa849, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xf688);
        EXPECT(gbc.pc(), 0x4fdc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa849), 0x49);
        // 75 00DD
        gbc.setState(0x6b6, 0x7df0, 0x94b0, 0x1802, 0xd336, 0xfd0f, 0x0, 0x0);
        gbc.writeMem(0x6b6, { 0x75 });
        gbc.writeMem(0xfd0f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x7df0);
        EXPECT(gbc.pc(), 0x6b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfd0f), 0xf);
        // 75 00DE
        gbc.setState(0x941a, 0xdd64, 0x4f70, 0xee80, 0x1327, 0xf1ab, 0x0, 0x1);
        gbc.writeMem(0x941a, { 0x75 });
        gbc.writeMem(0xf1ab, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xdd64);
        EXPECT(gbc.pc(), 0x941b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x941a), 0x75);
        EXPECT(gbc.readMem(0xf1ab), 0xab);
        // 75 00E0
        gbc.setState(0xeb52, 0x197d, 0x8fb0, 0xccb4, 0x17d4, 0xe58d, 0x1, 0x0);
        gbc.writeMem(0xe58d, { 0x0 });
        gbc.writeMem(0xeb52, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x197d);
        EXPECT(gbc.pc(), 0xeb53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe58d), 0x8d);
        EXPECT(gbc.readMem(0xeb52), 0x75);
        // 75 00E2
        gbc.setState(0x157e, 0xc4d8, 0x3510, 0x940d, 0x5f64, 0xa825, 0x0, 0x0);
        gbc.writeMem(0x157e, { 0x75 });
        gbc.writeMem(0xa825, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xc4d8);
        EXPECT(gbc.pc(), 0x157f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa825), 0x25);
        // 75 00E4
        gbc.setState(0x7c1c, 0x6805, 0xf090, 0x494b, 0xe9c1, 0xbbd5, 0x0, 0x1);
        gbc.writeMem(0x7c1c, { 0x75 });
        gbc.writeMem(0xbbd5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x6805);
        EXPECT(gbc.pc(), 0x7c1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbd5), 0xd5);
        // 75 00E7
        gbc.setState(0x8d4c, 0xa5e0, 0x1390, 0xd8c2, 0x8bf4, 0xbfd4, 0x1, 0x0);
        gbc.writeMem(0x8d4c, { 0x75 });
        gbc.writeMem(0xbfd4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xa5e0);
        EXPECT(gbc.pc(), 0x8d4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d4c), 0x75);
        EXPECT(gbc.readMem(0xbfd4), 0xd4);
        // 75 00E8
        gbc.setState(0xccad, 0xfab4, 0x45c0, 0x47b, 0xc152, 0xdb35, 0x1, 0x0);
        gbc.writeMem(0xccad, { 0x75 });
        gbc.writeMem(0xdb35, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xfab4);
        EXPECT(gbc.pc(), 0xccae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccad), 0x75);
        EXPECT(gbc.readMem(0xdb35), 0x35);
        // 75 00E9
        gbc.setState(0xced6, 0xc75c, 0xc1d0, 0xcea4, 0x8830, 0xa2da, 0x0, 0x1);
        gbc.writeMem(0xa2da, { 0x0 });
        gbc.writeMem(0xced6, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xc75c);
        EXPECT(gbc.pc(), 0xced7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2da), 0xda);
        EXPECT(gbc.readMem(0xced6), 0x75);
        // 75 00EB
        gbc.setState(0xe26e, 0x91d3, 0x7be0, 0xea2f, 0xd669, 0x8ef8, 0x0, 0x1);
        gbc.writeMem(0x8ef8, { 0x0 });
        gbc.writeMem(0xe26e, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x91d3);
        EXPECT(gbc.pc(), 0xe26f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ef8), 0xf8);
        EXPECT(gbc.readMem(0xe26e), 0x75);
        // 75 00EC
        gbc.setState(0x2383, 0x1907, 0x7000, 0x184, 0x141f, 0xc9a8, 0x1, 0x0);
        gbc.writeMem(0x2383, { 0x75 });
        gbc.writeMem(0xc9a8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x1907);
        EXPECT(gbc.pc(), 0x2384);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9a8), 0xa8);
        // 75 00ED
        gbc.setState(0x9ebf, 0x3493, 0x9ec0, 0xf0b1, 0x9e43, 0xafa3, 0x0, 0x1);
        gbc.writeMem(0x9ebf, { 0x75 });
        gbc.writeMem(0xafa3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x3493);
        EXPECT(gbc.pc(), 0x9ec0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ebf), 0x75);
        EXPECT(gbc.readMem(0xafa3), 0xa3);
        // 75 00F0
        gbc.setState(0xdff0, 0xd1b, 0x92d0, 0xe41c, 0x5b7c, 0x8a7e, 0x1, 0x1);
        gbc.writeMem(0x8a7e, { 0x0 });
        gbc.writeMem(0xdff0, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xd1b);
        EXPECT(gbc.pc(), 0xdff1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a7e), 0x7e);
        EXPECT(gbc.readMem(0xdff0), 0x75);
        // 75 00F2
        gbc.setState(0xad5d, 0xd5ff, 0x8560, 0x74c, 0x6e5d, 0x8657, 0x0, 0x1);
        gbc.writeMem(0x8657, { 0x0 });
        gbc.writeMem(0xad5d, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xd5ff);
        EXPECT(gbc.pc(), 0xad5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8657), 0x57);
        EXPECT(gbc.readMem(0xad5d), 0x75);
        // 75 00F3
        gbc.setState(0x489e, 0x37ae, 0x17a0, 0x6984, 0xeb07, 0xfc40, 0x1, 0x1);
        gbc.writeMem(0x489e, { 0x75 });
        gbc.writeMem(0xfc40, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x37ae);
        EXPECT(gbc.pc(), 0x489f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfc40), 0x40);
        // 75 00F5
        gbc.setState(0x6157, 0x3811, 0xa7a0, 0xa751, 0x7e35, 0xa739, 0x1, 0x0);
        gbc.writeMem(0x6157, { 0x75 });
        gbc.writeMem(0xa739, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x3811);
        EXPECT(gbc.pc(), 0x6158);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa739), 0x39);
        // 75 00F6
        gbc.setState(0x3d68, 0xf06e, 0xa980, 0x9716, 0xbedf, 0xa209, 0x1, 0x1);
        gbc.writeMem(0x3d68, { 0x75 });
        gbc.writeMem(0xa209, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xf06e);
        EXPECT(gbc.pc(), 0x3d69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa209), 0x9);
        // 75 00F7
        gbc.setState(0xc6b4, 0x6bcc, 0x2f80, 0xa243, 0x85ca, 0x8fd7, 0x0, 0x1);
        gbc.writeMem(0x8fd7, { 0x0 });
        gbc.writeMem(0xc6b4, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x6bcc);
        EXPECT(gbc.pc(), 0xc6b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fd7), 0xd7);
        EXPECT(gbc.readMem(0xc6b4), 0x75);
        // 75 00F9
        gbc.setState(0x62ea, 0x27e4, 0xd700, 0xe500, 0x813f, 0xb91d, 0x0, 0x1);
        gbc.writeMem(0x62ea, { 0x75 });
        gbc.writeMem(0xb91d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x27e4);
        EXPECT(gbc.pc(), 0x62eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb91d), 0x1d);
        // 75 00FC
        gbc.setState(0x3b26, 0x2bdc, 0xb110, 0x8e68, 0x14a8, 0xa139, 0x1, 0x1);
        gbc.writeMem(0x3b26, { 0x75 });
        gbc.writeMem(0xa139, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x2bdc);
        EXPECT(gbc.pc(), 0x3b27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa139), 0x39);
        // 75 00FE
        gbc.setState(0x7b87, 0x3fe1, 0x99e0, 0xb666, 0x9cf5, 0x84ed, 0x0, 0x1);
        gbc.writeMem(0x7b87, { 0x75 });
        gbc.writeMem(0x84ed, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x3fe1);
        EXPECT(gbc.pc(), 0x7b88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84ed), 0xed);
        // 75 00FF
        gbc.setState(0x9310, 0x1cf8, 0xd490, 0xad5d, 0x4955, 0xc1eb, 0x0, 0x0);
        gbc.writeMem(0x9310, { 0x75 });
        gbc.writeMem(0xc1eb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x1cf8);
        EXPECT(gbc.pc(), 0x9311);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9310), 0x75);
        EXPECT(gbc.readMem(0xc1eb), 0xeb);
        // 75 0103
        gbc.setState(0xb007, 0x795e, 0xa530, 0x46b2, 0x9e1d, 0x933b, 0x1, 0x1);
        gbc.writeMem(0x933b, { 0x0 });
        gbc.writeMem(0xb007, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x795e);
        EXPECT(gbc.pc(), 0xb008);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x933b), 0x3b);
        EXPECT(gbc.readMem(0xb007), 0x75);
        // 75 0104
        gbc.setState(0xaa0e, 0xc593, 0x7090, 0x15e0, 0xc12a, 0x955a, 0x0, 0x1);
        gbc.writeMem(0x955a, { 0x0 });
        gbc.writeMem(0xaa0e, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xc593);
        EXPECT(gbc.pc(), 0xaa0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x955a), 0x5a);
        EXPECT(gbc.readMem(0xaa0e), 0x75);
        // 75 0106
        gbc.setState(0xbbe6, 0xedf7, 0x3de0, 0xc204, 0xe2e4, 0xc9aa, 0x1, 0x1);
        gbc.writeMem(0xbbe6, { 0x75 });
        gbc.writeMem(0xc9aa, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xedf7);
        EXPECT(gbc.pc(), 0xbbe7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbe6), 0x75);
        EXPECT(gbc.readMem(0xc9aa), 0xaa);
        // 75 0109
        gbc.setState(0x2fa2, 0x6081, 0x5e10, 0x534b, 0x15cc, 0xaf5a, 0x0, 0x0);
        gbc.writeMem(0x2fa2, { 0x75 });
        gbc.writeMem(0xaf5a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x6081);
        EXPECT(gbc.pc(), 0x2fa3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf5a), 0x5a);
        // 75 010A
        gbc.setState(0x9fb2, 0xd1ef, 0x7430, 0xa7c5, 0x4c4c, 0xfe73, 0x0, 0x0);
        gbc.writeMem(0x9fb2, { 0x75 });
        gbc.writeMem(0xfe73, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xd1ef);
        EXPECT(gbc.pc(), 0x9fb3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fb2), 0x75);
        EXPECT(gbc.readMem(0xfe73), 0x73);
        // 75 010B
        gbc.setState(0x9ec1, 0xd96b, 0x91a0, 0x9aff, 0x3c46, 0xb26d, 0x1, 0x0);
        gbc.writeMem(0x9ec1, { 0x75 });
        gbc.writeMem(0xb26d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xd96b);
        EXPECT(gbc.pc(), 0x9ec2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ec1), 0x75);
        EXPECT(gbc.readMem(0xb26d), 0x6d);
        // 75 010E
        gbc.setState(0x3494, 0x40ee, 0x9cc0, 0xb69c, 0x378c, 0xc464, 0x1, 0x1);
        gbc.writeMem(0x3494, { 0x75 });
        gbc.writeMem(0xc464, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x40ee);
        EXPECT(gbc.pc(), 0x3495);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc464), 0x64);
        // 75 0110
        gbc.setState(0xa574, 0x6f3, 0x9380, 0x275c, 0x5ae7, 0xae87, 0x0, 0x0);
        gbc.writeMem(0xa574, { 0x75 });
        gbc.writeMem(0xae87, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x6f3);
        EXPECT(gbc.pc(), 0xa575);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa574), 0x75);
        EXPECT(gbc.readMem(0xae87), 0x87);
        // 75 0111
        gbc.setState(0x7f1e, 0xca95, 0x8a0, 0x56ec, 0xd325, 0xbff4, 0x1, 0x1);
        gbc.writeMem(0x7f1e, { 0x75 });
        gbc.writeMem(0xbff4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xca95);
        EXPECT(gbc.pc(), 0x7f1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbff4), 0xf4);
        // 75 0112
        gbc.setState(0x3f4f, 0x66b4, 0x1640, 0x8429, 0x3e7, 0x9e8a, 0x0, 0x0);
        gbc.writeMem(0x3f4f, { 0x75 });
        gbc.writeMem(0x9e8a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x66b4);
        EXPECT(gbc.pc(), 0x3f50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e8a), 0x8a);
        // 75 0116
        gbc.setState(0xed3f, 0x676b, 0xae80, 0x8df1, 0x84bb, 0xefe9, 0x1, 0x0);
        gbc.writeMem(0xed3f, { 0x75 });
        gbc.writeMem(0xefe9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x676b);
        EXPECT(gbc.pc(), 0xed40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed3f), 0x75);
        EXPECT(gbc.readMem(0xefe9), 0xe9);
        // 75 0117
        gbc.setState(0xb06a, 0x6726, 0x9900, 0x91a9, 0x71f0, 0xcc94, 0x0, 0x0);
        gbc.writeMem(0xb06a, { 0x75 });
        gbc.writeMem(0xcc94, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x6726);
        EXPECT(gbc.pc(), 0xb06b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb06a), 0x75);
        EXPECT(gbc.readMem(0xcc94), 0x94);
        // 75 0119
        gbc.setState(0xa09e, 0xdd44, 0xcc80, 0xfecc, 0xccaa, 0xc4d4, 0x0, 0x0);
        gbc.writeMem(0xa09e, { 0x75 });
        gbc.writeMem(0xc4d4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xdd44);
        EXPECT(gbc.pc(), 0xa09f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa09e), 0x75);
        EXPECT(gbc.readMem(0xc4d4), 0xd4);
        // 75 011C
        gbc.setState(0x7382, 0x88fe, 0x4fa0, 0x46c7, 0x7e32, 0xe051, 0x1, 0x0);
        gbc.writeMem(0x7382, { 0x75 });
        gbc.writeMem(0xe051, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x88fe);
        EXPECT(gbc.pc(), 0x7383);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe051), 0x51);
        // 75 011E
        gbc.setState(0x62ff, 0x555a, 0x4960, 0x45bb, 0xf182, 0xce7f, 0x0, 0x1);
        gbc.writeMem(0x62ff, { 0x75 });
        gbc.writeMem(0xce7f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x555a);
        EXPECT(gbc.pc(), 0x6300);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce7f), 0x7f);
        // 75 011F
        gbc.setState(0x9419, 0xdab8, 0x290, 0xfba9, 0xb224, 0xf7d1, 0x1, 0x1);
        gbc.writeMem(0x9419, { 0x75 });
        gbc.writeMem(0xf7d1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xdab8);
        EXPECT(gbc.pc(), 0x941a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9419), 0x75);
        EXPECT(gbc.readMem(0xf7d1), 0xd1);
        // 75 0126
        gbc.setState(0x2d00, 0x4108, 0xb040, 0x9341, 0xc503, 0xb609, 0x1, 0x1);
        gbc.writeMem(0x2d00, { 0x75 });
        gbc.writeMem(0xb609, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x4108);
        EXPECT(gbc.pc(), 0x2d01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb609), 0x9);
        // 75 0128
        gbc.setState(0x33c1, 0x2a9, 0xb6e0, 0x5ba7, 0x2abb, 0xd946, 0x1, 0x0);
        gbc.writeMem(0x33c1, { 0x75 });
        gbc.writeMem(0xd946, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x2a9);
        EXPECT(gbc.pc(), 0x33c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd946), 0x46);
        // 75 0129
        gbc.setState(0x6381, 0x4d80, 0x92a0, 0xbc4a, 0x4574, 0xc6e9, 0x1, 0x0);
        gbc.writeMem(0x6381, { 0x75 });
        gbc.writeMem(0xc6e9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x4d80);
        EXPECT(gbc.pc(), 0x6382);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6e9), 0xe9);
        // 75 0130
        gbc.setState(0x172c, 0x1b37, 0x4360, 0x2564, 0xc18c, 0xda7d, 0x0, 0x1);
        gbc.writeMem(0x172c, { 0x75 });
        gbc.writeMem(0xda7d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x1b37);
        EXPECT(gbc.pc(), 0x172d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda7d), 0x7d);
        // 75 0131
        gbc.setState(0x8e31, 0x1774, 0xd4c0, 0xfcd3, 0xbcba, 0xa29e, 0x0, 0x1);
        gbc.writeMem(0x8e31, { 0x75 });
        gbc.writeMem(0xa29e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x1774);
        EXPECT(gbc.pc(), 0x8e32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e31), 0x75);
        EXPECT(gbc.readMem(0xa29e), 0x9e);
        // 75 0132
        gbc.setState(0x8893, 0x4517, 0xb9b0, 0x8903, 0x13b, 0xdbe5, 0x0, 0x1);
        gbc.writeMem(0x8893, { 0x75 });
        gbc.writeMem(0xdbe5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x4517);
        EXPECT(gbc.pc(), 0x8894);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8893), 0x75);
        EXPECT(gbc.readMem(0xdbe5), 0xe5);
        // 75 0137
        gbc.setState(0xbcac, 0x7364, 0x8370, 0xffb9, 0x831b, 0x8970, 0x1, 0x1);
        gbc.writeMem(0x8970, { 0x0 });
        gbc.writeMem(0xbcac, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x7364);
        EXPECT(gbc.pc(), 0xbcad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8970), 0x70);
        EXPECT(gbc.readMem(0xbcac), 0x75);
        // 75 013E
        gbc.setState(0x756f, 0xb9c7, 0x2c90, 0xd1f0, 0xa4fa, 0xd57d, 0x1, 0x1);
        gbc.writeMem(0x756f, { 0x75 });
        gbc.writeMem(0xd57d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xb9c7);
        EXPECT(gbc.pc(), 0x7570);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd57d), 0x7d);
        // 75 013F
        gbc.setState(0x2a71, 0xf791, 0xde0, 0xa3e6, 0x43f8, 0x9588, 0x1, 0x0);
        gbc.writeMem(0x2a71, { 0x75 });
        gbc.writeMem(0x9588, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xf791);
        EXPECT(gbc.pc(), 0x2a72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9588), 0x88);
        // 75 0141
        gbc.setState(0xbfc5, 0xe1a9, 0x4240, 0x14, 0xc00a, 0x9384, 0x1, 0x1);
        gbc.writeMem(0x9384, { 0x0 });
        gbc.writeMem(0xbfc5, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xe1a9);
        EXPECT(gbc.pc(), 0xbfc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9384), 0x84);
        EXPECT(gbc.readMem(0xbfc5), 0x75);
        // 75 0146
        gbc.setState(0xa3f0, 0xeec9, 0x9e10, 0x76c2, 0xd8f5, 0xf965, 0x1, 0x1);
        gbc.writeMem(0xa3f0, { 0x75 });
        gbc.writeMem(0xf965, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xeec9);
        EXPECT(gbc.pc(), 0xa3f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3f0), 0x75);
        EXPECT(gbc.readMem(0xf965), 0x65);
        // 75 0148
        gbc.setState(0xbe24, 0xf19c, 0x6590, 0xc373, 0x9cde, 0xd92b, 0x0, 0x0);
        gbc.writeMem(0xbe24, { 0x75 });
        gbc.writeMem(0xd92b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xf19c);
        EXPECT(gbc.pc(), 0xbe25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe24), 0x75);
        EXPECT(gbc.readMem(0xd92b), 0x2b);
        // 75 0149
        gbc.setState(0x20d3, 0x5453, 0x79a0, 0xce3a, 0xf07f, 0xb8f0, 0x0, 0x0);
        gbc.writeMem(0x20d3, { 0x75 });
        gbc.writeMem(0xb8f0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x5453);
        EXPECT(gbc.pc(), 0x20d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8f0), 0xf0);
        // 75 014B
        gbc.setState(0x7e5f, 0xa460, 0x4a80, 0xddb4, 0xfa98, 0xc696, 0x0, 0x0);
        gbc.writeMem(0x7e5f, { 0x75 });
        gbc.writeMem(0xc696, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xa460);
        EXPECT(gbc.pc(), 0x7e60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc696), 0x96);
        // 75 0151
        gbc.setState(0x323f, 0x72d8, 0xca50, 0xdc01, 0xa301, 0xec77, 0x0, 0x0);
        gbc.writeMem(0x323f, { 0x75 });
        gbc.writeMem(0xec77, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x72d8);
        EXPECT(gbc.pc(), 0x3240);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec77), 0x77);
        // 75 0152
        gbc.setState(0x1c0e, 0x652c, 0xdce0, 0x5c9e, 0xd268, 0x84e6, 0x0, 0x0);
        gbc.writeMem(0x1c0e, { 0x75 });
        gbc.writeMem(0x84e6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x652c);
        EXPECT(gbc.pc(), 0x1c0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84e6), 0xe6);
        // 75 0157
        gbc.setState(0x3e2e, 0x3e3f, 0xeed0, 0x103c, 0xf343, 0xd969, 0x1, 0x0);
        gbc.writeMem(0x3e2e, { 0x75 });
        gbc.writeMem(0xd969, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x3e3f);
        EXPECT(gbc.pc(), 0x3e2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd969), 0x69);
        // 75 0158
        gbc.setState(0x384d, 0xf84e, 0x570, 0xaaf2, 0xad8b, 0xca16, 0x1, 0x1);
        gbc.writeMem(0x384d, { 0x75 });
        gbc.writeMem(0xca16, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xf84e);
        EXPECT(gbc.pc(), 0x384e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca16), 0x16);
        // 75 015A
        gbc.setState(0xc4fc, 0xa64, 0xc740, 0xa450, 0xeb5b, 0xd919, 0x1, 0x0);
        gbc.writeMem(0xc4fc, { 0x75 });
        gbc.writeMem(0xd919, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xa64);
        EXPECT(gbc.pc(), 0xc4fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4fc), 0x75);
        EXPECT(gbc.readMem(0xd919), 0x19);
        // 75 015B
        gbc.setState(0x9cda, 0xbd83, 0x4830, 0x6c63, 0x8077, 0x8948, 0x1, 0x0);
        gbc.writeMem(0x8948, { 0x0 });
        gbc.writeMem(0x9cda, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xbd83);
        EXPECT(gbc.pc(), 0x9cdb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8948), 0x48);
        EXPECT(gbc.readMem(0x9cda), 0x75);
        // 75 015C
        gbc.setState(0x208f, 0xe267, 0xec30, 0x3a4a, 0x3770, 0x9db8, 0x0, 0x0);
        gbc.writeMem(0x208f, { 0x75 });
        gbc.writeMem(0x9db8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xe267);
        EXPECT(gbc.pc(), 0x2090);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9db8), 0xb8);
        // 75 015D
        gbc.setState(0x330a, 0xecd5, 0x31f0, 0x4fb7, 0x1cb5, 0xe611, 0x1, 0x0);
        gbc.writeMem(0x330a, { 0x75 });
        gbc.writeMem(0xe611, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xecd5);
        EXPECT(gbc.pc(), 0x330b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe611), 0x11);
        // 75 015E
        gbc.setState(0xede, 0x2b3b, 0x7ce0, 0x630f, 0xb18d, 0xbd06, 0x0, 0x0);
        gbc.writeMem(0xede, { 0x75 });
        gbc.writeMem(0xbd06, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x2b3b);
        EXPECT(gbc.pc(), 0xedf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd06), 0x6);
        // 75 0161
        gbc.setState(0xbc58, 0x5cb0, 0xf940, 0xcceb, 0x55ed, 0xb665, 0x0, 0x0);
        gbc.writeMem(0xb665, { 0x0 });
        gbc.writeMem(0xbc58, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x5cb0);
        EXPECT(gbc.pc(), 0xbc59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb665), 0x65);
        EXPECT(gbc.readMem(0xbc58), 0x75);
        // 75 0162
        gbc.setState(0xb3e1, 0xbffb, 0xd190, 0xa28b, 0xbe0a, 0x8324, 0x0, 0x0);
        gbc.writeMem(0x8324, { 0x0 });
        gbc.writeMem(0xb3e1, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xbffb);
        EXPECT(gbc.pc(), 0xb3e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8324), 0x24);
        EXPECT(gbc.readMem(0xb3e1), 0x75);
        // 75 0165
        gbc.setState(0x68c0, 0x8eeb, 0x4990, 0xf3b2, 0xcb51, 0xf71e, 0x0, 0x0);
        gbc.writeMem(0x68c0, { 0x75 });
        gbc.writeMem(0xf71e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x8eeb);
        EXPECT(gbc.pc(), 0x68c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf71e), 0x1e);
        // 75 0166
        gbc.setState(0xb176, 0xa258, 0x56b0, 0x9c4c, 0x873b, 0xfaa1, 0x1, 0x0);
        gbc.writeMem(0xb176, { 0x75 });
        gbc.writeMem(0xfaa1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xa258);
        EXPECT(gbc.pc(), 0xb177);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb176), 0x75);
        EXPECT(gbc.readMem(0xfaa1), 0xa1);
        // 75 0168
        gbc.setState(0x2d17, 0x2104, 0x30d0, 0x9493, 0x5dfa, 0xf7bc, 0x0, 0x1);
        gbc.writeMem(0x2d17, { 0x75 });
        gbc.writeMem(0xf7bc, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x2104);
        EXPECT(gbc.pc(), 0x2d18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf7bc), 0xbc);
        // 75 016B
        gbc.setState(0x2ef0, 0x4ec3, 0xe1f0, 0x17ae, 0x424, 0xa1a6, 0x1, 0x1);
        gbc.writeMem(0x2ef0, { 0x75 });
        gbc.writeMem(0xa1a6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x4ec3);
        EXPECT(gbc.pc(), 0x2ef1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1a6), 0xa6);
        // 75 016C
        gbc.setState(0x241e, 0xc830, 0xce60, 0x2a74, 0x4c79, 0xe289, 0x0, 0x1);
        gbc.writeMem(0x241e, { 0x75 });
        gbc.writeMem(0xe289, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xc830);
        EXPECT(gbc.pc(), 0x241f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe289), 0x89);
        // 75 016E
        gbc.setState(0x1686, 0x15d9, 0xe30, 0x3fb6, 0x4108, 0xbf23, 0x0, 0x1);
        gbc.writeMem(0x1686, { 0x75 });
        gbc.writeMem(0xbf23, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x15d9);
        EXPECT(gbc.pc(), 0x1687);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf23), 0x23);
        // 75 016F
        gbc.setState(0x9d2a, 0x794e, 0x5260, 0xd647, 0xeae8, 0xc03b, 0x0, 0x0);
        gbc.writeMem(0x9d2a, { 0x75 });
        gbc.writeMem(0xc03b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x794e);
        EXPECT(gbc.pc(), 0x9d2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d2a), 0x75);
        EXPECT(gbc.readMem(0xc03b), 0x3b);
        // 75 0170
        gbc.setState(0x7507, 0x6f4e, 0x7c10, 0xfb2c, 0x7fcc, 0xf44b, 0x1, 0x1);
        gbc.writeMem(0x7507, { 0x75 });
        gbc.writeMem(0xf44b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x6f4e);
        EXPECT(gbc.pc(), 0x7508);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf44b), 0x4b);
        // 75 0176
        gbc.setState(0xd177, 0xf81e, 0x82a0, 0x1b82, 0xbaf7, 0x9108, 0x1, 0x1);
        gbc.writeMem(0x9108, { 0x0 });
        gbc.writeMem(0xd177, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xf81e);
        EXPECT(gbc.pc(), 0xd178);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9108), 0x8);
        EXPECT(gbc.readMem(0xd177), 0x75);
        // 75 0177
        gbc.setState(0xd418, 0xcae5, 0x2e70, 0xcd2a, 0x4685, 0xba3b, 0x0, 0x1);
        gbc.writeMem(0xba3b, { 0x0 });
        gbc.writeMem(0xd418, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xcae5);
        EXPECT(gbc.pc(), 0xd419);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba3b), 0x3b);
        EXPECT(gbc.readMem(0xd418), 0x75);
        // 75 0178
        gbc.setState(0x4a5d, 0x225c, 0x1430, 0xcace, 0xbf40, 0xf8e2, 0x0, 0x1);
        gbc.writeMem(0x4a5d, { 0x75 });
        gbc.writeMem(0xf8e2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x225c);
        EXPECT(gbc.pc(), 0x4a5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf8e2), 0xe2);
        // 75 0179
        gbc.setState(0xe327, 0x510e, 0xbb90, 0x9224, 0x1fed, 0xaec5, 0x0, 0x0);
        gbc.writeMem(0xaec5, { 0x0 });
        gbc.writeMem(0xe327, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x510e);
        EXPECT(gbc.pc(), 0xe328);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaec5), 0xc5);
        EXPECT(gbc.readMem(0xe327), 0x75);
        // 75 017B
        gbc.setState(0x97c2, 0x9617, 0x3650, 0xf318, 0x2f18, 0xd664, 0x0, 0x0);
        gbc.writeMem(0x97c2, { 0x75 });
        gbc.writeMem(0xd664, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x9617);
        EXPECT(gbc.pc(), 0x97c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97c2), 0x75);
        EXPECT(gbc.readMem(0xd664), 0x64);
        // 75 017D
        gbc.setState(0x6040, 0xe42c, 0xda40, 0xb20f, 0x50c2, 0x9672, 0x0, 0x0);
        gbc.writeMem(0x6040, { 0x75 });
        gbc.writeMem(0x9672, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xe42c);
        EXPECT(gbc.pc(), 0x6041);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9672), 0x72);
        // 75 017E
        gbc.setState(0xc667, 0xc13c, 0xc5f0, 0xe651, 0xe6ce, 0xf62d, 0x0, 0x0);
        gbc.writeMem(0xc667, { 0x75 });
        gbc.writeMem(0xf62d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xc13c);
        EXPECT(gbc.pc(), 0xc668);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc667), 0x75);
        EXPECT(gbc.readMem(0xf62d), 0x2d);
        // 75 0180
        gbc.setState(0x4bfe, 0x31ca, 0x3c50, 0x889b, 0x73d1, 0xeb06, 0x0, 0x0);
        gbc.writeMem(0x4bfe, { 0x75 });
        gbc.writeMem(0xeb06, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x31ca);
        EXPECT(gbc.pc(), 0x4bff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb06), 0x6);
        // 75 0187
        gbc.setState(0x1632, 0x94c3, 0x9640, 0x461a, 0x79f6, 0xda1c, 0x0, 0x0);
        gbc.writeMem(0x1632, { 0x75 });
        gbc.writeMem(0xda1c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x94c3);
        EXPECT(gbc.pc(), 0x1633);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda1c), 0x1c);
        // 75 0189
        gbc.setState(0xb57, 0xdace, 0x9b0, 0x71ae, 0xf4dc, 0xaa00, 0x1, 0x1);
        gbc.writeMem(0xb57, { 0x75 });
        gbc.writeMem(0xaa00, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xdace);
        EXPECT(gbc.pc(), 0xb58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa00), 0x0);
        // 75 018A
        gbc.setState(0x79d1, 0xb588, 0x170, 0xdd7d, 0xd3ee, 0xee20, 0x1, 0x1);
        gbc.writeMem(0x79d1, { 0x75 });
        gbc.writeMem(0xee20, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xb588);
        EXPECT(gbc.pc(), 0x79d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee20), 0x20);
        // 75 018B
        gbc.setState(0x81c5, 0x97d2, 0xaa00, 0x9125, 0x279f, 0xa98a, 0x0, 0x0);
        gbc.writeMem(0x81c5, { 0x75 });
        gbc.writeMem(0xa98a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x97d2);
        EXPECT(gbc.pc(), 0x81c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81c5), 0x75);
        EXPECT(gbc.readMem(0xa98a), 0x8a);
        // 75 018C
        gbc.setState(0x71fd, 0x9237, 0xc80, 0x9720, 0xdac2, 0xa9e7, 0x1, 0x1);
        gbc.writeMem(0x71fd, { 0x75 });
        gbc.writeMem(0xa9e7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x9237);
        EXPECT(gbc.pc(), 0x71fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9e7), 0xe7);
        // 75 018D
        gbc.setState(0x1bcc, 0x2c2d, 0x5ee0, 0x600c, 0xf305, 0xb3a4, 0x0, 0x0);
        gbc.writeMem(0x1bcc, { 0x75 });
        gbc.writeMem(0xb3a4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x2c2d);
        EXPECT(gbc.pc(), 0x1bcd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3a4), 0xa4);
        // 75 018E
        gbc.setState(0x1a64, 0x9920, 0x9250, 0xd3d9, 0xa6dd, 0xd2a5, 0x0, 0x1);
        gbc.writeMem(0x1a64, { 0x75 });
        gbc.writeMem(0xd2a5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x9920);
        EXPECT(gbc.pc(), 0x1a65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2a5), 0xa5);
        // 75 018F
        gbc.setState(0x9e6, 0x20a7, 0x400, 0xb469, 0x8d19, 0x6200, 0x0, 0x0);
        gbc.writeMem(0x9e6, { 0x75 });
        gbc.writeMem(0x6200, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x20a7);
        EXPECT(gbc.pc(), 0x9e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 75 0190
        gbc.setState(0xafda, 0x139d, 0x4c50, 0x5599, 0x6fd8, 0xeec2, 0x0, 0x0);
        gbc.writeMem(0xafda, { 0x75 });
        gbc.writeMem(0xeec2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x139d);
        EXPECT(gbc.pc(), 0xafdb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafda), 0x75);
        EXPECT(gbc.readMem(0xeec2), 0xc2);
        // 75 0191
        gbc.setState(0xc14d, 0xc7db, 0x7fb0, 0x32b2, 0xd2ca, 0xa023, 0x1, 0x0);
        gbc.writeMem(0xa023, { 0x0 });
        gbc.writeMem(0xc14d, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xc7db);
        EXPECT(gbc.pc(), 0xc14e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa023), 0x23);
        EXPECT(gbc.readMem(0xc14d), 0x75);
        // 75 0192
        gbc.setState(0x4df7, 0x6ad6, 0x2230, 0x2333, 0x3a99, 0x92af, 0x1, 0x0);
        gbc.writeMem(0x4df7, { 0x75 });
        gbc.writeMem(0x92af, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x6ad6);
        EXPECT(gbc.pc(), 0x4df8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92af), 0xaf);
        // 75 0195
        gbc.setState(0x2246, 0x9464, 0x1ff0, 0x4644, 0x1e3b, 0xdf4b, 0x0, 0x1);
        gbc.writeMem(0x2246, { 0x75 });
        gbc.writeMem(0xdf4b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x9464);
        EXPECT(gbc.pc(), 0x2247);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf4b), 0x4b);
        // 75 0196
        gbc.setState(0x2fde, 0x6bc6, 0x4340, 0xf557, 0x189f, 0xe038, 0x0, 0x1);
        gbc.writeMem(0x2fde, { 0x75 });
        gbc.writeMem(0xe038, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x6bc6);
        EXPECT(gbc.pc(), 0x2fdf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe038), 0x38);
        // 75 019B
        gbc.setState(0x8a39, 0xd715, 0x75a0, 0x306e, 0x9c6d, 0xaa29, 0x0, 0x1);
        gbc.writeMem(0x8a39, { 0x75 });
        gbc.writeMem(0xaa29, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xd715);
        EXPECT(gbc.pc(), 0x8a3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a39), 0x75);
        EXPECT(gbc.readMem(0xaa29), 0x29);
        // 75 019C
        gbc.setState(0x7489, 0xa7e6, 0x2d30, 0x6b26, 0x725c, 0x917e, 0x1, 0x1);
        gbc.writeMem(0x7489, { 0x75 });
        gbc.writeMem(0x917e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xa7e6);
        EXPECT(gbc.pc(), 0x748a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x917e), 0x7e);
        // 75 019F
        gbc.setState(0x3ac1, 0xe44, 0x12f0, 0x51c6, 0x29de, 0xb113, 0x1, 0x0);
        gbc.writeMem(0x3ac1, { 0x75 });
        gbc.writeMem(0xb113, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xe44);
        EXPECT(gbc.pc(), 0x3ac2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb113), 0x13);
        // 75 01A0
        gbc.setState(0x829a, 0xf16, 0x30b0, 0x4dc3, 0x7761, 0xdbeb, 0x0, 0x1);
        gbc.writeMem(0x829a, { 0x75 });
        gbc.writeMem(0xdbeb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xf16);
        EXPECT(gbc.pc(), 0x829b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x829a), 0x75);
        EXPECT(gbc.readMem(0xdbeb), 0xeb);
        // 75 01A1
        gbc.setState(0xde1d, 0x5b22, 0x3c00, 0xb726, 0xbfc4, 0xbdf3, 0x0, 0x0);
        gbc.writeMem(0xbdf3, { 0x0 });
        gbc.writeMem(0xde1d, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x5b22);
        EXPECT(gbc.pc(), 0xde1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdf3), 0xf3);
        EXPECT(gbc.readMem(0xde1d), 0x75);
        // 75 01A3
        gbc.setState(0x7ce, 0xcb87, 0x370, 0xbcb8, 0x302a, 0xaf63, 0x0, 0x1);
        gbc.writeMem(0x7ce, { 0x75 });
        gbc.writeMem(0xaf63, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xcb87);
        EXPECT(gbc.pc(), 0x7cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf63), 0x63);
        // 75 01A4
        gbc.setState(0xecfb, 0x6455, 0x3000, 0xef96, 0x13d2, 0xb182, 0x1, 0x1);
        gbc.writeMem(0xb182, { 0x0 });
        gbc.writeMem(0xecfb, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x6455);
        EXPECT(gbc.pc(), 0xecfc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb182), 0x82);
        EXPECT(gbc.readMem(0xecfb), 0x75);
        // 75 01A5
        gbc.setState(0x8ed4, 0xd8c5, 0x8340, 0xde3c, 0xb3b7, 0xd3c5, 0x1, 0x0);
        gbc.writeMem(0x8ed4, { 0x75 });
        gbc.writeMem(0xd3c5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xd8c5);
        EXPECT(gbc.pc(), 0x8ed5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ed4), 0x75);
        EXPECT(gbc.readMem(0xd3c5), 0xc5);
        // 75 01AB
        gbc.setState(0x848f, 0xef23, 0x37d0, 0xefa6, 0xb8cc, 0x976f, 0x1, 0x0);
        gbc.writeMem(0x848f, { 0x75 });
        gbc.writeMem(0x976f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xef23);
        EXPECT(gbc.pc(), 0x8490);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x848f), 0x75);
        EXPECT(gbc.readMem(0x976f), 0x6f);
        // 75 01AC
        gbc.setState(0x802e, 0x154, 0x4540, 0x6edf, 0xc529, 0x8dde, 0x0, 0x0);
        gbc.writeMem(0x802e, { 0x75 });
        gbc.writeMem(0x8dde, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x154);
        EXPECT(gbc.pc(), 0x802f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x802e), 0x75);
        EXPECT(gbc.readMem(0x8dde), 0xde);
        // 75 01AD
        gbc.setState(0x8486, 0x5a3b, 0xdf50, 0xaee1, 0xbc75, 0xc191, 0x0, 0x0);
        gbc.writeMem(0x8486, { 0x75 });
        gbc.writeMem(0xc191, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x5a3b);
        EXPECT(gbc.pc(), 0x8487);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8486), 0x75);
        EXPECT(gbc.readMem(0xc191), 0x91);
        // 75 01B0
        gbc.setState(0x39d, 0x2288, 0x68a0, 0xc715, 0x733f, 0xbc35, 0x0, 0x0);
        gbc.writeMem(0x39d, { 0x75 });
        gbc.writeMem(0xbc35, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x2288);
        EXPECT(gbc.pc(), 0x39e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc35), 0x35);
        // 75 01B2
        gbc.setState(0x53ed, 0xa2cc, 0xd260, 0x6adc, 0xe668, 0xa27b, 0x1, 0x0);
        gbc.writeMem(0x53ed, { 0x75 });
        gbc.writeMem(0xa27b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xa2cc);
        EXPECT(gbc.pc(), 0x53ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa27b), 0x7b);
        // 75 01B3
        gbc.setState(0x2072, 0x6619, 0x7950, 0x2d38, 0x7eb4, 0xfb03, 0x0, 0x1);
        gbc.writeMem(0x2072, { 0x75 });
        gbc.writeMem(0xfb03, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x6619);
        EXPECT(gbc.pc(), 0x2073);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfb03), 0x3);
        // 75 01B6
        gbc.setState(0x2bd3, 0x417e, 0x4340, 0xcddd, 0xfe8, 0xa0ed, 0x1, 0x0);
        gbc.writeMem(0x2bd3, { 0x75 });
        gbc.writeMem(0xa0ed, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x417e);
        EXPECT(gbc.pc(), 0x2bd4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0ed), 0xed);
        // 75 01B9
        gbc.setState(0x9ee4, 0x70ca, 0xcbf0, 0xd430, 0xd273, 0xdf2b, 0x1, 0x0);
        gbc.writeMem(0x9ee4, { 0x75 });
        gbc.writeMem(0xdf2b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x70ca);
        EXPECT(gbc.pc(), 0x9ee5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ee4), 0x75);
        EXPECT(gbc.readMem(0xdf2b), 0x2b);
        // 75 01BB
        gbc.setState(0xcca9, 0x2b20, 0x1710, 0x1502, 0xe6c5, 0xd556, 0x0, 0x0);
        gbc.writeMem(0xcca9, { 0x75 });
        gbc.writeMem(0xd556, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x2b20);
        EXPECT(gbc.pc(), 0xccaa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcca9), 0x75);
        EXPECT(gbc.readMem(0xd556), 0x56);
        // 75 01BC
        gbc.setState(0x7380, 0x18a8, 0x3d0, 0xfe9a, 0x2f7, 0xcfcd, 0x0, 0x0);
        gbc.writeMem(0x7380, { 0x75 });
        gbc.writeMem(0xcfcd, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x18a8);
        EXPECT(gbc.pc(), 0x7381);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfcd), 0xcd);
        // 75 01BD
        gbc.setState(0x7b97, 0x9a80, 0x4380, 0xdd15, 0xea67, 0xf8cb, 0x1, 0x1);
        gbc.writeMem(0x7b97, { 0x75 });
        gbc.writeMem(0xf8cb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x9a80);
        EXPECT(gbc.pc(), 0x7b98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf8cb), 0xcb);
        // 75 01BE
        gbc.setState(0xeb16, 0x8d94, 0x5660, 0xd4a0, 0x2506, 0x80f6, 0x1, 0x1);
        gbc.writeMem(0x80f6, { 0x0 });
        gbc.writeMem(0xeb16, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x8d94);
        EXPECT(gbc.pc(), 0xeb17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80f6), 0xf6);
        EXPECT(gbc.readMem(0xeb16), 0x75);
        // 75 01BF
        gbc.setState(0xc7e9, 0x25a, 0xee40, 0x68f8, 0x4d68, 0xeb9d, 0x1, 0x1);
        gbc.writeMem(0xc7e9, { 0x75 });
        gbc.writeMem(0xeb9d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x25a);
        EXPECT(gbc.pc(), 0xc7ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7e9), 0x75);
        EXPECT(gbc.readMem(0xeb9d), 0x9d);
        // 75 01C0
        gbc.setState(0xb492, 0x1c38, 0x260, 0x129f, 0x195e, 0x8672, 0x1, 0x0);
        gbc.writeMem(0x8672, { 0x0 });
        gbc.writeMem(0xb492, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x1c38);
        EXPECT(gbc.pc(), 0xb493);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8672), 0x72);
        EXPECT(gbc.readMem(0xb492), 0x75);
        // 75 01C4
        gbc.setState(0x6c70, 0xd692, 0x8d40, 0x6ee, 0x7479, 0xd539, 0x1, 0x1);
        gbc.writeMem(0x6c70, { 0x75 });
        gbc.writeMem(0xd539, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xd692);
        EXPECT(gbc.pc(), 0x6c71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd539), 0x39);
        // 75 01C5
        gbc.setState(0x2d75, 0x3e05, 0x6980, 0x4080, 0x7662, 0xd0af, 0x1, 0x1);
        gbc.writeMem(0x2d75, { 0x75 });
        gbc.writeMem(0xd0af, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x3e05);
        EXPECT(gbc.pc(), 0x2d76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0af), 0xaf);
        // 75 01C6
        gbc.setState(0xe494, 0x953a, 0x37a0, 0x98c5, 0xf64a, 0xc6fc, 0x1, 0x0);
        gbc.writeMem(0xc6fc, { 0x0 });
        gbc.writeMem(0xe494, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x953a);
        EXPECT(gbc.pc(), 0xe495);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6fc), 0xfc);
        EXPECT(gbc.readMem(0xe494), 0x75);
        // 75 01C8
        gbc.setState(0xcd8f, 0x5a29, 0xf310, 0x7781, 0xf560, 0x9b71, 0x1, 0x1);
        gbc.writeMem(0x9b71, { 0x0 });
        gbc.writeMem(0xcd8f, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x5a29);
        EXPECT(gbc.pc(), 0xcd90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b71), 0x71);
        EXPECT(gbc.readMem(0xcd8f), 0x75);
        // 75 01CA
        gbc.setState(0xc2a3, 0xae43, 0x5270, 0x83, 0x6cc8, 0xfd82, 0x0, 0x0);
        gbc.writeMem(0xc2a3, { 0x75 });
        gbc.writeMem(0xfd82, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xae43);
        EXPECT(gbc.pc(), 0xc2a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2a3), 0x75);
        EXPECT(gbc.readMem(0xfd82), 0x82);
        // 75 01CB
        gbc.setState(0x609d, 0x262e, 0x130, 0x64eb, 0xe966, 0x9872, 0x1, 0x1);
        gbc.writeMem(0x609d, { 0x75 });
        gbc.writeMem(0x9872, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x262e);
        EXPECT(gbc.pc(), 0x609e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9872), 0x72);
        // 75 01CF
        gbc.setState(0x60db, 0x719a, 0x1620, 0x7dca, 0xb69b, 0xef01, 0x0, 0x0);
        gbc.writeMem(0x60db, { 0x75 });
        gbc.writeMem(0xef01, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x719a);
        EXPECT(gbc.pc(), 0x60dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef01), 0x1);
        // 75 01D0
        gbc.setState(0x4add, 0xab2e, 0xf5e0, 0x9121, 0x8a1e, 0xb5cc, 0x0, 0x0);
        gbc.writeMem(0x4add, { 0x75 });
        gbc.writeMem(0xb5cc, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xab2e);
        EXPECT(gbc.pc(), 0x4ade);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5cc), 0xcc);
        // 75 01D1
        gbc.setState(0xc0f9, 0x7ac5, 0x8870, 0x491a, 0x65e3, 0xc651, 0x1, 0x0);
        gbc.writeMem(0xc0f9, { 0x75 });
        gbc.writeMem(0xc651, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x7ac5);
        EXPECT(gbc.pc(), 0xc0fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0f9), 0x75);
        EXPECT(gbc.readMem(0xc651), 0x51);
        // 75 01D2
        gbc.setState(0xbaaa, 0xc859, 0x6d30, 0xd238, 0x46fb, 0x90da, 0x0, 0x1);
        gbc.writeMem(0x90da, { 0x0 });
        gbc.writeMem(0xbaaa, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xc859);
        EXPECT(gbc.pc(), 0xbaab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90da), 0xda);
        EXPECT(gbc.readMem(0xbaaa), 0x75);
        // 75 01D3
        gbc.setState(0x4804, 0x1730, 0x3bb0, 0xf416, 0xdce6, 0xe8c6, 0x0, 0x0);
        gbc.writeMem(0x4804, { 0x75 });
        gbc.writeMem(0xe8c6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x1730);
        EXPECT(gbc.pc(), 0x4805);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8c6), 0xc6);
        // 75 01D4
        gbc.setState(0xeee8, 0xbaeb, 0xb8a0, 0x2816, 0xe34b, 0xc74a, 0x1, 0x1);
        gbc.writeMem(0xc74a, { 0x0 });
        gbc.writeMem(0xeee8, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xbaeb);
        EXPECT(gbc.pc(), 0xeee9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc74a), 0x4a);
        EXPECT(gbc.readMem(0xeee8), 0x75);
        // 75 01DA
        gbc.setState(0x25b0, 0x9717, 0x80f0, 0x1987, 0x33fe, 0xbb03, 0x0, 0x0);
        gbc.writeMem(0x25b0, { 0x75 });
        gbc.writeMem(0xbb03, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x9717);
        EXPECT(gbc.pc(), 0x25b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb03), 0x3);
        // 75 01DC
        gbc.setState(0x97af, 0x8d11, 0xcaf0, 0xa978, 0x1b30, 0xb218, 0x0, 0x0);
        gbc.writeMem(0x97af, { 0x75 });
        gbc.writeMem(0xb218, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x8d11);
        EXPECT(gbc.pc(), 0x97b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97af), 0x75);
        EXPECT(gbc.readMem(0xb218), 0x18);
        // 75 01DD
        gbc.setState(0x3fb5, 0x39b2, 0xfbf0, 0x56fc, 0x5eff, 0xab83, 0x0, 0x0);
        gbc.writeMem(0x3fb5, { 0x75 });
        gbc.writeMem(0xab83, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x39b2);
        EXPECT(gbc.pc(), 0x3fb6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab83), 0x83);
        // 75 01DF
        gbc.setState(0xa3e6, 0x60fb, 0x6f50, 0x10c3, 0x98e6, 0x9923, 0x0, 0x1);
        gbc.writeMem(0x9923, { 0x0 });
        gbc.writeMem(0xa3e6, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x60fb);
        EXPECT(gbc.pc(), 0xa3e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9923), 0x23);
        EXPECT(gbc.readMem(0xa3e6), 0x75);
        // 75 01E1
        gbc.setState(0x6fd6, 0x5653, 0xc200, 0x1fc9, 0x3474, 0x9df3, 0x0, 0x1);
        gbc.writeMem(0x6fd6, { 0x75 });
        gbc.writeMem(0x9df3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x5653);
        EXPECT(gbc.pc(), 0x6fd7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9df3), 0xf3);
        // 75 01E4
        gbc.setState(0xc19a, 0x39c0, 0x72e0, 0x7f73, 0xe268, 0xc0d7, 0x0, 0x1);
        gbc.writeMem(0xc0d7, { 0x0 });
        gbc.writeMem(0xc19a, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x39c0);
        EXPECT(gbc.pc(), 0xc19b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0d7), 0xd7);
        EXPECT(gbc.readMem(0xc19a), 0x75);
        // 75 01E8
        gbc.setState(0xc4f, 0x62c7, 0xc00, 0xac1e, 0xd164, 0xf28a, 0x1, 0x1);
        gbc.writeMem(0xc4f, { 0x75 });
        gbc.writeMem(0xf28a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x62c7);
        EXPECT(gbc.pc(), 0xc50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf28a), 0x8a);
        // 75 01E9
        gbc.setState(0xa777, 0xab11, 0xcd0, 0xf54, 0x6c9, 0xe895, 0x0, 0x1);
        gbc.writeMem(0xa777, { 0x75 });
        gbc.writeMem(0xe895, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xab11);
        EXPECT(gbc.pc(), 0xa778);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa777), 0x75);
        EXPECT(gbc.readMem(0xe895), 0x95);
        // 75 01EA
        gbc.setState(0x60ec, 0xec77, 0x4750, 0x4ec4, 0x943a, 0x9a5c, 0x0, 0x1);
        gbc.writeMem(0x60ec, { 0x75 });
        gbc.writeMem(0x9a5c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xec77);
        EXPECT(gbc.pc(), 0x60ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a5c), 0x5c);
        // 75 01EC
        gbc.setState(0xa349, 0x5b2a, 0xdc10, 0x2d11, 0x95b9, 0xcaf0, 0x0, 0x0);
        gbc.writeMem(0xa349, { 0x75 });
        gbc.writeMem(0xcaf0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x5b2a);
        EXPECT(gbc.pc(), 0xa34a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa349), 0x75);
        EXPECT(gbc.readMem(0xcaf0), 0xf0);
        // 75 01F1
        gbc.setState(0x59ea, 0xde7f, 0xf4c0, 0x6771, 0x1cf0, 0xd6c6, 0x1, 0x1);
        gbc.writeMem(0x59ea, { 0x75 });
        gbc.writeMem(0xd6c6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xde7f);
        EXPECT(gbc.pc(), 0x59eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6c6), 0xc6);
        // 75 01F3
        gbc.setState(0x3b4c, 0xc0cb, 0x5140, 0x6127, 0x3346, 0x8c76, 0x1, 0x0);
        gbc.writeMem(0x3b4c, { 0x75 });
        gbc.writeMem(0x8c76, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xc0cb);
        EXPECT(gbc.pc(), 0x3b4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c76), 0x76);
        // 75 01F4
        gbc.setState(0xcf12, 0x7402, 0x9c20, 0x2550, 0x1915, 0xb386, 0x1, 0x0);
        gbc.writeMem(0xb386, { 0x0 });
        gbc.writeMem(0xcf12, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x7402);
        EXPECT(gbc.pc(), 0xcf13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb386), 0x86);
        EXPECT(gbc.readMem(0xcf12), 0x75);
        // 75 01F9
        gbc.setState(0x8498, 0x254d, 0xea20, 0x2872, 0x8e6f, 0x8759, 0x1, 0x0);
        gbc.writeMem(0x8498, { 0x75 });
        gbc.writeMem(0x8759, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x254d);
        EXPECT(gbc.pc(), 0x8499);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8498), 0x75);
        EXPECT(gbc.readMem(0x8759), 0x59);
        // 75 01FC
        gbc.setState(0xeac5, 0x81ce, 0xf450, 0x739, 0xc1a9, 0xd2db, 0x0, 0x1);
        gbc.writeMem(0xd2db, { 0x0 });
        gbc.writeMem(0xeac5, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x81ce);
        EXPECT(gbc.pc(), 0xeac6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2db), 0xdb);
        EXPECT(gbc.readMem(0xeac5), 0x75);
        // 75 01FD
        gbc.setState(0x5981, 0xb97d, 0x6600, 0xc00e, 0xc903, 0xedcd, 0x1, 0x1);
        gbc.writeMem(0x5981, { 0x75 });
        gbc.writeMem(0xedcd, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xb97d);
        EXPECT(gbc.pc(), 0x5982);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedcd), 0xcd);
        // 75 01FE
        gbc.setState(0xb380, 0x93bd, 0x91e0, 0x5999, 0x4655, 0xdfdb, 0x0, 0x0);
        gbc.writeMem(0xb380, { 0x75 });
        gbc.writeMem(0xdfdb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x93bd);
        EXPECT(gbc.pc(), 0xb381);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb380), 0x75);
        EXPECT(gbc.readMem(0xdfdb), 0xdb);
        // 75 0200
        gbc.setState(0xc67a, 0x375, 0x3fd0, 0x35d5, 0x1c68, 0xcab3, 0x0, 0x0);
        gbc.writeMem(0xc67a, { 0x75 });
        gbc.writeMem(0xcab3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x375);
        EXPECT(gbc.pc(), 0xc67b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc67a), 0x75);
        EXPECT(gbc.readMem(0xcab3), 0xb3);
        // 75 0203
        gbc.setState(0x9cb, 0x7718, 0x89b0, 0x784f, 0xe887, 0xf92d, 0x0, 0x1);
        gbc.writeMem(0x9cb, { 0x75 });
        gbc.writeMem(0xf92d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x7718);
        EXPECT(gbc.pc(), 0x9cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf92d), 0x2d);
        // 75 0204
        gbc.setState(0x4451, 0x82cf, 0x1b00, 0x9c75, 0x2526, 0x8569, 0x0, 0x1);
        gbc.writeMem(0x4451, { 0x75 });
        gbc.writeMem(0x8569, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x82cf);
        EXPECT(gbc.pc(), 0x4452);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8569), 0x69);
        // 75 0205
        gbc.setState(0x9534, 0x8c1d, 0x9990, 0xd60b, 0x6d50, 0xd4f7, 0x1, 0x1);
        gbc.writeMem(0x9534, { 0x75 });
        gbc.writeMem(0xd4f7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x8c1d);
        EXPECT(gbc.pc(), 0x9535);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9534), 0x75);
        EXPECT(gbc.readMem(0xd4f7), 0xf7);
        // 75 0207
        gbc.setState(0xd16d, 0x4120, 0xea40, 0xc8ea, 0xe4ae, 0xfdea, 0x0, 0x1);
        gbc.writeMem(0xd16d, { 0x75 });
        gbc.writeMem(0xfdea, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x4120);
        EXPECT(gbc.pc(), 0xd16e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd16d), 0x75);
        EXPECT(gbc.readMem(0xfdea), 0xea);
        // 75 020C
        gbc.setState(0x9677, 0x9d1c, 0xe490, 0xe7ed, 0x85a4, 0x8b6b, 0x1, 0x1);
        gbc.writeMem(0x8b6b, { 0x0 });
        gbc.writeMem(0x9677, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x9d1c);
        EXPECT(gbc.pc(), 0x9678);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b6b), 0x6b);
        EXPECT(gbc.readMem(0x9677), 0x75);
        // 75 020D
        gbc.setState(0x8d6f, 0xe882, 0x4600, 0x9aba, 0xa956, 0x86ff, 0x1, 0x1);
        gbc.writeMem(0x86ff, { 0x0 });
        gbc.writeMem(0x8d6f, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xe882);
        EXPECT(gbc.pc(), 0x8d70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86ff), 0xff);
        EXPECT(gbc.readMem(0x8d6f), 0x75);
        // 75 020E
        gbc.setState(0x430f, 0x8f99, 0xe0a0, 0x45f5, 0x10d3, 0xd68e, 0x1, 0x0);
        gbc.writeMem(0x430f, { 0x75 });
        gbc.writeMem(0xd68e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x8f99);
        EXPECT(gbc.pc(), 0x4310);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd68e), 0x8e);
        // 75 020F
        gbc.setState(0x393f, 0x33a3, 0x1770, 0xf156, 0xcafd, 0x9c93, 0x1, 0x1);
        gbc.writeMem(0x393f, { 0x75 });
        gbc.writeMem(0x9c93, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x33a3);
        EXPECT(gbc.pc(), 0x3940);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c93), 0x93);
        // 75 0211
        gbc.setState(0xaa68, 0x669c, 0x3880, 0x107b, 0xa0de, 0xa978, 0x0, 0x1);
        gbc.writeMem(0xa978, { 0x0 });
        gbc.writeMem(0xaa68, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x669c);
        EXPECT(gbc.pc(), 0xaa69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa978), 0x78);
        EXPECT(gbc.readMem(0xaa68), 0x75);
        // 75 0212
        gbc.setState(0xa4d4, 0x2d47, 0xfd30, 0x3594, 0x1e33, 0xb344, 0x1, 0x1);
        gbc.writeMem(0xa4d4, { 0x75 });
        gbc.writeMem(0xb344, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x2d47);
        EXPECT(gbc.pc(), 0xa4d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4d4), 0x75);
        EXPECT(gbc.readMem(0xb344), 0x44);
        // 75 0214
        gbc.setState(0xe725, 0x1bfe, 0xbe90, 0xc4d9, 0x9ccb, 0x8f91, 0x1, 0x0);
        gbc.writeMem(0x8f91, { 0x0 });
        gbc.writeMem(0xe725, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x1bfe);
        EXPECT(gbc.pc(), 0xe726);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f91), 0x91);
        EXPECT(gbc.readMem(0xe725), 0x75);
        // 75 0217
        gbc.setState(0x62c9, 0xa75a, 0xf770, 0xb25, 0x9d17, 0xb5c1, 0x1, 0x0);
        gbc.writeMem(0x62c9, { 0x75 });
        gbc.writeMem(0xb5c1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xa75a);
        EXPECT(gbc.pc(), 0x62ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5c1), 0xc1);
        // 75 021C
        gbc.setState(0x7c8d, 0xc349, 0x7050, 0xb500, 0x4cec, 0xacd4, 0x0, 0x0);
        gbc.writeMem(0x7c8d, { 0x75 });
        gbc.writeMem(0xacd4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xc349);
        EXPECT(gbc.pc(), 0x7c8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacd4), 0xd4);
        // 75 021D
        gbc.setState(0x8c52, 0xe7df, 0xac00, 0x1e87, 0x1b52, 0x9fff, 0x1, 0x1);
        gbc.writeMem(0x8c52, { 0x75 });
        gbc.writeMem(0x9fff, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xe7df);
        EXPECT(gbc.pc(), 0x8c53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c52), 0x75);
        EXPECT(gbc.readMem(0x9fff), 0xff);
        // 75 0220
        gbc.setState(0x1084, 0x7e75, 0x3930, 0x213e, 0xdc92, 0xf3a4, 0x1, 0x0);
        gbc.writeMem(0x1084, { 0x75 });
        gbc.writeMem(0xf3a4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x7e75);
        EXPECT(gbc.pc(), 0x1085);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf3a4), 0xa4);
        // 75 0223
        gbc.setState(0x9dd4, 0x5bec, 0x3bf0, 0xa09d, 0x61cb, 0xe53b, 0x1, 0x0);
        gbc.writeMem(0x9dd4, { 0x75 });
        gbc.writeMem(0xe53b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x5bec);
        EXPECT(gbc.pc(), 0x9dd5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9dd4), 0x75);
        EXPECT(gbc.readMem(0xe53b), 0x3b);
        // 75 0225
        gbc.setState(0x61e1, 0x301, 0xf640, 0xf8e4, 0x261d, 0xcaad, 0x1, 0x1);
        gbc.writeMem(0x61e1, { 0x75 });
        gbc.writeMem(0xcaad, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x301);
        EXPECT(gbc.pc(), 0x61e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcaad), 0xad);
        // 75 0226
        gbc.setState(0x19a1, 0xe50, 0x34c0, 0xfb5d, 0x161e, 0xe983, 0x1, 0x1);
        gbc.writeMem(0x19a1, { 0x75 });
        gbc.writeMem(0xe983, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xe50);
        EXPECT(gbc.pc(), 0x19a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe983), 0x83);
        // 75 022A
        gbc.setState(0x2aff, 0x40ad, 0xcaf0, 0x3358, 0x4854, 0xd83c, 0x1, 0x1);
        gbc.writeMem(0x2aff, { 0x75 });
        gbc.writeMem(0xd83c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x40ad);
        EXPECT(gbc.pc(), 0x2b00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd83c), 0x3c);
        // 75 022B
        gbc.setState(0xc319, 0x706d, 0x62b0, 0x7dfd, 0x8344, 0xae3c, 0x1, 0x0);
        gbc.writeMem(0xae3c, { 0x0 });
        gbc.writeMem(0xc319, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x706d);
        EXPECT(gbc.pc(), 0xc31a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae3c), 0x3c);
        EXPECT(gbc.readMem(0xc319), 0x75);
        // 75 022C
        gbc.setState(0xb9e8, 0xa6a7, 0x48e0, 0x78a5, 0x2ec9, 0xc6bb, 0x1, 0x0);
        gbc.writeMem(0xb9e8, { 0x75 });
        gbc.writeMem(0xc6bb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xa6a7);
        EXPECT(gbc.pc(), 0xb9e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9e8), 0x75);
        EXPECT(gbc.readMem(0xc6bb), 0xbb);
        // 75 022E
        gbc.setState(0x83c5, 0x7572, 0x7070, 0x2ee0, 0x2090, 0xc85e, 0x0, 0x0);
        gbc.writeMem(0x83c5, { 0x75 });
        gbc.writeMem(0xc85e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x7572);
        EXPECT(gbc.pc(), 0x83c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83c5), 0x75);
        EXPECT(gbc.readMem(0xc85e), 0x5e);
        // 75 022F
        gbc.setState(0xa3bb, 0x168e, 0x12c0, 0xcd46, 0x45da, 0xefe1, 0x1, 0x0);
        gbc.writeMem(0xa3bb, { 0x75 });
        gbc.writeMem(0xefe1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x168e);
        EXPECT(gbc.pc(), 0xa3bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3bb), 0x75);
        EXPECT(gbc.readMem(0xefe1), 0xe1);
        // 75 0235
        gbc.setState(0xc8f8, 0x35b, 0x22d0, 0x4e05, 0xb67f, 0xba72, 0x0, 0x1);
        gbc.writeMem(0xba72, { 0x0 });
        gbc.writeMem(0xc8f8, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x35b);
        EXPECT(gbc.pc(), 0xc8f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba72), 0x72);
        EXPECT(gbc.readMem(0xc8f8), 0x75);
        // 75 0237
        gbc.setState(0xb0b0, 0x5610, 0x2fb0, 0x71b8, 0x6383, 0xd7c7, 0x1, 0x1);
        gbc.writeMem(0xb0b0, { 0x75 });
        gbc.writeMem(0xd7c7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x5610);
        EXPECT(gbc.pc(), 0xb0b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0b0), 0x75);
        EXPECT(gbc.readMem(0xd7c7), 0xc7);
        // 75 023A
        gbc.setState(0xa4b6, 0x6ece, 0x2a20, 0x212a, 0xc50a, 0x949e, 0x0, 0x0);
        gbc.writeMem(0x949e, { 0x0 });
        gbc.writeMem(0xa4b6, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x6ece);
        EXPECT(gbc.pc(), 0xa4b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x949e), 0x9e);
        EXPECT(gbc.readMem(0xa4b6), 0x75);
        // 75 023B
        gbc.setState(0x3b7c, 0x3bf9, 0x70f0, 0x5b50, 0x25e6, 0xc204, 0x0, 0x1);
        gbc.writeMem(0x3b7c, { 0x75 });
        gbc.writeMem(0xc204, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x3bf9);
        EXPECT(gbc.pc(), 0x3b7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc204), 0x4);
        // 75 023D
        gbc.setState(0x7578, 0xeb93, 0xa200, 0x3792, 0xeb72, 0x9025, 0x0, 0x0);
        gbc.writeMem(0x7578, { 0x75 });
        gbc.writeMem(0x9025, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xeb93);
        EXPECT(gbc.pc(), 0x7579);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9025), 0x25);
        // 75 023E
        gbc.setState(0x3156, 0x123c, 0x7b30, 0x5606, 0x7e17, 0xc4c2, 0x1, 0x0);
        gbc.writeMem(0x3156, { 0x75 });
        gbc.writeMem(0xc4c2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x123c);
        EXPECT(gbc.pc(), 0x3157);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4c2), 0xc2);
        // 75 023F
        gbc.setState(0xddc2, 0xfed4, 0xfbb0, 0xe691, 0x3f2b, 0xcddd, 0x0, 0x1);
        gbc.writeMem(0xcddd, { 0x0 });
        gbc.writeMem(0xddc2, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xfed4);
        EXPECT(gbc.pc(), 0xddc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcddd), 0xdd);
        EXPECT(gbc.readMem(0xddc2), 0x75);
        // 75 0241
        gbc.setState(0x88f, 0x1631, 0x3390, 0x6743, 0x54d3, 0x84a7, 0x0, 0x0);
        gbc.writeMem(0x88f, { 0x75 });
        gbc.writeMem(0x84a7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x1631);
        EXPECT(gbc.pc(), 0x890);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84a7), 0xa7);
        // 75 0242
        gbc.setState(0xc972, 0x7126, 0x1540, 0x5f31, 0xad57, 0xc64e, 0x1, 0x1);
        gbc.writeMem(0xc64e, { 0x0 });
        gbc.writeMem(0xc972, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x7126);
        EXPECT(gbc.pc(), 0xc973);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc64e), 0x4e);
        EXPECT(gbc.readMem(0xc972), 0x75);
        // 75 0243
        gbc.setState(0x9b58, 0x79fa, 0x8070, 0x8b5d, 0x83c6, 0xed9e, 0x1, 0x0);
        gbc.writeMem(0x9b58, { 0x75 });
        gbc.writeMem(0xed9e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x79fa);
        EXPECT(gbc.pc(), 0x9b59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b58), 0x75);
        EXPECT(gbc.readMem(0xed9e), 0x9e);
        // 75 0246
        gbc.setState(0xa59f, 0xd798, 0xa4e0, 0x6c0e, 0x105f, 0xd930, 0x1, 0x1);
        gbc.writeMem(0xa59f, { 0x75 });
        gbc.writeMem(0xd930, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xd798);
        EXPECT(gbc.pc(), 0xa5a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa59f), 0x75);
        EXPECT(gbc.readMem(0xd930), 0x30);
        // 75 0249
        gbc.setState(0xcaa, 0xacf5, 0xc700, 0xae6c, 0x43f1, 0x87a5, 0x0, 0x1);
        gbc.writeMem(0xcaa, { 0x75 });
        gbc.writeMem(0x87a5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xacf5);
        EXPECT(gbc.pc(), 0xcab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87a5), 0xa5);
        // 75 024B
        gbc.setState(0xc57d, 0x9b5e, 0xd070, 0x8972, 0xbd1e, 0xe630, 0x0, 0x1);
        gbc.writeMem(0xc57d, { 0x75 });
        gbc.writeMem(0xe630, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x9b5e);
        EXPECT(gbc.pc(), 0xc57e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc57d), 0x75);
        EXPECT(gbc.readMem(0xe630), 0x30);
        // 75 024C
        gbc.setState(0x48cb, 0xac38, 0x6e40, 0x4b36, 0xac09, 0x8379, 0x0, 0x0);
        gbc.writeMem(0x48cb, { 0x75 });
        gbc.writeMem(0x8379, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xac38);
        EXPECT(gbc.pc(), 0x48cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8379), 0x79);
        // 75 024D
        gbc.setState(0x7cc0, 0x9eda, 0x73e0, 0xddb, 0xe19d, 0x8c12, 0x0, 0x0);
        gbc.writeMem(0x7cc0, { 0x75 });
        gbc.writeMem(0x8c12, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x9eda);
        EXPECT(gbc.pc(), 0x7cc1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c12), 0x12);
        // 75 024E
        gbc.setState(0xc3f8, 0x4150, 0x9570, 0x1449, 0x36e4, 0xf819, 0x0, 0x1);
        gbc.writeMem(0xc3f8, { 0x75 });
        gbc.writeMem(0xf819, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x4150);
        EXPECT(gbc.pc(), 0xc3f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3f8), 0x75);
        EXPECT(gbc.readMem(0xf819), 0x19);
        // 75 024F
        gbc.setState(0xe868, 0x578e, 0x8c50, 0x21d5, 0xbe8d, 0xca6e, 0x1, 0x1);
        gbc.writeMem(0xca6e, { 0x0 });
        gbc.writeMem(0xe868, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x578e);
        EXPECT(gbc.pc(), 0xe869);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca6e), 0x6e);
        EXPECT(gbc.readMem(0xe868), 0x75);
        // 75 0252
        gbc.setState(0x7a5f, 0xdc9e, 0xad60, 0x8cdf, 0x16af, 0x8d05, 0x1, 0x1);
        gbc.writeMem(0x7a5f, { 0x75 });
        gbc.writeMem(0x8d05, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xdc9e);
        EXPECT(gbc.pc(), 0x7a60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d05), 0x5);
        // 75 0255
        gbc.setState(0x5f53, 0xfc35, 0x4f60, 0x35ee, 0xb581, 0x8c3a, 0x0, 0x1);
        gbc.writeMem(0x5f53, { 0x75 });
        gbc.writeMem(0x8c3a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xfc35);
        EXPECT(gbc.pc(), 0x5f54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c3a), 0x3a);
        // 75 0257
        gbc.setState(0x1130, 0x710e, 0xcd60, 0xfe6d, 0x5c3a, 0xb187, 0x0, 0x1);
        gbc.writeMem(0x1130, { 0x75 });
        gbc.writeMem(0xb187, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x710e);
        EXPECT(gbc.pc(), 0x1131);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb187), 0x87);
        // 75 025A
        gbc.setState(0x71e5, 0x2395, 0xd0f0, 0xc816, 0x1c65, 0xe58d, 0x1, 0x0);
        gbc.writeMem(0x71e5, { 0x75 });
        gbc.writeMem(0xe58d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x2395);
        EXPECT(gbc.pc(), 0x71e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe58d), 0x8d);
        // 75 025D
        gbc.setState(0x6dfb, 0x4a26, 0x630, 0xa266, 0x133a, 0xbb28, 0x0, 0x1);
        gbc.writeMem(0x6dfb, { 0x75 });
        gbc.writeMem(0xbb28, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x4a26);
        EXPECT(gbc.pc(), 0x6dfc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb28), 0x28);
        // 75 025E
        gbc.setState(0xcb0c, 0x8ad8, 0x5ac0, 0xec81, 0xe55c, 0x882e, 0x1, 0x0);
        gbc.writeMem(0x882e, { 0x0 });
        gbc.writeMem(0xcb0c, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x8ad8);
        EXPECT(gbc.pc(), 0xcb0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x882e), 0x2e);
        EXPECT(gbc.readMem(0xcb0c), 0x75);
        // 75 025F
        gbc.setState(0x531a, 0x8b61, 0xb1f0, 0x222d, 0x9ea2, 0xdb39, 0x0, 0x1);
        gbc.writeMem(0x531a, { 0x75 });
        gbc.writeMem(0xdb39, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x8b61);
        EXPECT(gbc.pc(), 0x531b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb39), 0x39);
        // 75 0260
        gbc.setState(0x2d4d, 0x5d65, 0xe0e0, 0x625f, 0x546d, 0xf9f8, 0x0, 0x0);
        gbc.writeMem(0x2d4d, { 0x75 });
        gbc.writeMem(0xf9f8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x5d65);
        EXPECT(gbc.pc(), 0x2d4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf9f8), 0xf8);
        // 75 0261
        gbc.setState(0x5f6c, 0xa151, 0xb480, 0x1b3c, 0xbfde, 0x9ccf, 0x1, 0x1);
        gbc.writeMem(0x5f6c, { 0x75 });
        gbc.writeMem(0x9ccf, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xa151);
        EXPECT(gbc.pc(), 0x5f6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ccf), 0xcf);
        // 75 0262
        gbc.setState(0x6c8b, 0x9239, 0xbe70, 0xd6d5, 0x4289, 0xaa6d, 0x0, 0x1);
        gbc.writeMem(0x6c8b, { 0x75 });
        gbc.writeMem(0xaa6d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x9239);
        EXPECT(gbc.pc(), 0x6c8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa6d), 0x6d);
        // 75 0263
        gbc.setState(0x951a, 0x4bc1, 0x30e0, 0x16d2, 0x8f54, 0xacb5, 0x1, 0x0);
        gbc.writeMem(0x951a, { 0x75 });
        gbc.writeMem(0xacb5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x4bc1);
        EXPECT(gbc.pc(), 0x951b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x951a), 0x75);
        EXPECT(gbc.readMem(0xacb5), 0xb5);
        // 75 0264
        gbc.setState(0x4ccf, 0x61ee, 0xd250, 0xc07e, 0x146a, 0xfdea, 0x1, 0x0);
        gbc.writeMem(0x4ccf, { 0x75 });
        gbc.writeMem(0xfdea, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x61ee);
        EXPECT(gbc.pc(), 0x4cd0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfdea), 0xea);
        // 75 0265
        gbc.setState(0xaf3b, 0x6ff9, 0x79a0, 0xcafc, 0x3f2e, 0xf2c1, 0x0, 0x0);
        gbc.writeMem(0xaf3b, { 0x75 });
        gbc.writeMem(0xf2c1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x6ff9);
        EXPECT(gbc.pc(), 0xaf3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf3b), 0x75);
        EXPECT(gbc.readMem(0xf2c1), 0xc1);
        // 75 0266
        gbc.setState(0x9f8f, 0x993f, 0xc980, 0xcce2, 0xa950, 0xd6c9, 0x0, 0x0);
        gbc.writeMem(0x9f8f, { 0x75 });
        gbc.writeMem(0xd6c9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x993f);
        EXPECT(gbc.pc(), 0x9f90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f8f), 0x75);
        EXPECT(gbc.readMem(0xd6c9), 0xc9);
        // 75 0267
        gbc.setState(0x29ba, 0x1957, 0x6800, 0x54f4, 0x58f2, 0xd20e, 0x1, 0x1);
        gbc.writeMem(0x29ba, { 0x75 });
        gbc.writeMem(0xd20e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x1957);
        EXPECT(gbc.pc(), 0x29bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd20e), 0xe);
        // 75 0268
        gbc.setState(0x6bb7, 0xcb3, 0x7fa0, 0x9c30, 0x5b23, 0x9292, 0x1, 0x0);
        gbc.writeMem(0x6bb7, { 0x75 });
        gbc.writeMem(0x9292, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xcb3);
        EXPECT(gbc.pc(), 0x6bb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9292), 0x92);
        // 75 026A
        gbc.setState(0x50d7, 0x31af, 0xe920, 0x5e8c, 0xc16a, 0xb082, 0x0, 0x0);
        gbc.writeMem(0x50d7, { 0x75 });
        gbc.writeMem(0xb082, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x31af);
        EXPECT(gbc.pc(), 0x50d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb082), 0x82);
        // 75 026D
        gbc.setState(0xb9e4, 0xcbf, 0x3500, 0x4e03, 0x21bc, 0xa974, 0x1, 0x1);
        gbc.writeMem(0xa974, { 0x0 });
        gbc.writeMem(0xb9e4, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xcbf);
        EXPECT(gbc.pc(), 0xb9e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa974), 0x74);
        EXPECT(gbc.readMem(0xb9e4), 0x75);
        // 75 0273
        gbc.setState(0xa9e6, 0x89ec, 0xf350, 0xfec9, 0x7859, 0xa160, 0x0, 0x1);
        gbc.writeMem(0xa160, { 0x0 });
        gbc.writeMem(0xa9e6, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x89ec);
        EXPECT(gbc.pc(), 0xa9e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa160), 0x60);
        EXPECT(gbc.readMem(0xa9e6), 0x75);
        // 75 0274
        gbc.setState(0x1838, 0x3967, 0x1d10, 0x60ee, 0x9caf, 0x89a3, 0x1, 0x1);
        gbc.writeMem(0x1838, { 0x75 });
        gbc.writeMem(0x89a3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x3967);
        EXPECT(gbc.pc(), 0x1839);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89a3), 0xa3);
        // 75 0278
        gbc.setState(0x8a11, 0x4123, 0xa190, 0x4de1, 0x7448, 0xe847, 0x1, 0x1);
        gbc.writeMem(0x8a11, { 0x75 });
        gbc.writeMem(0xe847, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x4123);
        EXPECT(gbc.pc(), 0x8a12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a11), 0x75);
        EXPECT(gbc.readMem(0xe847), 0x47);
        // 75 027A
        gbc.setState(0xb2be, 0x88e6, 0x1b0, 0xda9b, 0xbd43, 0x9fd6, 0x1, 0x1);
        gbc.writeMem(0x9fd6, { 0x0 });
        gbc.writeMem(0xb2be, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x88e6);
        EXPECT(gbc.pc(), 0xb2bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fd6), 0xd6);
        EXPECT(gbc.readMem(0xb2be), 0x75);
        // 75 027C
        gbc.setState(0xd7d3, 0xe5e8, 0x39d0, 0x5415, 0x53ac, 0x9a79, 0x0, 0x1);
        gbc.writeMem(0x9a79, { 0x0 });
        gbc.writeMem(0xd7d3, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xe5e8);
        EXPECT(gbc.pc(), 0xd7d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a79), 0x79);
        EXPECT(gbc.readMem(0xd7d3), 0x75);
        // 75 027D
        gbc.setState(0x6cb5, 0x8ef8, 0x1ba0, 0x4a15, 0x4233, 0xef70, 0x0, 0x0);
        gbc.writeMem(0x6cb5, { 0x75 });
        gbc.writeMem(0xef70, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x8ef8);
        EXPECT(gbc.pc(), 0x6cb6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef70), 0x70);
        // 75 0280
        gbc.setState(0xea29, 0xaf69, 0xc0b0, 0xa5e3, 0x69bd, 0x82e3, 0x0, 0x1);
        gbc.writeMem(0x82e3, { 0x0 });
        gbc.writeMem(0xea29, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xaf69);
        EXPECT(gbc.pc(), 0xea2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82e3), 0xe3);
        EXPECT(gbc.readMem(0xea29), 0x75);
        // 75 0281
        gbc.setState(0x67c8, 0xa4ce, 0xa050, 0xf5dd, 0xbd3b, 0xe39d, 0x1, 0x1);
        gbc.writeMem(0x67c8, { 0x75 });
        gbc.writeMem(0xe39d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xa4ce);
        EXPECT(gbc.pc(), 0x67c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe39d), 0x9d);
        // 75 0284
        gbc.setState(0x58b0, 0x3865, 0x6820, 0xfae9, 0xd5e4, 0xac21, 0x1, 0x0);
        gbc.writeMem(0x58b0, { 0x75 });
        gbc.writeMem(0xac21, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x3865);
        EXPECT(gbc.pc(), 0x58b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac21), 0x21);
        // 75 0285
        gbc.setState(0xa3bc, 0x967c, 0xb650, 0x59c8, 0x69c, 0xbc3b, 0x0, 0x1);
        gbc.writeMem(0xa3bc, { 0x75 });
        gbc.writeMem(0xbc3b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x967c);
        EXPECT(gbc.pc(), 0xa3bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3bc), 0x75);
        EXPECT(gbc.readMem(0xbc3b), 0x3b);
        // 75 0290
        gbc.setState(0x42ce, 0x676a, 0x840, 0x412b, 0xba95, 0xbabd, 0x1, 0x1);
        gbc.writeMem(0x42ce, { 0x75 });
        gbc.writeMem(0xbabd, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x676a);
        EXPECT(gbc.pc(), 0x42cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbabd), 0xbd);
        // 75 0291
        gbc.setState(0x9633, 0x84ac, 0x3b0, 0xa164, 0x463, 0xeab4, 0x0, 0x0);
        gbc.writeMem(0x9633, { 0x75 });
        gbc.writeMem(0xeab4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x84ac);
        EXPECT(gbc.pc(), 0x9634);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9633), 0x75);
        EXPECT(gbc.readMem(0xeab4), 0xb4);
        // 75 0296
        gbc.setState(0xd23d, 0xa116, 0xe10, 0xace0, 0x6b0b, 0x96fa, 0x0, 0x0);
        gbc.writeMem(0x96fa, { 0x0 });
        gbc.writeMem(0xd23d, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xa116);
        EXPECT(gbc.pc(), 0xd23e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96fa), 0xfa);
        EXPECT(gbc.readMem(0xd23d), 0x75);
        // 75 0297
        gbc.setState(0x287e, 0x3eae, 0xe050, 0xcfb8, 0xc37c, 0xe0e5, 0x1, 0x0);
        gbc.writeMem(0x287e, { 0x75 });
        gbc.writeMem(0xe0e5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x3eae);
        EXPECT(gbc.pc(), 0x287f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0e5), 0xe5);
        // 75 0298
        gbc.setState(0x690f, 0x71c8, 0x8fc0, 0x74e0, 0xf8d0, 0x882d, 0x0, 0x1);
        gbc.writeMem(0x690f, { 0x75 });
        gbc.writeMem(0x882d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x71c8);
        EXPECT(gbc.pc(), 0x6910);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x882d), 0x2d);
        // 75 029A
        gbc.setState(0xedb9, 0x17a1, 0x5f30, 0x119f, 0xd2b1, 0xeae0, 0x0, 0x0);
        gbc.writeMem(0xeae0, { 0x0 });
        gbc.writeMem(0xedb9, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x17a1);
        EXPECT(gbc.pc(), 0xedba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeae0), 0xe0);
        EXPECT(gbc.readMem(0xedb9), 0x75);
        // 75 029C
        gbc.setState(0x8a4e, 0x49af, 0x9790, 0xcc64, 0x371a, 0xb19e, 0x1, 0x1);
        gbc.writeMem(0x8a4e, { 0x75 });
        gbc.writeMem(0xb19e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x49af);
        EXPECT(gbc.pc(), 0x8a4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a4e), 0x75);
        EXPECT(gbc.readMem(0xb19e), 0x9e);
        // 75 029F
        gbc.setState(0x548b, 0x6821, 0xefc0, 0xf144, 0xad26, 0xf66c, 0x1, 0x0);
        gbc.writeMem(0x548b, { 0x75 });
        gbc.writeMem(0xf66c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x6821);
        EXPECT(gbc.pc(), 0x548c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf66c), 0x6c);
        // 75 02A2
        gbc.setState(0xc9d1, 0x737c, 0x5c40, 0x8df6, 0x1437, 0x8143, 0x0, 0x0);
        gbc.writeMem(0x8143, { 0x0 });
        gbc.writeMem(0xc9d1, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x737c);
        EXPECT(gbc.pc(), 0xc9d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8143), 0x43);
        EXPECT(gbc.readMem(0xc9d1), 0x75);
        // 75 02A5
        gbc.setState(0x3150, 0xe0d7, 0xca80, 0xbce0, 0xccfe, 0xb9d7, 0x1, 0x0);
        gbc.writeMem(0x3150, { 0x75 });
        gbc.writeMem(0xb9d7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xe0d7);
        EXPECT(gbc.pc(), 0x3151);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9d7), 0xd7);
        // 75 02A9
        gbc.setState(0x861f, 0xaa34, 0x8910, 0xea8c, 0x1579, 0xfbf9, 0x0, 0x0);
        gbc.writeMem(0x861f, { 0x75 });
        gbc.writeMem(0xfbf9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xaa34);
        EXPECT(gbc.pc(), 0x8620);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x861f), 0x75);
        EXPECT(gbc.readMem(0xfbf9), 0xf9);
        // 75 02AA
        gbc.setState(0xc4ae, 0x5d4d, 0x7ec0, 0xe05e, 0x1ebc, 0xc717, 0x1, 0x0);
        gbc.writeMem(0xc4ae, { 0x75 });
        gbc.writeMem(0xc717, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x5d4d);
        EXPECT(gbc.pc(), 0xc4af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4ae), 0x75);
        EXPECT(gbc.readMem(0xc717), 0x17);
        // 75 02AC
        gbc.setState(0xe367, 0xc374, 0x2120, 0xa61a, 0x396b, 0x8eb8, 0x0, 0x1);
        gbc.writeMem(0x8eb8, { 0x0 });
        gbc.writeMem(0xe367, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xc374);
        EXPECT(gbc.pc(), 0xe368);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8eb8), 0xb8);
        EXPECT(gbc.readMem(0xe367), 0x75);
        // 75 02AD
        gbc.setState(0xaf58, 0xcf1, 0xdc70, 0x4140, 0x63fc, 0x8912, 0x1, 0x1);
        gbc.writeMem(0x8912, { 0x0 });
        gbc.writeMem(0xaf58, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xcf1);
        EXPECT(gbc.pc(), 0xaf59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8912), 0x12);
        EXPECT(gbc.readMem(0xaf58), 0x75);
        // 75 02AF
        gbc.setState(0x216, 0x2d73, 0xa4f0, 0xbafd, 0x5ac2, 0x9ee6, 0x0, 0x1);
        gbc.writeMem(0x216, { 0x75 });
        gbc.writeMem(0x9ee6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x2d73);
        EXPECT(gbc.pc(), 0x217);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ee6), 0xe6);
        // 75 02B0
        gbc.setState(0x854f, 0x4af6, 0x6980, 0xce31, 0xbac2, 0x8755, 0x1, 0x0);
        gbc.writeMem(0x854f, { 0x75 });
        gbc.writeMem(0x8755, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x4af6);
        EXPECT(gbc.pc(), 0x8550);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x854f), 0x75);
        EXPECT(gbc.readMem(0x8755), 0x55);
        // 75 02B2
        gbc.setState(0x6fa0, 0x895d, 0xafd0, 0xdf67, 0xfd94, 0xa594, 0x0, 0x1);
        gbc.writeMem(0x6fa0, { 0x75 });
        gbc.writeMem(0xa594, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x895d);
        EXPECT(gbc.pc(), 0x6fa1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa594), 0x94);
        // 75 02B3
        gbc.setState(0x5bc3, 0x9ea9, 0xcdd0, 0xe07, 0xdbad, 0xe2d0, 0x1, 0x1);
        gbc.writeMem(0x5bc3, { 0x75 });
        gbc.writeMem(0xe2d0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x9ea9);
        EXPECT(gbc.pc(), 0x5bc4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2d0), 0xd0);
        // 75 02B4
        gbc.setState(0x6206, 0xd033, 0xd230, 0xcb92, 0x2ad3, 0xd66c, 0x0, 0x1);
        gbc.writeMem(0x6206, { 0x75 });
        gbc.writeMem(0xd66c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xd033);
        EXPECT(gbc.pc(), 0x6207);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd66c), 0x6c);
        // 75 02B6
        gbc.setState(0x56c3, 0xf88, 0x5ff0, 0xafeb, 0x86b2, 0xc3ea, 0x0, 0x0);
        gbc.writeMem(0x56c3, { 0x75 });
        gbc.writeMem(0xc3ea, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xf88);
        EXPECT(gbc.pc(), 0x56c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3ea), 0xea);
        // 75 02B7
        gbc.setState(0x4eb8, 0x2db3, 0x1640, 0x4a8b, 0x39ce, 0xa18e, 0x0, 0x0);
        gbc.writeMem(0x4eb8, { 0x75 });
        gbc.writeMem(0xa18e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x2db3);
        EXPECT(gbc.pc(), 0x4eb9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa18e), 0x8e);
        // 75 02B8
        gbc.setState(0x7251, 0xd98a, 0xd150, 0x3f3c, 0xb8be, 0xf066, 0x1, 0x0);
        gbc.writeMem(0x7251, { 0x75 });
        gbc.writeMem(0xf066, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xd98a);
        EXPECT(gbc.pc(), 0x7252);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf066), 0x66);
        // 75 02C0
        gbc.setState(0x6a4b, 0xaadf, 0x430, 0x96a7, 0xeb52, 0x9af5, 0x1, 0x1);
        gbc.writeMem(0x6a4b, { 0x75 });
        gbc.writeMem(0x9af5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xaadf);
        EXPECT(gbc.pc(), 0x6a4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9af5), 0xf5);
        // 75 02C1
        gbc.setState(0x25d4, 0x9b2e, 0xac00, 0x26c9, 0x8ff6, 0xb1ea, 0x0, 0x0);
        gbc.writeMem(0x25d4, { 0x75 });
        gbc.writeMem(0xb1ea, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x9b2e);
        EXPECT(gbc.pc(), 0x25d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1ea), 0xea);
        // 75 02C2
        gbc.setState(0x8888, 0x27ac, 0x7470, 0x2563, 0x4bd9, 0xd290, 0x1, 0x0);
        gbc.writeMem(0x8888, { 0x75 });
        gbc.writeMem(0xd290, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x27ac);
        EXPECT(gbc.pc(), 0x8889);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8888), 0x75);
        EXPECT(gbc.readMem(0xd290), 0x90);
        // 75 02C6
        gbc.setState(0xb05, 0xe482, 0x95a0, 0xa101, 0x5eff, 0xbb4f, 0x0, 0x0);
        gbc.writeMem(0xb05, { 0x75 });
        gbc.writeMem(0xbb4f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xe482);
        EXPECT(gbc.pc(), 0xb06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb4f), 0x4f);
        // 75 02CB
        gbc.setState(0x9e89, 0xf101, 0x2ac0, 0xcf8b, 0xf884, 0xda29, 0x1, 0x0);
        gbc.writeMem(0x9e89, { 0x75 });
        gbc.writeMem(0xda29, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xf101);
        EXPECT(gbc.pc(), 0x9e8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e89), 0x75);
        EXPECT(gbc.readMem(0xda29), 0x29);
        // 75 02CF
        gbc.setState(0x1a7c, 0x7008, 0x61e0, 0xfc87, 0x1d22, 0xeebc, 0x0, 0x0);
        gbc.writeMem(0x1a7c, { 0x75 });
        gbc.writeMem(0xeebc, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x7008);
        EXPECT(gbc.pc(), 0x1a7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeebc), 0xbc);
        // 75 02D2
        gbc.setState(0x8fa6, 0xab70, 0xbd50, 0x2850, 0xd99e, 0xf013, 0x0, 0x0);
        gbc.writeMem(0x8fa6, { 0x75 });
        gbc.writeMem(0xf013, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xab70);
        EXPECT(gbc.pc(), 0x8fa7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fa6), 0x75);
        EXPECT(gbc.readMem(0xf013), 0x13);
        // 75 02D3
        gbc.setState(0x3a90, 0x3c9a, 0xa220, 0x4184, 0x9e9f, 0xc022, 0x0, 0x1);
        gbc.writeMem(0x3a90, { 0x75 });
        gbc.writeMem(0xc022, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x3c9a);
        EXPECT(gbc.pc(), 0x3a91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc022), 0x22);
        // 75 02D6
        gbc.setState(0x2358, 0xacd0, 0x9c90, 0x6f1b, 0x5547, 0xbf18, 0x0, 0x0);
        gbc.writeMem(0x2358, { 0x75 });
        gbc.writeMem(0xbf18, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xacd0);
        EXPECT(gbc.pc(), 0x2359);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf18), 0x18);
        // 75 02D9
        gbc.setState(0x9d8a, 0x25c8, 0xb250, 0x49bd, 0x3fd3, 0x8f00, 0x0, 0x1);
        gbc.writeMem(0x8f00, { 0x0 });
        gbc.writeMem(0x9d8a, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x25c8);
        EXPECT(gbc.pc(), 0x9d8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f00), 0x0);
        EXPECT(gbc.readMem(0x9d8a), 0x75);
        // 75 02DF
        gbc.setState(0x62af, 0xe5ad, 0x81f0, 0xc473, 0x5e8, 0x8cd6, 0x0, 0x1);
        gbc.writeMem(0x62af, { 0x75 });
        gbc.writeMem(0x8cd6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xe5ad);
        EXPECT(gbc.pc(), 0x62b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cd6), 0xd6);
        // 75 02E4
        gbc.setState(0x7cca, 0x526d, 0x7520, 0x6490, 0x2a0a, 0xd4e5, 0x1, 0x1);
        gbc.writeMem(0x7cca, { 0x75 });
        gbc.writeMem(0xd4e5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x526d);
        EXPECT(gbc.pc(), 0x7ccb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4e5), 0xe5);
        // 75 02E8
        gbc.setState(0x6a51, 0xb4e4, 0xec90, 0x11d6, 0x27eb, 0xc596, 0x1, 0x0);
        gbc.writeMem(0x6a51, { 0x75 });
        gbc.writeMem(0xc596, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xb4e4);
        EXPECT(gbc.pc(), 0x6a52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc596), 0x96);
        // 75 02EA
        gbc.setState(0xbc72, 0x8299, 0x41a0, 0x135f, 0x1865, 0xdcb4, 0x0, 0x1);
        gbc.writeMem(0xbc72, { 0x75 });
        gbc.writeMem(0xdcb4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x8299);
        EXPECT(gbc.pc(), 0xbc73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc72), 0x75);
        EXPECT(gbc.readMem(0xdcb4), 0xb4);
        // 75 02EB
        gbc.setState(0x65ca, 0x54eb, 0x7ce0, 0xa2f2, 0xc297, 0xdf9e, 0x0, 0x1);
        gbc.writeMem(0x65ca, { 0x75 });
        gbc.writeMem(0xdf9e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x54eb);
        EXPECT(gbc.pc(), 0x65cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf9e), 0x9e);
        // 75 02EF
        gbc.setState(0xa279, 0x78b7, 0xd7a0, 0xba18, 0xe1f7, 0xa34f, 0x0, 0x1);
        gbc.writeMem(0xa279, { 0x75 });
        gbc.writeMem(0xa34f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x78b7);
        EXPECT(gbc.pc(), 0xa27a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa279), 0x75);
        EXPECT(gbc.readMem(0xa34f), 0x4f);
        // 75 02F1
        gbc.setState(0xe1e, 0x1583, 0xbac0, 0x5334, 0x40a2, 0xb019, 0x1, 0x1);
        gbc.writeMem(0xe1e, { 0x75 });
        gbc.writeMem(0xb019, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x1583);
        EXPECT(gbc.pc(), 0xe1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb019), 0x19);
        // 75 02F5
        gbc.setState(0xc23f, 0xb390, 0x5e0, 0xca0e, 0xc6ba, 0x97a9, 0x1, 0x1);
        gbc.writeMem(0x97a9, { 0x0 });
        gbc.writeMem(0xc23f, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xb390);
        EXPECT(gbc.pc(), 0xc240);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97a9), 0xa9);
        EXPECT(gbc.readMem(0xc23f), 0x75);
        // 75 02F7
        gbc.setState(0x9d72, 0xe09f, 0x1f20, 0xb6c6, 0x49fe, 0xcc2d, 0x1, 0x1);
        gbc.writeMem(0x9d72, { 0x75 });
        gbc.writeMem(0xcc2d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xe09f);
        EXPECT(gbc.pc(), 0x9d73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d72), 0x75);
        EXPECT(gbc.readMem(0xcc2d), 0x2d);
        // 75 02FB
        gbc.setState(0xbc57, 0x242f, 0x1730, 0xf106, 0x8098, 0xa92e, 0x0, 0x0);
        gbc.writeMem(0xa92e, { 0x0 });
        gbc.writeMem(0xbc57, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x242f);
        EXPECT(gbc.pc(), 0xbc58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa92e), 0x2e);
        EXPECT(gbc.readMem(0xbc57), 0x75);
        // 75 02FE
        gbc.setState(0x62c2, 0x3286, 0x7e00, 0x7af7, 0x3ce4, 0xff95, 0x0, 0x1);
        gbc.writeMem(0x62c2, { 0x75 });
        gbc.writeMem(0xff95, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x3286);
        EXPECT(gbc.pc(), 0x62c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff95), 0x95);
        // 75 02FF
        gbc.setState(0x27de, 0x4692, 0x4c90, 0x6832, 0xc045, 0xf5c3, 0x0, 0x0);
        gbc.writeMem(0x27de, { 0x75 });
        gbc.writeMem(0xf5c3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x4692);
        EXPECT(gbc.pc(), 0x27df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf5c3), 0xc3);
        // 75 0300
        gbc.setState(0xd6b2, 0x17d5, 0x1ff0, 0xb334, 0xa0f7, 0x8923, 0x1, 0x0);
        gbc.writeMem(0x8923, { 0x0 });
        gbc.writeMem(0xd6b2, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x17d5);
        EXPECT(gbc.pc(), 0xd6b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8923), 0x23);
        EXPECT(gbc.readMem(0xd6b2), 0x75);
        // 75 0302
        gbc.setState(0x9062, 0xd1dc, 0x2bb0, 0x84ba, 0xd2f5, 0xe774, 0x1, 0x1);
        gbc.writeMem(0x9062, { 0x75 });
        gbc.writeMem(0xe774, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xd1dc);
        EXPECT(gbc.pc(), 0x9063);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9062), 0x75);
        EXPECT(gbc.readMem(0xe774), 0x74);
        // 75 0303
        gbc.setState(0xeb79, 0xd10f, 0x30e0, 0xd60e, 0x5a97, 0xbd9b, 0x1, 0x0);
        gbc.writeMem(0xbd9b, { 0x0 });
        gbc.writeMem(0xeb79, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xd10f);
        EXPECT(gbc.pc(), 0xeb7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd9b), 0x9b);
        EXPECT(gbc.readMem(0xeb79), 0x75);
        // 75 0304
        gbc.setState(0x93ce, 0x5248, 0xba70, 0x662f, 0x21c7, 0xfb12, 0x0, 0x0);
        gbc.writeMem(0x93ce, { 0x75 });
        gbc.writeMem(0xfb12, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x5248);
        EXPECT(gbc.pc(), 0x93cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93ce), 0x75);
        EXPECT(gbc.readMem(0xfb12), 0x12);
        // 75 0306
        gbc.setState(0x2431, 0x5fd6, 0x130, 0xdbce, 0x7c5c, 0xc00, 0x1, 0x0);
        gbc.writeMem(0xc00, { 0x0 });
        gbc.writeMem(0x2431, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x5fd6);
        EXPECT(gbc.pc(), 0x2432);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 75 0308
        gbc.setState(0xaaa4, 0xfa51, 0xbee0, 0x7d82, 0xa774, 0x9515, 0x1, 0x0);
        gbc.writeMem(0x9515, { 0x0 });
        gbc.writeMem(0xaaa4, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xfa51);
        EXPECT(gbc.pc(), 0xaaa5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9515), 0x15);
        EXPECT(gbc.readMem(0xaaa4), 0x75);
        // 75 030A
        gbc.setState(0x5493, 0xf2bc, 0x77f0, 0xeab2, 0x8734, 0xdc49, 0x0, 0x1);
        gbc.writeMem(0x5493, { 0x75 });
        gbc.writeMem(0xdc49, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xf2bc);
        EXPECT(gbc.pc(), 0x5494);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc49), 0x49);
        // 75 030B
        gbc.setState(0x1868, 0xf851, 0xb180, 0x8e80, 0x42a1, 0xeca4, 0x1, 0x0);
        gbc.writeMem(0x1868, { 0x75 });
        gbc.writeMem(0xeca4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xf851);
        EXPECT(gbc.pc(), 0x1869);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeca4), 0xa4);
        // 75 030D
        gbc.setState(0xdfb1, 0x2709, 0xbaf0, 0xc9f3, 0x4c89, 0x881d, 0x0, 0x1);
        gbc.writeMem(0x881d, { 0x0 });
        gbc.writeMem(0xdfb1, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x2709);
        EXPECT(gbc.pc(), 0xdfb2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x881d), 0x1d);
        EXPECT(gbc.readMem(0xdfb1), 0x75);
        // 75 030E
        gbc.setState(0xcd41, 0x6a4c, 0x7a20, 0x6f98, 0xcbbd, 0xf703, 0x0, 0x1);
        gbc.writeMem(0xcd41, { 0x75 });
        gbc.writeMem(0xf703, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x6a4c);
        EXPECT(gbc.pc(), 0xcd42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd41), 0x75);
        EXPECT(gbc.readMem(0xf703), 0x3);
        // 75 030F
        gbc.setState(0xbbde, 0x192, 0xf780, 0x7a5b, 0xe44b, 0xb757, 0x0, 0x0);
        gbc.writeMem(0xb757, { 0x0 });
        gbc.writeMem(0xbbde, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x192);
        EXPECT(gbc.pc(), 0xbbdf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb757), 0x57);
        EXPECT(gbc.readMem(0xbbde), 0x75);
        // 75 0311
        gbc.setState(0xa065, 0xa418, 0x730, 0x4a37, 0x80cf, 0xc88e, 0x1, 0x1);
        gbc.writeMem(0xa065, { 0x75 });
        gbc.writeMem(0xc88e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xa418);
        EXPECT(gbc.pc(), 0xa066);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa065), 0x75);
        EXPECT(gbc.readMem(0xc88e), 0x8e);
        // 75 0313
        gbc.setState(0x5908, 0x756a, 0x2610, 0x2f43, 0xf169, 0x88ea, 0x0, 0x0);
        gbc.writeMem(0x5908, { 0x75 });
        gbc.writeMem(0x88ea, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x756a);
        EXPECT(gbc.pc(), 0x5909);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88ea), 0xea);
        // 75 0314
        gbc.setState(0xeb67, 0xe11e, 0x7600, 0xbe65, 0xdf7f, 0xcee2, 0x0, 0x1);
        gbc.writeMem(0xcee2, { 0x0 });
        gbc.writeMem(0xeb67, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xe11e);
        EXPECT(gbc.pc(), 0xeb68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcee2), 0xe2);
        EXPECT(gbc.readMem(0xeb67), 0x75);
        // 75 0318
        gbc.setState(0xe2c6, 0x6972, 0x3730, 0xa86a, 0xe1ba, 0xaf23, 0x0, 0x1);
        gbc.writeMem(0xaf23, { 0x0 });
        gbc.writeMem(0xe2c6, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x6972);
        EXPECT(gbc.pc(), 0xe2c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf23), 0x23);
        EXPECT(gbc.readMem(0xe2c6), 0x75);
        // 75 0319
        gbc.setState(0xeb34, 0x6d65, 0xc200, 0x8f61, 0x635f, 0xc364, 0x1, 0x1);
        gbc.writeMem(0xc364, { 0x0 });
        gbc.writeMem(0xeb34, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x6d65);
        EXPECT(gbc.pc(), 0xeb35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc364), 0x64);
        EXPECT(gbc.readMem(0xeb34), 0x75);
        // 75 031A
        gbc.setState(0xd797, 0x496d, 0x3ee0, 0x936c, 0x6564, 0xc98d, 0x1, 0x1);
        gbc.writeMem(0xc98d, { 0x0 });
        gbc.writeMem(0xd797, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x496d);
        EXPECT(gbc.pc(), 0xd798);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc98d), 0x8d);
        EXPECT(gbc.readMem(0xd797), 0x75);
        // 75 031E
        gbc.setState(0xb33d, 0xf12a, 0xa660, 0x64b0, 0x1b5e, 0xbcdc, 0x1, 0x1);
        gbc.writeMem(0xb33d, { 0x75 });
        gbc.writeMem(0xbcdc, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xf12a);
        EXPECT(gbc.pc(), 0xb33e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb33d), 0x75);
        EXPECT(gbc.readMem(0xbcdc), 0xdc);
        // 75 0320
        gbc.setState(0x48b1, 0x129a, 0xf610, 0x30e3, 0xdc15, 0xeecb, 0x0, 0x0);
        gbc.writeMem(0x48b1, { 0x75 });
        gbc.writeMem(0xeecb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x129a);
        EXPECT(gbc.pc(), 0x48b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeecb), 0xcb);
        // 75 0322
        gbc.setState(0x7e60, 0x3da7, 0xe0b0, 0x74bd, 0x5ce, 0x99a3, 0x0, 0x1);
        gbc.writeMem(0x7e60, { 0x75 });
        gbc.writeMem(0x99a3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x3da7);
        EXPECT(gbc.pc(), 0x7e61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99a3), 0xa3);
        // 75 0324
        gbc.setState(0x5f45, 0x5fc3, 0x9310, 0x89e1, 0x4b75, 0xfef5, 0x1, 0x0);
        gbc.writeMem(0x5f45, { 0x75 });
        gbc.writeMem(0xfef5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x5fc3);
        EXPECT(gbc.pc(), 0x5f46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfef5), 0xf5);
        // 75 0326
        gbc.setState(0xa12f, 0x95a4, 0xa0b0, 0x4d90, 0x36af, 0xfca4, 0x1, 0x1);
        gbc.writeMem(0xa12f, { 0x75 });
        gbc.writeMem(0xfca4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x95a4);
        EXPECT(gbc.pc(), 0xa130);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa12f), 0x75);
        EXPECT(gbc.readMem(0xfca4), 0xa4);
        // 75 0327
        gbc.setState(0x26ae, 0xf574, 0xb950, 0x922a, 0x78c5, 0xc770, 0x0, 0x1);
        gbc.writeMem(0x26ae, { 0x75 });
        gbc.writeMem(0xc770, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xf574);
        EXPECT(gbc.pc(), 0x26af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc770), 0x70);
        // 75 0329
        gbc.setState(0xb38f, 0x3b88, 0x64c0, 0xc913, 0x3e63, 0xf6a6, 0x0, 0x1);
        gbc.writeMem(0xb38f, { 0x75 });
        gbc.writeMem(0xf6a6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x3b88);
        EXPECT(gbc.pc(), 0xb390);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb38f), 0x75);
        EXPECT(gbc.readMem(0xf6a6), 0xa6);
        // 75 032A
        gbc.setState(0x546f, 0xc51e, 0xe0a0, 0x2425, 0x3112, 0xdf8a, 0x0, 0x0);
        gbc.writeMem(0x546f, { 0x75 });
        gbc.writeMem(0xdf8a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xc51e);
        EXPECT(gbc.pc(), 0x5470);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf8a), 0x8a);
        // 75 032B
        gbc.setState(0x5d4c, 0x23c9, 0xe0c0, 0x6e2a, 0x9590, 0xb019, 0x1, 0x0);
        gbc.writeMem(0x5d4c, { 0x75 });
        gbc.writeMem(0xb019, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x23c9);
        EXPECT(gbc.pc(), 0x5d4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb019), 0x19);
        // 75 032D
        gbc.setState(0x1f90, 0x5a7, 0x7ab0, 0x1db6, 0x7375, 0xef44, 0x0, 0x1);
        gbc.writeMem(0x1f90, { 0x75 });
        gbc.writeMem(0xef44, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x5a7);
        EXPECT(gbc.pc(), 0x1f91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef44), 0x44);
        // 75 032F
        gbc.setState(0x786, 0x9c3d, 0xc440, 0x7a3d, 0x5f8c, 0xa453, 0x1, 0x0);
        gbc.writeMem(0x786, { 0x75 });
        gbc.writeMem(0xa453, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x9c3d);
        EXPECT(gbc.pc(), 0x787);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa453), 0x53);
        // 75 0332
        gbc.setState(0x5d6c, 0xd9b2, 0x2ea0, 0x19eb, 0xabe8, 0xfa3a, 0x0, 0x0);
        gbc.writeMem(0x5d6c, { 0x75 });
        gbc.writeMem(0xfa3a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xd9b2);
        EXPECT(gbc.pc(), 0x5d6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfa3a), 0x3a);
        // 75 0337
        gbc.setState(0xcc9a, 0x7de8, 0x4610, 0x9140, 0x6cf0, 0xfe31, 0x1, 0x1);
        gbc.writeMem(0xcc9a, { 0x75 });
        gbc.writeMem(0xfe31, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x7de8);
        EXPECT(gbc.pc(), 0xcc9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc9a), 0x75);
        EXPECT(gbc.readMem(0xfe31), 0x31);
        // 75 0339
        gbc.setState(0x1d3b, 0x1249, 0xb2e0, 0x9ca9, 0xdd9b, 0xc4b8, 0x1, 0x1);
        gbc.writeMem(0x1d3b, { 0x75 });
        gbc.writeMem(0xc4b8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x1249);
        EXPECT(gbc.pc(), 0x1d3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4b8), 0xb8);
        // 75 033A
        gbc.setState(0x94d4, 0xa712, 0xddd0, 0xfd07, 0xa77f, 0xca7b, 0x0, 0x1);
        gbc.writeMem(0x94d4, { 0x75 });
        gbc.writeMem(0xca7b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xa712);
        EXPECT(gbc.pc(), 0x94d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94d4), 0x75);
        EXPECT(gbc.readMem(0xca7b), 0x7b);
        // 75 033D
        gbc.setState(0x97d4, 0xf1df, 0xae50, 0x8018, 0x8496, 0x9d79, 0x0, 0x0);
        gbc.writeMem(0x97d4, { 0x75 });
        gbc.writeMem(0x9d79, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xf1df);
        EXPECT(gbc.pc(), 0x97d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97d4), 0x75);
        EXPECT(gbc.readMem(0x9d79), 0x79);
        // 75 033E
        gbc.setState(0x9313, 0x284a, 0x19a0, 0x5f47, 0xe137, 0x8c77, 0x1, 0x0);
        gbc.writeMem(0x8c77, { 0x0 });
        gbc.writeMem(0x9313, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x284a);
        EXPECT(gbc.pc(), 0x9314);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c77), 0x77);
        EXPECT(gbc.readMem(0x9313), 0x75);
        // 75 0341
        gbc.setState(0x8fd0, 0x41e2, 0x5fc0, 0xc61, 0x4f0b, 0x9da9, 0x1, 0x1);
        gbc.writeMem(0x8fd0, { 0x75 });
        gbc.writeMem(0x9da9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x41e2);
        EXPECT(gbc.pc(), 0x8fd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fd0), 0x75);
        EXPECT(gbc.readMem(0x9da9), 0xa9);
        // 75 034A
        gbc.setState(0x527, 0x63fb, 0x22e0, 0x49cf, 0x5d0, 0xfe2c, 0x0, 0x0);
        gbc.writeMem(0x527, { 0x75 });
        gbc.writeMem(0xfe2c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x63fb);
        EXPECT(gbc.pc(), 0x528);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfe2c), 0x2c);
        // 75 034C
        gbc.setState(0x2ab5, 0xbc3b, 0xa2a0, 0x27df, 0x528e, 0xa8bb, 0x1, 0x0);
        gbc.writeMem(0x2ab5, { 0x75 });
        gbc.writeMem(0xa8bb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xbc3b);
        EXPECT(gbc.pc(), 0x2ab6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8bb), 0xbb);
        // 75 0350
        gbc.setState(0x9bc6, 0x8352, 0xe570, 0xe093, 0x3b3f, 0xe07c, 0x0, 0x1);
        gbc.writeMem(0x9bc6, { 0x75 });
        gbc.writeMem(0xe07c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x8352);
        EXPECT(gbc.pc(), 0x9bc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bc6), 0x75);
        EXPECT(gbc.readMem(0xe07c), 0x7c);
        // 75 0351
        gbc.setState(0x7d08, 0x2a73, 0xa550, 0xd2c4, 0x8a35, 0xcf10, 0x0, 0x0);
        gbc.writeMem(0x7d08, { 0x75 });
        gbc.writeMem(0xcf10, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x2a73);
        EXPECT(gbc.pc(), 0x7d09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf10), 0x10);
        // 75 0354
        gbc.setState(0x4899, 0xf828, 0xa9f0, 0xaa59, 0xfe1a, 0x85fd, 0x0, 0x1);
        gbc.writeMem(0x4899, { 0x75 });
        gbc.writeMem(0x85fd, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xf828);
        EXPECT(gbc.pc(), 0x489a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85fd), 0xfd);
        // 75 0355
        gbc.setState(0x4b9d, 0x406, 0xa2e0, 0xf608, 0x9cc9, 0x864f, 0x1, 0x1);
        gbc.writeMem(0x4b9d, { 0x75 });
        gbc.writeMem(0x864f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x406);
        EXPECT(gbc.pc(), 0x4b9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x864f), 0x4f);
        // 75 0358
        gbc.setState(0xa25b, 0x7b07, 0x27b0, 0xa6df, 0x9ad3, 0xa89e, 0x0, 0x1);
        gbc.writeMem(0xa25b, { 0x75 });
        gbc.writeMem(0xa89e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x7b07);
        EXPECT(gbc.pc(), 0xa25c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa25b), 0x75);
        EXPECT(gbc.readMem(0xa89e), 0x9e);
        // 75 0360
        gbc.setState(0xc558, 0x54aa, 0x4250, 0x5413, 0x5f24, 0x9f8a, 0x1, 0x0);
        gbc.writeMem(0x9f8a, { 0x0 });
        gbc.writeMem(0xc558, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x54aa);
        EXPECT(gbc.pc(), 0xc559);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f8a), 0x8a);
        EXPECT(gbc.readMem(0xc558), 0x75);
        // 75 0362
        gbc.setState(0x2e84, 0x5e23, 0x3060, 0xe1e9, 0xfc7, 0x9b25, 0x1, 0x0);
        gbc.writeMem(0x2e84, { 0x75 });
        gbc.writeMem(0x9b25, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x5e23);
        EXPECT(gbc.pc(), 0x2e85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b25), 0x25);
        // 75 0365
        gbc.setState(0xe83c, 0x664d, 0xd720, 0x9015, 0xa65c, 0x8096, 0x1, 0x0);
        gbc.writeMem(0x8096, { 0x0 });
        gbc.writeMem(0xe83c, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x664d);
        EXPECT(gbc.pc(), 0xe83d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8096), 0x96);
        EXPECT(gbc.readMem(0xe83c), 0x75);
        // 75 0367
        gbc.setState(0x4070, 0x7c25, 0xed20, 0x66bc, 0xd6bf, 0xa3df, 0x1, 0x1);
        gbc.writeMem(0x4070, { 0x75 });
        gbc.writeMem(0xa3df, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x7c25);
        EXPECT(gbc.pc(), 0x4071);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3df), 0xdf);
        // 75 036A
        gbc.setState(0x16a7, 0x417f, 0x9f90, 0xcb3d, 0x7f2d, 0xfb58, 0x0, 0x0);
        gbc.writeMem(0x16a7, { 0x75 });
        gbc.writeMem(0xfb58, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x417f);
        EXPECT(gbc.pc(), 0x16a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfb58), 0x58);
        // 75 036D
        gbc.setState(0x1ea9, 0xd230, 0xd770, 0x9cc9, 0xcf2b, 0x84e6, 0x1, 0x0);
        gbc.writeMem(0x1ea9, { 0x75 });
        gbc.writeMem(0x84e6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xd230);
        EXPECT(gbc.pc(), 0x1eaa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84e6), 0xe6);
        // 75 036F
        gbc.setState(0x29d, 0xec8a, 0x6d50, 0xc150, 0x6b3b, 0xa49c, 0x0, 0x1);
        gbc.writeMem(0x29d, { 0x75 });
        gbc.writeMem(0xa49c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xec8a);
        EXPECT(gbc.pc(), 0x29e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa49c), 0x9c);
        // 75 0375
        gbc.setState(0x8248, 0xfbc2, 0x4f20, 0x5746, 0xc109, 0xa497, 0x1, 0x1);
        gbc.writeMem(0x8248, { 0x75 });
        gbc.writeMem(0xa497, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xfbc2);
        EXPECT(gbc.pc(), 0x8249);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8248), 0x75);
        EXPECT(gbc.readMem(0xa497), 0x97);
        // 75 0377
        gbc.setState(0x7cf1, 0x4e23, 0x14f0, 0xfad9, 0xa963, 0xc136, 0x0, 0x0);
        gbc.writeMem(0x7cf1, { 0x75 });
        gbc.writeMem(0xc136, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x4e23);
        EXPECT(gbc.pc(), 0x7cf2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc136), 0x36);
        // 75 0378
        gbc.setState(0xd1cf, 0x3c64, 0xe990, 0x29ad, 0x8ea5, 0xd566, 0x1, 0x1);
        gbc.writeMem(0xd1cf, { 0x75 });
        gbc.writeMem(0xd566, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x3c64);
        EXPECT(gbc.pc(), 0xd1d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1cf), 0x75);
        EXPECT(gbc.readMem(0xd566), 0x66);
        // 75 0379
        gbc.setState(0x9962, 0x14fa, 0xe090, 0x4428, 0xd09d, 0xc62b, 0x0, 0x1);
        gbc.writeMem(0x9962, { 0x75 });
        gbc.writeMem(0xc62b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x14fa);
        EXPECT(gbc.pc(), 0x9963);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9962), 0x75);
        EXPECT(gbc.readMem(0xc62b), 0x2b);
        // 75 037A
        gbc.setState(0x9551, 0x9e8a, 0x2b00, 0xf0fd, 0xd517, 0x9186, 0x0, 0x0);
        gbc.writeMem(0x9186, { 0x0 });
        gbc.writeMem(0x9551, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x9e8a);
        EXPECT(gbc.pc(), 0x9552);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9186), 0x86);
        EXPECT(gbc.readMem(0x9551), 0x75);
        // 75 037B
        gbc.setState(0x215f, 0xd205, 0x8c30, 0xb690, 0x7b27, 0xe202, 0x1, 0x1);
        gbc.writeMem(0x215f, { 0x75 });
        gbc.writeMem(0xe202, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xd205);
        EXPECT(gbc.pc(), 0x2160);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe202), 0x2);
        // 75 037E
        gbc.setState(0x5e34, 0xbadc, 0xb300, 0x2d49, 0x870f, 0xf12c, 0x0, 0x0);
        gbc.writeMem(0x5e34, { 0x75 });
        gbc.writeMem(0xf12c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xbadc);
        EXPECT(gbc.pc(), 0x5e35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf12c), 0x2c);
        // 75 0380
        gbc.setState(0x5648, 0xcaf3, 0x5e10, 0x843f, 0xd84d, 0xbbdb, 0x1, 0x0);
        gbc.writeMem(0x5648, { 0x75 });
        gbc.writeMem(0xbbdb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xcaf3);
        EXPECT(gbc.pc(), 0x5649);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbdb), 0xdb);
        // 75 0382
        gbc.setState(0xc13b, 0xbb0f, 0xada0, 0x5f46, 0xf1ac, 0xef44, 0x1, 0x0);
        gbc.writeMem(0xc13b, { 0x75 });
        gbc.writeMem(0xef44, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xbb0f);
        EXPECT(gbc.pc(), 0xc13c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc13b), 0x75);
        EXPECT(gbc.readMem(0xef44), 0x44);
        // 75 0385
        gbc.setState(0xe497, 0x500f, 0xf1c0, 0xc040, 0xd965, 0xf03e, 0x0, 0x1);
        gbc.writeMem(0xe497, { 0x75 });
        gbc.writeMem(0xf03e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x500f);
        EXPECT(gbc.pc(), 0xe498);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe497), 0x75);
        EXPECT(gbc.readMem(0xf03e), 0x3e);
        // 75 0386
        gbc.setState(0x99a4, 0x18ef, 0x3e70, 0x21dc, 0x95b2, 0xb870, 0x1, 0x0);
        gbc.writeMem(0x99a4, { 0x75 });
        gbc.writeMem(0xb870, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x18ef);
        EXPECT(gbc.pc(), 0x99a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99a4), 0x75);
        EXPECT(gbc.readMem(0xb870), 0x70);
        // 75 0389
        gbc.setState(0x664f, 0x2cf1, 0xc510, 0x8efe, 0x459f, 0xc5be, 0x0, 0x1);
        gbc.writeMem(0x664f, { 0x75 });
        gbc.writeMem(0xc5be, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x2cf1);
        EXPECT(gbc.pc(), 0x6650);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5be), 0xbe);
        // 75 038A
        gbc.setState(0x4443, 0x71d4, 0x8de0, 0x5b98, 0xcf2f, 0xee99, 0x1, 0x0);
        gbc.writeMem(0x4443, { 0x75 });
        gbc.writeMem(0xee99, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x71d4);
        EXPECT(gbc.pc(), 0x4444);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee99), 0x99);
        // 75 038C
        gbc.setState(0x8d45, 0x5186, 0x2fd0, 0x8aed, 0x412c, 0xe387, 0x0, 0x0);
        gbc.writeMem(0x8d45, { 0x75 });
        gbc.writeMem(0xe387, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x5186);
        EXPECT(gbc.pc(), 0x8d46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d45), 0x75);
        EXPECT(gbc.readMem(0xe387), 0x87);
        // 75 038D
        gbc.setState(0x27f3, 0x662c, 0x6cc0, 0x9702, 0x648a, 0x8e64, 0x0, 0x1);
        gbc.writeMem(0x27f3, { 0x75 });
        gbc.writeMem(0x8e64, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x662c);
        EXPECT(gbc.pc(), 0x27f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e64), 0x64);
        // 75 038E
        gbc.setState(0xc401, 0xf22a, 0x29b0, 0xed0e, 0x500e, 0xac25, 0x0, 0x1);
        gbc.writeMem(0xac25, { 0x0 });
        gbc.writeMem(0xc401, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xf22a);
        EXPECT(gbc.pc(), 0xc402);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac25), 0x25);
        EXPECT(gbc.readMem(0xc401), 0x75);
        // 75 038F
        gbc.setState(0xb263, 0xb85, 0x2710, 0x6ae8, 0x9f5, 0x896a, 0x1, 0x1);
        gbc.writeMem(0x896a, { 0x0 });
        gbc.writeMem(0xb263, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xb85);
        EXPECT(gbc.pc(), 0xb264);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x896a), 0x6a);
        EXPECT(gbc.readMem(0xb263), 0x75);
        // 75 0391
        gbc.setState(0x23bc, 0x4a25, 0xd3d0, 0xfe2d, 0xdc6f, 0xf220, 0x0, 0x1);
        gbc.writeMem(0x23bc, { 0x75 });
        gbc.writeMem(0xf220, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x4a25);
        EXPECT(gbc.pc(), 0x23bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf220), 0x20);
        // 75 0392
        gbc.setState(0x5b41, 0x4d08, 0xc2a0, 0xb2f3, 0x9d0b, 0xbfa4, 0x1, 0x0);
        gbc.writeMem(0x5b41, { 0x75 });
        gbc.writeMem(0xbfa4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x4d08);
        EXPECT(gbc.pc(), 0x5b42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfa4), 0xa4);
        // 75 0394
        gbc.setState(0xae41, 0xa4f1, 0x1cf0, 0xd014, 0x160c, 0x8865, 0x1, 0x0);
        gbc.writeMem(0x8865, { 0x0 });
        gbc.writeMem(0xae41, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xa4f1);
        EXPECT(gbc.pc(), 0xae42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8865), 0x65);
        EXPECT(gbc.readMem(0xae41), 0x75);
        // 75 0396
        gbc.setState(0xe6d3, 0xa519, 0xe9e0, 0x7b54, 0x2139, 0xe2b5, 0x0, 0x1);
        gbc.writeMem(0xe2b5, { 0x0 });
        gbc.writeMem(0xe6d3, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xa519);
        EXPECT(gbc.pc(), 0xe6d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2b5), 0xb5);
        EXPECT(gbc.readMem(0xe6d3), 0x75);
        // 75 039C
        gbc.setState(0x4ba0, 0xdba5, 0xb8b0, 0x1524, 0x4f9d, 0xcd4f, 0x1, 0x1);
        gbc.writeMem(0x4ba0, { 0x75 });
        gbc.writeMem(0xcd4f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xdba5);
        EXPECT(gbc.pc(), 0x4ba1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd4f), 0x4f);
        // 75 039F
        gbc.setState(0xb033, 0x9423, 0x1270, 0xd037, 0x4cbd, 0xb461, 0x1, 0x0);
        gbc.writeMem(0xb033, { 0x75 });
        gbc.writeMem(0xb461, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x9423);
        EXPECT(gbc.pc(), 0xb034);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb033), 0x75);
        EXPECT(gbc.readMem(0xb461), 0x61);
        // 75 03A0
        gbc.setState(0xd4d2, 0x5757, 0x7b10, 0x2fd6, 0xf82d, 0x893a, 0x0, 0x0);
        gbc.writeMem(0x893a, { 0x0 });
        gbc.writeMem(0xd4d2, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x5757);
        EXPECT(gbc.pc(), 0xd4d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x893a), 0x3a);
        EXPECT(gbc.readMem(0xd4d2), 0x75);
        // 75 03A6
        gbc.setState(0xd14f, 0x11c0, 0x5180, 0x41f6, 0x662c, 0xf31c, 0x0, 0x1);
        gbc.writeMem(0xd14f, { 0x75 });
        gbc.writeMem(0xf31c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x11c0);
        EXPECT(gbc.pc(), 0xd150);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd14f), 0x75);
        EXPECT(gbc.readMem(0xf31c), 0x1c);
        // 75 03A8
        gbc.setState(0xbfb8, 0xc820, 0x6a20, 0x8922, 0xd3dc, 0x8d8f, 0x1, 0x1);
        gbc.writeMem(0x8d8f, { 0x0 });
        gbc.writeMem(0xbfb8, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xc820);
        EXPECT(gbc.pc(), 0xbfb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d8f), 0x8f);
        EXPECT(gbc.readMem(0xbfb8), 0x75);
        // 75 03AA
        gbc.setState(0x4f16, 0x12a7, 0x4e60, 0x2d13, 0x2cbc, 0xf1f5, 0x1, 0x1);
        gbc.writeMem(0x4f16, { 0x75 });
        gbc.writeMem(0xf1f5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x12a7);
        EXPECT(gbc.pc(), 0x4f17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf1f5), 0xf5);
        // 75 03AC
        gbc.setState(0x96a2, 0xb41, 0x68d0, 0xfebb, 0x987f, 0x902e, 0x1, 0x0);
        gbc.writeMem(0x902e, { 0x0 });
        gbc.writeMem(0x96a2, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xb41);
        EXPECT(gbc.pc(), 0x96a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x902e), 0x2e);
        EXPECT(gbc.readMem(0x96a2), 0x75);
        // 75 03AE
        gbc.setState(0x5efa, 0x9599, 0xf830, 0x2545, 0x8d78, 0xa7b5, 0x0, 0x1);
        gbc.writeMem(0x5efa, { 0x75 });
        gbc.writeMem(0xa7b5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x9599);
        EXPECT(gbc.pc(), 0x5efb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7b5), 0xb5);
        // 75 03AF
        gbc.setState(0x4fed, 0xb3dc, 0x5290, 0xc992, 0x488d, 0xc961, 0x1, 0x1);
        gbc.writeMem(0x4fed, { 0x75 });
        gbc.writeMem(0xc961, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xb3dc);
        EXPECT(gbc.pc(), 0x4fee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc961), 0x61);
        // 75 03B2
        gbc.setState(0xa850, 0x316b, 0x7440, 0x5a43, 0xef55, 0xa49a, 0x0, 0x1);
        gbc.writeMem(0xa49a, { 0x0 });
        gbc.writeMem(0xa850, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x316b);
        EXPECT(gbc.pc(), 0xa851);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa49a), 0x9a);
        EXPECT(gbc.readMem(0xa850), 0x75);
        // 75 03B4
        gbc.setState(0xab8a, 0x6217, 0x5200, 0xe55, 0x6b40, 0x92b5, 0x0, 0x0);
        gbc.writeMem(0x92b5, { 0x0 });
        gbc.writeMem(0xab8a, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x6217);
        EXPECT(gbc.pc(), 0xab8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92b5), 0xb5);
        EXPECT(gbc.readMem(0xab8a), 0x75);
        // 75 03B5
        gbc.setState(0xb1a5, 0x120f, 0xf410, 0x4601, 0x3478, 0xcb93, 0x0, 0x1);
        gbc.writeMem(0xb1a5, { 0x75 });
        gbc.writeMem(0xcb93, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x120f);
        EXPECT(gbc.pc(), 0xb1a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1a5), 0x75);
        EXPECT(gbc.readMem(0xcb93), 0x93);
        // 75 03B6
        gbc.setState(0x2953, 0x5e98, 0x4160, 0x11eb, 0x9f0, 0x8072, 0x0, 0x0);
        gbc.writeMem(0x2953, { 0x75 });
        gbc.writeMem(0x8072, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x5e98);
        EXPECT(gbc.pc(), 0x2954);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8072), 0x72);
        // 75 03B8
        gbc.setState(0x9981, 0x6b8b, 0xc460, 0x184e, 0xfbf5, 0xb677, 0x1, 0x1);
        gbc.writeMem(0x9981, { 0x75 });
        gbc.writeMem(0xb677, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x6b8b);
        EXPECT(gbc.pc(), 0x9982);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9981), 0x75);
        EXPECT(gbc.readMem(0xb677), 0x77);
        // 75 03B9
        gbc.setState(0xe448, 0x41d8, 0xdb0, 0x4a2b, 0xc751, 0xd66a, 0x1, 0x1);
        gbc.writeMem(0xd66a, { 0x0 });
        gbc.writeMem(0xe448, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x41d8);
        EXPECT(gbc.pc(), 0xe449);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd66a), 0x6a);
        EXPECT(gbc.readMem(0xe448), 0x75);
        // 75 03BB
        gbc.setState(0x47b2, 0x805c, 0x4620, 0x6788, 0x7891, 0xe7a2, 0x0, 0x1);
        gbc.writeMem(0x47b2, { 0x75 });
        gbc.writeMem(0xe7a2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x805c);
        EXPECT(gbc.pc(), 0x47b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7a2), 0xa2);
        // 75 03BF
        gbc.setState(0x5097, 0x6adf, 0x7360, 0x1aea, 0x39ad, 0xeff3, 0x1, 0x0);
        gbc.writeMem(0x5097, { 0x75 });
        gbc.writeMem(0xeff3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x6adf);
        EXPECT(gbc.pc(), 0x5098);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeff3), 0xf3);
        // 75 03C1
        gbc.setState(0x35d3, 0x3f63, 0xc9e0, 0xeb7f, 0x3c41, 0xb75c, 0x1, 0x0);
        gbc.writeMem(0x35d3, { 0x75 });
        gbc.writeMem(0xb75c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x3f63);
        EXPECT(gbc.pc(), 0x35d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb75c), 0x5c);
        // 75 03C2
        gbc.setState(0xbf9c, 0xd27c, 0xf740, 0xb15c, 0x5240, 0xfc8a, 0x1, 0x0);
        gbc.writeMem(0xbf9c, { 0x75 });
        gbc.writeMem(0xfc8a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xd27c);
        EXPECT(gbc.pc(), 0xbf9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf9c), 0x75);
        EXPECT(gbc.readMem(0xfc8a), 0x8a);
        // 75 03C4
        gbc.setState(0xef8a, 0xe369, 0x3860, 0xdc27, 0x25c8, 0x943f, 0x1, 0x1);
        gbc.writeMem(0x943f, { 0x0 });
        gbc.writeMem(0xef8a, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xe369);
        EXPECT(gbc.pc(), 0xef8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x943f), 0x3f);
        EXPECT(gbc.readMem(0xef8a), 0x75);
        // 75 03C6
        gbc.setState(0xde39, 0x6d3b, 0x6e0, 0xf324, 0x76cf, 0x8332, 0x0, 0x0);
        gbc.writeMem(0x8332, { 0x0 });
        gbc.writeMem(0xde39, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x6d3b);
        EXPECT(gbc.pc(), 0xde3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8332), 0x32);
        EXPECT(gbc.readMem(0xde39), 0x75);
        // 75 03C7
        gbc.setState(0xa60, 0x2b27, 0x25a0, 0x1158, 0xeb6b, 0x8134, 0x0, 0x0);
        gbc.writeMem(0xa60, { 0x75 });
        gbc.writeMem(0x8134, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x2b27);
        EXPECT(gbc.pc(), 0xa61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8134), 0x34);
        // 75 03C8
        gbc.setState(0x4736, 0x87a9, 0xfbc0, 0xa8e0, 0x3f54, 0xcfee, 0x1, 0x0);
        gbc.writeMem(0x4736, { 0x75 });
        gbc.writeMem(0xcfee, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x87a9);
        EXPECT(gbc.pc(), 0x4737);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfee), 0xee);
        // 75 03CD
        gbc.setState(0x27f4, 0x715a, 0x6ff0, 0x128c, 0xdb46, 0x87d4, 0x1, 0x1);
        gbc.writeMem(0x27f4, { 0x75 });
        gbc.writeMem(0x87d4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x715a);
        EXPECT(gbc.pc(), 0x27f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87d4), 0xd4);
        // 75 03CF
        gbc.setState(0xdd3, 0x546, 0xf8b0, 0x4929, 0xbdcf, 0xe56d, 0x0, 0x1);
        gbc.writeMem(0xdd3, { 0x75 });
        gbc.writeMem(0xe56d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x546);
        EXPECT(gbc.pc(), 0xdd4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe56d), 0x6d);
        // 75 03D0
        gbc.setState(0x1150, 0x8684, 0xcf50, 0x5709, 0xf5ce, 0xb74f, 0x1, 0x1);
        gbc.writeMem(0x1150, { 0x75 });
        gbc.writeMem(0xb74f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x8684);
        EXPECT(gbc.pc(), 0x1151);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb74f), 0x4f);
        // 75 03D1
        gbc.setState(0xa397, 0x3287, 0x6370, 0xcdbe, 0xbd, 0xad6c, 0x1, 0x0);
        gbc.writeMem(0xa397, { 0x75 });
        gbc.writeMem(0xad6c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x3287);
        EXPECT(gbc.pc(), 0xa398);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa397), 0x75);
        EXPECT(gbc.readMem(0xad6c), 0x6c);
        // 75 03D5
        gbc.setState(0x2ebf, 0xbad2, 0xa6c0, 0xa8da, 0x2de1, 0xb201, 0x0, 0x1);
        gbc.writeMem(0x2ebf, { 0x75 });
        gbc.writeMem(0xb201, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xbad2);
        EXPECT(gbc.pc(), 0x2ec0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb201), 0x1);
        // 75 03D7
        gbc.setState(0x4675, 0x8ea3, 0xad70, 0xd78e, 0xc46b, 0xfd98, 0x0, 0x0);
        gbc.writeMem(0x4675, { 0x75 });
        gbc.writeMem(0xfd98, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x8ea3);
        EXPECT(gbc.pc(), 0x4676);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfd98), 0x98);
        // 75 03D9
        gbc.setState(0xe9c1, 0xb42e, 0xf3e0, 0x185d, 0xd40b, 0x9b43, 0x1, 0x1);
        gbc.writeMem(0x9b43, { 0x0 });
        gbc.writeMem(0xe9c1, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xb42e);
        EXPECT(gbc.pc(), 0xe9c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b43), 0x43);
        EXPECT(gbc.readMem(0xe9c1), 0x75);
        // 75 03DA
        gbc.setState(0x3d33, 0x4610, 0xa140, 0xb690, 0x4a41, 0xe16f, 0x0, 0x0);
        gbc.writeMem(0x3d33, { 0x75 });
        gbc.writeMem(0xe16f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x4610);
        EXPECT(gbc.pc(), 0x3d34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe16f), 0x6f);
        // 75 03DB
        gbc.setState(0xc60, 0x8252, 0x7470, 0x3274, 0xf33d, 0xd24c, 0x1, 0x0);
        gbc.writeMem(0xc60, { 0x75 });
        gbc.writeMem(0xd24c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x8252);
        EXPECT(gbc.pc(), 0xc61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd24c), 0x4c);
        // 75 03DC
        gbc.setState(0xc7a5, 0xa5da, 0xc990, 0x234b, 0xd99e, 0xb67e, 0x1, 0x1);
        gbc.writeMem(0xb67e, { 0x0 });
        gbc.writeMem(0xc7a5, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xa5da);
        EXPECT(gbc.pc(), 0xc7a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb67e), 0x7e);
        EXPECT(gbc.readMem(0xc7a5), 0x75);
        // 75 03DE
        gbc.setState(0x1a62, 0x7dd, 0xcf70, 0x5de6, 0x17d3, 0xdef8, 0x0, 0x0);
        gbc.writeMem(0x1a62, { 0x75 });
        gbc.writeMem(0xdef8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x7dd);
        EXPECT(gbc.pc(), 0x1a63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdef8), 0xf8);
        // 75 03E4
        gbc.setState(0x483d, 0xabc3, 0xaeb0, 0xc67e, 0x90f2, 0xedbe, 0x0, 0x1);
        gbc.writeMem(0x483d, { 0x75 });
        gbc.writeMem(0xedbe, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xabc3);
        EXPECT(gbc.pc(), 0x483e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedbe), 0xbe);
        // 75 03E5
        gbc.setState(0x8ab9, 0x162d, 0x2110, 0x4918, 0xc5be, 0x9834, 0x1, 0x0);
        gbc.writeMem(0x8ab9, { 0x75 });
        gbc.writeMem(0x9834, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x162d);
        EXPECT(gbc.pc(), 0x8aba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ab9), 0x75);
        EXPECT(gbc.readMem(0x9834), 0x34);
    }
