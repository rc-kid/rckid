    TEST(gbcemu, opcode_75) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 75 0000
        gbc.setState(0xa257, 0x9447, 0x2c0, 0x5ddf, 0x75f8, 0xab27, 0x0, 0x0);
        gbc.writeMem(0xa257, { 0x75 });
        gbc.writeMem(0xab27, { 0x0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x9447, gbc.sp());
        EXPECT(0xa258, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xa257));
        EXPECT(0x27, gbc.readMem(0xab27));
        // 75 0002
        gbc.setState(0x3501, 0xe693, 0xde40, 0xaf3f, 0x6e97, 0x9d67, 0x1, 0x1);
        gbc.writeMem(0x3501, { 0x75 });
        gbc.writeMem(0x9d67, { 0x0 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xe693, gbc.sp());
        EXPECT(0x3502, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x67, gbc.readMem(0x9d67));
        // 75 0003
        gbc.setState(0x2d7b, 0xac32, 0xb8a0, 0x24d8, 0xf8ce, 0xef0c, 0x0, 0x1);
        gbc.writeMem(0x2d7b, { 0x75 });
        gbc.writeMem(0xef0c, { 0x0 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xac32, gbc.sp());
        EXPECT(0x2d7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xef0c));
        // 75 0004
        gbc.setState(0xe61e, 0xbbd7, 0xbb10, 0x8242, 0x77d3, 0xd2b2, 0x1, 0x0);
        gbc.writeMem(0xd2b2, { 0x0 });
        gbc.writeMem(0xe61e, { 0x75 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xbbd7, gbc.sp());
        EXPECT(0xe61f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xd2b2));
        EXPECT(0x75, gbc.readMem(0xe61e));
        // 75 0006
        gbc.setState(0x21df, 0x16b8, 0x3320, 0x9ceb, 0x36ee, 0xe637, 0x1, 0x0);
        gbc.writeMem(0x21df, { 0x75 });
        gbc.writeMem(0xe637, { 0x0 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x16b8, gbc.sp());
        EXPECT(0x21e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xe637));
        // 75 000B
        gbc.setState(0xdaa7, 0x70c, 0x3a70, 0xda9f, 0x6c20, 0xa312, 0x0, 0x0);
        gbc.writeMem(0xa312, { 0x0 });
        gbc.writeMem(0xdaa7, { 0x75 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x70c, gbc.sp());
        EXPECT(0xdaa8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xa312));
        EXPECT(0x75, gbc.readMem(0xdaa7));
        // 75 000E
        gbc.setState(0xe4ac, 0x91b2, 0x3310, 0xb10a, 0x2555, 0xc7ef, 0x0, 0x1);
        gbc.writeMem(0xc7ef, { 0x0 });
        gbc.writeMem(0xe4ac, { 0x75 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x91b2, gbc.sp());
        EXPECT(0xe4ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0xc7ef));
        EXPECT(0x75, gbc.readMem(0xe4ac));
        // 75 0010
        gbc.setState(0x2f92, 0x7bca, 0xed50, 0xd2dd, 0xd37e, 0xeac6, 0x1, 0x1);
        gbc.writeMem(0x2f92, { 0x75 });
        gbc.writeMem(0xeac6, { 0x0 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x7bca, gbc.sp());
        EXPECT(0x2f93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xeac6));
        // 75 0011
        gbc.setState(0xdfb3, 0x22c5, 0xa2b0, 0x9cda, 0xeb4, 0xbaea, 0x0, 0x0);
        gbc.writeMem(0xbaea, { 0x0 });
        gbc.writeMem(0xdfb3, { 0x75 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x22c5, gbc.sp());
        EXPECT(0xdfb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0xbaea));
        EXPECT(0x75, gbc.readMem(0xdfb3));
        // 75 0016
        gbc.setState(0x4a56, 0x3458, 0x6af0, 0xa914, 0x23e9, 0xd3c2, 0x0, 0x1);
        gbc.writeMem(0x4a56, { 0x75 });
        gbc.writeMem(0xd3c2, { 0x0 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x3458, gbc.sp());
        EXPECT(0x4a57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xd3c2));
        // 75 0018
        gbc.setState(0xcec5, 0xaba1, 0x55f0, 0x3946, 0x570, 0xfd18, 0x1, 0x0);
        gbc.writeMem(0xcec5, { 0x75 });
        gbc.writeMem(0xfd18, { 0x0 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xaba1, gbc.sp());
        EXPECT(0xcec6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xcec5));
        EXPECT(0x18, gbc.readMem(0xfd18));
        // 75 001A
        gbc.setState(0x75c, 0xc8da, 0x8720, 0x20b1, 0xb7bb, 0x9bd8, 0x1, 0x1);
        gbc.writeMem(0x75c, { 0x75 });
        gbc.writeMem(0x9bd8, { 0x0 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xc8da, gbc.sp());
        EXPECT(0x75d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0x9bd8));
        // 75 0020
        gbc.setState(0x5948, 0xea25, 0x3e80, 0x2313, 0xbc35, 0xc074, 0x0, 0x0);
        gbc.writeMem(0x5948, { 0x75 });
        gbc.writeMem(0xc074, { 0x0 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xea25, gbc.sp());
        EXPECT(0x5949, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xc074));
        // 75 0023
        gbc.setState(0x9b3a, 0x9c0e, 0x94b0, 0xa510, 0x1aab, 0x9338, 0x1, 0x1);
        gbc.writeMem(0x9338, { 0x0 });
        gbc.writeMem(0x9b3a, { 0x75 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x9c0e, gbc.sp());
        EXPECT(0x9b3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x9338));
        EXPECT(0x75, gbc.readMem(0x9b3a));
        // 75 0024
        gbc.setState(0xcba3, 0xcc16, 0x48b0, 0xe609, 0x8246, 0xbb77, 0x1, 0x0);
        gbc.writeMem(0xbb77, { 0x0 });
        gbc.writeMem(0xcba3, { 0x75 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xcc16, gbc.sp());
        EXPECT(0xcba4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xbb77));
        EXPECT(0x75, gbc.readMem(0xcba3));
        // 75 0026
        gbc.setState(0x899d, 0x339, 0xa820, 0xb2d6, 0xedc0, 0xdf71, 0x1, 0x1);
        gbc.writeMem(0x899d, { 0x75 });
        gbc.writeMem(0xdf71, { 0x0 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x339, gbc.sp());
        EXPECT(0x899e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x899d));
        EXPECT(0x71, gbc.readMem(0xdf71));
        // 75 0027
        gbc.setState(0x40b6, 0x19c8, 0xf640, 0xb93c, 0xd1f6, 0x97aa, 0x0, 0x1);
        gbc.writeMem(0x40b6, { 0x75 });
        gbc.writeMem(0x97aa, { 0x0 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x19c8, gbc.sp());
        EXPECT(0x40b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x97aa));
        // 75 0029
        gbc.setState(0xa75, 0xe41b, 0xa350, 0x7d4c, 0x291, 0xcb47, 0x0, 0x1);
        gbc.writeMem(0xa75, { 0x75 });
        gbc.writeMem(0xcb47, { 0x0 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xe41b, gbc.sp());
        EXPECT(0xa76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xcb47));
        // 75 002B
        gbc.setState(0x1b40, 0x164b, 0xcf40, 0x16ac, 0x1549, 0xf313, 0x0, 0x1);
        gbc.writeMem(0x1b40, { 0x75 });
        gbc.writeMem(0xf313, { 0x0 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x164b, gbc.sp());
        EXPECT(0x1b41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xf313));
        // 75 002C
        gbc.setState(0x59cc, 0x5d0a, 0x7720, 0xc549, 0x9846, 0xe19d, 0x1, 0x0);
        gbc.writeMem(0x59cc, { 0x75 });
        gbc.writeMem(0xe19d, { 0x0 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x5d0a, gbc.sp());
        EXPECT(0x59cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xe19d));
        // 75 002D
        gbc.setState(0xd85, 0x7f7d, 0x41f0, 0xdfa7, 0x411a, 0xa274, 0x0, 0x1);
        gbc.writeMem(0xd85, { 0x75 });
        gbc.writeMem(0xa274, { 0x0 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x7f7d, gbc.sp());
        EXPECT(0xd86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xa274));
        // 75 002E
        gbc.setState(0x9462, 0x2308, 0x3c10, 0x7978, 0xfcdb, 0xff56, 0x0, 0x1);
        gbc.writeMem(0x9462, { 0x75 });
        gbc.writeMem(0xff56, { 0x0 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x2308, gbc.sp());
        EXPECT(0x9463, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x9462));
        EXPECT(0x56, gbc.readMem(0xff56));
        // 75 002F
        gbc.setState(0x5fe2, 0xff00, 0xd740, 0x5367, 0x4830, 0xbb15, 0x1, 0x0);
        gbc.writeMem(0x5fe2, { 0x75 });
        gbc.writeMem(0xbb15, { 0x0 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xff00, gbc.sp());
        EXPECT(0x5fe3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xbb15));
        // 75 0034
        gbc.setState(0x85bf, 0x7fe1, 0x5fc0, 0x5f0f, 0x686b, 0x86e4, 0x1, 0x0);
        gbc.writeMem(0x85bf, { 0x75 });
        gbc.writeMem(0x86e4, { 0x0 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x7fe1, gbc.sp());
        EXPECT(0x85c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x85bf));
        EXPECT(0xe4, gbc.readMem(0x86e4));
        // 75 0036
        gbc.setState(0x4217, 0x3809, 0x54d0, 0xe827, 0xdf4d, 0xd519, 0x1, 0x1);
        gbc.writeMem(0x4217, { 0x75 });
        gbc.writeMem(0xd519, { 0x0 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x3809, gbc.sp());
        EXPECT(0x4218, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xd519));
        // 75 0039
        gbc.setState(0x3f45, 0xa289, 0xc3b0, 0x9e91, 0x7732, 0x9f70, 0x1, 0x1);
        gbc.writeMem(0x3f45, { 0x75 });
        gbc.writeMem(0x9f70, { 0x0 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xa289, gbc.sp());
        EXPECT(0x3f46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0x9f70));
        // 75 003A
        gbc.setState(0x311b, 0x1825, 0x120, 0xf48f, 0xee5b, 0xbd41, 0x1, 0x1);
        gbc.writeMem(0x311b, { 0x75 });
        gbc.writeMem(0xbd41, { 0x0 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x1825, gbc.sp());
        EXPECT(0x311c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x41, gbc.readMem(0xbd41));
        // 75 003B
        gbc.setState(0x3c42, 0x591b, 0xd680, 0x6cc4, 0x5ab0, 0xb823, 0x1, 0x1);
        gbc.writeMem(0x3c42, { 0x75 });
        gbc.writeMem(0xb823, { 0x0 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x591b, gbc.sp());
        EXPECT(0x3c43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x23, gbc.readMem(0xb823));
        // 75 003D
        gbc.setState(0x3a77, 0xf696, 0x2870, 0x7ced, 0x34e4, 0xeec3, 0x1, 0x0);
        gbc.writeMem(0x3a77, { 0x75 });
        gbc.writeMem(0xeec3, { 0x0 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xf696, gbc.sp());
        EXPECT(0x3a78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xeec3));
        // 75 003E
        gbc.setState(0xc0f6, 0xb6a4, 0xeb00, 0xae28, 0x6766, 0x9698, 0x0, 0x0);
        gbc.writeMem(0x9698, { 0x0 });
        gbc.writeMem(0xc0f6, { 0x75 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xb6a4, gbc.sp());
        EXPECT(0xc0f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x9698));
        EXPECT(0x75, gbc.readMem(0xc0f6));
        // 75 0042
        gbc.setState(0x7f2b, 0xf2f0, 0x7230, 0xf3b2, 0x6e1e, 0xe4b2, 0x0, 0x1);
        gbc.writeMem(0x7f2b, { 0x75 });
        gbc.writeMem(0xe4b2, { 0x0 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xf2f0, gbc.sp());
        EXPECT(0x7f2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xe4b2));
        // 75 0043
        gbc.setState(0xab5b, 0xea4e, 0x6b0, 0xada6, 0x40c2, 0xbbd5, 0x0, 0x0);
        gbc.writeMem(0xab5b, { 0x75 });
        gbc.writeMem(0xbbd5, { 0x0 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xea4e, gbc.sp());
        EXPECT(0xab5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xab5b));
        EXPECT(0xd5, gbc.readMem(0xbbd5));
        // 75 0044
        gbc.setState(0xe8f1, 0xcbf8, 0xe3d0, 0x886b, 0x9607, 0x8438, 0x1, 0x1);
        gbc.writeMem(0x8438, { 0x0 });
        gbc.writeMem(0xe8f1, { 0x75 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xcbf8, gbc.sp());
        EXPECT(0xe8f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x8438));
        EXPECT(0x75, gbc.readMem(0xe8f1));
        // 75 0047
        gbc.setState(0x63b8, 0x5c50, 0xcd20, 0x1731, 0x801, 0xbcfa, 0x1, 0x1);
        gbc.writeMem(0x63b8, { 0x75 });
        gbc.writeMem(0xbcfa, { 0x0 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x5c50, gbc.sp());
        EXPECT(0x63b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xbcfa));
        // 75 0048
        gbc.setState(0x8d5e, 0xe693, 0x9d90, 0x4665, 0xf4de, 0x9c71, 0x0, 0x1);
        gbc.writeMem(0x8d5e, { 0x75 });
        gbc.writeMem(0x9c71, { 0x0 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xe693, gbc.sp());
        EXPECT(0x8d5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x8d5e));
        EXPECT(0x71, gbc.readMem(0x9c71));
        // 75 004D
        gbc.setState(0x9030, 0xd5fd, 0xfa70, 0x3d4, 0x63c3, 0xcb84, 0x0, 0x1);
        gbc.writeMem(0x9030, { 0x75 });
        gbc.writeMem(0xcb84, { 0x0 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xd5fd, gbc.sp());
        EXPECT(0x9031, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x9030));
        EXPECT(0x84, gbc.readMem(0xcb84));
        // 75 004F
        gbc.setState(0x912, 0x5bf0, 0x7d70, 0xa78a, 0xed72, 0xbb59, 0x0, 0x0);
        gbc.writeMem(0x912, { 0x75 });
        gbc.writeMem(0xbb59, { 0x0 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x5bf0, gbc.sp());
        EXPECT(0x913, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x59, gbc.readMem(0xbb59));
        // 75 0053
        gbc.setState(0xb6f1, 0x757a, 0xb020, 0x92fd, 0xb5e0, 0xb8d9, 0x1, 0x1);
        gbc.writeMem(0xb6f1, { 0x75 });
        gbc.writeMem(0xb8d9, { 0x0 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x757a, gbc.sp());
        EXPECT(0xb6f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xb6f1));
        EXPECT(0xd9, gbc.readMem(0xb8d9));
        // 75 0055
        gbc.setState(0x6887, 0x693, 0x2540, 0x772, 0x3cdb, 0xdc38, 0x1, 0x0);
        gbc.writeMem(0x6887, { 0x75 });
        gbc.writeMem(0xdc38, { 0x0 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x693, gbc.sp());
        EXPECT(0x6888, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xdc38));
        // 75 0056
        gbc.setState(0x61cc, 0x659, 0x84a0, 0x2ce6, 0x2ed, 0xc05b, 0x0, 0x0);
        gbc.writeMem(0x61cc, { 0x75 });
        gbc.writeMem(0xc05b, { 0x0 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x659, gbc.sp());
        EXPECT(0x61cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xc05b));
        // 75 0059
        gbc.setState(0x3abc, 0xe96a, 0x72f0, 0xa81a, 0x103b, 0xab34, 0x0, 0x1);
        gbc.writeMem(0x3abc, { 0x75 });
        gbc.writeMem(0xab34, { 0x0 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xe96a, gbc.sp());
        EXPECT(0x3abd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xab34));
        // 75 005A
        gbc.setState(0xd669, 0xc885, 0xda50, 0x6cad, 0x1215, 0xbd3d, 0x0, 0x1);
        gbc.writeMem(0xbd3d, { 0x0 });
        gbc.writeMem(0xd669, { 0x75 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xc885, gbc.sp());
        EXPECT(0xd66a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3d, gbc.readMem(0xbd3d));
        EXPECT(0x75, gbc.readMem(0xd669));
        // 75 005C
        gbc.setState(0xb968, 0x5a96, 0xaae0, 0xbe15, 0x3733, 0xa73d, 0x1, 0x0);
        gbc.writeMem(0xa73d, { 0x0 });
        gbc.writeMem(0xb968, { 0x75 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x5a96, gbc.sp());
        EXPECT(0xb969, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3d, gbc.readMem(0xa73d));
        EXPECT(0x75, gbc.readMem(0xb968));
        // 75 005D
        gbc.setState(0x16b8, 0xb70f, 0xd880, 0xd401, 0xa661, 0x9f91, 0x0, 0x1);
        gbc.writeMem(0x16b8, { 0x75 });
        gbc.writeMem(0x9f91, { 0x0 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xb70f, gbc.sp());
        EXPECT(0x16b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x9f91));
        // 75 0061
        gbc.setState(0x5295, 0xea52, 0x90e0, 0x5ff0, 0xad72, 0xd8c1, 0x1, 0x0);
        gbc.writeMem(0x5295, { 0x75 });
        gbc.writeMem(0xd8c1, { 0x0 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xea52, gbc.sp());
        EXPECT(0x5296, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xd8c1));
        // 75 0067
        gbc.setState(0x4f6c, 0x66df, 0x3930, 0x9cb4, 0x5f2b, 0xde60, 0x0, 0x1);
        gbc.writeMem(0x4f6c, { 0x75 });
        gbc.writeMem(0xde60, { 0x0 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x66df, gbc.sp());
        EXPECT(0x4f6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0xde60));
        // 75 0068
        gbc.setState(0x6eb1, 0xc742, 0x9960, 0x2636, 0x5f9c, 0xa356, 0x0, 0x1);
        gbc.writeMem(0x6eb1, { 0x75 });
        gbc.writeMem(0xa356, { 0x0 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xc742, gbc.sp());
        EXPECT(0x6eb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xa356));
        // 75 006A
        gbc.setState(0x8875, 0x611d, 0x7700, 0xfe04, 0x7dac, 0xcc8e, 0x1, 0x1);
        gbc.writeMem(0x8875, { 0x75 });
        gbc.writeMem(0xcc8e, { 0x0 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x611d, gbc.sp());
        EXPECT(0x8876, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x8875));
        EXPECT(0x8e, gbc.readMem(0xcc8e));
        // 75 0071
        gbc.setState(0x7167, 0xbf71, 0x8d80, 0xf571, 0x8860, 0x8e8e, 0x1, 0x0);
        gbc.writeMem(0x7167, { 0x75 });
        gbc.writeMem(0x8e8e, { 0x0 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xbf71, gbc.sp());
        EXPECT(0x7168, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0x8e8e));
        // 75 0072
        gbc.setState(0x2b99, 0x30b4, 0xda30, 0x7bb6, 0xc646, 0xeb79, 0x1, 0x0);
        gbc.writeMem(0x2b99, { 0x75 });
        gbc.writeMem(0xeb79, { 0x0 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x30b4, gbc.sp());
        EXPECT(0x2b9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xeb79));
        // 75 0074
        gbc.setState(0x8b4, 0xd416, 0x1a50, 0x53b1, 0x2d69, 0xfff6, 0x1, 0x0);
        gbc.writeMem(0x8b4, { 0x75 });
        gbc.writeMem(0xfff6, { 0x0 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xd416, gbc.sp());
        EXPECT(0x8b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf6, gbc.readMem(0xfff6));
        // 75 0076
        gbc.setState(0xb98c, 0xcbcc, 0x5200, 0xcb1d, 0xb49a, 0xa46f, 0x1, 0x0);
        gbc.writeMem(0xa46f, { 0x0 });
        gbc.writeMem(0xb98c, { 0x75 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xcbcc, gbc.sp());
        EXPECT(0xb98d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6f, gbc.readMem(0xa46f));
        EXPECT(0x75, gbc.readMem(0xb98c));
        // 75 0078
        gbc.setState(0x7719, 0x701, 0xd660, 0xa206, 0xe017, 0xf316, 0x0, 0x1);
        gbc.writeMem(0x7719, { 0x75 });
        gbc.writeMem(0xf316, { 0x0 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x701, gbc.sp());
        EXPECT(0x771a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xf316));
        // 75 0079
        gbc.setState(0x1d77, 0x8838, 0x520, 0x62f5, 0x53a4, 0xec91, 0x0, 0x1);
        gbc.writeMem(0x1d77, { 0x75 });
        gbc.writeMem(0xec91, { 0x0 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x8838, gbc.sp());
        EXPECT(0x1d78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xec91));
        // 75 007D
        gbc.setState(0xc42e, 0x9f98, 0x55a0, 0xee24, 0x5289, 0xf8c2, 0x0, 0x0);
        gbc.writeMem(0xc42e, { 0x75 });
        gbc.writeMem(0xf8c2, { 0x0 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x9f98, gbc.sp());
        EXPECT(0xc42f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xc42e));
        EXPECT(0xc2, gbc.readMem(0xf8c2));
        // 75 007F
        gbc.setState(0x6e80, 0xdbf2, 0x9b90, 0xac66, 0x484b, 0x978a, 0x1, 0x0);
        gbc.writeMem(0x6e80, { 0x75 });
        gbc.writeMem(0x978a, { 0x0 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xdbf2, gbc.sp());
        EXPECT(0x6e81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x978a));
        // 75 0080
        gbc.setState(0x1f88, 0x67c8, 0x8fa0, 0x5ce3, 0xd561, 0xec0b, 0x0, 0x0);
        gbc.writeMem(0x1f88, { 0x75 });
        gbc.writeMem(0xec0b, { 0x0 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x67c8, gbc.sp());
        EXPECT(0x1f89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xec0b));
        // 75 0082
        gbc.setState(0x3679, 0x5168, 0x7f30, 0xb193, 0x7c51, 0xa04d, 0x0, 0x1);
        gbc.writeMem(0x3679, { 0x75 });
        gbc.writeMem(0xa04d, { 0x0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x5168, gbc.sp());
        EXPECT(0x367a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xa04d));
        // 75 0083
        gbc.setState(0x8fd9, 0xd28d, 0x330, 0xf45a, 0x840f, 0xe3ae, 0x1, 0x1);
        gbc.writeMem(0x8fd9, { 0x75 });
        gbc.writeMem(0xe3ae, { 0x0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xd28d, gbc.sp());
        EXPECT(0x8fda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x8fd9));
        EXPECT(0xae, gbc.readMem(0xe3ae));
        // 75 0086
        gbc.setState(0x37e2, 0x51f2, 0x8230, 0xcdcb, 0x2dfa, 0xc7a5, 0x0, 0x0);
        gbc.writeMem(0x37e2, { 0x75 });
        gbc.writeMem(0xc7a5, { 0x0 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x51f2, gbc.sp());
        EXPECT(0x37e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa5, gbc.readMem(0xc7a5));
        // 75 0087
        gbc.setState(0xa962, 0x8d6d, 0xfb60, 0x6497, 0x2200, 0xfbcd, 0x0, 0x1);
        gbc.writeMem(0xa962, { 0x75 });
        gbc.writeMem(0xfbcd, { 0x0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x8d6d, gbc.sp());
        EXPECT(0xa963, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xa962));
        EXPECT(0xcd, gbc.readMem(0xfbcd));
        // 75 0089
        gbc.setState(0x60fe, 0x60b7, 0xf850, 0x3aff, 0xe295, 0xbe08, 0x0, 0x1);
        gbc.writeMem(0x60fe, { 0x75 });
        gbc.writeMem(0xbe08, { 0x0 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x60b7, gbc.sp());
        EXPECT(0x60ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0xbe08));
        // 75 008B
        gbc.setState(0xe06, 0x5c0e, 0x45b0, 0x25e3, 0x9d20, 0xce59, 0x1, 0x0);
        gbc.writeMem(0xe06, { 0x75 });
        gbc.writeMem(0xce59, { 0x0 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x5c0e, gbc.sp());
        EXPECT(0xe07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x59, gbc.readMem(0xce59));
        // 75 008D
        gbc.setState(0x2b5a, 0x1410, 0x7440, 0x4813, 0xe602, 0xd8d5, 0x0, 0x1);
        gbc.writeMem(0x2b5a, { 0x75 });
        gbc.writeMem(0xd8d5, { 0x0 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x1410, gbc.sp());
        EXPECT(0x2b5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xd8d5));
        // 75 0090
        gbc.setState(0xb8d5, 0x6bd4, 0x6880, 0x976f, 0xd4aa, 0x8ab6, 0x1, 0x0);
        gbc.writeMem(0x8ab6, { 0x0 });
        gbc.writeMem(0xb8d5, { 0x75 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x6bd4, gbc.sp());
        EXPECT(0xb8d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x8ab6));
        EXPECT(0x75, gbc.readMem(0xb8d5));
        // 75 0091
        gbc.setState(0xbc53, 0x6ad8, 0x700, 0x636e, 0x86, 0xe309, 0x1, 0x1);
        gbc.writeMem(0xbc53, { 0x75 });
        gbc.writeMem(0xe309, { 0x0 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x6ad8, gbc.sp());
        EXPECT(0xbc54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xbc53));
        EXPECT(0x9, gbc.readMem(0xe309));
        // 75 0092
        gbc.setState(0xa9bf, 0x199f, 0x61d0, 0xb89b, 0x770b, 0x8342, 0x0, 0x1);
        gbc.writeMem(0x8342, { 0x0 });
        gbc.writeMem(0xa9bf, { 0x75 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x199f, gbc.sp());
        EXPECT(0xa9c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x8342));
        EXPECT(0x75, gbc.readMem(0xa9bf));
        // 75 0093
        gbc.setState(0x1f22, 0x6a35, 0x3010, 0x297, 0x5e87, 0xbe6b, 0x0, 0x1);
        gbc.writeMem(0x1f22, { 0x75 });
        gbc.writeMem(0xbe6b, { 0x0 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x6a35, gbc.sp());
        EXPECT(0x1f23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6b, gbc.readMem(0xbe6b));
        // 75 0095
        gbc.setState(0x8692, 0xaa4, 0x4530, 0xaf97, 0x21f9, 0xbd78, 0x1, 0x1);
        gbc.writeMem(0x8692, { 0x75 });
        gbc.writeMem(0xbd78, { 0x0 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xaa4, gbc.sp());
        EXPECT(0x8693, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x8692));
        EXPECT(0x78, gbc.readMem(0xbd78));
        // 75 0097
        gbc.setState(0xd3da, 0xfac4, 0xdb30, 0x66e5, 0xf720, 0xed96, 0x1, 0x0);
        gbc.writeMem(0xd3da, { 0x75 });
        gbc.writeMem(0xed96, { 0x0 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xfac4, gbc.sp());
        EXPECT(0xd3db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xd3da));
        EXPECT(0x96, gbc.readMem(0xed96));
        // 75 009E
        gbc.setState(0xbcee, 0x2721, 0x2f00, 0x85ab, 0x73a0, 0xc347, 0x0, 0x1);
        gbc.writeMem(0xbcee, { 0x75 });
        gbc.writeMem(0xc347, { 0x0 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x2721, gbc.sp());
        EXPECT(0xbcef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xbcee));
        EXPECT(0x47, gbc.readMem(0xc347));
        // 75 009F
        gbc.setState(0xc8fb, 0x6115, 0x8a10, 0xb5df, 0x166c, 0x9d90, 0x1, 0x1);
        gbc.writeMem(0x9d90, { 0x0 });
        gbc.writeMem(0xc8fb, { 0x75 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x6115, gbc.sp());
        EXPECT(0xc8fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0x9d90));
        EXPECT(0x75, gbc.readMem(0xc8fb));
        // 75 00A0
        gbc.setState(0x5a20, 0xfe95, 0xeb80, 0x9daf, 0x4de9, 0xe160, 0x0, 0x0);
        gbc.writeMem(0x5a20, { 0x75 });
        gbc.writeMem(0xe160, { 0x0 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xfe95, gbc.sp());
        EXPECT(0x5a21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0xe160));
        // 75 00A1
        gbc.setState(0xcd3d, 0x8420, 0x30, 0xd060, 0x5c1f, 0xcc39, 0x1, 0x0);
        gbc.writeMem(0xcc39, { 0x0 });
        gbc.writeMem(0xcd3d, { 0x75 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x8420, gbc.sp());
        EXPECT(0xcd3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0xcc39));
        EXPECT(0x75, gbc.readMem(0xcd3d));
        // 75 00A5
        gbc.setState(0xe187, 0xfb45, 0xb810, 0x117, 0xd55f, 0x949e, 0x1, 0x0);
        gbc.writeMem(0x949e, { 0x0 });
        gbc.writeMem(0xe187, { 0x75 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xfb45, gbc.sp());
        EXPECT(0xe188, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x949e));
        EXPECT(0x75, gbc.readMem(0xe187));
        // 75 00A9
        gbc.setState(0x3930, 0xaa75, 0x16f0, 0x994c, 0x770, 0x9881, 0x0, 0x1);
        gbc.writeMem(0x3930, { 0x75 });
        gbc.writeMem(0x9881, { 0x0 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xaa75, gbc.sp());
        EXPECT(0x3931, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x9881));
        // 75 00AB
        gbc.setState(0xc1ee, 0x858d, 0xfe50, 0x8fe, 0x6176, 0xaf45, 0x0, 0x0);
        gbc.writeMem(0xaf45, { 0x0 });
        gbc.writeMem(0xc1ee, { 0x75 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x858d, gbc.sp());
        EXPECT(0xc1ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0xaf45));
        EXPECT(0x75, gbc.readMem(0xc1ee));
        // 75 00AC
        gbc.setState(0x2995, 0x226e, 0x7af0, 0x8b54, 0xd49, 0xb447, 0x1, 0x1);
        gbc.writeMem(0x2995, { 0x75 });
        gbc.writeMem(0xb447, { 0x0 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x226e, gbc.sp());
        EXPECT(0x2996, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xb447));
        // 75 00B1
        gbc.setState(0x54d4, 0xcc58, 0x1a0, 0xa58, 0x33fc, 0x87a7, 0x1, 0x0);
        gbc.writeMem(0x54d4, { 0x75 });
        gbc.writeMem(0x87a7, { 0x0 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xcc58, gbc.sp());
        EXPECT(0x54d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x87a7));
        // 75 00B2
        gbc.setState(0x2b18, 0x5f3d, 0x3dd0, 0x4140, 0x38f4, 0xc6f8, 0x0, 0x0);
        gbc.writeMem(0x2b18, { 0x75 });
        gbc.writeMem(0xc6f8, { 0x0 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x5f3d, gbc.sp());
        EXPECT(0x2b19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xc6f8));
        // 75 00B3
        gbc.setState(0x3efa, 0x7b72, 0x8880, 0x89bf, 0xd9bb, 0x9f80, 0x1, 0x0);
        gbc.writeMem(0x3efa, { 0x75 });
        gbc.writeMem(0x9f80, { 0x0 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x7b72, gbc.sp());
        EXPECT(0x3efb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x9f80));
        // 75 00B4
        gbc.setState(0xcb0b, 0xd428, 0x54b0, 0xbdbe, 0x8f0c, 0xd279, 0x0, 0x0);
        gbc.writeMem(0xcb0b, { 0x75 });
        gbc.writeMem(0xd279, { 0x0 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xd428, gbc.sp());
        EXPECT(0xcb0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xcb0b));
        EXPECT(0x79, gbc.readMem(0xd279));
        // 75 00B7
        gbc.setState(0x1fcb, 0xfce3, 0xb310, 0xe8f2, 0x3966, 0x9498, 0x0, 0x1);
        gbc.writeMem(0x1fcb, { 0x75 });
        gbc.writeMem(0x9498, { 0x0 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xfce3, gbc.sp());
        EXPECT(0x1fcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x9498));
        // 75 00B9
        gbc.setState(0x9dec, 0x12e5, 0x33d0, 0x55d1, 0x32d8, 0x92a7, 0x1, 0x1);
        gbc.writeMem(0x92a7, { 0x0 });
        gbc.writeMem(0x9dec, { 0x75 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x12e5, gbc.sp());
        EXPECT(0x9ded, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x92a7));
        EXPECT(0x75, gbc.readMem(0x9dec));
        // 75 00BA
        gbc.setState(0xd54, 0x512e, 0x3b10, 0x2941, 0x7796, 0xbb28, 0x0, 0x0);
        gbc.writeMem(0xd54, { 0x75 });
        gbc.writeMem(0xbb28, { 0x0 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x512e, gbc.sp());
        EXPECT(0xd55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x28, gbc.readMem(0xbb28));
        // 75 00BB
        gbc.setState(0xbd7f, 0xf11b, 0x84a0, 0xafd2, 0xa695, 0x96f4, 0x0, 0x1);
        gbc.writeMem(0x96f4, { 0x0 });
        gbc.writeMem(0xbd7f, { 0x75 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xf11b, gbc.sp());
        EXPECT(0xbd80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0x96f4));
        EXPECT(0x75, gbc.readMem(0xbd7f));
        // 75 00BC
        gbc.setState(0x8c4, 0x5d03, 0xd7b0, 0x369c, 0x19cc, 0xf3dd, 0x1, 0x0);
        gbc.writeMem(0x8c4, { 0x75 });
        gbc.writeMem(0xf3dd, { 0x0 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x5d03, gbc.sp());
        EXPECT(0x8c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0xf3dd));
        // 75 00BD
        gbc.setState(0xbde1, 0xf58e, 0xc620, 0x5cb7, 0x2320, 0xa7f8, 0x0, 0x0);
        gbc.writeMem(0xa7f8, { 0x0 });
        gbc.writeMem(0xbde1, { 0x75 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xf58e, gbc.sp());
        EXPECT(0xbde2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xa7f8));
        EXPECT(0x75, gbc.readMem(0xbde1));
        // 75 00BE
        gbc.setState(0xaf41, 0x1d28, 0xe430, 0x3f51, 0x763a, 0xad49, 0x1, 0x1);
        gbc.writeMem(0xad49, { 0x0 });
        gbc.writeMem(0xaf41, { 0x75 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x1d28, gbc.sp());
        EXPECT(0xaf42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xad49));
        EXPECT(0x75, gbc.readMem(0xaf41));
        // 75 00BF
        gbc.setState(0x7a7d, 0x4b1e, 0xaa20, 0x8dbe, 0x6c92, 0xc87d, 0x0, 0x0);
        gbc.writeMem(0x7a7d, { 0x75 });
        gbc.writeMem(0xc87d, { 0x0 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x4b1e, gbc.sp());
        EXPECT(0x7a7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xc87d));
        // 75 00C1
        gbc.setState(0xd851, 0x376e, 0x9ac0, 0xce59, 0x432e, 0xab32, 0x0, 0x1);
        gbc.writeMem(0xab32, { 0x0 });
        gbc.writeMem(0xd851, { 0x75 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x376e, gbc.sp());
        EXPECT(0xd852, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xab32));
        EXPECT(0x75, gbc.readMem(0xd851));
        // 75 00C5
        gbc.setState(0x39e1, 0x4bb7, 0xb2e0, 0xf983, 0x1b91, 0x9561, 0x1, 0x0);
        gbc.writeMem(0x39e1, { 0x75 });
        gbc.writeMem(0x9561, { 0x0 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x4bb7, gbc.sp());
        EXPECT(0x39e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x9561));
        // 75 00C9
        gbc.setState(0xb0bb, 0xe1bb, 0x3a40, 0x99a1, 0x222c, 0xacab, 0x0, 0x0);
        gbc.writeMem(0xacab, { 0x0 });
        gbc.writeMem(0xb0bb, { 0x75 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xe1bb, gbc.sp());
        EXPECT(0xb0bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xab, gbc.readMem(0xacab));
        EXPECT(0x75, gbc.readMem(0xb0bb));
        // 75 00CD
        gbc.setState(0x94d0, 0xcd1e, 0x8620, 0x9ce1, 0x3cb9, 0x9d61, 0x0, 0x1);
        gbc.writeMem(0x94d0, { 0x75 });
        gbc.writeMem(0x9d61, { 0x0 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xcd1e, gbc.sp());
        EXPECT(0x94d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x94d0));
        EXPECT(0x61, gbc.readMem(0x9d61));
        // 75 00D1
        gbc.setState(0x3f3, 0xe4e4, 0x86e0, 0x5f37, 0x82fe, 0xf478, 0x0, 0x0);
        gbc.writeMem(0x3f3, { 0x75 });
        gbc.writeMem(0xf478, { 0x0 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xe4e4, gbc.sp());
        EXPECT(0x3f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xf478));
        // 75 00D2
        gbc.setState(0x2c9b, 0xf96f, 0xf7a0, 0xc661, 0x3aa9, 0xb244, 0x0, 0x1);
        gbc.writeMem(0x2c9b, { 0x75 });
        gbc.writeMem(0xb244, { 0x0 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xf96f, gbc.sp());
        EXPECT(0x2c9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xb244));
        // 75 00D3
        gbc.setState(0x7cfb, 0x4795, 0x6950, 0x7233, 0xb5d5, 0xf62b, 0x0, 0x1);
        gbc.writeMem(0x7cfb, { 0x75 });
        gbc.writeMem(0xf62b, { 0x0 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x4795, gbc.sp());
        EXPECT(0x7cfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xf62b));
        // 75 00D5
        gbc.setState(0x27ae, 0xaccd, 0xb7e0, 0x7ddc, 0xabed, 0xc790, 0x1, 0x1);
        gbc.writeMem(0x27ae, { 0x75 });
        gbc.writeMem(0xc790, { 0x0 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xaccd, gbc.sp());
        EXPECT(0x27af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0xc790));
        // 75 00D8
        gbc.setState(0x6b5, 0x3417, 0xd620, 0x5be8, 0x3e04, 0x8ace, 0x1, 0x0);
        gbc.writeMem(0x6b5, { 0x75 });
        gbc.writeMem(0x8ace, { 0x0 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x3417, gbc.sp());
        EXPECT(0x6b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0x8ace));
        // 75 00D9
        gbc.setState(0x6b52, 0x61ac, 0x59e0, 0x9caf, 0xe3b1, 0xc858, 0x1, 0x1);
        gbc.writeMem(0x6b52, { 0x75 });
        gbc.writeMem(0xc858, { 0x0 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x61ac, gbc.sp());
        EXPECT(0x6b53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xc858));
        // 75 00DA
        gbc.setState(0x7c1, 0xbc5f, 0x8630, 0xf2d, 0xd7f, 0xdb02, 0x1, 0x1);
        gbc.writeMem(0x7c1, { 0x75 });
        gbc.writeMem(0xdb02, { 0x0 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xbc5f, gbc.sp());
        EXPECT(0x7c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0xdb02));
        // 75 00DC
        gbc.setState(0x4fdb, 0xf688, 0x7f20, 0x1ca3, 0x68f6, 0xa849, 0x1, 0x1);
        gbc.writeMem(0x4fdb, { 0x75 });
        gbc.writeMem(0xa849, { 0x0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xf688, gbc.sp());
        EXPECT(0x4fdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xa849));
        // 75 00DD
        gbc.setState(0x6b6, 0x7df0, 0x94b0, 0x1802, 0xd336, 0xfd0f, 0x0, 0x0);
        gbc.writeMem(0x6b6, { 0x75 });
        gbc.writeMem(0xfd0f, { 0x0 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x7df0, gbc.sp());
        EXPECT(0x6b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf, gbc.readMem(0xfd0f));
        // 75 00DE
        gbc.setState(0x941a, 0xdd64, 0x4f70, 0xee80, 0x1327, 0xf1ab, 0x0, 0x1);
        gbc.writeMem(0x941a, { 0x75 });
        gbc.writeMem(0xf1ab, { 0x0 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xdd64, gbc.sp());
        EXPECT(0x941b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x941a));
        EXPECT(0xab, gbc.readMem(0xf1ab));
        // 75 00E0
        gbc.setState(0xeb52, 0x197d, 0x8fb0, 0xccb4, 0x17d4, 0xe58d, 0x1, 0x0);
        gbc.writeMem(0xe58d, { 0x0 });
        gbc.writeMem(0xeb52, { 0x75 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x197d, gbc.sp());
        EXPECT(0xeb53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xe58d));
        EXPECT(0x75, gbc.readMem(0xeb52));
        // 75 00E2
        gbc.setState(0x157e, 0xc4d8, 0x3510, 0x940d, 0x5f64, 0xa825, 0x0, 0x0);
        gbc.writeMem(0x157e, { 0x75 });
        gbc.writeMem(0xa825, { 0x0 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xc4d8, gbc.sp());
        EXPECT(0x157f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xa825));
        // 75 00E4
        gbc.setState(0x7c1c, 0x6805, 0xf090, 0x494b, 0xe9c1, 0xbbd5, 0x0, 0x1);
        gbc.writeMem(0x7c1c, { 0x75 });
        gbc.writeMem(0xbbd5, { 0x0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x6805, gbc.sp());
        EXPECT(0x7c1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xbbd5));
        // 75 00E7
        gbc.setState(0x8d4c, 0xa5e0, 0x1390, 0xd8c2, 0x8bf4, 0xbfd4, 0x1, 0x0);
        gbc.writeMem(0x8d4c, { 0x75 });
        gbc.writeMem(0xbfd4, { 0x0 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xa5e0, gbc.sp());
        EXPECT(0x8d4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x8d4c));
        EXPECT(0xd4, gbc.readMem(0xbfd4));
        // 75 00E8
        gbc.setState(0xccad, 0xfab4, 0x45c0, 0x47b, 0xc152, 0xdb35, 0x1, 0x0);
        gbc.writeMem(0xccad, { 0x75 });
        gbc.writeMem(0xdb35, { 0x0 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xfab4, gbc.sp());
        EXPECT(0xccae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xccad));
        EXPECT(0x35, gbc.readMem(0xdb35));
        // 75 00E9
        gbc.setState(0xced6, 0xc75c, 0xc1d0, 0xcea4, 0x8830, 0xa2da, 0x0, 0x1);
        gbc.writeMem(0xa2da, { 0x0 });
        gbc.writeMem(0xced6, { 0x75 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xc75c, gbc.sp());
        EXPECT(0xced7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xa2da));
        EXPECT(0x75, gbc.readMem(0xced6));
        // 75 00EB
        gbc.setState(0xe26e, 0x91d3, 0x7be0, 0xea2f, 0xd669, 0x8ef8, 0x0, 0x1);
        gbc.writeMem(0x8ef8, { 0x0 });
        gbc.writeMem(0xe26e, { 0x75 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x91d3, gbc.sp());
        EXPECT(0xe26f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x8ef8));
        EXPECT(0x75, gbc.readMem(0xe26e));
        // 75 00EC
        gbc.setState(0x2383, 0x1907, 0x7000, 0x184, 0x141f, 0xc9a8, 0x1, 0x0);
        gbc.writeMem(0x2383, { 0x75 });
        gbc.writeMem(0xc9a8, { 0x0 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x1907, gbc.sp());
        EXPECT(0x2384, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa8, gbc.readMem(0xc9a8));
        // 75 00ED
        gbc.setState(0x9ebf, 0x3493, 0x9ec0, 0xf0b1, 0x9e43, 0xafa3, 0x0, 0x1);
        gbc.writeMem(0x9ebf, { 0x75 });
        gbc.writeMem(0xafa3, { 0x0 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x3493, gbc.sp());
        EXPECT(0x9ec0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x9ebf));
        EXPECT(0xa3, gbc.readMem(0xafa3));
        // 75 00F0
        gbc.setState(0xdff0, 0xd1b, 0x92d0, 0xe41c, 0x5b7c, 0x8a7e, 0x1, 0x1);
        gbc.writeMem(0x8a7e, { 0x0 });
        gbc.writeMem(0xdff0, { 0x75 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xd1b, gbc.sp());
        EXPECT(0xdff1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x8a7e));
        EXPECT(0x75, gbc.readMem(0xdff0));
        // 75 00F2
        gbc.setState(0xad5d, 0xd5ff, 0x8560, 0x74c, 0x6e5d, 0x8657, 0x0, 0x1);
        gbc.writeMem(0x8657, { 0x0 });
        gbc.writeMem(0xad5d, { 0x75 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xd5ff, gbc.sp());
        EXPECT(0xad5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x8657));
        EXPECT(0x75, gbc.readMem(0xad5d));
        // 75 00F3
        gbc.setState(0x489e, 0x37ae, 0x17a0, 0x6984, 0xeb07, 0xfc40, 0x1, 0x1);
        gbc.writeMem(0x489e, { 0x75 });
        gbc.writeMem(0xfc40, { 0x0 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x37ae, gbc.sp());
        EXPECT(0x489f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xfc40));
        // 75 00F5
        gbc.setState(0x6157, 0x3811, 0xa7a0, 0xa751, 0x7e35, 0xa739, 0x1, 0x0);
        gbc.writeMem(0x6157, { 0x75 });
        gbc.writeMem(0xa739, { 0x0 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x3811, gbc.sp());
        EXPECT(0x6158, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0xa739));
        // 75 00F6
        gbc.setState(0x3d68, 0xf06e, 0xa980, 0x9716, 0xbedf, 0xa209, 0x1, 0x1);
        gbc.writeMem(0x3d68, { 0x75 });
        gbc.writeMem(0xa209, { 0x0 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xf06e, gbc.sp());
        EXPECT(0x3d69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xa209));
        // 75 00F7
        gbc.setState(0xc6b4, 0x6bcc, 0x2f80, 0xa243, 0x85ca, 0x8fd7, 0x0, 0x1);
        gbc.writeMem(0x8fd7, { 0x0 });
        gbc.writeMem(0xc6b4, { 0x75 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x6bcc, gbc.sp());
        EXPECT(0xc6b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0x8fd7));
        EXPECT(0x75, gbc.readMem(0xc6b4));
        // 75 00F9
        gbc.setState(0x62ea, 0x27e4, 0xd700, 0xe500, 0x813f, 0xb91d, 0x0, 0x1);
        gbc.writeMem(0x62ea, { 0x75 });
        gbc.writeMem(0xb91d, { 0x0 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x27e4, gbc.sp());
        EXPECT(0x62eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xb91d));
        // 75 00FC
        gbc.setState(0x3b26, 0x2bdc, 0xb110, 0x8e68, 0x14a8, 0xa139, 0x1, 0x1);
        gbc.writeMem(0x3b26, { 0x75 });
        gbc.writeMem(0xa139, { 0x0 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x2bdc, gbc.sp());
        EXPECT(0x3b27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0xa139));
        // 75 00FE
        gbc.setState(0x7b87, 0x3fe1, 0x99e0, 0xb666, 0x9cf5, 0x84ed, 0x0, 0x1);
        gbc.writeMem(0x7b87, { 0x75 });
        gbc.writeMem(0x84ed, { 0x0 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x3fe1, gbc.sp());
        EXPECT(0x7b88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0x84ed));
        // 75 00FF
        gbc.setState(0x9310, 0x1cf8, 0xd490, 0xad5d, 0x4955, 0xc1eb, 0x0, 0x0);
        gbc.writeMem(0x9310, { 0x75 });
        gbc.writeMem(0xc1eb, { 0x0 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x1cf8, gbc.sp());
        EXPECT(0x9311, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x9310));
        EXPECT(0xeb, gbc.readMem(0xc1eb));
        // 75 0103
        gbc.setState(0xb007, 0x795e, 0xa530, 0x46b2, 0x9e1d, 0x933b, 0x1, 0x1);
        gbc.writeMem(0x933b, { 0x0 });
        gbc.writeMem(0xb007, { 0x75 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x795e, gbc.sp());
        EXPECT(0xb008, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x933b));
        EXPECT(0x75, gbc.readMem(0xb007));
        // 75 0104
        gbc.setState(0xaa0e, 0xc593, 0x7090, 0x15e0, 0xc12a, 0x955a, 0x0, 0x1);
        gbc.writeMem(0x955a, { 0x0 });
        gbc.writeMem(0xaa0e, { 0x75 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xc593, gbc.sp());
        EXPECT(0xaa0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5a, gbc.readMem(0x955a));
        EXPECT(0x75, gbc.readMem(0xaa0e));
        // 75 0106
        gbc.setState(0xbbe6, 0xedf7, 0x3de0, 0xc204, 0xe2e4, 0xc9aa, 0x1, 0x1);
        gbc.writeMem(0xbbe6, { 0x75 });
        gbc.writeMem(0xc9aa, { 0x0 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xedf7, gbc.sp());
        EXPECT(0xbbe7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xbbe6));
        EXPECT(0xaa, gbc.readMem(0xc9aa));
        // 75 0109
        gbc.setState(0x2fa2, 0x6081, 0x5e10, 0x534b, 0x15cc, 0xaf5a, 0x0, 0x0);
        gbc.writeMem(0x2fa2, { 0x75 });
        gbc.writeMem(0xaf5a, { 0x0 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x6081, gbc.sp());
        EXPECT(0x2fa3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5a, gbc.readMem(0xaf5a));
        // 75 010A
        gbc.setState(0x9fb2, 0xd1ef, 0x7430, 0xa7c5, 0x4c4c, 0xfe73, 0x0, 0x0);
        gbc.writeMem(0x9fb2, { 0x75 });
        gbc.writeMem(0xfe73, { 0x0 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xd1ef, gbc.sp());
        EXPECT(0x9fb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x9fb2));
        EXPECT(0x73, gbc.readMem(0xfe73));
        // 75 010B
        gbc.setState(0x9ec1, 0xd96b, 0x91a0, 0x9aff, 0x3c46, 0xb26d, 0x1, 0x0);
        gbc.writeMem(0x9ec1, { 0x75 });
        gbc.writeMem(0xb26d, { 0x0 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xd96b, gbc.sp());
        EXPECT(0x9ec2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x9ec1));
        EXPECT(0x6d, gbc.readMem(0xb26d));
        // 75 010E
        gbc.setState(0x3494, 0x40ee, 0x9cc0, 0xb69c, 0x378c, 0xc464, 0x1, 0x1);
        gbc.writeMem(0x3494, { 0x75 });
        gbc.writeMem(0xc464, { 0x0 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x40ee, gbc.sp());
        EXPECT(0x3495, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xc464));
        // 75 0110
        gbc.setState(0xa574, 0x6f3, 0x9380, 0x275c, 0x5ae7, 0xae87, 0x0, 0x0);
        gbc.writeMem(0xa574, { 0x75 });
        gbc.writeMem(0xae87, { 0x0 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x6f3, gbc.sp());
        EXPECT(0xa575, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xa574));
        EXPECT(0x87, gbc.readMem(0xae87));
        // 75 0111
        gbc.setState(0x7f1e, 0xca95, 0x8a0, 0x56ec, 0xd325, 0xbff4, 0x1, 0x1);
        gbc.writeMem(0x7f1e, { 0x75 });
        gbc.writeMem(0xbff4, { 0x0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xca95, gbc.sp());
        EXPECT(0x7f1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0xbff4));
        // 75 0112
        gbc.setState(0x3f4f, 0x66b4, 0x1640, 0x8429, 0x3e7, 0x9e8a, 0x0, 0x0);
        gbc.writeMem(0x3f4f, { 0x75 });
        gbc.writeMem(0x9e8a, { 0x0 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x66b4, gbc.sp());
        EXPECT(0x3f50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x9e8a));
        // 75 0116
        gbc.setState(0xed3f, 0x676b, 0xae80, 0x8df1, 0x84bb, 0xefe9, 0x1, 0x0);
        gbc.writeMem(0xed3f, { 0x75 });
        gbc.writeMem(0xefe9, { 0x0 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x676b, gbc.sp());
        EXPECT(0xed40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xed3f));
        EXPECT(0xe9, gbc.readMem(0xefe9));
        // 75 0117
        gbc.setState(0xb06a, 0x6726, 0x9900, 0x91a9, 0x71f0, 0xcc94, 0x0, 0x0);
        gbc.writeMem(0xb06a, { 0x75 });
        gbc.writeMem(0xcc94, { 0x0 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x6726, gbc.sp());
        EXPECT(0xb06b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xb06a));
        EXPECT(0x94, gbc.readMem(0xcc94));
        // 75 0119
        gbc.setState(0xa09e, 0xdd44, 0xcc80, 0xfecc, 0xccaa, 0xc4d4, 0x0, 0x0);
        gbc.writeMem(0xa09e, { 0x75 });
        gbc.writeMem(0xc4d4, { 0x0 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xdd44, gbc.sp());
        EXPECT(0xa09f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xa09e));
        EXPECT(0xd4, gbc.readMem(0xc4d4));
        // 75 011C
        gbc.setState(0x7382, 0x88fe, 0x4fa0, 0x46c7, 0x7e32, 0xe051, 0x1, 0x0);
        gbc.writeMem(0x7382, { 0x75 });
        gbc.writeMem(0xe051, { 0x0 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x88fe, gbc.sp());
        EXPECT(0x7383, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xe051));
        // 75 011E
        gbc.setState(0x62ff, 0x555a, 0x4960, 0x45bb, 0xf182, 0xce7f, 0x0, 0x1);
        gbc.writeMem(0x62ff, { 0x75 });
        gbc.writeMem(0xce7f, { 0x0 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x555a, gbc.sp());
        EXPECT(0x6300, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0xce7f));
        // 75 011F
        gbc.setState(0x9419, 0xdab8, 0x290, 0xfba9, 0xb224, 0xf7d1, 0x1, 0x1);
        gbc.writeMem(0x9419, { 0x75 });
        gbc.writeMem(0xf7d1, { 0x0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xdab8, gbc.sp());
        EXPECT(0x941a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x9419));
        EXPECT(0xd1, gbc.readMem(0xf7d1));
        // 75 0126
        gbc.setState(0x2d00, 0x4108, 0xb040, 0x9341, 0xc503, 0xb609, 0x1, 0x1);
        gbc.writeMem(0x2d00, { 0x75 });
        gbc.writeMem(0xb609, { 0x0 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x4108, gbc.sp());
        EXPECT(0x2d01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xb609));
        // 75 0128
        gbc.setState(0x33c1, 0x2a9, 0xb6e0, 0x5ba7, 0x2abb, 0xd946, 0x1, 0x0);
        gbc.writeMem(0x33c1, { 0x75 });
        gbc.writeMem(0xd946, { 0x0 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x2a9, gbc.sp());
        EXPECT(0x33c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0xd946));
        // 75 0129
        gbc.setState(0x6381, 0x4d80, 0x92a0, 0xbc4a, 0x4574, 0xc6e9, 0x1, 0x0);
        gbc.writeMem(0x6381, { 0x75 });
        gbc.writeMem(0xc6e9, { 0x0 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x4d80, gbc.sp());
        EXPECT(0x6382, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xc6e9));
        // 75 0130
        gbc.setState(0x172c, 0x1b37, 0x4360, 0x2564, 0xc18c, 0xda7d, 0x0, 0x1);
        gbc.writeMem(0x172c, { 0x75 });
        gbc.writeMem(0xda7d, { 0x0 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x1b37, gbc.sp());
        EXPECT(0x172d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xda7d));
        // 75 0131
        gbc.setState(0x8e31, 0x1774, 0xd4c0, 0xfcd3, 0xbcba, 0xa29e, 0x0, 0x1);
        gbc.writeMem(0x8e31, { 0x75 });
        gbc.writeMem(0xa29e, { 0x0 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x1774, gbc.sp());
        EXPECT(0x8e32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x8e31));
        EXPECT(0x9e, gbc.readMem(0xa29e));
        // 75 0132
        gbc.setState(0x8893, 0x4517, 0xb9b0, 0x8903, 0x13b, 0xdbe5, 0x0, 0x1);
        gbc.writeMem(0x8893, { 0x75 });
        gbc.writeMem(0xdbe5, { 0x0 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x4517, gbc.sp());
        EXPECT(0x8894, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x8893));
        EXPECT(0xe5, gbc.readMem(0xdbe5));
        // 75 0137
        gbc.setState(0xbcac, 0x7364, 0x8370, 0xffb9, 0x831b, 0x8970, 0x1, 0x1);
        gbc.writeMem(0x8970, { 0x0 });
        gbc.writeMem(0xbcac, { 0x75 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x7364, gbc.sp());
        EXPECT(0xbcad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0x8970));
        EXPECT(0x75, gbc.readMem(0xbcac));
        // 75 013E
        gbc.setState(0x756f, 0xb9c7, 0x2c90, 0xd1f0, 0xa4fa, 0xd57d, 0x1, 0x1);
        gbc.writeMem(0x756f, { 0x75 });
        gbc.writeMem(0xd57d, { 0x0 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xb9c7, gbc.sp());
        EXPECT(0x7570, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xd57d));
        // 75 013F
        gbc.setState(0x2a71, 0xf791, 0xde0, 0xa3e6, 0x43f8, 0x9588, 0x1, 0x0);
        gbc.writeMem(0x2a71, { 0x75 });
        gbc.writeMem(0x9588, { 0x0 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xf791, gbc.sp());
        EXPECT(0x2a72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x9588));
        // 75 0141
        gbc.setState(0xbfc5, 0xe1a9, 0x4240, 0x14, 0xc00a, 0x9384, 0x1, 0x1);
        gbc.writeMem(0x9384, { 0x0 });
        gbc.writeMem(0xbfc5, { 0x75 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xe1a9, gbc.sp());
        EXPECT(0xbfc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0x9384));
        EXPECT(0x75, gbc.readMem(0xbfc5));
        // 75 0146
        gbc.setState(0xa3f0, 0xeec9, 0x9e10, 0x76c2, 0xd8f5, 0xf965, 0x1, 0x1);
        gbc.writeMem(0xa3f0, { 0x75 });
        gbc.writeMem(0xf965, { 0x0 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xeec9, gbc.sp());
        EXPECT(0xa3f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xa3f0));
        EXPECT(0x65, gbc.readMem(0xf965));
        // 75 0148
        gbc.setState(0xbe24, 0xf19c, 0x6590, 0xc373, 0x9cde, 0xd92b, 0x0, 0x0);
        gbc.writeMem(0xbe24, { 0x75 });
        gbc.writeMem(0xd92b, { 0x0 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xf19c, gbc.sp());
        EXPECT(0xbe25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xbe24));
        EXPECT(0x2b, gbc.readMem(0xd92b));
        // 75 0149
        gbc.setState(0x20d3, 0x5453, 0x79a0, 0xce3a, 0xf07f, 0xb8f0, 0x0, 0x0);
        gbc.writeMem(0x20d3, { 0x75 });
        gbc.writeMem(0xb8f0, { 0x0 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x5453, gbc.sp());
        EXPECT(0x20d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xb8f0));
        // 75 014B
        gbc.setState(0x7e5f, 0xa460, 0x4a80, 0xddb4, 0xfa98, 0xc696, 0x0, 0x0);
        gbc.writeMem(0x7e5f, { 0x75 });
        gbc.writeMem(0xc696, { 0x0 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xa460, gbc.sp());
        EXPECT(0x7e60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0xc696));
        // 75 0151
        gbc.setState(0x323f, 0x72d8, 0xca50, 0xdc01, 0xa301, 0xec77, 0x0, 0x0);
        gbc.writeMem(0x323f, { 0x75 });
        gbc.writeMem(0xec77, { 0x0 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x72d8, gbc.sp());
        EXPECT(0x3240, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xec77));
        // 75 0152
        gbc.setState(0x1c0e, 0x652c, 0xdce0, 0x5c9e, 0xd268, 0x84e6, 0x0, 0x0);
        gbc.writeMem(0x1c0e, { 0x75 });
        gbc.writeMem(0x84e6, { 0x0 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x652c, gbc.sp());
        EXPECT(0x1c0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x84e6));
        // 75 0157
        gbc.setState(0x3e2e, 0x3e3f, 0xeed0, 0x103c, 0xf343, 0xd969, 0x1, 0x0);
        gbc.writeMem(0x3e2e, { 0x75 });
        gbc.writeMem(0xd969, { 0x0 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x3e3f, gbc.sp());
        EXPECT(0x3e2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xd969));
        // 75 0158
        gbc.setState(0x384d, 0xf84e, 0x570, 0xaaf2, 0xad8b, 0xca16, 0x1, 0x1);
        gbc.writeMem(0x384d, { 0x75 });
        gbc.writeMem(0xca16, { 0x0 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xf84e, gbc.sp());
        EXPECT(0x384e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xca16));
        // 75 015A
        gbc.setState(0xc4fc, 0xa64, 0xc740, 0xa450, 0xeb5b, 0xd919, 0x1, 0x0);
        gbc.writeMem(0xc4fc, { 0x75 });
        gbc.writeMem(0xd919, { 0x0 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xa64, gbc.sp());
        EXPECT(0xc4fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xc4fc));
        EXPECT(0x19, gbc.readMem(0xd919));
        // 75 015B
        gbc.setState(0x9cda, 0xbd83, 0x4830, 0x6c63, 0x8077, 0x8948, 0x1, 0x0);
        gbc.writeMem(0x8948, { 0x0 });
        gbc.writeMem(0x9cda, { 0x75 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xbd83, gbc.sp());
        EXPECT(0x9cdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x8948));
        EXPECT(0x75, gbc.readMem(0x9cda));
        // 75 015C
        gbc.setState(0x208f, 0xe267, 0xec30, 0x3a4a, 0x3770, 0x9db8, 0x0, 0x0);
        gbc.writeMem(0x208f, { 0x75 });
        gbc.writeMem(0x9db8, { 0x0 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xe267, gbc.sp());
        EXPECT(0x2090, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0x9db8));
        // 75 015D
        gbc.setState(0x330a, 0xecd5, 0x31f0, 0x4fb7, 0x1cb5, 0xe611, 0x1, 0x0);
        gbc.writeMem(0x330a, { 0x75 });
        gbc.writeMem(0xe611, { 0x0 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xecd5, gbc.sp());
        EXPECT(0x330b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xe611));
        // 75 015E
        gbc.setState(0xede, 0x2b3b, 0x7ce0, 0x630f, 0xb18d, 0xbd06, 0x0, 0x0);
        gbc.writeMem(0xede, { 0x75 });
        gbc.writeMem(0xbd06, { 0x0 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x2b3b, gbc.sp());
        EXPECT(0xedf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xbd06));
        // 75 0161
        gbc.setState(0xbc58, 0x5cb0, 0xf940, 0xcceb, 0x55ed, 0xb665, 0x0, 0x0);
        gbc.writeMem(0xb665, { 0x0 });
        gbc.writeMem(0xbc58, { 0x75 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x5cb0, gbc.sp());
        EXPECT(0xbc59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xb665));
        EXPECT(0x75, gbc.readMem(0xbc58));
        // 75 0162
        gbc.setState(0xb3e1, 0xbffb, 0xd190, 0xa28b, 0xbe0a, 0x8324, 0x0, 0x0);
        gbc.writeMem(0x8324, { 0x0 });
        gbc.writeMem(0xb3e1, { 0x75 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xbffb, gbc.sp());
        EXPECT(0xb3e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0x8324));
        EXPECT(0x75, gbc.readMem(0xb3e1));
        // 75 0165
        gbc.setState(0x68c0, 0x8eeb, 0x4990, 0xf3b2, 0xcb51, 0xf71e, 0x0, 0x0);
        gbc.writeMem(0x68c0, { 0x75 });
        gbc.writeMem(0xf71e, { 0x0 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x8eeb, gbc.sp());
        EXPECT(0x68c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0xf71e));
        // 75 0166
        gbc.setState(0xb176, 0xa258, 0x56b0, 0x9c4c, 0x873b, 0xfaa1, 0x1, 0x0);
        gbc.writeMem(0xb176, { 0x75 });
        gbc.writeMem(0xfaa1, { 0x0 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xa258, gbc.sp());
        EXPECT(0xb177, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xb176));
        EXPECT(0xa1, gbc.readMem(0xfaa1));
        // 75 0168
        gbc.setState(0x2d17, 0x2104, 0x30d0, 0x9493, 0x5dfa, 0xf7bc, 0x0, 0x1);
        gbc.writeMem(0x2d17, { 0x75 });
        gbc.writeMem(0xf7bc, { 0x0 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x2104, gbc.sp());
        EXPECT(0x2d18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xf7bc));
        // 75 016B
        gbc.setState(0x2ef0, 0x4ec3, 0xe1f0, 0x17ae, 0x424, 0xa1a6, 0x1, 0x1);
        gbc.writeMem(0x2ef0, { 0x75 });
        gbc.writeMem(0xa1a6, { 0x0 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x4ec3, gbc.sp());
        EXPECT(0x2ef1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xa1a6));
        // 75 016C
        gbc.setState(0x241e, 0xc830, 0xce60, 0x2a74, 0x4c79, 0xe289, 0x0, 0x1);
        gbc.writeMem(0x241e, { 0x75 });
        gbc.writeMem(0xe289, { 0x0 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xc830, gbc.sp());
        EXPECT(0x241f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xe289));
        // 75 016E
        gbc.setState(0x1686, 0x15d9, 0xe30, 0x3fb6, 0x4108, 0xbf23, 0x0, 0x1);
        gbc.writeMem(0x1686, { 0x75 });
        gbc.writeMem(0xbf23, { 0x0 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x15d9, gbc.sp());
        EXPECT(0x1687, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x23, gbc.readMem(0xbf23));
        // 75 016F
        gbc.setState(0x9d2a, 0x794e, 0x5260, 0xd647, 0xeae8, 0xc03b, 0x0, 0x0);
        gbc.writeMem(0x9d2a, { 0x75 });
        gbc.writeMem(0xc03b, { 0x0 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x794e, gbc.sp());
        EXPECT(0x9d2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x9d2a));
        EXPECT(0x3b, gbc.readMem(0xc03b));
        // 75 0170
        gbc.setState(0x7507, 0x6f4e, 0x7c10, 0xfb2c, 0x7fcc, 0xf44b, 0x1, 0x1);
        gbc.writeMem(0x7507, { 0x75 });
        gbc.writeMem(0xf44b, { 0x0 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x6f4e, gbc.sp());
        EXPECT(0x7508, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xf44b));
        // 75 0176
        gbc.setState(0xd177, 0xf81e, 0x82a0, 0x1b82, 0xbaf7, 0x9108, 0x1, 0x1);
        gbc.writeMem(0x9108, { 0x0 });
        gbc.writeMem(0xd177, { 0x75 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xf81e, gbc.sp());
        EXPECT(0xd178, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0x9108));
        EXPECT(0x75, gbc.readMem(0xd177));
        // 75 0177
        gbc.setState(0xd418, 0xcae5, 0x2e70, 0xcd2a, 0x4685, 0xba3b, 0x0, 0x1);
        gbc.writeMem(0xba3b, { 0x0 });
        gbc.writeMem(0xd418, { 0x75 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xcae5, gbc.sp());
        EXPECT(0xd419, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xba3b));
        EXPECT(0x75, gbc.readMem(0xd418));
        // 75 0178
        gbc.setState(0x4a5d, 0x225c, 0x1430, 0xcace, 0xbf40, 0xf8e2, 0x0, 0x1);
        gbc.writeMem(0x4a5d, { 0x75 });
        gbc.writeMem(0xf8e2, { 0x0 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x225c, gbc.sp());
        EXPECT(0x4a5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xf8e2));
        // 75 0179
        gbc.setState(0xe327, 0x510e, 0xbb90, 0x9224, 0x1fed, 0xaec5, 0x0, 0x0);
        gbc.writeMem(0xaec5, { 0x0 });
        gbc.writeMem(0xe327, { 0x75 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x510e, gbc.sp());
        EXPECT(0xe328, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xaec5));
        EXPECT(0x75, gbc.readMem(0xe327));
        // 75 017B
        gbc.setState(0x97c2, 0x9617, 0x3650, 0xf318, 0x2f18, 0xd664, 0x0, 0x0);
        gbc.writeMem(0x97c2, { 0x75 });
        gbc.writeMem(0xd664, { 0x0 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x9617, gbc.sp());
        EXPECT(0x97c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x97c2));
        EXPECT(0x64, gbc.readMem(0xd664));
        // 75 017D
        gbc.setState(0x6040, 0xe42c, 0xda40, 0xb20f, 0x50c2, 0x9672, 0x0, 0x0);
        gbc.writeMem(0x6040, { 0x75 });
        gbc.writeMem(0x9672, { 0x0 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xe42c, gbc.sp());
        EXPECT(0x6041, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x9672));
        // 75 017E
        gbc.setState(0xc667, 0xc13c, 0xc5f0, 0xe651, 0xe6ce, 0xf62d, 0x0, 0x0);
        gbc.writeMem(0xc667, { 0x75 });
        gbc.writeMem(0xf62d, { 0x0 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xc13c, gbc.sp());
        EXPECT(0xc668, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xc667));
        EXPECT(0x2d, gbc.readMem(0xf62d));
        // 75 0180
        gbc.setState(0x4bfe, 0x31ca, 0x3c50, 0x889b, 0x73d1, 0xeb06, 0x0, 0x0);
        gbc.writeMem(0x4bfe, { 0x75 });
        gbc.writeMem(0xeb06, { 0x0 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x31ca, gbc.sp());
        EXPECT(0x4bff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xeb06));
        // 75 0187
        gbc.setState(0x1632, 0x94c3, 0x9640, 0x461a, 0x79f6, 0xda1c, 0x0, 0x0);
        gbc.writeMem(0x1632, { 0x75 });
        gbc.writeMem(0xda1c, { 0x0 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x94c3, gbc.sp());
        EXPECT(0x1633, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0xda1c));
        // 75 0189
        gbc.setState(0xb57, 0xdace, 0x9b0, 0x71ae, 0xf4dc, 0xaa00, 0x1, 0x1);
        gbc.writeMem(0xb57, { 0x75 });
        gbc.writeMem(0xaa00, { 0x0 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xdace, gbc.sp());
        EXPECT(0xb58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xaa00));
        // 75 018A
        gbc.setState(0x79d1, 0xb588, 0x170, 0xdd7d, 0xd3ee, 0xee20, 0x1, 0x1);
        gbc.writeMem(0x79d1, { 0x75 });
        gbc.writeMem(0xee20, { 0x0 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xb588, gbc.sp());
        EXPECT(0x79d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xee20));
        // 75 018B
        gbc.setState(0x81c5, 0x97d2, 0xaa00, 0x9125, 0x279f, 0xa98a, 0x0, 0x0);
        gbc.writeMem(0x81c5, { 0x75 });
        gbc.writeMem(0xa98a, { 0x0 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x97d2, gbc.sp());
        EXPECT(0x81c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x81c5));
        EXPECT(0x8a, gbc.readMem(0xa98a));
        // 75 018C
        gbc.setState(0x71fd, 0x9237, 0xc80, 0x9720, 0xdac2, 0xa9e7, 0x1, 0x1);
        gbc.writeMem(0x71fd, { 0x75 });
        gbc.writeMem(0xa9e7, { 0x0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x9237, gbc.sp());
        EXPECT(0x71fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xa9e7));
        // 75 018D
        gbc.setState(0x1bcc, 0x2c2d, 0x5ee0, 0x600c, 0xf305, 0xb3a4, 0x0, 0x0);
        gbc.writeMem(0x1bcc, { 0x75 });
        gbc.writeMem(0xb3a4, { 0x0 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x2c2d, gbc.sp());
        EXPECT(0x1bcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xb3a4));
        // 75 018E
        gbc.setState(0x1a64, 0x9920, 0x9250, 0xd3d9, 0xa6dd, 0xd2a5, 0x0, 0x1);
        gbc.writeMem(0x1a64, { 0x75 });
        gbc.writeMem(0xd2a5, { 0x0 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x9920, gbc.sp());
        EXPECT(0x1a65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa5, gbc.readMem(0xd2a5));
        // 75 018F
        gbc.setState(0x9e6, 0x20a7, 0x400, 0xb469, 0x8d19, 0x6200, 0x0, 0x0);
        gbc.writeMem(0x9e6, { 0x75 });
        gbc.writeMem(0x6200, { 0x0 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x20a7, gbc.sp());
        EXPECT(0x9e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 75 0190
        gbc.setState(0xafda, 0x139d, 0x4c50, 0x5599, 0x6fd8, 0xeec2, 0x0, 0x0);
        gbc.writeMem(0xafda, { 0x75 });
        gbc.writeMem(0xeec2, { 0x0 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x139d, gbc.sp());
        EXPECT(0xafdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xafda));
        EXPECT(0xc2, gbc.readMem(0xeec2));
        // 75 0191
        gbc.setState(0xc14d, 0xc7db, 0x7fb0, 0x32b2, 0xd2ca, 0xa023, 0x1, 0x0);
        gbc.writeMem(0xa023, { 0x0 });
        gbc.writeMem(0xc14d, { 0x75 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xc7db, gbc.sp());
        EXPECT(0xc14e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x23, gbc.readMem(0xa023));
        EXPECT(0x75, gbc.readMem(0xc14d));
        // 75 0192
        gbc.setState(0x4df7, 0x6ad6, 0x2230, 0x2333, 0x3a99, 0x92af, 0x1, 0x0);
        gbc.writeMem(0x4df7, { 0x75 });
        gbc.writeMem(0x92af, { 0x0 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x6ad6, gbc.sp());
        EXPECT(0x4df8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xaf, gbc.readMem(0x92af));
        // 75 0195
        gbc.setState(0x2246, 0x9464, 0x1ff0, 0x4644, 0x1e3b, 0xdf4b, 0x0, 0x1);
        gbc.writeMem(0x2246, { 0x75 });
        gbc.writeMem(0xdf4b, { 0x0 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x9464, gbc.sp());
        EXPECT(0x2247, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xdf4b));
        // 75 0196
        gbc.setState(0x2fde, 0x6bc6, 0x4340, 0xf557, 0x189f, 0xe038, 0x0, 0x1);
        gbc.writeMem(0x2fde, { 0x75 });
        gbc.writeMem(0xe038, { 0x0 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x6bc6, gbc.sp());
        EXPECT(0x2fdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xe038));
        // 75 019B
        gbc.setState(0x8a39, 0xd715, 0x75a0, 0x306e, 0x9c6d, 0xaa29, 0x0, 0x1);
        gbc.writeMem(0x8a39, { 0x75 });
        gbc.writeMem(0xaa29, { 0x0 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xd715, gbc.sp());
        EXPECT(0x8a3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x8a39));
        EXPECT(0x29, gbc.readMem(0xaa29));
        // 75 019C
        gbc.setState(0x7489, 0xa7e6, 0x2d30, 0x6b26, 0x725c, 0x917e, 0x1, 0x1);
        gbc.writeMem(0x7489, { 0x75 });
        gbc.writeMem(0x917e, { 0x0 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xa7e6, gbc.sp());
        EXPECT(0x748a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x917e));
        // 75 019F
        gbc.setState(0x3ac1, 0xe44, 0x12f0, 0x51c6, 0x29de, 0xb113, 0x1, 0x0);
        gbc.writeMem(0x3ac1, { 0x75 });
        gbc.writeMem(0xb113, { 0x0 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xe44, gbc.sp());
        EXPECT(0x3ac2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xb113));
        // 75 01A0
        gbc.setState(0x829a, 0xf16, 0x30b0, 0x4dc3, 0x7761, 0xdbeb, 0x0, 0x1);
        gbc.writeMem(0x829a, { 0x75 });
        gbc.writeMem(0xdbeb, { 0x0 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xf16, gbc.sp());
        EXPECT(0x829b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x829a));
        EXPECT(0xeb, gbc.readMem(0xdbeb));
        // 75 01A1
        gbc.setState(0xde1d, 0x5b22, 0x3c00, 0xb726, 0xbfc4, 0xbdf3, 0x0, 0x0);
        gbc.writeMem(0xbdf3, { 0x0 });
        gbc.writeMem(0xde1d, { 0x75 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x5b22, gbc.sp());
        EXPECT(0xde1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0xbdf3));
        EXPECT(0x75, gbc.readMem(0xde1d));
        // 75 01A3
        gbc.setState(0x7ce, 0xcb87, 0x370, 0xbcb8, 0x302a, 0xaf63, 0x0, 0x1);
        gbc.writeMem(0x7ce, { 0x75 });
        gbc.writeMem(0xaf63, { 0x0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xcb87, gbc.sp());
        EXPECT(0x7cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0xaf63));
        // 75 01A4
        gbc.setState(0xecfb, 0x6455, 0x3000, 0xef96, 0x13d2, 0xb182, 0x1, 0x1);
        gbc.writeMem(0xb182, { 0x0 });
        gbc.writeMem(0xecfb, { 0x75 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x6455, gbc.sp());
        EXPECT(0xecfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xb182));
        EXPECT(0x75, gbc.readMem(0xecfb));
        // 75 01A5
        gbc.setState(0x8ed4, 0xd8c5, 0x8340, 0xde3c, 0xb3b7, 0xd3c5, 0x1, 0x0);
        gbc.writeMem(0x8ed4, { 0x75 });
        gbc.writeMem(0xd3c5, { 0x0 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xd8c5, gbc.sp());
        EXPECT(0x8ed5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x8ed4));
        EXPECT(0xc5, gbc.readMem(0xd3c5));
        // 75 01AB
        gbc.setState(0x848f, 0xef23, 0x37d0, 0xefa6, 0xb8cc, 0x976f, 0x1, 0x0);
        gbc.writeMem(0x848f, { 0x75 });
        gbc.writeMem(0x976f, { 0x0 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xef23, gbc.sp());
        EXPECT(0x8490, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x848f));
        EXPECT(0x6f, gbc.readMem(0x976f));
        // 75 01AC
        gbc.setState(0x802e, 0x154, 0x4540, 0x6edf, 0xc529, 0x8dde, 0x0, 0x0);
        gbc.writeMem(0x802e, { 0x75 });
        gbc.writeMem(0x8dde, { 0x0 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x154, gbc.sp());
        EXPECT(0x802f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x802e));
        EXPECT(0xde, gbc.readMem(0x8dde));
        // 75 01AD
        gbc.setState(0x8486, 0x5a3b, 0xdf50, 0xaee1, 0xbc75, 0xc191, 0x0, 0x0);
        gbc.writeMem(0x8486, { 0x75 });
        gbc.writeMem(0xc191, { 0x0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x5a3b, gbc.sp());
        EXPECT(0x8487, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x8486));
        EXPECT(0x91, gbc.readMem(0xc191));
        // 75 01B0
        gbc.setState(0x39d, 0x2288, 0x68a0, 0xc715, 0x733f, 0xbc35, 0x0, 0x0);
        gbc.writeMem(0x39d, { 0x75 });
        gbc.writeMem(0xbc35, { 0x0 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x2288, gbc.sp());
        EXPECT(0x39e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xbc35));
        // 75 01B2
        gbc.setState(0x53ed, 0xa2cc, 0xd260, 0x6adc, 0xe668, 0xa27b, 0x1, 0x0);
        gbc.writeMem(0x53ed, { 0x75 });
        gbc.writeMem(0xa27b, { 0x0 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xa2cc, gbc.sp());
        EXPECT(0x53ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xa27b));
        // 75 01B3
        gbc.setState(0x2072, 0x6619, 0x7950, 0x2d38, 0x7eb4, 0xfb03, 0x0, 0x1);
        gbc.writeMem(0x2072, { 0x75 });
        gbc.writeMem(0xfb03, { 0x0 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x6619, gbc.sp());
        EXPECT(0x2073, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xfb03));
        // 75 01B6
        gbc.setState(0x2bd3, 0x417e, 0x4340, 0xcddd, 0xfe8, 0xa0ed, 0x1, 0x0);
        gbc.writeMem(0x2bd3, { 0x75 });
        gbc.writeMem(0xa0ed, { 0x0 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x417e, gbc.sp());
        EXPECT(0x2bd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0xa0ed));
        // 75 01B9
        gbc.setState(0x9ee4, 0x70ca, 0xcbf0, 0xd430, 0xd273, 0xdf2b, 0x1, 0x0);
        gbc.writeMem(0x9ee4, { 0x75 });
        gbc.writeMem(0xdf2b, { 0x0 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x70ca, gbc.sp());
        EXPECT(0x9ee5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x9ee4));
        EXPECT(0x2b, gbc.readMem(0xdf2b));
        // 75 01BB
        gbc.setState(0xcca9, 0x2b20, 0x1710, 0x1502, 0xe6c5, 0xd556, 0x0, 0x0);
        gbc.writeMem(0xcca9, { 0x75 });
        gbc.writeMem(0xd556, { 0x0 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x2b20, gbc.sp());
        EXPECT(0xccaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xcca9));
        EXPECT(0x56, gbc.readMem(0xd556));
        // 75 01BC
        gbc.setState(0x7380, 0x18a8, 0x3d0, 0xfe9a, 0x2f7, 0xcfcd, 0x0, 0x0);
        gbc.writeMem(0x7380, { 0x75 });
        gbc.writeMem(0xcfcd, { 0x0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x18a8, gbc.sp());
        EXPECT(0x7381, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0xcfcd));
        // 75 01BD
        gbc.setState(0x7b97, 0x9a80, 0x4380, 0xdd15, 0xea67, 0xf8cb, 0x1, 0x1);
        gbc.writeMem(0x7b97, { 0x75 });
        gbc.writeMem(0xf8cb, { 0x0 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x9a80, gbc.sp());
        EXPECT(0x7b98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xf8cb));
        // 75 01BE
        gbc.setState(0xeb16, 0x8d94, 0x5660, 0xd4a0, 0x2506, 0x80f6, 0x1, 0x1);
        gbc.writeMem(0x80f6, { 0x0 });
        gbc.writeMem(0xeb16, { 0x75 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x8d94, gbc.sp());
        EXPECT(0xeb17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf6, gbc.readMem(0x80f6));
        EXPECT(0x75, gbc.readMem(0xeb16));
        // 75 01BF
        gbc.setState(0xc7e9, 0x25a, 0xee40, 0x68f8, 0x4d68, 0xeb9d, 0x1, 0x1);
        gbc.writeMem(0xc7e9, { 0x75 });
        gbc.writeMem(0xeb9d, { 0x0 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x25a, gbc.sp());
        EXPECT(0xc7ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xc7e9));
        EXPECT(0x9d, gbc.readMem(0xeb9d));
        // 75 01C0
        gbc.setState(0xb492, 0x1c38, 0x260, 0x129f, 0x195e, 0x8672, 0x1, 0x0);
        gbc.writeMem(0x8672, { 0x0 });
        gbc.writeMem(0xb492, { 0x75 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x1c38, gbc.sp());
        EXPECT(0xb493, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x8672));
        EXPECT(0x75, gbc.readMem(0xb492));
        // 75 01C4
        gbc.setState(0x6c70, 0xd692, 0x8d40, 0x6ee, 0x7479, 0xd539, 0x1, 0x1);
        gbc.writeMem(0x6c70, { 0x75 });
        gbc.writeMem(0xd539, { 0x0 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xd692, gbc.sp());
        EXPECT(0x6c71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0xd539));
        // 75 01C5
        gbc.setState(0x2d75, 0x3e05, 0x6980, 0x4080, 0x7662, 0xd0af, 0x1, 0x1);
        gbc.writeMem(0x2d75, { 0x75 });
        gbc.writeMem(0xd0af, { 0x0 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x3e05, gbc.sp());
        EXPECT(0x2d76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaf, gbc.readMem(0xd0af));
        // 75 01C6
        gbc.setState(0xe494, 0x953a, 0x37a0, 0x98c5, 0xf64a, 0xc6fc, 0x1, 0x0);
        gbc.writeMem(0xc6fc, { 0x0 });
        gbc.writeMem(0xe494, { 0x75 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x953a, gbc.sp());
        EXPECT(0xe495, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfc, gbc.readMem(0xc6fc));
        EXPECT(0x75, gbc.readMem(0xe494));
        // 75 01C8
        gbc.setState(0xcd8f, 0x5a29, 0xf310, 0x7781, 0xf560, 0x9b71, 0x1, 0x1);
        gbc.writeMem(0x9b71, { 0x0 });
        gbc.writeMem(0xcd8f, { 0x75 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x5a29, gbc.sp());
        EXPECT(0xcd90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0x9b71));
        EXPECT(0x75, gbc.readMem(0xcd8f));
        // 75 01CA
        gbc.setState(0xc2a3, 0xae43, 0x5270, 0x83, 0x6cc8, 0xfd82, 0x0, 0x0);
        gbc.writeMem(0xc2a3, { 0x75 });
        gbc.writeMem(0xfd82, { 0x0 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xae43, gbc.sp());
        EXPECT(0xc2a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xc2a3));
        EXPECT(0x82, gbc.readMem(0xfd82));
        // 75 01CB
        gbc.setState(0x609d, 0x262e, 0x130, 0x64eb, 0xe966, 0x9872, 0x1, 0x1);
        gbc.writeMem(0x609d, { 0x75 });
        gbc.writeMem(0x9872, { 0x0 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x262e, gbc.sp());
        EXPECT(0x609e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x9872));
        // 75 01CF
        gbc.setState(0x60db, 0x719a, 0x1620, 0x7dca, 0xb69b, 0xef01, 0x0, 0x0);
        gbc.writeMem(0x60db, { 0x75 });
        gbc.writeMem(0xef01, { 0x0 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x719a, gbc.sp());
        EXPECT(0x60dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0xef01));
        // 75 01D0
        gbc.setState(0x4add, 0xab2e, 0xf5e0, 0x9121, 0x8a1e, 0xb5cc, 0x0, 0x0);
        gbc.writeMem(0x4add, { 0x75 });
        gbc.writeMem(0xb5cc, { 0x0 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xab2e, gbc.sp());
        EXPECT(0x4ade, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcc, gbc.readMem(0xb5cc));
        // 75 01D1
        gbc.setState(0xc0f9, 0x7ac5, 0x8870, 0x491a, 0x65e3, 0xc651, 0x1, 0x0);
        gbc.writeMem(0xc0f9, { 0x75 });
        gbc.writeMem(0xc651, { 0x0 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x7ac5, gbc.sp());
        EXPECT(0xc0fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xc0f9));
        EXPECT(0x51, gbc.readMem(0xc651));
        // 75 01D2
        gbc.setState(0xbaaa, 0xc859, 0x6d30, 0xd238, 0x46fb, 0x90da, 0x0, 0x1);
        gbc.writeMem(0x90da, { 0x0 });
        gbc.writeMem(0xbaaa, { 0x75 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xc859, gbc.sp());
        EXPECT(0xbaab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x90da));
        EXPECT(0x75, gbc.readMem(0xbaaa));
        // 75 01D3
        gbc.setState(0x4804, 0x1730, 0x3bb0, 0xf416, 0xdce6, 0xe8c6, 0x0, 0x0);
        gbc.writeMem(0x4804, { 0x75 });
        gbc.writeMem(0xe8c6, { 0x0 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x1730, gbc.sp());
        EXPECT(0x4805, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xe8c6));
        // 75 01D4
        gbc.setState(0xeee8, 0xbaeb, 0xb8a0, 0x2816, 0xe34b, 0xc74a, 0x1, 0x1);
        gbc.writeMem(0xc74a, { 0x0 });
        gbc.writeMem(0xeee8, { 0x75 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xbaeb, gbc.sp());
        EXPECT(0xeee9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0xc74a));
        EXPECT(0x75, gbc.readMem(0xeee8));
        // 75 01DA
        gbc.setState(0x25b0, 0x9717, 0x80f0, 0x1987, 0x33fe, 0xbb03, 0x0, 0x0);
        gbc.writeMem(0x25b0, { 0x75 });
        gbc.writeMem(0xbb03, { 0x0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x9717, gbc.sp());
        EXPECT(0x25b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xbb03));
        // 75 01DC
        gbc.setState(0x97af, 0x8d11, 0xcaf0, 0xa978, 0x1b30, 0xb218, 0x0, 0x0);
        gbc.writeMem(0x97af, { 0x75 });
        gbc.writeMem(0xb218, { 0x0 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x8d11, gbc.sp());
        EXPECT(0x97b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x97af));
        EXPECT(0x18, gbc.readMem(0xb218));
        // 75 01DD
        gbc.setState(0x3fb5, 0x39b2, 0xfbf0, 0x56fc, 0x5eff, 0xab83, 0x0, 0x0);
        gbc.writeMem(0x3fb5, { 0x75 });
        gbc.writeMem(0xab83, { 0x0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x39b2, gbc.sp());
        EXPECT(0x3fb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0xab83));
        // 75 01DF
        gbc.setState(0xa3e6, 0x60fb, 0x6f50, 0x10c3, 0x98e6, 0x9923, 0x0, 0x1);
        gbc.writeMem(0x9923, { 0x0 });
        gbc.writeMem(0xa3e6, { 0x75 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x60fb, gbc.sp());
        EXPECT(0xa3e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x23, gbc.readMem(0x9923));
        EXPECT(0x75, gbc.readMem(0xa3e6));
        // 75 01E1
        gbc.setState(0x6fd6, 0x5653, 0xc200, 0x1fc9, 0x3474, 0x9df3, 0x0, 0x1);
        gbc.writeMem(0x6fd6, { 0x75 });
        gbc.writeMem(0x9df3, { 0x0 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x5653, gbc.sp());
        EXPECT(0x6fd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0x9df3));
        // 75 01E4
        gbc.setState(0xc19a, 0x39c0, 0x72e0, 0x7f73, 0xe268, 0xc0d7, 0x0, 0x1);
        gbc.writeMem(0xc0d7, { 0x0 });
        gbc.writeMem(0xc19a, { 0x75 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x39c0, gbc.sp());
        EXPECT(0xc19b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0xc0d7));
        EXPECT(0x75, gbc.readMem(0xc19a));
        // 75 01E8
        gbc.setState(0xc4f, 0x62c7, 0xc00, 0xac1e, 0xd164, 0xf28a, 0x1, 0x1);
        gbc.writeMem(0xc4f, { 0x75 });
        gbc.writeMem(0xf28a, { 0x0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x62c7, gbc.sp());
        EXPECT(0xc50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xf28a));
        // 75 01E9
        gbc.setState(0xa777, 0xab11, 0xcd0, 0xf54, 0x6c9, 0xe895, 0x0, 0x1);
        gbc.writeMem(0xa777, { 0x75 });
        gbc.writeMem(0xe895, { 0x0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xab11, gbc.sp());
        EXPECT(0xa778, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xa777));
        EXPECT(0x95, gbc.readMem(0xe895));
        // 75 01EA
        gbc.setState(0x60ec, 0xec77, 0x4750, 0x4ec4, 0x943a, 0x9a5c, 0x0, 0x1);
        gbc.writeMem(0x60ec, { 0x75 });
        gbc.writeMem(0x9a5c, { 0x0 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xec77, gbc.sp());
        EXPECT(0x60ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0x9a5c));
        // 75 01EC
        gbc.setState(0xa349, 0x5b2a, 0xdc10, 0x2d11, 0x95b9, 0xcaf0, 0x0, 0x0);
        gbc.writeMem(0xa349, { 0x75 });
        gbc.writeMem(0xcaf0, { 0x0 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x5b2a, gbc.sp());
        EXPECT(0xa34a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xa349));
        EXPECT(0xf0, gbc.readMem(0xcaf0));
        // 75 01F1
        gbc.setState(0x59ea, 0xde7f, 0xf4c0, 0x6771, 0x1cf0, 0xd6c6, 0x1, 0x1);
        gbc.writeMem(0x59ea, { 0x75 });
        gbc.writeMem(0xd6c6, { 0x0 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xde7f, gbc.sp());
        EXPECT(0x59eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xd6c6));
        // 75 01F3
        gbc.setState(0x3b4c, 0xc0cb, 0x5140, 0x6127, 0x3346, 0x8c76, 0x1, 0x0);
        gbc.writeMem(0x3b4c, { 0x75 });
        gbc.writeMem(0x8c76, { 0x0 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xc0cb, gbc.sp());
        EXPECT(0x3b4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x8c76));
        // 75 01F4
        gbc.setState(0xcf12, 0x7402, 0x9c20, 0x2550, 0x1915, 0xb386, 0x1, 0x0);
        gbc.writeMem(0xb386, { 0x0 });
        gbc.writeMem(0xcf12, { 0x75 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x7402, gbc.sp());
        EXPECT(0xcf13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xb386));
        EXPECT(0x75, gbc.readMem(0xcf12));
        // 75 01F9
        gbc.setState(0x8498, 0x254d, 0xea20, 0x2872, 0x8e6f, 0x8759, 0x1, 0x0);
        gbc.writeMem(0x8498, { 0x75 });
        gbc.writeMem(0x8759, { 0x0 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x254d, gbc.sp());
        EXPECT(0x8499, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x8498));
        EXPECT(0x59, gbc.readMem(0x8759));
        // 75 01FC
        gbc.setState(0xeac5, 0x81ce, 0xf450, 0x739, 0xc1a9, 0xd2db, 0x0, 0x1);
        gbc.writeMem(0xd2db, { 0x0 });
        gbc.writeMem(0xeac5, { 0x75 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x81ce, gbc.sp());
        EXPECT(0xeac6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0xd2db));
        EXPECT(0x75, gbc.readMem(0xeac5));
        // 75 01FD
        gbc.setState(0x5981, 0xb97d, 0x6600, 0xc00e, 0xc903, 0xedcd, 0x1, 0x1);
        gbc.writeMem(0x5981, { 0x75 });
        gbc.writeMem(0xedcd, { 0x0 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xb97d, gbc.sp());
        EXPECT(0x5982, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0xedcd));
        // 75 01FE
        gbc.setState(0xb380, 0x93bd, 0x91e0, 0x5999, 0x4655, 0xdfdb, 0x0, 0x0);
        gbc.writeMem(0xb380, { 0x75 });
        gbc.writeMem(0xdfdb, { 0x0 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x93bd, gbc.sp());
        EXPECT(0xb381, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xb380));
        EXPECT(0xdb, gbc.readMem(0xdfdb));
        // 75 0200
        gbc.setState(0xc67a, 0x375, 0x3fd0, 0x35d5, 0x1c68, 0xcab3, 0x0, 0x0);
        gbc.writeMem(0xc67a, { 0x75 });
        gbc.writeMem(0xcab3, { 0x0 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x375, gbc.sp());
        EXPECT(0xc67b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xc67a));
        EXPECT(0xb3, gbc.readMem(0xcab3));
        // 75 0203
        gbc.setState(0x9cb, 0x7718, 0x89b0, 0x784f, 0xe887, 0xf92d, 0x0, 0x1);
        gbc.writeMem(0x9cb, { 0x75 });
        gbc.writeMem(0xf92d, { 0x0 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x7718, gbc.sp());
        EXPECT(0x9cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xf92d));
        // 75 0204
        gbc.setState(0x4451, 0x82cf, 0x1b00, 0x9c75, 0x2526, 0x8569, 0x0, 0x1);
        gbc.writeMem(0x4451, { 0x75 });
        gbc.writeMem(0x8569, { 0x0 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x82cf, gbc.sp());
        EXPECT(0x4452, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x8569));
        // 75 0205
        gbc.setState(0x9534, 0x8c1d, 0x9990, 0xd60b, 0x6d50, 0xd4f7, 0x1, 0x1);
        gbc.writeMem(0x9534, { 0x75 });
        gbc.writeMem(0xd4f7, { 0x0 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x8c1d, gbc.sp());
        EXPECT(0x9535, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x9534));
        EXPECT(0xf7, gbc.readMem(0xd4f7));
        // 75 0207
        gbc.setState(0xd16d, 0x4120, 0xea40, 0xc8ea, 0xe4ae, 0xfdea, 0x0, 0x1);
        gbc.writeMem(0xd16d, { 0x75 });
        gbc.writeMem(0xfdea, { 0x0 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x4120, gbc.sp());
        EXPECT(0xd16e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xd16d));
        EXPECT(0xea, gbc.readMem(0xfdea));
        // 75 020C
        gbc.setState(0x9677, 0x9d1c, 0xe490, 0xe7ed, 0x85a4, 0x8b6b, 0x1, 0x1);
        gbc.writeMem(0x8b6b, { 0x0 });
        gbc.writeMem(0x9677, { 0x75 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x9d1c, gbc.sp());
        EXPECT(0x9678, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6b, gbc.readMem(0x8b6b));
        EXPECT(0x75, gbc.readMem(0x9677));
        // 75 020D
        gbc.setState(0x8d6f, 0xe882, 0x4600, 0x9aba, 0xa956, 0x86ff, 0x1, 0x1);
        gbc.writeMem(0x86ff, { 0x0 });
        gbc.writeMem(0x8d6f, { 0x75 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xe882, gbc.sp());
        EXPECT(0x8d70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x86ff));
        EXPECT(0x75, gbc.readMem(0x8d6f));
        // 75 020E
        gbc.setState(0x430f, 0x8f99, 0xe0a0, 0x45f5, 0x10d3, 0xd68e, 0x1, 0x0);
        gbc.writeMem(0x430f, { 0x75 });
        gbc.writeMem(0xd68e, { 0x0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x8f99, gbc.sp());
        EXPECT(0x4310, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0xd68e));
        // 75 020F
        gbc.setState(0x393f, 0x33a3, 0x1770, 0xf156, 0xcafd, 0x9c93, 0x1, 0x1);
        gbc.writeMem(0x393f, { 0x75 });
        gbc.writeMem(0x9c93, { 0x0 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x33a3, gbc.sp());
        EXPECT(0x3940, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x9c93));
        // 75 0211
        gbc.setState(0xaa68, 0x669c, 0x3880, 0x107b, 0xa0de, 0xa978, 0x0, 0x1);
        gbc.writeMem(0xa978, { 0x0 });
        gbc.writeMem(0xaa68, { 0x75 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x669c, gbc.sp());
        EXPECT(0xaa69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xa978));
        EXPECT(0x75, gbc.readMem(0xaa68));
        // 75 0212
        gbc.setState(0xa4d4, 0x2d47, 0xfd30, 0x3594, 0x1e33, 0xb344, 0x1, 0x1);
        gbc.writeMem(0xa4d4, { 0x75 });
        gbc.writeMem(0xb344, { 0x0 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x2d47, gbc.sp());
        EXPECT(0xa4d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xa4d4));
        EXPECT(0x44, gbc.readMem(0xb344));
        // 75 0214
        gbc.setState(0xe725, 0x1bfe, 0xbe90, 0xc4d9, 0x9ccb, 0x8f91, 0x1, 0x0);
        gbc.writeMem(0x8f91, { 0x0 });
        gbc.writeMem(0xe725, { 0x75 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x1bfe, gbc.sp());
        EXPECT(0xe726, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x8f91));
        EXPECT(0x75, gbc.readMem(0xe725));
        // 75 0217
        gbc.setState(0x62c9, 0xa75a, 0xf770, 0xb25, 0x9d17, 0xb5c1, 0x1, 0x0);
        gbc.writeMem(0x62c9, { 0x75 });
        gbc.writeMem(0xb5c1, { 0x0 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xa75a, gbc.sp());
        EXPECT(0x62ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xb5c1));
        // 75 021C
        gbc.setState(0x7c8d, 0xc349, 0x7050, 0xb500, 0x4cec, 0xacd4, 0x0, 0x0);
        gbc.writeMem(0x7c8d, { 0x75 });
        gbc.writeMem(0xacd4, { 0x0 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xc349, gbc.sp());
        EXPECT(0x7c8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xacd4));
        // 75 021D
        gbc.setState(0x8c52, 0xe7df, 0xac00, 0x1e87, 0x1b52, 0x9fff, 0x1, 0x1);
        gbc.writeMem(0x8c52, { 0x75 });
        gbc.writeMem(0x9fff, { 0x0 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xe7df, gbc.sp());
        EXPECT(0x8c53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x8c52));
        EXPECT(0xff, gbc.readMem(0x9fff));
        // 75 0220
        gbc.setState(0x1084, 0x7e75, 0x3930, 0x213e, 0xdc92, 0xf3a4, 0x1, 0x0);
        gbc.writeMem(0x1084, { 0x75 });
        gbc.writeMem(0xf3a4, { 0x0 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x7e75, gbc.sp());
        EXPECT(0x1085, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xf3a4));
        // 75 0223
        gbc.setState(0x9dd4, 0x5bec, 0x3bf0, 0xa09d, 0x61cb, 0xe53b, 0x1, 0x0);
        gbc.writeMem(0x9dd4, { 0x75 });
        gbc.writeMem(0xe53b, { 0x0 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x5bec, gbc.sp());
        EXPECT(0x9dd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x9dd4));
        EXPECT(0x3b, gbc.readMem(0xe53b));
        // 75 0225
        gbc.setState(0x61e1, 0x301, 0xf640, 0xf8e4, 0x261d, 0xcaad, 0x1, 0x1);
        gbc.writeMem(0x61e1, { 0x75 });
        gbc.writeMem(0xcaad, { 0x0 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x301, gbc.sp());
        EXPECT(0x61e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0xcaad));
        // 75 0226
        gbc.setState(0x19a1, 0xe50, 0x34c0, 0xfb5d, 0x161e, 0xe983, 0x1, 0x1);
        gbc.writeMem(0x19a1, { 0x75 });
        gbc.writeMem(0xe983, { 0x0 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xe50, gbc.sp());
        EXPECT(0x19a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0xe983));
        // 75 022A
        gbc.setState(0x2aff, 0x40ad, 0xcaf0, 0x3358, 0x4854, 0xd83c, 0x1, 0x1);
        gbc.writeMem(0x2aff, { 0x75 });
        gbc.writeMem(0xd83c, { 0x0 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x40ad, gbc.sp());
        EXPECT(0x2b00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xd83c));
        // 75 022B
        gbc.setState(0xc319, 0x706d, 0x62b0, 0x7dfd, 0x8344, 0xae3c, 0x1, 0x0);
        gbc.writeMem(0xae3c, { 0x0 });
        gbc.writeMem(0xc319, { 0x75 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x706d, gbc.sp());
        EXPECT(0xc31a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xae3c));
        EXPECT(0x75, gbc.readMem(0xc319));
        // 75 022C
        gbc.setState(0xb9e8, 0xa6a7, 0x48e0, 0x78a5, 0x2ec9, 0xc6bb, 0x1, 0x0);
        gbc.writeMem(0xb9e8, { 0x75 });
        gbc.writeMem(0xc6bb, { 0x0 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xa6a7, gbc.sp());
        EXPECT(0xb9e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xb9e8));
        EXPECT(0xbb, gbc.readMem(0xc6bb));
        // 75 022E
        gbc.setState(0x83c5, 0x7572, 0x7070, 0x2ee0, 0x2090, 0xc85e, 0x0, 0x0);
        gbc.writeMem(0x83c5, { 0x75 });
        gbc.writeMem(0xc85e, { 0x0 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x7572, gbc.sp());
        EXPECT(0x83c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x83c5));
        EXPECT(0x5e, gbc.readMem(0xc85e));
        // 75 022F
        gbc.setState(0xa3bb, 0x168e, 0x12c0, 0xcd46, 0x45da, 0xefe1, 0x1, 0x0);
        gbc.writeMem(0xa3bb, { 0x75 });
        gbc.writeMem(0xefe1, { 0x0 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x168e, gbc.sp());
        EXPECT(0xa3bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xa3bb));
        EXPECT(0xe1, gbc.readMem(0xefe1));
        // 75 0235
        gbc.setState(0xc8f8, 0x35b, 0x22d0, 0x4e05, 0xb67f, 0xba72, 0x0, 0x1);
        gbc.writeMem(0xba72, { 0x0 });
        gbc.writeMem(0xc8f8, { 0x75 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x35b, gbc.sp());
        EXPECT(0xc8f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xba72));
        EXPECT(0x75, gbc.readMem(0xc8f8));
        // 75 0237
        gbc.setState(0xb0b0, 0x5610, 0x2fb0, 0x71b8, 0x6383, 0xd7c7, 0x1, 0x1);
        gbc.writeMem(0xb0b0, { 0x75 });
        gbc.writeMem(0xd7c7, { 0x0 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x5610, gbc.sp());
        EXPECT(0xb0b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xb0b0));
        EXPECT(0xc7, gbc.readMem(0xd7c7));
        // 75 023A
        gbc.setState(0xa4b6, 0x6ece, 0x2a20, 0x212a, 0xc50a, 0x949e, 0x0, 0x0);
        gbc.writeMem(0x949e, { 0x0 });
        gbc.writeMem(0xa4b6, { 0x75 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x6ece, gbc.sp());
        EXPECT(0xa4b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x949e));
        EXPECT(0x75, gbc.readMem(0xa4b6));
        // 75 023B
        gbc.setState(0x3b7c, 0x3bf9, 0x70f0, 0x5b50, 0x25e6, 0xc204, 0x0, 0x1);
        gbc.writeMem(0x3b7c, { 0x75 });
        gbc.writeMem(0xc204, { 0x0 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x3bf9, gbc.sp());
        EXPECT(0x3b7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xc204));
        // 75 023D
        gbc.setState(0x7578, 0xeb93, 0xa200, 0x3792, 0xeb72, 0x9025, 0x0, 0x0);
        gbc.writeMem(0x7578, { 0x75 });
        gbc.writeMem(0x9025, { 0x0 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xeb93, gbc.sp());
        EXPECT(0x7579, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x9025));
        // 75 023E
        gbc.setState(0x3156, 0x123c, 0x7b30, 0x5606, 0x7e17, 0xc4c2, 0x1, 0x0);
        gbc.writeMem(0x3156, { 0x75 });
        gbc.writeMem(0xc4c2, { 0x0 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x123c, gbc.sp());
        EXPECT(0x3157, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xc4c2));
        // 75 023F
        gbc.setState(0xddc2, 0xfed4, 0xfbb0, 0xe691, 0x3f2b, 0xcddd, 0x0, 0x1);
        gbc.writeMem(0xcddd, { 0x0 });
        gbc.writeMem(0xddc2, { 0x75 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xfed4, gbc.sp());
        EXPECT(0xddc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0xcddd));
        EXPECT(0x75, gbc.readMem(0xddc2));
        // 75 0241
        gbc.setState(0x88f, 0x1631, 0x3390, 0x6743, 0x54d3, 0x84a7, 0x0, 0x0);
        gbc.writeMem(0x88f, { 0x75 });
        gbc.writeMem(0x84a7, { 0x0 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x1631, gbc.sp());
        EXPECT(0x890, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x84a7));
        // 75 0242
        gbc.setState(0xc972, 0x7126, 0x1540, 0x5f31, 0xad57, 0xc64e, 0x1, 0x1);
        gbc.writeMem(0xc64e, { 0x0 });
        gbc.writeMem(0xc972, { 0x75 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x7126, gbc.sp());
        EXPECT(0xc973, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xc64e));
        EXPECT(0x75, gbc.readMem(0xc972));
        // 75 0243
        gbc.setState(0x9b58, 0x79fa, 0x8070, 0x8b5d, 0x83c6, 0xed9e, 0x1, 0x0);
        gbc.writeMem(0x9b58, { 0x75 });
        gbc.writeMem(0xed9e, { 0x0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x79fa, gbc.sp());
        EXPECT(0x9b59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x9b58));
        EXPECT(0x9e, gbc.readMem(0xed9e));
        // 75 0246
        gbc.setState(0xa59f, 0xd798, 0xa4e0, 0x6c0e, 0x105f, 0xd930, 0x1, 0x1);
        gbc.writeMem(0xa59f, { 0x75 });
        gbc.writeMem(0xd930, { 0x0 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xd798, gbc.sp());
        EXPECT(0xa5a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xa59f));
        EXPECT(0x30, gbc.readMem(0xd930));
        // 75 0249
        gbc.setState(0xcaa, 0xacf5, 0xc700, 0xae6c, 0x43f1, 0x87a5, 0x0, 0x1);
        gbc.writeMem(0xcaa, { 0x75 });
        gbc.writeMem(0x87a5, { 0x0 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xacf5, gbc.sp());
        EXPECT(0xcab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa5, gbc.readMem(0x87a5));
        // 75 024B
        gbc.setState(0xc57d, 0x9b5e, 0xd070, 0x8972, 0xbd1e, 0xe630, 0x0, 0x1);
        gbc.writeMem(0xc57d, { 0x75 });
        gbc.writeMem(0xe630, { 0x0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x9b5e, gbc.sp());
        EXPECT(0xc57e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xc57d));
        EXPECT(0x30, gbc.readMem(0xe630));
        // 75 024C
        gbc.setState(0x48cb, 0xac38, 0x6e40, 0x4b36, 0xac09, 0x8379, 0x0, 0x0);
        gbc.writeMem(0x48cb, { 0x75 });
        gbc.writeMem(0x8379, { 0x0 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xac38, gbc.sp());
        EXPECT(0x48cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x8379));
        // 75 024D
        gbc.setState(0x7cc0, 0x9eda, 0x73e0, 0xddb, 0xe19d, 0x8c12, 0x0, 0x0);
        gbc.writeMem(0x7cc0, { 0x75 });
        gbc.writeMem(0x8c12, { 0x0 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x9eda, gbc.sp());
        EXPECT(0x7cc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x8c12));
        // 75 024E
        gbc.setState(0xc3f8, 0x4150, 0x9570, 0x1449, 0x36e4, 0xf819, 0x0, 0x1);
        gbc.writeMem(0xc3f8, { 0x75 });
        gbc.writeMem(0xf819, { 0x0 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x4150, gbc.sp());
        EXPECT(0xc3f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xc3f8));
        EXPECT(0x19, gbc.readMem(0xf819));
        // 75 024F
        gbc.setState(0xe868, 0x578e, 0x8c50, 0x21d5, 0xbe8d, 0xca6e, 0x1, 0x1);
        gbc.writeMem(0xca6e, { 0x0 });
        gbc.writeMem(0xe868, { 0x75 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x578e, gbc.sp());
        EXPECT(0xe869, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xca6e));
        EXPECT(0x75, gbc.readMem(0xe868));
        // 75 0252
        gbc.setState(0x7a5f, 0xdc9e, 0xad60, 0x8cdf, 0x16af, 0x8d05, 0x1, 0x1);
        gbc.writeMem(0x7a5f, { 0x75 });
        gbc.writeMem(0x8d05, { 0x0 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xdc9e, gbc.sp());
        EXPECT(0x7a60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x8d05));
        // 75 0255
        gbc.setState(0x5f53, 0xfc35, 0x4f60, 0x35ee, 0xb581, 0x8c3a, 0x0, 0x1);
        gbc.writeMem(0x5f53, { 0x75 });
        gbc.writeMem(0x8c3a, { 0x0 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xfc35, gbc.sp());
        EXPECT(0x5f54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3a, gbc.readMem(0x8c3a));
        // 75 0257
        gbc.setState(0x1130, 0x710e, 0xcd60, 0xfe6d, 0x5c3a, 0xb187, 0x0, 0x1);
        gbc.writeMem(0x1130, { 0x75 });
        gbc.writeMem(0xb187, { 0x0 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x710e, gbc.sp());
        EXPECT(0x1131, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xb187));
        // 75 025A
        gbc.setState(0x71e5, 0x2395, 0xd0f0, 0xc816, 0x1c65, 0xe58d, 0x1, 0x0);
        gbc.writeMem(0x71e5, { 0x75 });
        gbc.writeMem(0xe58d, { 0x0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x2395, gbc.sp());
        EXPECT(0x71e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xe58d));
        // 75 025D
        gbc.setState(0x6dfb, 0x4a26, 0x630, 0xa266, 0x133a, 0xbb28, 0x0, 0x1);
        gbc.writeMem(0x6dfb, { 0x75 });
        gbc.writeMem(0xbb28, { 0x0 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x4a26, gbc.sp());
        EXPECT(0x6dfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x28, gbc.readMem(0xbb28));
        // 75 025E
        gbc.setState(0xcb0c, 0x8ad8, 0x5ac0, 0xec81, 0xe55c, 0x882e, 0x1, 0x0);
        gbc.writeMem(0x882e, { 0x0 });
        gbc.writeMem(0xcb0c, { 0x75 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x8ad8, gbc.sp());
        EXPECT(0xcb0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x882e));
        EXPECT(0x75, gbc.readMem(0xcb0c));
        // 75 025F
        gbc.setState(0x531a, 0x8b61, 0xb1f0, 0x222d, 0x9ea2, 0xdb39, 0x0, 0x1);
        gbc.writeMem(0x531a, { 0x75 });
        gbc.writeMem(0xdb39, { 0x0 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x8b61, gbc.sp());
        EXPECT(0x531b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0xdb39));
        // 75 0260
        gbc.setState(0x2d4d, 0x5d65, 0xe0e0, 0x625f, 0x546d, 0xf9f8, 0x0, 0x0);
        gbc.writeMem(0x2d4d, { 0x75 });
        gbc.writeMem(0xf9f8, { 0x0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x5d65, gbc.sp());
        EXPECT(0x2d4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xf9f8));
        // 75 0261
        gbc.setState(0x5f6c, 0xa151, 0xb480, 0x1b3c, 0xbfde, 0x9ccf, 0x1, 0x1);
        gbc.writeMem(0x5f6c, { 0x75 });
        gbc.writeMem(0x9ccf, { 0x0 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xa151, gbc.sp());
        EXPECT(0x5f6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0x9ccf));
        // 75 0262
        gbc.setState(0x6c8b, 0x9239, 0xbe70, 0xd6d5, 0x4289, 0xaa6d, 0x0, 0x1);
        gbc.writeMem(0x6c8b, { 0x75 });
        gbc.writeMem(0xaa6d, { 0x0 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x9239, gbc.sp());
        EXPECT(0x6c8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xaa6d));
        // 75 0263
        gbc.setState(0x951a, 0x4bc1, 0x30e0, 0x16d2, 0x8f54, 0xacb5, 0x1, 0x0);
        gbc.writeMem(0x951a, { 0x75 });
        gbc.writeMem(0xacb5, { 0x0 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x4bc1, gbc.sp());
        EXPECT(0x951b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x951a));
        EXPECT(0xb5, gbc.readMem(0xacb5));
        // 75 0264
        gbc.setState(0x4ccf, 0x61ee, 0xd250, 0xc07e, 0x146a, 0xfdea, 0x1, 0x0);
        gbc.writeMem(0x4ccf, { 0x75 });
        gbc.writeMem(0xfdea, { 0x0 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x61ee, gbc.sp());
        EXPECT(0x4cd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0xfdea));
        // 75 0265
        gbc.setState(0xaf3b, 0x6ff9, 0x79a0, 0xcafc, 0x3f2e, 0xf2c1, 0x0, 0x0);
        gbc.writeMem(0xaf3b, { 0x75 });
        gbc.writeMem(0xf2c1, { 0x0 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x6ff9, gbc.sp());
        EXPECT(0xaf3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xaf3b));
        EXPECT(0xc1, gbc.readMem(0xf2c1));
        // 75 0266
        gbc.setState(0x9f8f, 0x993f, 0xc980, 0xcce2, 0xa950, 0xd6c9, 0x0, 0x0);
        gbc.writeMem(0x9f8f, { 0x75 });
        gbc.writeMem(0xd6c9, { 0x0 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x993f, gbc.sp());
        EXPECT(0x9f90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x9f8f));
        EXPECT(0xc9, gbc.readMem(0xd6c9));
        // 75 0267
        gbc.setState(0x29ba, 0x1957, 0x6800, 0x54f4, 0x58f2, 0xd20e, 0x1, 0x1);
        gbc.writeMem(0x29ba, { 0x75 });
        gbc.writeMem(0xd20e, { 0x0 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x1957, gbc.sp());
        EXPECT(0x29bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xd20e));
        // 75 0268
        gbc.setState(0x6bb7, 0xcb3, 0x7fa0, 0x9c30, 0x5b23, 0x9292, 0x1, 0x0);
        gbc.writeMem(0x6bb7, { 0x75 });
        gbc.writeMem(0x9292, { 0x0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xcb3, gbc.sp());
        EXPECT(0x6bb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x9292));
        // 75 026A
        gbc.setState(0x50d7, 0x31af, 0xe920, 0x5e8c, 0xc16a, 0xb082, 0x0, 0x0);
        gbc.writeMem(0x50d7, { 0x75 });
        gbc.writeMem(0xb082, { 0x0 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x31af, gbc.sp());
        EXPECT(0x50d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xb082));
        // 75 026D
        gbc.setState(0xb9e4, 0xcbf, 0x3500, 0x4e03, 0x21bc, 0xa974, 0x1, 0x1);
        gbc.writeMem(0xa974, { 0x0 });
        gbc.writeMem(0xb9e4, { 0x75 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xcbf, gbc.sp());
        EXPECT(0xb9e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xa974));
        EXPECT(0x75, gbc.readMem(0xb9e4));
        // 75 0273
        gbc.setState(0xa9e6, 0x89ec, 0xf350, 0xfec9, 0x7859, 0xa160, 0x0, 0x1);
        gbc.writeMem(0xa160, { 0x0 });
        gbc.writeMem(0xa9e6, { 0x75 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x89ec, gbc.sp());
        EXPECT(0xa9e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0xa160));
        EXPECT(0x75, gbc.readMem(0xa9e6));
        // 75 0274
        gbc.setState(0x1838, 0x3967, 0x1d10, 0x60ee, 0x9caf, 0x89a3, 0x1, 0x1);
        gbc.writeMem(0x1838, { 0x75 });
        gbc.writeMem(0x89a3, { 0x0 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x3967, gbc.sp());
        EXPECT(0x1839, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x89a3));
        // 75 0278
        gbc.setState(0x8a11, 0x4123, 0xa190, 0x4de1, 0x7448, 0xe847, 0x1, 0x1);
        gbc.writeMem(0x8a11, { 0x75 });
        gbc.writeMem(0xe847, { 0x0 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x4123, gbc.sp());
        EXPECT(0x8a12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x8a11));
        EXPECT(0x47, gbc.readMem(0xe847));
        // 75 027A
        gbc.setState(0xb2be, 0x88e6, 0x1b0, 0xda9b, 0xbd43, 0x9fd6, 0x1, 0x1);
        gbc.writeMem(0x9fd6, { 0x0 });
        gbc.writeMem(0xb2be, { 0x75 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x88e6, gbc.sp());
        EXPECT(0xb2bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x9fd6));
        EXPECT(0x75, gbc.readMem(0xb2be));
        // 75 027C
        gbc.setState(0xd7d3, 0xe5e8, 0x39d0, 0x5415, 0x53ac, 0x9a79, 0x0, 0x1);
        gbc.writeMem(0x9a79, { 0x0 });
        gbc.writeMem(0xd7d3, { 0x75 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xe5e8, gbc.sp());
        EXPECT(0xd7d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x9a79));
        EXPECT(0x75, gbc.readMem(0xd7d3));
        // 75 027D
        gbc.setState(0x6cb5, 0x8ef8, 0x1ba0, 0x4a15, 0x4233, 0xef70, 0x0, 0x0);
        gbc.writeMem(0x6cb5, { 0x75 });
        gbc.writeMem(0xef70, { 0x0 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x8ef8, gbc.sp());
        EXPECT(0x6cb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0xef70));
        // 75 0280
        gbc.setState(0xea29, 0xaf69, 0xc0b0, 0xa5e3, 0x69bd, 0x82e3, 0x0, 0x1);
        gbc.writeMem(0x82e3, { 0x0 });
        gbc.writeMem(0xea29, { 0x75 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xaf69, gbc.sp());
        EXPECT(0xea2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0x82e3));
        EXPECT(0x75, gbc.readMem(0xea29));
        // 75 0281
        gbc.setState(0x67c8, 0xa4ce, 0xa050, 0xf5dd, 0xbd3b, 0xe39d, 0x1, 0x1);
        gbc.writeMem(0x67c8, { 0x75 });
        gbc.writeMem(0xe39d, { 0x0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xa4ce, gbc.sp());
        EXPECT(0x67c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xe39d));
        // 75 0284
        gbc.setState(0x58b0, 0x3865, 0x6820, 0xfae9, 0xd5e4, 0xac21, 0x1, 0x0);
        gbc.writeMem(0x58b0, { 0x75 });
        gbc.writeMem(0xac21, { 0x0 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x3865, gbc.sp());
        EXPECT(0x58b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xac21));
        // 75 0285
        gbc.setState(0xa3bc, 0x967c, 0xb650, 0x59c8, 0x69c, 0xbc3b, 0x0, 0x1);
        gbc.writeMem(0xa3bc, { 0x75 });
        gbc.writeMem(0xbc3b, { 0x0 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x967c, gbc.sp());
        EXPECT(0xa3bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xa3bc));
        EXPECT(0x3b, gbc.readMem(0xbc3b));
        // 75 0290
        gbc.setState(0x42ce, 0x676a, 0x840, 0x412b, 0xba95, 0xbabd, 0x1, 0x1);
        gbc.writeMem(0x42ce, { 0x75 });
        gbc.writeMem(0xbabd, { 0x0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x676a, gbc.sp());
        EXPECT(0x42cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xbabd));
        // 75 0291
        gbc.setState(0x9633, 0x84ac, 0x3b0, 0xa164, 0x463, 0xeab4, 0x0, 0x0);
        gbc.writeMem(0x9633, { 0x75 });
        gbc.writeMem(0xeab4, { 0x0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x84ac, gbc.sp());
        EXPECT(0x9634, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x9633));
        EXPECT(0xb4, gbc.readMem(0xeab4));
        // 75 0296
        gbc.setState(0xd23d, 0xa116, 0xe10, 0xace0, 0x6b0b, 0x96fa, 0x0, 0x0);
        gbc.writeMem(0x96fa, { 0x0 });
        gbc.writeMem(0xd23d, { 0x75 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xa116, gbc.sp());
        EXPECT(0xd23e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x96fa));
        EXPECT(0x75, gbc.readMem(0xd23d));
        // 75 0297
        gbc.setState(0x287e, 0x3eae, 0xe050, 0xcfb8, 0xc37c, 0xe0e5, 0x1, 0x0);
        gbc.writeMem(0x287e, { 0x75 });
        gbc.writeMem(0xe0e5, { 0x0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x3eae, gbc.sp());
        EXPECT(0x287f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xe0e5));
        // 75 0298
        gbc.setState(0x690f, 0x71c8, 0x8fc0, 0x74e0, 0xf8d0, 0x882d, 0x0, 0x1);
        gbc.writeMem(0x690f, { 0x75 });
        gbc.writeMem(0x882d, { 0x0 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x71c8, gbc.sp());
        EXPECT(0x6910, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x882d));
        // 75 029A
        gbc.setState(0xedb9, 0x17a1, 0x5f30, 0x119f, 0xd2b1, 0xeae0, 0x0, 0x0);
        gbc.writeMem(0xeae0, { 0x0 });
        gbc.writeMem(0xedb9, { 0x75 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x17a1, gbc.sp());
        EXPECT(0xedba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xeae0));
        EXPECT(0x75, gbc.readMem(0xedb9));
        // 75 029C
        gbc.setState(0x8a4e, 0x49af, 0x9790, 0xcc64, 0x371a, 0xb19e, 0x1, 0x1);
        gbc.writeMem(0x8a4e, { 0x75 });
        gbc.writeMem(0xb19e, { 0x0 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x49af, gbc.sp());
        EXPECT(0x8a4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x8a4e));
        EXPECT(0x9e, gbc.readMem(0xb19e));
        // 75 029F
        gbc.setState(0x548b, 0x6821, 0xefc0, 0xf144, 0xad26, 0xf66c, 0x1, 0x0);
        gbc.writeMem(0x548b, { 0x75 });
        gbc.writeMem(0xf66c, { 0x0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x6821, gbc.sp());
        EXPECT(0x548c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xf66c));
        // 75 02A2
        gbc.setState(0xc9d1, 0x737c, 0x5c40, 0x8df6, 0x1437, 0x8143, 0x0, 0x0);
        gbc.writeMem(0x8143, { 0x0 });
        gbc.writeMem(0xc9d1, { 0x75 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x737c, gbc.sp());
        EXPECT(0xc9d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x8143));
        EXPECT(0x75, gbc.readMem(0xc9d1));
        // 75 02A5
        gbc.setState(0x3150, 0xe0d7, 0xca80, 0xbce0, 0xccfe, 0xb9d7, 0x1, 0x0);
        gbc.writeMem(0x3150, { 0x75 });
        gbc.writeMem(0xb9d7, { 0x0 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xe0d7, gbc.sp());
        EXPECT(0x3151, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0xb9d7));
        // 75 02A9
        gbc.setState(0x861f, 0xaa34, 0x8910, 0xea8c, 0x1579, 0xfbf9, 0x0, 0x0);
        gbc.writeMem(0x861f, { 0x75 });
        gbc.writeMem(0xfbf9, { 0x0 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xaa34, gbc.sp());
        EXPECT(0x8620, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x861f));
        EXPECT(0xf9, gbc.readMem(0xfbf9));
        // 75 02AA
        gbc.setState(0xc4ae, 0x5d4d, 0x7ec0, 0xe05e, 0x1ebc, 0xc717, 0x1, 0x0);
        gbc.writeMem(0xc4ae, { 0x75 });
        gbc.writeMem(0xc717, { 0x0 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x5d4d, gbc.sp());
        EXPECT(0xc4af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xc4ae));
        EXPECT(0x17, gbc.readMem(0xc717));
        // 75 02AC
        gbc.setState(0xe367, 0xc374, 0x2120, 0xa61a, 0x396b, 0x8eb8, 0x0, 0x1);
        gbc.writeMem(0x8eb8, { 0x0 });
        gbc.writeMem(0xe367, { 0x75 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xc374, gbc.sp());
        EXPECT(0xe368, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0x8eb8));
        EXPECT(0x75, gbc.readMem(0xe367));
        // 75 02AD
        gbc.setState(0xaf58, 0xcf1, 0xdc70, 0x4140, 0x63fc, 0x8912, 0x1, 0x1);
        gbc.writeMem(0x8912, { 0x0 });
        gbc.writeMem(0xaf58, { 0x75 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xcf1, gbc.sp());
        EXPECT(0xaf59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0x8912));
        EXPECT(0x75, gbc.readMem(0xaf58));
        // 75 02AF
        gbc.setState(0x216, 0x2d73, 0xa4f0, 0xbafd, 0x5ac2, 0x9ee6, 0x0, 0x1);
        gbc.writeMem(0x216, { 0x75 });
        gbc.writeMem(0x9ee6, { 0x0 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x2d73, gbc.sp());
        EXPECT(0x217, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x9ee6));
        // 75 02B0
        gbc.setState(0x854f, 0x4af6, 0x6980, 0xce31, 0xbac2, 0x8755, 0x1, 0x0);
        gbc.writeMem(0x854f, { 0x75 });
        gbc.writeMem(0x8755, { 0x0 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x4af6, gbc.sp());
        EXPECT(0x8550, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x854f));
        EXPECT(0x55, gbc.readMem(0x8755));
        // 75 02B2
        gbc.setState(0x6fa0, 0x895d, 0xafd0, 0xdf67, 0xfd94, 0xa594, 0x0, 0x1);
        gbc.writeMem(0x6fa0, { 0x75 });
        gbc.writeMem(0xa594, { 0x0 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x895d, gbc.sp());
        EXPECT(0x6fa1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xa594));
        // 75 02B3
        gbc.setState(0x5bc3, 0x9ea9, 0xcdd0, 0xe07, 0xdbad, 0xe2d0, 0x1, 0x1);
        gbc.writeMem(0x5bc3, { 0x75 });
        gbc.writeMem(0xe2d0, { 0x0 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x9ea9, gbc.sp());
        EXPECT(0x5bc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xe2d0));
        // 75 02B4
        gbc.setState(0x6206, 0xd033, 0xd230, 0xcb92, 0x2ad3, 0xd66c, 0x0, 0x1);
        gbc.writeMem(0x6206, { 0x75 });
        gbc.writeMem(0xd66c, { 0x0 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xd033, gbc.sp());
        EXPECT(0x6207, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xd66c));
        // 75 02B6
        gbc.setState(0x56c3, 0xf88, 0x5ff0, 0xafeb, 0x86b2, 0xc3ea, 0x0, 0x0);
        gbc.writeMem(0x56c3, { 0x75 });
        gbc.writeMem(0xc3ea, { 0x0 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xf88, gbc.sp());
        EXPECT(0x56c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0xc3ea));
        // 75 02B7
        gbc.setState(0x4eb8, 0x2db3, 0x1640, 0x4a8b, 0x39ce, 0xa18e, 0x0, 0x0);
        gbc.writeMem(0x4eb8, { 0x75 });
        gbc.writeMem(0xa18e, { 0x0 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x2db3, gbc.sp());
        EXPECT(0x4eb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0xa18e));
        // 75 02B8
        gbc.setState(0x7251, 0xd98a, 0xd150, 0x3f3c, 0xb8be, 0xf066, 0x1, 0x0);
        gbc.writeMem(0x7251, { 0x75 });
        gbc.writeMem(0xf066, { 0x0 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xd98a, gbc.sp());
        EXPECT(0x7252, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xf066));
        // 75 02C0
        gbc.setState(0x6a4b, 0xaadf, 0x430, 0x96a7, 0xeb52, 0x9af5, 0x1, 0x1);
        gbc.writeMem(0x6a4b, { 0x75 });
        gbc.writeMem(0x9af5, { 0x0 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xaadf, gbc.sp());
        EXPECT(0x6a4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0x9af5));
        // 75 02C1
        gbc.setState(0x25d4, 0x9b2e, 0xac00, 0x26c9, 0x8ff6, 0xb1ea, 0x0, 0x0);
        gbc.writeMem(0x25d4, { 0x75 });
        gbc.writeMem(0xb1ea, { 0x0 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x9b2e, gbc.sp());
        EXPECT(0x25d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0xb1ea));
        // 75 02C2
        gbc.setState(0x8888, 0x27ac, 0x7470, 0x2563, 0x4bd9, 0xd290, 0x1, 0x0);
        gbc.writeMem(0x8888, { 0x75 });
        gbc.writeMem(0xd290, { 0x0 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x27ac, gbc.sp());
        EXPECT(0x8889, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x8888));
        EXPECT(0x90, gbc.readMem(0xd290));
        // 75 02C6
        gbc.setState(0xb05, 0xe482, 0x95a0, 0xa101, 0x5eff, 0xbb4f, 0x0, 0x0);
        gbc.writeMem(0xb05, { 0x75 });
        gbc.writeMem(0xbb4f, { 0x0 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xe482, gbc.sp());
        EXPECT(0xb06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4f, gbc.readMem(0xbb4f));
        // 75 02CB
        gbc.setState(0x9e89, 0xf101, 0x2ac0, 0xcf8b, 0xf884, 0xda29, 0x1, 0x0);
        gbc.writeMem(0x9e89, { 0x75 });
        gbc.writeMem(0xda29, { 0x0 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xf101, gbc.sp());
        EXPECT(0x9e8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x9e89));
        EXPECT(0x29, gbc.readMem(0xda29));
        // 75 02CF
        gbc.setState(0x1a7c, 0x7008, 0x61e0, 0xfc87, 0x1d22, 0xeebc, 0x0, 0x0);
        gbc.writeMem(0x1a7c, { 0x75 });
        gbc.writeMem(0xeebc, { 0x0 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x7008, gbc.sp());
        EXPECT(0x1a7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xeebc));
        // 75 02D2
        gbc.setState(0x8fa6, 0xab70, 0xbd50, 0x2850, 0xd99e, 0xf013, 0x0, 0x0);
        gbc.writeMem(0x8fa6, { 0x75 });
        gbc.writeMem(0xf013, { 0x0 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xab70, gbc.sp());
        EXPECT(0x8fa7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x8fa6));
        EXPECT(0x13, gbc.readMem(0xf013));
        // 75 02D3
        gbc.setState(0x3a90, 0x3c9a, 0xa220, 0x4184, 0x9e9f, 0xc022, 0x0, 0x1);
        gbc.writeMem(0x3a90, { 0x75 });
        gbc.writeMem(0xc022, { 0x0 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x3c9a, gbc.sp());
        EXPECT(0x3a91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xc022));
        // 75 02D6
        gbc.setState(0x2358, 0xacd0, 0x9c90, 0x6f1b, 0x5547, 0xbf18, 0x0, 0x0);
        gbc.writeMem(0x2358, { 0x75 });
        gbc.writeMem(0xbf18, { 0x0 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xacd0, gbc.sp());
        EXPECT(0x2359, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0xbf18));
        // 75 02D9
        gbc.setState(0x9d8a, 0x25c8, 0xb250, 0x49bd, 0x3fd3, 0x8f00, 0x0, 0x1);
        gbc.writeMem(0x8f00, { 0x0 });
        gbc.writeMem(0x9d8a, { 0x75 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x25c8, gbc.sp());
        EXPECT(0x9d8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x8f00));
        EXPECT(0x75, gbc.readMem(0x9d8a));
        // 75 02DF
        gbc.setState(0x62af, 0xe5ad, 0x81f0, 0xc473, 0x5e8, 0x8cd6, 0x0, 0x1);
        gbc.writeMem(0x62af, { 0x75 });
        gbc.writeMem(0x8cd6, { 0x0 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xe5ad, gbc.sp());
        EXPECT(0x62b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x8cd6));
        // 75 02E4
        gbc.setState(0x7cca, 0x526d, 0x7520, 0x6490, 0x2a0a, 0xd4e5, 0x1, 0x1);
        gbc.writeMem(0x7cca, { 0x75 });
        gbc.writeMem(0xd4e5, { 0x0 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x526d, gbc.sp());
        EXPECT(0x7ccb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xd4e5));
        // 75 02E8
        gbc.setState(0x6a51, 0xb4e4, 0xec90, 0x11d6, 0x27eb, 0xc596, 0x1, 0x0);
        gbc.writeMem(0x6a51, { 0x75 });
        gbc.writeMem(0xc596, { 0x0 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xb4e4, gbc.sp());
        EXPECT(0x6a52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0xc596));
        // 75 02EA
        gbc.setState(0xbc72, 0x8299, 0x41a0, 0x135f, 0x1865, 0xdcb4, 0x0, 0x1);
        gbc.writeMem(0xbc72, { 0x75 });
        gbc.writeMem(0xdcb4, { 0x0 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x8299, gbc.sp());
        EXPECT(0xbc73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xbc72));
        EXPECT(0xb4, gbc.readMem(0xdcb4));
        // 75 02EB
        gbc.setState(0x65ca, 0x54eb, 0x7ce0, 0xa2f2, 0xc297, 0xdf9e, 0x0, 0x1);
        gbc.writeMem(0x65ca, { 0x75 });
        gbc.writeMem(0xdf9e, { 0x0 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x54eb, gbc.sp());
        EXPECT(0x65cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xdf9e));
        // 75 02EF
        gbc.setState(0xa279, 0x78b7, 0xd7a0, 0xba18, 0xe1f7, 0xa34f, 0x0, 0x1);
        gbc.writeMem(0xa279, { 0x75 });
        gbc.writeMem(0xa34f, { 0x0 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x78b7, gbc.sp());
        EXPECT(0xa27a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xa279));
        EXPECT(0x4f, gbc.readMem(0xa34f));
        // 75 02F1
        gbc.setState(0xe1e, 0x1583, 0xbac0, 0x5334, 0x40a2, 0xb019, 0x1, 0x1);
        gbc.writeMem(0xe1e, { 0x75 });
        gbc.writeMem(0xb019, { 0x0 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x1583, gbc.sp());
        EXPECT(0xe1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xb019));
        // 75 02F5
        gbc.setState(0xc23f, 0xb390, 0x5e0, 0xca0e, 0xc6ba, 0x97a9, 0x1, 0x1);
        gbc.writeMem(0x97a9, { 0x0 });
        gbc.writeMem(0xc23f, { 0x75 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xb390, gbc.sp());
        EXPECT(0xc240, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa9, gbc.readMem(0x97a9));
        EXPECT(0x75, gbc.readMem(0xc23f));
        // 75 02F7
        gbc.setState(0x9d72, 0xe09f, 0x1f20, 0xb6c6, 0x49fe, 0xcc2d, 0x1, 0x1);
        gbc.writeMem(0x9d72, { 0x75 });
        gbc.writeMem(0xcc2d, { 0x0 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xe09f, gbc.sp());
        EXPECT(0x9d73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x9d72));
        EXPECT(0x2d, gbc.readMem(0xcc2d));
        // 75 02FB
        gbc.setState(0xbc57, 0x242f, 0x1730, 0xf106, 0x8098, 0xa92e, 0x0, 0x0);
        gbc.writeMem(0xa92e, { 0x0 });
        gbc.writeMem(0xbc57, { 0x75 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x242f, gbc.sp());
        EXPECT(0xbc58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xa92e));
        EXPECT(0x75, gbc.readMem(0xbc57));
        // 75 02FE
        gbc.setState(0x62c2, 0x3286, 0x7e00, 0x7af7, 0x3ce4, 0xff95, 0x0, 0x1);
        gbc.writeMem(0x62c2, { 0x75 });
        gbc.writeMem(0xff95, { 0x0 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x3286, gbc.sp());
        EXPECT(0x62c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xff95));
        // 75 02FF
        gbc.setState(0x27de, 0x4692, 0x4c90, 0x6832, 0xc045, 0xf5c3, 0x0, 0x0);
        gbc.writeMem(0x27de, { 0x75 });
        gbc.writeMem(0xf5c3, { 0x0 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x4692, gbc.sp());
        EXPECT(0x27df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xf5c3));
        // 75 0300
        gbc.setState(0xd6b2, 0x17d5, 0x1ff0, 0xb334, 0xa0f7, 0x8923, 0x1, 0x0);
        gbc.writeMem(0x8923, { 0x0 });
        gbc.writeMem(0xd6b2, { 0x75 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x17d5, gbc.sp());
        EXPECT(0xd6b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x23, gbc.readMem(0x8923));
        EXPECT(0x75, gbc.readMem(0xd6b2));
        // 75 0302
        gbc.setState(0x9062, 0xd1dc, 0x2bb0, 0x84ba, 0xd2f5, 0xe774, 0x1, 0x1);
        gbc.writeMem(0x9062, { 0x75 });
        gbc.writeMem(0xe774, { 0x0 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xd1dc, gbc.sp());
        EXPECT(0x9063, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x9062));
        EXPECT(0x74, gbc.readMem(0xe774));
        // 75 0303
        gbc.setState(0xeb79, 0xd10f, 0x30e0, 0xd60e, 0x5a97, 0xbd9b, 0x1, 0x0);
        gbc.writeMem(0xbd9b, { 0x0 });
        gbc.writeMem(0xeb79, { 0x75 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xd10f, gbc.sp());
        EXPECT(0xeb7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xbd9b));
        EXPECT(0x75, gbc.readMem(0xeb79));
        // 75 0304
        gbc.setState(0x93ce, 0x5248, 0xba70, 0x662f, 0x21c7, 0xfb12, 0x0, 0x0);
        gbc.writeMem(0x93ce, { 0x75 });
        gbc.writeMem(0xfb12, { 0x0 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x5248, gbc.sp());
        EXPECT(0x93cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x93ce));
        EXPECT(0x12, gbc.readMem(0xfb12));
        // 75 0306
        gbc.setState(0x2431, 0x5fd6, 0x130, 0xdbce, 0x7c5c, 0xc00, 0x1, 0x0);
        gbc.writeMem(0xc00, { 0x0 });
        gbc.writeMem(0x2431, { 0x75 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x5fd6, gbc.sp());
        EXPECT(0x2432, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 75 0308
        gbc.setState(0xaaa4, 0xfa51, 0xbee0, 0x7d82, 0xa774, 0x9515, 0x1, 0x0);
        gbc.writeMem(0x9515, { 0x0 });
        gbc.writeMem(0xaaa4, { 0x75 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xfa51, gbc.sp());
        EXPECT(0xaaa5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x9515));
        EXPECT(0x75, gbc.readMem(0xaaa4));
        // 75 030A
        gbc.setState(0x5493, 0xf2bc, 0x77f0, 0xeab2, 0x8734, 0xdc49, 0x0, 0x1);
        gbc.writeMem(0x5493, { 0x75 });
        gbc.writeMem(0xdc49, { 0x0 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xf2bc, gbc.sp());
        EXPECT(0x5494, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xdc49));
        // 75 030B
        gbc.setState(0x1868, 0xf851, 0xb180, 0x8e80, 0x42a1, 0xeca4, 0x1, 0x0);
        gbc.writeMem(0x1868, { 0x75 });
        gbc.writeMem(0xeca4, { 0x0 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xf851, gbc.sp());
        EXPECT(0x1869, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xeca4));
        // 75 030D
        gbc.setState(0xdfb1, 0x2709, 0xbaf0, 0xc9f3, 0x4c89, 0x881d, 0x0, 0x1);
        gbc.writeMem(0x881d, { 0x0 });
        gbc.writeMem(0xdfb1, { 0x75 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x2709, gbc.sp());
        EXPECT(0xdfb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x881d));
        EXPECT(0x75, gbc.readMem(0xdfb1));
        // 75 030E
        gbc.setState(0xcd41, 0x6a4c, 0x7a20, 0x6f98, 0xcbbd, 0xf703, 0x0, 0x1);
        gbc.writeMem(0xcd41, { 0x75 });
        gbc.writeMem(0xf703, { 0x0 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x6a4c, gbc.sp());
        EXPECT(0xcd42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xcd41));
        EXPECT(0x3, gbc.readMem(0xf703));
        // 75 030F
        gbc.setState(0xbbde, 0x192, 0xf780, 0x7a5b, 0xe44b, 0xb757, 0x0, 0x0);
        gbc.writeMem(0xb757, { 0x0 });
        gbc.writeMem(0xbbde, { 0x75 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x192, gbc.sp());
        EXPECT(0xbbdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xb757));
        EXPECT(0x75, gbc.readMem(0xbbde));
        // 75 0311
        gbc.setState(0xa065, 0xa418, 0x730, 0x4a37, 0x80cf, 0xc88e, 0x1, 0x1);
        gbc.writeMem(0xa065, { 0x75 });
        gbc.writeMem(0xc88e, { 0x0 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xa418, gbc.sp());
        EXPECT(0xa066, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xa065));
        EXPECT(0x8e, gbc.readMem(0xc88e));
        // 75 0313
        gbc.setState(0x5908, 0x756a, 0x2610, 0x2f43, 0xf169, 0x88ea, 0x0, 0x0);
        gbc.writeMem(0x5908, { 0x75 });
        gbc.writeMem(0x88ea, { 0x0 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x756a, gbc.sp());
        EXPECT(0x5909, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0x88ea));
        // 75 0314
        gbc.setState(0xeb67, 0xe11e, 0x7600, 0xbe65, 0xdf7f, 0xcee2, 0x0, 0x1);
        gbc.writeMem(0xcee2, { 0x0 });
        gbc.writeMem(0xeb67, { 0x75 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xe11e, gbc.sp());
        EXPECT(0xeb68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xcee2));
        EXPECT(0x75, gbc.readMem(0xeb67));
        // 75 0318
        gbc.setState(0xe2c6, 0x6972, 0x3730, 0xa86a, 0xe1ba, 0xaf23, 0x0, 0x1);
        gbc.writeMem(0xaf23, { 0x0 });
        gbc.writeMem(0xe2c6, { 0x75 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x6972, gbc.sp());
        EXPECT(0xe2c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x23, gbc.readMem(0xaf23));
        EXPECT(0x75, gbc.readMem(0xe2c6));
        // 75 0319
        gbc.setState(0xeb34, 0x6d65, 0xc200, 0x8f61, 0x635f, 0xc364, 0x1, 0x1);
        gbc.writeMem(0xc364, { 0x0 });
        gbc.writeMem(0xeb34, { 0x75 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x6d65, gbc.sp());
        EXPECT(0xeb35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xc364));
        EXPECT(0x75, gbc.readMem(0xeb34));
        // 75 031A
        gbc.setState(0xd797, 0x496d, 0x3ee0, 0x936c, 0x6564, 0xc98d, 0x1, 0x1);
        gbc.writeMem(0xc98d, { 0x0 });
        gbc.writeMem(0xd797, { 0x75 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x496d, gbc.sp());
        EXPECT(0xd798, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xc98d));
        EXPECT(0x75, gbc.readMem(0xd797));
        // 75 031E
        gbc.setState(0xb33d, 0xf12a, 0xa660, 0x64b0, 0x1b5e, 0xbcdc, 0x1, 0x1);
        gbc.writeMem(0xb33d, { 0x75 });
        gbc.writeMem(0xbcdc, { 0x0 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xf12a, gbc.sp());
        EXPECT(0xb33e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xb33d));
        EXPECT(0xdc, gbc.readMem(0xbcdc));
        // 75 0320
        gbc.setState(0x48b1, 0x129a, 0xf610, 0x30e3, 0xdc15, 0xeecb, 0x0, 0x0);
        gbc.writeMem(0x48b1, { 0x75 });
        gbc.writeMem(0xeecb, { 0x0 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x129a, gbc.sp());
        EXPECT(0x48b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeecb));
        // 75 0322
        gbc.setState(0x7e60, 0x3da7, 0xe0b0, 0x74bd, 0x5ce, 0x99a3, 0x0, 0x1);
        gbc.writeMem(0x7e60, { 0x75 });
        gbc.writeMem(0x99a3, { 0x0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x3da7, gbc.sp());
        EXPECT(0x7e61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x99a3));
        // 75 0324
        gbc.setState(0x5f45, 0x5fc3, 0x9310, 0x89e1, 0x4b75, 0xfef5, 0x1, 0x0);
        gbc.writeMem(0x5f45, { 0x75 });
        gbc.writeMem(0xfef5, { 0x0 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x5fc3, gbc.sp());
        EXPECT(0x5f46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xfef5));
        // 75 0326
        gbc.setState(0xa12f, 0x95a4, 0xa0b0, 0x4d90, 0x36af, 0xfca4, 0x1, 0x1);
        gbc.writeMem(0xa12f, { 0x75 });
        gbc.writeMem(0xfca4, { 0x0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x95a4, gbc.sp());
        EXPECT(0xa130, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xa12f));
        EXPECT(0xa4, gbc.readMem(0xfca4));
        // 75 0327
        gbc.setState(0x26ae, 0xf574, 0xb950, 0x922a, 0x78c5, 0xc770, 0x0, 0x1);
        gbc.writeMem(0x26ae, { 0x75 });
        gbc.writeMem(0xc770, { 0x0 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xf574, gbc.sp());
        EXPECT(0x26af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0xc770));
        // 75 0329
        gbc.setState(0xb38f, 0x3b88, 0x64c0, 0xc913, 0x3e63, 0xf6a6, 0x0, 0x1);
        gbc.writeMem(0xb38f, { 0x75 });
        gbc.writeMem(0xf6a6, { 0x0 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x3b88, gbc.sp());
        EXPECT(0xb390, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xb38f));
        EXPECT(0xa6, gbc.readMem(0xf6a6));
        // 75 032A
        gbc.setState(0x546f, 0xc51e, 0xe0a0, 0x2425, 0x3112, 0xdf8a, 0x0, 0x0);
        gbc.writeMem(0x546f, { 0x75 });
        gbc.writeMem(0xdf8a, { 0x0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xc51e, gbc.sp());
        EXPECT(0x5470, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xdf8a));
        // 75 032B
        gbc.setState(0x5d4c, 0x23c9, 0xe0c0, 0x6e2a, 0x9590, 0xb019, 0x1, 0x0);
        gbc.writeMem(0x5d4c, { 0x75 });
        gbc.writeMem(0xb019, { 0x0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x23c9, gbc.sp());
        EXPECT(0x5d4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xb019));
        // 75 032D
        gbc.setState(0x1f90, 0x5a7, 0x7ab0, 0x1db6, 0x7375, 0xef44, 0x0, 0x1);
        gbc.writeMem(0x1f90, { 0x75 });
        gbc.writeMem(0xef44, { 0x0 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x5a7, gbc.sp());
        EXPECT(0x1f91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xef44));
        // 75 032F
        gbc.setState(0x786, 0x9c3d, 0xc440, 0x7a3d, 0x5f8c, 0xa453, 0x1, 0x0);
        gbc.writeMem(0x786, { 0x75 });
        gbc.writeMem(0xa453, { 0x0 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x9c3d, gbc.sp());
        EXPECT(0x787, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xa453));
        // 75 0332
        gbc.setState(0x5d6c, 0xd9b2, 0x2ea0, 0x19eb, 0xabe8, 0xfa3a, 0x0, 0x0);
        gbc.writeMem(0x5d6c, { 0x75 });
        gbc.writeMem(0xfa3a, { 0x0 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xd9b2, gbc.sp());
        EXPECT(0x5d6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3a, gbc.readMem(0xfa3a));
        // 75 0337
        gbc.setState(0xcc9a, 0x7de8, 0x4610, 0x9140, 0x6cf0, 0xfe31, 0x1, 0x1);
        gbc.writeMem(0xcc9a, { 0x75 });
        gbc.writeMem(0xfe31, { 0x0 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x7de8, gbc.sp());
        EXPECT(0xcc9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xcc9a));
        EXPECT(0x31, gbc.readMem(0xfe31));
        // 75 0339
        gbc.setState(0x1d3b, 0x1249, 0xb2e0, 0x9ca9, 0xdd9b, 0xc4b8, 0x1, 0x1);
        gbc.writeMem(0x1d3b, { 0x75 });
        gbc.writeMem(0xc4b8, { 0x0 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x1249, gbc.sp());
        EXPECT(0x1d3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0xc4b8));
        // 75 033A
        gbc.setState(0x94d4, 0xa712, 0xddd0, 0xfd07, 0xa77f, 0xca7b, 0x0, 0x1);
        gbc.writeMem(0x94d4, { 0x75 });
        gbc.writeMem(0xca7b, { 0x0 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xa712, gbc.sp());
        EXPECT(0x94d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x94d4));
        EXPECT(0x7b, gbc.readMem(0xca7b));
        // 75 033D
        gbc.setState(0x97d4, 0xf1df, 0xae50, 0x8018, 0x8496, 0x9d79, 0x0, 0x0);
        gbc.writeMem(0x97d4, { 0x75 });
        gbc.writeMem(0x9d79, { 0x0 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xf1df, gbc.sp());
        EXPECT(0x97d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x97d4));
        EXPECT(0x79, gbc.readMem(0x9d79));
        // 75 033E
        gbc.setState(0x9313, 0x284a, 0x19a0, 0x5f47, 0xe137, 0x8c77, 0x1, 0x0);
        gbc.writeMem(0x8c77, { 0x0 });
        gbc.writeMem(0x9313, { 0x75 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x284a, gbc.sp());
        EXPECT(0x9314, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x8c77));
        EXPECT(0x75, gbc.readMem(0x9313));
        // 75 0341
        gbc.setState(0x8fd0, 0x41e2, 0x5fc0, 0xc61, 0x4f0b, 0x9da9, 0x1, 0x1);
        gbc.writeMem(0x8fd0, { 0x75 });
        gbc.writeMem(0x9da9, { 0x0 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x41e2, gbc.sp());
        EXPECT(0x8fd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x8fd0));
        EXPECT(0xa9, gbc.readMem(0x9da9));
        // 75 034A
        gbc.setState(0x527, 0x63fb, 0x22e0, 0x49cf, 0x5d0, 0xfe2c, 0x0, 0x0);
        gbc.writeMem(0x527, { 0x75 });
        gbc.writeMem(0xfe2c, { 0x0 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x63fb, gbc.sp());
        EXPECT(0x528, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xfe2c));
        // 75 034C
        gbc.setState(0x2ab5, 0xbc3b, 0xa2a0, 0x27df, 0x528e, 0xa8bb, 0x1, 0x0);
        gbc.writeMem(0x2ab5, { 0x75 });
        gbc.writeMem(0xa8bb, { 0x0 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xbc3b, gbc.sp());
        EXPECT(0x2ab6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xa8bb));
        // 75 0350
        gbc.setState(0x9bc6, 0x8352, 0xe570, 0xe093, 0x3b3f, 0xe07c, 0x0, 0x1);
        gbc.writeMem(0x9bc6, { 0x75 });
        gbc.writeMem(0xe07c, { 0x0 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x8352, gbc.sp());
        EXPECT(0x9bc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x9bc6));
        EXPECT(0x7c, gbc.readMem(0xe07c));
        // 75 0351
        gbc.setState(0x7d08, 0x2a73, 0xa550, 0xd2c4, 0x8a35, 0xcf10, 0x0, 0x0);
        gbc.writeMem(0x7d08, { 0x75 });
        gbc.writeMem(0xcf10, { 0x0 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x2a73, gbc.sp());
        EXPECT(0x7d09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xcf10));
        // 75 0354
        gbc.setState(0x4899, 0xf828, 0xa9f0, 0xaa59, 0xfe1a, 0x85fd, 0x0, 0x1);
        gbc.writeMem(0x4899, { 0x75 });
        gbc.writeMem(0x85fd, { 0x0 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xf828, gbc.sp());
        EXPECT(0x489a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0x85fd));
        // 75 0355
        gbc.setState(0x4b9d, 0x406, 0xa2e0, 0xf608, 0x9cc9, 0x864f, 0x1, 0x1);
        gbc.writeMem(0x4b9d, { 0x75 });
        gbc.writeMem(0x864f, { 0x0 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x406, gbc.sp());
        EXPECT(0x4b9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4f, gbc.readMem(0x864f));
        // 75 0358
        gbc.setState(0xa25b, 0x7b07, 0x27b0, 0xa6df, 0x9ad3, 0xa89e, 0x0, 0x1);
        gbc.writeMem(0xa25b, { 0x75 });
        gbc.writeMem(0xa89e, { 0x0 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x7b07, gbc.sp());
        EXPECT(0xa25c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xa25b));
        EXPECT(0x9e, gbc.readMem(0xa89e));
        // 75 0360
        gbc.setState(0xc558, 0x54aa, 0x4250, 0x5413, 0x5f24, 0x9f8a, 0x1, 0x0);
        gbc.writeMem(0x9f8a, { 0x0 });
        gbc.writeMem(0xc558, { 0x75 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x54aa, gbc.sp());
        EXPECT(0xc559, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x9f8a));
        EXPECT(0x75, gbc.readMem(0xc558));
        // 75 0362
        gbc.setState(0x2e84, 0x5e23, 0x3060, 0xe1e9, 0xfc7, 0x9b25, 0x1, 0x0);
        gbc.writeMem(0x2e84, { 0x75 });
        gbc.writeMem(0x9b25, { 0x0 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x5e23, gbc.sp());
        EXPECT(0x2e85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x9b25));
        // 75 0365
        gbc.setState(0xe83c, 0x664d, 0xd720, 0x9015, 0xa65c, 0x8096, 0x1, 0x0);
        gbc.writeMem(0x8096, { 0x0 });
        gbc.writeMem(0xe83c, { 0x75 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x664d, gbc.sp());
        EXPECT(0xe83d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0x8096));
        EXPECT(0x75, gbc.readMem(0xe83c));
        // 75 0367
        gbc.setState(0x4070, 0x7c25, 0xed20, 0x66bc, 0xd6bf, 0xa3df, 0x1, 0x1);
        gbc.writeMem(0x4070, { 0x75 });
        gbc.writeMem(0xa3df, { 0x0 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x7c25, gbc.sp());
        EXPECT(0x4071, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0xa3df));
        // 75 036A
        gbc.setState(0x16a7, 0x417f, 0x9f90, 0xcb3d, 0x7f2d, 0xfb58, 0x0, 0x0);
        gbc.writeMem(0x16a7, { 0x75 });
        gbc.writeMem(0xfb58, { 0x0 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x417f, gbc.sp());
        EXPECT(0x16a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xfb58));
        // 75 036D
        gbc.setState(0x1ea9, 0xd230, 0xd770, 0x9cc9, 0xcf2b, 0x84e6, 0x1, 0x0);
        gbc.writeMem(0x1ea9, { 0x75 });
        gbc.writeMem(0x84e6, { 0x0 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xd230, gbc.sp());
        EXPECT(0x1eaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x84e6));
        // 75 036F
        gbc.setState(0x29d, 0xec8a, 0x6d50, 0xc150, 0x6b3b, 0xa49c, 0x0, 0x1);
        gbc.writeMem(0x29d, { 0x75 });
        gbc.writeMem(0xa49c, { 0x0 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xec8a, gbc.sp());
        EXPECT(0x29e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xa49c));
        // 75 0375
        gbc.setState(0x8248, 0xfbc2, 0x4f20, 0x5746, 0xc109, 0xa497, 0x1, 0x1);
        gbc.writeMem(0x8248, { 0x75 });
        gbc.writeMem(0xa497, { 0x0 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xfbc2, gbc.sp());
        EXPECT(0x8249, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x8248));
        EXPECT(0x97, gbc.readMem(0xa497));
        // 75 0377
        gbc.setState(0x7cf1, 0x4e23, 0x14f0, 0xfad9, 0xa963, 0xc136, 0x0, 0x0);
        gbc.writeMem(0x7cf1, { 0x75 });
        gbc.writeMem(0xc136, { 0x0 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x4e23, gbc.sp());
        EXPECT(0x7cf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xc136));
        // 75 0378
        gbc.setState(0xd1cf, 0x3c64, 0xe990, 0x29ad, 0x8ea5, 0xd566, 0x1, 0x1);
        gbc.writeMem(0xd1cf, { 0x75 });
        gbc.writeMem(0xd566, { 0x0 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x3c64, gbc.sp());
        EXPECT(0xd1d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xd1cf));
        EXPECT(0x66, gbc.readMem(0xd566));
        // 75 0379
        gbc.setState(0x9962, 0x14fa, 0xe090, 0x4428, 0xd09d, 0xc62b, 0x0, 0x1);
        gbc.writeMem(0x9962, { 0x75 });
        gbc.writeMem(0xc62b, { 0x0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x14fa, gbc.sp());
        EXPECT(0x9963, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x9962));
        EXPECT(0x2b, gbc.readMem(0xc62b));
        // 75 037A
        gbc.setState(0x9551, 0x9e8a, 0x2b00, 0xf0fd, 0xd517, 0x9186, 0x0, 0x0);
        gbc.writeMem(0x9186, { 0x0 });
        gbc.writeMem(0x9551, { 0x75 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x9e8a, gbc.sp());
        EXPECT(0x9552, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x9186));
        EXPECT(0x75, gbc.readMem(0x9551));
        // 75 037B
        gbc.setState(0x215f, 0xd205, 0x8c30, 0xb690, 0x7b27, 0xe202, 0x1, 0x1);
        gbc.writeMem(0x215f, { 0x75 });
        gbc.writeMem(0xe202, { 0x0 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xd205, gbc.sp());
        EXPECT(0x2160, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0xe202));
        // 75 037E
        gbc.setState(0x5e34, 0xbadc, 0xb300, 0x2d49, 0x870f, 0xf12c, 0x0, 0x0);
        gbc.writeMem(0x5e34, { 0x75 });
        gbc.writeMem(0xf12c, { 0x0 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xbadc, gbc.sp());
        EXPECT(0x5e35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xf12c));
        // 75 0380
        gbc.setState(0x5648, 0xcaf3, 0x5e10, 0x843f, 0xd84d, 0xbbdb, 0x1, 0x0);
        gbc.writeMem(0x5648, { 0x75 });
        gbc.writeMem(0xbbdb, { 0x0 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xcaf3, gbc.sp());
        EXPECT(0x5649, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0xbbdb));
        // 75 0382
        gbc.setState(0xc13b, 0xbb0f, 0xada0, 0x5f46, 0xf1ac, 0xef44, 0x1, 0x0);
        gbc.writeMem(0xc13b, { 0x75 });
        gbc.writeMem(0xef44, { 0x0 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xbb0f, gbc.sp());
        EXPECT(0xc13c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xc13b));
        EXPECT(0x44, gbc.readMem(0xef44));
        // 75 0385
        gbc.setState(0xe497, 0x500f, 0xf1c0, 0xc040, 0xd965, 0xf03e, 0x0, 0x1);
        gbc.writeMem(0xe497, { 0x75 });
        gbc.writeMem(0xf03e, { 0x0 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x500f, gbc.sp());
        EXPECT(0xe498, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xe497));
        EXPECT(0x3e, gbc.readMem(0xf03e));
        // 75 0386
        gbc.setState(0x99a4, 0x18ef, 0x3e70, 0x21dc, 0x95b2, 0xb870, 0x1, 0x0);
        gbc.writeMem(0x99a4, { 0x75 });
        gbc.writeMem(0xb870, { 0x0 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x18ef, gbc.sp());
        EXPECT(0x99a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x99a4));
        EXPECT(0x70, gbc.readMem(0xb870));
        // 75 0389
        gbc.setState(0x664f, 0x2cf1, 0xc510, 0x8efe, 0x459f, 0xc5be, 0x0, 0x1);
        gbc.writeMem(0x664f, { 0x75 });
        gbc.writeMem(0xc5be, { 0x0 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x2cf1, gbc.sp());
        EXPECT(0x6650, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0xc5be));
        // 75 038A
        gbc.setState(0x4443, 0x71d4, 0x8de0, 0x5b98, 0xcf2f, 0xee99, 0x1, 0x0);
        gbc.writeMem(0x4443, { 0x75 });
        gbc.writeMem(0xee99, { 0x0 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x71d4, gbc.sp());
        EXPECT(0x4444, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xee99));
        // 75 038C
        gbc.setState(0x8d45, 0x5186, 0x2fd0, 0x8aed, 0x412c, 0xe387, 0x0, 0x0);
        gbc.writeMem(0x8d45, { 0x75 });
        gbc.writeMem(0xe387, { 0x0 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x5186, gbc.sp());
        EXPECT(0x8d46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x8d45));
        EXPECT(0x87, gbc.readMem(0xe387));
        // 75 038D
        gbc.setState(0x27f3, 0x662c, 0x6cc0, 0x9702, 0x648a, 0x8e64, 0x0, 0x1);
        gbc.writeMem(0x27f3, { 0x75 });
        gbc.writeMem(0x8e64, { 0x0 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x662c, gbc.sp());
        EXPECT(0x27f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x8e64));
        // 75 038E
        gbc.setState(0xc401, 0xf22a, 0x29b0, 0xed0e, 0x500e, 0xac25, 0x0, 0x1);
        gbc.writeMem(0xac25, { 0x0 });
        gbc.writeMem(0xc401, { 0x75 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xf22a, gbc.sp());
        EXPECT(0xc402, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xac25));
        EXPECT(0x75, gbc.readMem(0xc401));
        // 75 038F
        gbc.setState(0xb263, 0xb85, 0x2710, 0x6ae8, 0x9f5, 0x896a, 0x1, 0x1);
        gbc.writeMem(0x896a, { 0x0 });
        gbc.writeMem(0xb263, { 0x75 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xb85, gbc.sp());
        EXPECT(0xb264, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x896a));
        EXPECT(0x75, gbc.readMem(0xb263));
        // 75 0391
        gbc.setState(0x23bc, 0x4a25, 0xd3d0, 0xfe2d, 0xdc6f, 0xf220, 0x0, 0x1);
        gbc.writeMem(0x23bc, { 0x75 });
        gbc.writeMem(0xf220, { 0x0 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x4a25, gbc.sp());
        EXPECT(0x23bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xf220));
        // 75 0392
        gbc.setState(0x5b41, 0x4d08, 0xc2a0, 0xb2f3, 0x9d0b, 0xbfa4, 0x1, 0x0);
        gbc.writeMem(0x5b41, { 0x75 });
        gbc.writeMem(0xbfa4, { 0x0 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x4d08, gbc.sp());
        EXPECT(0x5b42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xbfa4));
        // 75 0394
        gbc.setState(0xae41, 0xa4f1, 0x1cf0, 0xd014, 0x160c, 0x8865, 0x1, 0x0);
        gbc.writeMem(0x8865, { 0x0 });
        gbc.writeMem(0xae41, { 0x75 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xa4f1, gbc.sp());
        EXPECT(0xae42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x8865));
        EXPECT(0x75, gbc.readMem(0xae41));
        // 75 0396
        gbc.setState(0xe6d3, 0xa519, 0xe9e0, 0x7b54, 0x2139, 0xe2b5, 0x0, 0x1);
        gbc.writeMem(0xe2b5, { 0x0 });
        gbc.writeMem(0xe6d3, { 0x75 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xa519, gbc.sp());
        EXPECT(0xe6d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xe2b5));
        EXPECT(0x75, gbc.readMem(0xe6d3));
        // 75 039C
        gbc.setState(0x4ba0, 0xdba5, 0xb8b0, 0x1524, 0x4f9d, 0xcd4f, 0x1, 0x1);
        gbc.writeMem(0x4ba0, { 0x75 });
        gbc.writeMem(0xcd4f, { 0x0 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xdba5, gbc.sp());
        EXPECT(0x4ba1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4f, gbc.readMem(0xcd4f));
        // 75 039F
        gbc.setState(0xb033, 0x9423, 0x1270, 0xd037, 0x4cbd, 0xb461, 0x1, 0x0);
        gbc.writeMem(0xb033, { 0x75 });
        gbc.writeMem(0xb461, { 0x0 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x9423, gbc.sp());
        EXPECT(0xb034, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xb033));
        EXPECT(0x61, gbc.readMem(0xb461));
        // 75 03A0
        gbc.setState(0xd4d2, 0x5757, 0x7b10, 0x2fd6, 0xf82d, 0x893a, 0x0, 0x0);
        gbc.writeMem(0x893a, { 0x0 });
        gbc.writeMem(0xd4d2, { 0x75 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x5757, gbc.sp());
        EXPECT(0xd4d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3a, gbc.readMem(0x893a));
        EXPECT(0x75, gbc.readMem(0xd4d2));
        // 75 03A6
        gbc.setState(0xd14f, 0x11c0, 0x5180, 0x41f6, 0x662c, 0xf31c, 0x0, 0x1);
        gbc.writeMem(0xd14f, { 0x75 });
        gbc.writeMem(0xf31c, { 0x0 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x11c0, gbc.sp());
        EXPECT(0xd150, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xd14f));
        EXPECT(0x1c, gbc.readMem(0xf31c));
        // 75 03A8
        gbc.setState(0xbfb8, 0xc820, 0x6a20, 0x8922, 0xd3dc, 0x8d8f, 0x1, 0x1);
        gbc.writeMem(0x8d8f, { 0x0 });
        gbc.writeMem(0xbfb8, { 0x75 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xc820, gbc.sp());
        EXPECT(0xbfb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x8d8f));
        EXPECT(0x75, gbc.readMem(0xbfb8));
        // 75 03AA
        gbc.setState(0x4f16, 0x12a7, 0x4e60, 0x2d13, 0x2cbc, 0xf1f5, 0x1, 0x1);
        gbc.writeMem(0x4f16, { 0x75 });
        gbc.writeMem(0xf1f5, { 0x0 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x12a7, gbc.sp());
        EXPECT(0x4f17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xf1f5));
        // 75 03AC
        gbc.setState(0x96a2, 0xb41, 0x68d0, 0xfebb, 0x987f, 0x902e, 0x1, 0x0);
        gbc.writeMem(0x902e, { 0x0 });
        gbc.writeMem(0x96a2, { 0x75 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xb41, gbc.sp());
        EXPECT(0x96a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x902e));
        EXPECT(0x75, gbc.readMem(0x96a2));
        // 75 03AE
        gbc.setState(0x5efa, 0x9599, 0xf830, 0x2545, 0x8d78, 0xa7b5, 0x0, 0x1);
        gbc.writeMem(0x5efa, { 0x75 });
        gbc.writeMem(0xa7b5, { 0x0 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x9599, gbc.sp());
        EXPECT(0x5efb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xa7b5));
        // 75 03AF
        gbc.setState(0x4fed, 0xb3dc, 0x5290, 0xc992, 0x488d, 0xc961, 0x1, 0x1);
        gbc.writeMem(0x4fed, { 0x75 });
        gbc.writeMem(0xc961, { 0x0 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xb3dc, gbc.sp());
        EXPECT(0x4fee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xc961));
        // 75 03B2
        gbc.setState(0xa850, 0x316b, 0x7440, 0x5a43, 0xef55, 0xa49a, 0x0, 0x1);
        gbc.writeMem(0xa49a, { 0x0 });
        gbc.writeMem(0xa850, { 0x75 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x316b, gbc.sp());
        EXPECT(0xa851, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xa49a));
        EXPECT(0x75, gbc.readMem(0xa850));
        // 75 03B4
        gbc.setState(0xab8a, 0x6217, 0x5200, 0xe55, 0x6b40, 0x92b5, 0x0, 0x0);
        gbc.writeMem(0x92b5, { 0x0 });
        gbc.writeMem(0xab8a, { 0x75 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x6217, gbc.sp());
        EXPECT(0xab8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x92b5));
        EXPECT(0x75, gbc.readMem(0xab8a));
        // 75 03B5
        gbc.setState(0xb1a5, 0x120f, 0xf410, 0x4601, 0x3478, 0xcb93, 0x0, 0x1);
        gbc.writeMem(0xb1a5, { 0x75 });
        gbc.writeMem(0xcb93, { 0x0 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x120f, gbc.sp());
        EXPECT(0xb1a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xb1a5));
        EXPECT(0x93, gbc.readMem(0xcb93));
        // 75 03B6
        gbc.setState(0x2953, 0x5e98, 0x4160, 0x11eb, 0x9f0, 0x8072, 0x0, 0x0);
        gbc.writeMem(0x2953, { 0x75 });
        gbc.writeMem(0x8072, { 0x0 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x5e98, gbc.sp());
        EXPECT(0x2954, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x8072));
        // 75 03B8
        gbc.setState(0x9981, 0x6b8b, 0xc460, 0x184e, 0xfbf5, 0xb677, 0x1, 0x1);
        gbc.writeMem(0x9981, { 0x75 });
        gbc.writeMem(0xb677, { 0x0 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x6b8b, gbc.sp());
        EXPECT(0x9982, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x9981));
        EXPECT(0x77, gbc.readMem(0xb677));
        // 75 03B9
        gbc.setState(0xe448, 0x41d8, 0xdb0, 0x4a2b, 0xc751, 0xd66a, 0x1, 0x1);
        gbc.writeMem(0xd66a, { 0x0 });
        gbc.writeMem(0xe448, { 0x75 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x41d8, gbc.sp());
        EXPECT(0xe449, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xd66a));
        EXPECT(0x75, gbc.readMem(0xe448));
        // 75 03BB
        gbc.setState(0x47b2, 0x805c, 0x4620, 0x6788, 0x7891, 0xe7a2, 0x0, 0x1);
        gbc.writeMem(0x47b2, { 0x75 });
        gbc.writeMem(0xe7a2, { 0x0 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x805c, gbc.sp());
        EXPECT(0x47b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xe7a2));
        // 75 03BF
        gbc.setState(0x5097, 0x6adf, 0x7360, 0x1aea, 0x39ad, 0xeff3, 0x1, 0x0);
        gbc.writeMem(0x5097, { 0x75 });
        gbc.writeMem(0xeff3, { 0x0 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x6adf, gbc.sp());
        EXPECT(0x5098, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0xeff3));
        // 75 03C1
        gbc.setState(0x35d3, 0x3f63, 0xc9e0, 0xeb7f, 0x3c41, 0xb75c, 0x1, 0x0);
        gbc.writeMem(0x35d3, { 0x75 });
        gbc.writeMem(0xb75c, { 0x0 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x3f63, gbc.sp());
        EXPECT(0x35d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0xb75c));
        // 75 03C2
        gbc.setState(0xbf9c, 0xd27c, 0xf740, 0xb15c, 0x5240, 0xfc8a, 0x1, 0x0);
        gbc.writeMem(0xbf9c, { 0x75 });
        gbc.writeMem(0xfc8a, { 0x0 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xd27c, gbc.sp());
        EXPECT(0xbf9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xbf9c));
        EXPECT(0x8a, gbc.readMem(0xfc8a));
        // 75 03C4
        gbc.setState(0xef8a, 0xe369, 0x3860, 0xdc27, 0x25c8, 0x943f, 0x1, 0x1);
        gbc.writeMem(0x943f, { 0x0 });
        gbc.writeMem(0xef8a, { 0x75 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xe369, gbc.sp());
        EXPECT(0xef8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x943f));
        EXPECT(0x75, gbc.readMem(0xef8a));
        // 75 03C6
        gbc.setState(0xde39, 0x6d3b, 0x6e0, 0xf324, 0x76cf, 0x8332, 0x0, 0x0);
        gbc.writeMem(0x8332, { 0x0 });
        gbc.writeMem(0xde39, { 0x75 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x6d3b, gbc.sp());
        EXPECT(0xde3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0x8332));
        EXPECT(0x75, gbc.readMem(0xde39));
        // 75 03C7
        gbc.setState(0xa60, 0x2b27, 0x25a0, 0x1158, 0xeb6b, 0x8134, 0x0, 0x0);
        gbc.writeMem(0xa60, { 0x75 });
        gbc.writeMem(0x8134, { 0x0 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x2b27, gbc.sp());
        EXPECT(0xa61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0x8134));
        // 75 03C8
        gbc.setState(0x4736, 0x87a9, 0xfbc0, 0xa8e0, 0x3f54, 0xcfee, 0x1, 0x0);
        gbc.writeMem(0x4736, { 0x75 });
        gbc.writeMem(0xcfee, { 0x0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x87a9, gbc.sp());
        EXPECT(0x4737, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0xcfee));
        // 75 03CD
        gbc.setState(0x27f4, 0x715a, 0x6ff0, 0x128c, 0xdb46, 0x87d4, 0x1, 0x1);
        gbc.writeMem(0x27f4, { 0x75 });
        gbc.writeMem(0x87d4, { 0x0 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x715a, gbc.sp());
        EXPECT(0x27f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x87d4));
        // 75 03CF
        gbc.setState(0xdd3, 0x546, 0xf8b0, 0x4929, 0xbdcf, 0xe56d, 0x0, 0x1);
        gbc.writeMem(0xdd3, { 0x75 });
        gbc.writeMem(0xe56d, { 0x0 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x546, gbc.sp());
        EXPECT(0xdd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xe56d));
        // 75 03D0
        gbc.setState(0x1150, 0x8684, 0xcf50, 0x5709, 0xf5ce, 0xb74f, 0x1, 0x1);
        gbc.writeMem(0x1150, { 0x75 });
        gbc.writeMem(0xb74f, { 0x0 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x8684, gbc.sp());
        EXPECT(0x1151, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4f, gbc.readMem(0xb74f));
        // 75 03D1
        gbc.setState(0xa397, 0x3287, 0x6370, 0xcdbe, 0xbd, 0xad6c, 0x1, 0x0);
        gbc.writeMem(0xa397, { 0x75 });
        gbc.writeMem(0xad6c, { 0x0 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x3287, gbc.sp());
        EXPECT(0xa398, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xa397));
        EXPECT(0x6c, gbc.readMem(0xad6c));
        // 75 03D5
        gbc.setState(0x2ebf, 0xbad2, 0xa6c0, 0xa8da, 0x2de1, 0xb201, 0x0, 0x1);
        gbc.writeMem(0x2ebf, { 0x75 });
        gbc.writeMem(0xb201, { 0x0 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xbad2, gbc.sp());
        EXPECT(0x2ec0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0xb201));
        // 75 03D7
        gbc.setState(0x4675, 0x8ea3, 0xad70, 0xd78e, 0xc46b, 0xfd98, 0x0, 0x0);
        gbc.writeMem(0x4675, { 0x75 });
        gbc.writeMem(0xfd98, { 0x0 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x8ea3, gbc.sp());
        EXPECT(0x4676, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xfd98));
        // 75 03D9
        gbc.setState(0xe9c1, 0xb42e, 0xf3e0, 0x185d, 0xd40b, 0x9b43, 0x1, 0x1);
        gbc.writeMem(0x9b43, { 0x0 });
        gbc.writeMem(0xe9c1, { 0x75 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xb42e, gbc.sp());
        EXPECT(0xe9c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x9b43));
        EXPECT(0x75, gbc.readMem(0xe9c1));
        // 75 03DA
        gbc.setState(0x3d33, 0x4610, 0xa140, 0xb690, 0x4a41, 0xe16f, 0x0, 0x0);
        gbc.writeMem(0x3d33, { 0x75 });
        gbc.writeMem(0xe16f, { 0x0 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x4610, gbc.sp());
        EXPECT(0x3d34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6f, gbc.readMem(0xe16f));
        // 75 03DB
        gbc.setState(0xc60, 0x8252, 0x7470, 0x3274, 0xf33d, 0xd24c, 0x1, 0x0);
        gbc.writeMem(0xc60, { 0x75 });
        gbc.writeMem(0xd24c, { 0x0 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x8252, gbc.sp());
        EXPECT(0xc61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xd24c));
        // 75 03DC
        gbc.setState(0xc7a5, 0xa5da, 0xc990, 0x234b, 0xd99e, 0xb67e, 0x1, 0x1);
        gbc.writeMem(0xb67e, { 0x0 });
        gbc.writeMem(0xc7a5, { 0x75 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xa5da, gbc.sp());
        EXPECT(0xc7a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xb67e));
        EXPECT(0x75, gbc.readMem(0xc7a5));
        // 75 03DE
        gbc.setState(0x1a62, 0x7dd, 0xcf70, 0x5de6, 0x17d3, 0xdef8, 0x0, 0x0);
        gbc.writeMem(0x1a62, { 0x75 });
        gbc.writeMem(0xdef8, { 0x0 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x7dd, gbc.sp());
        EXPECT(0x1a63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xdef8));
        // 75 03E4
        gbc.setState(0x483d, 0xabc3, 0xaeb0, 0xc67e, 0x90f2, 0xedbe, 0x0, 0x1);
        gbc.writeMem(0x483d, { 0x75 });
        gbc.writeMem(0xedbe, { 0x0 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xabc3, gbc.sp());
        EXPECT(0x483e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0xedbe));
        // 75 03E5
        gbc.setState(0x8ab9, 0x162d, 0x2110, 0x4918, 0xc5be, 0x9834, 0x1, 0x0);
        gbc.writeMem(0x8ab9, { 0x75 });
        gbc.writeMem(0x9834, { 0x0 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x162d, gbc.sp());
        EXPECT(0x8aba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x8ab9));
        EXPECT(0x34, gbc.readMem(0x9834));
    }
